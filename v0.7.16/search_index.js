var documenterSearchIndex = {"docs":
[{"location":"api/#Public-API","page":"API","title":"Public API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = Stheno","category":"page"},{"location":"api/#GPPP","page":"API","title":"GPPP","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Core functionality for working with GPPPs.","category":"page"},{"location":"api/","page":"API","title":"API","text":"@gppp\nGPPPInput\nBlockData\nsplit","category":"page"},{"location":"api/#Stheno.@gppp","page":"API","title":"Stheno.@gppp","text":"@gppp(model_expression)\n\nConstruct a GaussianProcessProbabilisticProgramme (GPPP) from a code snippet.\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx_local = randn(5)\n\nx = BlockData(GPPPInput(:f1, x_local), GPPPInput(:f2, x_local), GPPPInput(:f3, x_local))\n\ny = rand(f(x, 1e-12))\n\nf1, f2, f3 = split(x, y)\n\nisapprox(f1 + f2, f3; rtol=1e-4)\n\n# output\n\ntrue\n\n\n\n\n\n","category":"macro"},{"location":"api/#Stheno.GPPPInput","page":"API","title":"Stheno.GPPPInput","text":"GPPPInput(p, x::AbstractVector)\n\nAn collection of inputs for a GPPP. p indicates which process the vector x should be extracted from. The required type of p is determined by the type of the keys in the GPPP indexed.\n\njulia> x = [1.0, 1.5, 0.3];\n\njulia> v = GPPPInput(:a, x)\n3-element GPPPInput{Symbol, Float64, Vector{Float64}}:\n (:a, 1.0)\n (:a, 1.5)\n (:a, 0.3)\n\njulia> v isa AbstractVector{Tuple{Symbol, Float64}}\ntrue\n\njulia> v == map(x_ -> (:a, x_), x)\ntrue\n\n\n\n\n\n","category":"type"},{"location":"api/#Stheno.BlockData","page":"API","title":"Stheno.BlockData","text":"BlockData{T, TV<:AbstractVector{T}, TX<:AbstractVector{TV}} <: AbstractVector{T}\n\nA strictly ordered collection of AbstractVectors, representing a ragged array of data.\n\nVery useful when working with GPPPs. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\n# Specify a `BlockData` set that can be used to index into\n# the `f2` and `f3` processes in `f`.\nx = BlockData(\n    GPPPInput(:f2, randn(4)),\n    GPPPINput(:f3, randn(3)),\n)\n\n# Index into `f` at the input.\nf(x)\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.split","page":"API","title":"Base.split","text":"Base.split(x::BlockData, Y::AbstractVecOrMat)\n\nConvenience functionality to make working with the output of operations on GPPPs easier. Splits up the rows of Y according to the sizes of the data in x.\n\njulia> Y = vcat(randn(5, 3), randn(4, 3));\n\njulia> x = BlockData(randn(5), randn(4));\n\njulia> Y1, Y2 = split(x, Y);\n\njulia> Y1 == Y[1:5, :]\ntrue\n\njulia> Y2 == Y[6:end, :]\ntrue\n\nWorks with any BlockData, so blocks can e.g. be GPPPInputs. This is particularly helpful for working with the output from rand and marginals from a GPPP indexed at BlockData. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = BlockData(GPPPInput(:f2, randn(3)), GPPPInput(:f3, randn(4)))\ny = rand(f(x))\ny2, y3 = split(x, y)\n\nFunctionality also works with any AbstractVector.\n\n\n\n\n\n","category":"function"},{"location":"api/#Building-GPPPs","page":"API","title":"Building GPPPs","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"If in doubt about what any of these transformations can do, play around with them!","category":"page"},{"location":"api/","page":"API","title":"API","text":"+\n*\nstretch\nperiodic\nshift\nselect","category":"page"},{"location":"api/#Base.:+","page":"API","title":"Base.:+","text":"+(fa::AbstractGP, fb::AbstractGP)\n\nProduces an AbstractGP f satisfying f(x) = fa(x) + fb(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.:*","page":"API","title":"Base.:*","text":"*(f, g::AbstractGP)\n\nProduce an AbstractGP h satisfying to h(x) = f(x) * g(x), for some deterministic function f.\n\nIf f isa Real, then h(x) = f * g(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.stretch","page":"API","title":"Stheno.stretch","text":"stretch(f::AbstractGP, l::Union{AbstractVecOrMat{<:Real}, Real})\n\nThis is the primary mechanism by which to introduce length scales to your programme.\n\nIf l isa Real or l isa AbstractMatrix{<:Real}, stretch(f, l)(x) == f(l * x) for any input x. In the l isa Real case, this is equivalent to scaling the length scale by 1 / l.\n\nl isa AbstractVector{<:Real} is equivalent to stretch(f, Diagonal(l)).\n\nEquivalent to f ∘ Stretch(l).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.periodic","page":"API","title":"Stheno.periodic","text":"periodic(g::AbstractGP, f::Real)\n\nProduce an AbstractGP with period f.\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.shift","page":"API","title":"Stheno.shift","text":"shift(f::AbstractGP, a::Real)\nshift(f::AbstractGP, a::AbstractVector{<:Real})\n\nReturns the GP g given by g(x) = f(x - a)\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.select","page":"API","title":"Stheno.select","text":"select(f::AbstractGP, idx)\n\nSelect the dimensions of the input to f given by idx.\n\n\n\n\n\n","category":"function"},{"location":"input_types/#Input-Types","page":"Input Types","title":"Input Types","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Stheno enables the user to handle any type of input domain they wish and provides a common API that users must implement when considering a new way of representing input data to ensure that the package knows how to handle them appropriately.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"This interface has now been adopted throughout the JuliaGaussianProcesses ecosystem.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Discussed below is this interface's core assumptions, a detailed account of a couple of important concrete input types.","category":"page"},{"location":"input_types/#The-Central-Assumption","page":"Input Types","title":"The Central Assumption","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"The central assumption made in all user-facing and internal functions is this: when a collection of inputs are required, they subtype AbstractVector. For example, x isa AbstractVector when indexing into a GP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f(x, σ²)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"or computing the covariance matrix associated with a kernel:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"kernelmatrix(SqExponentialKernel(), x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When computing the cross-covariance matrix between two GPs","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"cov(f, g, x_f, x_g)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_f and x_g must be AbstractVectors. All other operations involving collections of inputs have the same restrictions. Always AbstractVectors.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"For example, this means that when handling multi-dimensional inputs stored in a Matrix they must be wrapped so that the package knows to treat them as a vector — more on this in below in D-dimensional Euclidean Spaces.","category":"page"},{"location":"input_types/#Dimensional-Euclidean-Space","page":"Input Types","title":"1-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When constructing a GP whose domain is the real-line, for example when using a GP to solve some kind of time-series problem, it is sufficient to work with Vector{<:Real}s of inputs. As such, the following is completely valid:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"using Stheno: GPC\nf = wrap(GP(SqExponentialKernel()), GPC())\nx = randn(10)\nf(x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"It is also possible to work with other AbstractArrays that represent a vector of 1-dimensional points, e.g.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = range(-5.0, 5.0; length=100)\nf(x)","category":"page"},{"location":"input_types/#D-Dimensional-Euclidean-Space","page":"Input Types","title":"D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Many applications of interest involve more than a single input-dimension, such as spatio-temporal modeling or Machine Learning tasks. For these cases, we provide ColVecs <: AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"X_data = randn(5, 100)\nX = ColVecs(X_data)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"tells Stheno that it should treat each column of X_data as a vector-valued input. Phrased differently, X is an AbstractVector{T} where T <: Vector{<:Real}, which stores its elements in memory as a dense matrix. This approach has the advantage of making it completely explicit how Stheno treats a matrix of data, and also simplifies quite a bit of the internal machinery, as all vectors of inputs can be assumed to be a subtype of AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If, on the other hand, each row of X_data corresponds to a vector-valued input, use RowVecs(X_data).","category":"page"},{"location":"input_types/#Structure-in-D-Dimensional-Euclidean-Space","page":"Input Types","title":"Structure in D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Consider a rectilinear grid of points in D-dimensional Euclidean space. Such grids of points can be represented in a more memory-efficient manner than can arbitrarily locate sets of points. Moreover, this structure can be exploited to accelerate inference for certain types of problems dramatically. Other such examples exist e.g., uniform grids in N-dimensions, and can be exploited to more efficiently represent input data and to accelerate inference.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Work to exploit these kinds of structures is on-going at the time of writing and will be documented before merging.","category":"page"},{"location":"input_types/#GPPPInput-and-BlockData","page":"Input Types","title":"GPPPInput and BlockData","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"A GPPPInput is a special kind of AbstractVector, specifically designed for GPPPs. Given a GPPP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"a GPPPInput like","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_ = randn(5)\nx = GPPPInput(:f3, x_)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"applied to f","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"fx = f(x, 0.1)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"constructs a FiniteGP comprising f3 at x_. GPPPInput(:f2, x_) and GPPPInput(:f1, x_) are the analogues for f1 and f2.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If you wish to refer to multiple processes in f at the same time, use a BlockData. For example","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = BlockData(GPPPInput(:f2, x_), GPPPInput(:f3, x_))","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"would pull out a 10-dimensional FiniteGP, the first 5 dimensions being f2 at x_, the last 5 dimensions being f3 at x_.","category":"page"},{"location":"kernel_design/#Kernel-Design","page":"Kernel Design","title":"Kernel Design","text":"","category":"section"},{"location":"kernel_design/","page":"Kernel Design","title":"Kernel Design","text":"Please refer to KernelFunctions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"EditURL = \"https://github.com/JuliaGaussianProcesses/Stheno.jl/blob/master/examples/getting_started/script.jl\"","category":"page"},{"location":"examples/getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Here we document how to do some basic stuff, including learning and inference in kernel parameters, with Stheno.jl. To do this, we that makes use of a variety of packages from the Julia ecosystem. In particular, we'll make use of","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl to perform Bayesian inference in our model parameters,\nOptim.jl for point-estimates of our model parameters,\nParameterHandling.jl to make it easy to work with our model's parameters, and to ensure that it plays nicely with Optim and AdvancedHMC,\nZygote.jl to compute gradients.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This guide assumes that you know roughly what's going on conceptually with GPs. If you're new to Gaussian processes, an excellent introduction can be found in either this video lecture or this one.","category":"page"},{"location":"examples/getting_started/#Exact-Inference-in-a-GP-in-2-Minutes","page":"Getting Started","title":"Exact Inference in a GP in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This is only a slightly more interesting version of the first example on the README. It's slightly more interesting in that we give the kernels some learnable parameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Import the packages we'll need for this bit of the demo.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AbstractGPs\nusing LinearAlgebra\nusing Stheno\nusing Plots","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"WARNING: could not import AbstractGPs.approx_posterior into Stheno\n","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Short length-scale and small variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l1 = 0.4\ns1 = 0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Long length-scale and larger variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l2 = 5.0\ns2 = 1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Specify a GaussianProcessProbabilisticProgramme object, which is itself a GP built from other GPs.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f = @gppp let\n    f1 = s1 * stretch(GP(Matern52Kernel()), 1 / l1)\n    f2 = s2 * stretch(GP(SEKernel()), 1 / l2)\n    f3 = f1 + f2\nend;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Generate a sample from f3, one of the processes in f, at some random input locations. Add some iid observation noise, with zero-mean and variance 0.02.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"const x = GPPPInput(:f3, collect(range(-5.0, 5.0; length=100)));\nσ²_n = 0.02;\nfx = f(x, σ²_n);\nconst y = rand(fx);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Compute the log marginal likelihood of this observation, just because we can.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"logpdf(fx, y)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"1.4531044503401631","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"fx should be thought of as \"f at x\", and is just as a multivariate Normal distribution, with zero mean and covariance matrix","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"heatmap(cov(f, x) + σ²_n * I)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As such samples can be drawn from it, and the log probability any particular value under it can be computed, in the same way that you would an MvNormal from Distributions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can visualise x and y with Plots.jl","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"plt = plot();\nscatter!(plt, x.x, y; color=:red, label=\"\");\ndisplay(plt)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"It's straightforward to compute the posterior over f:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior = posterior(fx, y);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior is another GP, the posterior over f given noisy observations y at inputs x.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The plotting recipes from AbstractGPs.jl can be utilised to easily print whichever component of the GPPP is needed.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"x_plot = range(-7.0, 7.0; length=1000);\nxp = GPPPInput(:f3, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp);\n    ribbon_scale=3, label=\"\", color=:blue, fillalpha=0.2, linewidth=2,\n)\nplot!(\n    plt, x_plot, rand(f_posterior(xp, 1e-9), 10);\n    samples=10, markersize=1, alpha=0.3, label=\"\", color=:blue,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you've built a simple GP probabilistic programme, performed inference in it, and looked at the posterior. We've only looked at one component of it though – we could look at others. Consider f2:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"xp2 = GPPPInput(:f2, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp2);\n    ribbon_scale=3, label=\"\", color=:red, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior(xp2, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:red,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-NelderMead-in-2-Minutes","page":"Getting Started","title":"Fit a GP with NelderMead in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Stheno.jl is slightly unusual in that it declines to provide a fit or train function. Why is this? In short, because there's really no need – the ecosystem now contains everything that is needed to easily do this yourself. By declining to insist on an interface, Stheno.jl is able to interact with a wide array of tools, that you can use in whichever way you please.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Optim requires that you provide an objective function with a single Vector{<:Real} parameter for most of its optimisers. We'll use ParameterHandling.jl to build one of these in a way that doesn't involve manually writing code to convert between a structured, human-readable, representation of our parameters (in a NamedTuple) and a Vector{Float64}.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"First, we'll put the model from before into a function:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function build_model(θ::NamedTuple)\n    return @gppp let\n        f1 = θ.s1 * stretch(GP(SEKernel()), 1 / θ.l1)\n        f2 = θ.s2 * stretch(GP(SEKernel()), 1 / θ.l2)\n        f3 = f1 + f2\n    end\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"build_model (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've assumed that the parameters will be provided as a NamedTuple, so let's build one and check that the model can be constructed:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\n\nθ = (\n    # Short length-scale and small variance.\n    l1 = positive(0.4),\n    s1 = positive(0.2),\n\n    # Long length-scale and larger variance.\n    l2 = positive(5.0),\n    s2 = positive(1.0),\n\n    # Observation noise variance -- we'll be learning this as well.\n    s_noise = positive(0.1),\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(l1 = ParameterHandling.Positive{Float64, typeof(exp), Float64}(-0.9162907691270586, exp, 1.4901161193847656e-8), s1 = ParameterHandling.Positive{Float64, typeof(exp), Float64}(-1.6094379869399091, exp, 1.4901161193847656e-8), l2 = ParameterHandling.Positive{Float64, typeof(exp), Float64}(1.6094379094538682, exp, 1.4901161193847656e-8), s2 = ParameterHandling.Positive{Float64, typeof(exp), Float64}(-1.490116130486996e-8, exp, 1.4901161193847656e-8), s_noise = ParameterHandling.Positive{Float64, typeof(exp), Float64}(-2.3025852420056685, exp, 1.4901161193847656e-8))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've used ParameterHandling.jls positive constraint to ensure that all of the parameters remain positive during optimisation. Note that there's no magic here, and Optim knows nothing about positive. Rather, ParameterHandling knows how to make sure that Optim will optimise the log of the parameters which we want to be positive.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can make this happen with the following:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\nusing ParameterHandling: value, flatten\n\nθ_flat_init, unflatten = flatten(θ);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Concrete types used for clarity only.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"unpack = value ∘ unflatten;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now easily define a function which accepts the flat form of the parameters, and return the negative log marginal likelihood (nlml) of the parameters θ:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function nlml(θ::NamedTuple)\n    f = build_model(θ)\n    return -logpdf(f(x, θ.s_noise + 1e-6), y)\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"nlml (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can use any gradient-free optimisation technique from Optim.jl to find the parameters whose negative log marginal likelihood is locally minimal:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Optim\nresults = Optim.optimize(\n    nlml ∘ unpack,\n    θ_flat_init + randn(length(θ_flat_init)),\n    NelderMead(),\n)\nθ_opt = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Note that we just added some noise to the initial values to make the optimisation more interesting.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now use this to construct the posterior GP and look at the posterior in comparison to the true posterior with the known hyperparameters","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_opt = build_model(θ_opt);\nf_posterior_opt = posterior(f_opt(x, θ_opt.s_noise), y);\nms_opt = marginals(f_posterior_opt(xp));\nplot!(\n    plt, x_plot, mean.(ms_opt);\n    ribbon=3std.(ms_opt), label=\"\", color=:green, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_opt(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:green,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Of course, the exact posterior has not been recovered because the exact hyperparameters cannot be expected to be recovered given a finite amount of data over a finite width window.","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-BFGS-in-2-minutes","page":"Getting Started","title":"Fit a GP with BFGS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The BFGS algorithm is generally the preferred choice when optimising the hyperparameters of fairly simple GPs. It requires access to the gradient of our nlml function, which can be straightforwardly obtained via reverse-mode algorithmic differentiation, which is provided by Zygote.jl:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Zygote: gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This will probably take a while to get going as Zygote needs to compile.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"results = Optim.optimize(\n    nlml ∘ unpack,\n    θ->gradient(nlml ∘ unpack, θ)[1],\n    θ_flat_init + 0.1 * randn(length(θ_flat_init)),\n    BFGS(),\n    Optim.Options(\n        show_trace=true,\n    );\n    inplace=false,\n)\nθ_bfgs = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Iter     Function value   Gradient norm \n     0     1.286614e+01     2.399443e+01\n * time: 0.02664494514465332\n     1     3.083140e+00     3.479170e+01\n * time: 1.598707914352417\n     2     8.097739e-01     2.878809e+01\n * time: 1.6199238300323486\n     3    -4.634628e+00     5.526981e+00\n * time: 1.6279418468475342\n     4    -5.505648e+00     3.304929e+00\n * time: 1.688767910003662\n     5    -7.651426e+00     4.093956e+00\n * time: 1.6967978477478027\n     6    -8.082147e+00     3.437668e+00\n * time: 1.7045550346374512\n     7    -8.529757e+00     3.603150e-01\n * time: 1.7165579795837402\n     8    -8.551831e+00     1.675262e-01\n * time: 1.7284629344940186\n     9    -8.553881e+00     1.714976e-02\n * time: 1.740103006362915\n    10    -8.553931e+00     9.316292e-03\n * time: 1.7481379508972168\n    11    -8.553932e+00     1.545037e-03\n * time: 1.7800569534301758\n    12    -8.553932e+00     1.766553e-05\n * time: 1.792083978652954\n    13    -8.553932e+00     7.898105e-08\n * time: 1.7988369464874268\n    14    -8.553932e+00     1.574597e-09\n * time: 1.8067879676818848\n","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Once more visualising the results:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_bfgs = build_model(θ_bfgs);\nf_posterior_bfgs = posterior(f_bfgs(x, θ_bfgs.s_noise), y);\nms_bfgs = marginals(f_posterior_bfgs(xp));\nplot!(\n    plt, x_plot, mean.(ms_bfgs);\n    ribbon=3std.(ms_bfgs), label=\"\", color=:orange, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_bfgs(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:orange,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Notice that the two optimisers produce (almost) indistinguishable results.","category":"page"},{"location":"examples/getting_started/#Inference-with-NUTS-in-2-minutes","page":"Getting Started","title":"Inference with NUTS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl provides a state-of-the-art implementation of the No-U-Turns sampler, which we can use to perform approximate Bayesian inference in the hyperparameters of the GP. This is slightly longer than the previous examples, but it's all set up associated with AdvancedHMC, which is literally a copy-paste from that package's README:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AdvancedHMC, Zygote","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define the log marginal joint density function and its gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"ℓπ(θ_flat) = -nlml(unpack(θ_flat)) - 0.5 * sum(abs2, θ_flat)\nfunction ∂ℓπ∂θ(θ_flat)\n    lml, back = Zygote.pullback(ℓπ, θ_flat)\n    ∂θ_flat = first(back(1.0))\n    return lml, ∂θ_flat\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"∂ℓπ∂θ (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Sampling parameter settings","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"n_samples, n_adapts = 500, 20","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(500, 20)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perturb the initialisation a little bit.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"θ0_flat = θ_flat_init + 0.1 * randn(length(θ_flat_init))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"5-element Vector{Float64}:\n -0.6990469108904466\n -1.740006409989793\n  1.5700171732264776\n  0.05662033575634871\n -2.176498459418762","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define metric space, Hamiltonian, sampling method and adaptor","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"metric = DiagEuclideanMetric(5)\nh = Hamiltonian(metric, ℓπ, ∂ℓπ∂θ)\nint = Leapfrog(find_good_eps(h, θ0_flat))\nprop = NUTS{MultinomialTS, GeneralisedNoUTurn}(int)\nadaptor = StanHMCAdaptor(n_adapts, Preconditioner(metric), NesterovDualAveraging(0.8, int.ϵ))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"StanHMCAdaptor(\n    pc=WelfordVar,\n    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.4),\n    init_buffer=75, term_buffer=50, window_size=25,\n    state=window(76, -30), window_splits()\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perform inference.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"samples, stats = sample(h, prop, θ0_flat, n_samples, adaptor, n_adapts; progress=true)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"([[-0.6990469108904466, -1.740006409989793, 1.5700171732264776, 0.05662033575634871, -2.176498459418762], [-0.6990469108904466, -1.740006409989793, 1.5700171732264776, 0.05662033575634871, -2.176498459418762], [-0.6841186582982408, -0.8592467599090383, 1.5189765542015639, -0.36171359434347594, -3.759734437762744], [-0.8562370826169937, -0.3891587190511359, 1.7372447277768253, -0.4865847293682051, -3.4127230880238266], [-1.1785430724146673, -1.7119917294208946, 1.4343149836180284, -0.2972599688308354, -3.4071868793468116], [-1.4341970568697682, -1.363431773761701, 1.436244539581817, -0.23948711760527255, -3.3674316124477603], [-1.010016270765878, -1.0459374041075675, 1.904181762138009, 0.06960626226438929, -3.7022358506026607], [-1.2875651638028491, -1.108678625787225, 1.7898912334418409, -0.013041462001985023, -3.634702962371622], [-1.160891480003924, -0.9016615342093158, 1.1131931605962848, -0.7610010266689948, -3.5682502691981735], [-0.9816709590329257, -1.2930411601436749, 1.5073609548010172, -0.3693336091971622, -3.4808124022156295], [-1.5647417077617414, -1.4077137575146335, 2.0506238175898432, 0.01658214235880401, -3.7625140211280805], [-1.5647417077617414, -1.4077137575146335, 2.0506238175898432, 0.01658214235880401, -3.7625140211280805], [-0.8669864227858352, -1.198020224585133, 1.2541064249658036, 0.5463976985855615, -3.3716689573898524], [-1.4228507118095752, -1.4586215968870615, 1.0576870302702874, -0.9494945045303744, -3.8615996597250546], [-1.3554777829521698, -1.273416524714502, 2.4249216551360595, 0.9617760524390186, -3.7523261702249617], [-1.2745060996398627, -1.2089746183197099, 2.7099727421676354, 1.0305089521345832, -3.395841122323844], [-1.1584908894984494, -1.375712525185991, 2.4679793751111823, 1.1971189266943034, -3.7808711546106903], [-1.2521981560270705, -1.1918064381516311, 2.408256888462783, 1.1505329656789274, -3.5750723607275905], [-1.0613633441135102, -1.0608787159028137, 2.212632566746787, 1.5068608672074417, -3.8382345922174728], [-1.2668804081969736, -1.0378610981820473, 3.396700561625751, 0.023049738866863595, -3.8049608216032094], [-1.3048854682825943, -1.6110809611063388, 3.5986834007070034, 0.16444733842547607, -3.52425859722124], [-1.3448435631983657, -1.0946625306128772, 3.1661538867528587, 0.4491590407372601, -3.74464470693455], [-1.3694982217284646, -1.3118161042927026, 1.7699871253922883, 0.5176690987527757, -3.5482751488282624], [-1.2672686394154273, -1.2098529723557523, 1.6600458382651682, 0.27588920943544787, -3.7035717306206384], [-1.2053980497590506, -1.3027200157341645, 2.4191927122678094, -0.21358867054233902, -3.2445968080468957], [-1.3846238250657117, -1.2644939122948669, 1.5767844846523569, -0.6271077748740479, -4.00761721327799], [-1.561621854153009, -1.717644638960223, 1.5384155224454164, -0.32198087088261007, -3.75708521596865], [-1.5560522030727746, -1.5500735412916806, 1.449097746423736, -0.42131425075420453, -3.721336241723712], [-1.0553610444900758, -0.6545202936425627, 1.0608404407799144, 0.3540505216406884, -3.409372373587026], [-0.5664441508790306, -0.7773751167878925, 1.6062674710842435, -0.0451015332578521, -3.352552245831558], [-0.9455042505719107, -1.0988301652363477, 2.0788999939361634, 0.06848460237878237, -3.299465034867059], [-1.649454639278266, -1.5444802780755758, 2.1599633744537985, -0.210150682278595, -3.998855562001929], [-1.4325552237365682, -1.3166476676228491, 2.284162081956792, -0.35574960981584214, -4.029330938536872], [-1.0963016120700355, -1.1962555456856887, 2.4382820133097085, -0.03303188385838496, -3.489242899818118], [-1.4568597461663748, -1.4667423754053053, 2.797283257823131, 0.24000215760585422, -3.8125205305550636], [-1.0842310134941702, -0.9406878999107469, 2.846576882122496, 0.9694258515354842, -3.2928358701751637], [-0.9237265519136162, -1.3124445341227409, 1.1402418153128342, -0.858530587331753, -3.4038868145814654], [-0.9008632972279028, -0.5071335112021005, 1.759463139904927, -0.4576726085063887, -3.5891303167034865], [-0.9030429878778771, -0.6056858256812239, 1.7303423725640859, -0.39768072212129957, -3.5783043050792203], [-0.9788774411158514, -0.5572239807796516, 1.8179835973363114, -0.4701800135583438, -3.376408966586787], [-1.620911896841088, -1.6534245498307762, 2.934476159745138, 0.6066525853615438, -3.66717565279466], [-1.1775208782900417, -1.062667965047709, 2.67802202976623, -0.5436938400323706, -3.7869233845177495], [-1.0428208566342667, -1.2577698393329193, 2.466081614878934, -0.5168208451045417, -3.427990042835861], [-1.0356504990234887, -1.3465047199778033, 2.4251200040804974, -0.5025059807874909, -3.4364711636426626], [-1.3423691609184654, -1.0980242491854837, 1.733254834993451, -0.37651343258014824, -3.6983549248313388], [-1.0712659848517487, -0.8892854126120591, 1.736004294687188, -0.3264599939318409, -3.8267760088214953], [-1.0671855562843706, -1.0129371409554941, 1.5718045517729837, -0.2693507741974179, -3.5184710071092624], [-1.3170555348366555, -1.5262157797357094, 1.9874766953021956, -0.8689344645370041, -3.478345392913568], [-1.2505306074389875, -1.2502041793783416, 2.184733287829189, -0.3800735587918328, -3.882899251352428], [-1.0576961332197103, -1.0339002374962536, 2.533462662155037, 0.24842758319003877, -3.728669728127259], [-1.3075907565412253, -1.1879383504012289, 2.1339322889096715, 0.2932863139540207, -3.7430802263560143], [-1.1585499218965052, -1.10409679561433, 1.694207395671299, 0.11680136017829412, -3.546467401742717], [-1.2978798613281188, -1.4000592027457894, 0.9189376611978968, -0.8152544714313545, -3.609454992512542], [-1.3826818023883036, -1.4396309678668202, 3.046432537219628, 0.35656795821698284, -3.772416447434868], [-1.0633924095845844, -1.2252429390633193, 2.6249113428835065, 0.5366957107310979, -3.4886436064110122], [-1.1865696807954147, -1.2073442914565138, 1.4115186183611181, -0.47505460423355506, -3.1784702392308923], [-0.970316849327228, -1.0626907047075513, 1.300026525151743, -0.9418287068846966, -3.613079650276513], [-1.290003859124309, -1.4877007102253383, 1.846858000633059, 0.9519258255256855, -3.847245263539545], [-0.9962390801251376, -0.9470756044840886, 2.3200264622663704, 0.5766422243171287, -3.1995098394475203], [-1.3575049067211462, -1.3270600404072517, 1.8247063438692261, 0.2870694293016391, -3.9035787507020006], [-1.3241244143139328, -1.3751454974830972, 2.669991462885231, -0.09787831361791541, -3.844273248484961], [-1.1094372536706008, -1.2160312820967152, 1.8964680038651598, -0.6318817335022072, -3.3433997097152885], [-1.1243542412058853, -1.2669006203119728, 1.8591615023248287, -0.6771230224608399, -3.3342514810093324], [-1.350751931324022, -1.1539172853195367, 1.7213667921928324, -0.6736255793384844, -3.8645919455350146], [-1.284673250709033, -1.4036262923206497, 1.6587367181750847, -0.1502516603208785, -3.3729747827068812], [-1.1791340382274667, -1.0565375077813142, 2.0059899795632945, -0.08891125978414748, -3.969688681241361], [-1.46548200323, -1.5063522928911233, 1.8296391438807065, -0.258665696166938, -3.2083636480572673], [-1.2623614469868083, -1.0360082055897293, 2.176386648854727, 0.00030126500505753273, -3.793064028258062], [-1.3437641235033788, -1.4420057184714794, 2.626761851214239, 0.01035775356751853, -3.386736864706571], [-1.23523404013529, -1.3320041601196109, 2.1573797708853633, 0.1410168262743474, -3.6733712908769416], [-1.204686523402165, -0.9066467022858575, 2.081939654134821, -0.13367793913363382, -3.9036006929177223], [-1.552406632615578, -1.5404861789760167, 1.2547457955802352, 0.21023533440719427, -3.1416267684333414], [-1.626908622550325, -1.519899108012706, 1.2397523563565713, 0.05824112631771966, -3.0554623982479407], [-1.5373622481161782, -1.8185089519372792, 2.0842725528522776, -0.60178892750491, -3.401971883501103], [-1.3510202949939882, -1.628053397970443, 1.8617828065508073, -0.40129298055446283, -3.344334812406221], [-1.5881277912593657, -1.4237227503452772, 1.7134808469680747, -0.48724942272895, -3.7281717929177716], [-1.2854790106866794, -1.337567648592188, 1.6653611079690092, -0.23049660291099325, -3.830083509161577], [-1.2340341237258694, -1.3063521356136547, 1.8120398012297187, -0.37592603368213884, -3.3917106033042885], [-1.1523400788123712, -1.2716037020408242, 2.5549257028659746, 0.6755284972678199, -3.3126001221286083], [-1.1242218978781848, -1.508604912192515, 2.5665688630069834, 0.9288837440609514, -3.6149096933204534], [-1.0375244731437043, -1.335832630722604, 2.2147349851227416, 0.9087404779433783, -3.676138544298552], [-1.1298840992112678, -1.4430642170476817, 2.723295370158916, 1.4761281844485399, -3.725079103857519], [-1.2409422588149845, -1.2299720412338042, 1.3947110739872508, 0.3699810434115048, -3.7799454147288234], [-1.4145650093817403, -1.3935584921964412, 1.6145306917530826, 0.43922803728641524, -3.303637854077986], [-1.3723184150089238, -1.3351119270370881, 1.4873401019158181, 0.368791987908097, -3.7394339786555975], [-1.1700660296181673, -1.241284158165488, 1.0895792058081215, 0.44746088556203206, -3.3845702369799717], [-1.212627137158379, -1.2944125479720117, 1.4956098295852511, -0.06578257953833522, -3.6305682673720696], [-0.9021882145862418, -1.2316810802157785, 1.5009082204253306, -0.11346082294124067, -3.7298885506335777], [-0.9196143372749377, -1.2087082794983115, 2.180330710046137, 0.11766962684144057, -3.5508159563963715], [-1.5079163188739133, -1.3375918096140211, 2.447420542421206, 0.05190494860659197, -3.4382081432387817], [-1.2133200056056963, -1.1990420826642023, 2.3685624205864135, -0.09167358740094048, -3.6316148004184945], [-1.2627349367926035, -1.3310582413388055, 1.1814492828392487, -0.4508499275031363, -3.589315634554285], [-1.1087562348434585, -1.2257511099563152, 2.0013711581960747, -0.23967355418455094, -3.699133595499216], [-1.5328693248522216, -1.4663589407850945, 2.283770946602373, -0.21144894497483618, -3.782996559249339], [-0.9189257710222979, -1.0799245224721388, 1.9733525587199936, -0.3837792619479113, -3.408615451715484], [-0.8816287649148298, -0.8344461106204546, 1.7800216095570727, -0.38096035476252643, -3.454237042940778], [-1.0045721567786567, -1.1521601553068035, 1.0796741410079325, 0.22813302060769913, -3.4952803724663837], [-1.3486392477701843, -1.2484135114833375, 1.9253484699602628, -0.598185043944986, -3.6944436041735274], [-1.2918482948784689, -1.4604288040019224, 2.3603610431867965, 0.0022999594375189836, -3.8043767381433917], [-1.4055798139725981, -1.4698424792681641, 1.8914007317036825, -0.12351572085524032, -3.7710837147691243], [-1.2198802480344781, -1.2769818924995648, 1.9219966194162192, 0.2001454789215552, -3.3932537440630597], [-1.2198802480344781, -1.2769818924995648, 1.9219966194162192, 0.2001454789215552, -3.3932537440630597], [-1.388622759450036, -1.4056359002763774, 2.0120970848920305, -0.399112056741056, -3.921719203553739], [-1.329182600770385, -1.1836640528392146, 1.98899599275348, -0.5309173429247301, -3.5523730883176894], [-1.4708711466933906, -1.240586032760341, 2.0234630523413295, -0.1432742858603499, -3.5750672763802864], [-1.397524113011748, -1.3144571159216922, 2.0605804196893893, 0.02951183573763183, -3.4329612952919444], [-1.1521324786832694, -1.2908370187216214, 1.8504856445532927, -0.1905841311440147, -3.6718580613127663], [-1.2905111309732424, -1.2955191753367141, 2.064819490089276, -0.2868572208963855, -3.6149776432449388], [-1.3253389909377855, -1.5981084698517523, 2.455903629011993, -0.18664404959048014, -3.514073960659276], [-1.1651211339738359, -0.9437916548203609, 2.687759326367191, 0.5973207999177684, -3.6698080564840625], [-1.2548729684037851, -0.8291932025325494, 2.5594484865775415, 0.7864253883433304, -3.5053893259647237], [-1.4709946287596902, -1.0673320585275667, 1.9620188270768628, -0.3733550548100266, -3.3717537476787935], [-1.1842779322148076, -1.3329300474133146, 1.084166052530121, 0.20476864397490976, -3.7253704369465126], [-0.9267816859173508, -1.0311060526234235, 1.6462513399349537, 0.16310076825437797, -3.505346279712378], [-1.254692153630974, -1.2970618394577493, 1.3217043939980566, 0.11966247550348616, -3.2900429193182537], [-1.3032240947539375, -0.921469133672118, 1.0192753549241724, 0.517758871782064, -3.7644304935224056], [-1.0872755977669786, -1.1484970695488197, 0.6316712823327658, 0.23303845064958542, -3.2889552157878184], [-1.219703976003484, -0.983524497191737, 2.6901670175120076, -0.27418234401502817, -3.646866164570724], [-1.3716713643535958, -1.520775906423847, 1.5157052234155342, -0.1934629881266749, -3.558479830230604], [-1.2525891595698564, -1.1866309697516177, 1.8173084659982017, -0.19021983739359058, -3.7575733431660074], [-1.4119422818037928, -1.2491584263586182, 2.897633440254601, 0.3993567688284177, -3.444301452921351], [-1.3691114747601145, -1.1506430270703052, 2.863290478723126, 0.6570112803335324, -3.6234863057417295], [-1.3985006478942974, -1.3960136103843834, 2.930379478331299, 0.858932975891772, -3.3374391572214472], [-0.9334010083160962, -0.9560696719651606, 2.6231562744788923, 0.8188735625424519, -3.5059850474773606], [-1.5528442796105588, -1.562841688939291, 2.379955714530939, 0.8497735343264533, -3.82498314058815], [-1.3630553224183475, -1.2322106623118867, 2.254000740517114, 0.630714331352047, -3.4310134311280405], [-0.8903895503631309, -1.510059719266403, 2.1878054245720926, 0.7325455339537846, -3.1823963947656733], [-1.6547153597627875, -1.2723910322059033, 2.0571468671380124, 0.6989972063398976, -3.6556559714289745], [-1.1610523320629869, -0.8860476209491788, 2.450809497939471, -0.4382877087167456, -3.34355413038411], [-1.7845067553588683, -1.4155875007955536, 2.2217256693508616, 0.50133426918708, -3.6933360923150875], [-0.9262954900045686, -1.2255879739637194, 2.5974043777834877, 0.1658076245189688, -3.5349242044584077], [-1.1073551302447884, -1.1997742034994392, 2.393716415361599, -0.15746644522634204, -3.589867249930443], [-1.1935877405023312, -1.057371232051759, 2.2473062040151968, 0.2757048907557865, -3.5846079875494605], [-1.3709281802224025, -1.197791491161773, 1.684183286597274, -0.25763479296940056, -3.7459883331908315], [-1.0879508241337814, -1.1169922035683149, 1.315050887929933, -0.4262599762291648, -3.6100340311319266], [-1.2495547283010275, -0.882040123601461, 1.248461300509973, -0.498997161402563, -3.4625135024251774], [-0.8470730485159998, -0.9218277244399561, 1.1039555299474388, -0.7394634816685901, -3.6791716227759506], [-1.5697235703909858, -1.2043097679585424, 2.1812900920365683, 0.46406084751711607, -3.8624179321656738], [-1.0137623803248914, -1.3995209169717695, 2.332164269131658, 0.6533596752225121, -3.5943349796375625], [-1.1245557415842495, -1.0007951450329888, 3.1168132923743666, -0.02156473104377081, -3.387284354979405], [-1.3808042392650584, -1.710945126631639, 3.235406510252624, -0.28337541548521916, -3.7409727703801248], [-0.8393055111189085, -1.1181710370004625, 2.382184811538052, -0.05776470768111794, -3.4358777268181324], [-1.1060669819588758, -0.8046432221373284, 2.0081417584920556, -0.5383930654288935, -3.705682678065998], [-1.042840219050675, -1.0211952172713354, 2.2255570724552713, 0.10723615738819955, -3.64312162286908], [-1.5488315256196574, -1.5130458022811677, 2.3801544355064435, -0.04547615068826141, -3.9517251741087214], [-1.2147968896118935, -1.3177686759898837, 2.427839648899896, -0.31291419383185726, -3.4101793491243972], [-1.327363410367647, -1.3830756784585603, 2.0977012793718015, -1.3415367493319494, -3.787201587753401], [-1.2470459875855369, -1.3165693388990156, 2.104227782267675, -1.280635371741169, -3.7679854243955346], [-1.2238484186772776, -1.2244552003668654, 1.3328060981440815, -0.6397608110438593, -3.695702234838301], [-1.0333386998594196, -0.9903981175430142, 1.2154462214298658, -0.22094586469627298, -3.439091014308331], [-1.316718753118761, -1.386574324422556, 1.6607617832493675, -0.17587019187159555, -3.6731871629927983], [-1.3237085534405655, -1.5319874493071048, 1.706108247105738, -0.15136002607931487, -3.609399538073316], [-1.2841725931871724, -1.7715642726986787, 1.7363284998697668, -0.13699431491109393, -3.789904377860817], [-1.3427574049835755, -1.4317493515170747, 1.615662268907977, 0.0026997235254484775, -3.6383846470135217], [-1.2934053454281855, -1.4702818428613988, 1.6947573925031725, -0.05535952956517257, -3.777654417761379], [-1.4510433708009907, -1.3483911800271435, 2.6478086264138687, -0.027693669402401786, -3.5572437683295166], [-1.2318240332235904, -0.9595338283626391, 1.2474345089819348, 0.13437861033913442, -3.7655645556340263], [-1.2402943327281226, -1.6154257864891979, 2.5055184699304522, 0.1268817807909332, -3.495853680669514], [-1.4693951726618673, -1.537864861217973, 2.532588098607617, -0.22266962097384202, -3.6911644333260565], [-1.300965352032362, -1.2156870499539136, 0.8187698638314502, -0.3809610735383695, -3.6106758437046316], [-1.45410332325818, -1.3545199262992589, 0.41824919380461034, -0.2853821219890167, -3.701390262097264], [-1.080430627427632, -0.932741774650182, 1.1991252573815805, -0.151775440873889, -3.253902299204475], [-1.1482953792869952, -1.647164951149898, 1.6119086681854191, -0.4370941780078358, -3.4562900005197976], [-1.5833807456679043, -1.66209699370225, 2.746128148549122, 1.1141429909785463, -3.3397887275383247], [-1.010376874838601, -1.0440288943681533, 2.678054916119236, 0.679143900326485, -3.919392462315849], [-1.4581141457667934, -1.26409531255839, 2.0409757696450983, 0.17434240789084285, -3.640108663604099], [-1.4356696113601235, -1.5688763391036653, 2.273093578197623, 0.286003160891991, -4.001262889656405], [-1.4112779313125952, -1.4635677637251001, 2.2561263537133662, 0.2507194674097896, -3.969273277700279], [-1.1919586346167703, -1.1482540983844371, 1.6371190000387204, 0.12712492305459477, -3.3275898131615755], [-1.3216081463318936, -1.3320694031014295, 2.530154643326785, -0.14398322476342396, -3.970722168244765], [-1.287194637965231, -0.8633034904358993, 1.3994109153683298, -0.24616098597246622, -3.6611995951422247], [-1.3613663325680316, -1.0022795965832372, 1.3884576198694627, -0.17819480116630454, -3.757586722576087], [-1.0439896093518404, -0.8490505844375057, 1.6350774682188478, -0.14031009532623034, -3.787579509753227], [-1.108552780975295, -0.6657150040395053, 1.5398062135598924, -0.5753285029236899, -3.7112115407542805], [-1.4741022656363574, -1.5770275570076746, 2.1559899992077405, -0.4501685084742444, -3.2994139355103353], [-1.555888525777167, -1.3795881049856717, 2.0913359237897526, -0.524162056768836, -3.6837448654014824], [-1.1984408593398648, -0.9431814784870658, 1.5475361459612895, 0.14922650569029558, -3.4399969408039515], [-1.2307473250266356, -1.3541397224614453, 1.657334935793248, 0.19325683739488864, -3.7926627846282157], [-1.6140126219668958, -1.2036913683140795, 1.5084821964442123, -0.020003131007455335, -3.31732757742719], [-1.387279872603199, -1.2623413044549232, 1.3945602335635514, 0.016944076442710003, -3.383690306690097], [-1.1274881590813162, -1.2859068070672244, 2.2631253018942368, -0.3083416629695224, -4.011944166048383], [-1.1021799915055224, -1.6075728634259359, 2.159806150208902, -0.6714054847310996, -3.265664665728243], [-1.0936110703292437, -0.9013706918069474, 2.292527751745629, 0.42985479668507753, -3.8131619434085486], [-1.1783969276762996, -1.1881676453552295, 1.6877573435392548, -0.23329447776518722, -3.538262223315152], [-1.365988998195373, -1.3459673037718494, 1.7101610441534898, -0.2829725015739828, -3.628572149028172], [-1.1038698064281038, -1.312714165663166, 1.7403622891162145, -0.04782447643095135, -3.7151705835831637], [-1.2285278870508074, -1.316074789570708, 2.05979950717762, -0.2357953652287807, -3.5676937149649834], [-1.3070239600945763, -1.2222412261790716, 1.9595675576688978, 0.3650529386297514, -3.975777180086593], [-1.0852847460058042, -1.3732363015819542, 2.3756166343940146, 0.8548292825697957, -3.2223901513704716], [-1.1925478281418551, -1.3110237209539546, 2.1443295008724186, 0.2910737564861631, -3.6928022473271764], [-1.1328125668238052, -1.355086105115779, 1.737632683763471, -0.11061108695926339, -3.7924432199549867], [-1.3390074887867838, -0.938384990358097, 1.986532338651347, -0.09812512876538408, -3.618764057361832], [-1.3209482543781559, -1.4050526242785688, 1.77434724695254, -0.2621630208907003, -3.5963848855746314], [-1.2127088483064266, -1.2148944365571261, 1.9725099309944119, -0.12689252510381852, -3.611963374558986], [-1.1559079560934764, -1.0887000596226553, 1.9503241077148696, -0.3066376449529966, -3.719914483879325], [-1.34879692458795, -1.5278577251685503, 1.5385680872225602, -0.12340873259466367, -3.57293384187255], [-1.1711010066872176, -1.0390822474703736, 0.7168839257638198, -0.4134791185617054, -3.5329895189990697], [-1.3337695317927962, -1.2873900628614283, 1.7117043641084881, -0.12811510593461833, -3.6580015931024037], [-1.1096827065675168, -1.2214538489366067, 1.9110681663472526, -0.0720281126524629, -3.666462904939803], [-1.157105980031513, -1.063217777904229, 1.9005738500080345, 0.08709772275949262, -3.7756054595340243], [-1.2644970838885468, -1.4632751088963372, 1.3890593551457027, -0.06241431953135966, -3.2237847182215273], [-1.2405073244148759, -1.2352169813031397, 1.3933984210202042, 0.05915530317346559, -3.7592462800615296], [-1.196091593191376, -1.1865329999320853, 1.8863027777547448, -0.14247077034372344, -3.4497156647043905], [-1.1488168972368997, -1.1521177104284148, 1.7119006178889407, 0.502414150246333, -3.5091460031032593], [-1.315466107819971, -1.0552602468994534, 1.455317355763493, 0.3006000985091594, -3.8386941983214937], [-0.9586690870864157, -0.8421782519042625, 1.5981641330116443, -0.026137509981209006, -3.803741184459938], [-0.9137576386531685, -1.01245454652517, 1.268942904302232, -0.5123322118582612, -3.203136935964092], [-1.0405454596487327, -1.2814622962993496, 1.29367332589254, -0.8166400885787177, -3.4495106968735274], [-0.9815596146371617, -0.7778719452727962, 1.48706024226302, -0.477112869630803, -3.8032510768710384], [-1.3359948486955955, -1.664074233894248, 1.6983575686950891, -0.24166382823843302, -3.644201660203511], [-1.2450270406824702, -1.0111860663238363, 1.2622251764452304, -0.37210642644894315, -3.8045198982564146], [-0.9978688207014071, -1.1360063579282356, 1.1866000918699355, -0.3657601868694965, -3.7609185125774918], [-1.14804705520674, -0.980472029674135, 2.460956739833645, -0.06729935065678905, -3.5422890900088766], [-1.159465922648296, -1.3216513632298317, 2.827038428311747, 0.07082036845868292, -3.618050680957245], [-1.368162818463919, -1.2182835957987987, 2.223072601977137, -0.01806436069994934, -3.6653896786197544], [-1.4665364738654454, -1.2115350368336482, 1.5664283327435002, 0.23563320805453863, -3.376077093392579], [-1.4336114433556773, -1.423922742421559, 1.8193211734857715, 0.42286376806881554, -3.674930844910971], [-1.3102095547983186, -1.2195797859418631, 1.7748773327529483, 0.4365259316399069, -3.888526588343487], [-1.1411158769298009, -1.4541634929599934, 1.8339296162647374, 0.38724249835149305, -3.9537820274774997], [-1.0955304333512856, -1.3850616149982895, 2.4440566041691554, -0.4943812919646575, -3.3860765165275426], [-1.2862639189797935, -1.35690571903866, 2.3329377554764426, 0.1177060122747584, -3.7290642270099257], [-1.1684354007584834, -1.1640965954448919, 2.207103126305381, -0.23743007619643353, -3.680033366112772], [-1.0669988817263534, -1.1869345159249225, 1.8709314130421628, -0.036381070617158756, -3.6713319741482997], [-1.3538756052058343, -1.4514942317006918, 1.5395542615306281, 0.33115558083654495, -3.5787333315377152], [-1.0829026171828058, -1.3456724075817168, 2.6444889866708903, -0.09787122015815057, -3.3346113455036086], [-1.35032682914213, -1.3221426651188923, 2.4543675687089515, 0.6333225552382048, -3.985970536810506], [-1.5299695233905357, -1.399138709018214, 2.2112577859922746, 0.06529099566609997, -3.701798082587259], [-1.1432079204539045, -1.392194457862514, 2.1573942670392023, -0.40734546549934597, -3.5269063131519847], [-1.184854557001413, -1.2972138413588115, 2.012261161222917, -0.007302916135235121, -3.7396497718853277], [-1.4112154193739885, -1.3980306727989806, 2.075989034969339, 0.4096941530142326, -3.5644816900974803], [-1.0262710031182398, -1.2170960216330535, 1.6376326868936764, 0.00047018775478840924, -3.51069323798618], [-1.237290808691322, -1.1018800232414085, 1.433156422598977, 0.42438284870727566, -3.5346843183291945], [-1.2167176339251031, -1.2572775346932694, 1.1840591525710937, 0.6504095041071316, -3.868517599702782], [-0.9789293713327074, -1.108131360624515, 2.2984811714906344, 0.627618238489669, -3.635548647736347], [-1.1874176983803335, -1.2358546758177522, 2.371835124349931, -0.7345671830520888, -3.8559597418543077], [-1.1830537882624146, -1.1385091228043436, 1.8359003652231178, -0.6483372418308704, -3.298665337388098], [-1.4683330133292605, -1.6004112807609876, 1.914237532820785, -0.2055436125044124, -3.3646229890096166], [-1.0970489025959864, -1.044659189794493, 1.5426001472254331, 0.15276035501184895, -3.976001525509884], [-1.2917384726204566, -1.187321278519035, 1.5518161114169546, 0.28366580918970496, -3.4710219605856536], [-1.6481870515788566, -1.5020688999443486, 0.5622203817456803, -0.06934651459813618, -3.8051914720217406], [-1.686293656066968, -1.5876333484947514, 0.5125661687706704, 0.0092940609225112, -3.883291753214083], [-1.2906867164757576, -1.5107162595801138, 0.5279202532378895, -0.11366953946639057, -3.6401025138638192], [-1.187323363528094, -1.3486208795072694, 0.6523438553988696, -0.3136181377526823, -3.3667349056965254], [-1.2691181690052644, -1.301404059495483, 3.059924831906814, -0.25458630337956384, -3.64317013362918], [-1.1708405522362713, -1.3117513024187586, 2.7848201131069064, 0.07597306249776503, -3.662260891118095], [-1.217241197211998, -0.9804229065361851, 2.9681847548354368, 0.08026672492488789, -3.757844492014787], [-1.1733033924095364, -0.9650797007101316, 0.7204271427887515, -0.5554227528412988, -3.522743054775196], [-0.8529237329657391, -0.7654076783481621, 0.5821434835052107, -0.6740413573714424, -3.7083331465343945], [-0.8620648817504358, -1.0284902809130154, 0.6673522576843902, -0.5425592494178176, -3.5565842391392226], [-1.508930035027216, -1.2981689960407226, 0.8735232468082677, -0.34809887061275735, -3.609456998883534], [-1.344668412931696, -1.4040111222986487, 1.2752974294682315, -0.18382124038429548, -3.8719306106803506], [-1.4045086287626043, -1.16090057993456, 1.4717420708396005, -0.5321157281577755, -3.5421276718096544], [-1.492251299480134, -1.259163961174356, 1.312922656011477, -0.6371327016906254, -3.439822305729757], [-1.0704821398646114, -1.0893290598098753, 2.221112453326042, 0.44138888487792666, -3.5431301857904347], [-1.4141294950824905, -1.307523809566315, 1.97552689657574, -0.4096514195328418, -3.670807944678612], [-1.221649150656845, -1.4969092502303392, 1.6766612579893383, -0.4474490485260917, -3.436739931507191], [-1.0562489663837875, -1.1388300386350143, 0.5816682353562299, -0.39080601849980245, -3.7032408080676626], [-1.0841326175062453, -1.1990154075036146, 0.7065091646500958, -0.3246802023859595, -3.588642363426252], [-1.3134851353922372, -1.1679580336568538, 1.2092702797068366, 0.11497757302856856, -3.7301982592985463], [-1.1943952826819917, -1.3126685388652657, 0.8141503822154419, 0.014528137044137579, -3.568946985992236], [-1.2114864899882616, -1.2752110652809143, 2.3076964762068646, 0.24930858645848925, -3.648041363584066], [-1.0864094676190799, -1.2355995153296753, 2.5508751757562105, -0.1899426151762055, -3.6639842213126865], [-1.4550338736864386, -1.5210866607771745, 1.4856054923224038, -0.371026355326725, -3.678191468648529], [-0.9351544006266431, -1.0802408430136672, 1.3919381037957226, 0.07228135066334933, -3.553897253785222], [-1.3422528323817078, -1.5852860235474129, 1.6781606708859014, 0.08717277841458307, -3.4794897180128723], [-1.138286036466797, -1.1707587928724033, 2.5544863665856856, -0.35873691262491825, -3.709492459640589], [-1.297929088177342, -1.2229445208075531, 2.535158327558367, -0.3962878676521037, -3.74199646394283], [-1.3158713377610294, -1.3521853098388266, 1.6208276946103326, 0.27860313930621927, -3.492612764990734], [-1.3787474321519857, -1.3228477931627172, 1.8135065010652114, -0.04026273563365482, -3.9640909067873236], [-0.9767493408540577, -0.8429214905781504, 1.5497132499835315, -0.2066325914859771, -3.3638932854998997], [-1.2592253401246805, -1.6213466783486037, 2.371301646833797, -0.009524488644523193, -3.9058908159574703], [-1.3316641762420798, -1.4367892605842525, 2.3381501434440297, 0.04660508878047598, -3.7846086573418396], [-1.1820562030932305, -1.1970623903283422, 2.033504580721865, 0.019840481349394347, -3.502335971480709], [-1.3922809442571948, -1.1667553921836478, 1.5768111381533263, 0.00584358226028462, -3.502676534664207], [-0.7442198654285015, -1.163465305087066, 2.1518138008327976, -0.10489914866594066, -3.478924794485417], [-1.254162450883537, -1.0485277478833002, 2.0495865262380266, 0.12993068229351928, -3.565760326621508], [-1.337481326871205, -1.253247205998223, 2.1923093349295715, 0.26962472124322756, -3.845656065811993], [-1.335207493376681, -1.1936790461760585, 2.163736221906091, 0.27571129386488663, -3.8365530904606584], [-1.2215560045401466, -1.178342300143782, 1.4967395688983227, 0.6387651147033077, -3.4798229529607023], [-1.2451473959078478, -1.3939292008514463, 1.3928037240074846, 0.35502896933479766, -3.462501012012962], [-1.2408146727328115, -0.9477936995432208, 0.9631393132333465, -0.5018988793071206, -3.7337469160118606], [-1.1956866152505279, -1.4476309962026561, 1.0528149427310067, -0.5052207239416964, -3.5822167497454003], [-1.4212806525122366, -1.3707125507680797, 0.7197983645027872, -0.627278865301889, -3.766165256945259], [-1.3614024999224719, -1.3973900388520355, 3.0890379398889203, 0.30947752839291964, -3.724294226659108], [-1.0885079820621761, -1.1320944449676973, 1.9537250498322938, 0.23527329461600746, -3.542412748053014], [-1.2257672085173519, -1.3598449187935115, 2.1005499771433302, 0.1680457575578451, -3.7211771897018324], [-1.0903975093926082, -1.210650684422902, 1.646321685688815, 0.40619564996289603, -3.6639932045318804], [-1.2594659386695437, -1.4138167398118304, 2.2199315015707652, -0.5213585265168209, -3.7934372371038934], [-1.1426990030956312, -1.428694702219281, 2.2155202164613463, -0.3528631053710366, -3.827344194575946], [-1.1408358032057808, -1.45266101550289, 2.1901558292919274, -0.29611471814819584, -3.659583686211464], [-1.0770900765258573, -1.1695144224608738, 1.996512462897479, -0.7975403840516188, -3.653554239863834], [-1.354831097939285, -1.4370678762742706, 1.891631307241069, -0.08264252863407631, -3.662719855136027], [-1.320223962907481, -1.5155613767053433, 1.8830300203893051, -0.07549135277998542, -3.619826189567579], [-1.328527161975465, -1.2420491435701684, 1.5371317376474738, -0.567440719365195, -3.4766607574159525], [-1.1139879179077934, -1.2710714476537823, 1.8512039770730038, -0.07688925166597876, -3.668788708076417], [-1.3425789030637043, -1.2274946940408635, 2.125932653410557, -0.3455485586959076, -3.6141988955514206], [-1.338330482080683, -1.5520352368412411, 1.7681043185568681, -0.42028862495271635, -3.774876776387902], [-1.0052692052989634, -1.0697647224852553, 2.1391808608378517, -0.5728475014941593, -3.5139416215965733], [-1.3709122450679463, -1.3309665778363338, 1.8991310131898589, -0.6289566280313486, -3.4919034767542443], [-1.083976134815439, -1.235338135236528, 1.6497142574397938, -0.229338331511252, -3.5169601519343026], [-1.2970203425728644, -1.399593005790001, 2.0663374296021506, -0.14767475764975851, -3.7552336569253315], [-1.3426343383491244, -1.4250521522723338, 1.7013237180556524, 0.015881504065289206, -3.2730996946693054], [-1.2753935569955712, -1.1121056052880305, 2.8575335559705914, 0.09805476695557258, -3.7025365766765326], [-1.1728429937650504, -1.413834368203999, 3.270106938707107, 0.18939572033748092, -3.578438490650276], [-1.539219710438687, -1.346718103287684, 3.121863540621248, -0.4173120001499534, -3.6889699752407283], [-1.2041846874875866, -1.3940546598265424, 2.485828682202529, 0.06706967287620136, -3.7149455226010804], [-1.2259029305423983, -1.069876868014056, 3.12627789997657, 0.19152359149577985, -3.4045386695307376], [-1.1789691489912988, -0.9226199598954814, 1.3549489139844089, -0.07771889209386834, -3.424185894838807], [-1.0618862429867109, -1.4595700720430829, 1.1216314567239098, 0.010684216177882485, -3.4841397486911028], [-1.1819241160659943, -1.2688346244910345, 1.12620807256446, 0.18503593046324907, -3.542333900294109], [-1.0730033986204315, -1.2332759010881666, 0.830726486022731, -0.18810044054874986, -3.291033987977392], [-1.1289416884985135, -1.330200349162085, 0.8521515588018926, -0.3722181272375319, -3.865726045039196], [-1.2709190003945383, -1.4177612374113666, 2.8991053479480997, -0.028799552579418238, -3.772605042228973], [-0.8684950431282064, -1.1045958505796212, 2.9305712287599914, -0.8541960532761681, -3.4730506988843888], [-1.4188406072596051, -1.3956396645839837, 1.9866915339087525, -0.7410055447864634, -3.407602241922148], [-1.1974417572270395, -0.9413082851939101, 1.8095937980401033, -0.7749299532817063, -3.740423333754821], [-1.2020100433622145, -1.1490569282148964, 1.6478001060061032, -0.8381268505088991, -3.7835960745276758], [-1.2187551180698721, -1.310314811573765, 1.7344387829552708, 0.211786462730012, -3.327046119894036], [-1.3379086301785603, -1.5013038264054919, 1.581571408281368, -0.015672460009880262, -3.774020786118625], [-1.2930684456227601, -1.5664004900212456, 1.4952780110603776, 0.03647850309399182, -3.8107741417141843], [-0.9764619962315534, -1.0912809417084444, 2.3499893648065107, -0.13062998855951458, -3.47766609725941], [-1.3139448378766876, -1.2882770328284237, 2.714294263951418, 0.3713145387636247, -3.7933241649460903], [-1.232537288454867, -1.2780105763275829, 2.729983071022177, 0.43223814018626344, -3.9028647523041213], [-1.1497318237113074, -1.4311793872875642, 2.3387068810172136, -0.12175369390804786, -3.427816517789879], [-1.202260975204332, -1.0371288685145146, 2.167658491716552, -0.2418124497537218, -3.5994477727529666], [-1.072740089902842, -1.4560520875465943, 2.2865865231561617, -0.0879983303049779, -3.4561387492454285], [-1.2860584615318034, -1.2344339991666404, 1.2555961659530788, -0.405711099535907, -3.3407749017871438], [-1.432142224647548, -1.1472497020751118, 1.3175922555200295, -0.04897838116220379, -3.755796040180486], [-0.8843301585280037, -1.1597192914363488, 2.2497752004804306, -0.45303325874694284, -3.496504881110141], [-1.1801650397793246, -1.2703856640916316, 0.7323604751943216, -0.11072438214382299, -3.735839743807719], [-1.2492303096777373, -1.230336532804719, 2.9369813906194633, 0.010495892076244656, -3.6967695648052743], [-1.191079042717134, -1.273023163651716, 2.8142078365053873, -0.6225633550398337, -3.4466017385294228], [-1.470759291358298, -1.03386253765304, 2.8933863475721533, -0.7110488314038826, -3.3509841283791695], [-1.2178586803817173, -1.340599333356388, 1.791890346160901, -0.6885725037243, -3.5628779161238895], [-1.2294585871061186, -1.2195930501786203, 1.2819802751725444, 0.22798227030445595, -3.5216725126483586], [-1.2433477806438746, -1.0562007299400928, 1.1617076388791785, 0.3309489795731063, -3.798115485445043], [-0.9784181496366969, -1.185472445541738, 1.5224427525662088, -0.2805765654601381, -3.516392913768947], [-1.2230908801476947, -1.32696540389125, 2.490331789190713, -0.07575082174116843, -3.735778227703184], [-1.3434010902755682, -1.2940297687156737, 1.7928271454912643, -0.36306105085293366, -3.511863189170229], [-1.0323040865654551, -1.323394798725812, 1.7698239809457772, -0.5971554726112223, -3.474842235352939], [-1.2216849713391924, -1.4773174732020942, 1.085035629082431, -0.4825093541347045, -3.6940470059151296], [-1.3716437965318682, -1.309810276314472, 1.173971472838594, -0.4890210187703959, -3.6416649642461056], [-1.165100246658231, -1.180805905597574, 1.3147569447356773, -0.031729765410642465, -3.486969807049082], [-1.3399928158943268, -1.2778745290344828, 1.866596737065407, -0.17916589378740955, -3.655130375729366], [-1.3399928158943268, -1.2778745290344828, 1.866596737065407, -0.17916589378740955, -3.655130375729366], [-1.4103586625196767, -1.298939997102911, 1.8519580172391883, -0.17394180555475133, -3.63165223744845], [-1.0797675274193852, -1.2741680949584062, 2.67388208583326, -0.22148805848009329, -3.5744818872901662], [-1.376821405751915, -1.3494508555962963, 1.1094927943895314, -0.2214117393503795, -3.8979857538361653], [-1.3788855553005352, -1.3271709186100797, 1.0662558077248434, -0.18657844517646782, -3.885131147844663], [-1.0134046567079777, -1.1487768167152874, 2.0096809761016177, 0.15449853961567203, -3.455893182643572], [-1.6570234432823376, -1.286823145122958, 1.633723559880559, 0.13259794223232133, -3.611719266657487], [-1.0470108022920097, -0.6437340134945402, 1.5394138485603164, -0.3287932935820199, -3.5772058261728326], [-1.3662402689461381, -1.6059732848394914, 1.492739979426963, -0.5042520904860669, -3.6049924632927683], [-1.0837851143071338, -0.9212933534002289, 1.3804933306962557, -0.3377425900322055, -3.5321583279913225], [-1.4821045771872736, -1.4910294282111902, 1.7081298566454446, -0.32063868767888504, -3.6913619170355374], [-1.278989181106259, -1.51096435829901, 1.7024868208025434, 0.27146115339963556, -3.185370812770848], [-0.974177672057123, -1.1285022722367986, 1.5230809249520392, -0.004135345922967326, -3.543129048327996], [-1.2264468753467372, -1.3108135503032332, 1.6753127594224815, 0.05488424940491192, -3.831236014212391], [-1.1256203144082562, -1.3727521868600245, 1.6505542175812908, -0.6388774635771777, -3.4927497199715583], [-1.2409877688751019, -1.2237148793851083, 2.48577213542068, 0.7550472283211002, -3.3343986150538303], [-0.952981127171053, -0.9808868898476784, 2.0252065364984952, 0.5433216887527108, -3.642871364582038], [-1.0149434175724579, -1.1162048244532818, 2.117576754299684, 0.5019205419183669, -3.682785417016289], [-1.1948515013009364, -1.6483213091340796, 1.9017283834238896, 0.5823254954697207, -3.5235040958099866], [-1.1888283468062926, -0.9946514329249185, 2.3322600682183583, -0.15835639406101268, -3.53927480395209], [-1.4922084866375322, -1.3136965512879102, 2.3300420552987133, -0.610164115901357, -3.752395000611448], [-0.8749136253466008, -1.1179514908835708, 1.9128156255387028, -0.38023278891392037, -3.3892434537344847], [-1.3207036890477901, -1.3725450793034824, 2.0782775817545063, -0.3218093067212005, -3.879186093917578], [-1.173768571203522, -1.0943181675654974, 1.2907482691597838, -0.7536983279788252, -3.3687328969939525], [-1.4596900277538631, -1.4254296739292593, 1.8657111470089591, 0.5360959295274292, -3.643471662461663], [-1.336463326640053, -1.600530346607597, 1.8495295927504098, 0.5950643370556663, -3.7315350584814317], [-1.2801156711324992, -1.34616965344672, 1.8589115466562918, 0.4337618422336199, -3.8987617435843402], [-1.3881208479325982, -1.2913995649676184, 1.934681201881156, 0.0868627873027304, -3.5805710763648806], [-1.3009584279946909, -1.1394095029405027, 1.5372647032660007, -0.22565891992045084, -3.683548180261647], [-1.4031970497258333, -1.2500542909857244, 2.3484311450755397, -0.11178753042543318, -3.5198344504407966], [-1.1896623473573023, -1.4964576394276254, 1.6305743495099392, 0.34164293876675284, -3.5071300545383575], [-1.1652949591528587, -0.8686767853569247, 2.104136746165245, 0.14382136586452704, -3.7351543298422634], [-1.4929857736116554, -1.522776883913122, 2.197785465633852, 0.16031809005412856, -3.3871016037246036], [-1.2854352370729898, -1.737366166201182, 2.1852796258156073, 0.17438349498341385, -3.574026908029861], [-1.1844126376699537, -0.8951382266593493, 1.2171295313385995, 0.16038592300091134, -3.6520498419881187], [-1.111787817664662, -1.2926933032112722, 1.1908063643294369, -0.14855274381623426, -3.5110488322831355], [-1.1269321460424215, -1.2439815449525295, 2.3329769380585064, 0.24214956116254405, -3.631625694135209], [-1.20381304501846, -1.1310511530018688, 1.463704575244765, -0.308521313052446, -3.6176020342208766], [-1.2685029486559984, -1.139404691925351, 1.1737758585027327, -0.3730837941371044, -3.924335606610126], [-1.0767920698312414, -1.334139474704537, 1.3833779999141727, -0.16747477112523768, -3.1815738696789495], [-1.1704524162579697, -1.5580000399442926, 1.3126242261022119, -0.13235342673949024, -3.005960852485835], [-1.4053430408928935, -1.2676045423879365, 1.9409897952796877, -0.22290684079394618, -3.944196913590699], [-1.3850764224611922, -1.3101735633715583, 1.9409402189204428, -0.10884213652253011, -3.8666696986245306], [-1.073897997494422, -1.2617387989522642, 1.9353575117155788, -0.4527118367329049, -3.286658485801374], [-1.1530191605857654, -1.1416309687324875, 1.8445816753641757, -0.730999718348487, -3.601552373910062], [-1.242331786545278, -1.1193099074969501, 1.8442264267358022, -0.5378705293526874, -3.7394684005228087], [-1.0888697291038272, -1.1277138695766076, 1.645951227480831, 0.14601945612609196, -3.6895830967674343], [-1.460168220251746, -1.4404296145857993, 1.5844316675021552, -0.13327506826067276, -3.544528113973006], [-1.3173797946012138, -1.5803760373931974, 1.6282501074776883, -0.47083897935685165, -3.3982553874642454], [-1.1711414205464035, -1.1621469849535584, 1.7871040203178499, -0.09581003738615146, -3.4461772566370605], [-0.9388483204466112, -1.142864221720454, 1.7516988871409245, -0.19422633712173104, -3.555710623700386], [-1.4630791843373574, -1.4598133185645892, 2.082666930759791, -0.054791753442368654, -3.3548241578393543], [-1.2298162228631488, -1.1518359756997476, 2.5930640662801228, -0.4841799509668229, -3.6805583973192646], [-0.8467605466604741, -1.304201117924521, 2.5869012701784744, -0.8281856808750467, -3.3827838568509176], [-1.2261992225597214, -0.8394516465301702, 2.439267407293864, -0.6028983267321414, -3.525218286969086], [-1.012382942319512, -1.2356205810387069, 3.0166434020810575, 0.6755006531038777, -3.5370592017503677], [-1.39013420802389, -1.27926516143753, 3.0912797027098673, 0.7562362063443169, -3.7616633990342496], [-1.2880128290277681, -1.0943026471838797, 3.21685983672388, 1.7245878237990733, -3.8452687706969173], [-1.3723885906928341, -1.4326730854437641, 3.7736662023193555, 0.6883040158616545, -3.3507929808187544], [-1.2098451224145215, -1.1610772434975107, 3.1057899963034235, 1.1443626805286151, -4.0538430432542345], [-1.616451234579607, -1.3779445033051705, 2.9305762517956824, 1.0883705966648478, -4.096493331227432], [-1.3436591560427416, -1.4393776846441784, 2.9015627542538973, 0.7161810472708748, -3.7945774405204706], [-1.050208120662339, -1.1371496572920716, 2.7076486568851084, 0.39790717111500873, -3.3004921131479703], [-1.3470311702580922, -1.4688837659115768, 1.5523952695167558, 0.1121153206345879, -3.5710377785993126], [-1.169843184437524, -1.048504029013293, 1.6498441806918986, -0.9013648922095485, -3.770979216925496], [-1.0947536310181503, -1.2662486968741424, 1.6821726392725092, -0.608561652131715, -3.2404547692806567], [-1.327202145479228, -1.3128800949352988, 1.8917320730940403, -0.6315325522382742, -3.8164741393840584], [-0.9283713115145842, -1.0298495948948612, 1.8981014291117344, -0.40175612443626363, -3.5729442378467478], [-1.3368600400057944, -1.197620806092774, 2.143634285425921, -0.25822760407380596, -3.494892321500864], [-1.3869010671619395, -1.2020421962878516, 1.8236102812024335, -0.5804568518685296, -3.6752726155082898], [-1.1774312344043594, -1.0010052049196994, 1.1236581387935691, -0.21142202463558246, -3.4388592577405896], [-1.176827174121809, -1.01788505876792, 2.5653608600148607, 0.33311648449845654, -3.6437856206798043], [-1.4538471358092362, -1.4060653817862234, 3.113355996712299, 0.4286386765464346, -3.580851951402112], [-1.1090422633991963, -1.3181040976311196, 3.2610921354052116, 0.1253047876659517, -3.5815870563052683], [-1.1101680381814092, -1.328110732115784, 3.1552421098087216, 0.16471102600907256, -3.722120620340135], [-1.2373635397519425, -1.2536535938654663, 3.0797655723389967, 0.014726544765324562, -3.837254661698188], [-1.0492376291948975, -1.023723981895422, 0.43183009813929707, -0.5963033112535111, -3.680101548269902], [-1.3269201196945009, -1.092960747170735, 0.34734920325169155, -0.28120863021512416, -3.8825260522509257], [-1.3095016172499532, -1.2710105982386708, 0.36593527998566777, -0.043970408496871935, -3.2274096621645683], [-1.3310332185020726, -1.0988281124598436, 1.8871407776004028, 0.3907379049964756, -3.6433227751887913], [-0.9236439718577657, -1.1975102203760355, 1.5097937987939818, 0.7424221851690983, -3.3816632357317324], [-1.1588120175064365, -0.9133839643288586, 0.9982671586810866, 0.646579283931622, -3.70266904886546], [-0.9333252032079411, -1.2355512164642546, 1.9656536449490156, 0.5510368091874227, -3.438270724126564], [-0.9019228857314717, -1.1452148195784377, 2.021745380276694, 0.6968002794594834, -3.638698606418915], [-0.9727021714536384, -1.020585447413073, 2.1003407730922303, 0.6217691067152321, -3.37653316461199], [-1.2963486305556544, -1.0351621189504967, 2.2971932666001074, 0.9126824672966029, -3.5673694313304], [-1.1010196647462391, -1.344805230716355, 2.825925377099402, -0.1557318728521475, -3.511974222380781], [-1.0549213905928085, -1.2961697931308995, 1.2812629689991037, -0.16257943698598415, -3.472438478578568], [-1.5182323193412686, -1.264724223157847, 0.44131533392370315, -0.24949816383165888, -3.6623272454400246], [-1.4550022838133576, -1.4524676811840362, 0.34370034801425975, -0.13302766401456267, -3.79503241075326], [-1.1032707660567629, -1.1112232959919206, 0.5566989147923087, -0.1329695394944699, -3.7004313935534445], [-1.5509915639592575, -1.5436496418581203, 0.9194019029338525, -0.26962338897044796, -3.3899937739906183], [-1.0500669917501917, -1.2156195045486904, 1.5265996744499122, -0.3672810792823283, -3.626744959185815], [-1.5195317654039686, -1.3630260724061893, 1.9874098161248521, -0.17141851294677335, -3.5758441065109023], [-1.1752323529654456, -1.396682340055174, 2.00100647725284, -0.35253055647715037, -3.6193736686162743], [-1.460176127406233, -1.2364073026741207, 1.8571910608230502, -0.3419922173658919, -3.62811390385318], [-1.229591270963195, -1.5654935377044283, 2.1077930832634086, -0.8617243081254415, -3.5295133235502028], [-1.184456285420395, -1.2054449861755099, 1.7929796023674491, 0.2753242999185974, -3.793249309284373], [-1.3021398293735196, -1.3523641327914129, 2.2519212983879524, -0.1367471799423222, -3.4520237958685924], [-1.217053631416415, -1.322559435610966, 2.2055247051167446, -0.09311379078257472, -3.1965569691875877], [-1.2977405751370643, -1.60785615206792, 2.519015247395891, 0.28371178507340433, -3.730174457302965], [-1.6563109156986098, -1.4523524699456902, 2.360308361571796, 0.332258916108736, -3.5604781209550356], [-1.7334457353833999, -1.2970910796583142, 2.456998691906022, 0.4147749672187873, -3.5004934462453217], [-0.7970695770709022, -0.8863346686667568, 2.8826172163793764, 0.0011653444997297424, -3.594330009621272], [-1.6554951104782902, -1.5177964170224856, 2.246990304659414, 0.23583237558173376, -3.73254208719622], [-1.5562203488504802, -1.4897155097187542, 2.1253264838563615, 0.0071386150253332364, -4.081876027671128], [-1.3220168607502176, -1.4735219422508306, 1.6772774072900638, 0.12211743163895025, -3.569658188814092], [-1.1902404148015193, -1.2739078523526746, 1.8904141952101199, -0.007554803897895757, -3.7684027515526006], [-1.2600021974733855, -1.2567240494174687, 2.0222928559491424, -0.05738863558971148, -3.6665602553785805], [-1.3441101674461544, -1.2790470789197155, 1.6098847779354444, -0.07374636890932029, -3.473943765684911], [-1.3395656810577308, -1.2475895238769552, 1.6499296407635582, -0.8872488335922766, -3.75513395465803], [-1.15691318954418, -1.1495494384717084, 1.8300759305133163, 0.7760211784930066, -3.937611745665807], [-1.1805908886640262, -1.4235311040047456, 2.7440609612576523, 0.5451837515419957, -3.4308333983615267], [-1.3403705510229187, -1.2345937899048582, 2.6986864200113314, 0.4298971758192405, -3.8343546569650484], [-1.2494935945103998, -1.3791348874786247, 2.7943646043284436, 0.6194858592725696, -3.402492216324342], [-1.575494536974107, -1.4533944554806097, 2.3801931065565762, 0.45088343263666314, -3.8166150568537422], [-1.5840495253327953, -1.690725394024221, 2.347778613905563, 0.4514210378537022, -3.7476731365865947], [-1.619977668655183, -1.3273955178602115, 2.5592624120161407, 0.5626578096670434, -3.444330854381326], [-1.001622311016387, -1.4841007624934814, 2.478360688139961, 0.4940705020061141, -3.5987024727564627], [-1.386970164969837, -1.308234876375552, 1.687857820848645, -0.002131684172253845, -3.6863374186035625], [-1.401680092072013, -1.382355756376351, 1.468641429205083, -0.6056579565145397, -3.7920450155489394], [-1.2702254847142593, -1.3750845321494147, 1.886097639043606, 0.15346524214760085, -3.381972121343837], [-1.1697186303020806, -1.4205956246498153, 1.9457207951467421, 0.009699256606692963, -3.401656832796118], [-1.6315452853952406, -1.5281988726301323, 1.893960526681825, 0.018096138504789736, -3.7363225777249616], [-0.9069731446886223, -1.088692595173676, 1.7556142230946754, -0.879158419077147, -3.4280892565300607], [-1.0839031262367849, -1.1169171715682409, 1.6610890611277564, -0.9234445501931465, -3.727760548149112], [-1.10340499360265, -1.1618546201796067, 2.5378511980115905, 1.0650861522163773, -3.7223531307585156], [-1.299909808108848, -1.2045036136190477, 1.7337115526149411, -0.6082321115653024, -3.72830925985935], [-1.1319856284282426, -1.4848112290972497, 1.989829055362687, -0.501128738827505, -3.518488097382584], [-1.2545940202841857, -1.1633882144305412, 2.302578385600534, -0.03585558783860336, -3.5903246448243733], [-1.1606683796707553, -1.2267689361771767, 2.3586568219809623, 0.03765029043287796, -3.557815215351819], [-1.142697045543625, -1.3018451230850407, 2.1263411977205386, -0.6672980372869571, -3.685618563678434], [-1.1662906633788939, -1.2557713153050947, 2.6202847552570443, 0.5497259300752566, -3.7794758605428878], [-1.2325271953110783, -1.3397373009210574, 1.694544186395181, 0.3110191494513543, -3.6731802667076594], [-1.158457417358059, -1.2450019332738544, 1.980624703541532, -0.44533409390255885, -3.639762410902339], [-1.3925978419334253, -1.388128306248417, 2.020565154946121, 0.22996446581568553, -3.600926998834555], [-1.2236783989711963, -1.0790686949121815, 2.231432088075542, -0.010885556428839274, -3.6333074846274394], [-1.0528230234440534, -1.1813555652851995, 2.0588306641031515, -0.1921243163662439, -3.501735586974378], [-1.086475345344594, -0.9210804927901217, 2.015577187999209, -0.6746001211377856, -3.4887712262268393], [-1.2979170998804095, -1.7992777155594288, 2.2443945375896592, -0.2609268251265362, -3.7100535339821366], [-1.2430232921788587, -0.8126301245489281, 1.6216994570383496, -0.515166646554585, -3.5862553082202733], [-1.1561912382419288, -0.9310705941028388, 1.7552477951177077, -0.39527779701617766, -3.5490578266852655], [-1.188124859611288, -1.3569803021234397, 1.1089209247300125, 0.21838024324124214, -3.7165610966624034], [-1.3460198434818484, -1.2100990107221028, 1.0809088532453053, 0.3470586999043337, -3.861735376481095], [-1.3575703660393421, -1.5354153768926992, 0.8290513987928432, 0.2695947099250975, -3.6497906779608207], [-0.929918085532293, -0.8313962134518901, 1.4593754928349114, -0.5934531134764737, -3.621079427701566], [-1.1643046771195629, -1.0852248810633731, 1.9125148642658591, -0.274282886503617, -3.63765303475075], [-1.2091754735354507, -1.2248635002032813, 2.0848935002780964, -0.48287970518476087, -3.2865327416808245], [-1.3935481280061208, -1.3198083827430271, 2.1854273942669344, -0.1422774137176948, -3.8843813843899797], [-1.3215529326306823, -1.390085897156439, 2.4240796952823374, -0.001421648762424406, -3.3266441451711435], [-1.218986226150118, -1.2950087534165517, 2.598949553026797, -0.22592493547051234, -3.8794723804460194], [-1.165459081316429, -1.2983358207774665, 1.3371105120362285, -0.14748114079838204, -3.5134512657186714], [-1.2371327240564978, -1.2771924967412556, 1.030979422698572, -0.38169152351146146, -3.5471675988673343], [-1.212938858297711, -1.1691822668259375, 0.8460922825937217, -0.45891600256464743, -3.7504979063243526], [-1.1304816747703614, -0.8937426943730795, 0.8356878131726249, -0.44835683385831293, -3.57990136542884], [-1.1606066144354046, -1.2098564434558785, 3.7094148780232192, 0.7130715633459057, -3.74401863875407]], NamedTuple[(n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = -25.978825369190815, hamiltonian_energy = 30.47821347924657, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 785.7579450855411, tree_depth = 1, numerical_error = false, step_size = 0.4, nom_step_size = 0.4, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = -25.978825369190815, hamiltonian_energy = 27.030457277438085, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 3.585220069257301e9, tree_depth = 0, numerical_error = true, step_size = 0.9340259163636535, nom_step_size = 0.9340259163636535, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -10.680830168906393, hamiltonian_energy = 27.664458027326045, hamiltonian_energy_error = -0.1805913110914723, max_hamiltonian_energy_error = -0.5980352848367616, tree_depth = 3, numerical_error = false, step_size = 0.09209433883419865, nom_step_size = 0.09209433883419865, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -10.18599509002459, hamiltonian_energy = 15.200460111455717, hamiltonian_energy_error = -0.6176528772886947, max_hamiltonian_energy_error = -1.0088931189092545, tree_depth = 3, numerical_error = false, step_size = 0.09591656221537206, nom_step_size = 0.09591656221537206, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.8776937357842899, log_density = -6.852437686617884, hamiltonian_energy = 13.030546134729066, hamiltonian_energy_error = -0.4713269442767416, max_hamiltonian_energy_error = 0.6193216902994685, tree_depth = 3, numerical_error = false, step_size = 0.12973296357918182, nom_step_size = 0.12973296357918182, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9781414977934949, log_density = -4.739011263908514, hamiltonian_energy = 7.198306896602736, hamiltonian_energy_error = -0.414603730166597, max_hamiltonian_energy_error = -0.6577622361921893, tree_depth = 2, numerical_error = false, step_size = 0.1408899152157039, nom_step_size = 0.1408899152157039, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.31660780989648585, log_density = -4.392648117695034, hamiltonian_energy = 5.834645148466063, hamiltonian_energy_error = -0.20381545589356964, max_hamiltonian_energy_error = 4.539281791114129, tree_depth = 2, numerical_error = false, step_size = 0.22210433557668907, nom_step_size = 0.22210433557668907, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9997740833946888, log_density = -3.356256263693398, hamiltonian_energy = 4.67107458530218, hamiltonian_energy_error = -0.010294614422467596, max_hamiltonian_energy_error = -0.031578063433142844, tree_depth = 3, numerical_error = false, step_size = 0.04701969122312232, nom_step_size = 0.04701969122312232, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.8889617643506793, log_density = -6.151131894898141, hamiltonian_energy = 10.68986286875506, hamiltonian_energy_error = -0.04593545161714019, max_hamiltonian_energy_error = 0.2650943526123424, tree_depth = 4, numerical_error = false, step_size = 0.08439433910556542, nom_step_size = 0.08439433910556542, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9876167692042925, log_density = -4.3982818941871535, hamiltonian_energy = 7.3482019520192114, hamiltonian_energy_error = 0.011848669493152109, max_hamiltonian_energy_error = -0.1835449049363964, tree_depth = 3, numerical_error = false, step_size = 0.10970253269492786, nom_step_size = 0.10970253269492786, is_adapt = true), (n_steps = 11, is_accept = true, acceptance_rate = 0.9898073322970049, log_density = -4.5156356487564615, hamiltonian_energy = 6.102355729476992, hamiltonian_energy_error = -0.28318342602325686, max_hamiltonian_energy_error = -0.6867342049627192, tree_depth = 3, numerical_error = false, step_size = 0.19756692877453116, nom_step_size = 0.19756692877453116, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.042453892566128575, log_density = -4.5156356487564615, hamiltonian_energy = 5.199583578549572, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 1131.1775344945704, tree_depth = 1, numerical_error = true, step_size = 0.3610557276466681, nom_step_size = 0.3610557276466681, is_adapt = true), (n_steps = 47, is_accept = true, acceptance_rate = 0.99662058680094, log_density = -7.6355215980185065, hamiltonian_energy = 8.835218893527559, hamiltonian_energy_error = 0.01074662051446218, max_hamiltonian_energy_error = 0.012817673532328655, tree_depth = 5, numerical_error = false, step_size = 0.033468991058625774, nom_step_size = 0.033468991058625774, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9992198973396745, log_density = -8.102022933507092, hamiltonian_energy = 10.086299058862805, hamiltonian_energy_error = -0.023742800989728252, max_hamiltonian_energy_error = -0.10045409711644382, tree_depth = 4, numerical_error = false, step_size = 0.0633213208560225, nom_step_size = 0.0633213208560225, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9984724272868887, log_density = -5.474759247551322, hamiltonian_energy = 8.947732810032731, hamiltonian_energy_error = -0.18722719606716254, max_hamiltonian_energy_error = -0.2382260103164242, tree_depth = 4, numerical_error = false, step_size = 0.12056173297749781, nom_step_size = 0.12056173297749781, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.35837918400895535, log_density = -6.584491594151867, hamiltonian_energy = 7.874093906101626, hamiltonian_energy_error = 0.415709409361507, max_hamiltonian_energy_error = 4.868191094669002, tree_depth = 3, numerical_error = false, step_size = 0.22796400350408655, nom_step_size = 0.22796400350408655, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9778427300250583, log_density = -7.128302502580517, hamiltonian_energy = 8.42168378455715, hamiltonian_energy_error = 0.015597298668136972, max_hamiltonian_energy_error = 0.058847155062226264, tree_depth = 3, numerical_error = false, step_size = 0.05975186179173992, nom_step_size = 0.05975186179173992, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.8891662997903488, log_density = -5.93888615333471, hamiltonian_energy = 9.44433719044751, hamiltonian_energy_error = -0.12927482608173158, max_hamiltonian_energy_error = 0.40421753759141943, tree_depth = 2, numerical_error = false, step_size = 0.10610930181021838, nom_step_size = 0.10610930181021838, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.48049257098379056, log_density = -9.253272166025852, hamiltonian_energy = 11.317655471289186, hamiltonian_energy_error = 0.013133405031268808, max_hamiltonian_energy_error = 1.2886617042664028, tree_depth = 3, numerical_error = false, step_size = 0.14299981862519495, nom_step_size = 0.14299981862519495, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9996409483355632, log_density = -7.858361703428102, hamiltonian_energy = 11.03584526675123, hamiltonian_energy_error = -0.017477166148175627, max_hamiltonian_energy_error = -0.06902316372873862, tree_depth = 5, numerical_error = false, step_size = 0.056209975001212865, nom_step_size = 0.056209975001212865, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9909460290908163, log_density = -9.232489813016691, hamiltonian_energy = 10.412597626500478, hamiltonian_energy_error = 0.030644777255796285, max_hamiltonian_energy_error = -0.14629968595659903, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9819568596888784, log_density = -6.711166724274237, hamiltonian_energy = 10.215659748415085, hamiltonian_energy_error = 0.021668479988919742, max_hamiltonian_energy_error = -0.212417298759922, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9929674700323051, log_density = -4.3609118427282905, hamiltonian_energy = 8.462666450305761, hamiltonian_energy_error = -0.1412112760313562, max_hamiltonian_energy_error = -0.2380375795569165, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9941164483697875, log_density = -3.436104375541456, hamiltonian_energy = 5.1024129265366955, hamiltonian_energy_error = -0.05920723461369626, max_hamiltonian_energy_error = -0.05920723461369626, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6899240357857044, log_density = -5.107273062936487, hamiltonian_energy = 8.903387621642192, hamiltonian_energy_error = 0.34077419436635736, max_hamiltonian_energy_error = 0.5103643329449383, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9865511560997562, log_density = -5.746441198590361, hamiltonian_energy = 7.613365199788515, hamiltonian_energy_error = 0.02989951545317382, max_hamiltonian_energy_error = -0.1752041941696234, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9348916588264219, log_density = -7.357541371811051, hamiltonian_energy = 10.793264878751357, hamiltonian_energy_error = 0.17570972865777001, max_hamiltonian_energy_error = -0.23265804036978288, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = -5.272741744822991, hamiltonian_energy = 8.2028474319382, hamiltonian_energy_error = -0.3329070957938747, max_hamiltonian_energy_error = -0.39734400407811776, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8483694851973324, log_density = -8.870307251922881, hamiltonian_energy = 10.145840020529572, hamiltonian_energy_error = 0.3208505093127787, max_hamiltonian_energy_error = 0.3850422620291791, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9810653688356493, log_density = -9.192361557361636, hamiltonian_energy = 12.05312058779272, hamiltonian_energy_error = 0.028750020680766042, max_hamiltonian_energy_error = -0.3687905411344783, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9705726698302769, log_density = -5.262595304430519, hamiltonian_energy = 11.458304744723517, hamiltonian_energy_error = -0.15724739434203627, max_hamiltonian_energy_error = -0.29409435716791066, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9686851914811722, log_density = -7.278768930463027, hamiltonian_energy = 8.181729734637482, hamiltonian_energy_error = 0.05824499257423632, max_hamiltonian_energy_error = -0.17949146604630872, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9308237680389423, log_density = -5.845931517828063, hamiltonian_energy = 12.284083662257142, hamiltonian_energy_error = 0.061683032082608946, max_hamiltonian_energy_error = 0.27232845310363984, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9933297227953007, log_density = -3.7706611990278684, hamiltonian_energy = 7.322520861723835, hamiltonian_energy_error = -0.20770981826388812, max_hamiltonian_energy_error = -0.20770981826388812, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9871414214200052, log_density = -5.242605982633322, hamiltonian_energy = 5.4479642928503, hamiltonian_energy_error = 0.035834025528140856, max_hamiltonian_energy_error = -0.05247527526855844, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9466128250426128, log_density = -8.624794400272284, hamiltonian_energy = 9.158148980884816, hamiltonian_energy_error = 0.15104982585923388, max_hamiltonian_energy_error = 0.15104982585923388, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9984559200292619, log_density = -7.561908679194499, hamiltonian_energy = 10.644202923879721, hamiltonian_energy_error = -0.012787179232701007, max_hamiltonian_energy_error = -0.3304383639232089, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8775845610924239, log_density = -8.466940544908026, hamiltonian_energy = 14.756854258923802, hamiltonian_energy_error = -0.11729351328514426, max_hamiltonian_energy_error = 0.365525253210647, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9780040491757108, log_density = -7.349413385519458, hamiltonian_energy = 9.83731444408688, hamiltonian_energy_error = -0.031239867654122122, max_hamiltonian_energy_error = -0.17707286368567132, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8625630402169585, log_density = -8.735318879973976, hamiltonian_energy = 10.605102564441136, hamiltonian_energy_error = 0.22837007460253922, max_hamiltonian_energy_error = 0.2910337751852463, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9899176482817681, log_density = -8.295880702623894, hamiltonian_energy = 12.705977368800603, hamiltonian_energy_error = -0.1424804843340759, max_hamiltonian_energy_error = -0.5917033558023874, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9318948404617664, log_density = -5.592621334655243, hamiltonian_energy = 13.89611248082883, hamiltonian_energy_error = -0.03426529405170342, max_hamiltonian_energy_error = 0.22698790112794498, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8941312801615381, log_density = -4.940582937318869, hamiltonian_energy = 7.097700217497718, hamiltonian_energy_error = 0.07615526737339184, max_hamiltonian_energy_error = 0.1614943901727477, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9919892682926393, log_density = -5.0579480468755165, hamiltonian_energy = 5.529468453932271, hamiltonian_energy_error = 0.04248102833264511, max_hamiltonian_energy_error = -0.11015948815702004, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9932310206901855, log_density = -3.8407788703859254, hamiltonian_energy = 7.325709150772847, hamiltonian_energy_error = 0.003387279921911457, max_hamiltonian_energy_error = -0.1601532964775343, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9416619764735081, log_density = -5.149058333081943, hamiltonian_energy = 6.299149959490689, hamiltonian_energy_error = -0.10420289389111659, max_hamiltonian_energy_error = -0.21647398231193637, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9995306951236659, log_density = -3.735536798992152, hamiltonian_energy = 5.95664489178522, hamiltonian_energy_error = -0.10417215627032661, max_hamiltonian_energy_error = -0.10417215627032661, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9781391083018924, log_density = -5.644565724855269, hamiltonian_energy = 7.151076555997989, hamiltonian_energy_error = 0.05270794575323556, max_hamiltonian_energy_error = 0.05684822541725687, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9567478954572722, log_density = -3.90362453722385, hamiltonian_energy = 8.110555879181154, hamiltonian_energy_error = -0.14835586578671034, max_hamiltonian_energy_error = -0.14835586578671034, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9918597942304745, log_density = -4.981256400602652, hamiltonian_energy = 6.299767972140617, hamiltonian_energy_error = 0.017071159463070806, max_hamiltonian_energy_error = -0.059729057668082675, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9979192211475668, log_density = -3.6019404816086027, hamiltonian_energy = 6.920090250314724, hamiltonian_energy_error = -0.06752965401488087, max_hamiltonian_energy_error = -0.10509712702257534, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8355666990693237, log_density = -3.3712485727691615, hamiltonian_energy = 7.218755705044298, hamiltonian_energy_error = 0.033310201380260196, max_hamiltonian_energy_error = 0.32377131126255954, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8914613141928068, log_density = -6.021576414817668, hamiltonian_energy = 8.656540704855633, hamiltonian_energy_error = 0.04926939164384336, max_hamiltonian_energy_error = 0.20725477358273636, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9814163637436626, log_density = -5.46169986553763, hamiltonian_energy = 10.095570682119735, hamiltonian_energy_error = -0.0325270613376194, max_hamiltonian_energy_error = 0.08511954955631751, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.978552980910953, log_density = -4.955791285019501, hamiltonian_energy = 6.040527403099515, hamiltonian_energy_error = 0.032125788128579025, max_hamiltonian_energy_error = 0.04613163345441418, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9462436701000234, log_density = -5.822712414170896, hamiltonian_energy = 8.073416651613009, hamiltonian_energy_error = 0.11826564225544534, max_hamiltonian_energy_error = 0.18231382258796902, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9948950545661239, log_density = -6.813457901043167, hamiltonian_energy = 8.774879867542435, hamiltonian_energy_error = -0.0483475787149974, max_hamiltonian_energy_error = -0.16140203664902053, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9674794976939209, log_density = -7.121645986497924, hamiltonian_energy = 9.601744611266994, hamiltonian_energy_error = 0.08865687377577913, max_hamiltonian_energy_error = -0.1353366729441099, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8685900030737864, log_density = -7.696627479878211, hamiltonian_energy = 12.008468454914949, hamiltonian_energy_error = 0.1539609558184889, max_hamiltonian_energy_error = 0.26631714125063155, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9434392730179709, log_density = -4.43759099143719, hamiltonian_energy = 10.310985400643563, hamiltonian_energy_error = -0.1545773078263899, max_hamiltonian_energy_error = -0.17285090633742684, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = -4.414327133935149, hamiltonian_energy = 5.636014199021877, hamiltonian_energy_error = -0.04619113829535504, max_hamiltonian_energy_error = -0.10728528859744024, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9659620489891985, log_density = -4.4723067637113285, hamiltonian_energy = 6.73079044459171, hamiltonian_energy_error = 0.04124646392020814, max_hamiltonian_energy_error = 0.13133747782700844, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9956144996417106, log_density = -4.623515142744383, hamiltonian_energy = 5.034900821890893, hamiltonian_energy_error = 0.006434559929274997, max_hamiltonian_energy_error = -0.09635060770309511, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9359997522248784, log_density = -4.795619807763956, hamiltonian_energy = 6.820310687222229, hamiltonian_energy_error = -0.017755823186136332, max_hamiltonian_energy_error = 0.15133499920232296, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -3.7292437742591744, hamiltonian_energy = 5.299827622200901, hamiltonian_energy_error = -0.08602187826079888, max_hamiltonian_energy_error = -0.11229664793530869, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9241392735205716, log_density = -5.189857142834702, hamiltonian_energy = 6.401739117512586, hamiltonian_energy_error = 0.10597129538248407, max_hamiltonian_energy_error = 0.1455194003911231, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9194761264269342, log_density = -6.302677429833684, hamiltonian_energy = 6.434809359107494, hamiltonian_energy_error = 0.1763065577558267, max_hamiltonian_energy_error = 0.1763065577558267, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9208759297132486, log_density = -4.211655806884464, hamiltonian_energy = 8.648336988422885, hamiltonian_energy_error = -0.29339582178517354, max_hamiltonian_energy_error = -0.5151867297740491, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9849263386632405, log_density = -4.683382484634663, hamiltonian_energy = 5.809809311625443, hamiltonian_energy_error = -0.005476850947264467, max_hamiltonian_energy_error = -0.10163123809415531, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9969021539515925, log_density = -2.977732099121649, hamiltonian_energy = 5.4012889372805155, hamiltonian_energy_error = -0.09626026160210976, max_hamiltonian_energy_error = -0.09626026160210976, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8327370177271151, log_density = -5.717963715042025, hamiltonian_energy = 7.603662331786541, hamiltonian_energy_error = 0.27793825867759825, max_hamiltonian_energy_error = 0.27793825867759825, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6001082897209807, log_density = -9.61415235935171, hamiltonian_energy = 10.606432424534294, hamiltonian_energy_error = 0.6624691975124204, max_hamiltonian_energy_error = 0.7860374082496069, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9695172218477517, log_density = -11.037591771463271, hamiltonian_energy = 12.348583475412061, hamiltonian_energy_error = 0.0787623801857329, max_hamiltonian_energy_error = -0.6941858546827717, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8963102737367836, log_density = -9.251548743245726, hamiltonian_energy = 20.138464302105838, hamiltonian_energy_error = -0.02439533009208361, max_hamiltonian_energy_error = -1.0498216410277799, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -5.464605749645035, hamiltonian_energy = 10.38178047532661, hamiltonian_energy_error = -0.3234132477617404, max_hamiltonian_energy_error = -0.4030791196958141, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9816961736184785, log_density = -4.851331421700486, hamiltonian_energy = 7.740891579076125, hamiltonian_energy_error = -0.08468695700067919, max_hamiltonian_energy_error = -0.2113007490031169, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9669209875358117, log_density = -3.2511456354526906, hamiltonian_energy = 7.09400350227536, hamiltonian_energy_error = -0.12798092059790545, max_hamiltonian_energy_error = 0.1324898160183574, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9374934972180174, log_density = -3.4068235335874792, hamiltonian_energy = 5.380423490985773, hamiltonian_energy_error = 0.03283817974001302, max_hamiltonian_energy_error = 0.1401732374957687, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8840026610703702, log_density = -5.730195402817845, hamiltonian_energy = 7.156435069105507, hamiltonian_energy_error = 0.08542592112288361, max_hamiltonian_energy_error = 0.2612548595954651, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9044591963041915, log_density = -6.84381962242762, hamiltonian_energy = 8.589986436553906, hamiltonian_energy_error = 0.16944667905958255, max_hamiltonian_energy_error = 0.22686415029591878, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9967097351672777, log_density = -6.596995916941609, hamiltonian_energy = 7.871352791462192, hamiltonian_energy_error = 0.02853377352915132, max_hamiltonian_energy_error = -0.31916728718186427, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9840635895284128, log_density = -8.757440421259918, hamiltonian_energy = 10.610745476503238, hamiltonian_energy_error = -0.047156935357266505, max_hamiltonian_energy_error = -0.37921146372482184, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9947151122381224, log_density = -4.396269753560794, hamiltonian_energy = 11.871012962957465, hamiltonian_energy_error = -0.3987669422852633, max_hamiltonian_energy_error = -0.3987669422852633, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8081221309047242, log_density = -6.195195680385861, hamiltonian_energy = 8.593647341316002, hamiltonian_energy_error = 0.2764745839587288, max_hamiltonian_energy_error = 0.4255854761208919, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9790803389703532, log_density = -4.342964873134084, hamiltonian_energy = 7.3973744802312495, hamiltonian_energy_error = -0.22801794356912986, max_hamiltonian_energy_error = -0.22801794356912986, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8595468001549433, log_density = -6.032334749218718, hamiltonian_energy = 7.4121914298883524, hamiltonian_energy_error = 0.087626141794658, max_hamiltonian_energy_error = 0.21279934537275746, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9958299092658808, log_density = -2.8770560462529957, hamiltonian_energy = 6.555877458718863, hamiltonian_energy_error = -0.09465917706133098, max_hamiltonian_energy_error = -0.10630809996202473, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5108947181453836, log_density = -6.533402677140593, hamiltonian_energy = 9.012191444129993, hamiltonian_energy_error = 0.7179244108804141, max_hamiltonian_energy_error = 0.8296646588118186, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 1.0, log_density = -5.200273823309514, hamiltonian_energy = 7.288611215023455, hamiltonian_energy_error = -0.21456329832770482, max_hamiltonian_energy_error = -0.5579390155654602, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9923649338109023, log_density = -5.168772614873632, hamiltonian_energy = 6.5665662339291515, hamiltonian_energy_error = 0.019051829436628864, max_hamiltonian_energy_error = -0.2280062783909571, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9561131062080998, log_density = -3.0828147203621725, hamiltonian_energy = 5.906457685177536, hamiltonian_energy_error = -0.30658680909108327, max_hamiltonian_energy_error = -0.30658680909108327, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9715502324849359, log_density = -3.467454528923824, hamiltonian_energy = 4.374539414938415, hamiltonian_energy_error = 0.007177528850179193, max_hamiltonian_energy_error = 0.06366862932871875, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9453301833057901, log_density = -3.241976920071604, hamiltonian_energy = 4.460690200168727, hamiltonian_energy_error = 0.09598177431897703, max_hamiltonian_energy_error = 0.116867801840419, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9732024684654089, log_density = -4.5036589844694035, hamiltonian_energy = 5.407913396390432, hamiltonian_energy_error = 0.03663728014947587, max_hamiltonian_energy_error = 0.09398334477640091, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9777108655401353, log_density = -4.89018168057974, hamiltonian_energy = 5.9223973127915315, hamiltonian_energy_error = 0.06247351781915533, max_hamiltonian_energy_error = -0.10187280058031423, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.991704932054933, log_density = -5.8221639634868545, hamiltonian_energy = 6.861790537130117, hamiltonian_energy_error = 1.0837684172315676e-7, max_hamiltonian_energy_error = -0.2030874442334234, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9499579880331525, log_density = -5.39606124427189, hamiltonian_energy = 9.811240558921217, hamiltonian_energy_error = -0.030248745577413416, max_hamiltonian_energy_error = 0.22016763239125225, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9470891776602731, log_density = -3.4502197224829274, hamiltonian_energy = 6.247876869139301, hamiltonian_energy_error = -0.062433427713726175, max_hamiltonian_energy_error = 0.16018955486448228, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9132916953952345, log_density = -3.9859900053338553, hamiltonian_energy = 6.61207359014587, hamiltonian_energy_error = 0.09010702904566958, max_hamiltonian_energy_error = 0.20073358592363988, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.858654072846995, log_density = -3.5339884591472988, hamiltonian_energy = 6.017114598077186, hamiltonian_energy_error = 0.01578401572549204, max_hamiltonian_energy_error = 0.39002556714132464, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9716429320022136, log_density = -3.725256533285858, hamiltonian_energy = 5.0166024108686, hamiltonian_energy_error = 0.024801792471327744, max_hamiltonian_energy_error = 0.06502588551547728, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8412040605764365, log_density = -3.725256533285858, hamiltonian_energy = 7.801464286560752, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 0.445080666443622, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9890752612318335, log_density = -4.344429772564629, hamiltonian_energy = 5.448563675527119, hamiltonian_energy_error = 0.04467555157574221, max_hamiltonian_energy_error = -0.0637566808304646, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9298542534159647, log_density = -3.6522322828742855, hamiltonian_energy = 5.905485016545991, hamiltonian_energy_error = 0.03862010503849156, max_hamiltonian_energy_error = 0.20140728529559038, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9396811794225678, log_density = -4.1080946665903095, hamiltonian_energy = 4.576688583111241, hamiltonian_energy_error = 0.11994831202369838, max_hamiltonian_energy_error = -0.14541005778846738, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9602112803669489, log_density = -3.9065803826322796, hamiltonian_energy = 5.490136697876256, hamiltonian_energy_error = -0.09397383486849797, max_hamiltonian_energy_error = -0.35704331546347845, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9939598485701145, log_density = -2.8874097532923084, hamiltonian_energy = 4.29023989972907, hamiltonian_energy_error = -0.12485880178492703, max_hamiltonian_energy_error = -0.1421931390223241, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.999903840148496, log_density = -2.6627164712715228, hamiltonian_energy = 3.02359771640284, hamiltonian_energy_error = -0.06316618163543186, max_hamiltonian_energy_error = -0.06973521662397353, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9109160960357042, log_density = -4.770394966618138, hamiltonian_energy = 6.564749687430405, hamiltonian_energy_error = 0.14241368962526124, max_hamiltonian_energy_error = 0.1442797752005749, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9302730945816335, log_density = -5.924872792937222, hamiltonian_energy = 7.433409447071507, hamiltonian_energy_error = -0.083921344662099, max_hamiltonian_energy_error = 0.2509341101593403, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7675862297378322, log_density = -8.609919060312459, hamiltonian_energy = 11.772432179079328, hamiltonian_energy_error = 0.4979397527025622, max_hamiltonian_energy_error = 0.5594111444408139, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.9963032697864507, log_density = -7.107587085937055, hamiltonian_energy = 11.34094866510935, hamiltonian_energy_error = -0.031567119940852706, max_hamiltonian_energy_error = -0.7595721907527473, tree_depth = 5, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9667625215655969, log_density = -4.891421064139362, hamiltonian_energy = 9.651133576497738, hamiltonian_energy_error = -0.7359826292245533, max_hamiltonian_energy_error = -0.7992128261485618, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9364320086254209, log_density = -4.956948905630833, hamiltonian_energy = 6.949694669349434, hamiltonian_energy_error = 0.06329814558914126, max_hamiltonian_energy_error = 0.15957444566126178, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9404172619036226, log_density = -5.159812137391607, hamiltonian_energy = 8.330980433671696, hamiltonian_energy_error = 0.05403171045456823, max_hamiltonian_energy_error = -0.21719714527737466, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9668490399279702, log_density = -8.240713794625218, hamiltonian_energy = 9.139056141730014, hamiltonian_energy_error = 0.18500538159704938, max_hamiltonian_energy_error = 0.18500538159704938, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -7.5014816460590765, hamiltonian_energy = 10.637126298055929, hamiltonian_energy_error = -0.20815865644006237, max_hamiltonian_energy_error = -0.3908653721716888, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.9833794097722026, log_density = -5.358983464544011, hamiltonian_energy = 9.258042960464387, hamiltonian_energy_error = -0.03982208945299881, max_hamiltonian_energy_error = -0.1658342347517454, tree_depth = 5, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9238335383306497, log_density = -3.8267352373814045, hamiltonian_energy = 9.42516542323162, hamiltonian_energy_error = -0.04429196664204049, max_hamiltonian_energy_error = 0.3249587473908857, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9998285033095219, log_density = -2.8830862196870015, hamiltonian_energy = 4.196212554558281, hamiltonian_energy_error = -0.050624322655616005, max_hamiltonian_energy_error = -0.06201218585368462, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.837788592082887, log_density = -5.920076465052613, hamiltonian_energy = 8.069358988127803, hamiltonian_energy_error = 0.26096912582170084, max_hamiltonian_energy_error = 0.44873079050841547, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9370331514831998, log_density = -5.845826046621953, hamiltonian_energy = 7.714400601520015, hamiltonian_energy_error = -0.06696222957089937, max_hamiltonian_energy_error = -0.3120443703578166, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9534203980968466, log_density = -7.115932972196427, hamiltonian_energy = 10.007259999526848, hamiltonian_energy_error = -0.019728060954209425, max_hamiltonian_energy_error = 0.23813498706835112, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8868585445682353, log_density = -7.119649203480014, hamiltonian_energy = 12.327202623690317, hamiltonian_energy_error = -0.03371789349218268, max_hamiltonian_energy_error = 0.2648602241342157, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9719922766155626, log_density = -7.357695332112854, hamiltonian_energy = 10.272561483424337, hamiltonian_energy_error = -0.05969390708675881, max_hamiltonian_energy_error = -0.22869322038621398, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9717679024621371, log_density = -5.2572446545785105, hamiltonian_energy = 8.74649648310659, hamiltonian_energy_error = -0.02928559628592531, max_hamiltonian_energy_error = -0.15283230564450712, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8655200165804038, log_density = -9.11872387568529, hamiltonian_energy = 9.409890700060238, hamiltonian_energy_error = 0.2528217705427469, max_hamiltonian_energy_error = 0.25734640495415917, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8966214675080321, log_density = -7.664569803720251, hamiltonian_energy = 12.446670089268, hamiltonian_energy_error = 0.018261895297065678, max_hamiltonian_energy_error = 0.32480120072904484, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.999076754539633, log_density = -7.013070668263831, hamiltonian_energy = 9.110118561092236, hamiltonian_energy_error = -0.015937534843930123, max_hamiltonian_energy_error = -0.35077522259544125, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8590461993661687, log_density = -8.074895910351014, hamiltonian_energy = 10.193592464461105, hamiltonian_energy_error = 0.2030420489866671, max_hamiltonian_energy_error = 0.4074485105835315, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -5.7692841405191935, hamiltonian_energy = 9.495776794383094, hamiltonian_energy_error = -0.04239412963832301, max_hamiltonian_energy_error = -0.5286779428758308, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9910893441425713, log_density = -3.4965495998753156, hamiltonian_energy = 7.248435758888813, hamiltonian_energy_error = -0.25744054862769605, max_hamiltonian_energy_error = -0.25744054862769605, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9931096588078944, log_density = -3.9390983940652937, hamiltonian_energy = 5.044649354532512, hamiltonian_energy_error = 0.025141266155634945, max_hamiltonian_energy_error = -0.04892698009574836, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9917798161939038, log_density = -3.374337066323326, hamiltonian_energy = 4.636195971924333, hamiltonian_energy_error = 0.03140963380866779, max_hamiltonian_energy_error = -0.07549198440807547, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9907589212090558, log_density = -3.5939515091853895, hamiltonian_energy = 4.925625877654332, hamiltonian_energy_error = -0.09197759356490387, max_hamiltonian_energy_error = -0.09209525715258149, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6078366079806031, log_density = -6.386921126696123, hamiltonian_energy = 9.027275318860605, hamiltonian_energy_error = 0.45712959699281974, max_hamiltonian_energy_error = 0.822951972949328, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9981334535293952, log_density = -7.911502289822817, hamiltonian_energy = 8.71479027964307, hamiltonian_energy_error = -0.017845261772588827, max_hamiltonian_energy_error = -0.39184515682156906, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9970436674772273, log_density = -6.786976212280493, hamiltonian_energy = 10.93584582632926, hamiltonian_energy_error = -0.07967682747784188, max_hamiltonian_energy_error = -0.5669244687862633, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -6.182532906317913, hamiltonian_energy = 7.8474821925978695, hamiltonian_energy_error = -0.04609797920478531, max_hamiltonian_energy_error = -0.3153885792613025, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 35, is_accept = true, acceptance_rate = 0.9806240152263218, log_density = -7.0423575490089405, hamiltonian_energy = 9.82453023079469, hamiltonian_energy_error = -0.19513958001800624, max_hamiltonian_energy_error = -0.41903896372580896, tree_depth = 5, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.947124757897212, log_density = -10.252046547438784, hamiltonian_energy = 11.523789539476883, hamiltonian_energy_error = 0.1970551475831286, max_hamiltonian_energy_error = -0.21376981517205884, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9896223600719354, log_density = -6.0822117056398, hamiltonian_energy = 13.73287323545396, hamiltonian_energy_error = -0.15510702262791654, max_hamiltonian_energy_error = -0.5990058784381738, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.943880551290831, log_density = -5.761522941343689, hamiltonian_energy = 9.650892618050557, hamiltonian_energy_error = -0.23227124588065884, max_hamiltonian_energy_error = 0.4706528485288395, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9155916542314461, log_density = -4.2281639248175775, hamiltonian_energy = 9.02546559120893, hamiltonian_energy_error = -0.013846248930432736, max_hamiltonian_energy_error = 0.31437070845301385, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6431396176284891, log_density = -6.068251758997118, hamiltonian_energy = 10.408451676106926, hamiltonian_energy_error = 0.32154102898863535, max_hamiltonian_energy_error = 0.6658957001691679, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9933815870723601, log_density = -3.903541201431878, hamiltonian_energy = 7.047652911433651, hamiltonian_energy_error = -0.21234729451151235, max_hamiltonian_energy_error = -0.21234729451151235, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9028273891693798, log_density = -10.384963225879503, hamiltonian_energy = 12.303481597936376, hamiltonian_energy_error = 0.18855473760760866, max_hamiltonian_energy_error = 0.18855473760760866, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = -9.071064520906186, hamiltonian_energy = 10.622497100655114, hamiltonian_energy_error = -0.11425083997586505, max_hamiltonian_energy_error = -0.26438849207442594, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9673039485148125, log_density = -3.6566446097595993, hamiltonian_energy = 12.648081118816407, hamiltonian_energy_error = -0.216966380500363, max_hamiltonian_energy_error = -0.216966380500363, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9484580299751261, log_density = -4.554178122675988, hamiltonian_energy = 5.689949868453373, hamiltonian_energy_error = 0.06692042092808137, max_hamiltonian_energy_error = 0.083238020792467, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9992484281630066, log_density = -2.8007906325190053, hamiltonian_energy = 4.902069056497286, hamiltonian_energy_error = -0.08000494174011052, max_hamiltonian_energy_error = -0.0954516249254258, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9273913551591827, log_density = -3.6069534188502725, hamiltonian_energy = 4.359804375235956, hamiltonian_energy_error = 0.09008665613615197, max_hamiltonian_energy_error = 0.1310815012416331, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6070787794094002, log_density = -8.307200217311884, hamiltonian_energy = 9.70482042234381, hamiltonian_energy_error = 0.6983424695790017, max_hamiltonian_energy_error = 0.7466728072894941, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9027035086313471, log_density = -3.2196530105485675, hamiltonian_energy = 11.807938607446058, hamiltonian_energy_error = -0.7170892736098011, max_hamiltonian_energy_error = -0.7170892736098011, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9310266181848448, log_density = -3.692443998755884, hamiltonian_energy = 4.79610036312102, hamiltonian_energy_error = 0.08501033083083342, max_hamiltonian_energy_error = 0.12406793312574393, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9506806493076451, log_density = -4.437973747886257, hamiltonian_energy = 7.585680712925322, hamiltonian_energy_error = 0.043558390885563014, max_hamiltonian_energy_error = 0.15999851918105978, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9529388557407077, log_density = -5.212135058240149, hamiltonian_energy = 7.756873719837793, hamiltonian_energy_error = 0.027292076667985832, max_hamiltonian_energy_error = 0.17346011058852806, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.948878045070161, log_density = -5.305958004139921, hamiltonian_energy = 8.708730842963345, hamiltonian_energy_error = 0.06806092811428854, max_hamiltonian_energy_error = 0.18046376930456987, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9830287990440953, log_density = -4.725978179274076, hamiltonian_energy = 7.763008692371195, hamiltonian_energy_error = -0.12979819192612307, max_hamiltonian_energy_error = -0.12979819192612307, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9685218759596133, log_density = -4.479175746637862, hamiltonian_energy = 7.182097047061493, hamiltonian_energy_error = -0.005360048184025246, max_hamiltonian_energy_error = 0.12552685892623572, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7330794939442955, log_density = -6.4642992679103095, hamiltonian_energy = 8.749369948065999, hamiltonian_energy_error = 0.12352804590991084, max_hamiltonian_energy_error = 0.4766446151496151, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7658927693583871, log_density = -6.297360562958645, hamiltonian_energy = 11.377349205768528, hamiltonian_energy_error = 0.237039889301208, max_hamiltonian_energy_error = 0.636121712740783, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9795207619221387, log_density = -5.878761448140201, hamiltonian_energy = 9.579131517615217, hamiltonian_energy_error = -0.0139439815671345, max_hamiltonian_energy_error = -0.2248639963954293, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9812124224298718, log_density = -10.258117538058976, hamiltonian_energy = 11.772924423159015, hamiltonian_energy_error = 0.10409503850807411, max_hamiltonian_energy_error = -0.18288147301490199, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9780559981540378, log_density = -8.286928378430353, hamiltonian_energy = 11.193522093833572, hamiltonian_energy_error = 0.025434911767026946, max_hamiltonian_energy_error = -0.4118649481382963, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = -4.021457669475918, hamiltonian_energy = 10.842261293962014, hamiltonian_energy_error = -0.33750343688581097, max_hamiltonian_energy_error = -0.4897287108484214, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9140410402436929, log_density = -7.016685683908262, hamiltonian_energy = 7.688258446611889, hamiltonian_energy_error = 0.19574343691122476, max_hamiltonian_energy_error = 0.19574343691122476, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = -5.555141554239038, hamiltonian_energy = 7.017594253495938, hamiltonian_energy_error = -0.1973561756166422, max_hamiltonian_energy_error = -0.313596571618703, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9570467818323568, log_density = -4.507573889434131, hamiltonian_energy = 7.856039851888709, hamiltonian_energy_error = 0.0033305404806069916, max_hamiltonian_energy_error = 0.2170496042131731, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9982337355547917, log_density = -5.1541012852992765, hamiltonian_energy = 7.628018775667197, hamiltonian_energy_error = -0.0005503704663087916, max_hamiltonian_energy_error = -0.1418073024661286, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8242851256701699, log_density = -6.059413567648491, hamiltonian_energy = 8.653511308558642, hamiltonian_energy_error = 0.385058949024911, max_hamiltonian_energy_error = 0.4812341285699073, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -5.329114299782713, hamiltonian_energy = 7.745214529648684, hamiltonian_energy_error = -0.11425759500442556, max_hamiltonian_energy_error = -0.5424436166409858, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9623266777055671, log_density = -5.26871249368422, hamiltonian_energy = 7.969013452765687, hamiltonian_energy_error = -0.32246930282736486, max_hamiltonian_energy_error = -0.42314905294258764, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9394312336628108, log_density = -7.276518599357994, hamiltonian_energy = 9.56488653324921, hamiltonian_energy_error = 0.13776660469904733, max_hamiltonian_energy_error = 0.2540483697359388, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.7162463250805043, log_density = -6.175307752876817, hamiltonian_energy = 11.509169595614702, hamiltonian_energy_error = 0.2357212520090357, max_hamiltonian_energy_error = 0.6609404209324818, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -4.6936798628919725, hamiltonian_energy = 7.738560210251819, hamiltonian_energy_error = -0.11153531141107376, max_hamiltonian_energy_error = -0.14873225033352, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9461903938409518, log_density = -5.253246798233892, hamiltonian_energy = 6.555123087136142, hamiltonian_energy_error = 0.1386788530045866, max_hamiltonian_energy_error = 0.1386788530045866, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9007363907120286, log_density = -3.772723235287714, hamiltonian_energy = 6.775069985080866, hamiltonian_energy_error = -0.21976579117846828, max_hamiltonian_energy_error = 0.315508329891796, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.4766307943492082, log_density = -8.291186217887066, hamiltonian_energy = 10.49516442850365, hamiltonian_energy_error = 0.9781215734097337, max_hamiltonian_energy_error = 1.3097099875620124, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.986988780791456, log_density = -4.817988245699366, hamiltonian_energy = 9.554174368498515, hamiltonian_energy_error = -0.46722433089911775, max_hamiltonian_energy_error = -0.9492529668066663, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.7681677515024135, log_density = -6.689420493399059, hamiltonian_energy = 10.290580895550473, hamiltonian_energy_error = 0.49112039665708807, max_hamiltonian_energy_error = 0.590950780241494, tree_depth = 5, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -7.198001063788546, hamiltonian_energy = 9.079660800999097, hamiltonian_energy_error = -0.18339805271657994, max_hamiltonian_energy_error = -0.46379964590792433, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.968054997790095, log_density = -5.900906781315301, hamiltonian_energy = 10.310014729400073, hamiltonian_energy_error = -0.14900067501130465, max_hamiltonian_energy_error = 0.16870484355907855, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9919496269809258, log_density = -2.799896979825041, hamiltonian_energy = 8.009242831472434, hamiltonian_energy_error = -0.16129507250633957, max_hamiltonian_energy_error = -0.16129507250633957, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9780373586645492, log_density = -2.835222835061632, hamiltonian_energy = 3.288634326201519, hamiltonian_energy_error = 0.011524066580771208, max_hamiltonian_energy_error = 0.04178075491683719, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6479503991551324, log_density = -3.6463296306474504, hamiltonian_energy = 8.53594846038165, hamiltonian_energy_error = -0.03468028734686612, max_hamiltonian_energy_error = 1.1659241381308423, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9827704248676535, log_density = -2.6760480792061188, hamiltonian_energy = 4.4265482165064025, hamiltonian_energy_error = -0.19254814089236838, max_hamiltonian_energy_error = -0.2038502732718488, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.86295696546621, log_density = -5.246336781825365, hamiltonian_energy = 7.8971441776143125, hamiltonian_energy_error = 0.10873812599905097, max_hamiltonian_energy_error = 0.3455801113303689, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9767772204448606, log_density = -7.186814740621717, hamiltonian_energy = 7.555216503692169, hamiltonian_energy_error = 0.05056994940385273, max_hamiltonian_energy_error = -0.12984038017217436, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9798343952129567, log_density = -3.3764148836586294, hamiltonian_energy = 8.865789041937763, hamiltonian_energy_error = -0.20742515589021338, max_hamiltonian_energy_error = -0.2561448706118945, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.8356713072050757, log_density = -4.01816987567387, hamiltonian_energy = 5.54699067580497, hamiltonian_energy_error = 0.2810023601466032, max_hamiltonian_energy_error = 0.3583455209480828, tree_depth = 5, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8199640153679052, log_density = -5.679188193916225, hamiltonian_energy = 7.5534834416114975, hamiltonian_energy_error = 0.2346268842578283, max_hamiltonian_energy_error = 0.46163274057638315, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9971784648322617, log_density = -2.790168670738284, hamiltonian_energy = 7.123677672154883, hamiltonian_energy_error = -0.554716007508552, max_hamiltonian_energy_error = -0.554716007508552, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9850486125163145, log_density = -2.631531802972079, hamiltonian_energy = 3.351011969913288, hamiltonian_energy_error = -0.009949703564790191, max_hamiltonian_energy_error = 0.040419083164662695, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9318673531478548, log_density = -3.2504771851870746, hamiltonian_energy = 5.637350611407388, hamiltonian_energy_error = 0.037157392950714296, max_hamiltonian_energy_error = 0.12518765101532647, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8522654133020182, log_density = -3.8317077549629097, hamiltonian_energy = 7.377621520301404, hamiltonian_energy_error = 0.06991333101941866, max_hamiltonian_energy_error = 0.31498355961940927, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9899949882113778, log_density = -5.2390986363013115, hamiltonian_energy = 6.653031805066092, hamiltonian_energy_error = -0.016823911843975026, max_hamiltonian_energy_error = -0.0669878060117366, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9355466804886343, log_density = -2.7449002392577597, hamiltonian_energy = 7.335337186991556, hamiltonian_energy_error = -0.07394312488435784, max_hamiltonian_energy_error = 0.14125657823116367, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9433327426372681, log_density = -3.1121508560542583, hamiltonian_energy = 4.461051913393021, hamiltonian_energy_error = 0.06057553072693089, max_hamiltonian_energy_error = 0.1127041425494344, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9558900647838825, log_density = -3.7155476206608036, hamiltonian_energy = 6.060382933514022, hamiltonian_energy_error = -0.039686115832195945, max_hamiltonian_energy_error = 0.12650022015544238, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.7410818010222825, log_density = -5.666566637997985, hamiltonian_energy = 7.333159943518762, hamiltonian_energy_error = 0.31120226923504646, max_hamiltonian_energy_error = 0.5841340224054798, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9991435352633147, log_density = -3.455868708272705, hamiltonian_energy = 6.1641862314590465, hamiltonian_energy_error = -0.2027907322195155, max_hamiltonian_energy_error = -0.2027907322195155, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.985074123206152, log_density = -3.1480549266048445, hamiltonian_energy = 4.149422692327995, hamiltonian_energy_error = 0.027587424690858953, max_hamiltonian_energy_error = 0.039717543659549825, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9336891370296198, log_density = -4.271163691436437, hamiltonian_energy = 6.65386303201599, hamiltonian_energy_error = -0.009916803944402197, max_hamiltonian_energy_error = 0.13987504128794814, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9031869034352773, log_density = -5.3990235608218455, hamiltonian_energy = 6.969252615724297, hamiltonian_energy_error = 0.1800868602054857, max_hamiltonian_energy_error = 0.21151917354414262, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9574767223651134, log_density = -6.254680154376397, hamiltonian_energy = 8.954187176944501, hamiltonian_energy_error = 0.07632575608945125, max_hamiltonian_energy_error = -0.224171246489826, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8762679697137467, log_density = -6.621029612147925, hamiltonian_energy = 11.310290587946497, hamiltonian_energy_error = 0.06421719056570652, max_hamiltonian_energy_error = 0.4137249957926379, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9993763878926509, log_density = -5.621736689220416, hamiltonian_energy = 8.231212967487776, hamiltonian_energy_error = -0.02095818680435002, max_hamiltonian_energy_error = -0.20596746479876593, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9493109753384695, log_density = -6.528705217434977, hamiltonian_energy = 9.310450850088017, hamiltonian_energy_error = 0.10145887337019666, max_hamiltonian_energy_error = 0.16798420541218206, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9802874019635414, log_density = -5.197151344259215, hamiltonian_energy = 8.734481561309742, hamiltonian_energy_error = 0.021699428619676553, max_hamiltonian_energy_error = -0.09503413971569685, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9375666832810251, log_density = -4.527358203937974, hamiltonian_energy = 8.32219368117753, hamiltonian_energy_error = -0.1270128649956206, max_hamiltonian_energy_error = -0.47123202269816655, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6266724028885701, log_density = -5.2645182531102925, hamiltonian_energy = 7.729383993629906, hamiltonian_energy_error = 0.43849729277396676, max_hamiltonian_energy_error = 0.6186479021459732, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.8592694399669403, log_density = -4.545985759942354, hamiltonian_energy = 8.629977051173602, hamiltonian_energy_error = -0.33136389169867364, max_hamiltonian_energy_error = 0.5277775345122162, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9999570146499295, log_density = -4.333348945669304, hamiltonian_energy = 5.69405681196287, hamiltonian_energy_error = -0.05840738668261025, max_hamiltonian_energy_error = -0.14193104570681392, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.984882846763145, log_density = -3.3680154956895407, hamiltonian_energy = 5.109314979401174, hamiltonian_energy_error = 0.044195225264529014, max_hamiltonian_energy_error = -0.05969188213201804, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7266391062201656, log_density = -6.156100498493128, hamiltonian_energy = 8.013977539234306, hamiltonian_energy_error = 0.39821835921803483, max_hamiltonian_energy_error = 0.6659419506773556, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9020770050704182, log_density = -4.294698183257353, hamiltonian_energy = 9.084787421144807, hamiltonian_energy_error = -0.39149908654794174, max_hamiltonian_energy_error = -0.4970829132315373, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9647277860516489, log_density = -4.724403165621922, hamiltonian_energy = 5.6893746543924735, hamiltonian_energy_error = 0.036251187636779036, max_hamiltonian_energy_error = 0.04789190730167725, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6419659967008032, log_density = -7.485476374915937, hamiltonian_energy = 9.25601403414396, hamiltonian_energy_error = 0.6329487259432103, max_hamiltonian_energy_error = 0.8127600097136227, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = -4.99279287916565, hamiltonian_energy = 8.53667696324219, hamiltonian_energy_error = -0.554158976434028, max_hamiltonian_energy_error = -0.8664312531388862, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.919346624631641, log_density = -3.206375505322537, hamiltonian_energy = 6.721174387554118, hamiltonian_energy_error = -0.22534218883252422, max_hamiltonian_energy_error = -0.22534218883252422, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9086667957026614, log_density = -3.0838716172826057, hamiltonian_energy = 4.5809616986288075, hamiltonian_energy_error = -0.006696112332727822, max_hamiltonian_energy_error = 0.19434640926707392, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8467509628013237, log_density = -3.484247394070925, hamiltonian_energy = 5.363691054206619, hamiltonian_energy_error = 0.1449437754189793, max_hamiltonian_energy_error = 0.3882953539821461, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9867930963839021, log_density = -4.300733132969452, hamiltonian_energy = 5.159181235869674, hamiltonian_energy_error = -0.03165830472675868, max_hamiltonian_energy_error = -0.11569325670651853, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9279235193250241, log_density = -5.124515343730739, hamiltonian_energy = 6.989482784758965, hamiltonian_energy_error = 0.10130687769312274, max_hamiltonian_energy_error = 0.15006443040008044, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9612131782707676, log_density = -6.142080912381971, hamiltonian_energy = 7.906916293654653, hamiltonian_energy_error = 0.05916921984265233, max_hamiltonian_energy_error = -0.22293102507532403, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9490419468434532, log_density = -4.212147182745973, hamiltonian_energy = 8.784203760508444, hamiltonian_energy_error = -0.016020210675723234, max_hamiltonian_energy_error = 0.17862717822512764, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9970263559638752, log_density = -3.5645184096371114, hamiltonian_energy = 5.223896664209079, hamiltonian_energy_error = -0.04506351477688941, max_hamiltonian_energy_error = -0.1305387158642377, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9459677299989193, log_density = -3.073327863877262, hamiltonian_energy = 6.212353265581546, hamiltonian_energy_error = -0.02799646288100277, max_hamiltonian_energy_error = 0.15083533680684624, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8329294756352901, log_density = -4.022890623479125, hamiltonian_energy = 8.389738090919625, hamiltonian_energy_error = 0.032928135008628345, max_hamiltonian_energy_error = 0.3740866666442706, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9572417433410495, log_density = -3.765584977205224, hamiltonian_energy = 5.863955045353307, hamiltonian_energy_error = 0.014681032494050505, max_hamiltonian_energy_error = 0.12599060559868036, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9784865775923061, log_density = -4.725291857492021, hamiltonian_energy = 7.046996111185497, hamiltonian_energy_error = -0.019035697500625837, max_hamiltonian_energy_error = 0.10269632144775453, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9587282843025661, log_density = -6.853330421986442, hamiltonian_energy = 7.402515537775864, hamiltonian_energy_error = 0.045688896161700576, max_hamiltonian_energy_error = 0.1415311680769351, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9858685121384627, log_density = -5.688950466229606, hamiltonian_energy = 10.252065856275994, hamiltonian_energy_error = 0.0256471684214592, max_hamiltonian_energy_error = -0.17557621334397844, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9946636971497502, log_density = -5.4574804731211835, hamiltonian_energy = 7.946505147030324, hamiltonian_energy_error = -0.044434613451593385, max_hamiltonian_energy_error = -0.15350554015052698, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9814870587345772, log_density = -5.090319323559388, hamiltonian_energy = 7.8354046744208325, hamiltonian_energy_error = 0.03811678925603257, max_hamiltonian_energy_error = -0.1414104134191918, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9215240642200359, log_density = -5.4376260271924615, hamiltonian_energy = 9.860944267871734, hamiltonian_energy_error = 0.0634577194739343, max_hamiltonian_energy_error = 0.3208584751424741, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9830576408216578, log_density = -6.293222876588855, hamiltonian_energy = 7.555371156189833, hamiltonian_energy_error = 0.09006868892493891, max_hamiltonian_energy_error = -0.1796644829280396, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9964174496985457, log_density = -4.219201886171465, hamiltonian_energy = 7.798142430495028, hamiltonian_energy_error = -0.13370486097046808, max_hamiltonian_energy_error = -0.28549787425725626, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.729509102491796, log_density = -7.718479257694305, hamiltonian_energy = 13.016387120623172, hamiltonian_energy_error = 0.13358959977348484, max_hamiltonian_energy_error = 0.7050296025622238, tree_depth = 5, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9698152317016819, log_density = -8.965488974884407, hamiltonian_energy = 9.257269558755658, hamiltonian_energy_error = 0.050429637129946414, max_hamiltonian_energy_error = -0.0697717608651871, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9854455817439153, log_density = -5.9578872913630345, hamiltonian_energy = 9.675884321561327, hamiltonian_energy_error = -0.11560080338800738, max_hamiltonian_energy_error = -0.11560080338800738, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9667673423692268, log_density = -5.75627389385094, hamiltonian_energy = 7.272084180072619, hamiltonian_energy_error = 0.014637965034022038, max_hamiltonian_energy_error = 0.06615024254567636, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9848689966566533, log_density = -5.325768232234346, hamiltonian_energy = 7.176332210593533, hamiltonian_energy_error = -0.060559093497919214, max_hamiltonian_energy_error = 0.10673968059235595, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7542627299575785, log_density = -4.18860775572808, hamiltonian_energy = 8.011812661565505, hamiltonian_energy_error = 0.012722959498818298, max_hamiltonian_energy_error = 0.5208606699294123, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.946405976647584, log_density = -6.162849782215146, hamiltonian_energy = 6.235039569079011, hamiltonian_energy_error = 0.1113396794667425, max_hamiltonian_energy_error = 0.1113396794667425, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9998988836811419, log_density = -6.052297639529943, hamiltonian_energy = 7.651051503022751, hamiltonian_energy_error = -0.05660689910028438, max_hamiltonian_energy_error = -0.17186212027344716, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8506794580134978, log_density = -9.379737249719815, hamiltonian_energy = 10.425436683939772, hamiltonian_energy_error = 0.13015865340105748, max_hamiltonian_energy_error = 0.3944031504462444, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9699517685606468, log_density = -7.434684937873108, hamiltonian_energy = 12.344903459378234, hamiltonian_energy_error = -0.030370434122332313, max_hamiltonian_energy_error = -0.27268537497018386, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9951176950752492, log_density = -5.721995205264895, hamiltonian_energy = 7.962517589846203, hamiltonian_energy_error = -0.018210323682021468, max_hamiltonian_energy_error = -0.24252423346490826, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9908240674104594, log_density = -4.39748404554911, hamiltonian_energy = 8.089966987498778, hamiltonian_energy_error = -0.14208446064610136, max_hamiltonian_energy_error = -0.14713762180987544, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7730952693755658, log_density = -4.586473062147737, hamiltonian_energy = 7.496115371003218, hamiltonian_energy_error = 0.2581997482626619, max_hamiltonian_energy_error = 0.5173012374916057, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9185557182562244, log_density = -5.958845016748999, hamiltonian_energy = 7.498594348467535, hamiltonian_energy_error = 0.058688763685204925, max_hamiltonian_energy_error = -0.3094356648233143, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9603440657830752, log_density = -4.34607207778579, hamiltonian_energy = 8.09825996818194, hamiltonian_energy_error = -0.35300823614838883, max_hamiltonian_energy_error = -0.4580459113868365, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9866261190620722, log_density = -3.2749414685136227, hamiltonian_energy = 6.100561775778893, hamiltonian_energy_error = -0.029996326381114713, max_hamiltonian_energy_error = -0.0898005302814564, tree_depth = 5, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.969748760500577, log_density = -3.976749424106444, hamiltonian_energy = 5.191056986296449, hamiltonian_energy_error = 0.041520342369909535, max_hamiltonian_energy_error = 0.0876993736271352, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9316321937875642, log_density = -5.956952532618555, hamiltonian_energy = 8.82420627475178, hamiltonian_energy_error = -0.07964444999170261, max_hamiltonian_energy_error = 0.24713047577034786, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9945787750560134, log_density = -5.005630169119705, hamiltonian_energy = 7.097197416203031, hamiltonian_energy_error = -0.08645603944573921, max_hamiltonian_energy_error = -0.12288822367922414, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9853129455894081, log_density = -4.248366324913276, hamiltonian_energy = 6.281915646192706, hamiltonian_energy_error = 0.020515491043409106, max_hamiltonian_energy_error = -0.04953798566547363, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9995908116641836, log_density = -4.7421503969859735, hamiltonian_energy = 5.466973359788408, hamiltonian_energy_error = -0.04684851452910621, max_hamiltonian_energy_error = -0.09000316344362602, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9885841654266508, log_density = -3.205908534301102, hamiltonian_energy = 7.32942832471583, hamiltonian_energy_error = -0.029245037348132108, max_hamiltonian_energy_error = 0.03168255556974664, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9411912210868285, log_density = -4.160288810888272, hamiltonian_energy = 4.831673979669731, hamiltonian_energy_error = 0.10311020294683004, max_hamiltonian_energy_error = 0.1148874554020729, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9791611388448629, log_density = -4.184313060315642, hamiltonian_energy = 7.08077545199305, hamiltonian_energy_error = 0.0010285203910074259, max_hamiltonian_energy_error = -0.14993526931712697, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9772196031204425, log_density = -4.949682647488839, hamiltonian_energy = 5.526226896016372, hamiltonian_energy_error = 0.0672717146194497, max_hamiltonian_energy_error = 0.07016611854363752, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7862079731345922, log_density = -4.674005513825069, hamiltonian_energy = 8.834218547159502, hamiltonian_energy_error = 0.11258569177004318, max_hamiltonian_energy_error = 0.39685886003048587, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9763385523423312, log_density = -4.165263750339918, hamiltonian_energy = 6.349193980519819, hamiltonian_energy_error = -0.08597778258942235, max_hamiltonian_energy_error = -0.16798695167625333, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9694031734814431, log_density = -3.9831881821351818, hamiltonian_energy = 5.235786273432295, hamiltonian_energy_error = -0.00938783489482553, max_hamiltonian_energy_error = 0.07637291691891601, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9895068621495049, log_density = -3.8208339552380277, hamiltonian_energy = 4.948295707249841, hamiltonian_energy_error = 0.018978344963580085, max_hamiltonian_energy_error = -0.03241003771975137, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9182303642182987, log_density = -4.515145755009257, hamiltonian_energy = 6.275421139966017, hamiltonian_energy_error = 0.07962942692814146, max_hamiltonian_energy_error = 0.1574216508810986, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9648786346783856, log_density = -5.634532902099146, hamiltonian_energy = 7.358685280278826, hamiltonian_energy_error = 0.04281757775802042, max_hamiltonian_energy_error = 0.10119569966369024, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8732183676822699, log_density = -7.060006339647838, hamiltonian_energy = 9.921450342502613, hamiltonian_energy_error = 0.21516480194458154, max_hamiltonian_energy_error = -0.46706441661245, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = -3.6534611777262853, hamiltonian_energy = 7.186862499536776, hamiltonian_energy_error = -0.6006011665736048, max_hamiltonian_energy_error = -0.6006011665736048, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -3.043690083497685, hamiltonian_energy = 3.7451421487073553, hamiltonian_energy_error = -0.03758583165041163, max_hamiltonian_energy_error = -0.052836172717481755, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8056159513628232, log_density = -4.359123462298239, hamiltonian_energy = 5.72017534878896, hamiltonian_energy_error = 0.2816650271402761, max_hamiltonian_energy_error = 0.405496995840946, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.913924272457073, log_density = -7.312039974727888, hamiltonian_energy = 8.5289911507372, hamiltonian_energy_error = 0.24688776681759173, max_hamiltonian_energy_error = -0.3080594157100691, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -3.9522440617715127, hamiltonian_energy = 8.324108227808, hamiltonian_energy_error = -0.5729671001683485, max_hamiltonian_energy_error = -0.5729671001683485, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.899349449039344, log_density = -3.9304851172104858, hamiltonian_energy = 10.684175496705679, hamiltonian_energy_error = -0.17280945333879671, max_hamiltonian_energy_error = 0.39432978866113544, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9957924724982876, log_density = -4.082234496310303, hamiltonian_energy = 4.29527352890773, hamiltonian_energy_error = 0.03492783993851489, max_hamiltonian_energy_error = -0.05529608592835711, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.978360414994516, log_density = -5.231462426154085, hamiltonian_energy = 6.79344549529811, hamiltonian_energy_error = -0.008729611873004472, max_hamiltonian_energy_error = 0.08122184118345466, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9961193171206572, log_density = -4.666303247987932, hamiltonian_energy = 6.600870943830878, hamiltonian_energy_error = -0.01081757040182918, max_hamiltonian_energy_error = -0.09368463247334091, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9764952328489668, log_density = -5.594507633147188, hamiltonian_energy = 7.153900707197253, hamiltonian_energy_error = 0.09137334614895476, max_hamiltonian_energy_error = 0.09137334614895476, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -4.622957861334264, hamiltonian_energy = 6.119841277297926, hamiltonian_energy_error = -0.08894940752072777, max_hamiltonian_energy_error = -0.2103400001315432, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9827599284742947, log_density = -6.2005107808886795, hamiltonian_energy = 7.717368922285563, hamiltonian_energy_error = -0.02756841669586585, max_hamiltonian_energy_error = -0.1300699135387111, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9934367667922935, log_density = -5.233607904129364, hamiltonian_energy = 8.575757449889316, hamiltonian_energy_error = -0.08563829199724182, max_hamiltonian_energy_error = -0.11588950479243465, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9698871460205686, log_density = -3.6287676946682037, hamiltonian_energy = 8.195265645812782, hamiltonian_energy_error = 0.031554372744382775, max_hamiltonian_energy_error = 0.07011503147967701, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9685145513211167, log_density = -3.2369319590196444, hamiltonian_energy = 4.856480685113053, hamiltonian_energy_error = -0.005154396341834122, max_hamiltonian_energy_error = 0.09930828815969672, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9752227179749557, log_density = -4.273936445034746, hamiltonian_energy = 5.016750653479482, hamiltonian_energy_error = 0.05593480046472088, max_hamiltonian_energy_error = 0.08164579884247303, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9856465868221698, log_density = -4.017246775005322, hamiltonian_energy = 5.425008049735575, hamiltonian_energy_error = 0.011497679274777184, max_hamiltonian_energy_error = -0.07346538451087259, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8696993979737256, log_density = -5.031886030421678, hamiltonian_energy = 6.614533007124646, hamiltonian_energy_error = 0.328535232191844, max_hamiltonian_energy_error = 0.328535232191844, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -4.038564634813492, hamiltonian_energy = 6.012196461466171, hamiltonian_energy_error = -0.21361154399263427, max_hamiltonian_energy_error = -0.4111447692399324, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9873344488362513, log_density = -4.704194182998993, hamiltonian_energy = 6.519175089512327, hamiltonian_energy_error = -0.11472127968512247, max_hamiltonian_energy_error = -0.1613755913607271, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9999831650203147, log_density = -2.989832567792412, hamiltonian_energy = 5.516394914284932, hamiltonian_energy_error = -0.07686102196598021, max_hamiltonian_energy_error = -0.07686102196598021, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.961385164339835, log_density = -3.433122336776904, hamiltonian_energy = 3.6286603173670677, hamiltonian_energy_error = 0.060682159316126416, max_hamiltonian_energy_error = 0.060682159316126416, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8407708303182998, log_density = -3.810715659330487, hamiltonian_energy = 6.910396836666115, hamiltonian_energy_error = 0.053227168340361786, max_hamiltonian_energy_error = 0.3993266148777721, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = -3.1599210373160727, hamiltonian_energy = 4.483085822142579, hamiltonian_energy_error = -0.006434039308010675, max_hamiltonian_energy_error = -0.11832414016270132, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = -3.1648177244312823, hamiltonian_energy = 3.9215529179205846, hamiltonian_energy_error = -0.021834741944182223, max_hamiltonian_energy_error = -0.10763793280948741, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9549565329210139, log_density = -4.321233997197158, hamiltonian_energy = 6.197812307457589, hamiltonian_energy_error = 0.08512102183790926, max_hamiltonian_energy_error = 0.13866529661482918, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9720781407683595, log_density = -4.591869019736393, hamiltonian_energy = 6.201721027144983, hamiltonian_energy_error = -0.05422804457211239, max_hamiltonian_energy_error = 0.09582290745924382, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8983718687127003, log_density = -3.8661219674930614, hamiltonian_energy = 6.4898153361586095, hamiltonian_energy_error = 0.03042093100539578, max_hamiltonian_energy_error = 0.2716800000954702, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.933143136020361, log_density = -3.1891079257079262, hamiltonian_energy = 5.432767487246602, hamiltonian_energy_error = -0.03199392168719317, max_hamiltonian_energy_error = 0.1937154351754966, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9695672940047564, log_density = -3.033160496135178, hamiltonian_energy = 4.827520345830726, hamiltonian_energy_error = -0.04164839717604796, max_hamiltonian_energy_error = 0.0913496429271321, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8696426902914369, log_density = -4.93632396622856, hamiltonian_energy = 6.575676198950364, hamiltonian_energy_error = 0.16142494369703098, max_hamiltonian_energy_error = 0.2605015403297575, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9409687609279609, log_density = -4.861774941917366, hamiltonian_energy = 9.464650993795374, hamiltonian_energy_error = -0.17756866657695625, max_hamiltonian_energy_error = -0.20183675427439418, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9865635103800966, log_density = -6.182641527692894, hamiltonian_energy = 6.921396400800824, hamiltonian_energy_error = 0.013052284287186744, max_hamiltonian_energy_error = -0.07847621084298328, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9481105614739476, log_density = -7.930460281471252, hamiltonian_energy = 9.940310914371533, hamiltonian_energy_error = 0.14494284304243443, max_hamiltonian_energy_error = 0.15634612045780116, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9620055222387389, log_density = -3.7627799323385673, hamiltonian_energy = 11.292563829281121, hamiltonian_energy_error = -0.1459033108614758, max_hamiltonian_energy_error = -0.1459033108614758, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9456064629001468, log_density = -6.725920711362365, hamiltonian_energy = 8.132688318652407, hamiltonian_energy_error = 0.13912371965938597, max_hamiltonian_energy_error = 0.1426331026826677, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9262287361659995, log_density = -5.266397145754658, hamiltonian_energy = 8.324156423667798, hamiltonian_energy_error = 0.0695965575876869, max_hamiltonian_energy_error = -0.23826002291734483, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9886255196460086, log_density = -5.644666526880435, hamiltonian_energy = 6.886327424385973, hamiltonian_energy_error = 0.03580515453846367, max_hamiltonian_energy_error = -0.22034103218500078, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9969586382542953, log_density = -4.311051106268533, hamiltonian_energy = 6.135690451446349, hamiltonian_energy_error = -0.23247632604029977, max_hamiltonian_energy_error = -0.2649716228329959, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8744044425450599, log_density = -5.831169520946437, hamiltonian_energy = 7.717901175304842, hamiltonian_energy_error = 0.13102160358428883, max_hamiltonian_energy_error = 0.3148570591724784, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8762260631297304, log_density = -6.22092532684673, hamiltonian_energy = 8.176817410222881, hamiltonian_energy_error = 0.15605055658479827, max_hamiltonian_energy_error = 0.33401377181668934, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 1.0, log_density = -4.928154289350761, hamiltonian_energy = 6.415068576516682, hamiltonian_energy_error = -0.29954479277311385, max_hamiltonian_energy_error = -0.3970612566262437, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7528160995285926, log_density = -9.195023843660497, hamiltonian_energy = 11.443914683104063, hamiltonian_energy_error = 0.30645146374309107, max_hamiltonian_energy_error = 0.4379878437226328, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9690843695777794, log_density = -5.151915584812322, hamiltonian_energy = 12.34080843615954, hamiltonian_energy_error = -0.07208491665663885, max_hamiltonian_energy_error = -0.15568910770388733, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.982919387662525, log_density = -5.44539508663639, hamiltonian_energy = 7.768969356910063, hamiltonian_energy_error = -0.08621589209867153, max_hamiltonian_energy_error = 0.10651329597368431, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9999367709512764, log_density = -4.723662391180117, hamiltonian_energy = 6.28297973528903, hamiltonian_energy_error = -0.0997769919116882, max_hamiltonian_energy_error = -0.16230430120306405, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8377689686811638, log_density = -4.319933573295263, hamiltonian_energy = 7.665107267535269, hamiltonian_energy_error = 0.06995380885196045, max_hamiltonian_energy_error = 0.2711571996153781, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9769931484769854, log_density = -4.050717529951159, hamiltonian_energy = 5.82909729537544, hamiltonian_energy_error = 0.003978576943432621, max_hamiltonian_energy_error = -0.1466933597660267, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9316283063656053, log_density = -5.361299197111396, hamiltonian_energy = 5.7162295551805, hamiltonian_energy_error = 0.2056728066765965, max_hamiltonian_energy_error = 0.2056728066765965, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9920798227210871, log_density = -4.578242060062848, hamiltonian_energy = 6.779700433672199, hamiltonian_energy_error = -0.13930192760764903, max_hamiltonian_energy_error = -0.29443776171616776, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9818612974467447, log_density = -4.347643025462318, hamiltonian_energy = 7.135141698871955, hamiltonian_energy_error = -0.10178614925593621, max_hamiltonian_energy_error = -0.10178614925593621, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9118227067383752, log_density = -5.358665410771653, hamiltonian_energy = 5.7800566857683515, hamiltonian_energy_error = 0.10480918693872177, max_hamiltonian_energy_error = 0.1416715903357897, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9343886704061897, log_density = -4.002344561787684, hamiltonian_energy = 6.8430304352494575, hamiltonian_energy_error = 0.026616423994623162, max_hamiltonian_energy_error = 0.22423300365465515, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9993940364155751, log_density = -3.654770855250071, hamiltonian_energy = 4.725926909113051, hamiltonian_energy_error = -0.021657363636817806, max_hamiltonian_energy_error = -0.05793210385438474, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9412731918924127, log_density = -4.538015657905657, hamiltonian_energy = 6.0699353260915885, hamiltonian_energy_error = 0.10905580386980684, max_hamiltonian_energy_error = 0.10905580386980684, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9961618317049812, log_density = -4.605899332688603, hamiltonian_energy = 5.50383870293026, hamiltonian_energy_error = -0.04426653086301169, max_hamiltonian_energy_error = -0.22706435474292253, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9801806714738629, log_density = -4.91549619758997, hamiltonian_energy = 5.562960728800404, hamiltonian_energy_error = 0.08569722598064988, max_hamiltonian_energy_error = -0.19297193203374086, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9617350806799855, log_density = -5.670517043619659, hamiltonian_energy = 7.186957728256902, hamiltonian_energy_error = -0.021001492354522533, max_hamiltonian_energy_error = -0.25407698812004664, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = -4.96461801657197, hamiltonian_energy = 8.455987650441628, hamiltonian_energy_error = -0.1819500071042981, max_hamiltonian_energy_error = -0.19811641142625547, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9413071072307734, log_density = -4.529008880276486, hamiltonian_energy = 8.24939757449835, hamiltonian_energy_error = -0.0426320635492754, max_hamiltonian_energy_error = 0.17235333540376807, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9325794875662119, log_density = -5.940008741481826, hamiltonian_energy = 7.974665298493653, hamiltonian_energy_error = 0.07825079245558086, max_hamiltonian_energy_error = 0.12692233823129762, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.5906414436722539, log_density = -11.297576923369672, hamiltonian_energy = 11.421436809787604, hamiltonian_energy_error = 0.7566528928376233, max_hamiltonian_energy_error = 0.7566528928376233, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9681570605117603, log_density = -3.5296422402602055, hamiltonian_energy = 13.252929697445763, hamiltonian_energy_error = -0.9037503794111768, max_hamiltonian_energy_error = -0.9037503794111768, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9981585912256058, log_density = -4.066356070751558, hamiltonian_energy = 4.611758131633703, hamiltonian_energy_error = 0.014363310624183612, max_hamiltonian_energy_error = -0.021590400920549868, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9491851687880463, log_density = -5.485145326210777, hamiltonian_energy = 6.213141889969957, hamiltonian_energy_error = 0.0684138602747657, max_hamiltonian_energy_error = 0.13826994669007675, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.909930584564454, log_density = -4.082339782993355, hamiltonian_energy = 7.330223151097213, hamiltonian_energy_error = 0.11606393576438734, max_hamiltonian_energy_error = 0.23621176115015885, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9787865984421115, log_density = -3.4672453501941014, hamiltonian_energy = 6.328856060470345, hamiltonian_energy_error = -0.15091815811154952, max_hamiltonian_energy_error = -0.16528161456240653, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.978166688834924, log_density = -3.091513497436642, hamiltonian_energy = 4.49991998666181, hamiltonian_energy_error = 0.029139539767229827, max_hamiltonian_energy_error = 0.07903471369943116, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9474075371137588, log_density = -4.3598027641308725, hamiltonian_energy = 5.112294673367467, hamiltonian_energy_error = 0.09432762510931525, max_hamiltonian_energy_error = 0.12996417369134683, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.7642684621041483, log_density = -4.824490333011315, hamiltonian_energy = 9.085546817462992, hamiltonian_energy_error = -0.05325486121638079, max_hamiltonian_energy_error = 0.6776134744699949, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = -3.842269958773702, hamiltonian_energy = 4.8083022362454, hamiltonian_energy_error = -0.1310934758481297, max_hamiltonian_energy_error = -0.1310934758481297, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.954880568817821, log_density = -3.546973897092844, hamiltonian_energy = 5.4553153827535406, hamiltonian_energy_error = -0.06433759665493088, max_hamiltonian_energy_error = 0.1439317226034431, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9817406853722704, log_density = -2.7264771226623914, hamiltonian_energy = 4.184594004984807, hamiltonian_energy_error = -0.005433338160924173, max_hamiltonian_energy_error = 0.048035779229466335, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6405176657087516, log_density = -2.7264771226623914, hamiltonian_energy = 7.0679141804000984, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 0.800928983938201, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9750815420736583, log_density = -3.1193621595979923, hamiltonian_energy = 3.2439656330488527, hamiltonian_energy_error = 0.05625568022946936, max_hamiltonian_energy_error = 0.05625568022946936, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8980010206488662, log_density = -4.483428585256773, hamiltonian_energy = 7.78216187516401, hamiltonian_energy_error = 0.05379406981519175, max_hamiltonian_energy_error = 0.27933081736413623, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9761752294083677, log_density = -4.857992292652529, hamiltonian_energy = 6.557685952074759, hamiltonian_energy_error = 0.0016097571891338092, max_hamiltonian_energy_error = -0.1047427670965515, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9933032402742893, log_density = -4.869566381852586, hamiltonian_energy = 5.4879499528751445, hamiltonian_energy_error = -0.008385277655223788, max_hamiltonian_energy_error = -0.10068218317654853, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9528750905274775, log_density = -4.111090734805524, hamiltonian_energy = 7.0629623565145065, hamiltonian_energy_error = 0.04219133168937805, max_hamiltonian_energy_error = 0.12131679453248356, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8430007204073882, log_density = -6.512640511223964, hamiltonian_energy = 7.605339422294312, hamiltonian_energy_error = 0.3330811432974734, max_hamiltonian_energy_error = 0.5268487058684261, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9852961612758089, log_density = -6.8251248990221836, hamiltonian_energy = 8.460654566904449, hamiltonian_energy_error = -0.15338583501143255, max_hamiltonian_energy_error = -0.6913184358815556, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9925945162873251, log_density = -4.844754632852057, hamiltonian_energy = 7.952908988559866, hamiltonian_energy_error = -0.16404026551640705, max_hamiltonian_energy_error = -0.17209253028390226, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -4.3730186670102, hamiltonian_energy = 5.556522891100629, hamiltonian_energy_error = -0.035952055298646535, max_hamiltonian_energy_error = -0.12981012661110292, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9999263269593818, log_density = -3.887453359797682, hamiltonian_energy = 4.819051608170578, hamiltonian_energy_error = -0.018797297052198125, max_hamiltonian_energy_error = -0.04813241789099543, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8782405920216095, log_density = -6.500508171312607, hamiltonian_energy = 9.24873676763974, hamiltonian_energy_error = 0.18540355797838082, max_hamiltonian_energy_error = 0.24004900572124654, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9049683680479743, log_density = -4.257566170256613, hamiltonian_energy = 9.61532304781176, hamiltonian_energy_error = -0.18083545531177592, max_hamiltonian_energy_error = -0.367036828777902, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.974604248350395, log_density = -3.5989934139547834, hamiltonian_energy = 6.236970996496111, hamiltonian_energy_error = -0.026119737582845914, max_hamiltonian_energy_error = -0.1006164003846175, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9518806576649733, log_density = -3.999394478428398, hamiltonian_energy = 5.260072615863246, hamiltonian_energy_error = 0.039205758540926006, max_hamiltonian_energy_error = 0.13121401282925405, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8631448581504174, log_density = -5.849267024303693, hamiltonian_energy = 9.684628943702677, hamiltonian_energy_error = 0.11312990670796452, max_hamiltonian_energy_error = 0.362506855029034, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 39, is_accept = true, acceptance_rate = 0.9760735646536606, log_density = -5.8662085694579975, hamiltonian_energy = 8.220351561731707, hamiltonian_energy_error = 0.05533672347568519, max_hamiltonian_energy_error = -0.2167250321325751, tree_depth = 5, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9942763158631409, log_density = -5.064468280990813, hamiltonian_energy = 7.132661519029, hamiltonian_energy_error = 0.0027023942117665456, max_hamiltonian_energy_error = -0.20827296810295604, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9063140495670948, log_density = -6.776522892773087, hamiltonian_energy = 7.754032802860851, hamiltonian_energy_error = 0.20229756854261005, max_hamiltonian_energy_error = 0.28632745562651873, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9933587167456116, log_density = -4.31966370328978, hamiltonian_energy = 8.556488128939874, hamiltonian_energy_error = -0.2077936140920329, max_hamiltonian_energy_error = -0.3504282159572849, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9873378135957858, log_density = -5.045801042543577, hamiltonian_energy = 7.514581962703312, hamiltonian_energy_error = -0.014954858242115066, max_hamiltonian_energy_error = -0.08732601705387566, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9885344741215659, log_density = -5.2754682909514194, hamiltonian_energy = 6.767930324130832, hamiltonian_energy_error = 0.03383021521016971, max_hamiltonian_energy_error = -0.13384829571936052, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9933217809289, log_density = -3.7533012257224385, hamiltonian_energy = 6.0159619987969055, hamiltonian_energy_error = -0.22063268113547174, max_hamiltonian_energy_error = -0.22063268113547174, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8479664274283346, log_density = -5.5050705295456694, hamiltonian_energy = 8.938022040104828, hamiltonian_energy_error = 0.11954167863195053, max_hamiltonian_energy_error = 0.25486222462511776, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8505173932996644, log_density = -4.758225296789437, hamiltonian_energy = 11.748984336169713, hamiltonian_energy_error = -0.1865826835018929, max_hamiltonian_energy_error = 0.396374986996479, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7635659717192378, log_density = -6.141767331012765, hamiltonian_energy = 7.469269583411519, hamiltonian_energy_error = 0.15603289780910234, max_hamiltonian_energy_error = 0.420943691346082, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9307918999403387, log_density = -4.785817290460104, hamiltonian_energy = 10.327306203364643, hamiltonian_energy_error = -0.11864558223722632, max_hamiltonian_energy_error = 0.16691186564188065, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9918716074872646, log_density = -3.292749658005299, hamiltonian_energy = 5.369637003042492, hamiltonian_energy_error = -0.03168297408787346, max_hamiltonian_energy_error = -0.10164318178600062, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9701742644321938, log_density = -3.2366265466057804, hamiltonian_energy = 4.284244706496169, hamiltonian_energy_error = -0.040778379295401734, max_hamiltonian_energy_error = 0.11276715681693439, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9129926523131995, log_density = -3.944365902680211, hamiltonian_energy = 4.884782110942914, hamiltonian_energy_error = 0.09801613931797082, max_hamiltonian_energy_error = 0.23401985828734517, tree_depth = 5, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8364260522872833, log_density = -4.744226207385903, hamiltonian_energy = 8.481087382307594, hamiltonian_energy_error = 0.04133977817455481, max_hamiltonian_energy_error = 0.4245358569793378, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9406435096295197, log_density = -5.222734863226076, hamiltonian_energy = 7.598217223658384, hamiltonian_energy_error = 0.06542275161035427, max_hamiltonian_energy_error = 0.1430956596841506, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9367277155581892, log_density = -5.321739398974158, hamiltonian_energy = 6.371113192913141, hamiltonian_energy_error = 0.10615618303065588, max_hamiltonian_energy_error = 0.13825053554757716, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.698042071626329, log_density = -6.686854983824002, hamiltonian_energy = 10.360194527530616, hamiltonian_energy_error = 0.12226200962307843, max_hamiltonian_energy_error = 0.7465795920666132, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9937003476540398, log_density = -5.434687021555266, hamiltonian_energy = 9.784884810875079, hamiltonian_energy_error = -0.25891751953002995, max_hamiltonian_energy_error = -0.3839553971624703, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9857648273289318, log_density = -3.8235688473242924, hamiltonian_energy = 6.117457567426334, hamiltonian_energy_error = -0.09834972416520138, max_hamiltonian_energy_error = -0.131625265947533, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9952061090553445, log_density = -3.5663314286653325, hamiltonian_energy = 5.026936918897968, hamiltonian_energy_error = 0.003964692673904757, max_hamiltonian_energy_error = -0.04646062834484965, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.987561454395778, log_density = -3.013608278463952, hamiltonian_energy = 4.33612906108556, hamiltonian_energy_error = -0.048944086010122234, max_hamiltonian_energy_error = -0.05973020698674958, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7082661158633322, log_density = -4.870078279367668, hamiltonian_energy = 7.078062051362162, hamiltonian_energy_error = 0.059896827138339326, max_hamiltonian_energy_error = 0.4902291800180505, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8992984796133773, log_density = -5.672407837033241, hamiltonian_energy = 7.6553584914630814, hamiltonian_energy_error = 0.16582845323505424, max_hamiltonian_energy_error = 0.3110149027186946, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8181530059618392, log_density = -8.791611434105526, hamiltonian_energy = 10.370485941315774, hamiltonian_energy_error = 0.17935636668211608, max_hamiltonian_energy_error = 0.2433263238769321, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9868451324181543, log_density = -4.428538128064277, hamiltonian_energy = 9.966571479465891, hamiltonian_energy_error = -0.33101215504890824, max_hamiltonian_energy_error = -0.3615900971098185, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9900974463884081, log_density = -3.6204209930490716, hamiltonian_energy = 4.866063907212665, hamiltonian_energy_error = -0.088357572375525, max_hamiltonian_energy_error = -0.15425586980204464, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.939440845197254, log_density = -4.55512877642713, hamiltonian_energy = 5.102690254460765, hamiltonian_energy_error = 0.07315257922045415, max_hamiltonian_energy_error = 0.136261540391736, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9883402088911016, log_density = -3.872290252405783, hamiltonian_energy = 6.081089090868842, hamiltonian_energy_error = -0.08314511731970775, max_hamiltonian_energy_error = -0.11028799497182007, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9346067768471157, log_density = -3.4659800145647566, hamiltonian_energy = 6.3500085455258235, hamiltonian_energy_error = 0.00787132214210473, max_hamiltonian_energy_error = 0.12546813008321944, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.993803840805053, log_density = -3.7079238699003785, hamiltonian_energy = 5.226281367675238, hamiltonian_energy_error = 0.02971549121273842, max_hamiltonian_energy_error = -0.04834943632383126, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9916098958937606, log_density = -3.846003977212497, hamiltonian_energy = 4.380829367559251, hamiltonian_energy_error = 0.031567488198923854, max_hamiltonian_energy_error = -0.0758346004638728, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9711189597322581, log_density = -4.839776671525623, hamiltonian_energy = 6.5189797680502375, hamiltonian_energy_error = 0.0677697410659146, max_hamiltonian_energy_error = 0.11555152929612689, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9928887825733056, log_density = -3.249851212175269, hamiltonian_energy = 5.967387907047334, hamiltonian_energy_error = -0.07955262145263386, max_hamiltonian_energy_error = -0.15054346498583815, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9192375639119093, log_density = -4.42910573371412, hamiltonian_energy = 4.694125563511965, hamiltonian_energy_error = 0.1544889586075584, max_hamiltonian_energy_error = 0.15775228754694304, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9742808922381284, log_density = -4.841030045517019, hamiltonian_energy = 6.674175217545287, hamiltonian_energy_error = 0.02496710437258365, max_hamiltonian_energy_error = -0.26497706091557305, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9670112859267361, log_density = -4.387535636530913, hamiltonian_energy = 7.795623894929195, hamiltonian_energy_error = -0.23589037854472217, max_hamiltonian_energy_error = -0.23589037854472217, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.33338140090804014, log_density = -8.797608977647785, hamiltonian_energy = 12.944435616505034, hamiltonian_energy_error = 0.7599178876568455, max_hamiltonian_energy_error = 1.3955481197039425, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9986062252026233, log_density = -7.396165774983142, hamiltonian_energy = 10.000947505010629, hamiltonian_energy_error = 0.009804329329362815, max_hamiltonian_energy_error = -0.3090897783105646, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9634291160890357, log_density = -6.439208256125886, hamiltonian_energy = 13.26274166662526, hamiltonian_energy_error = -0.22873440315265725, max_hamiltonian_energy_error = -0.302359026930338, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9972438196397136, log_density = -6.075785276412818, hamiltonian_energy = 7.985327425459884, hamiltonian_energy_error = -0.09107230439723146, max_hamiltonian_energy_error = -0.17401896253639837, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9747654525159377, log_density = -10.066915272714073, hamiltonian_energy = 10.985302374489166, hamiltonian_energy_error = 0.07799044217617457, max_hamiltonian_energy_error = 0.14971987492788408, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9996423454636535, log_density = -9.488478552261128, hamiltonian_energy = 12.175286457245189, hamiltonian_energy_error = 0.005379260358273186, max_hamiltonian_energy_error = -0.13336764239168097, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9369667365605002, log_density = -9.819669350006038, hamiltonian_energy = 12.71064590781669, hamiltonian_energy_error = 0.15292252909753934, max_hamiltonian_energy_error = 0.15292252909753934, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.857820524349875, log_density = -10.81630542245517, hamiltonian_energy = 14.289416400300354, hamiltonian_energy_error = 0.17350168601980087, max_hamiltonian_energy_error = 0.40585695955811474, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9380615282544911, log_density = -5.672860497504505, hamiltonian_energy = 12.325082734392904, hamiltonian_energy_error = -0.2789235528515128, max_hamiltonian_energy_error = -0.2789235528515128, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8600456413401718, log_density = -5.996177139333788, hamiltonian_energy = 9.071675628655653, hamiltonian_energy_error = 0.13506830499124334, max_hamiltonian_energy_error = 0.2310649000701286, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9982193820686149, log_density = -3.776593971543166, hamiltonian_energy = 6.867407048931083, hamiltonian_energy_error = -0.09512746803539862, max_hamiltonian_energy_error = -0.1325590938624579, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9494367674138713, log_density = -5.459997413847152, hamiltonian_energy = 6.5958104704796465, hamiltonian_energy_error = -0.018570921797104845, max_hamiltonian_energy_error = 0.13332711266382535, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9400657125850282, log_density = -5.215107355444584, hamiltonian_energy = 7.258155107100613, hamiltonian_energy_error = 0.06496479018019485, max_hamiltonian_energy_error = 0.12360637354806059, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9975337649485313, log_density = -3.7606257241013203, hamiltonian_energy = 5.662956100980077, hamiltonian_energy_error = -0.11467030621964547, max_hamiltonian_energy_error = -0.13611602037015125, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7688678542507148, log_density = -4.7998825543806305, hamiltonian_energy = 6.884855935394015, hamiltonian_energy_error = 0.2623413751702426, max_hamiltonian_energy_error = 0.38136676122938695, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9919327498901136, log_density = -3.60622755395606, hamiltonian_energy = 5.478624543460282, hamiltonian_energy_error = -0.029448782820044705, max_hamiltonian_energy_error = -0.19083273546965795, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9744276134040165, log_density = -3.8379405745679467, hamiltonian_energy = 5.054515366559179, hamiltonian_energy_error = -0.016069291417575293, max_hamiltonian_energy_error = -0.14759384324758962, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8888366469315426, log_density = -4.773310769909307, hamiltonian_energy = 7.42531829414839, hamiltonian_energy_error = 0.0017824690343815064, max_hamiltonian_energy_error = 0.3369549443203326, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9930257260881786, log_density = -4.653141246249142, hamiltonian_energy = 6.818245046530681, hamiltonian_energy_error = -0.09919479127138953, max_hamiltonian_energy_error = -0.18809626505854649, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9710428852536671, log_density = -5.857175258418728, hamiltonian_energy = 7.50490839588202, hamiltonian_energy_error = -0.050027004663728114, max_hamiltonian_energy_error = 0.09318260039489523, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9970073027491999, log_density = -6.202437063118381, hamiltonian_energy = 7.1007024028818035, hamiltonian_energy_error = 0.010357170099652535, max_hamiltonian_energy_error = -0.09278391803547859, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9510598068912668, log_density = -6.204054433703112, hamiltonian_energy = 7.738173211737726, hamiltonian_energy_error = 0.11847666347581942, max_hamiltonian_energy_error = 0.1327040320510262, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9935662976757846, log_density = -5.667250854261933, hamiltonian_energy = 8.478682058153709, hamiltonian_energy_error = -0.20352620909488195, max_hamiltonian_energy_error = -0.20352620909488195, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.6235037664166742, log_density = -7.174485462505983, hamiltonian_energy = 10.536812744116315, hamiltonian_energy_error = 0.17881331164706893, max_hamiltonian_energy_error = 0.901727559250368, tree_depth = 5, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9731535303402757, log_density = -7.767561470956828, hamiltonian_energy = 9.940277727316415, hamiltonian_energy_error = 0.08746510235840432, max_hamiltonian_energy_error = -0.0987995321141728, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.953516659388738, log_density = -8.716048230912016, hamiltonian_energy = 11.005755559469941, hamiltonian_energy_error = 0.0966173340360843, max_hamiltonian_energy_error = -0.13609515706639286, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9471078994302918, log_density = -4.474198650462107, hamiltonian_energy = 12.261467715682613, hamiltonian_energy_error = -0.11758563498532126, max_hamiltonian_energy_error = -0.45382687875552463, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9912538536540857, log_density = -7.19290449138888, hamiltonian_energy = 7.556029277980417, hamiltonian_energy_error = 0.025020814176515138, max_hamiltonian_energy_error = -0.15968786900439014, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.956493788858756, log_density = -7.641663914135526, hamiltonian_energy = 10.588779983927298, hamiltonian_energy_error = -0.219848870906036, max_hamiltonian_energy_error = -0.2572649082913898, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8555045235549436, log_density = -5.827935008558029, hamiltonian_energy = 11.343130333477696, hamiltonian_energy_error = 0.16681794027821795, max_hamiltonian_energy_error = 0.3459604196731263, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8265802893256922, log_density = -6.948848415137446, hamiltonian_energy = 8.703753362720235, hamiltonian_energy_error = 0.19559284825421486, max_hamiltonian_energy_error = 0.3700468719407528, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9269726676184937, log_density = -6.012575091738155, hamiltonian_energy = 10.117884563771755, hamiltonian_energy_error = -0.20875369276056155, max_hamiltonian_energy_error = -0.4503858751567087, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9416947317298384, log_density = -6.403208373471514, hamiltonian_energy = 9.230781986986074, hamiltonian_energy_error = 0.09677094698831468, max_hamiltonian_energy_error = 0.21425505607113138, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9681208273793621, log_density = -4.94646008772094, hamiltonian_energy = 10.259330739502634, hamiltonian_energy_error = -0.15635707705531132, max_hamiltonian_energy_error = -0.2270988824424407, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9944041323237071, log_density = -4.072199804674357, hamiltonian_energy = 6.253761188894417, hamiltonian_energy_error = 0.005423119333981319, max_hamiltonian_energy_error = -0.0907740039767635, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9277114817090185, log_density = -7.309541307282924, hamiltonian_energy = 7.908309494838273, hamiltonian_energy_error = 0.16129839762147835, max_hamiltonian_energy_error = 0.1778991134088388, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9185092341519754, log_density = -7.15262655578406, hamiltonian_energy = 10.23694858078564, hamiltonian_energy_error = -0.18378767354241177, max_hamiltonian_energy_error = 0.2188032868479155, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9866827550862772, log_density = -5.681046972929815, hamiltonian_energy = 8.290432127166047, hamiltonian_energy_error = -0.04474411730241634, max_hamiltonian_energy_error = -0.06249945018427283, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7271827750697043, log_density = -7.109871194039545, hamiltonian_energy = 9.69590620452831, hamiltonian_energy_error = 0.3725844920807493, max_hamiltonian_energy_error = 0.5222281516783944, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9857488956673628, log_density = -3.6238504932653264, hamiltonian_energy = 8.380298796136046, hamiltonian_energy_error = -0.32092227391911976, max_hamiltonian_energy_error = -0.32092227391911976, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9702801823976707, log_density = -4.035118495637974, hamiltonian_energy = 4.691170803217555, hamiltonian_energy_error = 0.06884519116259114, max_hamiltonian_energy_error = -0.13511874638031962, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9607534291108969, log_density = -3.170183656122145, hamiltonian_energy = 5.147659407442201, hamiltonian_energy_error = -0.06029223987826615, max_hamiltonian_energy_error = -0.11929991974863174, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9163003603515908, log_density = -3.9126913162573125, hamiltonian_energy = 4.270433928784643, hamiltonian_energy_error = 0.13653038745148205, max_hamiltonian_energy_error = 0.13653038745148205, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9561058634488394, log_density = -6.130295279571776, hamiltonian_energy = 7.922119734547547, hamiltonian_energy_error = 0.023167545151940416, max_hamiltonian_energy_error = -0.2621898294540639, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.993172947619902, log_density = -3.744505686929976, hamiltonian_energy = 7.42315628449151, hamiltonian_energy_error = -0.24125784549979734, max_hamiltonian_energy_error = -0.24125784549979734, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9221921146900101, log_density = -3.3377085993540767, hamiltonian_energy = 5.008797238513024, hamiltonian_energy_error = 0.03272886011306042, max_hamiltonian_energy_error = 0.16864716504358146, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8309766519487654, log_density = -5.256066204530049, hamiltonian_energy = 6.245449299779301, hamiltonian_energy_error = 0.14464497858261005, max_hamiltonian_energy_error = 0.23465560849546385, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9396986439260555, log_density = -5.567434028283202, hamiltonian_energy = 8.682060571323671, hamiltonian_energy_error = 0.052454951951844464, max_hamiltonian_energy_error = 0.2351618185382094, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9220162841402827, log_density = -6.247386527565201, hamiltonian_energy = 7.830450942659611, hamiltonian_energy_error = 0.06271907582774983, max_hamiltonian_energy_error = 0.21264677327794068, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8688914407951006, log_density = -8.461967535265899, hamiltonian_energy = 9.646120537065364, hamiltonian_energy_error = 0.2618453348429437, max_hamiltonian_energy_error = 0.5296709935647321, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 0.9091420001509231, log_density = -8.573768677886285, hamiltonian_energy = 12.012777126604236, hamiltonian_energy_error = -0.10880753931511045, max_hamiltonian_energy_error = -0.9850520684498285, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9981439502710417, log_density = -6.004375399792359, hamiltonian_energy = 10.390956602431217, hamiltonian_energy_error = -0.29326447056202554, max_hamiltonian_energy_error = -0.46171394981696423, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9567326242192673, log_density = -7.324293642911055, hamiltonian_energy = 9.505793436651357, hamiltonian_energy_error = 0.14429763471994228, max_hamiltonian_energy_error = 0.14429763471994228, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7093663095424535, log_density = -3.5938930773622726, hamiltonian_energy = 12.25681840943096, hamiltonian_energy_error = -0.12412309546291311, max_hamiltonian_energy_error = 0.7349399834128292, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9538561081155955, log_density = -3.1163805969700746, hamiltonian_energy = 4.739452195202615, hamiltonian_energy_error = -0.03897673583305128, max_hamiltonian_energy_error = 0.09933205443298831, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9864052015583008, log_density = -2.633103988264743, hamiltonian_energy = 4.247328634726378, hamiltonian_energy_error = -0.06501860462154774, max_hamiltonian_energy_error = -0.06501860462154774, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8784005887085514, log_density = -3.422541887064437, hamiltonian_energy = 4.776541371293833, hamiltonian_energy_error = 0.11458870488481399, max_hamiltonian_energy_error = 0.2368404133544244, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9640690434896066, log_density = -4.937869564792106, hamiltonian_energy = 6.662651812496286, hamiltonian_energy_error = -0.02116126226766113, max_hamiltonian_energy_error = 0.09818345892193747, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8010170861837183, log_density = -6.676809415316793, hamiltonian_energy = 8.247232454529279, hamiltonian_energy_error = 0.1487806676377943, max_hamiltonian_energy_error = 0.4882922778963543, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = -5.2009568342029535, hamiltonian_energy = 7.973710041698014, hamiltonian_energy_error = -0.12380413915490873, max_hamiltonian_energy_error = -0.2233668635580912, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -4.823512681583042, hamiltonian_energy = 5.429414314919126, hamiltonian_energy_error = -0.011022576542545792, max_hamiltonian_energy_error = -0.07169356384069836, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9597725597714521, log_density = -5.3237582781519315, hamiltonian_energy = 6.32342317372006, hamiltonian_energy_error = 0.015139231814551124, max_hamiltonian_energy_error = 0.10333757688129985, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8797348992130255, log_density = -5.74070304121372, hamiltonian_energy = 9.963188613120453, hamiltonian_energy_error = -0.03710683319978081, max_hamiltonian_energy_error = 0.2926427264092144, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8296064668750177, log_density = -7.650676488235966, hamiltonian_energy = 9.175601156344454, hamiltonian_energy_error = 0.2824030789650642, max_hamiltonian_energy_error = 0.3587264721662642, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9740564385506013, log_density = -7.397005769574461, hamiltonian_energy = 10.356399232469348, hamiltonian_energy_error = 0.008392307312904634, max_hamiltonian_energy_error = -0.3980958273787589, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9964631561288814, log_density = -6.829476784236055, hamiltonian_energy = 8.018113908364414, hamiltonian_energy_error = 0.005729571611718498, max_hamiltonian_energy_error = -0.47930235765084106, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9971684662726487, log_density = -3.1472109842013385, hamiltonian_energy = 7.612213064096499, hamiltonian_energy_error = -0.4694864134839669, max_hamiltonian_energy_error = -0.47008383393026243, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8888823786071682, log_density = -4.089317166942207, hamiltonian_energy = 7.43181219603915, hamiltonian_energy_error = -0.019770875651950348, max_hamiltonian_energy_error = 0.2884248036181454, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9297962717137328, log_density = -3.8303705429063566, hamiltonian_energy = 8.238566260225848, hamiltonian_energy_error = 0.0694520704433117, max_hamiltonian_energy_error = 0.16048412619708863, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9668419275131482, log_density = -3.748101230990814, hamiltonian_energy = 5.346265188417707, hamiltonian_energy_error = 0.008554124718804346, max_hamiltonian_energy_error = 0.14189386224381018, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.933347095520057, log_density = -5.475232372847032, hamiltonian_energy = 6.575937483327463, hamiltonian_energy_error = 0.09518155636817305, max_hamiltonian_energy_error = 0.09518155636817305, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.941635231561109, log_density = -6.4602093414035355, hamiltonian_energy = 8.727044040052089, hamiltonian_energy_error = -0.1559027075277868, max_hamiltonian_energy_error = -0.39221992613295953, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.958577035701626, log_density = -5.604044012706151, hamiltonian_energy = 8.149630855002844, hamiltonian_energy_error = -0.05858002291687825, max_hamiltonian_energy_error = 0.1330338106096498, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = -6.249475624763056, hamiltonian_energy = 6.615884992205608, hamiltonian_energy_error = -0.0178388802730014, max_hamiltonian_energy_error = -0.14093870864925595, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9890988147724654, log_density = -3.4259180645558907, hamiltonian_energy = 7.650393912048667, hamiltonian_energy_error = -0.12628226862435898, max_hamiltonian_energy_error = -0.12628226862435898, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9137706774222987, log_density = -4.274879525320719, hamiltonian_energy = 5.057351285930805, hamiltonian_energy_error = 0.1665952614378865, max_hamiltonian_energy_error = 0.2106556634348271, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9864108214464674, log_density = -3.216850124564969, hamiltonian_energy = 5.725699915184839, hamiltonian_energy_error = -0.14084299944918488, max_hamiltonian_energy_error = -0.2296413557269048, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9812422254285077, log_density = -3.221962137774991, hamiltonian_energy = 3.863524685625565, hamiltonian_energy_error = -0.027436894905804365, max_hamiltonian_energy_error = 0.06517944051062807, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9399162082396411, log_density = -4.0569982145639045, hamiltonian_energy = 5.302540246245315, hamiltonian_energy_error = 0.0867165124920275, max_hamiltonian_energy_error = 0.11709974036142068, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9704420982437592, log_density = -4.779577320700078, hamiltonian_energy = 7.090398832715626, hamiltonian_energy_error = -0.023337264458249685, max_hamiltonian_energy_error = 0.12683784897616412, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 1.0, log_density = -3.484724959650599, hamiltonian_energy = 5.5736812665288955, hamiltonian_energy_error = -0.07825567519568288, max_hamiltonian_energy_error = -0.12972547674595347, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9996018824272455, log_density = -2.973205569897088, hamiltonian_energy = 3.714132198292167, hamiltonian_energy_error = -0.0044699939231733765, max_hamiltonian_energy_error = -0.038006529859581306, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9891688227497418, log_density = -3.4365444155603164, hamiltonian_energy = 4.227692776770045, hamiltonian_energy_error = 0.019457738860868545, max_hamiltonian_energy_error = 0.04836767175015222, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9803768937049083, log_density = -3.475635284325133, hamiltonian_energy = 4.031347709503557, hamiltonian_energy_error = 0.04293248264363525, max_hamiltonian_energy_error = 0.04647481532549813, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9974560216171888, log_density = -3.481889521438182, hamiltonian_energy = 4.193598800090231, hamiltonian_energy_error = 0.006177367705686443, max_hamiltonian_energy_error = -0.07077107843354025, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9826838131649998, log_density = -5.291055915153034, hamiltonian_energy = 6.250862336259028, hamiltonian_energy_error = 0.05513875457316608, max_hamiltonian_energy_error = -0.06955701362506606, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7327054365831772, log_density = -8.273454139000119, hamiltonian_energy = 9.871553051352981, hamiltonian_energy_error = 0.6438109053038854, max_hamiltonian_energy_error = 0.6438109053038854, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 1.0, log_density = -6.489857436504902, hamiltonian_energy = 9.76897444219826, hamiltonian_energy_error = -0.11464631332095543, max_hamiltonian_energy_error = -0.7473603258829922, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9947841355105959, log_density = -4.3012593301759825, hamiltonian_energy = 7.659383062284832, hamiltonian_energy_error = -0.3684647526197189, max_hamiltonian_energy_error = -0.5694098456374252, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8929694008831278, log_density = -4.928198951026603, hamiltonian_energy = 8.207459134612314, hamiltonian_energy_error = -0.07792321502796185, max_hamiltonian_energy_error = 0.3093038590822115, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9040413222785981, log_density = -5.986764644034018, hamiltonian_energy = 8.555164876067966, hamiltonian_energy_error = -0.06257399427331833, max_hamiltonian_energy_error = 0.2655719646483625, tree_depth = 2, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9612647987003081, log_density = -6.295334919797909, hamiltonian_energy = 8.677341809039232, hamiltonian_energy_error = -0.0074202520056445564, max_hamiltonian_energy_error = 0.15844953643631143, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8960086347044043, log_density = -5.947569994919101, hamiltonian_energy = 9.12585088146286, hamiltonian_energy_error = 0.09167176583951608, max_hamiltonian_energy_error = 0.20888856552229917, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9932452160079592, log_density = -3.0750318299025565, hamiltonian_energy = 7.14278690740762, hamiltonian_energy_error = -0.1622355083991085, max_hamiltonian_energy_error = -0.19890926716030233, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8784090243009253, log_density = -4.671486014795681, hamiltonian_energy = 6.224115732601465, hamiltonian_energy_error = 0.13984497655891204, max_hamiltonian_energy_error = 0.19226921251172957, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -3.9022933389000194, hamiltonian_energy = 4.976011334474694, hamiltonian_energy_error = -0.0693108940558087, max_hamiltonian_energy_error = -0.14742291656708417, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8940667851315104, log_density = -4.56756158945057, hamiltonian_energy = 6.19485485338135, hamiltonian_energy_error = 0.07922613122466071, max_hamiltonian_energy_error = 0.16262675553329586, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9959017691546503, log_density = -4.719705244054282, hamiltonian_energy = 5.33518581434998, hamiltonian_energy_error = -0.0010162717335457927, max_hamiltonian_energy_error = -0.13347040901788532, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8727748853709728, log_density = -3.2993759742743656, hamiltonian_energy = 6.8981854023848745, hamiltonian_energy_error = -0.08486482224846803, max_hamiltonian_energy_error = 0.2872627433250461, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.906766667818153, log_density = -3.7481440569649003, hamiltonian_energy = 6.206411535819411, hamiltonian_energy_error = -0.03666902558428298, max_hamiltonian_energy_error = 0.2164654999845821, tree_depth = 5, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9889649088154966, log_density = -4.5701371550224685, hamiltonian_energy = 4.644549822455065, hamiltonian_energy_error = 0.02025075273091126, max_hamiltonian_energy_error = 0.024947216268713213, tree_depth = 3, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.9497430486373198, log_density = -5.633092742735743, hamiltonian_energy = 6.621959826069486, hamiltonian_energy_error = 0.08387561597486481, max_hamiltonian_energy_error = 0.12212543325161462, tree_depth = 5, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9589308426322295, log_density = -8.121361182501655, hamiltonian_energy = 10.285144500428817, hamiltonian_energy_error = 0.03625388433755461, max_hamiltonian_energy_error = 0.10144795438695375, tree_depth = 4, numerical_error = false, step_size = 0.1047902263219107, nom_step_size = 0.1047902263219107, is_adapt = false)])","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Inspect posterior distribution over hyperparameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"hypers = map(unpack, samples);\nh_l1 = histogram(getindex.(hypers, :l1); label=\"l1\");\nh_l2 = histogram(getindex.(hypers, :l2); label=\"l2\");\nh_s1 = histogram(getindex.(hypers, :s1); label=\"s1\");\nh_s2 = histogram(getindex.(hypers, :s2); label=\"s2\");\nplot(h_l1, h_l2, h_s1, h_s2; layout=(2, 2))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As expected, the sampler converges to the posterior distribution quickly. One could combine this code with that from the previous sections to make predictions under the posterior over the hyperparameters.","category":"page"},{"location":"examples/getting_started/#Conclusion","page":"Getting Started","title":"Conclusion","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you now know how to fit GPs using Stheno.jl, and to investigate their posterior distributions. It's also straightforward to utilise Stheno.jl inside probabilistic programming frameworks like Soss.jl and Turing.jl (see examples folder).","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Stheno.jl","page":"Home","title":"Stheno.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Stheno.jl is a package for probabilistic programming with Gaussian processes.","category":"page"},{"location":"internals/#Interfaces","page":"Internals","title":"Interfaces","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The primary objects in Stheno are some special subtypes of AbstractGP. There are three primary concrete subtypes of AbstractGP:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP: an atomic Gaussian process given by wrapping an AbstractGP.\nCompositeGP: a Gaussian process composed of other WrappedGPs and CompositeGPs, whose properties are determined recursively from the GPs of which it is composed.\nGaussianProcessProbabilisticProgramme / GPPP: a Gaussian process comprising WrappedGPs and CompositeGPs. This is the primary piece of functionality that users should interact with.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This documentation provides the information necessary to understand the internals of Stheno, and to extend it with custom functionality.","category":"page"},{"location":"internals/#AbstractGP","page":"Internals","title":"AbstractGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP and CompositeGP implement the AbstractGPs.jl API. Please refer to the AbstractGPs.jl docs for more info on this.","category":"page"},{"location":"internals/#diag-methods","page":"Internals","title":"diag methods","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It is crucial for pseudo-point methods, and for the computation of marginal statistics at a reasonable scale, to be able to compute the diagonal of a given covariance matrix in linear time in the size of its inputs. This, in turn, necessitates that the diagonal of a given cross-covariance matrix can also be computed efficiently as the evaluation of covariance matrices often rely on the evaluation of cross-covariance matrices. As such, we have the following functions in addition to the AbstractGPs API implemented for WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Function Brief description\nvar(f, x) diag(cov(f, x))\nvar(f, x, x′) diag(cov(f, x, x′))\nvar(f, f′, x, x′) diag(cov(f, f′, x, x′))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The second and third rows of the table only make sense when length(x) == length(x′), of course.","category":"page"},{"location":"internals/#WrappedGP","page":"Internals","title":"WrappedGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"We can construct a WrappedGP in the following manner:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = wrap(GP(m, k), gpc)\n","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"where m is its MeanFunction, k its Kernel. gpc is a GPC object that handles some book-keeping, and is discussed in more depth below.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The AbstractGP interface is implemented for WrappedGPs in terms of the AbstractGP that they wrap. So if you want a particular behaviour, just make sure that the AbstractGP that you wrap has the functionality you want.","category":"page"},{"location":"internals/#Aside:-Example-Kernel-implementation","page":"Internals","title":"Aside: Example Kernel implementation","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It's straightforward to implement a new kernel yourself: simply following the instructions in KernelFunctions.jl and it'll work fine with GPs in Stheno.jl.","category":"page"},{"location":"internals/#GPC","page":"Internals","title":"GPC","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"This book-keeping object doesn't matter from a user's perspective but, unfortunately, we currently expose it to users. Fortunately, it's straightforward to work with. Say you wish to construct a collection of processes:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS WON'T WORK\nf = GP(mf, kf)\ng = GP(mg, kg)\nh = f + g\n# THIS WON'T WORK","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"You should write","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS GOOD. PLEASE DO THIS\ngpc = GPC()\nf = wrap(GP(mf, kf), gpc)\ng = wrap(GP(mg, kg), gpc)\nh = f + g\n# THIS IS GOOD. PLEASE DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The rule is simple: when constructing GPs that you plan to make interact later in your program, construct them using the same gpc object. For example, DON'T do the following:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS BAD. PLEASE DON'T DO THIS\nf = wrap(GP(mf, kf), GPC())\ng = wrap(GP(mg, kg), GPC())\nh = f + g\n# THIS IS BAD. PLEASE DON'T DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The mistake here is to construct a separate GPC object for each GP. Hopefully, the code errors, but might yield incorrect results.","category":"page"},{"location":"internals/#CompositeGP","page":"Internals","title":"CompositeGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"CompositeGPs are constructed as affine transformations of CompositeGPs and GPs. We describe the implemented transformations below.","category":"page"},{"location":"internals/#Addition","page":"Internals","title":"Addition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Given AbstractGPs f and g, we define","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f + g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"to be the CompositeGP sastisfying h(x) = f(x) + g(x) for all x.","category":"page"},{"location":"internals/#Multiplication","page":"Internals","title":"Multiplication","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Multiplication of AbstractGPs is undefined since the product of two Gaussian random variables is not itself Gaussian. However, we can scale an AbstractGP by either a constant or (deterministic) function.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = c * f\nh = sin * f","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"will both work, and produce the result that h(x) = c * f(x) or h(x) = sin(x) * f(x).","category":"page"},{"location":"internals/#Composition","page":"Internals","title":"Composition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f ∘ g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for some deterministic function g is the composition of f with g. i.e. h(x) = f(g(x)).","category":"page"},{"location":"internals/#cross","page":"Internals","title":"cross","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = cross([f, g])","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for WrappedGPs and CompositeGPs f and g. Think of cross as having stacked f and g together, so that you can work with their joint.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"For example, if you wanted to sample jointly from f and g at locations x_f and x_g, you could write something like","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"fg = cross([f, g])\nx_fg = BlockData([x_f, x_g])\nrand(fg(x_fg, 1e-6))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This particular function isn't part of the user-facing API because it isn't generally needed. It is, however, used extensively in the implementation of the GaussianProcessProbabilisticProgramme.","category":"page"},{"location":"internals/#GPPP","page":"Internals","title":"GPPP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The GaussianProcessProbabilisticProgramme is another AbstractGP which enables provides a thin layer of convenience functionality on top of WrappedGPs and CompositeGPs, and is the primary way in which it is intended that users will interact with this package.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP like this","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"is equivalent to manually constructing a GPPP using WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"gpc = GPC()\nf1 = wrap(GP(SEKernel()), gpc)\nf2 = wrap(GP(SEKernel()), gpc)\nf3 = f1 + f2\nf = Stheno.GPPP((f1=f1, f2=f2, f3=f3), gpc)","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"If you take a look at the gaussian_process_probabilistic_programming.jl source, you'll see that it's essentially just the above, and an implementation of the AbstractGPs API on top of a GPPP.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP is a single GP on an extended input domain: (Image: )","category":"page"}]
}
