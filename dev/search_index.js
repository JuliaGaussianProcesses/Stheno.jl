var documenterSearchIndex = {"docs":
[{"location":"api/#Public-API","page":"API","title":"Public API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = Stheno","category":"page"},{"location":"api/#GPPP","page":"API","title":"GPPP","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Core functionality for working with GPPPs.","category":"page"},{"location":"api/","page":"API","title":"API","text":"@gppp\nGPPPInput\nBlockData\nsplit","category":"page"},{"location":"api/#Stheno.@gppp","page":"API","title":"Stheno.@gppp","text":"@gppp(model_expression)\n\nConstruct a GaussianProcessProbabilisticProgramme (GPPP) from a code snippet.\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx_local = randn(5)\n\nx = BlockData(GPPPInput(:f1, x_local), GPPPInput(:f2, x_local), GPPPInput(:f3, x_local))\n\ny = rand(f(x, 1e-12))\n\nf1, f2, f3 = split(x, y)\n\nisapprox(f1 + f2, f3; rtol=1e-4)\n\n# output\n\ntrue\n\n\n\n\n\n","category":"macro"},{"location":"api/#Stheno.GPPPInput","page":"API","title":"Stheno.GPPPInput","text":"GPPPInput(p, x::AbstractVector)\n\nAn collection of inputs for a GPPP. p indicates which process the vector x should be extracted from. The required type of p is determined by the type of the keys in the GPPP indexed.\n\njulia> x = [1.0, 1.5, 0.3];\n\njulia> v = GPPPInput(:a, x)\n3-element GPPPInput{Symbol, Float64, Vector{Float64}}:\n (:a, 1.0)\n (:a, 1.5)\n (:a, 0.3)\n\njulia> v isa AbstractVector{Tuple{Symbol, Float64}}\ntrue\n\njulia> v == map(x_ -> (:a, x_), x)\ntrue\n\n\n\n\n\n","category":"type"},{"location":"api/#Stheno.BlockData","page":"API","title":"Stheno.BlockData","text":"BlockData{T, TV<:AbstractVector{T}, TX<:AbstractVector{TV}} <: AbstractVector{T}\n\nA strictly ordered collection of AbstractVectors, representing a ragged array of data.\n\nVery useful when working with GPPPs. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\n# Specify a `BlockData` set that can be used to index into\n# the `f2` and `f3` processes in `f`.\nx = BlockData(\n    GPPPInput(:f2, randn(4)),\n    GPPPINput(:f3, randn(3)),\n)\n\n# Index into `f` at the input.\nf(x)\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.split","page":"API","title":"Base.split","text":"Base.split(x::BlockData, Y::AbstractVecOrMat)\n\nConvenience functionality to make working with the output of operations on GPPPs easier. Splits up the rows of Y according to the sizes of the data in x.\n\njulia> Y = vcat(randn(5, 3), randn(4, 3));\n\njulia> x = BlockData(randn(5), randn(4));\n\njulia> Y1, Y2 = split(x, Y);\n\njulia> Y1 == Y[1:5, :]\ntrue\n\njulia> Y2 == Y[6:end, :]\ntrue\n\nWorks with any BlockData, so blocks can e.g. be GPPPInputs. This is particularly helpful for working with the output from rand and marginals from a GPPP indexed at BlockData. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = BlockData(GPPPInput(:f2, randn(3)), GPPPInput(:f3, randn(4)))\ny = rand(f(x))\ny2, y3 = split(x, y)\n\nFunctionality also works with any AbstractVector.\n\n\n\n\n\n","category":"function"},{"location":"api/#Building-GPPPs","page":"API","title":"Building GPPPs","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"If in doubt about what any of these transformations can do, play around with them!","category":"page"},{"location":"api/","page":"API","title":"API","text":"+\n*\nstretch\nperiodic\nshift\nselect","category":"page"},{"location":"api/#Base.:+","page":"API","title":"Base.:+","text":"+(fa::AbstractGP, fb::AbstractGP)\n\nProduces an AbstractGP f satisfying f(x) = fa(x) + fb(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.:*","page":"API","title":"Base.:*","text":"*(f, g::AbstractGP)\n\nProduce an AbstractGP h satisfying to h(x) = f(x) * g(x), for some deterministic function f.\n\nIf f isa Real, then h(x) = f * g(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.stretch","page":"API","title":"Stheno.stretch","text":"stretch(f::AbstractGP, l::Union{AbstractVecOrMat{<:Real}, Real})\n\nThis is the primary mechanism by which to introduce length scales to your programme.\n\nIf l isa Real or l isa AbstractMatrix{<:Real}, stretch(f, l)(x) == f(l * x) for any input x. In the l isa Real case, this is equivalent to scaling the length scale by 1 / l.\n\nl isa AbstractVector{<:Real} is equivalent to stretch(f, Diagonal(l)).\n\nEquivalent to f ∘ Stretch(l).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.periodic","page":"API","title":"Stheno.periodic","text":"periodic(g::AbstractGP, f::Real)\n\nProduce an AbstractGP with period f.\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.shift","page":"API","title":"Stheno.shift","text":"shift(f::AbstractGP, a::Real)\nshift(f::AbstractGP, a::AbstractVector{<:Real})\n\nReturns the GP g given by g(x) = f(x - a)\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.select","page":"API","title":"Stheno.select","text":"select(f::AbstractGP, idx)\n\nSelect the dimensions of the input to f given by idx.\n\n\n\n\n\n","category":"function"},{"location":"input_types/#Input-Types","page":"Input Types","title":"Input Types","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Stheno enables the user to handle any type of input domain they wish and provides a common API that users must implement when considering a new way of representing input data to ensure that the package knows how to handle them appropriately.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"This interface has now been adopted throughout the JuliaGaussianProcesses ecosystem.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Discussed below is this interface's core assumptions, a detailed account of a couple of important concrete input types.","category":"page"},{"location":"input_types/#The-Central-Assumption","page":"Input Types","title":"The Central Assumption","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"The central assumption made in all user-facing and internal functions is this: when a collection of inputs are required, they subtype AbstractVector. For example, x isa AbstractVector when indexing into a GP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f(x, σ²)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"or computing the covariance matrix associated with a kernel:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"kernelmatrix(SqExponentialKernel(), x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When computing the cross-covariance matrix between two GPs","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"cov(f, g, x_f, x_g)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_f and x_g must be AbstractVectors. All other operations involving collections of inputs have the same restrictions. Always AbstractVectors.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"For example, this means that when handling multi-dimensional inputs stored in a Matrix they must be wrapped so that the package knows to treat them as a vector — more on this in below in D-dimensional Euclidean Spaces.","category":"page"},{"location":"input_types/#Dimensional-Euclidean-Space","page":"Input Types","title":"1-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When constructing a GP whose domain is the real-line, for example when using a GP to solve some kind of time-series problem, it is sufficient to work with Vector{<:Real}s of inputs. As such, the following is completely valid:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"using Stheno: GPC\nf = wrap(GP(SqExponentialKernel()), GPC())\nx = randn(10)\nf(x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"It is also possible to work with other AbstractArrays that represent a vector of 1-dimensional points, e.g.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = range(-5.0, 5.0; length=100)\nf(x)","category":"page"},{"location":"input_types/#D-Dimensional-Euclidean-Space","page":"Input Types","title":"D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Many applications of interest involve more than a single input-dimension, such as spatio-temporal modeling or Machine Learning tasks. For these cases, we provide ColVecs <: AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"X_data = randn(5, 100)\nX = ColVecs(X_data)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"tells Stheno that it should treat each column of X_data as a vector-valued input. Phrased differently, X is an AbstractVector{T} where T <: Vector{<:Real}, which stores its elements in memory as a dense matrix. This approach has the advantage of making it completely explicit how Stheno treats a matrix of data, and also simplifies quite a bit of the internal machinery, as all vectors of inputs can be assumed to be a subtype of AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If, on the other hand, each row of X_data corresponds to a vector-valued input, use RowVecs(X_data).","category":"page"},{"location":"input_types/#Structure-in-D-Dimensional-Euclidean-Space","page":"Input Types","title":"Structure in D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Consider a rectilinear grid of points in D-dimensional Euclidean space. Such grids of points can be represented in a more memory-efficient manner than can arbitrarily locate sets of points. Moreover, this structure can be exploited to accelerate inference for certain types of problems dramatically. Other such examples exist e.g., uniform grids in N-dimensions, and can be exploited to more efficiently represent input data and to accelerate inference.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Work to exploit these kinds of structures is on-going at the time of writing and will be documented before merging.","category":"page"},{"location":"input_types/#GPPPInput-and-BlockData","page":"Input Types","title":"GPPPInput and BlockData","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"A GPPPInput is a special kind of AbstractVector, specifically designed for GPPPs. Given a GPPP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"a GPPPInput like","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_ = randn(5)\nx = GPPPInput(:f3, x_)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"applied to f","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"fx = f(x, 0.1)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"constructs a FiniteGP comprising f3 at x_. GPPPInput(:f2, x_) and GPPPInput(:f1, x_) are the analogues for f1 and f2.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If you wish to refer to multiple processes in f at the same time, use a BlockData. For example","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = BlockData(GPPPInput(:f2, x_), GPPPInput(:f3, x_))","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"would pull out a 10-dimensional FiniteGP, the first 5 dimensions being f2 at x_, the last 5 dimensions being f3 at x_.","category":"page"},{"location":"kernel_design/#Kernel-Design","page":"Kernel Design","title":"Kernel Design","text":"","category":"section"},{"location":"kernel_design/","page":"Kernel Design","title":"Kernel Design","text":"Please refer to KernelFunctions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"EditURL = \"https://github.com/JuliaGaussianProcesses/Stheno.jl/blob/master/examples/getting_started/script.jl\"","category":"page"},{"location":"examples/getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Here we document how to do some basic stuff, including learning and inference in kernel parameters, with Stheno.jl. To do this, we that makes use of a variety of packages from the Julia ecosystem. In particular, we'll make use of","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl to perform Bayesian inference in our model parameters,\nOptim.jl for point-estimates of our model parameters,\nParameterHandling.jl to make it easy to work with our model's parameters, and to ensure that it plays nicely with Optim and AdvancedHMC,\nZygote.jl to compute gradients.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This guide assumes that you know roughly what's going on conceptually with GPs. If you're new to Gaussian processes, an excellent introduction can be found in either this video lecture or this one.","category":"page"},{"location":"examples/getting_started/#Exact-Inference-in-a-GP-in-2-Minutes","page":"Getting Started","title":"Exact Inference in a GP in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This is only a slightly more interesting version of the first example on the README. It's slightly more interesting in that we give the kernels some learnable parameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Import the packages we'll need for this bit of the demo.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AbstractGPs\nusing LinearAlgebra\nusing Stheno\nusing Plots","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Short length-scale and small variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l1 = 0.4\ns1 = 0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Long length-scale and larger variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l2 = 5.0\ns2 = 1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Specify a GaussianProcessProbabilisticProgramme object, which is itself a GP built from other GPs.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f = @gppp let\n    f1 = s1 * stretch(GP(Matern52Kernel()), 1 / l1)\n    f2 = s2 * stretch(GP(SEKernel()), 1 / l2)\n    f3 = f1 + f2\nend;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Generate a sample from f3, one of the processes in f, at some random input locations. Add some iid observation noise, with zero-mean and variance 0.02.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"const x = GPPPInput(:f3, collect(range(-5.0, 5.0; length=100)));\nσ²_n = 0.02;\nfx = f(x, σ²_n);\nconst y = rand(fx);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Compute the log marginal likelihood of this observation, just because we can.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"logpdf(fx, y)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"24.130192462039467","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"fx should be thought of as \"f at x\", and is just as a multivariate Normal distribution, with zero mean and covariance matrix","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"heatmap(cov(f, x) + σ²_n * I)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As such samples can be drawn from it, and the log probability any particular value under it can be computed, in the same way that you would an MvNormal from Distributions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can visualise x and y with Plots.jl","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"plt = plot();\nscatter!(plt, x.x, y; color=:red, label=\"\");\ndisplay(plt)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"It's straightforward to compute the posterior over f:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior = posterior(fx, y);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior is another GP, the posterior over f given noisy observations y at inputs x.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The plotting recipes from AbstractGPs.jl can be utilised to easily print whichever component of the GPPP is needed.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"x_plot = range(-7.0, 7.0; length=1000);\nxp = GPPPInput(:f3, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp);\n    ribbon_scale=3, label=\"\", color=:blue, fillalpha=0.2, linewidth=2,\n)\nplot!(\n    plt, x_plot, rand(f_posterior(xp, 1e-9), 10);\n    samples=10, markersize=1, alpha=0.3, label=\"\", color=:blue,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you've built a simple GP probabilistic programme, performed inference in it, and looked at the posterior. We've only looked at one component of it though – we could look at others. Consider f2:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"xp2 = GPPPInput(:f2, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp2);\n    ribbon_scale=3, label=\"\", color=:red, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior(xp2, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:red,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-NelderMead-in-2-Minutes","page":"Getting Started","title":"Fit a GP with NelderMead in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Stheno.jl is slightly unusual in that it declines to provide a fit or train function. Why is this? In short, because there's really no need – the ecosystem now contains everything that is needed to easily do this yourself. By declining to insist on an interface, Stheno.jl is able to interact with a wide array of tools, that you can use in whichever way you please.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Optim requires that you provide an objective function with a single Vector{<:Real} parameter for most of its optimisers. We'll use ParameterHandling.jl to build one of these in a way that doesn't involve manually writing code to convert between a structured, human-readable, representation of our parameters (in a NamedTuple) and a Vector{Float64}.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"First, we'll put the model from before into a function:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function build_model(θ::NamedTuple)\n    return @gppp let\n        f1 = θ.s1 * stretch(GP(SEKernel()), 1 / θ.l1)\n        f2 = θ.s2 * stretch(GP(SEKernel()), 1 / θ.l2)\n        f3 = f1 + f2\n    end\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"build_model (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've assumed that the parameters will be provided as a NamedTuple, so let's build one and check that the model can be constructed:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\n\nθ = (\n    # Short length-scale and small variance.\n    l1 = positive(0.4),\n    s1 = positive(0.2),\n\n    # Long length-scale and larger variance.\n    l2 = positive(5.0),\n    s2 = positive(1.0),\n\n    # Observation noise variance -- we'll be learning this as well.\n    s_noise = positive(0.1),\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(l1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-0.9162907691270586, Bijectors.Exp{0}(), 1.4901161193847656e-8), s1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.6094379869399091, Bijectors.Exp{0}(), 1.4901161193847656e-8), l2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(1.6094379094538682, Bijectors.Exp{0}(), 1.4901161193847656e-8), s2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.490116130486996e-8, Bijectors.Exp{0}(), 1.4901161193847656e-8), s_noise = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-2.3025852420056685, Bijectors.Exp{0}(), 1.4901161193847656e-8))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've used ParameterHandling.jls positive constraint to ensure that all of the parameters remain positive during optimisation. Note that there's no magic here, and Optim knows nothing about positive. Rather, ParameterHandling knows how to make sure that Optim will optimise the log of the parameters which we want to be positive.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can make this happen with the following:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\nusing ParameterHandling: value, flatten\n\nθ_flat_init, unflatten = flatten(θ);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Concrete types used for clarity only.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"unpack = value ∘ unflatten;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now easily define a function which accepts the flat form of the parameters, and return the negative log marginal likelihood (nlml) of the parameters θ:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function nlml(θ::NamedTuple)\n    f = build_model(θ)\n    return -logpdf(f(x, θ.s_noise + 1e-6), y)\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"nlml (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can use any gradient-free optimisation technique from Optim.jl to find the parameters whose negative log marginal likelihood is locally minimal:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Optim\nresults = Optim.optimize(\n    nlml ∘ unpack,\n    θ_flat_init + randn(length(θ_flat_init)),\n    NelderMead(),\n)\nθ_opt = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Note that we just added some noise to the initial values to make the optimisation more interesting.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now use this to construct the posterior GP and look at the posterior in comparison to the true posterior with the known hyperparameters","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_opt = build_model(θ_opt);\nf_posterior_opt = posterior(f_opt(x, θ_opt.s_noise), y);\nms_opt = marginals(f_posterior_opt(xp));\nplot!(\n    plt, x_plot, mean.(ms_opt);\n    ribbon=3std.(ms_opt), label=\"\", color=:green, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_opt(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:green,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Of course, the exact posterior has not been recovered because the exact hyperparameters cannot be expected to be recovered given a finite amount of data over a finite width window.","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-BFGS-in-2-minutes","page":"Getting Started","title":"Fit a GP with BFGS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The BFGS algorithm is generally the preferred choice when optimising the hyperparameters of fairly simple GPs. It requires access to the gradient of our nlml function, which can be straightforwardly obtained via reverse-mode algorithmic differentiation, which is provided by Zygote.jl:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Zygote: gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This will probably take a while to get going as Zygote needs to compile.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"results = Optim.optimize(\n    nlml ∘ unpack,\n    θ->gradient(nlml ∘ unpack, θ)[1],\n    θ_flat_init + 0.1 * randn(length(θ_flat_init)),\n    BFGS(),\n    Optim.Options(\n        show_trace=true,\n    );\n    inplace=false,\n)\nθ_bfgs = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Iter     Function value   Gradient norm \n     0     3.596217e+00     3.173740e+01\n * time: 0.02748584747314453\n     1    -1.480521e+01     2.041012e+01\n * time: 1.5465068817138672\n     2    -2.428171e+01     1.240252e+01\n * time: 1.559276819229126\n     3    -2.672763e+01     8.537924e+00\n * time: 1.571504831314087\n     4    -2.730161e+01     7.846357e+00\n * time: 1.6163909435272217\n     5    -2.761816e+01     5.528684e+00\n * time: 1.6301898956298828\n     6    -2.860089e+01     1.187208e+00\n * time: 1.6434619426727295\n     7    -2.862046e+01     9.617721e-01\n * time: 1.6556808948516846\n     8    -2.864511e+01     2.565597e-01\n * time: 1.6678359508514404\n     9    -2.864800e+01     5.007684e-02\n * time: 1.6805579662322998\n    10    -2.864816e+01     8.177304e-03\n * time: 1.6930689811706543\n    11    -2.864816e+01     6.961458e-04\n * time: 1.7055449485778809\n    12    -2.864816e+01     1.062802e-05\n * time: 1.738799810409546\n    13    -2.864816e+01     1.014816e-07\n * time: 1.7514448165893555\n    14    -2.864816e+01     1.108841e-10\n * time: 1.7641329765319824\n","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Once more visualising the results:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_bfgs = build_model(θ_bfgs);\nf_posterior_bfgs = posterior(f_bfgs(x, θ_bfgs.s_noise), y);\nms_bfgs = marginals(f_posterior_bfgs(xp));\nplot!(\n    plt, x_plot, mean.(ms_bfgs);\n    ribbon=3std.(ms_bfgs), label=\"\", color=:orange, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_bfgs(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:orange,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Notice that the two optimisers produce (almost) indistinguishable results.","category":"page"},{"location":"examples/getting_started/#Inference-with-NUTS-in-2-minutes","page":"Getting Started","title":"Inference with NUTS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl provides a state-of-the-art implementation of the No-U-Turns sampler, which we can use to perform approximate Bayesian inference in the hyperparameters of the GP. This is slightly longer than the previous examples, but it's all set up associated with AdvancedHMC, which is literally a copy-paste from that package's README:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AdvancedHMC, Zygote","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define the log marginal joint density function and its gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"ℓπ(θ_flat) = -nlml(unpack(θ_flat)) - 0.5 * sum(abs2, θ_flat)\nfunction ∂ℓπ∂θ(θ_flat)\n    lml, back = Zygote.pullback(ℓπ, θ_flat)\n    ∂θ_flat = first(back(1.0))\n    return lml, ∂θ_flat\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"∂ℓπ∂θ (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Sampling parameter settings","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"n_samples, n_adapts = 500, 20","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(500, 20)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perturb the initialisation a little bit.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"θ0_flat = θ_flat_init + 0.1 * randn(length(θ_flat_init))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"5-element Vector{Float64}:\n -0.8865444343432033\n -1.5771389139284062\n  1.6853185026847233\n  0.01768795965745834\n -2.3891408376690535","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define metric space, Hamiltonian, sampling method and adaptor","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"metric = DiagEuclideanMetric(5)\nh = Hamiltonian(metric, ℓπ, ∂ℓπ∂θ)\nint = Leapfrog(find_good_eps(h, θ0_flat))\nprop = NUTS{MultinomialTS, GeneralisedNoUTurn}(int)\nadaptor = StanHMCAdaptor(n_adapts, Preconditioner(metric), NesterovDualAveraging(0.8, int.ϵ))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"StanHMCAdaptor(\n    pc=WelfordVar,\n    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.4),\n    init_buffer=75, term_buffer=50, window_size=25,\n    state=window(76, -30), window_splits()\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perform inference.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"samples, stats = sample(h, prop, θ0_flat, n_samples, adaptor, n_adapts; progress=true)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"([[-0.8865444343432033, -1.5771389139284062, 1.6853185026847233, 0.01768795965745834, -2.3891408376690535], [-0.8865444343432033, -1.5771389139284062, 1.6853185026847233, 0.01768795965745834, -2.3891408376690535], [-0.29508336811825225, -1.9742658107042492, 1.696590155904577, -0.1773644882691706, -3.470780994872731], [0.6754013414258564, -1.1891951839161832, 0.5167217544852833, -0.9867319894169091, -3.5969402066137115], [0.14340281094512047, -1.694926803518118, 1.0670988386983278, -0.8282445497085371, -3.24984219049956], [0.8051810293906857, -0.6778008893514136, 0.6931018777221346, -1.4175403113288008, -3.635391804243566], [0.49151727236166076, -0.7946071567561579, 0.5281451513674165, -1.5163904634657324, -3.254271098765199], [0.26263578277456384, -1.6171403776296798, 1.8389663584107718, -1.1715518974829497, -3.3687790741119543], [0.695565321458672, -1.1453884491333435, 2.462946834499618, -2.081266960105954, -3.4618434943934577], [0.27807647527424856, -1.0062876085889183, 2.394181235975264, -2.025173071386454, -3.3975663668139076], [0.46433749466124724, -1.024960215126899, 2.195082183849015, -1.7044462645955953, -3.3145371555701266], [0.4664601566989352, -1.008148280388195, 2.074606874771957, -1.6046356967370345, -3.3125452111834433], [0.109921430552548, -1.135231750539018, 1.4832253267268118, -0.31316624388026215, -3.3279167518503603], [0.15847101627841015, -1.0288285710648801, 1.2905280827445822, -0.7139227971557581, -3.6206646439690515], [1.2468349315630742, -0.9681686175437023, -0.9202273801465882, -1.5409093424460072, -3.941962919924662], [0.3123034818994568, -0.7653064458263926, -1.4621707910045214, -1.6979772562084054, -3.8654533615787923], [0.3123034818994568, -0.7653064458263926, -1.4621707910045214, -1.6979772562084054, -3.8654533615787923], [1.1019268206925221, -0.8107816387359034, -1.6924901645934005, -1.7683027278722887, -3.7245555277981186], [-0.27312492518556325, -1.9859188664619107, 1.5783073217906352, -0.9037937117622734, -3.2551339907539303], [1.6844598568384033, -0.1850854495026122, -1.0927925672485383, -2.0499852938581484, -3.530783887751695], [1.2792195234765942, 0.23288878303464366, -1.7031158345441644, -1.63848445125179, -3.862972670300824], [1.2887835971619948, 0.02806219819268027, -1.5371401346386622, -2.0574723500726004, -4.143547550889448], [1.337188406025673, 0.23693158147885543, -1.5311863409022146, -1.8114514015762009, -3.986056081311928], [1.1454125998515075, 0.29261299694364945, -1.6347894878005267, -1.885270533266329, -3.8309252273239065], [0.59402325424547, -2.0575495404946618, -1.3019215749709139, -1.5568023178798076, -3.7462928598173133], [0.6584862891831558, -2.0656701821967722, -1.2770921870057554, -1.6170351091949797, -3.7912889636248632], [1.5630265640739651, 0.19718489709316908, -1.4417680645867115, -1.779576795782095, -3.9687249794566504], [1.1553619801471082, -0.4904714563683239, -1.389245684245004, -2.088416190782843, -3.7924765032182943], [1.064938414610038, -0.03424556109707461, -1.6441104381690679, -2.024795321601806, -3.693796236122005], [1.0620050845391298, -0.06489429299447269, -1.5398171124888933, -1.621701527103532, -3.97107891230436], [0.8601280594061352, -0.46947691055693747, -1.4171200475296162, -1.8050572804713112, -3.821835748627735], [0.3942265963658653, -1.7615668863328648, -1.1966290399651, -2.0308665892635256, -3.5672653640772833], [0.9857716653638452, -0.5486321738199424, -1.642102450119424, -2.088162679673194, -3.677782995640063], [1.0069762605665624, -0.7438349600595169, -1.7524065809894254, -1.8932679963078813, -3.895155431696246], [0.48386977093838013, -1.3479182371309801, -0.8628497950211059, -1.9772467952540926, -3.8148997912511335], [0.5772736574498282, -1.2995308916703001, -0.9144376681158378, -2.0515486642112704, -3.8459104969252564], [0.523136193096065, -0.9625218281908053, -0.7487097769476101, -2.430630603975973, -3.455948746448836], [0.9221565893489662, -1.0133939184597152, -0.47778626099780913, -1.9394102726108036, -3.547432917177006], [-1.4294542161926378, -2.14346099083345, 0.03619782596387852, -1.0902496529784427, -3.8064079957684473], [-1.6585860361382294, -1.819009506114878, 0.6055037402821628, -1.3796799601507068, -4.004866078198761], [-1.4578037998418545, -1.69484513735137, 1.9443159463829125, -0.5783449024551309, -3.9991651131336154], [-0.6189545131725538, -1.3973112023451972, 1.4819826368069091, -1.4109689952459725, -3.4869919825818214], [-0.7899225994323507, -2.019275413539118, 0.9239198032517332, -0.04956751879316916, -3.4593070027478086], [-1.9103985768655256, -1.9223609602727163, 1.0736524707433923, -0.6877554637396526, -3.9411047250430657], [-1.7506831481220053, -2.1770244384785067, 1.1718287438546933, -0.6566323654266266, -3.7363023808582443], [-1.6447124266141298, -2.327558206137416, 1.2383456822184515, -0.92660625368349, -3.7297868357585062], [-1.484605911770288, -1.8815614622633055, 0.4375568855608265, -0.752931219047025, -3.967792262980496], [-1.5498610457767112, -1.9219752767621003, 0.6879256458972457, -1.4010835821227947, -3.884683349163993], [-1.8777804583944149, -2.1936942521024387, 0.3209105248667836, -1.080056815809659, -3.9146471263897213], [-0.7729483320150085, -2.2379164012621082, 0.6776818397465476, -0.6170823615359612, -3.555711140927299], [-0.4268792254063701, -2.6766411453193344, 0.48101054426902073, -0.6797090072634117, -3.4267281432005854], [-0.45517256972109743, -2.5433322583979265, 0.6718870485843135, -0.761743648335417, -3.492826787217438], [-0.6548474962192894, -2.4236368908199126, 0.7296449041812669, -0.7472398758142001, -3.3486312105548004], [-0.09646345020782804, -1.8600885023184344, 0.1223509960789406, -1.1775988176694236, -3.5510928282168135], [-0.321940155992616, -2.127692789785444, 0.5103689649452061, -1.5762002112262048, -3.55907534211387], [-1.9903264346811744, -2.2431921508806525, 0.8812943504747293, -0.7025918812349029, -3.5619048985295256], [-1.0613452165764345, -2.6163535338762216, 0.4344263548892294, -1.0558119858474788, -3.760580511949786], [0.5281272320006893, -0.7348449069778967, 0.45071408431782894, -1.887507309878182, -3.1297691044482954], [0.6223603118736734, -1.128818367933864, 0.2594153406061908, -1.7388143666037412, -3.4368485070541506], [0.3070297363402362, -1.3526963225688369, -2.219389595510604, -2.1022257507573316, -4.214626772949188], [0.398414079554147, -1.5023072335919083, -1.2590478315639266, -1.835942632639462, -3.6704237484302484], [0.3890969136867609, -1.368455409138826, -1.2246153982449925, -2.0073038398485576, -3.749001476338179], [0.5404167344127839, -1.4679456114306324, -1.2329121255899778, -1.9571625230558891, -3.5072495787327047], [0.3434666236224942, -1.2665739335345383, -1.8836364994360275, -2.192493121060358, -4.372459961997466], [0.8630376864398862, -1.4410977919904895, -1.4638813732057239, -1.9882103441058836, -3.5794198200206546], [0.45821680807000453, -0.8445460477093155, -1.082370087490556, -2.317823161257978, -3.9768222883922344], [0.5026450280289904, -0.8052187343267674, -1.2612145449051781, -2.0503321884903873, -3.540357184534125], [0.4332126741681766, -1.0556601254653752, -1.1187179359613164, -1.9347570276166821, -3.7600826405930072], [0.650921120154932, -0.8760792609382799, -1.5227320605118688, -1.9581293294209463, -3.8038388341431433], [0.05494511339551946, -1.649522481889383, -1.7699899545190305, -2.031046000562735, -3.7214009762108318], [0.32421160044786534, -1.2914408390550456, -1.4224590716333996, -2.1060278072194345, -3.9440265997103365], [0.8303093770310312, -0.9199877153273317, -1.4176723726595037, -2.341318240312414, -3.4146214574046168], [1.0588453751044646, -0.9505836230584449, -1.6276526260433584, -2.151679815127683, -3.847001816694146], [0.9789676726647013, -0.8970011666407687, -1.615164682340821, -2.219646009986308, -3.771154765660728], [1.0373713629739314, -0.9185599550367909, -1.2870976564075618, -1.5827297480843054, -3.9252761624135575], [0.6179319068781777, -1.2543275046978641, -1.275533111605129, -2.257983047655768, -3.5781495643593564], [0.36494005665059603, -1.4863634219360515, -1.0527094660065879, -1.8814279295235636, -3.70462449068875], [-0.10586994014185931, -1.7124697811833876, -1.3704424157248334, -2.1569609221209833, -3.7018186659126666], [0.1820970257299154, -1.6345636788202809, -1.4630118900540519, -2.3245945659649294, -3.8154254609463227], [0.2978379580792505, -1.0094731015975906, -1.4483464203426202, -1.7324626214017775, -4.019166950125674], [0.42799129632846555, -1.1581806696109507, -1.6991314846255252, -1.7355128763487566, -3.6151664023545993], [0.3701323761311176, -1.3286680835417966, -1.6154870022345231, -1.5999998481267952, -3.670495643832914], [0.2569153606581311, -1.3025946357388751, -1.360790197919422, -2.122209884431931, -3.861835594137008], [0.36588633862961056, -1.6888534067746763, -1.172241433144292, -1.974535487775642, -3.6022475684634947], [1.2542649315229821, -0.8048735376405016, -1.1956544609624746, -1.7678672369287658, -4.020839224044341], [1.6372854263339611, -0.5296190662976993, -1.0797690521242773, -1.8240652639123018, -3.4655988477625823], [1.460353610938197, -0.738093213465452, -1.3411718873877485, -1.6834905700627323, -4.202741642092529], [0.547214885893628, -0.9849341613297998, -1.305790191815613, -2.174430333769598, -3.5432642156139105], [0.6390646616921791, -1.0315735314584729, -1.645833259962425, -2.2802501690747037, -3.9863470761066315], [0.6823185480964367, -0.8972606696162994, -1.7375939336690072, -1.892105790246493, -3.7619516127524], [0.6175653855015106, -0.9507079748504003, -1.575388714344382, -2.148713613823439, -3.857393947791862], [0.8303301617536227, -1.8009461363348285, -0.749754265166643, -1.6399612454682853, -3.697244105826786], [1.2774010343999682, -0.8369125161995633, 0.3542259894856391, -1.9213993010712556, -3.6161284332087247], [-0.03523796539421786, -1.0547451975860442, 0.4090954532509805, -2.3357137525061273, -3.2421921631769837], [0.34182879617051054, -1.8774452150543872, 1.0184134400004585, -0.08004741018060071, -3.4374644994945722], [0.45157977304180985, -0.7106484580619781, 0.5036261231075138, -1.7095653916692295, -3.512720252451366], [-0.9935653696531908, -2.1740738801678186, 0.7999190392209522, -1.667753925657631, -3.6072713695613454], [-1.4533403725475191, -1.7456763409105605, 0.1025333440412057, -0.892084836255483, -3.9665929136417066], [-1.3983223406660719, -2.0776935210351404, 0.3719539608415543, -1.650282192520279, -3.682352580785747], [-1.6335594769374746, -1.8796387275265156, 1.4321918009099703, 0.101125122328279, -4.052286795616052], [-1.5107886222101674, -1.961021786640982, 1.191573998806393, -0.6872438941276808, -3.600003913171809], [-1.5408928528268082, -2.0035640857519943, 0.027252704024675625, -1.7664034293633253, -3.68708201727036], [-1.821103688573921, -2.5632851571963577, 0.05064558877416351, -1.198792119171792, -4.140010158503827], [-1.8335523867840504, -2.519416680483238, -0.12781216631225145, -1.356541471635471, -4.034376881137335], [-1.7904558523903265, -2.623314822806044, -0.15297900712788334, -1.3989052934290063, -3.9737008404637177], [-1.23621854947507, -1.9574020912545573, 1.4239049774103512, -0.7719275456857739, -3.8517737836352124], [-1.2824222353666377, -1.7853747342417132, 1.2396120922951532, -0.5858849227967624, -4.036388401347619], [-1.0621615472422055, -1.8807747136930122, 1.2783218206775577, -0.6596460296888673, -3.9700139409320623], [-1.6924776652926892, -1.8758294067127605, 0.5793730490443111, -1.5418507888655735, -3.5953834940539067], [-1.6074248838247822, -2.002395588627861, 0.5827189124770662, -0.7658148827977066, -3.9238254003703448], [-1.310729052247617, -1.46177289514818, -0.010149731641175858, -1.4221021092467774, -3.92824648485759], [-1.3128450117980393, -2.398886010876221, 0.751496109302951, -1.5205132574425122, -3.884612505454593], [-1.5370012599397356, -1.914363807937337, 0.08953570474733531, -0.9502024480656477, -4.14048959744363], [-1.202544139081726, -1.9278394568208397, 0.27620572240209923, -1.6205859299947059, -3.6190624091473915], [-1.2137170965372543, -1.7629326499722513, 0.29157830012909974, -1.6466710028721436, -3.727397044697132], [-1.1056548720995631, -1.8284034775189315, 0.17964747183808588, -1.4388589576238509, -3.741570821704637], [-1.6924628072281376, -1.7413544491105764, 1.1599866925059388, -0.16032313044155416, -4.155531309209385], [-0.7111523742260168, -2.1090199747640788, 1.088678535150874, -1.4427560559165309, -3.549416441018327], [-1.594647544559983, -1.8720763011166588, 0.07981006599616822, -1.0922648655479124, -3.6690581466801055], [-1.5928522505404654, -1.861948303139824, 0.14320390979428074, -1.0229209164999704, -3.8347987280963385], [-1.432390899422284, -1.7397098853770763, -0.10904371906863176, -1.6186422013186188, -3.963646170040489], [-1.4662064214177866, -1.764282624652361, -0.06649740422474679, -1.5131827991643216, -4.001161411951333], [-1.4983281029816813, -1.6939566269136468, 0.003190591051845784, -1.3474228521487914, -3.7835978038939873], [-1.266257541345539, -1.7343960430097252, 0.08419383842115437, -0.8361134849831189, -3.9465741181468297], [-1.3962932737733849, -1.7169958684252282, 0.2608674202076933, -1.002301409708879, -3.887322668657098], [-1.4838560668371414, -1.6649349412965828, 0.28786234270472705, -1.0188309702603227, -4.007589258430331], [-1.0282456737161767, -2.3250833206191466, 0.7475063843765319, -0.988498858685199, -3.809535338758573], [-1.0438928777985923, -2.321244781439622, 0.652898823768387, -0.7418566379246384, -3.3869859571529872], [-1.6670983588990067, -2.011652240519128, 0.5412226580688324, -1.2949410337442715, -3.7668245284353556], [-1.593755937843992, -1.9167041696103793, 0.775068366087811, -0.8710219233799491, -3.810433761936164], [-2.0865845847913667, -2.1904587143461343, 0.5736021041267848, -0.9366033470243742, -4.058242382923736], [-0.9970649998719953, -1.819741025201265, 0.9337126697821345, -1.535389419097101, -3.6256275211403115], [-1.7871733188841081, -1.6533078554762148, 0.5325198624686038, -1.9200422181829495, -4.167746527670865], [-1.8373583485875558, -2.0771614929135347, 0.43504860254924005, -1.2957996838284218, -3.881101459084046], [-0.8411063183487583, -1.647449553607796, 0.5387934509504738, -1.0513017432983642, -3.8404545800880596], [0.3118615671307003, -2.09647564950936, 0.483152677191137, -1.1087024401888808, -3.212891971150407], [-0.3127757213009382, -2.20673155106767, 0.5771182308910437, -0.8554379958668407, -3.674750060981157], [-1.1382513453640914, -1.494421994166379, 0.9313513595086192, -1.4628660926727628, -3.422052086577929], [-0.4544698884482546, -2.09986299249384, 1.0555570731650032, -1.09138889212929, -3.745153536443805], [-2.014106767110957, -2.0863059824680907, 0.8445742997654009, -0.16781534418155347, -3.4784926232107862], [-1.7487808138070422, -2.094029443866164, 1.3139089113713973, -0.5591625212563843, -4.116278389528372], [-1.5480350291916196, -1.634479576222145, 1.2167525795661909, -0.9472410774679109, -3.8925188042403156], [-1.1523282521114637, -2.1456735967210725, 0.27341571784651647, -1.2242561532192577, -3.7260728380532644], [-1.549150151722857, -1.8763507453784627, 0.1829044704144974, -1.2098069369358595, -3.6376191456771], [-1.6850524748013513, -2.0752772706822302, 0.9747666301993576, -0.8869531478518287, -3.970312697118349], [-1.8695152160521606, -1.9516942921076255, 0.5856528463477674, -0.5841239012409611, -3.986327139851497], [-1.814615112413905, -2.254073333997855, 0.14079882746911998, -0.9419874907525201, -3.8993017513266826], [-1.3555682389204795, -1.6372984598471378, 1.0735695506987173, -1.2909990168963124, -3.633156627016011], [-0.970115395880235, -2.0840049320234715, 1.7682048413825373, 0.7113452488444248, -3.923192760157386], [-0.7998177199219821, -1.7253836720056381, 1.9724753836636832, 0.05659074465393063, -3.242432989966682], [-1.7356337726554025, -1.8077110298987784, -0.2750218504442734, -1.8103897191985017, -4.368178083522271], [0.9169220103325053, 0.07565701505502448, 1.2091674044765852, -0.28999124084569267, -3.185539869376042], [0.454411795102423, -1.7520815913112544, 0.4724574394706888, -1.4668972992825953, -3.67300783242762], [-2.454048537296632, -1.9650628481180843, 0.786799511948382, -1.023099540251552, -4.343041177119388], [-0.7779645110671711, -2.2896815401812196, 0.6900063580902872, -1.2948800373776108, -3.2754184096626884], [0.47770626978780717, -2.3518890446819785, 0.4457943376905348, -1.064808164584183, -3.266125551139377], [1.5584136024207906, 0.3172007210723586, 0.7440384246668134, -0.9333317673558837, -3.3362725884422577], [1.297728372598496, -0.623091474063146, 0.7054534510327607, 0.05061493915881331, -3.5534871394909295], [1.785254975927462, -1.0155809063686043, 0.7571813004812777, -0.9057495882694799, -3.29446051438437], [1.3963956715636208, -0.9862250662442027, 0.6721710882820134, -1.0776078362566421, -3.545810004449475], [1.2370991184135038, -1.1644060215800487, 0.5228020511318018, -1.2126902618716477, -3.057945600415448], [0.8968558863555058, -1.544368913437494, 0.4173491978105828, -1.0918516463039325, -3.792383883026908], [0.6048983527385171, -0.8055392032492659, 0.995355011205719, -2.276398468687718, -3.104305679556248], [0.3464204619739148, -1.2992137788121183, 0.9964191305405662, -1.9100289320798367, -3.804786074707552], [1.120179683206746, -0.26496276097891935, 0.959375277042563, -0.4143570702466428, -3.4881835054128865], [0.8176962575849303, -1.509547046807516, 0.056639146256561745, -2.314795812137371, -3.1806817833410337], [0.36530358892391007, -0.6492838080383597, 0.6578876647897874, -2.09749927079441, -3.449634416969807], [0.7083068277726182, -1.4785846048573523, 1.1238562400346905, -1.5015167828942058, -3.442344705022044], [0.44334226497812557, -1.4243010481413771, 0.7732327672338369, -1.5206050481501112, -3.2827381292062308], [0.631376229420064, -1.5965204631710581, 0.9391252859460852, -1.575495921512439, -3.42986517563842], [-0.08712871782372482, -1.575402413472645, 0.8841140944573311, -0.8156618110602367, -3.4152384297221032], [0.05383278225269214, -2.2462153450601017, 0.5896454772708359, -1.205025339049411, -3.487313442459556], [-0.8912147173251626, -2.143744985466182, 0.7935498330352073, -1.2184368623860393, -3.62283158088973], [-1.6753190437473187, -1.7961393468312874, 0.8592753613318057, -0.5588240992503181, -4.223173479597605], [-1.5644420759539903, -2.258249214304357, 1.1897914100525786, -0.22497805759491, -3.507104161145417], [-1.371749947658841, -2.098841662850172, 0.7700628859210811, -0.14208773235046912, -3.9676156359173627], [-1.3649159598639333, -1.7208052307106003, 0.8706809616091262, -0.7734761780198689, -3.445794029778296], [-1.7817154592543123, -2.09067238683999, 0.6869660705276601, -0.9975814235591687, -3.8568619032157327], [-1.3517261156844294, -1.7671460082364776, 0.8549582707302414, -1.2623353606482242, -3.9104485793391146], [-1.1861020114837209, -1.8680125323258137, 0.926737957707361, -1.357526386932184, -3.7151351890206543], [-1.7696761723805963, -1.755754743668342, 0.7547952709441823, -1.506618782749226, -4.321306653712735], [-1.596150551783043, -1.8562187513002617, 0.5958212161781932, -1.4757067875084895, -4.171361289688714], [-1.7636331053406364, -1.710507383573993, 0.7709571157716537, -1.2611259907486074, -4.051208513121491], [-0.9424032833667755, -2.22943590813404, 0.620536233094202, -0.676424679101869, -3.232288103937557], [-1.3559838487529143, -2.0850988303559688, 0.6447041635491525, -0.9816447904703547, -3.5876804541390213], [-1.2181897130015231, -1.8044875827237505, 0.41851774843573164, -1.0707316217686937, -4.099891770464435], [-1.5899740443971158, -2.505978883444311, 0.9161345564993228, -0.8118430945838956, -3.312630538661013], [-1.6747166030574197, -1.8540804911781865, 0.6061082608829624, -1.2555944503170051, -4.207010371996612], [-1.607467371050248, -2.3199935641158227, 1.2629483787143363, -0.6040013226478744, -3.4102700333666904], [-1.3617598368236403, -2.4072273801815904, 1.2091068697397491, -0.7509557802467677, -3.5405742265335047], [-0.6096692209277567, -1.763929888427843, -0.008497584330044577, -1.3733907817940152, -3.562783310049253], [-1.396801649127696, -2.182927586510999, 1.3359249897239514, -0.9714084428896193, -3.8111293905331256], [-1.3410432138496746, -1.7077174676370073, 0.9253491296882539, -1.17657799257649, -3.593923790159593], [-1.5296469475716117, -1.9114063415459148, 0.8448986375453933, -0.5121387561030061, -4.116038211629338], [-1.6011026124107666, -1.8829801999177134, 0.9698458487268976, -0.5259806338855397, -3.9401116168168646], [-1.6367792152644565, -2.1189172749134806, 0.44510392519160236, -1.3704179003646981, -3.9981320518919867], [-1.1536257962841314, -1.8190654446926728, 0.5091902612786843, -1.2806725367603649, -3.824147577499431], [-1.648542539688728, -1.6824560770281662, 0.4704850055056541, -0.9178610212959898, -4.175994896917988], [-1.0571884818385824, -2.1014213852632313, 1.0203413818812024, -1.2669713612807596, -3.4101039835245213], [-0.9452819603926715, -2.2416742020095315, 0.700628891663601, -0.9349760886491685, -3.387565007273853], [-1.2562919662584837, -2.7390700563865518, 0.497362887463341, -0.7148273354330221, -3.422559611434791], [-1.2857583114993272, -2.8859190142984446, 0.9304246801447218, -0.6867806495825151, -3.0529311690348093], [-1.2442919588578463, -2.931233600596409, 0.6464841213772534, -0.6281204998918639, -3.0165467209276016], [-1.274675327838877, -2.741497935603529, 1.1509658069263173, -0.340106023079359, -3.9699199474529596], [-1.1065781017631355, -2.1910750023932577, 0.7928605535725376, -0.5416846629136427, -3.144775697854153], [-1.143403312517542, -2.470950974051107, 0.9640598385855199, -0.639346681280902, -3.500125679460157], [-1.5381759302361566, -2.823561501992405, 0.9207151892634523, -0.6923882527637666, -3.72052313141172], [-1.197599853512892, -2.7465214982210435, 0.5992098364069577, -0.8089970474021966, -3.704236594867234], [-1.4360414916180433, -2.484300390910137, 0.362574784748385, -1.6016254333124205, -3.4126109114200354], [0.029377284642308266, -2.896545011911788, 0.6928532963147173, -0.6566050654490015, -3.2960034030226155], [-0.013625674545898487, -1.4822486705972953, 1.1376951053374036, -0.4629264556991102, -3.3517505755536035], [0.715060142922099, -1.7499964356351592, 0.5032638676602628, -1.0993659070234205, -3.1215310986691924], [-0.7466842310433814, -1.9440786820767892, 0.6720696683657138, -1.2255836955960608, -3.831430766688885], [-1.2750075704322565, -1.5537751637767634, 0.2947790650431213, -1.2592570154763754, -3.5556348699940994], [-1.535256588631199, -1.689547317803454, 0.6852131588755783, -1.2623009556388465, -3.6000728491324057], [-1.3957920631847558, -1.7143127834667693, 0.4630920322444391, -1.268625538387081, -3.570980090639744], [-1.45416415904922, -1.824302149062055, 1.5361462993229968, -1.24642796767183, -4.140893684104245], [-1.4054838731040915, -1.9631203560136152, 1.384613209145634, -1.1920274600597667, -4.087082338276887], [-1.8319135864508427, -1.8153549691544175, 0.8117607674500719, -0.5549943930516008, -3.704757893757605], [-1.6556049091339144, -2.015513582836789, 0.6666102780053721, -0.7901295278735243, -3.5136405854256063], [-1.6517673743793355, -1.8753537333197918, 0.69756830145651, -0.7175430332653299, -3.463170362810684], [-1.7709499396584025, -2.0635979474616555, 1.09901023278548, -0.7895155213820455, -3.5592557903765845], [-1.1223505461329806, -2.205870317787814, 1.1088796338175542, -1.1182964965632807, -3.5570901277528963], [-0.6542204345408207, -2.7016544858320684, 0.6456020999029488, -1.298037875809267, -3.2731792237998767], [0.0517920829240108, -2.4887521096078835, 0.5825855535773509, -1.2685012402225178, -3.5412063962989806], [-0.004324504129594158, -2.6624048287181825, 0.5957525801167446, -1.2790792642617692, -3.1745660450486515], [-1.1442453797536531, -2.0111269199330386, 0.628654533105312, -0.649334952148758, -3.4711769903143725], [-1.1546515540282958, -2.042845425380744, 0.6148073503157757, -0.8080916785495066, -3.6606497958023443], [-1.3855422971217215, -1.5295343039116058, 0.38183159292155056, -0.9486728955352015, -3.91080526736598], [-1.4781060614792598, -1.8687071654983707, 0.8774991679511615, -1.0733555537679265, -3.8337239671586145], [-1.6671420112023703, -2.292755524370745, 0.36934772386659387, -1.2430892927477077, -3.6868032177913044], [-2.141783050678537, -1.9896941924485376, 0.5942762307584709, -0.8310259796592223, -4.201203088464032], [-1.5358319376230936, -2.0050682393362145, 0.7715376051415802, -1.2347343278846197, -3.8170487253782266], [-0.4818176794361184, -1.4490546739493155, 1.2220392461358158, -1.4517066464972825, -3.4666127844773107], [-0.9342651730465157, -1.5020037463738358, 1.0557495566777224, -1.6263235464795878, -3.782947722016097], [-1.0125920127080639, -1.492532793487523, 0.8884983102126303, -1.717540570316737, -3.5988722288620694], [2.123326845861438, -0.934224839638865, -0.7301938403993328, -1.4563243576930909, -3.6083057431844905], [1.5149989654313962, -0.8567089879181025, -0.8869115419636502, -1.5975718459002821, -3.6851760428606717], [0.5044799506806509, -0.4761981569526687, -1.9088575267958823, -2.0478388699324195, -3.961909335266355], [-0.02644665344040012, -0.904312314508819, -1.5431213039400862, -1.8905936846371183, -4.11638799826391], [0.2357394114505435, -1.7889983162029233, -1.5133468815375806, -2.125120325863525, -3.5765787579333175], [0.7403742807520535, -1.4669247568709038, -1.2475832398090285, -2.510559745043136, -3.594837931512642], [0.6796752670763062, -0.6306367542887846, -1.2124156817022476, -1.4396276762868874, -3.6871554933993496], [0.7834578301558761, -0.565876612710055, -1.217958358612879, -1.5192794691600495, -3.7908337612760867], [0.6526026527753023, -1.2825389094923287, -1.250129534470086, -2.469076789010035, -3.4985556042518784], [0.8503355792110939, -0.7058382103442631, -0.7654351964501205, -2.304040459183062, -3.8208691168453166], [0.9057791512459736, -0.7924861243847078, -0.8665877429315848, -2.237017595785011, -3.7125137604700438], [0.6078088173551174, -0.996820464740079, -1.375810740878666, -2.045109934498978, -3.881550342537971], [1.500264424134996, -0.24879313495192173, -1.6468683056577882, -1.9334220490203697, -3.964745347769716], [1.5464933919614448, -0.18683938384125892, -1.472835140341307, -1.9511536026857559, -4.267689171096596], [1.0693215567319376, -0.6022987407131472, -0.7797646790267203, -1.894853706310148, -3.9980246362208223], [1.3055825247901909, -0.7744935470593275, -1.4939647451883484, -1.8642476269793022, -3.3744824979813255], [0.7807832838847484, -0.46847267690222305, -1.4832586431232446, -1.6656416969141576, -3.6593574068804466], [0.8419558579264894, -0.6804558558173002, -1.7187249866111283, -2.1656092204464934, -4.178551931989644], [0.8292121788288929, -1.2906875941111744, -1.4643493796176348, -2.037992556247931, -3.3041707577944326], [1.455967207270822, -1.3724650463144854, -1.5206274167254377, -2.0197888110150943, -3.816106761535742], [0.15838340700270442, -1.1546849603536904, -1.378082592220625, -1.8085559957257347, -4.008966457348733], [0.8948152006757282, -0.4338008470373733, -1.3804233088322173, -1.520644922384135, -3.6775260313736355], [0.5620363963574803, -0.6562136315436289, -0.8294867521259759, -2.387819996826408, -3.5112248349926323], [0.752317485219452, -0.8148428405829097, -0.47626180702175136, -1.8069013449553095, -3.551424349622869], [0.6129549452933561, -1.3646710055104136, -1.6617272212270926, -1.8887922361586418, -3.849401434857424], [0.6427544479706945, -0.8974743919383535, -1.5397685924682363, -1.9714445719074578, -3.659827864573292], [0.6370872252163171, -1.1594554387674, -1.1196627575525362, -2.1505721985493507, -3.3968595238281445], [0.5185945751885475, -0.8485307573959557, -1.4685109146153452, -1.7606166226588762, -4.064110447636697], [0.9001917169045315, -0.5538079084762557, -1.4370785173318514, -1.8163533147221644, -3.7493401694477155], [0.16799627807881679, -1.9561993587699258, -0.45540782756723686, -2.2042616012322287, -3.5673417451899394], [1.5037511463085609, 0.19257964949988965, 0.7520663267763568, -0.04444863638556307, -3.372575375113463], [0.9401159675225996, -2.142467773239698, 0.21185194125932186, -1.3093977019889058, -3.3785985073585656], [0.2693277749427748, -2.2219076641260846, 0.6859404939080211, -1.1934919159364303, -3.5792281303959457], [1.9596679930845946, 0.07140913298043378, 0.37079523745344956, -1.3395331639024957, -3.5711640275842518], [1.90551349745816, -0.03392699694679563, 0.46945201575276446, -1.3633131726292942, -3.659253034832577], [1.7122822430544948, -0.439949822329165, 0.2589359627780896, -1.5007462250454948, -3.273159396948697], [-0.25813686123844193, -1.8708940173895037, 0.6835118767419407, -0.9671497777177129, -3.702498601703074], [1.7241465225568806, -0.6480910324165589, 0.3894768601008745, -1.1169181289055887, -3.2634934956152075], [1.8485787131946645, -0.5089322284210464, 0.17815941101221047, -1.481921424181032, -3.214782913045334], [1.4604814260197, -0.6551358107363435, 0.45920690056026475, -1.3791422684020118, -3.1533190500556803], [1.4550290761464963, -0.7149626018635621, 0.4046316793339332, -1.398477364463031, -3.278443350080976], [1.4986279704820888, -0.7797646247545518, 0.45823402542739455, -1.111906365994993, -3.464828312400397], [-0.3366671808498633, -1.6141071862847733, 0.731008519585367, -1.212089234329673, -3.4680686548017476], [-1.5679022516883494, -1.8715511050685922, 0.27027035258579485, -1.0995728752734046, -3.8610105277128373], [-1.7438277791312935, -2.036127266815207, 0.13713086045287123, -1.2755444182761344, -4.076325087933143], [-1.4265310425239044, -2.202150057070735, 0.9057400242258985, -1.2030277276552837, -3.592422406020491], [-1.3449488977703734, -1.6827024797471923, 0.06078498306544636, -1.0247499245308525, -3.9396537253627386], [-1.5628992235294543, -1.7852137825965302, 0.2435124350181006, -0.8954945570076306, -4.131085046644725], [-1.607782638010906, -1.9358925558806568, 0.45473785224407476, -1.055176492668581, -3.9470106287246036], [-1.4755459289404127, -2.3271765855347137, 0.4255013656725943, -1.124458493297844, -3.781664476598725], [-1.5330641616591771, -1.2257129698141662, 0.7759228563993024, -2.102112738467275, -3.822845434401998], [-0.9580487137997094, -1.7394811579493326, 0.9220910554168505, -1.51382915356939, -3.9573148088057017], [-1.8117246190426115, -1.7036066186661982, 0.5249545664352538, -1.0311302607783286, -3.8022086746598838], [-0.821400096838964, -1.8807954784787575, -0.2850808209902664, -1.5976073715770123, -3.7773201698718375], [-1.1522458215425553, -2.342263532241318, 1.461819692492765, -0.5838334963722979, -3.4118896050765293], [-1.5452825740758251, -1.60151875971049, 0.40104374162086687, -1.443886575738041, -4.304967042337778], [-1.4256385990144953, -1.6176977650356503, 0.44815915414312113, -1.445517428078425, -4.249412000562337], [-1.6531472528246831, -1.825687280254549, 0.9897141029031176, -1.172375441567247, -3.7348148443407], [-1.3807388116243065, -2.251567496859761, 0.27191973510111256, -1.1644437036172628, -3.8830981635464545], [-1.7906368716913768, -1.8723055462052491, 0.6789765308341348, -1.1608962382912134, -3.9146883469695215], [-1.2748194651579947, -2.3879729206166855, 0.30277804606870595, -1.1457670464664742, -3.7569872771716], [-1.0386941065001376, -1.4738889311198107, 1.1644589426664087, -1.4102427605735444, -3.4448499631282328], [-0.9553273916906968, -1.508161065141314, 1.2898890146692075, -1.648980706183662, -3.734241949457756], [-1.0248423471096242, -1.7910807148546755, 1.4630714026216414, -1.1760895133015308, -3.383531453099617], [-1.008685374891569, -1.7666178896581501, 1.218351932225989, -0.7564404174619541, -3.842923303147186], [-1.0474598479053838, -1.7856677173592146, 1.2900412396603518, -0.9128603147512601, -3.793116192171181], [-1.3953154862650932, -1.7822161306037134, 1.336056638781803, -0.8288713451130928, -3.7175720528563487], [-1.7349264998070495, -1.7625461224648753, 1.2667830866521996, -0.8875746784230469, -4.5100463653172], [-1.6510831532679338, -2.053207416594469, 1.1206092674254906, -0.018007790774309335, -3.4202424863329854], [-1.2206711462185265, -1.560279790563179, 0.25772341286357275, -1.8757233516044742, -3.649756230805574], [-1.8955174137698019, -2.1498466851556217, 0.17867749820041118, -0.6684329429962907, -3.5676594577467617], [-1.4441695136878054, -2.037996059588277, 0.9721724955045331, -1.142357824809886, -4.079153979186979], [-1.0381373981266253, -1.4862073406086616, 0.8092702264424201, -1.3702345945388623, -3.694661209015948], [-1.118781550390938, -1.439895081058686, 0.5863707759873639, -1.2713667739075862, -3.542367575485649], [-0.7215011828061141, -2.2835645480862654, 0.9576229847990816, -1.3773059988414873, -3.6073902882746083], [-0.7451318077621496, -2.2659023839208094, 1.0061613383515653, -1.4455255981335453, -3.6155840527045378], [-1.0363613841944903, -2.1662402686962476, 0.38152108474888924, -1.344887386692976, -3.529911497806269], [-1.0019750528344413, -1.6792201252331755, 0.3824298654713663, -1.4481139394798277, -3.5036266944613175], [-0.956977554976583, -1.889408831255708, 0.3564546959531921, -1.1194673668024815, -3.731438965734409], [-1.9208088448831442, -2.2197200443135485, 0.666563861421342, -0.91578587175594, -3.735100276986255], [-1.2239759784352997, -1.8665941652021567, 0.29482064350594034, -1.7341313553451039, -3.910683704183037], [-1.5344527492553783, -2.050781743500792, 0.5104802375481508, -1.2576735481605046, -3.670630708851154], [-1.5621678345501502, -1.917119904037231, 0.42059629394824993, -1.142289759846368, -3.7620850147130445], [-1.3071151396155551, -1.8871722378616667, 0.8369432250056743, -1.1184996532121083, -3.8541177028516165], [-2.507126832377947, -2.1907583575593663, 1.0128299649867858, -0.18687267534806212, -3.928794232622622], [-0.8986757484321951, -1.8790318000702049, 1.8057682349771182, -0.46967119411411296, -3.662659454650619], [-1.8208879280381516, -2.1009331467778924, 0.6258382227862914, -0.3850240063148953, -4.0847462962385], [-1.9728259648596018, -2.117997821904724, 0.8890454696418106, -0.15220862056575, -3.6509301718281417], [-1.19543301533157, -1.49317608083916, 1.3298242389732409, -1.0105007256328584, -3.5319073584325515], [-1.113494491908652, -1.7472589284128182, 1.4025828840948706, -1.142424624325727, -3.7723638450987513], [-1.7341193607716685, -1.5649503662727353, 1.5241367364398393, -1.0553219093073118, -3.5996047216364735], [-1.477860802335218, -2.0388183786932585, 0.9215360113835336, -0.0755815933570234, -3.7864768940183064], [-1.118197058672158, -1.719696186173367, 1.351948248205192, -0.7538501646146815, -3.6902346898665868], [-1.6203254801215232, -2.4661082342954592, 0.6493550454142737, -0.5699931304475128, -3.522042433088701], [-1.6518320279041183, -2.447485829750005, 0.45315999885180397, -0.7147123065634324, -3.9256106483829516], [-1.2785816565077555, -2.020590963488204, 0.905083189522388, -1.0715223589341631, -3.4294153791580366], [-0.8652462933854995, -2.385328870907666, 0.7955093190738712, -1.3593129844685452, -3.722020993758315], [-0.6587661329007862, -1.7466737104294494, 1.1838397597961672, -1.241290396193167, -3.6448553478099353], [-0.6176046875436623, -0.9723512913033392, -0.03238969101917771, -1.8839077056224123, -3.5425502671644398], [-0.5833119387315198, -1.4895809553964192, 0.019313478950860927, -1.8138167449323512, -3.669577137526444], [0.03570872605836459, -1.325461977917148, -0.3733423204582368, -1.6034864520806398, -3.4535351711535673], [1.7862586982963293, -0.7215394858894877, 0.2410871909357864, -0.6729513176767907, -3.574552855392617], [1.6363105993980156, -1.2146466249764674, 0.6668751375982929, -1.4170368129734556, -3.3155319983040084], [1.3424560191834327, -1.0468452170372657, 0.5078520486625644, -1.4566940206176018, -3.574083175055944], [0.44756909345061285, -1.0531970347014343, -0.2416291180370818, -1.9104126689547059, -3.5800979530015975], [0.38622774331653764, -1.2115335149749655, 1.4568445282675715, -0.6486795236381364, -3.5248066714385504], [0.4840828742766169, -0.9679370235424225, 1.7403187095390311, -0.41365411378399286, -3.137258614770931], [0.24006845521690118, -1.7777954695469607, -0.05272380233029733, -2.2345597711626923, -3.119477192586814], [0.6100239594406442, -0.2640968207461776, -0.7092357231887217, -2.509295311866928, -3.766304089385643], [2.0302768344258704, 0.11942438877516245, -1.451651544643565, -1.6986866362355533, -4.194457815037958], [1.173871148957066, -0.7306993170466163, -1.357129122258137, -1.9374447166260806, -3.4611031442601234], [0.03170922905453688, -1.3100430140409542, -1.2704011128790917, -1.6203446403409634, -3.8677340741347805], [0.6473066788019672, -1.162646023883804, -1.2507079014916345, -2.1432021262115173, -3.771211871420862], [0.6171554830454815, -1.2581876642822571, -1.3990844567882172, -2.310029491646881, -3.824723222693454], [0.5496411777410191, -1.166725099358321, -1.4192084125069848, -2.194026960072016, -3.8545734856949307], [0.5277294922049013, -0.9739722518136485, -1.4565606451247446, -2.106562397476087, -3.6687235936410834], [0.47020810848135314, -0.9739284022454263, -1.567630192725415, -1.7364179859645623, -4.085967433276603], [0.4568724421976224, -0.776146080796609, -1.562067249505862, -1.9552867948532404, -4.147270833789677], [0.5732118387832117, -1.1560433283407963, -1.410443927205781, -1.969069074213775, -3.7007654934550884], [0.6813413355658877, -0.7492087098794457, -1.8668802026945106, -2.189908164514037, -4.135595958184128], [1.1948760279662636, -0.3817369858304313, -1.3734303734857858, -1.97694391662805, -3.662225046625881], [0.42162578585004873, -0.7763979373288842, -0.9823375052109649, -1.6683344192438705, -3.7876707766774076], [-0.3658407228809373, -0.9115509485135105, -1.1349387236764092, -1.960247007719029, -3.7199165081346672], [0.9341581811686263, -0.854033112092579, -0.9905260367490144, -1.4012165191068393, -3.5753268627010533], [0.5725133857929454, -0.8527812934003954, -1.121245827592633, -2.073518234420814, -3.7547373715860655], [0.5334994264221993, -0.7904378809479266, -1.1267380801964948, -2.0690501047471885, -3.745757532241025], [0.5810381821009716, -1.7708078472787794, -1.7525029093200684, -1.8072538170587191, -3.810865203555278], [1.3374809229758835, -1.4170282078164662, -1.5217434208401803, -1.9737594955471616, -3.9019665115198423], [0.21836654980810802, -0.7423856408765379, -0.9621698146210391, -1.9871696281626718, -3.4731508812192073], [0.5032119242205134, -0.8789290281519236, -1.268726477331291, -2.1766936193996944, -3.609426345454154], [1.1465796669551453, -1.1226486689700963, -1.1851473533809855, -1.6923437767922163, -3.9338790012940845], [0.8283011920130952, -1.21783088654245, -0.5535753759884836, -1.7837261969669198, -3.524380471585711], [1.1501058736132677, -0.8187250093531165, -1.4609751005017158, -1.768163529157536, -4.017807903965087], [1.3245915113155757, -0.03172280063851057, -1.5865647896388904, -1.950445486341616, -3.767531024618067], [0.9633023016399316, -1.2920329043679752, -0.8314325531222757, -1.7441757680132635, -3.520598821105802], [0.24701838715116292, -1.135021668964326, -1.3115578845335245, -1.8752029787005462, -3.730006180239241], [-0.05280001607571781, -1.127837556546376, -1.9878434838269305, -2.008481333073971, -4.0662060502597726], [0.5811439854763981, -1.6854549249892075, -1.248272092120508, -1.8488655481710325, -3.8093131440718335], [0.4305351580012847, -1.6044882270551586, -1.4481028280273502, -1.3568872697944112, -3.8484558216575175], [0.44243965917231814, -0.7960904085629007, -1.3519589598979067, -2.3603604098357542, -3.5649546107063506], [1.3002928480133693, -0.8317326586141811, -1.3956943066095788, -1.6191559512281009, -3.983670672417425], [1.9529882812251624, -0.10816113601415653, -1.3632995853600283, -1.8209334546557128, -3.7342725685484943], [0.5709561929950421, -0.34666973726665823, -1.5891662763542547, -2.0886716678726476, -3.961214057118379], [0.6894974459065449, -2.0079232684047232, -1.4214360512320499, -1.841092953482087, -3.835002230242423], [0.42444945967777176, -1.526659466840104, -1.4125846399152089, -1.7695634902396429, -4.031533093524619], [0.3974318694108469, -1.4814725567590523, -1.5325769723673683, -1.600585996044582, -4.063384875200155], [0.7778649102226258, -1.3335190036717026, -1.0310839873951227, -2.0000346503291446, -3.481855363867251], [0.6230672966758379, -1.4000130263159816, -0.9723304529874158, -1.9748227025873928, -3.473033429896156], [0.7541014645457185, -1.2297304450284021, -0.7982525677386092, -1.6810599539852216, -3.742426525027593], [0.5208867522099832, -0.8771781082003881, -1.448702449511491, -2.021409129043466, -3.955405983197113], [0.6942687005967766, -0.9260547224140072, -1.2992749050295918, -1.5920362783913768, -3.660149284272562], [0.6678192163364908, -0.9496895774275498, -1.3373413530090958, -1.6078867850567395, -3.5500388774761817], [0.7620275732673687, -1.2264623210259864, -1.5900932703105728, -1.9925534952150352, -3.9714602894844178], [0.9705464169883768, -1.3666536427072062, -1.6803437527793603, -1.9206453293010672, -3.8801655730911757], [1.0643312462834484, -1.4277079590405628, -1.6430151794921368, -2.0825142195076096, -3.685011186231013], [1.1190224884718483, -1.399524561180735, -1.63686017815937, -1.809337429583522, -3.4030545890474695], [1.3176060811513406, -1.3561107999203414, -1.2020168153764308, -1.744998000247288, -3.4464193830278567], [1.8548568510880923, -1.304494523292091, -1.2146638695106458, -1.4364698881818303, -3.883487170146761], [-0.15750917776116558, -1.7779056219524094, 1.4164740813386887, -0.9612078416120214, -3.4657476695311775], [1.4142616579562142, -0.9983237221264165, 0.6781558183805496, -1.0890853419323603, -3.454461804659933], [1.2817926836547036, -1.2691882094067706, -0.05947585094074004, -1.2352339414766778, -3.297481560394746], [1.3656458712973905, -1.0061283534180563, 0.04332036380825433, -1.8567740735679983, -3.644218566084842], [-0.1949262577317863, -1.2053744053422246, 0.47269758814964874, -2.1061843086925562, -3.5598262239359566], [0.764116167784147, -1.3841511146383405, 0.1470304514523848, -1.0005313067514336, -3.9101179194822824], [0.15354861245600337, -0.6530298704705576, -0.4640757944391908, -2.1008015421698074, -3.3931587095308537], [0.04354674253942735, -1.1210743614190117, -0.4486395299119955, -2.3000854560773307, -3.648066234229838], [-0.11458541141689124, -1.1318221372626662, -0.9831257122655189, -2.207547179615885, -3.534629000567715], [-0.029876091917883416, -1.1471562058158407, -1.145759944327192, -1.8579283211977125, -3.588495892597525], [-0.0651441513287673, -1.1288871424469233, -1.1039989761529478, -1.824284770221801, -3.6019870407326904], [-0.02014457865529199, -1.2419977971834815, -1.1229168160073921, -1.696580108219304, -3.963847151997526], [1.0483733942681928, -1.025831529369013, -1.4331220027824445, -2.10287582205416, -3.8233398546261337], [1.120873297072529, -1.1826757437866113, -1.8612028869660129, -1.88806758372476, -3.8435213066044014], [-0.48492932976792685, -1.1412054228559527, -0.7445115660206539, -1.8130881233879024, -3.482331023172281], [-0.46611729449130546, -1.0046194596129958, -0.8341441542407492, -1.8080143212476119, -3.3918127921162857], [-0.3062477061947888, -0.9424290089359136, -0.8500985182325822, -1.5891063332551094, -3.35617290971468], [1.2955950566878, -0.5223092091922722, -1.933559277673298, -1.994321568691613, -4.029893976301183], [0.8889510609597407, -0.3375628588103732, -1.1077595426602262, -2.0321196423149814, -3.879050377432885], [0.8725208201084486, -0.45175473863223853, -1.1047505215178528, -2.233816921354488, -4.000568114434132], [0.7429947817547538, -0.25531847648940315, -1.44266112425795, -2.5593065536834145, -3.619560439628854], [0.617820307292932, -0.8856736031142332, -1.4466585389019606, -2.3056495521791316, -3.7183376883032415], [0.6320461704466, -1.0199090314692552, -1.4958499432834822, -2.190521264655223, -3.792245916624507], [0.29095563885373854, -1.6505683088342276, -1.219996285309722, -1.6847082552656343, -3.721068899066638], [0.20501278207647283, -1.257038272343429, -1.354665317913166, -2.1888103326844908, -3.736939880630468], [0.7973035758094643, -1.0617492985778672, -1.1327334210652762, -2.4716291670566854, -3.515903550865998], [0.9628379150219624, -0.9369053466543753, -1.1566411633868294, -2.1209253477771024, -3.5616150137061364], [1.0999663124413948, -1.0093523478641606, -1.7199245440446314, -1.8502887729083772, -3.995272144151357], [0.21871327167322419, -1.0206663329278611, -1.070386269272433, -2.173240756674537, -3.821053942950931], [0.20317519994805297, -0.9757792519593705, -1.2506179004318299, -2.163037912016217, -3.934042014755108], [0.7392393154216506, -0.9406426560823008, -0.9250103630962458, -1.4281922189325553, -3.3567716894427564], [1.155742484363658, -0.6004342186755871, -0.8771619713414269, -1.383059944771735, -3.814653615031263], [1.4730331201069624, 0.46619731578744417, -0.592875153877538, -1.5027391984695149, -3.379587265435134], [1.694023365735651, 0.26296983081136927, -1.24134493652284, -1.9591634724441285, -3.7823153336382607], [0.7845322658456313, -1.3427189288983377, -1.706875288287135, -2.0800847299874254, -3.664826727699094], [0.9886655213455261, -0.4746426171780199, -1.2530414659266416, -1.827222005979943, -3.8541179643429504], [0.5523204552021934, -1.3506382311724385, -1.3534132909495449, -1.7671730798744993, -3.796134876985927], [0.4517644107170349, -1.2783226322418466, -1.2477886383638652, -1.7699499318541319, -3.8288124061990816], [0.8398311413803221, -0.9598646745017808, -1.6147874604579802, -1.8551046371388646, -3.7246021539711487], [0.6313606310225696, -1.0645871703544523, -1.6138275630082384, -2.1847143132555193, -3.820356634049502], [0.6313606310225696, -1.0645871703544523, -1.6138275630082384, -2.1847143132555193, -3.820356634049502], [0.5113153473508258, -0.9644427099848658, -1.5697248226526113, -2.289344092411342, -3.76260172802668], [0.5412564363093876, -0.9933625403240025, -1.536341628354008, -2.3812002508040853, -3.61451414719351], [0.8015596411690746, -1.6791388000620937, -1.593210198243543, -1.6598401772238058, -4.156213113175679], [0.20235088669227008, -1.4700372015699623, -1.3756321911267317, -2.1076406816130184, -3.584222056017824], [0.3205436810332303, -1.4939892061064954, -1.2965578761570737, -2.1411791640210907, -3.6328010724621347], [1.0764486853579418, -1.1472872364236062, -1.3342882428237273, -1.6542684478744536, -3.866196101505875], [0.8313306392633875, -1.3556541833741327, -1.5734755543045642, -2.149202562896691, -3.507708187310691], [0.3353931336671155, -1.0251681045168362, -1.414665116528694, -1.6230269896750726, -4.01945266185018], [0.3269756946835307, -1.1237249886021932, -0.9082531372188603, -1.429833327302532, -3.570690060433533], [3.17531080530828, 0.3603817966257357, -1.262214286813462, -1.25044696897894, -3.691145887658891], [3.1469713214062263, 0.32208503700910157, -1.157040347325829, -1.382712214714545, -3.7649096000919844], [2.697277147875149, 0.200287941364382, -1.5186101252823936, -1.8031186689442706, -3.9158451927655866], [2.6184567642178784, 0.002151228761047161, -1.6283811981002314, -1.7698066032246442, -3.9414524685210495], [2.357351362466817, -0.04595969324099265, -1.4003869933362276, -1.8691720887434022, -3.8464128883546578], [1.6344679618523872, 1.069192270401436, -1.505060945936786, -1.7338626550088387, -3.897842803757467], [2.2145140933557426, -0.6576908204140554, -0.5838617531277515, -1.2789614065529866, -3.5135146947628284], [1.982407230635059, -0.5926912663961759, -0.4475670556302395, -1.0074672686075754, -3.6195085357268852], [0.47287894210506376, -1.26979573070775, -1.3715295407122852, -1.5605523163362496, -3.835074319922517], [1.1195434045403942, -1.274117735025156, -1.5643554695909359, -2.0509673050276906, -3.8714434591804467], [1.274761077835483, -0.9240371545803281, -1.5090081528762247, -1.6030942577275356, -3.9963972273621358], [0.7318459649022175, -1.0195195146823988, -1.0612040676331755, -2.2036030015301167, -3.534755622374128], [0.3437340025509816, -0.7485034816104479, -1.3314642079604895, -2.013209475503822, -3.964842722495546], [0.6191683066210915, -0.5144041675032927, -0.8406276525262053, -1.8186385070879325, -3.393494906336209], [0.7658412755225983, -1.296841153995611, -1.3613666842507361, -1.9629768917441237, -3.6412777827846816], [1.0033304772191942, -0.6565403831440498, -1.1384159336981616, -1.7230487774114782, -3.612820390389454], [0.24848393896850457, -1.344313389552227, -1.9455362981204158, -2.0995994586113214, -3.8919899155253357], [-0.22060046742513684, -1.1654596075487094, -0.6394957568744539, -1.7352132716147408, -3.640526698898049], [0.4372405172917908, -1.438412399635127, -1.0527343407999754, -1.5754319820837157, -3.728978923004031], [0.4582707730216052, -1.147093999851169, -1.189124182037092, -1.6762557452483806, -3.5441315911482616], [0.4173957791503338, -0.8092163000990144, -1.3453073020435482, -1.9983670481282836, -4.280730748122984], [0.5676621743308093, -1.645093620097332, -1.4594580096680478, -2.151878784128671, -3.808810399786265], [0.4345059985705379, -0.987738317468061, -1.087833268895237, -2.32024653321878, -3.6756552223812586], [0.14695706633372949, -0.9792587995346428, -1.4088769000345411, -1.931428494759494, -3.6444983854856665], [1.0183488462483807, -1.2725032820270157, -1.8669477602068003, -2.0418951220872756, -3.5963505721145257], [0.9337864184184084, -1.2113140375751847, -1.7790183967867057, -2.0333352138766188, -3.6052398462871453], [1.2741803637497406, -0.8179151448586811, -1.268737507522248, -1.9553934118093617, -3.794492035457525], [0.660501509577198, -0.7355512434641194, -1.6736231530966053, -1.7405650552643566, -3.9675178607256063], [0.9131788644209277, -1.2376539750839948, -1.322912424515332, -2.1387015496668136, -3.716574880096709], [0.829938014668965, -1.1517576694114724, -1.2958454850169794, -1.9162592439725499, -3.611430390392218], [1.140155270861029, -0.6826580775216428, -1.2709259265152666, -1.7090565455968176, -3.890039052961289], [0.46054910275598054, -1.3596028547720695, -1.7646493332338897, -2.2840138651287862, -3.8990899759078954], [0.29576494687972266, -1.3222923849428454, -1.6133842591721546, -2.3725915801410724, -3.7962747000957], [0.4288793364451412, -1.374019382182209, -1.793128313276234, -2.4844209094022665, -3.5644533366829627], [0.9357801403394573, -1.2797165566240047, -1.4953682612819466, -2.070633426999655, -3.9728554436561323], [0.8842973345959204, -1.0973277545309577, -1.1661499793022587, -1.5696636959210686, -3.4639717978872437], [0.5345380363365955, -0.3213670038867294, -0.970491523443687, -2.028189509617371, -3.6991409451577666], [0.5174722818137789, -0.8984064662401827, -0.8237522396385892, -1.9488562797716749, -3.530821150683099], [0.4147793599284885, -0.9224535830557905, -0.8847765467907391, -1.999188988144249, -3.4652683902645225], [1.0868854703670776, -1.0418891388812825, -1.8912014971720188, -2.0751495807913223, -3.9838679407263657], [0.5337044779902471, -0.9679413171732901, -1.1730975961318477, -1.993588090784705, -3.864768025839459], [0.37539789021006253, -1.4486965110035632, -0.02793327324109271, -2.6398351465998395, -3.6582610206739568], [0.303718437452837, -1.1015249975318242, -0.09807591301171169, -0.9640031895375446, -3.42708531402892], [0.36724540472314904, -1.4964259203120567, 0.1677644635002443, -1.1138144183880625, -3.400122803568151], [0.6295135039402097, -0.9571239268744984, 0.6410273020003607, -1.5947551293667017, -3.4026289038533264], [0.6751916959711143, -1.021924975404888, 0.6289932732910879, -1.5726212523716325, -3.4378518691410265], [0.17604974257134393, -1.348321662790793, 0.7496481596906993, -0.9269528639679342, -3.4612694338537406], [0.5373139145933629, -1.8304906987870735, 0.40860379999275315, -1.7287890371721149, -3.3846673579778996], [0.9787325392651482, -1.3516416634423314, -0.13567877953213772, -1.8551714874853082, -3.4570621962672567], [0.7778086566818849, -0.6339134961207811, -0.7199994992202347, -1.8358244538030135, -3.6107092530286335], [0.9687562072443141, -1.7737864946467363, -0.8264030313179944, -1.5906764188158806, -3.709187011524082], [0.9149845471056491, -1.2450591117031835, -0.7820624789386188, -1.0770629807076062, -3.6839313807206775], [0.505678412083253, -1.2171593983059148, -1.3797869472736841, -2.642860692717462, -3.7642753323311515], [0.21022465845741287, -1.085019191897396, -1.314506289550296, -2.2586126986175294, -3.6680924894897995], [0.7774618497236562, -0.8989099387577132, -0.9377420408541097, -1.8848303114546447, -3.356409372720532], [0.3786921646116197, -1.2443133433336038, -1.4937982400095104, -2.0562468150844575, -3.877482774197032]], NamedTuple[(n_steps = 4, is_accept = true, acceptance_rate = 0.0024545532527459352, log_density = -9.484395844867521, hamiltonian_energy = 13.004695083723913, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 9031.520981687088, tree_depth = 2, numerical_error = true, step_size = 0.4, nom_step_size = 0.4, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = -9.484395844867521, hamiltonian_energy = 12.17078643291502, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 6.560863227750653e9, tree_depth = 0, numerical_error = true, step_size = 0.9382036249848683, nom_step_size = 0.9382036249848683, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9112217995765933, log_density = 10.848232562518719, hamiltonian_energy = 10.23913890045374, hamiltonian_energy_error = -1.5170024036478296, max_hamiltonian_energy_error = -1.5170024036478296, tree_depth = 3, numerical_error = false, step_size = 0.09262868911018016, nom_step_size = 0.09262868911018016, is_adapt = true), (n_steps = 47, is_accept = true, acceptance_rate = 0.9781527285717434, log_density = 13.393761821319794, hamiltonian_energy = -9.143386098886513, hamiltonian_energy_error = 0.013730446942782137, max_hamiltonian_energy_error = 0.05671848149037828, tree_depth = 5, numerical_error = false, step_size = 0.07620694529299019, nom_step_size = 0.07620694529299019, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9864123822055644, log_density = 12.57925299628031, hamiltonian_energy = -10.060644364741325, hamiltonian_energy_error = 0.03409466502678882, max_hamiltonian_energy_error = 0.054107124187050104, tree_depth = 3, numerical_error = false, step_size = 0.09524175457377208, nom_step_size = 0.09524175457377208, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.940570212582919, log_density = 12.197288306172934, hamiltonian_energy = -10.793227333923356, hamiltonian_energy_error = 0.056931439008289786, max_hamiltonian_energy_error = 0.209418323441664, tree_depth = 4, numerical_error = false, step_size = 0.14112017765447107, nom_step_size = 0.14112017765447107, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.7172012781665911, log_density = 12.6409088071712, hamiltonian_energy = -11.004988651124357, hamiltonian_energy_error = 0.12608676552362752, max_hamiltonian_energy_error = 1.0560523671880482, tree_depth = 3, numerical_error = false, step_size = 0.19830102837376132, nom_step_size = 0.19830102837376132, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.963635225866477, log_density = 11.625757997362891, hamiltonian_energy = -9.704148487373848, hamiltonian_energy_error = -0.14767480681157963, max_hamiltonian_energy_error = 0.1614302847836342, tree_depth = 4, numerical_error = false, step_size = 0.14579942134331755, nom_step_size = 0.14579942134331755, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.14075671623505936, log_density = 9.62455600771524, hamiltonian_energy = -4.895416750544873, hamiltonian_energy_error = -0.0816041289645657, max_hamiltonian_energy_error = 6.097521788329192, tree_depth = 3, numerical_error = false, step_size = 0.23616172658467496, nom_step_size = 0.23616172658467496, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9960007498105331, log_density = 9.638755789674075, hamiltonian_energy = -8.137536835666014, hamiltonian_energy_error = 0.004927772634701455, max_hamiltonian_energy_error = 0.009735908168787333, tree_depth = 4, numerical_error = false, step_size = 0.02904982534388218, nom_step_size = 0.02904982534388218, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9987235349150996, log_density = 11.064613379853892, hamiltonian_energy = -8.673525448205305, hamiltonian_energy_error = -0.00614970702989126, max_hamiltonian_energy_error = -0.019323885861545875, tree_depth = 4, numerical_error = false, step_size = 0.05362340738882686, nom_step_size = 0.05362340738882686, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9977840148849473, log_density = 11.418693602011409, hamiltonian_energy = -9.98381704733678, hamiltonian_energy_error = 0.0008228870456754578, max_hamiltonian_energy_error = -0.0834423382679983, tree_depth = 3, numerical_error = false, step_size = 0.10094577700000326, nom_step_size = 0.10094577700000326, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.42727720784007095, log_density = 11.110899503663159, hamiltonian_energy = -5.381228068104402, hamiltonian_energy_error = 1.1174548640893516, max_hamiltonian_energy_error = 1.7219287042062055, tree_depth = 4, numerical_error = false, step_size = 0.19028368557133715, nom_step_size = 0.19028368557133715, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9906242657825285, log_density = 11.31505995177799, hamiltonian_energy = -8.679214660742613, hamiltonian_energy_error = 0.014680388486446816, max_hamiltonian_energy_error = 0.03885262078363816, tree_depth = 3, numerical_error = false, step_size = 0.059943086566154206, nom_step_size = 0.059943086566154206, is_adapt = true), (n_steps = 47, is_accept = true, acceptance_rate = 0.9984889700842194, log_density = 12.72077916099851, hamiltonian_energy = -9.406954143893476, hamiltonian_energy_error = -0.02457724886888002, max_hamiltonian_energy_error = -0.20511066274446677, tree_depth = 5, numerical_error = false, step_size = 0.1111449075670017, nom_step_size = 0.1111449075670017, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 14.43242327944613, hamiltonian_energy = -11.4598962088563, hamiltonian_energy_error = -0.4547711334790705, max_hamiltonian_energy_error = -0.6812155841920173, tree_depth = 3, numerical_error = false, step_size = 0.21027678858418666, nom_step_size = 0.21027678858418666, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 9.45114399110157e-6, log_density = 14.43242327944613, hamiltonian_energy = -9.322748114153907, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 1175.1884767244067, tree_depth = 2, numerical_error = true, step_size = 0.39711054212305197, nom_step_size = 0.39711054212305197, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9565564654376478, log_density = 14.581376495147024, hamiltonian_energy = -6.642351908081964, hamiltonian_energy_error = 0.010358068378783614, max_hamiltonian_energy_error = 0.0842975807337556, tree_depth = 5, numerical_error = false, step_size = 0.035093489413425896, nom_step_size = 0.035093489413425896, is_adapt = true), (n_steps = 63, is_accept = true, acceptance_rate = 0.990322223995212, log_density = 10.571889162610484, hamiltonian_energy = -9.922764688158535, hamiltonian_energy_error = 0.025786730040325168, max_hamiltonian_energy_error = 0.03623740468904302, tree_depth = 6, numerical_error = false, step_size = 0.058509924817625514, nom_step_size = 0.058509924817625514, is_adapt = true), (n_steps = 23, is_accept = true, acceptance_rate = 0.9721262255334098, log_density = 12.305303542143442, hamiltonian_energy = -6.528307074326238, hamiltonian_energy_error = -0.07277523332296365, max_hamiltonian_energy_error = 0.15868800290854246, tree_depth = 4, numerical_error = false, step_size = 0.10725798061975217, nom_step_size = 0.10725798061975217, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9319518782943835, log_density = 11.340846467819576, hamiltonian_energy = -8.15256151801235, hamiltonian_energy_error = 0.043803125264638254, max_hamiltonian_energy_error = 0.21740337490671102, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9832821241227585, log_density = 11.986749510544643, hamiltonian_energy = -9.449302961741015, hamiltonian_energy_error = 0.034454219895838634, max_hamiltonian_energy_error = -0.14783385400155247, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9423095732239453, log_density = 12.991171226508557, hamiltonian_energy = -7.9638139348887735, hamiltonian_energy_error = -0.20537193587487312, max_hamiltonian_energy_error = -0.241924835415384, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9306605370272538, log_density = 12.676427446035714, hamiltonian_energy = -9.819937974044228, hamiltonian_energy_error = 0.040145757952014804, max_hamiltonian_energy_error = 0.1339939830687502, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.971656124060618, log_density = 11.571201227829256, hamiltonian_energy = -8.709463722215567, hamiltonian_energy_error = 0.0585820263271426, max_hamiltonian_energy_error = 0.08206922687688412, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9996791523604325, log_density = 11.772828002913961, hamiltonian_energy = -11.221605307853427, hamiltonian_energy_error = -0.021723858226371462, max_hamiltonian_energy_error = -0.09719400306618375, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9994913586046368, log_density = 13.08762493526407, hamiltonian_energy = -10.509767004108955, hamiltonian_energy_error = -0.07130613343872305, max_hamiltonian_energy_error = -0.11160370672690512, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9589434130520068, log_density = 14.92479776558398, hamiltonian_energy = -11.988266584282215, hamiltonian_energy_error = 0.04451997083402759, max_hamiltonian_energy_error = 0.10215588147323018, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9669400488730392, log_density = 13.577905173693232, hamiltonian_energy = -12.847063556881817, hamiltonian_energy_error = 0.038149651395928075, max_hamiltonian_energy_error = 0.06669798121942172, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9380873504578661, log_density = 12.97087478790178, hamiltonian_energy = -11.003205310411573, hamiltonian_energy_error = 0.034957725448469645, max_hamiltonian_energy_error = 0.12959778434849767, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9913362638788378, log_density = 15.224359044144803, hamiltonian_energy = -12.044069173330108, hamiltonian_energy_error = -0.07970839471196456, max_hamiltonian_energy_error = -0.1057078038876682, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9002315276766093, log_density = 13.372085928550888, hamiltonian_energy = -11.741885685418344, hamiltonian_energy_error = 0.11047919034867171, max_hamiltonian_energy_error = 0.19539021232133003, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9026308645379274, log_density = 14.989673082391487, hamiltonian_energy = -10.329317489197564, hamiltonian_energy_error = -0.06332248352338965, max_hamiltonian_energy_error = 0.21310327664119555, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9885068987723684, log_density = 15.448830521518053, hamiltonian_energy = -14.252088482735447, hamiltonian_energy_error = -0.021278302372881086, max_hamiltonian_energy_error = -0.04677939169761558, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9676977036045504, log_density = 13.96498555253179, hamiltonian_energy = -13.080206741526599, hamiltonian_energy_error = 0.08848150176424241, max_hamiltonian_energy_error = 0.09589749301525785, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9289928524580718, log_density = 13.92783824203457, hamiltonian_energy = -12.751140364395443, hamiltonian_energy_error = 0.035689516966188606, max_hamiltonian_energy_error = 0.19596778899370193, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9485324511116998, log_density = 13.048138712439085, hamiltonian_energy = -10.846883220365545, hamiltonian_energy_error = -0.07747566880937562, max_hamiltonian_energy_error = 0.13932111253697066, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9948784695780323, log_density = 13.401690660155941, hamiltonian_energy = -11.126173672332445, hamiltonian_energy_error = -0.008538287942544187, max_hamiltonian_energy_error = -0.050315236862211066, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9522202824557546, log_density = 14.34859243520802, hamiltonian_energy = -7.617627452839125, hamiltonian_energy_error = -0.00825823650731472, max_hamiltonian_energy_error = -0.1338768429472248, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9974584998698681, log_density = 15.692743889445188, hamiltonian_energy = -13.649908382713402, hamiltonian_energy_error = -0.08731629901503624, max_hamiltonian_energy_error = -0.08731629901503624, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8818647977089417, log_density = 12.046306812729794, hamiltonian_energy = -9.718670372295666, hamiltonian_energy_error = 0.044866648125037045, max_hamiltonian_energy_error = 0.28318654356761286, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9753749225102842, log_density = 11.701647108823767, hamiltonian_energy = -7.962006861483233, hamiltonian_energy_error = 0.020775196333817192, max_hamiltonian_energy_error = 0.07987559999302807, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9949920521590754, log_density = 11.738422312498335, hamiltonian_energy = -10.082355904530996, hamiltonian_energy_error = 0.013127912657472152, max_hamiltonian_energy_error = 0.03956536534937172, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9828580562207996, log_density = 14.458079111875321, hamiltonian_energy = -9.655011412813469, hamiltonian_energy_error = -0.07481517110488056, max_hamiltonian_energy_error = -0.14060667925845038, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9925894835172802, log_density = 14.277275608052362, hamiltonian_energy = -13.245564573514383, hamiltonian_energy_error = 0.01738266468006877, max_hamiltonian_energy_error = -0.04451281134761054, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9273730607027969, log_density = 13.219780084869523, hamiltonian_energy = -9.430220244489918, hamiltonian_energy_error = 0.09483549033562966, max_hamiltonian_energy_error = 0.15676390006452756, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9788055733828652, log_density = 15.295940712703176, hamiltonian_energy = -10.98867829193284, hamiltonian_energy_error = -0.07638614410570277, max_hamiltonian_energy_error = -0.15655930532126305, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9844197849370809, log_density = 16.145620402815307, hamiltonian_energy = -13.875777921126547, hamiltonian_energy_error = -0.05597431126107111, max_hamiltonian_energy_error = 0.056787761981853535, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9600815392215664, log_density = 15.116350550613653, hamiltonian_energy = -14.206448965836637, hamiltonian_energy_error = 0.04843956626213952, max_hamiltonian_energy_error = 0.05940935071853026, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9130402120018742, log_density = 13.23203413426452, hamiltonian_energy = -11.056288652807359, hamiltonian_energy_error = 0.029318767185259276, max_hamiltonian_energy_error = 0.20624651721477072, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9865930445564821, log_density = 10.907186033711783, hamiltonian_energy = -9.799067016845605, hamiltonian_energy_error = 0.024378810868199707, max_hamiltonian_energy_error = -0.23036788932313534, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9983692316469703, log_density = 12.003691723605241, hamiltonian_energy = -10.77017614818565, hamiltonian_energy_error = -0.03666656489982323, max_hamiltonian_energy_error = -0.03666656489982323, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9740722604508646, log_density = 12.189927137428446, hamiltonian_energy = -11.249402942154209, hamiltonian_energy_error = 0.05616023914888224, max_hamiltonian_energy_error = -0.1901479031979889, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9568868225529551, log_density = 11.869706944452357, hamiltonian_energy = -8.191857073893715, hamiltonian_energy_error = 0.011904471230463898, max_hamiltonian_energy_error = 0.1638465158563136, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9861169733582053, log_density = 12.142440956382352, hamiltonian_energy = -10.831955055706793, hamiltonian_energy_error = -0.008055394326691001, max_hamiltonian_energy_error = 0.05224366372952005, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9815809614912437, log_density = 13.08401624631043, hamiltonian_energy = -7.6745789227189585, hamiltonian_energy_error = -0.05690803156146007, max_hamiltonian_energy_error = -0.2407928429347237, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.970629409290244, log_density = 12.547613559869777, hamiltonian_energy = -10.280110430323365, hamiltonian_energy_error = 0.054718700858078506, max_hamiltonian_energy_error = -0.2949843816114761, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8980546286359629, log_density = 10.96356549191907, hamiltonian_energy = -6.941236683792644, hamiltonian_energy_error = 0.01710312968937977, max_hamiltonian_energy_error = -0.5343252280481119, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9977641362277253, log_density = 13.724806079312952, hamiltonian_energy = -9.519031180291272, hamiltonian_energy_error = -0.2602316085509724, max_hamiltonian_energy_error = -0.2602316085509724, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.923420085989478, log_density = 12.361199247068118, hamiltonian_energy = -8.625119124216091, hamiltonian_energy_error = 0.036542446093379866, max_hamiltonian_energy_error = 0.148822203718165, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9824158113525713, log_density = 15.096557668730611, hamiltonian_energy = -10.299997544533584, hamiltonian_energy_error = -0.036792004540506795, max_hamiltonian_energy_error = -0.1243084864697881, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.515479557791068, hamiltonian_energy = -14.916644771605766, hamiltonian_energy_error = -0.018695576418382487, max_hamiltonian_energy_error = -0.025229453890212028, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8273355960283845, log_density = 14.546517240532708, hamiltonian_energy = -11.716583609254716, hamiltonian_energy_error = 0.11895877049966863, max_hamiltonian_energy_error = 0.30498491331481326, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.936927254187823, log_density = 11.321978477131161, hamiltonian_energy = -9.985073077938967, hamiltonian_energy_error = 0.27451098027205845, max_hamiltonian_energy_error = 0.27451098027205845, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9932718814804362, log_density = 14.774021924720644, hamiltonian_energy = -8.70594445419652, hamiltonian_energy_error = -0.28798267435859337, max_hamiltonian_energy_error = -0.41058802446132603, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8792206386802129, log_density = 11.806519791138754, hamiltonian_energy = -9.714356763900744, hamiltonian_energy_error = 0.294556415637258, max_hamiltonian_energy_error = 0.294556415637258, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 14.685845461026066, hamiltonian_energy = -11.476108761080434, hamiltonian_energy_error = -0.2969907058553076, max_hamiltonian_energy_error = -0.3444767749031943, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9982471554774416, log_density = 15.315705315338848, hamiltonian_energy = -13.671564753177664, hamiltonian_energy_error = -0.06952986258724714, max_hamiltonian_energy_error = -0.08667434967239984, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9999348188936009, log_density = 16.332993475106974, hamiltonian_energy = -13.52163447521548, hamiltonian_energy_error = -0.08299300929092546, max_hamiltonian_energy_error = -0.08299300929092546, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.921751985332185, log_density = 13.368919107258776, hamiltonian_energy = -11.262396381821503, hamiltonian_energy_error = 0.09283485674684222, max_hamiltonian_energy_error = 0.12649418446902594, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.424107864765492, hamiltonian_energy = -13.013075404441311, hamiltonian_energy_error = -0.039643833979576826, max_hamiltonian_energy_error = -0.12510179578754688, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9378838120413217, log_density = 13.624083123025823, hamiltonian_energy = -12.47111615452339, hamiltonian_energy_error = 0.10947069786096364, max_hamiltonian_energy_error = -0.15437004134787635, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9764028145143895, log_density = 15.319050665265806, hamiltonian_energy = -11.497487753689466, hamiltonian_energy_error = -0.08686970574206754, max_hamiltonian_energy_error = -0.18775359758202192, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9983833335306898, log_density = 15.271722774799905, hamiltonian_energy = -14.474894848590228, hamiltonian_energy_error = -0.00342082030686619, max_hamiltonian_energy_error = -0.08581929327886506, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9994448227285327, log_density = 14.847706441172708, hamiltonian_energy = -14.646318108498402, hamiltonian_energy_error = -0.0013764612463589287, max_hamiltonian_energy_error = -0.05455444613470206, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8712637416751637, log_density = 15.098526164202433, hamiltonian_energy = -12.452062385459186, hamiltonian_energy_error = 0.06298921059647711, max_hamiltonian_energy_error = 0.26242010875830957, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9876817039602029, log_density = 14.78979886224388, hamiltonian_energy = -13.635887409230863, hamiltonian_energy_error = -0.02059360074036043, max_hamiltonian_energy_error = -0.07786380900163614, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9520838513714123, log_density = 12.399333237529031, hamiltonian_energy = -10.97141556578503, hamiltonian_energy_error = 0.07794205394016096, max_hamiltonian_energy_error = 0.1278235810059698, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9974105832541246, log_density = 13.515694954063395, hamiltonian_energy = -11.119870132567755, hamiltonian_energy_error = -0.021037469872634773, max_hamiltonian_energy_error = -0.09994191125674234, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9968278123715478, log_density = 14.949236815778644, hamiltonian_energy = -12.117673005111582, hamiltonian_energy_error = -0.13021213400798182, max_hamiltonian_energy_error = -0.13021213400798182, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7886079862349865, log_density = 13.783643278254083, hamiltonian_energy = -11.90997180365931, hamiltonian_energy_error = 0.31891957024556916, max_hamiltonian_energy_error = 0.40451588246160064, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9263067451598093, log_density = 13.276930485554445, hamiltonian_energy = -11.386598285678406, hamiltonian_energy_error = 0.03412809456674992, max_hamiltonian_energy_error = -0.3089138884927287, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.296418419430857, hamiltonian_energy = -12.580667817911749, hamiltonian_energy_error = -0.27647262689694685, max_hamiltonian_energy_error = -0.3213904158838119, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9120155771496922, log_density = 13.973107502016838, hamiltonian_energy = -11.281188154530017, hamiltonian_energy_error = 0.011240137103373016, max_hamiltonian_energy_error = 0.22258506339400164, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9621219524949939, log_density = 13.881105188942616, hamiltonian_energy = -10.641621114102257, hamiltonian_energy_error = 0.09097822086553897, max_hamiltonian_energy_error = 0.09974025847832912, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8908183561972486, log_density = 12.603729697163939, hamiltonian_energy = -9.691463443147917, hamiltonian_energy_error = 0.016649881504365638, max_hamiltonian_energy_error = 0.2830189514940251, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9550633131773235, log_density = 12.298069417379736, hamiltonian_energy = -9.386510669178344, hamiltonian_energy_error = 0.12910889048903051, max_hamiltonian_energy_error = 0.19573989334783803, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 15.106954165679035, hamiltonian_energy = -11.496286649494728, hamiltonian_energy_error = -0.23953455633613885, max_hamiltonian_energy_error = -0.2817765383129469, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9953731998443419, log_density = 15.190737248790946, hamiltonian_energy = -14.426461108917094, hamiltonian_energy_error = 0.021514590924505583, max_hamiltonian_energy_error = -0.10682627743078754, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9913063460136398, log_density = 15.608931649947118, hamiltonian_energy = -13.748321336537819, hamiltonian_energy_error = -0.03258092370433374, max_hamiltonian_energy_error = -0.06208285403857339, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9972989307601997, log_density = 16.216203921856835, hamiltonian_energy = -14.86250787458511, hamiltonian_energy_error = -0.07297326807371185, max_hamiltonian_energy_error = -0.07469849862573241, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9248370424054014, log_density = 12.800956644711237, hamiltonian_energy = -11.798446223225598, hamiltonian_energy_error = 0.07722488903756641, max_hamiltonian_energy_error = 0.12214854312438383, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8205316148832047, log_density = 11.684626428591745, hamiltonian_energy = -7.463132256113955, hamiltonian_energy_error = 0.14857674397558274, max_hamiltonian_energy_error = 0.3916545789511101, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.961516764398534, log_density = 9.53313711437411, hamiltonian_energy = -6.172334278505577, hamiltonian_energy_error = 0.18367126469967499, max_hamiltonian_energy_error = -0.29325268373081403, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9974341113852979, log_density = 11.312708748577618, hamiltonian_energy = -7.774921900705852, hamiltonian_energy_error = -0.1704807042124159, max_hamiltonian_energy_error = -0.26971171721994036, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9594253487750392, log_density = 12.601192192291878, hamiltonian_energy = -7.215222541686643, hamiltonian_energy_error = 0.032498148966867646, max_hamiltonian_energy_error = 0.07991551706839672, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.9437429172237817, log_density = 13.138990889144306, hamiltonian_energy = -8.89474548323721, hamiltonian_energy_error = -0.018340220297725196, max_hamiltonian_energy_error = 0.1523733051923486, tree_depth = 5, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9583842312784998, log_density = 14.032323180775133, hamiltonian_energy = -10.431580958287185, hamiltonian_energy_error = -0.15684785783010113, max_hamiltonian_energy_error = -0.22722687832795607, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.999029712787736, log_density = 14.649253536929104, hamiltonian_energy = -13.221982872287313, hamiltonian_energy_error = -0.036046489761424994, max_hamiltonian_energy_error = -0.0647027585203066, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9488334082429009, log_density = 13.093273931110994, hamiltonian_energy = -10.876086392698877, hamiltonian_energy_error = 0.06467716751098962, max_hamiltonian_energy_error = 0.08857538497925432, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9739524764809784, log_density = 14.763486047780624, hamiltonian_energy = -10.228386131624905, hamiltonian_energy_error = 0.03256893029653263, max_hamiltonian_energy_error = 0.08601317993966795, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.950250576540338, log_density = 12.922384274208676, hamiltonian_energy = -9.664933865980284, hamiltonian_energy_error = 0.012092934668100241, max_hamiltonian_energy_error = 0.14299532330130127, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8724770876793556, log_density = 9.270375267906745, hamiltonian_energy = -6.145410015909032, hamiltonian_energy_error = 0.34846816296546823, max_hamiltonian_energy_error = 0.34846816296546823, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9237489551298358, log_density = 10.315532443266253, hamiltonian_energy = -6.624045336385183, hamiltonian_energy_error = -0.27349553915585556, max_hamiltonian_energy_error = -0.4035809408715014, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.743280004707216, hamiltonian_energy = -8.958262947870784, hamiltonian_energy_error = -0.020655427057391762, max_hamiltonian_energy_error = -0.3588446354228285, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.970288007222758, log_density = 14.330940558812337, hamiltonian_energy = -6.499033170722149, hamiltonian_energy_error = -0.14284569271365566, max_hamiltonian_energy_error = -0.41488927968894274, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.855414653252892, log_density = 14.164024048788217, hamiltonian_energy = -9.191399101306606, hamiltonian_energy_error = 0.10324803801609228, max_hamiltonian_energy_error = 0.2828575573526919, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.933758772717723, log_density = 13.199643223479125, hamiltonian_energy = -10.619750013308618, hamiltonian_energy_error = 0.19050645053921045, max_hamiltonian_energy_error = 0.19050645053921045, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9971692249777941, log_density = 14.009282993483154, hamiltonian_energy = -11.98568079859052, hamiltonian_energy_error = -0.056633999885619346, max_hamiltonian_energy_error = -0.24163070445674428, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9808336094430948, log_density = 15.998786704327369, hamiltonian_energy = -12.763302587916183, hamiltonian_energy_error = -0.2096894786883876, max_hamiltonian_energy_error = -0.2096894786883876, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.869793577959507, log_density = 12.970547478607653, hamiltonian_energy = -10.250858331079527, hamiltonian_energy_error = 0.09617813247627893, max_hamiltonian_energy_error = 0.22066412851588701, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9626293116736883, log_density = 12.717655977357207, hamiltonian_energy = -8.144830761771296, hamiltonian_energy_error = 0.06374149737331969, max_hamiltonian_energy_error = 0.1516231378265882, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.417524521039788, hamiltonian_energy = -11.335374188532828, hamiltonian_energy_error = -0.17778866179690844, max_hamiltonian_energy_error = -0.23722603423127708, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 14.276013671582003, hamiltonian_energy = -11.903770673553637, hamiltonian_energy_error = -0.1304931411100032, max_hamiltonian_energy_error = -0.17763055594568655, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9914615155667477, log_density = 14.337751698033955, hamiltonian_energy = -12.790107708548682, hamiltonian_energy_error = -0.02308891336850394, max_hamiltonian_energy_error = 0.040632016806267046, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9999358319432557, log_density = 14.60285620193747, hamiltonian_energy = -13.7568406934068, hamiltonian_energy_error = -0.019098454678115218, max_hamiltonian_energy_error = -0.03915351177794513, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9358244491525256, log_density = 12.89681648896461, hamiltonian_energy = -11.351578622348448, hamiltonian_energy_error = 0.11059503183972019, max_hamiltonian_energy_error = 0.1322933220641751, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9944580039983315, log_density = 12.784581181662503, hamiltonian_energy = -10.84627601491479, hamiltonian_energy_error = 0.005144164426225117, max_hamiltonian_energy_error = -0.08220549508368791, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9429460561018852, log_density = 14.20563930763207, hamiltonian_energy = -10.220004130409503, hamiltonian_energy_error = -0.01841128160265093, max_hamiltonian_energy_error = 0.17687339253038736, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9973099779117466, log_density = 14.964308993154038, hamiltonian_energy = -13.244392675361375, hamiltonian_energy_error = -0.07114322676051366, max_hamiltonian_energy_error = -0.09921084051688922, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9899101481737923, log_density = 13.328742691938498, hamiltonian_energy = -12.013958624912803, hamiltonian_energy_error = -0.013646715433417, max_hamiltonian_energy_error = -0.07485710827379677, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9952245552235479, log_density = 13.822204055883178, hamiltonian_energy = -13.097929752118755, hamiltonian_energy_error = -0.0048061764747799884, max_hamiltonian_energy_error = -0.03796556322139644, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9733070259181468, log_density = 14.143503135579884, hamiltonian_energy = -13.003750468321499, hamiltonian_energy_error = 0.03247811218676233, max_hamiltonian_energy_error = 0.06314799606877486, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9865702218171069, log_density = 13.27277708813858, hamiltonian_energy = -12.021906352465972, hamiltonian_energy_error = 0.052181357649409676, max_hamiltonian_energy_error = -0.08766392361879483, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9809807269905754, log_density = 15.063908093798277, hamiltonian_energy = -11.262293822109328, hamiltonian_energy_error = -0.08942599367481208, max_hamiltonian_energy_error = -0.09703972386154547, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9573379856252925, log_density = 14.693827232923335, hamiltonian_energy = -13.975992196314863, hamiltonian_energy_error = 0.033306611505190986, max_hamiltonian_energy_error = 0.0617664844548802, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7919453757093938, log_density = 13.723251979949776, hamiltonian_energy = -10.820822668045256, hamiltonian_energy_error = 0.26179796091773966, max_hamiltonian_energy_error = 0.41024473201034084, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9403780469017112, log_density = 13.160731974243966, hamiltonian_energy = -11.621556786628634, hamiltonian_energy_error = 0.012891431529272523, max_hamiltonian_energy_error = 0.18757511564614227, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9758203233409629, log_density = 16.175948764426444, hamiltonian_energy = -10.37619991425605, hamiltonian_energy_error = -0.19357303363177358, max_hamiltonian_energy_error = -0.19357303363177358, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9670712739140409, log_density = 16.254653820658945, hamiltonian_energy = -14.589184273298708, hamiltonian_energy_error = -0.010923858312974488, max_hamiltonian_energy_error = 0.09418151095395366, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9492869819491033, log_density = 14.146700867560673, hamiltonian_energy = -13.860993357759732, hamiltonian_energy_error = 0.08450196347383176, max_hamiltonian_energy_error = 0.08450196347383176, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9478616513494379, log_density = 14.209046203399838, hamiltonian_energy = -11.308532003669004, hamiltonian_energy_error = 0.05994486323545267, max_hamiltonian_energy_error = 0.13198875614558858, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9393616520635553, log_density = 10.348515034237739, hamiltonian_energy = -8.477400828720068, hamiltonian_energy_error = 0.21750498886009595, max_hamiltonian_energy_error = 0.21750498886009595, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9903882635307849, log_density = 15.814603316699397, hamiltonian_energy = -9.123335917790659, hamiltonian_energy_error = -0.2741320700639811, max_hamiltonian_energy_error = -0.2741320700639811, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8065544065570145, log_density = 13.909064631273074, hamiltonian_energy = -11.511510103980067, hamiltonian_energy_error = 0.1702697312044421, max_hamiltonian_energy_error = 0.3967541648113375, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9308282806843171, log_density = 12.121142481344123, hamiltonian_energy = -10.583313677866869, hamiltonian_energy_error = 0.0937405230818733, max_hamiltonian_energy_error = 0.20733483941438813, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9860324405945159, log_density = 11.643609054067376, hamiltonian_energy = -10.072707712337674, hamiltonian_energy_error = 0.04820284184962098, max_hamiltonian_energy_error = -0.12381463083905686, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9815485182880883, log_density = 11.864805039284581, hamiltonian_energy = -9.689748487322051, hamiltonian_energy_error = 0.06494200300822328, max_hamiltonian_energy_error = -0.2183946900135112, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.998515241847676, log_density = 11.561984289508414, hamiltonian_energy = -9.928137894356135, hamiltonian_energy_error = 0.022523124225006796, max_hamiltonian_energy_error = -0.2827667658974633, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9996542155126511, log_density = 10.632840096150158, hamiltonian_energy = -8.487394931417786, hamiltonian_energy_error = -0.02590957846649644, max_hamiltonian_energy_error = -0.24303623584926015, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.167259289839977, hamiltonian_energy = -9.372996953150427, hamiltonian_energy_error = -0.14605105862312406, max_hamiltonian_energy_error = -0.22873012267501913, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9903827059483578, log_density = 14.727741512586094, hamiltonian_energy = -11.196873312922936, hamiltonian_energy_error = -0.154573482018586, max_hamiltonian_energy_error = -0.1552921450921083, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9989645248977326, log_density = 14.874499328731503, hamiltonian_energy = -13.06843346466849, hamiltonian_energy_error = 0.011733177208078871, max_hamiltonian_energy_error = -0.12285866066288342, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9027739577680636, log_density = 14.754198494480415, hamiltonian_energy = -12.962037621494193, hamiltonian_energy_error = 0.08008948069802635, max_hamiltonian_energy_error = 0.1661334604493696, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9641659932911787, log_density = 15.60944245935152, hamiltonian_energy = -12.674715987873004, hamiltonian_energy_error = -0.13118104171724454, max_hamiltonian_energy_error = -0.13118104171724454, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9703986528002161, log_density = 14.620176149561907, hamiltonian_energy = -12.60368824290486, hamiltonian_energy_error = -0.016750483057121457, max_hamiltonian_energy_error = 0.08354706269208378, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9493730707941126, log_density = 13.782537521569555, hamiltonian_energy = -11.496171234071833, hamiltonian_energy_error = 0.07179037091734841, max_hamiltonian_energy_error = 0.10490177005132573, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9520862837655958, log_density = 14.249003289081305, hamiltonian_energy = -11.189336573119263, hamiltonian_energy_error = 0.03733307843211087, max_hamiltonian_energy_error = 0.1334170293200927, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8708455399649194, log_density = 8.376033505662647, hamiltonian_energy = -5.4296529287169975, hamiltonian_energy_error = 0.1597313279528123, max_hamiltonian_energy_error = 0.4203404323720381, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9985170093085795, log_density = 8.890340018167949, hamiltonian_energy = -6.392555899144119, hamiltonian_energy_error = -0.03128410112364044, max_hamiltonian_energy_error = -0.36296807549152277, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9870835668819734, log_density = 7.65418707904997, hamiltonian_energy = -6.880373677434969, hamiltonian_energy_error = 0.1313646597235021, max_hamiltonian_energy_error = -0.26552367672411137, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9854627206425121, log_density = 9.66602051707506, hamiltonian_energy = -6.02288433156815, hamiltonian_energy_error = 0.006301871869998088, max_hamiltonian_energy_error = -0.327803696382424, tree_depth = 5, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9823002791564471, log_density = 12.238662030025434, hamiltonian_energy = -8.704167583099476, hamiltonian_energy_error = -0.016476419715479196, max_hamiltonian_energy_error = -0.18460894174568843, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9640654720857263, log_density = 10.614572791976205, hamiltonian_energy = -6.285569223451039, hamiltonian_energy_error = -0.13185843623065896, max_hamiltonian_energy_error = 0.1906222103952313, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7980618535583351, log_density = 12.281205012099921, hamiltonian_energy = -4.189360765232747, hamiltonian_energy_error = 0.21442296848016884, max_hamiltonian_energy_error = 0.5247916173880851, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9948641551666298, log_density = 11.923405912041915, hamiltonian_energy = -9.919615438555205, hamiltonian_energy_error = -0.05322748915519249, max_hamiltonian_energy_error = -0.2746754792645927, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.846956331213765, log_density = 10.679261970688387, hamiltonian_energy = -6.248624705901148, hamiltonian_energy_error = -0.055793547167194646, max_hamiltonian_energy_error = 0.4888333924672965, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9942181963891832, log_density = 10.372319397703704, hamiltonian_energy = -8.325283683097643, hamiltonian_energy_error = 0.035920877159435705, max_hamiltonian_energy_error = -0.07976724568811377, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9994698150032654, log_density = 11.867383510502824, hamiltonian_energy = -8.841784217911503, hamiltonian_energy_error = -0.032296903417716294, max_hamiltonian_energy_error = -0.1600752070727136, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9708611625833262, log_density = 12.781250057694692, hamiltonian_energy = -10.518759648963087, hamiltonian_energy_error = -0.008770107569850083, max_hamiltonian_energy_error = 0.0858051654217693, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8154810102891878, log_density = 10.91528581142166, hamiltonian_energy = -9.181421691406072, hamiltonian_energy_error = 0.31326630158782365, max_hamiltonian_energy_error = 0.46723783283216314, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9767611477435989, log_density = 10.583679777813215, hamiltonian_energy = -8.902986982693179, hamiltonian_energy_error = 0.06842775282827596, max_hamiltonian_energy_error = -0.36023296776064484, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9756618694795642, log_density = 9.952547545585233, hamiltonian_energy = -7.485970041318844, hamiltonian_energy_error = -0.03938238180195963, max_hamiltonian_energy_error = -0.3739646689428735, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9522122551347321, log_density = 9.696939504486252, hamiltonian_energy = -5.648447482406677, hamiltonian_energy_error = 0.14441885365817342, max_hamiltonian_energy_error = -0.32431525366020786, tree_depth = 5, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.996859103984319, log_density = 11.198867562455682, hamiltonian_energy = -6.124678455325828, hamiltonian_energy_error = -0.2661515313349643, max_hamiltonian_energy_error = -0.4209008156825007, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8678736037189217, log_density = 10.501560860525139, hamiltonian_energy = -7.635840718863911, hamiltonian_energy_error = 0.1456216096162226, max_hamiltonian_energy_error = 0.4002770993307987, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9981192970417688, log_density = 11.272446702394053, hamiltonian_energy = -9.154116089411506, hamiltonian_energy_error = -0.11352095776808113, max_hamiltonian_energy_error = -0.23607440177796235, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9951837228929383, log_density = 12.050655607964378, hamiltonian_energy = -10.254586863362341, hamiltonian_energy_error = -0.008625673318405802, max_hamiltonian_energy_error = -0.16145844634732676, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9753530183599127, log_density = 13.305856727732719, hamiltonian_energy = -10.461328168464405, hamiltonian_energy_error = -0.07688065768252628, max_hamiltonian_energy_error = 0.08831323851714856, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9845254592136754, log_density = 12.417971634328065, hamiltonian_energy = -11.973985992598681, hamiltonian_energy_error = 0.023805095641098006, max_hamiltonian_energy_error = -0.043153345754403105, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.9990237764925854, log_density = 12.829138894842044, hamiltonian_energy = -11.403694087075737, hamiltonian_energy_error = -0.018690094463821083, max_hamiltonian_energy_error = -0.1340462201735697, tree_depth = 5, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9785324791186514, log_density = 12.819884582686246, hamiltonian_energy = -11.094231887754642, hamiltonian_energy_error = 0.00032547914291747304, max_hamiltonian_energy_error = -0.12019885491460869, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9752356987647172, log_density = 14.51550369258991, hamiltonian_energy = -11.31444429970775, hamiltonian_energy_error = 0.00015252680794297646, max_hamiltonian_energy_error = -0.1715413092528557, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9834718756625589, log_density = 13.738435311913673, hamiltonian_energy = -12.750080317897398, hamiltonian_energy_error = 0.006921906355062291, max_hamiltonian_energy_error = -0.1043799811117303, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9395027867533472, log_density = 12.532335733710152, hamiltonian_energy = -10.902695920104957, hamiltonian_energy_error = 0.048099469448667165, max_hamiltonian_energy_error = 0.14665325916053362, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9404916691233121, log_density = 13.109242885795476, hamiltonian_energy = -9.242503867974007, hamiltonian_energy_error = -0.08603256599146825, max_hamiltonian_energy_error = 0.15578427934495842, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9133000724480851, log_density = 13.354431698479628, hamiltonian_energy = -10.356075966673753, hamiltonian_energy_error = 0.1639241963369571, max_hamiltonian_energy_error = 0.23442074766416, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9843397275195624, log_density = 16.117434140926942, hamiltonian_energy = -11.90208285911027, hamiltonian_energy_error = -0.19322186421748277, max_hamiltonian_energy_error = -0.23184090646151212, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9898564071927984, log_density = 15.760933323126245, hamiltonian_energy = -15.198015885384194, hamiltonian_energy_error = 0.01388274111673482, max_hamiltonian_energy_error = 0.031125909678877406, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9887312380347376, log_density = 15.266295764944187, hamiltonian_energy = -14.610584026648048, hamiltonian_energy_error = 0.006080460286353784, max_hamiltonian_energy_error = 0.030816039669845807, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8150430303450544, log_density = 12.280201224645346, hamiltonian_energy = -9.738133604622632, hamiltonian_energy_error = 0.2023306565531584, max_hamiltonian_energy_error = 0.4356964401880994, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9887213238113003, log_density = 14.596516329252534, hamiltonian_energy = -10.145852819624608, hamiltonian_energy_error = -0.1385122704339583, max_hamiltonian_energy_error = -0.19666242078918295, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8420076782187422, log_density = 14.565611065752762, hamiltonian_energy = -9.611519666576445, hamiltonian_energy_error = 0.09198733569818884, max_hamiltonian_energy_error = 0.3151001600211494, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7880147908138301, log_density = 11.432424981457594, hamiltonian_energy = -8.370910521634316, hamiltonian_energy_error = 0.33815444561613717, max_hamiltonian_energy_error = 0.6048827523095444, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9680161543958066, log_density = 15.592193265417286, hamiltonian_energy = -10.004293630756012, hamiltonian_energy_error = -0.20893235562814638, max_hamiltonian_energy_error = -0.23960217393685923, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8831795409202094, log_density = 13.533736467779923, hamiltonian_energy = -12.425218203315756, hamiltonian_energy_error = 0.22491932375829293, max_hamiltonian_energy_error = 0.22491932375829293, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9995514432333227, log_density = 11.490873080509417, hamiltonian_energy = -10.180295026801105, hamiltonian_energy_error = 0.0005391426792904497, max_hamiltonian_energy_error = -0.26813506665510367, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9963180882581213, log_density = 14.788265021282378, hamiltonian_energy = -10.683981881599006, hamiltonian_energy_error = -0.2112605302278041, max_hamiltonian_energy_error = -0.26105695169825793, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8454153223692296, log_density = 11.76106167394294, hamiltonian_energy = -9.54912130328056, hamiltonian_energy_error = 0.22173033043127255, max_hamiltonian_energy_error = 0.3311950974049296, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.837418557981612, hamiltonian_energy = -10.770404428856782, hamiltonian_energy_error = -0.08782603078635631, max_hamiltonian_energy_error = -0.1801733032671784, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9995034830653028, log_density = 12.722182039061078, hamiltonian_energy = -11.426270757808764, hamiltonian_energy_error = -0.027598104951076508, max_hamiltonian_energy_error = -0.08738974136980993, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9566972675575495, log_density = 13.866370974154902, hamiltonian_energy = -10.945271193351392, hamiltonian_energy_error = -0.024847918691129678, max_hamiltonian_energy_error = 0.11673604029552109, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9841268562657545, log_density = 14.80865121213587, hamiltonian_energy = -12.58638578827078, hamiltonian_energy_error = 0.008501661374694436, max_hamiltonian_energy_error = -0.14630811283704226, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9850444597017192, log_density = 14.58290508745075, hamiltonian_energy = -12.777286933921795, hamiltonian_energy_error = -0.018700376696669352, max_hamiltonian_energy_error = -0.11577185298600945, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9636047632169124, log_density = 15.500277234534067, hamiltonian_energy = -13.304105553923556, hamiltonian_energy_error = -0.08290808491726409, max_hamiltonian_energy_error = 0.14210077884616368, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8922633211083802, log_density = 15.70514662058094, hamiltonian_energy = -12.693103399962666, hamiltonian_energy_error = -0.01576580828876928, max_hamiltonian_energy_error = 0.2974398260404385, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9581307917589125, log_density = 15.398973660472164, hamiltonian_energy = -14.290135325569477, hamiltonian_energy_error = 0.0126641227528701, max_hamiltonian_energy_error = 0.09782741545805784, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8217449751546722, log_density = 13.898421640799107, hamiltonian_energy = -11.118398990245812, hamiltonian_energy_error = 0.1246160938298928, max_hamiltonian_energy_error = 0.31316961366116836, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9979234574615844, log_density = 13.505306108480108, hamiltonian_energy = -12.335270315611302, hamiltonian_energy_error = -0.008409747815905533, max_hamiltonian_energy_error = -0.1198867953589442, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9791816194401826, log_density = 13.60095532095053, hamiltonian_energy = -10.85151824235205, hamiltonian_energy_error = -0.0312485346417688, max_hamiltonian_energy_error = -0.16215455728915096, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9183974693776124, log_density = 11.725719670341821, hamiltonian_energy = -9.760585575742887, hamiltonian_energy_error = 0.10582645988421646, max_hamiltonian_energy_error = 0.19731737531121496, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6907812564926393, log_density = 7.05934653022906, hamiltonian_energy = -5.06470273688161, hamiltonian_energy_error = 0.3444210568419166, max_hamiltonian_energy_error = 0.4660965738239655, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9965735461628552, log_density = 6.515044348981096, hamiltonian_energy = -3.1226717621812417, hamiltonian_energy_error = 0.007797584945449909, max_hamiltonian_energy_error = -0.31056830822385706, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9134692071069114, log_density = 6.826772388740556, hamiltonian_energy = -1.712463090228626, hamiltonian_energy_error = -0.0040619946636297755, max_hamiltonian_energy_error = 0.4639129908732482, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.073390832066835, hamiltonian_energy = -6.392773307983152, hamiltonian_energy_error = -0.23061960823266858, max_hamiltonian_energy_error = -0.6426168763950146, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9950945700557949, log_density = 13.017801783140989, hamiltonian_energy = -6.939660191201758, hamiltonian_energy_error = -0.07999182090883306, max_hamiltonian_energy_error = -0.402188125197223, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9491276543525284, log_density = 10.878099750049113, hamiltonian_energy = -8.522126476621024, hamiltonian_energy_error = 0.11873588638656862, max_hamiltonian_energy_error = 0.11873588638656862, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9975814993357872, log_density = 12.325007228085958, hamiltonian_energy = -8.932841555701488, hamiltonian_energy_error = -0.09084192266812074, max_hamiltonian_energy_error = -0.10915851268392629, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9876281850932375, log_density = 12.164315603057691, hamiltonian_energy = -10.063558049563003, hamiltonian_energy_error = 0.04864126799847668, max_hamiltonian_energy_error = -0.20365279025444316, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9826858787976092, log_density = 10.293388465852749, hamiltonian_energy = -7.3534295273150185, hamiltonian_energy_error = -0.0214165011369154, max_hamiltonian_energy_error = -0.40600337044723744, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.969032188948605, log_density = 12.061056794532604, hamiltonian_energy = -6.805093677334784, hamiltonian_energy_error = -0.054988298235137734, max_hamiltonian_energy_error = 0.09879146180058918, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.906450365240657, log_density = 11.65205745248601, hamiltonian_energy = -9.02287508761908, hamiltonian_energy_error = 0.17465873005484944, max_hamiltonian_energy_error = 0.25450892402484904, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9976106645694606, log_density = 13.34657041940409, hamiltonian_energy = -10.255539420681842, hamiltonian_energy_error = -0.04198591532427365, max_hamiltonian_energy_error = -0.36816734771087845, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9812860226845092, log_density = 13.360185236544135, hamiltonian_energy = -11.854037094585511, hamiltonian_energy_error = -0.013241094627439054, max_hamiltonian_energy_error = -0.229715897842782, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.939756361948484, log_density = 14.308284589549672, hamiltonian_energy = -10.541366566607337, hamiltonian_energy_error = 0.00451311015877387, max_hamiltonian_energy_error = -0.2597589380386598, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.984526118350462, log_density = 14.532891037694501, hamiltonian_energy = -12.890396229730875, hamiltonian_energy_error = -0.060372048998527106, max_hamiltonian_energy_error = -0.23173698863619308, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9722349676844636, log_density = 11.856893775392289, hamiltonian_energy = -10.068671695263381, hamiltonian_energy_error = 0.06725880093223147, max_hamiltonian_energy_error = 0.1300331327904587, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9936878651102509, log_density = 12.849189987861703, hamiltonian_energy = -10.144179781776838, hamiltonian_energy_error = 0.022402068848938583, max_hamiltonian_energy_error = -0.1960705986023381, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9643522667789569, log_density = 13.63199776286764, hamiltonian_energy = -10.12778218879354, hamiltonian_energy_error = -0.0007694337155328412, max_hamiltonian_energy_error = 0.20630456458725455, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8993278374471309, log_density = 14.343353256693334, hamiltonian_energy = -10.504133964844264, hamiltonian_energy_error = -0.030824442558284204, max_hamiltonian_energy_error = 0.43164442623642074, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9507217811172671, log_density = 13.191036699109464, hamiltonian_energy = -12.471279099018629, hamiltonian_energy_error = 0.10304858727578292, max_hamiltonian_energy_error = -0.20498391471022437, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9949638136027537, log_density = 13.833529373854038, hamiltonian_energy = -10.753711363087003, hamiltonian_energy_error = -0.14291405540076596, max_hamiltonian_energy_error = -0.32724347928706976, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9763420823244935, log_density = 14.070902896974474, hamiltonian_energy = -10.810134665766515, hamiltonian_energy_error = -0.050119837078087315, max_hamiltonian_energy_error = -0.1101067131816027, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8969003980413961, log_density = 11.116141225803755, hamiltonian_energy = -7.636774322901855, hamiltonian_energy_error = 0.15608881733109747, max_hamiltonian_energy_error = 0.3306667280067277, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9576309337465349, log_density = 12.029622576938866, hamiltonian_energy = -8.897629479915766, hamiltonian_energy_error = -0.10727552520435069, max_hamiltonian_energy_error = -0.4123837329064468, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.892824060797602, log_density = 10.429563192784615, hamiltonian_energy = -9.46205536327292, hamiltonian_energy_error = 0.1551941919188895, max_hamiltonian_energy_error = 0.18343412608158438, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9587165061891824, log_density = 13.940636766392965, hamiltonian_energy = -7.52927447571292, hamiltonian_energy_error = -0.10765565408220912, max_hamiltonian_energy_error = -0.45879571599977886, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.23716346078022, hamiltonian_energy = -13.902060072878939, hamiltonian_energy_error = -0.09162524128004179, max_hamiltonian_energy_error = -0.09162524128004179, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9783074190756077, log_density = 14.19065579643838, hamiltonian_energy = -13.361370803327691, hamiltonian_energy_error = 0.05013600341235147, max_hamiltonian_energy_error = 0.05344310685408438, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9837839615121909, log_density = 16.319893713455777, hamiltonian_energy = -11.725978359497706, hamiltonian_energy_error = -0.15990817450451011, max_hamiltonian_energy_error = -0.15990817450451011, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9614911235955421, log_density = 15.295073883439708, hamiltonian_energy = -14.66413357037188, hamiltonian_energy_error = 0.05569255856791244, max_hamiltonian_energy_error = 0.06074580888845027, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9286639946417826, log_density = 13.145633585436453, hamiltonian_energy = -11.221585991197735, hamiltonian_energy_error = 0.0342430552155335, max_hamiltonian_energy_error = 0.12813768078042642, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9156232266039398, log_density = 16.359201208142157, hamiltonian_energy = -11.606108262439793, hamiltonian_energy_error = -0.0600036804116062, max_hamiltonian_energy_error = 0.1624793933471249, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8912063226598254, log_density = 12.11179061853482, hamiltonian_energy = -9.732692641688837, hamiltonian_energy_error = 0.11120195821624002, max_hamiltonian_energy_error = 0.20660801727622058, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9910713954023255, log_density = 12.90809481044866, hamiltonian_energy = -11.358445662203895, hamiltonian_energy_error = 0.019410411508472336, max_hamiltonian_energy_error = -0.1329685497442874, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9780290024959297, log_density = 12.688385057622948, hamiltonian_energy = -11.982837790085355, hamiltonian_energy_error = 0.04025087608170885, max_hamiltonian_energy_error = -0.04391665441630188, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9921552703990281, log_density = 10.864463221368524, hamiltonian_energy = -7.68511716899331, hamiltonian_energy_error = -0.09484309771590027, max_hamiltonian_energy_error = -0.14864368057493849, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9934107013436978, log_density = 13.417830267886966, hamiltonian_energy = -10.561620539736694, hamiltonian_energy_error = -0.01110942504412371, max_hamiltonian_energy_error = -0.06030801318553536, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9961354306249786, log_density = 13.835415035953037, hamiltonian_energy = -12.426532551340188, hamiltonian_energy_error = 0.025663817603916783, max_hamiltonian_energy_error = -0.09251060582335136, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9034948532873133, log_density = 12.790508519936783, hamiltonian_energy = -8.97594899091617, hamiltonian_energy_error = 0.1122139471265271, max_hamiltonian_energy_error = 0.18590050429030924, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9935901738655349, log_density = 12.77071446709118, hamiltonian_energy = -10.662365948619573, hamiltonian_energy_error = -0.011510084850822722, max_hamiltonian_energy_error = -0.17477337317587427, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9713859053658163, log_density = 13.116669024517282, hamiltonian_energy = -7.4754915638413575, hamiltonian_energy_error = -0.04374669795150865, max_hamiltonian_energy_error = 0.1147268874230214, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8834203369070864, log_density = 13.045427233543798, hamiltonian_energy = -9.606301011630197, hamiltonian_energy_error = -0.012161246836974726, max_hamiltonian_energy_error = 0.3340261267890696, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9994320879340347, log_density = 13.840430591958862, hamiltonian_energy = -12.19637538192042, hamiltonian_energy_error = -0.0677261399376956, max_hamiltonian_energy_error = -0.23878386057290868, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9704054694491444, log_density = 13.863409454413844, hamiltonian_energy = -12.56290393489913, hamiltonian_energy_error = 0.03977238794886517, max_hamiltonian_energy_error = 0.109766314034907, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9132482050189662, log_density = 11.827811663754954, hamiltonian_energy = -9.13510668854334, hamiltonian_energy_error = 0.1901246290386034, max_hamiltonian_energy_error = 0.2543702809106261, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 13.63837205231232, hamiltonian_energy = -11.393017256340265, hamiltonian_energy_error = -0.20655822917058053, max_hamiltonian_energy_error = -0.23924918954649677, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9919001788113222, log_density = 16.06262721942757, hamiltonian_energy = -12.587928627050218, hamiltonian_energy_error = -0.04860519613984593, max_hamiltonian_energy_error = -0.05499124588806836, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8581970999682426, log_density = 13.979296496550013, hamiltonian_energy = -11.159580533018724, hamiltonian_energy_error = 0.014417850873678972, max_hamiltonian_energy_error = 0.3018589735616306, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.773848988209861, log_density = 10.7566354940855, hamiltonian_energy = -10.433095335515317, hamiltonian_energy_error = 0.4267886538252377, max_hamiltonian_energy_error = 0.4267886538252377, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9890565853181257, log_density = 10.858846773151653, hamiltonian_energy = -7.931114583017594, hamiltonian_energy_error = -0.03765655595941553, max_hamiltonian_energy_error = -0.47472505207785964, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 12.248607548741568, hamiltonian_energy = -10.70424454860056, hamiltonian_energy_error = -0.16683389912376256, max_hamiltonian_energy_error = -0.49933824244148894, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8901130209477108, log_density = 13.714146210358505, hamiltonian_energy = -8.069283834726493, hamiltonian_energy_error = -0.13716094249928723, max_hamiltonian_energy_error = 0.43704672753333096, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9966038830759765, log_density = 13.747027186009857, hamiltonian_energy = -12.544168365236759, hamiltonian_energy_error = 0.024915518026583428, max_hamiltonian_energy_error = -0.1665723853588723, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9684749789562425, log_density = 12.446495195621768, hamiltonian_energy = -10.862229178533994, hamiltonian_energy_error = 0.09974520061526349, max_hamiltonian_energy_error = -0.20230629531873845, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.54730221058482, hamiltonian_energy = -8.596079880620243, hamiltonian_energy_error = -0.1574168456650913, max_hamiltonian_energy_error = -0.34632707054912437, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9778372119919313, log_density = 14.734373075495974, hamiltonian_energy = -10.107600659252704, hamiltonian_energy_error = -0.07173305916600725, max_hamiltonian_energy_error = -0.13206481104874968, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.955295841329458, log_density = 13.053862629417466, hamiltonian_energy = -11.091988189905065, hamiltonian_energy_error = 0.08255171241090764, max_hamiltonian_energy_error = 0.13245953949596867, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.898798660416937, log_density = 12.80134509301707, hamiltonian_energy = -9.439750031591014, hamiltonian_energy_error = 0.013329107976879584, max_hamiltonian_energy_error = 0.41458220247152866, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9933391726906592, log_density = 13.26433853439389, hamiltonian_energy = -11.291502904649139, hamiltonian_energy_error = -0.026856593639047688, max_hamiltonian_energy_error = -0.14874276552014365, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9961744786133774, log_density = 16.03316054699126, hamiltonian_energy = -12.741623047306646, hamiltonian_energy_error = -0.05550506685456469, max_hamiltonian_energy_error = -0.06638621968656899, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9881854803973041, log_density = 15.842125272649088, hamiltonian_energy = -14.920768640441436, hamiltonian_energy_error = 0.022635802790052395, max_hamiltonian_energy_error = 0.042526564069683914, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7626391680308586, log_density = 14.060235377193404, hamiltonian_energy = -9.943111873547132, hamiltonian_energy_error = 0.15867858447958838, max_hamiltonian_energy_error = 0.6237057044626599, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.069042065003552, hamiltonian_energy = -13.078173973973094, hamiltonian_energy_error = -0.07781304058145722, max_hamiltonian_energy_error = -0.1015451280636217, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9934769050608321, log_density = 15.374483334573467, hamiltonian_energy = -13.704945126015588, hamiltonian_energy_error = -0.04994283548778, max_hamiltonian_energy_error = -0.09550853942820581, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9056853515721401, log_density = 9.327160076362398, hamiltonian_energy = -7.898419696117223, hamiltonian_energy_error = 0.12948309358925414, max_hamiltonian_energy_error = 0.21070142241175382, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9520259059443066, log_density = 10.17096253053385, hamiltonian_energy = -5.767171674773454, hamiltonian_energy_error = -0.02460133983713675, max_hamiltonian_energy_error = 0.16298461891947014, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9902212418853685, log_density = 12.083098249816326, hamiltonian_energy = -7.822101117015219, hamiltonian_energy_error = -0.017024428745862963, max_hamiltonian_energy_error = -0.15021140646690245, tree_depth = 5, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9666904731640007, log_density = 12.327921669852223, hamiltonian_energy = -10.537512000507537, hamiltonian_energy_error = 0.035181725980102385, max_hamiltonian_energy_error = 0.1389771588969122, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.992306130104751, log_density = 10.753877112194633, hamiltonian_energy = -9.718463331599505, hamiltonian_energy_error = -0.0027447089478087605, max_hamiltonian_energy_error = -0.07380251603814969, tree_depth = 5, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9446714838028366, log_density = 10.254442223833856, hamiltonian_energy = -9.19505822725019, hamiltonian_energy_error = 0.11802666415782781, max_hamiltonian_energy_error = 0.1317961979325606, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9981025293467239, log_density = 11.642338144034845, hamiltonian_energy = -9.746794543285255, hamiltonian_energy_error = -0.08840412821220056, max_hamiltonian_energy_error = -0.1763925730775746, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9723721924495868, log_density = 11.924116834696783, hamiltonian_energy = -10.366934288131416, hamiltonian_energy_error = 0.12482553393145501, max_hamiltonian_energy_error = 0.12482553393145501, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9954298771717831, log_density = 11.951976560968891, hamiltonian_energy = -9.55898820880518, hamiltonian_energy_error = -0.10196224173829016, max_hamiltonian_energy_error = -0.2506571510910849, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9648654864982376, log_density = 10.770476091519583, hamiltonian_energy = -8.660133909136398, hamiltonian_energy_error = 0.042905464561021844, max_hamiltonian_energy_error = 0.1526466932505688, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8475547249159722, log_density = 11.567867742059946, hamiltonian_energy = -7.313331630266836, hamiltonian_energy_error = 0.03789157783343988, max_hamiltonian_energy_error = 0.3718240579628107, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 12.674478433315944, hamiltonian_energy = -11.294171384445283, hamiltonian_energy_error = -0.12167103606701524, max_hamiltonian_energy_error = -0.20315534183690254, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9817767790601906, log_density = 13.18731729144643, hamiltonian_energy = -11.798502856837628, hamiltonian_energy_error = -0.07160377549047858, max_hamiltonian_energy_error = 0.07336923185562227, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9473625040979071, log_density = 13.090501775486768, hamiltonian_energy = -9.58916234161564, hamiltonian_energy_error = 0.020324920418641312, max_hamiltonian_energy_error = 0.14398678563513911, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9937817892344883, log_density = 15.751923871909963, hamiltonian_energy = -12.02467489632607, hamiltonian_energy_error = -0.06412836641113273, max_hamiltonian_energy_error = -0.190797801134865, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.98518127475231, log_density = 14.741302079245967, hamiltonian_energy = -14.325369887783413, hamiltonian_energy_error = 0.04418293749927038, max_hamiltonian_energy_error = 0.04418293749927038, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8987800943083005, log_density = 14.970249973348814, hamiltonian_energy = -9.69538380973237, hamiltonian_energy_error = 0.08751537406088161, max_hamiltonian_energy_error = 0.20630685264446136, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9387110687837537, log_density = 14.033504106857244, hamiltonian_energy = -9.439077488370298, hamiltonian_energy_error = -0.02089017303083729, max_hamiltonian_energy_error = 0.14760121893966094, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9732602634079431, log_density = 14.023358643251425, hamiltonian_energy = -12.196571705728582, hamiltonian_energy_error = 0.062311981081991874, max_hamiltonian_energy_error = -0.09946890770515182, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 16.25173229257008, hamiltonian_energy = -13.860772201702467, hamiltonian_energy_error = -0.13523455499012726, max_hamiltonian_energy_error = -0.13523455499012726, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9140989744897242, log_density = 15.350478623699331, hamiltonian_energy = -14.653292730986552, hamiltonian_energy_error = 0.07996644295866062, max_hamiltonian_energy_error = 0.1539355341676849, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6675049777612424, log_density = 6.7851436038960475, hamiltonian_energy = -3.6393453040536548, hamiltonian_energy_error = 0.5453318484192815, max_hamiltonian_energy_error = 0.7512528822646436, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.775175139540403, hamiltonian_energy = -6.112622243687813, hamiltonian_energy_error = -0.28034963611131936, max_hamiltonian_energy_error = -0.4962614554543183, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9650138535263763, log_density = 13.944362562787617, hamiltonian_energy = -10.056473000359496, hamiltonian_energy_error = 0.02970991180201743, max_hamiltonian_energy_error = -0.2901767655728751, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9820692071335342, log_density = 11.424275969772113, hamiltonian_energy = -8.127242811587085, hamiltonian_energy_error = -0.03674008012665375, max_hamiltonian_energy_error = -0.3357308559455934, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9994032583289169, log_density = 11.49086919209211, hamiltonian_energy = -10.227716426846262, hamiltonian_energy_error = 0.00023753993954578334, max_hamiltonian_energy_error = -0.13712702934244625, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9758858606892752, log_density = 12.008671342112004, hamiltonian_energy = -9.40508951341793, hamiltonian_energy_error = 0.07286987538092049, max_hamiltonian_energy_error = -0.19138688153144123, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9309314325709316, log_density = 12.632130530833585, hamiltonian_energy = -10.34223694017603, hamiltonian_energy_error = -0.03731608922374008, max_hamiltonian_energy_error = 0.2321914885845633, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9293633560118716, log_density = 15.256089895142786, hamiltonian_energy = -7.8784089897051395, hamiltonian_energy_error = -0.09646630403784773, max_hamiltonian_energy_error = 0.2891957466492734, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9881179558424553, log_density = 14.743574230373735, hamiltonian_energy = -14.103461426035826, hamiltonian_energy_error = 0.03047461776743532, max_hamiltonian_energy_error = -0.09973069728444983, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9966470189710855, log_density = 15.794169453470968, hamiltonian_energy = -13.736378742115226, hamiltonian_energy_error = -0.1148952804406651, max_hamiltonian_energy_error = -0.16423403269532777, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8016583869834939, log_density = 14.268770575163227, hamiltonian_energy = -10.631233736992225, hamiltonian_energy_error = 0.16598071526068026, max_hamiltonian_energy_error = 0.46034179980222945, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8664242902273911, log_density = 11.90510144299932, hamiltonian_energy = -9.68867540270412, hamiltonian_energy_error = 0.20441495148980593, max_hamiltonian_energy_error = 0.3565829008211576, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9918280617746359, log_density = 12.305816272078488, hamiltonian_energy = -10.53660180186909, hamiltonian_energy_error = -0.18424767915340112, max_hamiltonian_energy_error = -0.20336168372289087, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8957935036801152, log_density = 11.950985657147672, hamiltonian_energy = -7.635665362552658, hamiltonian_energy_error = 0.15917043116712648, max_hamiltonian_energy_error = 0.25032842819396706, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 14.25939656216405, hamiltonian_energy = -11.322060953988753, hamiltonian_energy_error = -0.1496095916245732, max_hamiltonian_energy_error = -0.17452617971522066, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9986987080099143, log_density = 14.48898478894108, hamiltonian_energy = -13.064683811079462, hamiltonian_energy_error = -0.0357911528588879, max_hamiltonian_energy_error = -0.07712650904676366, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9988863797769143, log_density = 15.035143100103552, hamiltonian_energy = -13.53672020182493, hamiltonian_energy_error = -0.0451406473611371, max_hamiltonian_energy_error = -0.0451406473611371, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7094440246159459, log_density = 9.18320426056669, hamiltonian_energy = -5.859822247304352, hamiltonian_energy_error = 0.4642278425977935, max_hamiltonian_energy_error = 0.5663106865086736, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 11.259337679317518, hamiltonian_energy = -6.769739190741747, hamiltonian_energy_error = -0.2350481165942213, max_hamiltonian_energy_error = -0.4759034909068385, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 12.24950390427086, hamiltonian_energy = -8.896502920332189, hamiltonian_energy_error = -0.06603211562840983, max_hamiltonian_energy_error = -0.1876680488648148, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9038999823526102, log_density = 11.461046709995331, hamiltonian_energy = -7.215567201524928, hamiltonian_energy_error = 0.17963404818244566, max_hamiltonian_energy_error = 0.2558527559283563, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 14.622167732519372, hamiltonian_energy = -11.358648463038161, hamiltonian_energy_error = -0.0585151881588164, max_hamiltonian_energy_error = -0.2978177133372366, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9182807336746677, log_density = 13.952951042846259, hamiltonian_energy = -10.366073609542743, hamiltonian_energy_error = 0.050828649951862204, max_hamiltonian_energy_error = 0.2736628166436095, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.947966975497584, log_density = 13.04677393790585, hamiltonian_energy = -12.188853928912032, hamiltonian_energy_error = 0.12439797449649959, max_hamiltonian_energy_error = 0.12439797449649959, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9974529027496867, log_density = 12.707500721814856, hamiltonian_energy = -11.412758625280684, hamiltonian_energy_error = -0.07530067838005472, max_hamiltonian_energy_error = -0.1494833362516399, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.997352564779649, log_density = 12.446527859689525, hamiltonian_energy = -12.163573756117389, hamiltonian_energy_error = 0.018705916376816845, max_hamiltonian_energy_error = -0.06213782565844461, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9446276461777181, log_density = 14.455355423285992, hamiltonian_energy = -10.518354646561294, hamiltonian_energy_error = -0.0466488299143446, max_hamiltonian_energy_error = 0.1547988424938218, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9674715231203905, log_density = 13.84880330645884, hamiltonian_energy = -12.182463834795087, hamiltonian_energy_error = 0.03300336955221894, max_hamiltonian_energy_error = 0.11247246783120168, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9910971906299844, log_density = 14.752447846524333, hamiltonian_energy = -13.357498633603674, hamiltonian_energy_error = -0.07252787252313198, max_hamiltonian_energy_error = -0.07699103800235818, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9558598330762422, log_density = 15.04834049082957, hamiltonian_energy = -11.890593154519038, hamiltonian_energy_error = -0.03661515683690553, max_hamiltonian_energy_error = 0.07815870522558299, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9909457073881088, log_density = 13.644283669851223, hamiltonian_energy = -11.681270730674049, hamiltonian_energy_error = 0.012967955552340982, max_hamiltonian_energy_error = 0.04125906348000363, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 16.019542879506965, hamiltonian_energy = -12.924284697739454, hamiltonian_energy_error = -0.07142123407647105, max_hamiltonian_energy_error = -0.09734834709119866, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.973079435488018, log_density = 16.129002863996234, hamiltonian_energy = -14.283557939729455, hamiltonian_energy_error = -0.010386565986090446, max_hamiltonian_energy_error = 0.07622471977482803, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9695429284894814, log_density = 16.02310894001885, hamiltonian_energy = -14.766936129742485, hamiltonian_energy_error = -0.030280826755632262, max_hamiltonian_energy_error = 0.08973600901345868, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8671504202391562, log_density = 9.170393785863208, hamiltonian_energy = -7.839461545088818, hamiltonian_energy_error = 0.18014049423065703, max_hamiltonian_energy_error = 0.2247454659936139, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.9657698040550574, log_density = 12.326171053236692, hamiltonian_energy = -3.0047626050672047, hamiltonian_energy_error = -0.11138992841142681, max_hamiltonian_energy_error = -0.3469375613468486, tree_depth = 5, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9928704246570866, log_density = 13.759723392878481, hamiltonian_energy = -11.301088325369447, hamiltonian_energy_error = -0.016067531644972988, max_hamiltonian_energy_error = -0.1258699157283818, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9033389392726462, log_density = 12.375597398865843, hamiltonian_energy = -10.13257720643749, hamiltonian_energy_error = 0.08167599346037768, max_hamiltonian_energy_error = 0.15474214783549378, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9976325180067341, log_density = 12.646304814013059, hamiltonian_energy = -11.335960067858357, hamiltonian_energy_error = 0.03199900528650268, max_hamiltonian_energy_error = -0.12323455981960763, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9956334415845589, log_density = 13.988720616304894, hamiltonian_energy = -12.091185597109718, hamiltonian_energy_error = -0.16702327781357695, max_hamiltonian_energy_error = -0.16702327781357695, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7828968344775648, log_density = 9.885998041224642, hamiltonian_energy = -8.32499680289727, hamiltonian_energy_error = 0.37977256722896335, max_hamiltonian_energy_error = 0.37977256722896335, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9809099600455902, log_density = 14.0804378394919, hamiltonian_energy = -8.042863014577591, hamiltonian_energy_error = -0.5126423132550002, max_hamiltonian_energy_error = -0.5126423132550002, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9867121545137972, log_density = 14.517519296254179, hamiltonian_energy = -12.295008922341271, hamiltonian_energy_error = 0.008314765547948966, max_hamiltonian_energy_error = 0.03281464752964425, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8826588597176102, log_density = 13.236910250741188, hamiltonian_energy = -10.593633339365086, hamiltonian_energy_error = 0.12528468299447937, max_hamiltonian_energy_error = 0.20601053902983146, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.972257545078773, log_density = 13.33604860799976, hamiltonian_energy = -11.573252055924243, hamiltonian_energy_error = 0.08976734862626223, max_hamiltonian_energy_error = -0.16888933334832323, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9981144805549981, log_density = 14.247122163510532, hamiltonian_energy = -12.268823041492391, hamiltonian_energy_error = 0.0008616899280262658, max_hamiltonian_energy_error = -0.16143816611229944, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9832861393147667, log_density = 12.762187055160677, hamiltonian_energy = -11.186035768477318, hamiltonian_energy_error = 0.01861084264317725, max_hamiltonian_energy_error = -0.11179311508034928, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8820187657792765, log_density = 13.485861974391852, hamiltonian_energy = -8.117877759882763, hamiltonian_energy_error = -0.11612653022435993, max_hamiltonian_energy_error = 0.3142486612901063, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9187453432555329, log_density = 10.342400335887573, hamiltonian_energy = -7.762790970053436, hamiltonian_energy_error = 0.070057906936273, max_hamiltonian_energy_error = 0.24581752650697908, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9794939290413102, log_density = 11.979282290834409, hamiltonian_energy = -9.867442425995364, hamiltonian_energy_error = -0.03685950465028753, max_hamiltonian_energy_error = -0.06859369454006448, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9642890468612788, log_density = 12.110198913623075, hamiltonian_energy = -9.275182339456482, hamiltonian_energy_error = -0.02116960099451859, max_hamiltonian_energy_error = 0.13052455725745382, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9840737493875015, log_density = 9.932638350404034, hamiltonian_energy = -8.30172376281318, hamiltonian_energy_error = 0.052981948840701065, max_hamiltonian_energy_error = -0.2185886269723305, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9876804222327986, log_density = 11.671957586652733, hamiltonian_energy = -8.457037101302376, hamiltonian_energy_error = -0.12608302552277095, max_hamiltonian_energy_error = -0.2393245852250434, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9573991740085948, log_density = 12.750121940309699, hamiltonian_energy = -10.16103885888311, hamiltonian_energy_error = -0.040902953475296044, max_hamiltonian_energy_error = 0.1347804349868582, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.982586292438033, log_density = 12.617148862351094, hamiltonian_energy = -11.452912955149056, hamiltonian_energy_error = -0.009417123609480882, max_hamiltonian_energy_error = -0.11679992966628205, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9975417908473396, log_density = 12.933724933795432, hamiltonian_energy = -10.926637326365938, hamiltonian_energy_error = -0.048570551315004096, max_hamiltonian_energy_error = -0.06823586148158611, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8761433156601612, log_density = 10.624218702351003, hamiltonian_energy = -9.753587618876754, hamiltonian_energy_error = 0.22609939364354048, max_hamiltonian_energy_error = 0.24389408346254626, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9921628736886668, log_density = 8.801264884319092, hamiltonian_energy = -6.076265933600222, hamiltonian_energy_error = 0.048034971520549696, max_hamiltonian_energy_error = -0.3915982297092464, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9895408600191508, log_density = 9.31432163834709, hamiltonian_energy = -1.515055035111538, hamiltonian_energy_error = 0.040045389618623695, max_hamiltonian_energy_error = -0.2988841964016924, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.827992988103185, log_density = 10.183620895311192, hamiltonian_energy = -2.9861188301408683, hamiltonian_energy_error = -0.031191131855613285, max_hamiltonian_energy_error = 0.6437713478354832, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9806999833791549, log_density = 13.915627704093133, hamiltonian_energy = -8.730181861618368, hamiltonian_energy_error = 0.00659950939028775, max_hamiltonian_energy_error = -0.14454389094663966, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9320417803144788, log_density = 14.103978661373507, hamiltonian_energy = -10.344629045566776, hamiltonian_energy_error = -0.11759623135488972, max_hamiltonian_energy_error = 0.2886352726920123, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9937029385461081, log_density = 15.67694077719774, hamiltonian_energy = -13.582925359550988, hamiltonian_energy_error = -0.044829433364663274, max_hamiltonian_energy_error = -0.04680984215711703, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9827498324578376, log_density = 15.188978918815497, hamiltonian_energy = -14.567562266293667, hamiltonian_energy_error = 0.04441043056833571, max_hamiltonian_energy_error = -0.07238616321293989, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9915451588306696, log_density = 15.843308815662791, hamiltonian_energy = -14.438200593633049, hamiltonian_energy_error = -0.03284440201709238, max_hamiltonian_energy_error = -0.0907126413336421, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9127521022613779, log_density = 15.900458087985816, hamiltonian_energy = -13.062444539124803, hamiltonian_energy_error = 0.011405696597682535, max_hamiltonian_energy_error = 0.20723149560702758, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9850979838187798, log_density = 15.070860411284404, hamiltonian_energy = -14.702259476668285, hamiltonian_energy_error = 0.043654961792091385, max_hamiltonian_energy_error = 0.043654961792091385, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.903713089987454, log_density = 14.452987976861406, hamiltonian_energy = -11.407131677567477, hamiltonian_energy_error = 0.08889867153571629, max_hamiltonian_energy_error = 0.19692321628312826, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.994763312766403, log_density = 16.218037077079728, hamiltonian_energy = -13.650802375918781, hamiltonian_energy_error = -0.13536415638717259, max_hamiltonian_energy_error = -0.13536415638717259, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9496488494088318, log_density = 14.214685653992035, hamiltonian_energy = -13.205518914894835, hamiltonian_energy_error = 0.09993346692958838, max_hamiltonian_energy_error = 0.09993346692958838, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9822083129510463, log_density = 14.693031713682593, hamiltonian_energy = -10.745668572200247, hamiltonian_energy_error = -0.03470979016582909, max_hamiltonian_energy_error = -0.13033040291975695, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9725031282058078, log_density = 13.894789672422535, hamiltonian_energy = -12.180533552513381, hamiltonian_energy_error = 0.05315102492918378, max_hamiltonian_energy_error = 0.07783898371600095, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9350944867016505, log_density = 10.978588392500615, hamiltonian_energy = -8.228897625701071, hamiltonian_energy_error = 0.10842594811471962, max_hamiltonian_energy_error = 0.15648928660460015, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9596288743232726, log_density = 13.110814655105383, hamiltonian_energy = -7.194244913274913, hamiltonian_energy_error = 0.03877305449552715, max_hamiltonian_energy_error = 0.14816353805811922, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9910493863776443, log_density = 15.090237945270584, hamiltonian_energy = -12.008378975937077, hamiltonian_energy_error = -0.1043226230249239, max_hamiltonian_energy_error = -0.1043226230249239, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.992178671128953, log_density = 14.904582751703018, hamiltonian_energy = -14.717763530760626, hamiltonian_energy_error = 0.0038393721075475895, max_hamiltonian_energy_error = -0.02625746619526126, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9667860071756467, log_density = 13.297602419469392, hamiltonian_energy = -12.856576103445997, hamiltonian_energy_error = 0.09630165625670095, max_hamiltonian_energy_error = 0.09630165625670095, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9931793573848563, log_density = 13.43927708549932, hamiltonian_energy = -9.43623184305364, hamiltonian_energy_error = -0.0344351011735089, max_hamiltonian_energy_error = -0.13781699159466498, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9621941405091032, log_density = 12.58560106819387, hamiltonian_energy = -10.606696039148755, hamiltonian_energy_error = 0.08565365372923495, max_hamiltonian_energy_error = 0.12682871105999638, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9721529079281171, log_density = 15.094419626274485, hamiltonian_energy = -11.308108566442801, hamiltonian_energy_error = -0.039468711256356315, max_hamiltonian_energy_error = -0.13345240178728623, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9684599680097972, log_density = 14.529044476093688, hamiltonian_energy = -13.595001920486967, hamiltonian_energy_error = 0.04629952310938812, max_hamiltonian_energy_error = 0.10571956575921959, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9938721383936108, log_density = 13.724112379349727, hamiltonian_energy = -12.383790854532954, hamiltonian_energy_error = -0.05541370715541838, max_hamiltonian_energy_error = -0.12223638899788014, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9849841320150351, log_density = 15.327662543919665, hamiltonian_energy = -12.338212415788936, hamiltonian_energy_error = -0.04573353777204758, max_hamiltonian_energy_error = -0.07488723967744093, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9900970630378462, log_density = 13.904313558130713, hamiltonian_energy = -12.709294964846563, hamiltonian_energy_error = 0.005565017586604881, max_hamiltonian_energy_error = -0.04674321295113337, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9769433605825024, log_density = 14.203840899024707, hamiltonian_energy = -11.973086931942053, hamiltonian_energy_error = 0.027000869604796307, max_hamiltonian_energy_error = 0.047251182408894365, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9924581190132941, log_density = 15.410726930814715, hamiltonian_energy = -13.394705179024726, hamiltonian_energy_error = -0.033117349162814946, max_hamiltonian_energy_error = -0.08609281582617712, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9234301170880341, log_density = 12.725014475952857, hamiltonian_energy = -11.027508479125082, hamiltonian_energy_error = 0.09224012430979656, max_hamiltonian_energy_error = 0.1287871191288108, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9851439700610706, log_density = 14.57880337724729, hamiltonian_energy = -10.592255643792374, hamiltonian_energy_error = -0.042638185614270796, max_hamiltonian_energy_error = 0.06456042816057384, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9216268869974255, log_density = 11.830603987994937, hamiltonian_energy = -10.523915388685287, hamiltonian_energy_error = 0.16156295496346473, max_hamiltonian_energy_error = 0.22517624765662347, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9976605921775835, log_density = 14.083459870401349, hamiltonian_energy = -9.225785616800682, hamiltonian_energy_error = -0.13425146132086496, max_hamiltonian_energy_error = -0.2581672139144846, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9866574657056905, log_density = 14.598356409806595, hamiltonian_energy = -12.8331095886909, hamiltonian_energy_error = -0.1031530367331861, max_hamiltonian_energy_error = -0.1031530367331861, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9419813986180123, log_density = 12.401503781382104, hamiltonian_energy = -9.991335128935544, hamiltonian_energy_error = 0.02579099798829354, max_hamiltonian_energy_error = 0.15189547940818215, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9901827442777584, log_density = 14.083487557667057, hamiltonian_energy = -10.907838876620367, hamiltonian_energy_error = 0.011104313470541527, max_hamiltonian_energy_error = -0.0667997305875776, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9981703222137459, log_density = 12.317053447372793, hamiltonian_energy = -11.651295832062981, hamiltonian_energy_error = -0.0037458012749240766, max_hamiltonian_energy_error = -0.12796494568103967, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9888075401723111, log_density = 14.880058193052271, hamiltonian_energy = -11.325534633142315, hamiltonian_energy_error = -0.06459768123757037, max_hamiltonian_energy_error = -0.1122298994685238, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9193083207297352, log_density = 14.053073134830935, hamiltonian_energy = -12.920861930820667, hamiltonian_energy_error = 0.053471286421007846, max_hamiltonian_energy_error = 0.10245428883203367, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9950299579491333, log_density = 14.46403663251228, hamiltonian_energy = -12.156186850899196, hamiltonian_energy_error = -0.0001005525201343005, max_hamiltonian_energy_error = -0.05805115563527785, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.996204923327375, log_density = 14.323471921575907, hamiltonian_energy = -13.058012794167379, hamiltonian_energy_error = -0.0014839964491706326, max_hamiltonian_energy_error = -0.09346569144771522, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9968476924684023, log_density = 14.40339933450029, hamiltonian_energy = -13.496462907517508, hamiltonian_energy_error = -0.03283776353055501, max_hamiltonian_energy_error = -0.0994852804935249, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.92574128271334, log_density = 15.767893696249999, hamiltonian_energy = -12.756813979873156, hamiltonian_energy_error = -0.006172558550156637, max_hamiltonian_energy_error = 0.16243863002991255, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9403167508252037, log_density = 14.595695942313416, hamiltonian_energy = -13.848487652151595, hamiltonian_energy_error = 0.07655156413727404, max_hamiltonian_energy_error = 0.13323932948225803, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9687749290100912, log_density = 13.887777621390587, hamiltonian_energy = -13.531129492317682, hamiltonian_energy_error = 0.08967277993442835, max_hamiltonian_energy_error = -0.11401812515243748, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.994182070331753, log_density = 16.20710746846966, hamiltonian_energy = -13.130036231276705, hamiltonian_energy_error = -0.2539673659591717, max_hamiltonian_energy_error = -0.2539673659591717, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9847521009932827, log_density = 15.392997893525237, hamiltonian_energy = -14.990233024902968, hamiltonian_energy_error = 0.023710619616069906, max_hamiltonian_energy_error = 0.0506992041263814, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9607392358699071, log_density = 14.19440179929406, hamiltonian_energy = -13.797660103983556, hamiltonian_energy_error = 0.08373636942581797, max_hamiltonian_energy_error = 0.08373636942581797, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7050573041566139, log_density = 11.37252275045105, hamiltonian_energy = -7.09377043748328, hamiltonian_energy_error = 0.3434043884958129, max_hamiltonian_energy_error = 0.6874302272576438, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9783885822281299, log_density = 12.391552576187799, hamiltonian_energy = -8.488364249227706, hamiltonian_energy_error = -0.15209474179917137, max_hamiltonian_energy_error = -0.4216484204741633, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9719201671016477, log_density = 10.733582450783192, hamiltonian_energy = -6.034369340351223, hamiltonian_energy_error = -0.10665329637715182, max_hamiltonian_energy_error = -0.2246007631858351, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9947057840701664, log_density = 12.269784779457666, hamiltonian_energy = -9.038970008554847, hamiltonian_energy_error = -0.0006540143445672442, max_hamiltonian_energy_error = -0.23430691612986365, tree_depth = 5, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9672552440634943, log_density = 13.028729342524093, hamiltonian_energy = -8.545949455750634, hamiltonian_energy_error = -0.10502132807585873, max_hamiltonian_energy_error = -0.12017746765724091, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7966045157471284, log_density = 11.350853168383098, hamiltonian_energy = -9.182458055538575, hamiltonian_energy_error = 0.3014198994547357, max_hamiltonian_energy_error = 0.3014198994547357, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9777493464020547, log_density = 11.553828449942174, hamiltonian_energy = -9.341900683196213, hamiltonian_energy_error = 0.037989111303295076, max_hamiltonian_energy_error = -0.2026469300169751, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9952249784601762, log_density = 10.903941067029443, hamiltonian_energy = -8.1699077009111, hamiltonian_energy_error = -0.13161787210837872, max_hamiltonian_energy_error = -0.23097702547339338, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6353779110806334, log_density = 7.029541837998652, hamiltonian_energy = -3.3856638241316124, hamiltonian_energy_error = 0.9046884189576319, max_hamiltonian_energy_error = 0.9046884189576319, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9961668976954577, log_density = 10.051651264352223, hamiltonian_energy = -3.1086577767682764, hamiltonian_energy_error = -0.6507231322614464, max_hamiltonian_energy_error = -1.0162875521667551, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.690285158870411, hamiltonian_energy = -8.221761410018189, hamiltonian_energy_error = -0.020783868201705857, max_hamiltonian_energy_error = -0.12297231790305219, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9914534967982495, log_density = 12.170917773227815, hamiltonian_energy = -9.200728020684798, hamiltonian_energy_error = -0.09263801010672168, max_hamiltonian_energy_error = -0.322315737884459, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9912995142212031, log_density = 13.592544551375997, hamiltonian_energy = -11.352568980966122, hamiltonian_energy_error = -0.030329106056102617, max_hamiltonian_energy_error = -0.07199416732358443, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.387016554572567, hamiltonian_energy = -13.238751583128353, hamiltonian_energy_error = -0.005749994796618196, max_hamiltonian_energy_error = -0.07632114664053447, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9471370171062544, log_density = 13.032390369926897, hamiltonian_energy = -11.797065949013973, hamiltonian_energy_error = 0.0875466018169977, max_hamiltonian_energy_error = 0.10517439057239564, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9780301722340341, log_density = 15.547161124579691, hamiltonian_energy = -12.063487529790347, hamiltonian_energy_error = -0.18513542471402644, max_hamiltonian_energy_error = -0.2219587685475517, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9630022022687833, log_density = 14.271892637793702, hamiltonian_energy = -13.317037374417652, hamiltonian_energy_error = 0.05629917829336861, max_hamiltonian_energy_error = 0.06047494544185206, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8362760018362572, log_density = 10.628535422236258, hamiltonian_energy = -8.26214380508887, hamiltonian_energy_error = 0.15970109375373198, max_hamiltonian_energy_error = 0.43007451965835664, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9468045740773723, log_density = 9.505361232445757, hamiltonian_energy = -8.599787565305958, hamiltonian_energy_error = 0.11699387643828807, max_hamiltonian_energy_error = 0.2052538338665748, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9959804235491968, log_density = 9.612971851160088, hamiltonian_energy = -6.246651934380589, hamiltonian_energy_error = 0.0038735276263430762, max_hamiltonian_energy_error = -0.20441862878914918, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.992661273411567, log_density = 13.336536294574874, hamiltonian_energy = -6.701199809862109, hamiltonian_energy_error = -0.19375138549744175, max_hamiltonian_energy_error = -0.2411259788365303, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7274168557091041, log_density = 13.44788401271679, hamiltonian_energy = -7.884898052245291, hamiltonian_energy_error = 0.42532438100414804, max_hamiltonian_energy_error = 0.6826650058707795, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8745795248531572, log_density = 11.584141271764485, hamiltonian_energy = -9.69482375653314, hamiltonian_energy_error = 0.30695190854317467, max_hamiltonian_energy_error = 0.34733238955817747, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9956995896823749, log_density = 12.265337762706444, hamiltonian_energy = -8.062391292566662, hamiltonian_energy_error = -0.2844496495404023, max_hamiltonian_energy_error = -0.4234847631067886, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9939882987110921, log_density = 15.408221303301168, hamiltonian_energy = -11.486337839391934, hamiltonian_energy_error = -0.059249375976170526, max_hamiltonian_energy_error = -0.14472563346058998, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9890761402213354, log_density = 16.107048628535754, hamiltonian_energy = -14.227630564946184, hamiltonian_energy_error = -0.020723215613019264, max_hamiltonian_energy_error = -0.07435472612385752, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9578586794021395, log_density = 14.117411687392842, hamiltonian_energy = -13.2039555705134, hamiltonian_energy_error = 0.056063766907154644, max_hamiltonian_energy_error = 0.09201702842029036, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9957457371471811, log_density = 15.086390891201344, hamiltonian_energy = -13.166586146303388, hamiltonian_energy_error = -0.010110520059427586, max_hamiltonian_energy_error = 0.011066456100049749, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9536332994549622, log_density = 13.760010438060828, hamiltonian_energy = -11.622797900891134, hamiltonian_energy_error = 0.032314068811135854, max_hamiltonian_energy_error = 0.0733280944022674, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9967343519580095, log_density = 14.88592369396574, hamiltonian_energy = -12.50264736535825, hamiltonian_energy_error = -0.03441854665225641, max_hamiltonian_energy_error = -0.13324322565826385, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9862466121331126, log_density = 15.299173349642759, hamiltonian_energy = -13.728448800879656, hamiltonian_energy_error = -0.06508855523320456, max_hamiltonian_energy_error = -0.06508855523320456, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8645623540922147, log_density = 13.59276337281084, hamiltonian_energy = -10.319527828731575, hamiltonian_energy_error = 0.01964022267810428, max_hamiltonian_energy_error = 0.430844875629921, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9911920701264821, log_density = 13.546179081536824, hamiltonian_energy = -11.422557483895648, hamiltonian_energy_error = 0.08630583100626943, max_hamiltonian_energy_error = -0.19193743941711716, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9463355571551889, log_density = 11.816998973662713, hamiltonian_energy = -10.09994626814587, hamiltonian_energy_error = 0.14714807227436388, max_hamiltonian_energy_error = 0.2166838885588529, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9858048572345813, log_density = 12.760699069552487, hamiltonian_energy = -7.820096591115207, hamiltonian_energy_error = -0.24489549770115637, max_hamiltonian_energy_error = -0.2882192244680759, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9887366918834991, log_density = 9.30257251613694, hamiltonian_energy = -7.722094900207356, hamiltonian_energy_error = 0.035987242054344115, max_hamiltonian_energy_error = -0.12255714931333639, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.440836707900324, hamiltonian_energy = -8.848732588097455, hamiltonian_energy_error = -0.1058242552783124, max_hamiltonian_energy_error = -0.1058242552783124, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.969718685496897, log_density = 15.241926246910818, hamiltonian_energy = -10.430480076973215, hamiltonian_energy_error = -0.027940559617878336, max_hamiltonian_energy_error = 0.07026479359823057, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.987257513137045, log_density = 14.91704713946326, hamiltonian_energy = -13.241710438127713, hamiltonian_energy_error = -0.04002676491621138, max_hamiltonian_energy_error = -0.057491038754267976, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.992507985147106, log_density = 15.83334731013699, hamiltonian_energy = -14.11274606127751, hamiltonian_energy_error = -0.03564116659664052, max_hamiltonian_energy_error = -0.047623325538612704, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9835081057958758, log_density = 15.595595841785482, hamiltonian_energy = -14.680373595700901, hamiltonian_energy_error = 0.01043656752024269, max_hamiltonian_energy_error = 0.03153263977924503, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9574864461051572, log_density = 15.773555500465957, hamiltonian_energy = -13.817951088764497, hamiltonian_energy_error = 0.043455238527595696, max_hamiltonian_energy_error = 0.11233903132110434, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.988017783069617, log_density = 16.20602319296256, hamiltonian_energy = -14.550467862593287, hamiltonian_energy_error = -0.05544130680137016, max_hamiltonian_energy_error = -0.06090082661713225, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.757540775555725, log_density = 16.20602319296256, hamiltonian_energy = -12.313176167729166, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 0.38363354738085853, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9860809415747581, log_density = 15.612399964956332, hamiltonian_energy = -15.447971427271224, hamiltonian_energy_error = 0.021362182677821195, max_hamiltonian_energy_error = 0.02655567645737733, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9792896116577756, log_density = 14.976158019194855, hamiltonian_energy = -14.025110052017393, hamiltonian_energy_error = 0.017568166453731493, max_hamiltonian_energy_error = 0.05505158239459185, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9727205945321789, log_density = 12.904475211227346, hamiltonian_energy = -11.902536549577901, hamiltonian_energy_error = 0.03298079761614936, max_hamiltonian_energy_error = 0.09172429219832523, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.937400093686492, log_density = 14.544024171767134, hamiltonian_energy = -10.728929385054379, hamiltonian_energy_error = -0.053417436497809945, max_hamiltonian_energy_error = 0.13668286867823554, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9972292448809709, log_density = 14.862741142825858, hamiltonian_energy = -13.768883357937913, hamiltonian_energy_error = -0.031147968651028535, max_hamiltonian_energy_error = -0.09044716680392284, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9402621920995736, log_density = 15.256002766444594, hamiltonian_energy = -11.579983688492732, hamiltonian_energy_error = 0.0034490050597142385, max_hamiltonian_energy_error = 0.13336911951047625, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.787256839084808, log_density = 14.252111577610954, hamiltonian_energy = -10.905827200258553, hamiltonian_energy_error = 0.1944982161512101, max_hamiltonian_energy_error = 0.39654182644137315, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9969188164418087, log_density = 14.547445802277686, hamiltonian_energy = -13.438221765519256, hamiltonian_energy_error = -0.08840420148280437, max_hamiltonian_energy_error = -0.1390884974731037, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9816590461768043, log_density = 13.29012661765189, hamiltonian_energy = -11.20537131638055, hamiltonian_energy_error = 0.013003538624833055, max_hamiltonian_energy_error = -0.2549704741830112, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8369061665184816, log_density = 5.123879381753053, hamiltonian_energy = -1.2839198271260766, hamiltonian_energy_error = 0.16082356798084563, max_hamiltonian_energy_error = 0.6321686856976587, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9774232595619937, log_density = 6.715456338465351, hamiltonian_energy = -4.742951972223235, hamiltonian_energy_error = -0.16236520981501457, max_hamiltonian_energy_error = -0.16236520981501457, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9124115431469921, log_density = 7.83850368420806, hamiltonian_energy = -3.7005854425363065, hamiltonian_energy_error = -0.0034948219418535764, max_hamiltonian_energy_error = 0.2512341687209685, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9851614566560574, log_density = 7.718567813537934, hamiltonian_energy = -6.454326403579627, hamiltonian_energy_error = 0.027879504277579237, max_hamiltonian_energy_error = 0.07944950838363507, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8415039528166375, log_density = 9.918757200380734, hamiltonian_energy = -5.471143851552973, hamiltonian_energy_error = -0.004680098994725768, max_hamiltonian_energy_error = 0.2869351970990923, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9985542557403108, log_density = 9.79596850330208, hamiltonian_energy = -6.841320038621004, hamiltonian_energy_error = -0.0713728668665281, max_hamiltonian_energy_error = -0.07490902509566855, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.952750849459391, log_density = 10.065988193590997, hamiltonian_energy = -4.929582079233676, hamiltonian_energy_error = 0.022956755747556734, max_hamiltonian_energy_error = 0.2087493388009367, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9255544762937232, log_density = 9.409251861978884, hamiltonian_energy = -7.9553931199890116, hamiltonian_energy_error = 0.008906012527996054, max_hamiltonian_energy_error = 0.13502078629491265, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9700791734927189, log_density = 14.830364679193046, hamiltonian_energy = -5.588880061590782, hamiltonian_energy_error = -0.12019534300882206, max_hamiltonian_energy_error = 0.1530534618749364, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8836221674378036, log_density = 15.071590857611554, hamiltonian_energy = -7.867030871239196, hamiltonian_energy_error = -0.12960662736614026, max_hamiltonian_energy_error = 0.40086614044936475, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9938140735452897, log_density = 14.392630791894621, hamiltonian_energy = -13.142345169828646, hamiltonian_energy_error = 0.024512813002788292, max_hamiltonian_energy_error = -0.03207872365132758, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8040525469731582, log_density = 14.760548501945115, hamiltonian_energy = -11.408887261768937, hamiltonian_energy_error = 0.11981501595972333, max_hamiltonian_energy_error = 0.39551258166678416, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9265258667911943, log_density = 14.195221432823988, hamiltonian_energy = -11.99922214603064, hamiltonian_energy_error = 0.10530206243720741, max_hamiltonian_energy_error = 0.18670751752363657, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9869149283855709, log_density = 12.50275632216863, hamiltonian_energy = -10.596675354813824, hamiltonian_energy_error = -0.0009270163701149414, max_hamiltonian_energy_error = -0.18635101348650984, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9702735704429856, log_density = 15.728230167404385, hamiltonian_energy = -9.169874983417593, hamiltonian_energy_error = -0.1442958259500351, max_hamiltonian_energy_error = -0.19079062253580403, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.992347538495941, log_density = 14.615459583110589, hamiltonian_energy = -14.129002837270383, hamiltonian_energy_error = 0.028947939684014656, max_hamiltonian_energy_error = -0.03375396958989185, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9879670015437516, log_density = 14.836105850830556, hamiltonian_energy = -12.774666093315588, hamiltonian_energy_error = -0.018599370094296575, max_hamiltonian_energy_error = -0.06645409492225518, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9052114398961972, log_density = 11.762889746474546, hamiltonian_energy = -9.560450324049373, hamiltonian_energy_error = 0.11495144050447514, max_hamiltonian_energy_error = 0.20083709168265962, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 14.30950429485622, hamiltonian_energy = -11.663765135323665, hamiltonian_energy_error = -0.035879224694053136, max_hamiltonian_energy_error = -0.04989796945559988, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9229899670143045, log_density = 14.3495870464047, hamiltonian_energy = -12.901841781178124, hamiltonian_energy_error = 0.08962680594036598, max_hamiltonian_energy_error = 0.14571677822815587, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.730918627679005, log_density = 10.808594182069179, hamiltonian_energy = -7.382856306612681, hamiltonian_energy_error = 0.3625461707645954, max_hamiltonian_energy_error = 0.6756810694858677, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 14.752428724275408, hamiltonian_energy = -9.58931870408477, hamiltonian_energy_error = -0.6790215621727462, max_hamiltonian_energy_error = -0.6790215621727462, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9112663604632992, log_density = 14.366333837364518, hamiltonian_energy = -8.70167018935161, hamiltonian_energy_error = 0.058872086727792095, max_hamiltonian_energy_error = 0.27968807116430483, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9859264082621219, log_density = 14.47828789809477, hamiltonian_energy = -12.639241179234837, hamiltonian_energy_error = 0.010218570219464596, max_hamiltonian_energy_error = -0.050795412375425286, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9454715001765164, log_density = 13.439195830907517, hamiltonian_energy = -12.322386138378082, hamiltonian_energy_error = 0.12474927746788467, max_hamiltonian_energy_error = 0.1572016957339173, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 14.434870382647729, hamiltonian_energy = -13.10265563468562, hamiltonian_energy_error = -0.041631464716282096, max_hamiltonian_energy_error = -0.15484170972409927, tree_depth = 2, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9667438437811112, log_density = 15.119828640705906, hamiltonian_energy = -11.925621167707764, hamiltonian_energy_error = -0.17938017783671079, max_hamiltonian_energy_error = -0.17938017783671079, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9569115884648706, log_density = 15.04240302061217, hamiltonian_energy = -13.422591271606947, hamiltonian_energy_error = 0.0612366648087459, max_hamiltonian_energy_error = 0.07922480606445959, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.37870394296698, hamiltonian_energy = -14.755173489779489, hamiltonian_energy_error = -0.03512625015490478, max_hamiltonian_energy_error = -0.09732034912748055, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8912794066721716, log_density = 15.610767689142314, hamiltonian_energy = -12.825020858912833, hamiltonian_energy_error = 0.025647138887174847, max_hamiltonian_energy_error = 0.22575078884593403, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9883007427977191, log_density = 15.0804998158249, hamiltonian_energy = -13.974452187900557, hamiltonian_energy_error = -0.005536888843490573, max_hamiltonian_energy_error = 0.036809263827906946, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9742812218186695, log_density = 15.25118923370945, hamiltonian_energy = -13.6923750300683, hamiltonian_energy_error = 0.014456037252184473, max_hamiltonian_energy_error = 0.07532381315154346, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9617333614531763, log_density = 14.826568872319466, hamiltonian_energy = -12.362382701641863, hamiltonian_energy_error = 0.0213278539356061, max_hamiltonian_energy_error = 0.11661404355612603, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9853763978796032, log_density = 13.623368047081934, hamiltonian_energy = -13.232277726611859, hamiltonian_energy_error = 0.037091657729739325, max_hamiltonian_energy_error = -0.07138940558524176, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9620132397126196, log_density = 15.29430928252792, hamiltonian_energy = -11.318428090366679, hamiltonian_energy_error = -0.017058203522253734, max_hamiltonian_energy_error = 0.0942903382170801, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8448210725335586, log_density = 13.272387645218098, hamiltonian_energy = -11.77918514607477, hamiltonian_energy_error = 0.21427954831405316, max_hamiltonian_energy_error = 0.3206152543784828, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9865154107262343, log_density = 12.615892540140228, hamiltonian_energy = -10.254370435993781, hamiltonian_energy_error = -0.13675301165836018, max_hamiltonian_energy_error = -0.17543349207836023, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9553578063855183, log_density = 14.238010111265101, hamiltonian_energy = -10.315973615650693, hamiltonian_energy_error = -0.05508772337700307, max_hamiltonian_energy_error = 0.14875173380670148, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9851494274396283, log_density = 13.854679402596403, hamiltonian_energy = -13.584395712663797, hamiltonian_energy_error = 0.03872337032997919, max_hamiltonian_energy_error = 0.03872337032997919, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9987159495631285, log_density = 14.374020339260792, hamiltonian_energy = -12.754661048626733, hamiltonian_energy_error = -0.06072540855565478, max_hamiltonian_energy_error = -0.10354072220106403, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9783994363995948, log_density = 15.1906289202951, hamiltonian_energy = -11.466898897117328, hamiltonian_energy_error = -0.02724590036673291, max_hamiltonian_energy_error = 0.07386690909928006, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9814770175830947, log_density = 10.360127812842283, hamiltonian_energy = -7.756683983588195, hamiltonian_energy_error = 0.024643162337052438, max_hamiltonian_energy_error = -0.35726562092073433, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9934083504299802, log_density = 11.017815202412052, hamiltonian_energy = -7.547510902926715, hamiltonian_energy_error = -0.13519459273395817, max_hamiltonian_energy_error = -0.30730371199876316, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9981798971278586, log_density = 12.754939424534811, hamiltonian_energy = -9.176498708457249, hamiltonian_energy_error = -0.04176797019766454, max_hamiltonian_energy_error = -0.1338565582657516, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9987800636270391, log_density = 13.704042085692127, hamiltonian_energy = -12.22871506161231, hamiltonian_energy_error = -0.03690604287100285, max_hamiltonian_energy_error = -0.07123737236669214, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9981528364823239, log_density = 13.715587366279248, hamiltonian_energy = -13.600916812177758, hamiltonian_energy_error = 0.004398065588926414, max_hamiltonian_energy_error = 0.004398065588926414, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9797966519502431, log_density = 13.351257570398426, hamiltonian_energy = -12.115211192823036, hamiltonian_energy_error = 0.016961216350971142, max_hamiltonian_energy_error = 0.04334982404002474, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 0.9650139432536725, log_density = 12.685936362471718, hamiltonian_energy = -11.147011993299355, hamiltonian_energy_error = -0.0001041490692248459, max_hamiltonian_energy_error = 0.10545478415930098, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8302276542345367, log_density = 12.831978402399344, hamiltonian_energy = -8.111224423421167, hamiltonian_energy_error = -0.02409850302800365, max_hamiltonian_energy_error = 0.4750120409334819, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.99013123469899, log_density = 13.803873455416616, hamiltonian_energy = -12.044351283365351, hamiltonian_energy_error = 0.0012166478584472173, max_hamiltonian_energy_error = -0.08022911497203644, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7742539421954149, log_density = 12.818474312548513, hamiltonian_energy = -8.14537941241292, hamiltonian_energy_error = -0.002280090424132908, max_hamiltonian_energy_error = 0.5615564707723912, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9343751920027688, log_density = 11.511988928570798, hamiltonian_energy = -9.554765061841087, hamiltonian_energy_error = 0.1244041279658461, max_hamiltonian_energy_error = 0.1297605512808282, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 13.307916513707696, hamiltonian_energy = -10.91897538876445, hamiltonian_energy_error = -0.034654581646972105, max_hamiltonian_energy_error = -0.12219520794450034, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9841508852386655, log_density = 14.529225122017818, hamiltonian_energy = -11.392109517871173, hamiltonian_energy_error = -0.02012795590090377, max_hamiltonian_energy_error = 0.0451117517696602, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.953243446492152, log_density = 13.463244812867776, hamiltonian_energy = -12.15236441641974, hamiltonian_energy_error = 0.10932573319752237, max_hamiltonian_energy_error = 0.10932573319752237, tree_depth = 4, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9986096842077216, log_density = 16.155713509027805, hamiltonian_energy = -12.972328361370687, hamiltonian_energy_error = -0.2209278831166852, max_hamiltonian_energy_error = -0.2209278831166852, tree_depth = 3, numerical_error = false, step_size = 0.11141916296846317, nom_step_size = 0.11141916296846317, is_adapt = false)])","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Inspect posterior distribution over hyperparameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"hypers = map(unpack, samples);\nh_l1 = histogram(getindex.(hypers, :l1); label=\"l1\");\nh_l2 = histogram(getindex.(hypers, :l2); label=\"l2\");\nh_s1 = histogram(getindex.(hypers, :s1); label=\"s1\");\nh_s2 = histogram(getindex.(hypers, :s2); label=\"s2\");\nplot(h_l1, h_l2, h_s1, h_s2; layout=(2, 2))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As expected, the sampler converges to the posterior distribution quickly. One could combine this code with that from the previous sections to make predictions under the posterior over the hyperparameters.","category":"page"},{"location":"examples/getting_started/#Conclusion","page":"Getting Started","title":"Conclusion","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you now know how to fit GPs using Stheno.jl, and to investigate their posterior distributions. It's also straightforward to utilise Stheno.jl inside probabilistic programming frameworks like Soss.jl and Turing.jl (see examples folder).","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Stheno.jl","page":"Home","title":"Stheno.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Stheno.jl is a package for probabilistic programming with Gaussian processes.","category":"page"},{"location":"internals/#Interfaces","page":"Internals","title":"Interfaces","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The primary objects in Stheno are some special subtypes of AbstractGP. There are three primary concrete subtypes of AbstractGP:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP: an atomic Gaussian process given by wrapping an AbstractGP.\nCompositeGP: a Gaussian process composed of other WrappedGPs and CompositeGPs, whose properties are determined recursively from the GPs of which it is composed.\nGaussianProcessProbabilisticProgramme / GPPP: a Gaussian process comprising WrappedGPs and CompositeGPs. This is the primary piece of functionality that users should interact with.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This documentation provides the information necessary to understand the internals of Stheno, and to extend it with custom functionality.","category":"page"},{"location":"internals/#AbstractGP","page":"Internals","title":"AbstractGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP and CompositeGP implement the AbstractGPs.jl API. Please refer to the AbstractGPs.jl docs for more info on this.","category":"page"},{"location":"internals/#diag-methods","page":"Internals","title":"diag methods","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It is crucial for pseudo-point methods, and for the computation of marginal statistics at a reasonable scale, to be able to compute the diagonal of a given covariance matrix in linear time in the size of its inputs. This, in turn, necessitates that the diagonal of a given cross-covariance matrix can also be computed efficiently as the evaluation of covariance matrices often rely on the evaluation of cross-covariance matrices. As such, we have the following functions in addition to the AbstractGPs API implemented for WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Function Brief description\nvar(f, x) diag(cov(f, x))\nvar(f, x, x′) diag(cov(f, x, x′))\nvar(f, f′, x, x′) diag(cov(f, f′, x, x′))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The second and third rows of the table only make sense when length(x) == length(x′), of course.","category":"page"},{"location":"internals/#WrappedGP","page":"Internals","title":"WrappedGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"We can construct a WrappedGP in the following manner:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = wrap(GP(m, k), gpc)\n","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"where m is its MeanFunction, k its Kernel. gpc is a GPC object that handles some book-keeping, and is discussed in more depth below.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The AbstractGP interface is implemented for WrappedGPs in terms of the AbstractGP that they wrap. So if you want a particular behaviour, just make sure that the AbstractGP that you wrap has the functionality you want.","category":"page"},{"location":"internals/#Aside:-Example-Kernel-implementation","page":"Internals","title":"Aside: Example Kernel implementation","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It's straightforward to implement a new kernel yourself: simply following the instructions in KernelFunctions.jl and it'll work fine with GPs in Stheno.jl.","category":"page"},{"location":"internals/#GPC","page":"Internals","title":"GPC","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"This book-keeping object doesn't matter from a user's perspective but, unfortunately, we currently expose it to users. Fortunately, it's straightforward to work with. Say you wish to construct a collection of processes:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS WON'T WORK\nf = GP(mf, kf)\ng = GP(mg, kg)\nh = f + g\n# THIS WON'T WORK","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"You should write","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS GOOD. PLEASE DO THIS\ngpc = GPC()\nf = wrap(GP(mf, kf), gpc)\ng = wrap(GP(mg, kg), gpc)\nh = f + g\n# THIS IS GOOD. PLEASE DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The rule is simple: when constructing GPs that you plan to make interact later in your program, construct them using the same gpc object. For example, DON'T do the following:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS BAD. PLEASE DON'T DO THIS\nf = wrap(GP(mf, kf), GPC())\ng = wrap(GP(mg, kg), GPC())\nh = f + g\n# THIS IS BAD. PLEASE DON'T DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The mistake here is to construct a separate GPC object for each GP. Hopefully, the code errors, but might yield incorrect results.","category":"page"},{"location":"internals/#CompositeGP","page":"Internals","title":"CompositeGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"CompositeGPs are constructed as affine transformations of CompositeGPs and GPs. We describe the implemented transformations below.","category":"page"},{"location":"internals/#Addition","page":"Internals","title":"Addition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Given AbstractGPs f and g, we define","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f + g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"to be the CompositeGP sastisfying h(x) = f(x) + g(x) for all x.","category":"page"},{"location":"internals/#Multiplication","page":"Internals","title":"Multiplication","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Multiplication of AbstractGPs is undefined since the product of two Gaussian random variables is not itself Gaussian. However, we can scale an AbstractGP by either a constant or (deterministic) function.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = c * f\nh = sin * f","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"will both work, and produce the result that h(x) = c * f(x) or h(x) = sin(x) * f(x).","category":"page"},{"location":"internals/#Composition","page":"Internals","title":"Composition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f ∘ g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for some deterministic function g is the composition of f with g. i.e. h(x) = f(g(x)).","category":"page"},{"location":"internals/#cross","page":"Internals","title":"cross","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = cross([f, g])","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for WrappedGPs and CompositeGPs f and g. Think of cross as having stacked f and g together, so that you can work with their joint.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"For example, if you wanted to sample jointly from f and g at locations x_f and x_g, you could write something like","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"fg = cross([f, g])\nx_fg = BlockData([x_f, x_g])\nrand(fg(x_fg, 1e-6))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This particular function isn't part of the user-facing API because it isn't generally needed. It is, however, used extensively in the implementation of the GaussianProcessProbabilisticProgramme.","category":"page"},{"location":"internals/#GPPP","page":"Internals","title":"GPPP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The GaussianProcessProbabilisticProgramme is another AbstractGP which enables provides a thin layer of convenience functionality on top of WrappedGPs and CompositeGPs, and is the primary way in which it is intended that users will interact with this package.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP like this","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"is equivalent to manually constructing a GPPP using WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"gpc = GPC()\nf1 = wrap(GP(SEKernel()), gpc)\nf2 = wrap(GP(SEKernel()), gpc)\nf3 = f1 + f2\nf = Stheno.GPPP((f1=f1, f2=f2, f3=f3), gpc)","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"If you take a look at the gaussian_process_probabilistic_programming.jl source, you'll see that it's essentially just the above, and an implementation of the AbstractGPs API on top of a GPPP.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP is a single GP on an extended input domain: (Image: )","category":"page"}]
}
