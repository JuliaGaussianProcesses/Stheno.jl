var documenterSearchIndex = {"docs":
[{"location":"api/#Public-API","page":"API","title":"Public API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = Stheno","category":"page"},{"location":"api/#GPPP","page":"API","title":"GPPP","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Core functionality for working with GPPPs.","category":"page"},{"location":"api/","page":"API","title":"API","text":"@gppp\nGPPPInput\nBlockData\nsplit","category":"page"},{"location":"api/#Stheno.@gppp","page":"API","title":"Stheno.@gppp","text":"@gppp(model_expression)\n\nConstruct a GaussianProcessProbabilisticProgramme (GPPP) from a code snippet.\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = GPPPInput(:f3, randn(5))\n\ny = rand(f(x, 0.1))\n\nlogpdf(f(x, 0.1), y) ≈ elbo(f(x, 0.1), y, f(x, 1e-9))\n\n# output\n\ntrue\n\n\n\n\n\n","category":"macro"},{"location":"api/#Stheno.GPPPInput","page":"API","title":"Stheno.GPPPInput","text":"GPPPInput(p, x::AbstractVector)\n\nAn collection of inputs for a GPPP. p indicates which process the vector x should be extracted from. The required type of p is determined by the type of the keys in the GPPP indexed.\n\njulia> x = [1.0, 1.5, 0.3];\n\njulia> v = GPPPInput(:a, x)\n3-element GPPPInput{Symbol, Float64, Vector{Float64}}:\n (:a, 1.0)\n (:a, 1.5)\n (:a, 0.3)\n\njulia> v isa AbstractVector{Tuple{Symbol, Float64}}\ntrue\n\njulia> v == map(x_ -> (:a, x_), x)\ntrue\n\n\n\n\n\n","category":"type"},{"location":"api/#Stheno.BlockData","page":"API","title":"Stheno.BlockData","text":"BlockData{T, TV<:AbstractVector{T}, TX<:AbstractVector{TV}} <: AbstractVector{T}\n\nA strictly ordered collection of AbstractVectors, representing a ragged array of data.\n\nVery useful when working with GPPPs. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\n# Specify a `BlockData` set that can be used to index into\n# the `f2` and `f3` processes in `f`.\nx = BlockData(\n    GPPPInput(:f2, randn(4)),\n    GPPPINput(:f3, randn(3)),\n)\n\n# Index into `f` at the input.\nf(x)\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.split","page":"API","title":"Base.split","text":"Base.split(x::BlockData, Y::AbstractVecOrMat)\n\nConvenience functionality to make working with the output of operations on GPPPs easier. Splits up the rows of Y according to the sizes of the data in x.\n\njulia> Y = vcat(randn(5, 3), randn(4, 3));\n\njulia> x = BlockData(randn(5), randn(4));\n\njulia> Y1, Y2 = split(x, Y);\n\njulia> Y1 == Y[1:5, :]\ntrue\n\njulia> Y2 == Y[6:end, :]\ntrue\n\nWorks with any BlockData, so blocks can e.g. be GPPPInputs. This is particularly helpful for working with the output from rand and marginals from a GPPP indexed at BlockData. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = BlockData(GPPPInput(:f2, randn(3)), GPPPInput(:f3, randn(4)))\ny = rand(f(x))\ny2, y3 = split(x, y)\n\nFunctionality also works with any AbstractVector.\n\n\n\n\n\n","category":"function"},{"location":"api/#Building-GPPPs","page":"API","title":"Building GPPPs","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"If in doubt about what any of these transformations can do, play around with them!","category":"page"},{"location":"api/","page":"API","title":"API","text":"+\n*\nstretch\nperiodic\nshift\nselect","category":"page"},{"location":"api/#Base.:+","page":"API","title":"Base.:+","text":"+(fa::AbstractGP, fb::AbstractGP)\n\nProduces an AbstractGP f satisfying f(x) = fa(x) + fb(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.:*","page":"API","title":"Base.:*","text":"*(f, g::AbstractGP)\n\nProduce an AbstractGP h satisfying to h(x) = f(x) * g(x), for some deterministic function f.\n\nIf f isa Real, then h(x) = f * g(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.stretch","page":"API","title":"Stheno.stretch","text":"stretch(f::AbstractGP, l::Union{AbstractVecOrMat{<:Real}, Real})\n\nThis is the primary mechanism by which to introduce length scales to your programme.\n\nIf l isa Real or l isa AbstractMatrix{<:Real}, stretch(f, l)(x) == f(l * x) for any input x. In the l isa Real case, this is equivalent to scaling the length scale by 1 / l.\n\nl isa AbstractVector{<:Real} is equivalent to stretch(f, Diagonal(l)).\n\nEquivalent to f ∘ Stretch(l).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.periodic","page":"API","title":"Stheno.periodic","text":"periodic(g::AbstractGP, f::Real)\n\nProduce an AbstractGP with period f.\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.shift","page":"API","title":"Stheno.shift","text":"shift(f::AbstractGP, a::Real)\nshift(f::AbstractGP, a::AbstractVector{<:Real})\n\nReturns the GP g given by g(x) = f(x - a)\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.select","page":"API","title":"Stheno.select","text":"select(f::AbstractGP, idx)\n\nSelect the dimensions of the input to f given by idx.\n\n\n\n\n\n","category":"function"},{"location":"input_types/#Input-Types","page":"Input Types","title":"Input Types","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Stheno enables the user to handle any type of input domain they wish and provides a common API that users must implement when considering a new way of representing input data to ensure that the package knows how to handle them appropriately.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"This interface has now been adopted throughout the JuliaGaussianProcesses ecosystem.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Discussed below is this interface's core assumptions, a detailed account of a couple of important concrete input types.","category":"page"},{"location":"input_types/#The-Central-Assumption","page":"Input Types","title":"The Central Assumption","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"The central assumption made in all user-facing and internal functions is this: when a collection of inputs are required, they subtype AbstractVector. For example, x isa AbstractVector when indexing into a GP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f(x, σ²)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"or computing the covariance matrix associated with a kernel:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"kernelmatrix(SqExponentialKernel(), x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When computing the cross-covariance matrix between two GPs","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"cov(f, g, x_f, x_g)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_f and x_g must be AbstractVectors. All other operations involving collections of inputs have the same restrictions. Always AbstractVectors.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"For example, this means that when handling multi-dimensional inputs stored in a Matrix they must be wrapped so that the package knows to treat them as a vector — more on this in below in D-dimensional Euclidean Spaces.","category":"page"},{"location":"input_types/#Dimensional-Euclidean-Space","page":"Input Types","title":"1-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When constructing a GP whose domain is the real-line, for example when using a GP to solve some kind of time-series problem, it is sufficient to work with Vector{<:Real}s of inputs. As such, the following is completely valid:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"using Stheno: GPC\nf = wrap(GP(SqExponentialKernel()), GPC())\nx = randn(10)\nf(x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"It is also possible to work with other AbstractArrays that represent a vector of 1-dimensional points, e.g.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = range(-5.0, 5.0; length=100)\nf(x)","category":"page"},{"location":"input_types/#D-Dimensional-Euclidean-Space","page":"Input Types","title":"D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Many applications of interest involve more than a single input-dimension, such as spatio-temporal modeling or Machine Learning tasks. For these cases, we provide ColVecs <: AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"X_data = randn(5, 100)\nX = ColVecs(X_data)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"tells Stheno that it should treat each column of X_data as a vector-valued input. Phrased differently, X is an AbstractVector{T} where T <: Vector{<:Real}, which stores its elements in memory as a dense matrix. This approach has the advantage of making it completely explicit how Stheno treats a matrix of data, and also simplifies quite a bit of the internal machinery, as all vectors of inputs can be assumed to be a subtype of AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If, on the other hand, each row of X_data corresponds to a vector-valued input, use RowVecs(X_data).","category":"page"},{"location":"input_types/#Structure-in-D-Dimensional-Euclidean-Space","page":"Input Types","title":"Structure in D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Consider a rectilinear grid of points in D-dimensional Euclidean space. Such grids of points can be represented in a more memory-efficient manner than can arbitrarily locate sets of points. Moreover, this structure can be exploited to accelerate inference for certain types of problems dramatically. Other such examples exist e.g., uniform grids in N-dimensions, and can be exploited to more efficiently represent input data and to accelerate inference.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Work to exploit these kinds of structures is on-going at the time of writing and will be documented before merging.","category":"page"},{"location":"input_types/#GPPPInput-and-BlockData","page":"Input Types","title":"GPPPInput and BlockData","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"A GPPPInput is a special kind of AbstractVector, specifically designed for GPPPs. Given a GPPP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"a GPPPInput like","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_ = randn(5)\nx = GPPPInput(:f3, x_)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"applied to f","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"fx = f(x, 0.1)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"constructs a FiniteGP comprising f3 at x_. GPPPInput(:f2, x_) and GPPPInput(:f1, x_) are the analogues for f1 and f2.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If you wish to refer to multiple processes in f at the same time, use a BlockData. For example","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = BlockData(GPPPInput(:f2, x_), GPPPInput(:f3, x_))","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"would pull out a 10-dimensional FiniteGP, the first 5 dimensions being f2 at x_, the last 5 dimensions being f3 at x_.","category":"page"},{"location":"kernel_design/#Kernel-Design","page":"Kernel Design","title":"Kernel Design","text":"","category":"section"},{"location":"kernel_design/","page":"Kernel Design","title":"Kernel Design","text":"Please refer to KernelFunctions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"EditURL = \"https://github.com/JuliaGaussianProcesses/Stheno.jl/blob/master/examples/getting_started/script.jl\"","category":"page"},{"location":"examples/getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Here we document how to do some basic stuff, including learning and inference in kernel parameters, with Stheno.jl. To do this, we that makes use of a variety of packages from the Julia ecosystem. In particular, we'll make use of","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl to perform Bayesian inference in our model parameters,\nOptim.jl for point-estimates of our model parameters,\nParameterHandling.jl to make it easy to work with our model's parameters, and to ensure that it plays nicely with Optim and AdvancedHMC,\nZygote.jl to compute gradients.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This guide assumes that you know roughly what's going on conceptually with GPs. If you're new to Gaussian processes, an excellent introduction can be found in either this video lecture or this one.","category":"page"},{"location":"examples/getting_started/#Exact-Inference-in-a-GP-in-2-Minutes","page":"Getting Started","title":"Exact Inference in a GP in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This is only a slightly more interesting version of the first example on the README. It's slightly more interesting in that we give the kernels some learnable parameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Import the packages we'll need for this bit of the demo.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AbstractGPs\nusing LinearAlgebra\nusing Stheno\nusing Plots","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Short length-scale and small variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l1 = 0.4\ns1 = 0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Long length-scale and larger variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l2 = 5.0\ns2 = 1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Specify a GaussianProcessProbabilisticProgramme object, which is itself a GP built from other GPs.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f = @gppp let\n    f1 = s1 * stretch(GP(Matern52Kernel()), 1 / l1)\n    f2 = s2 * stretch(GP(SEKernel()), 1 / l2)\n    f3 = f1 + f2\nend;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Generate a sample from f3, one of the processes in f, at some random input locations. Add some iid observation noise, with zero-mean and variance 0.05.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"const x = GPPPInput(:f3, collect(range(-5.0, 5.0; length=100)));\nσ²_n = 0.02;\nfx = f(x, σ²_n);\nconst y = rand(fx);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Compute the log marginal likelihood of this observation, just because we can.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"logpdf(fx, y)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"10.957475426339514","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"fx should be thought of as \"f at x\", and is just as a multivariate Normal distribution, with zero mean and covariance matrix","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"heatmap(cov(f, x) + σ²_n * I)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As such samples can be drawn from it, and the log probability any particular value under it can be computed, in the same way that you would an MvNormal from Distributions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can visualise x and y with Plots.jl","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"plt = plot();\nscatter!(plt, x.x, y; color=:red, label=\"\");\ndisplay(plt)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"It's straightforward to compute the posterior over f:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior = posterior(fx, y);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior is another GP, the posterior over f given noisy observations y at inputs x.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The plotting recipes from AbstractGPs.jl can be utilised to easily print whichever component of the GPPP is needed.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"x_plot = range(-7.0, 7.0; length=1000);\nxp = GPPPInput(:f3, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp);\n    ribbon_scale=3, label=\"\", color=:blue, fillalpha=0.2, linewidth=2,\n)\nplot!(\n    plt, x_plot, rand(f_posterior(xp, 1e-9), 10);\n    samples=10, markersize=1, alpha=0.3, label=\"\", color=:blue,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you've built a simple GP probabilistic programme, performed inference in it, and looked at the posterior. We've only looked at one component of it though – we could look at others. Consider f2:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"xp2 = GPPPInput(:f2, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp2);\n    ribbon_scale=3, label=\"\", color=:red, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior(xp2, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:red,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-NelderMead-in-2-Minutes","page":"Getting Started","title":"Fit a GP with NelderMead in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Stheno.jl is slightly unusual in that it declines to provide a fit or train function. Why is this? In short, because there's really no need – the ecosystem now contains everything that is needed to easily do this yourself. By declining to insist on an interface, Stheno.jl is able to interact with a wide array of tools, that you can use in whichever way you please.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Optim requires that you provide an objective function with a single Vector{<:Real} parameter for most of its optimisers. We'll use ParameterHandling.jl to build one of these in a way that doesn't involve manually writing code to convert between a structured, human-readable, representation of our parameters (in a NamedTuple) and a Vector{Float64}.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"First, we'll put the model from before into a function:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function build_model(θ::NamedTuple)\n    return @gppp let\n        f1 = θ.s1 * stretch(GP(SEKernel()), 1 / θ.l1)\n        f2 = θ.s2 * stretch(GP(SEKernel()), 1 / θ.l2)\n        f3 = f1 + f2\n    end\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"build_model (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've assumed that the parameters will be provided as a NamedTuple, so let's build one and check that the model can be constructed:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\n\nθ = (\n    # Short length-scale and small variance.\n    l1 = positive(0.4),\n    s1 = positive(0.2),\n\n    # Long length-scale and larger variance.\n    l2 = positive(5.0),\n    s2 = positive(1.0),\n\n    # Observation noise variance -- we'll be learning this as well.\n    s_noise = positive(0.1),\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(l1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-0.9162907691270586, Bijectors.Exp{0}(), 1.4901161193847656e-8), s1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.6094379869399091, Bijectors.Exp{0}(), 1.4901161193847656e-8), l2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(1.6094379094538682, Bijectors.Exp{0}(), 1.4901161193847656e-8), s2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.490116130486996e-8, Bijectors.Exp{0}(), 1.4901161193847656e-8), s_noise = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-2.3025852420056685, Bijectors.Exp{0}(), 1.4901161193847656e-8))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've used ParameterHandling.jls positive constraint to ensure that all of the parameters remain positive during optimisation. Note that there's no magic here, and Optim knows nothing about positive. Rather, ParameterHandling knows how to make sure that Optim will optimise the log of the parameters which we want to be positive.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can make this happen with the following:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\nusing ParameterHandling: value, flatten\n\nθ_flat_init, unflatten = flatten(θ);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Concrete types used for clarity only.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"unpack = value ∘ unflatten;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now easily define a function which accepts the flat form of the parameters, and return the negative log marginal likelihood (nlml) of the parameters θ:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function nlml(θ::NamedTuple)\n    f = build_model(θ)\n    return -logpdf(f(x, θ.s_noise + 1e-6), y)\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"nlml (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can use any gradient-free optimisation technique from Optim.jl to find the parameters whose negative log marginal likelihood is locally minimal:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Optim\nresults = Optim.optimize(\n    nlml ∘ unpack,\n    θ_flat_init + randn(length(θ_flat_init)),\n    NelderMead(),\n)\nθ_opt = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Note that we just added some noise to the initial values to make the optimisation more interesting.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now use this to construct the posterior GP and look at the posterior in comparison to the true posterior with the known hyperparameters","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_opt = build_model(θ_opt);\nf_posterior_opt = posterior(f_opt(x, θ_opt.s_noise), y);\nms_opt = marginals(f_posterior_opt(xp));\nplot!(\n    plt, x_plot, mean.(ms_opt);\n    ribbon=3std.(ms_opt), label=\"\", color=:green, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_opt(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:green,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Of course, the exact posterior has not been recovered because the exact hyperparameters cannot be expected to be recovered given a finite amount of data over a finite width window.","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-BFGS-in-2-minutes","page":"Getting Started","title":"Fit a GP with BFGS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The BFGS algorithm is generally the preferred choice when optimising the hyperparameters of fairly simple GPs. It requires access to the gradient of our nlml function, which can be straightforwardly obtained via reverse-mode algorithmic differentiation, which is provided by Zygote.jl:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Zygote: gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This will probably take a while to get going as Zygote needs to compile.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"results = Optim.optimize(\n    nlml ∘ unpack,\n    θ->gradient(nlml ∘ unpack, θ)[1],\n    θ_flat_init + 0.1 * randn(length(θ_flat_init)),\n    BFGS(),\n    Optim.Options(\n        show_trace=true,\n    );\n    inplace=false,\n)\nθ_bfgs = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Iter     Function value   Gradient norm \n     0     1.008409e+01     2.776382e+01\n * time: 0.033119916915893555\n     1    -5.677247e+00     1.237008e+01\n * time: 1.9406750202178955\n     2    -1.032298e+01     1.128570e+01\n * time: 1.9666869640350342\n     3    -1.110403e+01     8.747660e+00\n * time: 1.9823298454284668\n     4    -1.302341e+01     1.700169e+00\n * time: 1.994946002960205\n     5    -1.305537e+01     1.368329e+00\n * time: 2.0144999027252197\n     6    -1.313300e+01     5.600884e-02\n * time: 2.0265719890594482\n     7    -1.313478e+01     6.657247e-02\n * time: 2.0814130306243896\n     8    -1.313508e+01     2.787668e-02\n * time: 2.100184917449951\n     9    -1.313511e+01     3.451764e-03\n * time: 2.11226487159729\n    10    -1.313511e+01     1.220257e-04\n * time: 2.124379873275757\n    11    -1.313511e+01     4.505772e-06\n * time: 2.1366569995880127\n    12    -1.313511e+01     1.594430e-07\n * time: 2.150017023086548\n    13    -1.313511e+01     2.984427e-09\n * time: 2.169975996017456\n","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Once more visualising the results:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_bfgs = build_model(θ_bfgs);\nf_posterior_bfgs = posterior(f_bfgs(x, θ_bfgs.s_noise), y);\nms_bfgs = marginals(f_posterior_bfgs(xp));\nplot!(\n    plt, x_plot, mean.(ms_bfgs);\n    ribbon=3std.(ms_bfgs), label=\"\", color=:orange, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_bfgs(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:orange,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Notice that the two optimisers produce (almost) indistinguishable results.","category":"page"},{"location":"examples/getting_started/#Inference-with-NUTS-in-2-minutes","page":"Getting Started","title":"Inference with NUTS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl provides a state-of-the-art implementation of the No-U-Turns sampler, which we can use to perform approximate Bayesian inference in the hyperparameters of the GP. This is slightly longer than the previous examples, but it's all set up associated with AdvancedHMC, which is literally a copy-paste from that package's README:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AdvancedHMC, Zygote","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define the log marginal joint density function and its gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"ℓπ(θ_flat) = -nlml(unpack(θ_flat)) - 0.5 * sum(abs2, θ_flat)\nfunction ∂ℓπ∂θ(θ_flat)\n    lml, back = Zygote.pullback(ℓπ, θ_flat)\n    ∂θ_flat = first(back(1.0))\n    return lml, ∂θ_flat\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"∂ℓπ∂θ (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Sampling parameter settings","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"n_samples, n_adapts = 500, 20","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(500, 20)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perturb the initialisation a little bit.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"θ0_flat = θ_flat_init + 0.1 * randn(length(θ_flat_init))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"5-element Vector{Float64}:\n -0.8057499197223558\n -1.608877724737677\n  1.5386724051312195\n  0.050437624016955444\n -2.383721367653148","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define metric space, Hamiltonian, sampling method and adaptor","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"metric = DiagEuclideanMetric(5)\nh = Hamiltonian(metric, ℓπ, ∂ℓπ∂θ)\nint = Leapfrog(find_good_eps(h, θ0_flat))\nprop = NUTS{MultinomialTS, GeneralisedNoUTurn}(int)\nadaptor = StanHMCAdaptor(n_adapts, Preconditioner(metric), NesterovDualAveraging(0.8, int.ϵ))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"StanHMCAdaptor(\n    pc=WelfordVar,\n    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.4),\n    init_buffer=75, term_buffer=50, window_size=25,\n    state=window(76, -30), window_splits()\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perform inference.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"samples, stats = sample(h, prop, θ0_flat, n_samples, adaptor, n_adapts; progress=true)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"([[-0.8057499197223558, -1.608877724737677, 1.5386724051312195, 0.050437624016955444, -2.383721367653148], [-0.8057499197223558, -1.608877724737677, 1.5386724051312195, 0.050437624016955444, -2.383721367653148], [-0.7579150226492579, -1.8032435339563222, 1.7196000321967615, 0.029307577850057453, -2.5969532459662266], [-1.294558372574837, -2.516117664641298, 0.958086528216263, -0.3389995068087568, -3.821309135498237], [-1.4060294463451481, -1.9510279612809573, 0.987745179491635, -0.21176536905383686, -3.4826269864309802], [-1.3475282519735214, -1.6227112169077618, 0.8995083012472244, -0.1704094841959981, -3.8272739796439765], [-1.3475282519735214, -1.6227112169077618, 0.8995083012472244, -0.1704094841959981, -3.8272739796439765], [-1.5223187868330448, -1.6680085573392724, 1.0848419098277982, -0.40433270484720135, -3.7717796685698226], [-1.0486797712185505, -1.477345186472457, 1.3882273229228885, -0.009503863595903349, -3.558535034072206], [-1.2479883925920647, -1.2324824669003664, 1.5809017026244592, -0.2560138097625096, -3.9796943264626043], [-1.253205135890637, -1.7857892690755497, 0.901166349158167, 0.41198990131472685, -3.2576304664420066], [-1.1468605353508916, -1.9368861453758353, 1.151005541775226, -0.2745309004050416, -3.563412914735764], [-1.1468605353508916, -1.9368861453758353, 1.151005541775226, -0.2745309004050416, -3.563412914735764], [-1.4105857169569482, -1.2502523779853985, 1.1959434452426276, -0.34256844242187207, -3.6830550290164696], [-1.3593247054103479, -1.9731773998949393, 1.2063664350616745, -0.3263360067289115, -3.967785647726271], [-1.8842931822084683, -1.5789366383949077, 0.270778444541152, -0.7040112278518698, -3.428557859058651], [-1.1581923255155415, -1.8718632450337973, 1.0225705483189533, -0.4725540835127913, -3.8195760076641485], [-1.1581923255155415, -1.8718632450337973, 1.0225705483189533, -0.4725540835127913, -3.8195760076641485], [-1.0757916649433636, -1.6918718632490217, 0.8487298517321905, -0.602741111750279, -3.750672691072751], [-1.0109214613855928, -1.712659518478489, 0.8932553395172766, -0.576841609298042, -3.8307038396763833], [-1.5240939374846494, -1.5646251443258825, 1.0806806710383823, -0.20160302982203526, -3.5402656839831885], [-1.5235667969840965, -1.4582766302394912, 1.103179862606701, -0.13061198934013826, -3.5312836100895395], [-1.4722478001940278, -1.5089605276758695, 1.1081197684270412, 0.0010786262542619024, -3.49923811899922], [-1.4833685526880924, -1.4501068563043158, 1.1131242071496896, 0.011882534990750829, -3.5117186386447354], [-1.301396952417717, -1.8120672048182984, 0.47567523345485846, -0.48220628759930484, -3.816674214498926], [-1.4185785364596644, -1.8130163481743011, 1.1123329998691363, -0.3087608930934348, -3.2535672184396702], [-1.6214851218126016, -1.7992452192422965, 0.8614267356558483, -0.06065237526933025, -3.759878871595214], [-0.9268987854644661, -1.4398040494058444, 1.029686540038942, -0.018191713327908234, -3.5828374451011555], [-1.295601647422433, -1.3940888167385752, 0.8076593371764601, 0.267359869581145, -3.5900299152766086], [-1.3932176447600342, -1.6416290859343978, 1.0491940566800455, -0.3666113701591513, -3.5772824612113028], [-1.4139662218240487, -1.6573203954086284, 1.0454423073730137, -0.42542207850219926, -3.565572889820566], [-1.5949340823393807, -1.4530391774472518, 0.9193256922041895, -0.2175936321431427, -3.626349363224459], [-1.6162488357913696, -1.5096186400594651, 1.0569206736270678, -0.07136967795924257, -3.7441446637593883], [-1.0375563807026156, -1.562119593833524, 1.1437852441705818, 0.24459096817592382, -3.1829994533078314], [-1.2678302092807192, -1.5817892920130867, 1.219927135169615, -0.04361685389846008, -3.819374916336348], [-1.0300188732100357, -1.5743364411124132, 1.8063463522212353, 0.20680613803747067, -3.5957035887668565], [-1.253695329711167, -1.4242759362683157, 1.6485140685632496, 0.24496382009336323, -3.680449774599496], [-1.4878471683274606, -1.9219474911746117, 1.608545711720951, 0.9910030793466014, -3.803632087846076], [-1.305924343683948, -1.7398428217489863, 1.6273816088334037, 0.787191172096868, -3.836139296654605], [-1.492810471777038, -1.6667350969368158, 1.6148731159056837, 0.46623095256055797, -3.5714220229354354], [-1.5609787220592906, -1.6201831212639988, 1.6671169555879906, 0.49138836902203886, -3.538692484285736], [-1.494102899045541, -1.69326209199965, 1.2963769087723707, 0.5915853610670331, -4.001000324213907], [-1.6836190498293555, -1.5747894795277393, 1.0323594880688602, 0.2805052097005538, -3.7331255510122143], [-1.416265709432018, -1.857954204061612, 1.0055485308016423, -0.20400997192785064, -3.8596376855742807], [-1.3694306025384517, -1.8140227925504178, 1.144085131595495, -0.017461828715958166, -3.972728635259895], [-1.037765761522625, -1.8915649590130807, 0.8432735741684179, 0.10116616111349781, -3.3846248988565533], [-1.751574961133891, -2.0262593801872355, 1.1708086857724236, -0.37159322303582876, -3.3708685177286846], [-1.1944314685449666, -1.4374290529725209, 1.6105227471848578, -0.45168336718918806, -3.8537174604222533], [-1.0699118121784437, -1.0499547814998245, 0.7035964305254038, 0.09481068883027827, -3.711128711893628], [-1.1450337226980347, -1.5701779060155008, 1.3211022369129994, 0.18865900366995514, -3.5341608176355273], [-1.2852674410688132, -1.4274483941028853, 1.2461938087857107, 0.19797534862125724, -3.7666840907922965], [-1.1820949269180985, -1.4334966986704014, 1.263213394855509, -0.15299611655207282, -3.7754249214386686], [-1.6295227275270292, -1.7013314077994979, 0.8750647296286113, 0.062076392490346285, -3.798803858046457], [-1.1602189677539436, -1.587161629710674, 1.314731709400745, -0.5635129156513385, -3.577014507508407], [-1.0979490073468503, -1.2254583719311605, 1.2683118593868026, -0.6788389837164991, -3.6865556059954443], [-1.5071589357628166, -1.5702678077101069, 1.859517944400879, 1.8699280739277837, -3.769635525054331], [-1.3404660568357945, -1.5060825182904571, 1.974152606543522, 0.7892245207449124, -3.670634912047562], [-1.373626550646977, -1.570876389234817, 1.9916704466380413, 0.8207542628663747, -3.561125640630219], [-0.9674405347043101, -1.3800097998968692, 1.5863749735146677, 1.129213027640798, -3.645709170505016], [-1.2910106314205105, -1.6648791062374624, 1.5347339379142546, 0.3048391529866091, -3.5941996137447485], [-1.5248308418671659, -1.7675176555868775, 0.8882646184282563, 0.0385707881283705, -3.6890471920017607], [-1.6516710902701308, -1.8466583413362023, 1.0458546298575673, -0.08920693082958181, -3.5191119415696024], [-1.3022346600715347, -1.5185250893907323, 0.6861505720389984, -0.021001951011596, -3.920111210668488], [-1.378494869043743, -1.5826627759749925, 1.0416917403311392, 0.4186283929388116, -3.883128968585099], [-1.163139564562998, -1.4614996053355223, 1.488488461848272, -0.07808823207020392, -3.794814340015391], [-1.3477709839300036, -1.6770178169462948, 1.2716516314536233, -0.2286646574690088, -3.430987492415321], [-1.2775308084031607, -1.5220835905379555, 1.1436431713164632, 0.7892551614266904, -4.0555471617058165], [-1.28261177754242, -1.5894987035055521, 1.1091246054030515, 0.6375920174137826, -3.639034918646807], [-1.5813389427075077, -1.8457512470171444, 0.9950986389380976, 0.01627976741057857, -3.7520864423291074], [-1.659294807885974, -2.0377099784872077, 0.9852987859980349, -0.09124533056508474, -3.821568792073004], [-1.7868629864138073, -1.9705225562168238, 0.8526226185342264, 0.00137833854894359, -3.3740597078978283], [-1.3759350751590704, -1.634849811884747, 0.9198881947467742, -0.380225792635696, -3.9098772878064865], [-1.1184086909306716, -1.7457135365135814, 0.9548955893866896, -0.26617459895508866, -3.4658753355750775], [-1.063234686635996, -1.938804375565676, 1.128555203948202, -0.3379231967123501, -3.205210812047511], [-1.730997543067991, -1.5363550371748176, 1.0013712638248462, 0.38237536873128347, -3.9511385962485277], [-1.5157006560708237, -2.0851669975036047, 0.8991022451743134, -0.1001436252178419, -3.618698678583063], [-1.6369464406548333, -1.6987153349083948, 0.7556533841899863, -0.33345866593703144, -3.6471598649290695], [-1.413075592059923, -2.144220842810026, 0.7116108728513231, -0.1766901135317715, -3.5203506392215056], [-1.2637334788210837, -1.8865413306784855, 0.8651503388324489, 0.17192443039924282, -3.445726738397879], [-1.0223825947722835, -1.255773696627592, 1.4740187880814655, -0.22583860175330847, -3.5540748069047163], [-0.8860146157559966, -1.2756024978250413, 1.7301539981507674, 0.2950340551204256, -3.37606281232521], [-1.3136742645097743, -1.372685027394151, 0.5037672219671077, -0.6228648203848139, -3.692393429420619], [-1.1913124924698322, -1.5801892515381089, 0.5541058171458574, -0.30882604557873516, -3.7741106607483657], [-1.89334620614868, -1.8212707639429386, 1.089023334612131, -0.2698892570769394, -3.848200720902713], [-1.590841379831848, -1.8347217081460068, 0.714724173430515, 0.06895384294605858, -3.6653225306693162], [-1.5348984703198019, -2.0236154077255217, 1.0271027449208798, -0.04969702877408024, -3.943915524601931], [-1.738324258704798, -1.6618715015477308, 0.9206755670660834, -0.0719556886744399, -3.5792414661741536], [-1.0492042163643538, -1.4210747046958334, 1.0491226259316861, 0.21075607393781642, -3.6268496159962487], [-1.067713050007903, -1.4085106771434643, 0.9179006563108836, -0.04066344174633715, -3.2865652902788747], [-1.1020787001615235, -1.372599822784296, 0.5780100277123603, -0.8355149702046563, -3.7422775281795726], [-1.137660361163298, -1.4129756859129354, 0.7958866391190556, -0.25120893471970507, -3.56921366566495], [-1.7714023273420936, -1.7881061159492824, 0.9153552717918078, -0.07712040351427357, -3.753351775207187], [-1.4234819663154004, -1.9789116716183108, 0.9287364908353907, -0.37484227506346524, -3.820638970610633], [-1.0473183454428998, -1.1831573496379726, 0.9412522199340463, 0.2557346284998214, -3.507047491672469], [-1.073476971569641, -1.467259532615963, 0.9818847956874417, 0.17719568559158652, -3.7823051010159188], [-1.7832133565746928, -1.7456852290001856, 1.2240664638722218, -0.20325167681326817, -4.095544028076145], [-1.8543613197593547, -1.791924992790838, 1.1576703277119162, -0.3444632526673618, -3.992206287472606], [-1.3404460185970923, -1.7968744514053214, 0.6049572162421325, -0.20720723684900416, -3.487373398375333], [-1.3845415607870635, -1.7713330812675208, 0.7637899196700646, -0.12439185684741869, -3.5262603591675545], [-1.641017756351313, -1.8204048327491211, 0.7874949345786431, -0.3759020292360629, -3.6726550194792678], [-1.5122347539290948, -1.723733015462464, 0.7734891121095754, -0.2820855667550716, -3.4630482819121053], [-1.3298542639865933, -1.8834539157657524, 0.8254838231433896, -0.3934699028639247, -3.7351491891948503], [-1.7869004681286182, -1.741832771419408, 0.9371194928872403, -0.09464165900783351, -3.6802306075849294], [-1.2891231977384143, -1.753415157277661, 0.9663384826587473, -0.4144940314130931, -3.92261035441629], [-1.5508042095680565, -1.3422390932600217, 1.1663102578657878, -0.3030707515615502, -3.663429642003831], [-1.1553709443680136, -1.8049698940309282, 1.5868889532548605, 0.7487068383745451, -3.9298720563480822], [-1.6321951029635668, -1.779125537823235, 0.8396241146739708, -0.6348754139007587, -3.728092779304502], [-1.132929366542837, -1.5430472506754456, 0.9642128292777822, 0.24303814578341848, -3.5516264879138344], [-1.2883611936999695, -1.767123287700283, 0.8224696012306043, 0.16659792849513255, -3.5830973581767465], [-1.4571179669056782, -1.7201814394607116, 0.7729179093204472, 0.31433422437858827, -3.3452629459497625], [-1.101027494241673, -1.4782283791528363, 0.9983428944695916, 0.4701806369117001, -3.597956130210402], [-1.0521632672327836, -1.4774490540744638, 1.0006323737776541, 0.5167979808086895, -3.6557982398414666], [-1.211980101035448, -1.8460316931968936, 1.0168793027115124, 0.2887429939596095, -3.3957238203889903], [-1.4022007492499708, -1.5294989194824056, 0.739675507811024, 0.23980517098316217, -3.587982341878265], [-1.3102742724320655, -1.4274546397833727, 1.049890606529351, 0.008174252337807386, -4.0756920846454765], [-1.2825520906763819, -1.7792487493199776, 1.0657161568657847, -0.21669821691678814, -3.044695479006863], [-1.5897958057393333, -1.8529988143046876, 0.7355690657759801, -0.2058517463337792, -4.048189701607855], [-1.4039807692214168, -1.6379483129989691, 0.46113596164850534, 0.29081879427474305, -3.62998114690521], [-1.465445368743797, -1.5253911394022566, 0.5437970321473684, -0.2081383470987959, -3.8518271655904956], [-1.5474586911954742, -1.5700436738233725, 0.6581461975628392, -0.2204178353142057, -3.673976783593143], [-1.3858475520813203, -1.6120231499762923, 1.317369517705199, 0.08962309203830837, -3.4829596937522074], [-1.180305268179823, -1.6032573095648246, 1.8581114961648535, 0.484081035397742, -3.6395363147691033], [-0.8856732563897795, -1.302520340484009, 1.5771112531867937, 0.39053348158356715, -3.7012748971466465], [-1.4648969971103072, -1.804014217311971, 0.5644759560582937, 0.26275520083288584, -3.6815533559637093], [-1.3744481153231372, -1.8495630591442433, 1.2354603978836898, -0.48957138591393135, -3.515845323076559], [-1.269977606444963, -1.9186780090924314, 1.6920692387828116, 0.14915492634550834, -3.271127925927445], [-1.4581353994591266, -1.5583254839371516, 1.1442726262480214, 0.2576908331134622, -3.9694217666851284], [-1.6386290617587447, -1.4192042589708063, 1.279689435276671, 0.20194983140735281, -4.223491700890372], [-1.2598528276062995, -1.9050994802777097, 0.703233534551619, 0.014366115088125964, -3.3415762912851186], [-1.517645070367047, -1.6635496010516653, 0.9639786158667993, -0.502929383336012, -3.8300091560966134], [-1.5248790197593736, -1.6522549119170997, 1.1367736167588782, -0.540363430277632, -3.7458783085358305], [-1.5337626611542559, -1.6648146669984052, 1.1786064587898293, -0.6637730969053306, -3.3312017038055433], [-1.455013617224187, -1.8003800882931498, 1.1531409340438683, -0.6560686637499743, -3.4200540116098783], [-1.3954481961865561, -1.875144931420738, 1.09375633340705, -0.7519541658849439, -3.4541071333151976], [-1.1536123596592356, -1.7808625053988092, 0.44705870998462005, -0.49815324332574856, -3.389129080813353], [-1.3411972361353108, -1.3353163863441837, 1.2453321515731455, 0.015459094527870997, -3.8720987504149864], [-1.0535641313268032, -1.7798466232814847, 1.0098800386599056, 0.013193310746071909, -3.5504777194923944], [-1.5413135063941699, -1.8963720947169784, 0.9301679270135516, -0.07671289254239909, -3.746224651045885], [-1.5713234702331953, -2.0617992497570876, 1.240866048352954, 0.20015599481070617, -3.5448404419110267], [-1.2837404442813192, -1.6107659375522234, 0.5137938117732961, -0.6467486652251893, -3.5163990125074016], [-1.3290086408640107, -1.5372529989188704, 0.6909269700770477, -0.7763091737436874, -3.5842622386632725], [-1.6018846949039334, -1.658707667211057, 1.3735460718123997, 0.8068079306827445, -3.6381958233170155], [-1.2291120265137176, -1.437383122113663, 0.9098306892208794, -0.6441260458180704, -3.4626306190865366], [-1.345701560154637, -1.5367578366830599, 0.7159768970887661, -0.12864196469781283, -3.631668758298433], [-1.3130233137823584, -1.7950372278640432, 0.5770309064487636, -0.5368650491809106, -3.8569013769930773], [-1.1995207292088035, -1.411865534217116, 1.3564402240216826, -0.1199305714076115, -3.335502483565711], [-1.563304330711787, -1.5935724042534232, 1.5721424038928102, 0.14726612903452393, -3.875993321337451], [-1.0788786232862468, -1.3699709884304325, 1.4275245518197863, -0.018962353348752126, -3.4956430738137825], [-1.596655755231171, -1.7785916264095412, 1.3247937216515093, 0.23704824904163485, -3.6166010031604006], [-1.5210058968594304, -1.5906936747033846, 0.8741393306581702, 0.08988621686709757, -3.7303871720965533], [-1.5787093168225765, -1.853268172706715, 0.8718427492498911, 0.025692473218272255, -3.909090201125921], [-1.2694193732028034, -1.4392670892265718, 0.8401690090855936, -0.20197678786467255, -3.4007972138218565], [-1.4820978701668857, -1.6830971678299405, 1.2990098054204402, -0.18470992546770093, -3.5762347809538877], [-1.7294095875164421, -1.5802770519177587, 1.3357701510145366, -0.37263170905374965, -3.826959044044105], [-1.0604620494568104, -1.3952166131433508, 0.9006191570347505, -0.12315956100610362, -3.3102929327188666], [-0.7302303976459188, -1.6935730338704749, 0.49151477217441886, -0.2534557303316567, -3.3377968389213812], [-1.21156502789984, -1.1884775892952182, 1.0768257842969933, -0.26149500446707347, -3.554077525283535], [-1.0777409994828973, -1.298342487981942, 0.9907176222165861, -0.18152115797877072, -3.643104926706976], [-0.9877173570618072, -1.5104017287338893, 1.0368809782071875, -0.1781705256015635, -3.8021274498625113], [-1.343802335202546, -1.3808254554372177, 1.1636813387443732, 0.029169786573008075, -3.488306462912067], [-1.0629931970192577, -1.3148770711845574, 1.0518011056615808, 0.18005467867048783, -3.607762063123992], [-1.383216078339438, -1.6629400022877072, 0.7055243250006135, -0.6666967736089356, -3.736984556086075], [-1.5031920996742039, -1.7073882781639678, 0.5568816864498023, -0.702548970322081, -3.682192086209904], [-1.4349567732576225, -1.4150409714443175, 1.1481149833055133, 0.5129545359486856, -3.7623444376357704], [-1.4358017802959546, -1.7761554493221976, 1.073664813863705, 0.24899618619653785, -3.832930531180622], [-1.567580534701219, -1.740533324929586, 1.0678059455795095, 0.391254151527564, -3.699849276684969], [-1.1628848895586212, -1.4954723352662267, 1.788606506239563, 0.10323206653556075, -3.530451808258008], [-1.1181464099126297, -1.6104626973001563, 1.7563869185561543, 0.39385467166145366, -3.5461829156612095], [-1.2967627577008356, -1.3036189485738034, 1.4189481084936193, -0.05710330344686118, -3.789036710156671], [-1.4000585382893187, -1.9301571136529072, 1.5757353301514028, 0.07901142661906986, -3.5117046750308436], [-1.7039152970557545, -1.686290573493876, 0.6546272399082923, 0.22513413506425833, -3.954005628890832], [-1.5387450701298573, -1.6926801559548554, 0.7041454883833608, -0.20037781476721062, -3.745946673601815], [-1.210714042486515, -1.6145364702127936, 1.052253249408244, -0.34222178704551454, -3.5035475685833726], [-1.2152608888768772, -1.535034896697534, 0.9510582510235611, -0.11141344350405429, -3.545252283053762], [-1.3629787079423408, -1.4989695906465323, 1.1049599246280422, 0.47311637024626013, -3.5413160682287135], [-1.605750831778321, -1.5562585536591174, 1.1977875413842696, 0.06710637347988757, -3.423284483233644], [-1.6118367363290873, -1.6359833925415452, 1.1536544586623974, 0.09829621978162943, -3.5034156581388256], [-1.1376139178495963, -1.4441533919032659, 1.1055885486766956, -0.15169291554668546, -3.9270487444611017], [-0.9617964676569168, -1.8086299302888647, 1.2334819164651223, -0.5533523410452671, -3.5439233595179167], [-0.9889212724087425, -1.8899803049169506, 1.2581353805063382, -0.5612226140409778, -3.5768535067101115], [-1.4869415747977321, -1.0943605054714867, 1.1622320658317817, -0.5701069049186782, -3.706219490196087], [-0.94834536680982, -1.5338647237328131, 1.3240805181093325, -0.7940115816089908, -3.6801736890984738], [-1.9873674235091634, -1.8230213045601407, 0.8915133311272394, 0.5324489607556477, -3.671812802260557], [-1.290161512251616, -1.7309797950173844, 1.7338497850092685, 0.1685525803146271, -3.8248018751674304], [-1.4524822770953303, -1.4238601995805573, 1.4452927804518947, 0.36800022709201524, -3.513695281220775], [-1.4260465786804617, -1.4032365682056815, 1.3659368215065313, 0.31450158742852397, -3.499417676404385], [-1.3376798208381029, -1.4118776006745348, 1.3328133674290927, 0.3399141628319424, -3.6497925040942274], [-0.9967778734884002, -1.145601875947924, 1.7676632166825106, 0.28292824240060255, -3.637987195387751], [-1.1193150769426667, -1.3509030830396715, 1.5958585255214406, -0.13201846578426463, -3.566451130481164], [-1.2910565701586856, -1.760456320734925, 1.070442692600845, 0.15576023746538403, -3.599342143913078], [-1.093305117203456, -1.2864432391885023, 1.803870856318957, 0.11742182495770997, -3.730776492740386], [-1.1110467740887942, -1.5705212663527548, 1.320185512598041, -0.10128783375861049, -3.6383545202251475], [-1.2933274969679143, -1.5787373791742705, 1.1589502370486087, -0.2818394759384597, -3.5900050338243688], [-1.3369903543859498, -1.5784415647675327, 1.1065698764889382, -0.23137700817953064, -3.380766799412917], [-1.4975273325696403, -1.588563095478989, 1.0600737544531686, -0.22218507001699522, -3.435960280993017], [-1.2564661928629701, -1.7469848962049375, 0.9623768290027225, -0.19723690305890015, -3.7291382159816386], [-1.1130232476812605, -1.7457085311583853, 1.2075422575843757, -0.2994771914848894, -3.688072786563566], [-1.0552441380165756, -1.626183403606032, 0.835779444025545, -0.20084818939429588, -3.257921678626524], [-1.1520780370965058, -1.574031294793072, 0.958962384919275, -0.37870298527609075, -3.480789945094772], [-1.2387868855604762, -1.1808653999138554, 0.7403867128600521, -0.2846092818501604, -3.819932265768571], [-1.1480483866662035, -1.2949960232726863, 1.4435313081672954, -0.04924390839061003, -3.6176704611825854], [-1.104851879112624, -1.4125153898569789, 1.051131742122622, -0.523175418051987, -3.646557467042166], [-1.3957439014098019, -1.3971518309013622, 0.9959150823865617, -0.31999211656275184, -3.721976361629915], [-1.5486981201364431, -1.9080602594851692, 0.9399362880711526, -0.07425547841921691, -3.8367984408662794], [-1.1795876931381803, -1.4135326653952431, 0.6144567722193651, -0.26141168418714716, -3.944347518427303], [-1.1724190559499452, -1.4749190524687859, 0.6740088972856036, -0.2611723886902482, -3.81481419755413], [-1.09291379584739, -1.8853456468193754, 0.7825713893521982, -0.2646749362865721, -3.097975948928794], [-1.2678679626419314, -1.807671442666751, 0.8163268051861101, -0.369505612603663, -3.4205876800837824], [-1.6388768710650456, -1.561564718101167, 0.6803070521830683, -0.4747255414012147, -3.7210447897401018], [-1.6479823733028973, -1.8442047415948792, 0.8901302620795705, -0.5610769825114152, -3.557086691368014], [-1.5849319886401134, -1.8630285201135852, 0.7691283193940258, -0.3258550449542037, -3.862096418876575], [-1.3716645319809333, -1.865771242769084, 0.9024137560694105, -0.34153600917931315, -4.10098184719276], [-1.7754225528131797, -1.838597026099535, 0.7204631206078005, -0.4292438926883816, -3.4837718914728786], [-1.2526627415782452, -1.7920615239101603, 1.2835977090954132, 0.4638180081732557, -3.628074819430352], [-1.4223150971022227, -1.4913840358415444, 1.04825529765126, 0.5164849480116738, -3.5916267418886], [-0.9538916725271331, -1.5125353345190933, 1.5494087980612667, 0.360444254887925, -3.4924114837300846], [-1.5891917015928154, -1.83404941071249, 0.9050338003844928, 0.2998726181166308, -3.8701085122785717], [-1.0686365353575922, -1.375224999381539, 0.4416749110418411, -0.585846528565529, -3.755328824649094], [-0.8397864978746503, -0.8972288247718196, 0.5450763561019183, -0.553411574574155, -3.554179989451622], [-1.009301902919743, -1.2512256001541595, 0.598669151596004, -0.22210693637616052, -3.5457911111889606], [-1.5818893384484485, -2.0462074359696905, 1.0459375045507702, -0.26322819006665193, -3.7033767042683015], [-1.2311374572487794, -1.8226912628705025, 0.7886168758321175, -0.022598197720696326, -3.3391888122512574], [-1.5490003282252198, -1.342539479600494, 1.0166390053226277, -0.671433415425694, -3.8863594989427535], [-1.1519305575844063, -1.8023620348549851, 0.8155207880239003, -0.3946151785360753, -3.2439638991934654], [-1.3081063128352919, -1.614517584921189, 1.0348205056725526, -0.3888252451625884, -3.28292443220809], [-0.8567007597599225, -1.3389635786543352, 0.8493413750793071, -0.484619717641615, -3.986402317346541], [-1.0623172619526564, -1.326276884786622, 0.9094027650763937, -0.4857461958749857, -3.9294336826757603], [-1.4508637648133011, -1.474862254405735, 1.125264167200503, 0.06614558486029232, -3.914372936167979], [-0.999459747132257, -1.5327059380782666, 1.2455572642304844, -0.13280869117926705, -3.2959867160273038], [-1.2504515463507007, -1.4361247275265276, 0.743487625371239, -0.7662799423025661, -3.9344648998426206], [-1.1169937968949673, -1.4842071831928596, 0.6749022341255366, -0.7621345513917913, -4.0535059843711085], [-2.01259388106278, -1.6264553072584196, 1.2152440254808843, 0.7909463431746577, -3.709480373095431], [-2.1099077960154524, -1.7730606003137508, 1.3112415868329885, 0.6048590882067548, -3.764660394677467], [-1.111868259539338, -1.736688806721255, 1.2943610469795903, 0.6314923959911857, -3.7698192710680214], [-1.331165428806139, -1.7712922092956214, 1.87611463670846, 0.29752796946112503, -3.3635888529430233], [-1.3201810299819632, -1.7467743740980568, 0.724473682440523, -0.143074741655295, -3.392037201555287], [-0.8630478778062263, -1.7149429982307585, 0.82111350961658, -0.15285276238939197, -3.5591077354594667], [-1.5813648288230966, -1.372852371192759, 1.1616057166498992, -0.7455474670208874, -3.726955986757332], [-1.5247063721178056, -1.4169860738684068, 1.0216529667262126, -0.8082554250988698, -3.9307241279080056], [-1.5491229640766977, -1.8486256840980693, 1.2348722134294652, -0.4222073043998239, -3.667417913753631], [-1.1594528596396367, -1.4509828147873012, 0.43770103563765733, -0.007306316611526274, -3.6887000292204863], [-1.4447360565205771, -1.6483104155722512, 0.7478641793444484, -0.42691294225611026, -3.696729192595939], [-0.9991394967978267, -1.0239565995237525, 1.3377495947945233, -0.005480967019412336, -3.3696769241257334], [-1.0985821216168836, -0.9771259900004107, 1.3018243484340495, 0.07835764286572597, -3.553885924000618], [-1.3112119705676986, -1.8155091011530509, 1.0352529841577043, 0.26118257839480646, -3.5539424917186238], [-1.8872142515369577, -1.9076494411085594, 0.8201211417631777, 0.1553629466516795, -3.747563064720568], [-1.6359996386998177, -1.7366835636308517, 0.7351354318593595, -0.20721508890768264, -3.8344546402865096], [-0.9191980145434564, -1.4299599778526362, 1.2225148297169997, -0.11043866686602663, -3.3609947898613837], [-1.8505713126927068, -1.5987843635727241, 1.2727005226756862, -0.3289390101002305, -3.776007134945742], [-1.8967641974409968, -1.8767178953754193, 1.3252988968266675, -0.10349685516806831, -3.90385540374153], [-0.8957092449386123, -1.2430278771601488, 1.763868214096441, 1.0951498000849686, -3.382964993228131], [-0.8705864810049417, -1.0697476359231444, 1.9349585000740914, 1.1936095287924455, -3.5788967945247525], [-1.2275344746085592, -1.5787009387704976, 1.871075722004631, 1.4771167213262888, -3.6270389210117355], [-1.0677382085462923, -1.6048171691569175, 1.652407333381803, 1.7880038810381242, -3.599581582932805], [-1.563507939907369, -1.9775235664499797, 1.6026293925620567, 1.1074944298383798, -3.478018081467474], [-0.9692989373742822, -1.2916494849162, 0.3760129031973622, -0.7504672359543245, -3.155947889296862], [-1.011880068810187, -1.1086476771438016, 1.0338121664330526, -0.21092938011057397, -3.906781291016249], [-1.0354989639278356, -1.8182575022747909, 0.8026110255823321, -0.1850452718655695, -3.441333281858734], [-1.2540036977976834, -1.7591001976673202, 1.4867450541697305, 0.17567534183999253, -3.5854057832994615], [-1.5981409182627795, -1.6855318909972574, 0.7698037780501377, 0.1074580083825519, -3.5552332443251697], [-1.4618588914461186, -1.69703451871227, 1.2465550386968423, -0.18587537612008267, -3.8432494510604838], [-1.1758473817435775, -1.224744651968264, 0.42341866156979635, -0.4624892460851961, -3.730697207824802], [-1.7107555267542502, -1.940032948415282, 0.6598887766170273, -0.5734989699977789, -3.7602974604636037], [-1.55440665877742, -2.028191368514497, 0.7365378684879341, -0.5795422597325941, -3.8680105237601166], [-1.0695213522487703, -1.5979373922069773, 1.812545168684534, 1.0196509201001573, -3.7602692477072406], [-1.3337736082724008, -1.756210809261941, 1.5368428528255784, 0.09250631560131642, -3.787741053066333], [-1.3632740432623462, -1.6317909998684723, 0.5237203231392467, -0.16104395743055197, -3.607568843428701], [-1.2986850473703855, -1.4761701950298707, 1.188388939832549, -0.5092290480685103, -3.7468679800689686], [-1.2885408519593309, -2.009328278129261, 0.5552678731996569, -0.2160052362429108, -3.4504966442548763], [-1.37496331989918, -1.6533518821891358, 0.451190584902196, -0.992160647112399, -3.571103925201348], [-1.689987595552834, -1.8329844622928677, 1.0589232027818418, 0.12072674596781524, -3.7966483017759622], [-1.367176518889918, -1.7443935804057245, 1.1004827549499967, -0.24655507371286806, -3.5860061205894267], [-1.3859511337828356, -1.8246735413810569, 1.4650783525991695, -0.5489810740382407, -3.5169082245539416], [-1.5149042140072404, -1.6213812113752262, 1.1405089960200219, -0.2446894754633882, -3.740369489615046], [-1.3359446779321316, -1.8395238313408515, 0.9909030075801097, 0.10945806723017874, -3.7024410831233805], [-1.306248280892173, -1.9690108881356494, 0.8990137657032458, 0.17581022185715497, -3.3319337193615337], [-1.3286910702712886, -2.0423138581159033, 0.9443277708539111, 0.15209832972664794, -3.460207070710771], [-1.5145133422395396, -1.8732887880219362, 1.083221342236227, 0.04264849586902313, -3.5629387549443354], [-1.3510082720701233, -1.2876383538640415, 1.3140330219685736, 0.030919520535886154, -4.07914241849848], [-1.3071154239242586, -1.6830423137752537, 1.5088950259676397, 0.02343320854208616, -3.5124428528537344], [-1.3965257315722706, -1.5897990946712166, 0.7268566675893796, -0.127680300772969, -3.84445651530576], [-1.3067158571850352, -1.5683748209494908, 0.7578771140082617, -0.23821557078445849, -3.4781964695685614], [-1.3554400150022388, -1.5392821241211476, 0.8462937679018527, -0.4347297890084779, -3.4673218975150135], [-1.793037285956277, -1.8633601862716804, 0.8105211887976862, -0.33583545517822894, -4.001887429699649], [-1.163324728175624, -2.0202279906035803, 0.687919009787286, -0.7350287828938331, -3.119519319796458], [-1.5486375474924134, -2.000009822209866, 0.7045324440068401, -0.4889982272012666, -3.828045476723575], [-1.571034230156117, -1.8848748454796398, 0.7027968856581538, -0.618943714566374, -3.650236298274351], [-1.5191137625939484, -1.9503450690969266, 0.6609035600453418, -0.8231947313563583, -3.524795937902972], [-1.0587483710883943, -1.7064133001292907, 0.9567497610639666, -0.44380239354653456, -3.586522910560304], [-1.1526273646950462, -1.635693615336974, 0.9116424570632784, -0.4131012148237258, -3.51922127907142], [-1.3885861291123722, -1.8214530277946737, 0.9052561136879856, -0.2691836782799773, -3.5073395731748858], [-1.4711388180353508, -1.8565084851799334, 0.7659344431117205, -0.1707955198738541, -3.357114546601166], [-1.166899905763067, -1.5515481730456506, 1.0764948220211588, -0.247556389695947, -3.751845584366422], [-1.5762086411995064, -1.8463388437844834, 0.6581415721176864, -0.5124224716571849, -3.7003625143291874], [-0.9795886540897628, -0.8845771579788754, 1.4996264195677818, -0.016715776027243195, -3.5385512146004396], [-1.289525668898018, -1.9441848022116162, 1.2290224784781132, 0.7359724492463044, -3.80027561824121], [-1.52420590087491, -1.4979209418930233, 0.9853819684584825, 0.06040542047170974, -3.469311102105149], [-1.6655188481133585, -1.5768804686754474, 0.996504960154905, 0.03804834406478423, -3.615568094535091], [-1.496152088540967, -1.336552095084651, 1.0931898562719384, 0.09263898807481882, -3.937680885207695], [-1.403604539506028, -2.0356725525973927, 1.0297839612476027, -0.043162634564280364, -3.245237767107611], [-1.1793895836706159, -2.042978875859638, 0.9701287384736422, 0.09675626150141743, -3.347345454304917], [-1.4951973166897512, -1.7127351542059255, 1.635419947180991, 0.4315671164263106, -3.980599190601438], [-1.2539649054611404, -1.4122228075420162, 0.6823579890371869, -0.5299804549276085, -3.812768303181131], [-1.1577237037158465, -1.5594223571944068, 0.752499808561517, -0.5914256664830684, -3.346935747733534], [-1.7160005290598732, -1.9073618528917922, 0.7882781285037617, -0.3285368694146307, -4.032558591459811], [-1.4271110291032545, -1.5068028822575708, 0.9345200152542998, -0.4607341549377368, -3.5558335924645523], [-1.290490623148739, -2.0497229389792673, 0.5714063193589373, -0.6616339717001168, -3.613085336875336], [-1.5767176406923875, -1.4334637189428403, 1.030934045367441, -0.20637822102277556, -3.7652938103168325], [-1.6446886015462876, -1.5715556695640043, 1.0397358855367984, -0.24063899112759857, -3.6280253022485947], [-1.0553643087759952, -1.5018342125031792, 1.070913540731172, -0.1968077814589598, -3.7338309798249325], [-0.9587799146529427, -1.554625250055867, 0.9255116107492319, -0.22482269688067955, -3.6285498818213964], [-1.2500206460674557, -1.4804121816006817, 1.297531959422025, 0.15175347730214722, -3.733175659634081], [-1.7120849400899092, -1.8241169229569663, 0.9315721380230898, -0.3035332555637553, -3.524191816492366], [-1.2649242695364047, -1.5242329528180552, 1.0697560272014117, -0.32392897538724513, -3.7232445877135483], [-1.1699692472718137, -1.34485099839153, 1.5179763259299248, -0.04880111640219033, -3.582302582090948], [-1.4565168140609774, -1.8988170398787507, 1.468868010941947, 0.1400024191244066, -3.808407767103136], [-1.6485110432647392, -1.6278976130049088, 1.3351756258672238, 0.32275733170292736, -3.460888458568236], [-1.6987402056534942, -1.8166192930742846, 0.9148867140013408, 0.3587227572105425, -3.507043164637418], [-1.290320228096136, -1.5019351235870588, 1.0825128512400166, -0.5151770633378359, -3.7141871989608677], [-1.316607863092959, -1.4273809709672407, 1.6246465783329134, 0.16149251680447615, -3.426517942579012], [-1.0445746645921625, -1.2546978429265894, 0.7462244564935681, -0.10645215833684515, -3.6860112449628186], [-1.1752128651130038, -1.321339055190112, 0.8421820300654079, -0.05419710238033667, -3.501957951966097], [-1.3413305644938347, -1.6258307385411186, 0.48328633637489804, -0.03535408296831114, -3.8070055559596487], [-1.1809375971126286, -1.0763739994967971, 1.0619331063320618, -0.8957133099263999, -3.2468714957144456], [-1.2050966695201932, -2.0789815879542033, 0.958884523566331, 0.1893560641034693, -3.9989057127257293], [-1.1767356974372618, -1.0323791157891908, 1.6094439238433191, 0.188593497014899, -3.060961523651587], [-0.45806185984152675, -1.484794502336727, 1.518180102999461, 0.020767456695923798, -3.686316746711817], [-0.6733554576753693, -1.3956462491684873, 1.3205085166842367, 0.0967341882667716, -3.292933371605721], [-1.2067591717238282, -1.5581934432909055, 1.1662481222188423, 0.21326282927823745, -3.6847049649104986], [-1.0647676478146253, -1.6142498644979615, 1.183673953609574, 0.17736388753714172, -3.496181437631808], [-1.4598263886270009, -1.7340368779889348, 1.096516291363113, 0.7303869964969637, -3.6428419964517516], [-1.5770912254861338, -1.5533947297313466, 1.3490278275175358, -0.13498094013547363, -3.4754951239314904], [-1.4203308809741366, -1.8797040576920605, 1.8109111074277913, 0.17336857230003705, -3.7046027245551802], [-1.649412859725582, -2.0040255592467053, 1.8482284377460494, 0.24268608272365708, -3.6606945165699285], [-1.8065859663802957, -1.7397937969204442, 1.6762959661831618, 0.5493374489450658, -3.3254418663292], [-1.4774749783377183, -1.8313118466148053, 1.409187778880781, 0.5386248065655261, -3.2839359167936473], [-1.427212820322222, -2.60060362401055, 0.8898534704541364, 0.7288255517979155, -3.505551430570167], [-1.6131511764956847, -1.7879734765121804, 0.9894162408684642, 0.13225296419441604, -3.602599556903611], [-0.9296905575288921, -1.1575225801133053, 1.7902172475324145, 0.805203564520739, -3.695261589896154], [-1.619092180446878, -1.7679273956718775, 0.920235514568282, 0.07196847096353501, -3.599161117675882], [-1.4446996475255423, -1.3773496720291554, 1.1285346644869303, -0.4374510888129627, -3.6906901960958307], [-1.2388576411022831, -1.5588749959198143, 1.48828311867124, -0.429121859981772, -3.438116574059049], [-1.1765922202070938, -1.4586356705764858, 1.3318332594898752, -0.18970192405861433, -3.7816995338466017], [-1.5386413207109928, -1.567303163061637, 1.5339313062552553, -0.07083967642498415, -3.731806448696269], [-1.2488699582109057, -1.6005400189333139, 1.5556833088373647, 0.10990160162236298, -3.5243524436548417], [-1.595609921811601, -1.5101525278245331, 0.657226026035833, 0.034475684707603746, -3.724073693206707], [-1.5181063456642878, -1.8638098929259401, 0.9697950714461178, -0.6909938586333538, -3.6279456088020465], [-1.2718904780394302, -1.6490704857339953, 1.3310297456192393, -0.6819416465182905, -3.8962373618869943], [-1.2108796416965226, -1.37891206223057, 0.7523122065458449, -0.33584835070604613, -3.4243253785792405], [-0.9340233646726359, -1.228300350489422, 0.8018427302996199, -0.6973108402791229, -3.723314568115348], [-1.28863474105255, -1.3679189650151182, 0.8119280632032517, -0.8605247042758144, -3.71084667604758], [-1.0954038111911804, -1.850275722781224, 0.6503120629129266, -0.4686576039588496, -3.509581950143029], [-1.4258338315304888, -1.4418671748648357, 0.7752290009683285, -0.16231847856473233, -3.7222354484028326], [-1.1947855716428561, -1.7993021925601997, 1.0825717177637932, 0.4379307571179079, -3.6103315311243818], [-1.3087301670477955, -1.9639047595645085, 0.7820535902248704, -0.5921523042464342, -3.385878039845194], [-1.1776088730182968, -1.9004439521756964, 0.8206495675162117, -0.6244004730990056, -3.6316728058848664], [-1.6175911269703434, -1.661960147548393, 1.32348276155767, 0.6741466650319986, -3.710449686920756], [-1.3025709821188372, -1.956300690451396, 1.1141868628233265, 0.5068486873001569, -3.559828140602328], [-1.6923667005617347, -1.563924737253109, 1.5005047421246467, 0.608055439210722, -3.8308990892661554], [-1.349304586197168, -1.7949589519061218, 0.9540545465372876, 0.3707245981299162, -3.21689811065088], [-1.5195018003884402, -1.9065232089346753, 0.8856241410093444, 0.19273312383750124, -3.4050798562561133], [-1.3638956894598413, -1.2149021309643366, 0.5127302231637623, -0.7776186284669082, -3.6276873329127017], [-1.161428521930038, -2.191036932781337, 1.1227284753668347, -0.15979455336627346, -3.418662954082012], [-1.5314318608329802, -1.5541929323606252, 1.097145852943558, -0.13677568586430686, -3.5393705827310598], [-1.5358274359695598, -1.7249548468000773, 0.8603920275416114, -0.13780632985901736, -3.805308238169233], [-1.6606532446697977, -1.7189750564659412, 0.9936231344229314, -0.17979429011035156, -3.5990852641636093], [-1.739027485483016, -1.941910974742851, 1.1182688300593422, 0.5986665375351453, -4.00492889120794], [-1.7006420966868319, -1.889389148377768, 1.0687081081579937, 0.5691342196440502, -3.9199135562285536], [-1.4158647868661558, -1.4260089075447595, 0.8493721767372769, 0.4878315000422355, -3.844790242211365], [-1.2214970619052046, -1.426117720425716, 1.1249720408834407, -0.05331858540742293, -3.8107752041986265], [-1.7317849958922145, -1.8641632900934875, 0.7848571729369044, 0.03168043159095948, -3.844457107002418], [-1.830155411867279, -1.7155588172488057, 0.8149142054161256, 0.01569510223579667, -4.065426916041612], [-1.2918802567405967, -1.9144039461156697, 1.383991419320847, 0.3551362634128289, -3.338592353100744], [-1.634000469593297, -1.7269403715199863, 1.1532970395025748, 0.5649045187142223, -4.150438008029043], [-1.6955028570048318, -1.7129876942596292, 1.9349410402163463, 0.601790332588467, -3.6585475293685548], [-1.1012645781803356, -1.4528945381003733, 1.5194415132539152, 2.06530640648207, -3.6129716805094585], [-1.776692466737455, -1.995145768123569, 1.8090240828717041, 0.9621784243609911, -3.6827265807691005], [-1.040184180336113, -1.2203097196479753, 2.020556720947619, 1.0774400053024604, -3.6289678326027026], [-1.6051532835672402, -2.0029604041632387, 1.0945391291624507, -0.13286591817533472, -3.621511873590867], [-1.0716921757725635, -1.25975778759135, 0.9447146082203204, 0.4066252933008191, -3.8270401116484463], [-1.5147105204427587, -1.9488973797334115, 1.224499549702783, -0.24826908608973575, -3.6405056096737223], [-1.5432886053750559, -2.0543250572760705, 1.3276985582995833, -0.2096256556336832, -3.7551078805325346], [-1.1148220230155164, -1.2076592360232847, 1.2479398138712368, -0.48649357607711663, -3.4668668157682174], [-0.8212522371620609, -1.556909632162635, 0.9683709755704579, 0.0647876251227267, -3.292171424288531], [-1.7692871468413898, -1.8798884620666922, 0.5014913701250769, -0.5397806198513213, -4.007391805778706], [-1.884373548741779, -1.7057997194722914, 0.4461333017491058, -0.5244602213973898, -3.800727259485731], [-1.537579081621027, -1.7939430642939336, 1.060815873548872, -0.3281865883632538, -3.934354617139774], [-1.4281279284063397, -1.3484491095722384, 0.8605249806697806, -0.6712718095223438, -3.9367798488390053], [-1.0902578500645692, -1.9703316971868727, 0.607383693916706, -0.33370444722651116, -3.4760961730851854], [-1.4050592804969857, -1.6575514782224845, 1.2913706524899504, 0.18669520107089904, -3.5844228487353527], [-1.4407219201303991, -1.5448693526179225, 1.1142483659760183, -0.07513092159731884, -3.712362769329465], [-1.2663488690607871, -1.4217968163725265, 1.2715483946610018, -0.2806510525386364, -3.471660075580623], [-1.1922483894856457, -1.5399572538618138, 1.762317695902161, 0.0894373268355611, -3.793978615428106], [-1.3865961549160577, -1.498236248374988, 1.2968316601650907, -0.11613781433610784, -3.6447612336820225], [-1.4899707575660068, -2.182364507691418, 1.0020698332221802, -0.22505472634687157, -3.659166203938777], [-1.618696652748079, -1.7809861784771066, 0.8406463933368331, -0.2509304802297305, -3.7998998049799315], [-1.1157456046214784, -1.3809631187374662, 1.1017413545908348, -0.08663857674485882, -3.685509811893918], [-1.462058318865807, -1.863837319673876, 1.129092061279827, 0.1756508110231539, -3.4941269602790395], [-1.6416783496879126, -1.6938581152712056, 0.6058113772314311, -0.6854588622704055, -3.8817110948522546], [-1.329064977045176, -1.642408130302469, 0.8822443498970524, 0.3479149680064999, -3.464503972448803], [-1.2693323651522102, -2.1039567412144624, 1.334614086207617, -0.01945249340830696, -3.4294971149212508], [-1.491064797906954, -1.2139198844864343, 1.450799746711646, 0.05582868283800812, -3.8593265098466363], [-1.145123465488326, -1.302659454498622, 1.583584264021031, 0.16747542881855532, -3.939261917701262], [-1.337687940193516, -1.433238392133264, 1.4759035627846315, 0.16303978290732488, -3.814286611030969], [-1.7647766420566535, -1.9426085488324238, 1.85685350221931, 0.36781999069227456, -3.7369942842468866], [-1.6105681448097016, -1.621655168574661, 1.2032973672060057, -0.2380124206088694, -3.483672651086501], [-1.232257909382996, -1.3602971271628588, 1.2663178780718067, -0.2623835148337822, -3.4943823021022116], [-1.010416946559078, -1.574083846875225, 1.253849857971297, -0.38079362348866586, -3.5981318232933335], [-1.5638299161593943, -1.7318654564710785, 1.6756231089014682, -0.2113827112839194, -3.8005842108222976], [-1.2395619455377618, -1.4950974965180552, 0.7579726496240311, 0.44437896540331023, -3.5822154130034916], [-1.6609759236654584, -1.9649599461672242, 1.291929838049342, 0.06283132875153996, -3.903672891623064], [-1.9053434173314052, -1.7514201961898288, 1.0658977847329845, -0.2648027369871109, -3.806420444935095], [-0.9229487320408597, -1.6135213002618107, 0.3916997464737989, -0.3583914938020969, -3.4451258026855043], [-1.151996352299855, -1.6804740535845897, 0.4630023888071211, -0.09014301331588102, -3.3370196010300095], [-1.8564966884822427, -1.483260619523767, 1.1694687229612637, -0.6118981190310914, -3.640324076479801], [-0.8878628831683921, -1.5623425663550472, 0.9079190753923388, -0.3291375956900621, -3.8455502137013267], [-1.4904418792689647, -1.9940686062756037, 1.1106333661259864, -0.12432611182253031, -2.9012515321764005], [-1.0570588888363872, -1.76026605351574, 0.6881613613384151, -0.32561241478138925, -3.9131728907543852], [-2.260274999550787, -1.6277965768384988, 0.8512468508976364, -0.13164079925357597, -3.3358527906926243], [-2.347765146540634, -1.738881692091703, 1.0758024312485874, -0.10143787967046702, -3.6852297481205785], [-0.7408103165538209, -1.7952332463021212, 0.5807091736357607, -0.5755422487542929, -3.4875994248603526], [-1.7784909679587058, -1.9669077093569798, 1.2943703571830627, 0.37443155050113597, -3.4907277822030145], [-0.7541300057316825, -0.9428807550921577, 0.09332487924327822, -0.1390097053635646, -3.380999123322535], [-1.020135401116929, -1.3091240353148295, 0.3043408111379873, -0.057047515342400795, -3.423576736754953], [-0.9623504241959133, -1.382569274643422, 0.023056692688170982, -0.03856094886549996, -3.5103608864191163], [-1.7565821481040476, -1.774011357360198, 0.8881097928139913, -0.8559961499065274, -3.725247996315461], [-1.4183567187600523, -1.5486552660347301, 0.7525624822083319, -0.6600206906362072, -3.9940760900930954], [-1.8189395918931364, -1.936430536051405, 0.7901951303156085, -0.20964018248362337, -3.4626049058091697], [-1.505707457659309, -1.4460523053240275, 0.8358534989451399, -0.3870844479356203, -3.7890997648033378], [-1.6711144843100465, -1.5333596339801543, 0.7114485393332703, -0.31103098319405126, -3.747870570154683], [-1.4426910955129595, -1.7365198467409244, 0.8005118006525578, -0.2796271217986956, -3.676526641937178], [-0.9679365936799488, -1.3643432921963485, 1.096756106913003, -0.161139658808525, -3.516445043635237], [-0.892662439357636, -1.4075574733180476, 1.1947108711295575, -0.09668490913049543, -3.5574263859318465], [-1.4356476083690188, -1.4664888099206168, 1.3242421765882246, -0.5190018154129571, -3.6517768657302843], [-1.339411875333105, -1.468394540537469, 1.1745950896472483, -0.4533932622782527, -3.8782509565071743], [-1.2943697747071354, -1.787493849690192, 1.0526592053860215, 0.3713483117664502, -3.8636538067600723], [-1.1973108152609657, -1.698977515700338, 0.8558714718542726, -0.6635208944479358, -3.814080447623285], [-1.1279283326574834, -1.2725166669790886, 0.8055630278342071, -0.5021606847494093, -3.3558893702875956], [-1.1355493249712012, -1.4999571081618535, 0.568869613001081, -0.44878743280828426, -3.79792103170053], [-1.4901818328137455, -1.860054822319738, 0.3781410743755793, -0.8533124978611512, -3.3829205562239966], [-1.378570391403168, -1.8678390636170037, 0.39591006180139265, -0.8572669691033804, -3.69957228286574], [-1.2775962320507426, -1.6782954440392335, 0.7990222262790904, -0.16500143912820514, -3.7615416641664434], [-1.6850874513245657, -2.0075893662393187, 0.9906551627945166, -0.15774691473086824, -3.478267867390512], [-1.8555096942177542, -1.8375609002905453, 0.6713577366753696, 0.23454060954453182, -3.889853463763319], [-1.1704791373394423, -1.35592545898206, 0.8318889149395652, -0.02188383530323801, -3.8124150917108883], [-1.6121792709318277, -2.2320287505457364, 1.2033236479689162, 0.0885759255058566, -3.573648836629051], [-1.7418616121670534, -1.9720565986520129, 1.0556492461125109, 0.48853434458097256, -3.6444186260642186], [-1.7777023359649757, -1.23090225787553, 0.9718465318431256, 0.11284973610428595, -3.663952842134343], [-1.4004400711832, -1.5018121231989696, 0.9364331679388886, 0.05213506379806788, -3.7794685171008315], [-0.8506287905941807, -1.2336844413711505, 0.9600579402723218, 0.024352448383148942, -3.2942075148071472], [-1.8407563848830868, -1.7995005932886503, 0.5375189996356426, -0.13757625977192414, -3.4282454075876094], [-1.4586341086930896, -2.0175494141837262, 1.0685325646939334, -0.533052397954759, -3.6776544844224577], [-1.7373137692135188, -2.074602597766895, 1.0412230353183864, -0.04683943799389678, -3.6208465162728243], [-1.112829571280361, -1.2024958778772055, 1.2665993497252666, 0.6988629376779343, -3.598949187271846], [-1.3297457302014908, -1.5971605199795196, 1.1930507743460816, 0.4113065505189725, -3.7212645444656185], [-0.9278754597493837, -1.0844355523067535, 1.062115778693021, 0.10163844965618853, -3.4664924746900234], [-1.3538742998487705, -1.78478936583896, 1.048654517684336, -0.11819435782782803, -3.6986780747335124], [-1.3599189847559745, -1.6712483705522039, 0.8589902046772614, -0.2950820066714425, -3.9014406857118433], [-1.0577501816446073, -1.3420016154326577, 0.8083986519528104, -0.4675585657571816, -3.4118353396661996], [-1.0554653615017544, -1.2704131960979088, 1.0102750773706195, -0.5446113428367074, -3.623348080304759], [-1.387627757375121, -1.5931650123910237, 1.23881562654229, -0.42110823150529375, -3.639865280145462], [-1.2111680361175048, -2.0551723806173783, 0.7544733815240909, -0.33453318001899346, -3.5851107590543125], [-1.023244285800412, -2.2439178550115964, 0.663710870643234, -0.28224413987319, -3.517066840439082], [-1.6665369042661053, -1.2998421836560141, 1.3758625092807606, 0.00458787672110713, -3.8247486306981178], [-1.8095675105076696, -1.3811218615635328, 1.3154588171802806, 0.13792882038918058, -3.863872624401973], [-0.9407080506472217, -2.362426815523668, 1.0859325568059537, 0.14112568617142895, -3.3235320469900467], [-1.0410143695725556, -2.1205662367643283, 0.9130734170609748, 0.10706504589161156, -3.185564992101207], [-1.233712136285682, -1.1615302954897575, 0.5296712116003994, 0.10976885442051336, -3.6924650766934786], [-1.1342759462812155, -1.65156938935804, 0.9880421905124728, 0.2797526549756645, -3.664020294721802], [-1.2247876874771322, -1.4880288874383285, 2.0572528159699894, 0.14594692630777342, -3.637886040615938], [-1.3119158308462548, -1.6655495232674256, 0.08795822655600152, -0.38711059867902636, -3.8325569907975194], [-1.3971237917528536, -1.5398364965329931, 0.3212481712586856, -0.5428275929835316, -3.8044868869137547], [-1.0036253877650025, -1.6689443872826886, 0.9433586008681192, -0.41286494283428954, -3.3686379983701595], [-1.0579282735066375, -1.5107557537387746, 0.9723407288651426, -0.5363259705200383, -3.399196245724559], [-1.138445507085431, -1.7095354921789738, 0.9455556549933691, -0.15212594447668581, -3.504723779571365], [-1.5128950828055494, -1.6464208838119998, 1.0721176970851916, -0.6822294601412555, -3.74820687602259], [-1.1961825487533009, -1.5194043075572803, 1.3802521338777805, -0.5930697498892893, -3.2576981152916487], [-0.7575031447295256, -1.2034343256581845, 1.3346313672187915, 0.354566534334846, -3.630766927358681], [-1.6889607860272684, -1.7632268441034034, 1.0849161673494883, 0.07419824607547992, -3.670003574360015], [-1.7509717860087246, -1.9250875324235912, 0.5855773908898412, -0.6994659429491055, -3.7888656826518963], [-1.560418945540436, -1.581329834153862, 1.0396641865068692, -0.028546461484220215, -3.828547727682535], [-1.579856778699391, -1.6471297475720883, 1.069270870920896, 0.011398559432558221, -3.6879748702116757], [-1.6713917487127765, -1.849461370707834, 1.0142383298938484, 0.06482252479866352, -3.6714386030565844], [-1.2600704790343273, -1.8085784192884318, 1.1713430413631312, -0.2902215713670502, -3.55312859859718], [-1.2584185468370985, -1.7147072787192428, 1.4305683101160098, -0.3593957647935213, -3.5373982625573173], [-1.3953047063738684, -1.573652659387546, 1.4307849479096162, -0.41071730143890284, -3.516243684652054], [-1.3714258327260553, -1.4080289762082976, 1.2153480321511136, 0.07664979347819323, -4.014722988690849], [-1.7190746805179533, -1.9258453537700673, 1.450638182260903, -0.5076287645523351, -3.55258590880046], [-1.5953711969997308, -1.5240054600321788, 1.3855630159478258, -0.04329758528870151, -4.0006899391642925], [-1.5009676599350597, -1.5387600553912306, 1.3088674597702588, -0.2986616855195416, -3.792621661305074], [-1.063666890835659, -1.6201855603458029, 1.429762718004052, -0.4096524876254234, -3.518626420148349], [-1.3384065881191434, -1.465463534595698, 1.399019469153976, -0.3348571614992025, -3.8149860145569625], [-1.1619444073052798, -1.3802973505540348, 0.9630357562837282, -0.5010711456949334, -3.722246956126813], [-1.1915000915896077, -1.3885465341574001, 0.8772814860752204, -0.6993238728484452, -3.584783348636616], [-1.005962938726734, -1.920031335759088, 0.9253984769866604, -0.22400674713801924, -3.473921756442893], [-1.6042908403853284, -1.8041780018028124, 0.7541156379252634, -0.3705749950786976, -3.4301656972358447], [-1.714101341895839, -1.6206548262211693, 1.0047367265062068, 0.016707636531796157, -4.0060244091386945], [-1.2669606492380816, -1.7635671515274565, 0.8662411108701406, -0.13720786347653097, -3.516689959843611], [-1.3020701089260205, -1.891333182624162, 1.0424266379291849, -0.36868561527423055, -3.6802250801107372], [-1.3984607995382177, -1.2769979353475143, 0.8793998833465014, -0.28707892240727173, -3.6107524526746997]], NamedTuple[(n_steps = 3, is_accept = true, acceptance_rate = 3.341661326554039e-18, log_density = -15.245824852649061, hamiltonian_energy = 16.13788456338203, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 295.00808688859576, tree_depth = 2, numerical_error = false, step_size = 0.4, nom_step_size = 0.4, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = -15.245824852649061, hamiltonian_energy = 18.483973027711148, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 3.4578517228158417e9, tree_depth = 0, numerical_error = true, step_size = 0.9340259163636535, nom_step_size = 0.9340259163636535, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = -10.839082572182896, hamiltonian_energy = 16.946630385684124, hamiltonian_energy_error = -0.21888255061683282, max_hamiltonian_energy_error = -0.646338136413231, tree_depth = 2, numerical_error = false, step_size = 0.09209433883419865, nom_step_size = 0.09209433883419865, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9668955002333532, log_density = -6.262998336639214, hamiltonian_energy = 16.25871957184119, hamiltonian_energy_error = -0.3719645404441181, max_hamiltonian_energy_error = -2.107639572196362, tree_depth = 3, numerical_error = false, step_size = 0.09591656221537206, nom_step_size = 0.09591656221537206, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 2.4912931173219377, hamiltonian_energy = 5.726871059110286, hamiltonian_energy_error = -1.0511114542920534, max_hamiltonian_energy_error = -1.0511114542920534, tree_depth = 2, numerical_error = false, step_size = 0.11802470022286281, nom_step_size = 0.11802470022286281, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.8587571626177409, log_density = 3.1055746326337363, hamiltonian_energy = -0.4733123873501617, hamiltonian_energy_error = -0.19894277736984822, max_hamiltonian_energy_error = 0.37212237853748886, tree_depth = 2, numerical_error = false, step_size = 0.1838145044253923, nom_step_size = 0.1838145044253923, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.05428930302001216, log_density = 3.1055746326337363, hamiltonian_energy = 0.960751269038246, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 3.4951868147267016, tree_depth = 2, numerical_error = false, step_size = 0.20249847988629868, nom_step_size = 0.20249847988629868, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.997448266923728, log_density = 2.583822225187303, hamiltonian_energy = -0.2753588658285242, hamiltonian_energy_error = 0.0009022166847874047, max_hamiltonian_energy_error = 0.0044213775666113175, tree_depth = 4, numerical_error = false, step_size = 0.018917991606211826, nom_step_size = 0.018917991606211826, is_adapt = true), (n_steps = 63, is_accept = true, acceptance_rate = 0.9999570181410595, log_density = 2.1436746985824833, hamiltonian_energy = -1.3611052036241207, hamiltonian_energy_error = -0.0011042935691194522, max_hamiltonian_energy_error = -0.01104362420861471, tree_depth = 5, numerical_error = false, step_size = 0.03341312507229612, nom_step_size = 0.03341312507229612, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9672641392138259, log_density = -0.8634041193569857, hamiltonian_energy = 1.675478185087159, hamiltonian_energy_error = 0.06211810934398887, max_hamiltonian_energy_error = 0.06211810934398887, tree_depth = 4, numerical_error = false, step_size = 0.061390278080345514, nom_step_size = 0.061390278080345514, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9967089102134279, log_density = -0.3462165596185649, hamiltonian_energy = 2.279449323039416, hamiltonian_energy_error = 0.0003984319613419274, max_hamiltonian_energy_error = -0.1477528676020512, tree_depth = 3, numerical_error = false, step_size = 0.10358474297088402, nom_step_size = 0.10358474297088402, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9901295851773447, log_density = 1.163886959175315, hamiltonian_energy = 0.9624977063356024, hamiltonian_energy_error = 0.03569587543299768, max_hamiltonian_energy_error = -0.5208708879935129, tree_depth = 3, numerical_error = false, step_size = 0.1936161120064443, nom_step_size = 0.1936161120064443, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.00954948688417104, log_density = 1.163886959175315, hamiltonian_energy = 5.020326777896287, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 73.07325120574487, tree_depth = 1, numerical_error = false, step_size = 0.35557793967894874, nom_step_size = 0.35557793967894874, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9991060277408191, log_density = 0.6027904286462693, hamiltonian_energy = 0.38312513987008423, hamiltonian_energy_error = 0.0027573253125633412, max_hamiltonian_energy_error = -0.014029200614588566, tree_depth = 5, numerical_error = false, step_size = 0.03014967813774577, nom_step_size = 0.03014967813774577, is_adapt = true), (n_steps = 23, is_accept = true, acceptance_rate = 0.9576145090087617, log_density = -1.3114439986543474, hamiltonian_energy = 4.628844276297375, hamiltonian_energy_error = 0.08108704990348059, max_hamiltonian_energy_error = 0.1255530324941443, tree_depth = 4, numerical_error = false, step_size = 0.05761789776448546, nom_step_size = 0.05761789776448546, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9807471117609363, log_density = -3.9476954667899236, hamiltonian_energy = 5.8769962790402115, hamiltonian_energy_error = 0.045938712648507796, max_hamiltonian_energy_error = -0.42253880764352303, tree_depth = 3, numerical_error = false, step_size = 0.0964399972411545, nom_step_size = 0.0964399972411545, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 0.22368347924780352, hamiltonian_energy = 4.2619069254132445, hamiltonian_energy_error = -0.5350995668258758, max_hamiltonian_energy_error = -1.0078828516627647, tree_depth = 3, numerical_error = false, step_size = 0.1725817855045447, nom_step_size = 0.1725817855045447, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.03909079153614473, log_density = 0.22368347924780352, hamiltonian_energy = 0.874555969088334, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 253.54137517537228, tree_depth = 2, numerical_error = false, step_size = 0.3253699328782351, nom_step_size = 0.3253699328782351, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9977150152933824, log_density = 1.0473373528257035, hamiltonian_energy = 2.025408217142301, hamiltonian_energy_error = -0.014159409305443571, max_hamiltonian_energy_error = -0.03381170437178538, tree_depth = 4, numerical_error = false, step_size = 0.03306666360676789, nom_step_size = 0.03306666360676789, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.9375673103331995, log_density = -0.6080156220965431, hamiltonian_energy = 0.8632443809268202, hamiltonian_energy_error = 0.10807207702107124, max_hamiltonian_energy_error = 0.10807207702107124, tree_depth = 2, numerical_error = false, step_size = 0.06226315089644982, nom_step_size = 0.06226315089644982, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 2.253492448968627, hamiltonian_energy = 1.2528260261517574, hamiltonian_energy_error = -0.2566539678444799, max_hamiltonian_energy_error = -0.35688575222595653, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.980106162226117, log_density = 1.4887382300637597, hamiltonian_energy = -0.8175035512784599, hamiltonian_energy_error = 0.06665500391968782, max_hamiltonian_energy_error = -0.10931526708162909, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.988583825708372, log_density = 1.9308620229217865, hamiltonian_energy = -0.7647585686824758, hamiltonian_energy_error = -0.041187901339431954, max_hamiltonian_energy_error = -0.1443970874784256, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9881940876460878, log_density = 1.509734423399454, hamiltonian_energy = -1.36857406628827, hamiltonian_energy_error = 0.03606015951315089, max_hamiltonian_energy_error = -0.07983656793493799, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9987300283520687, log_density = 1.1878776507887263, hamiltonian_energy = 1.0471505452195284, hamiltonian_energy_error = -0.068174441162006, max_hamiltonian_energy_error = -0.181214113485487, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9901670808826805, log_density = 0.5320292142594312, hamiltonian_energy = 0.8565102198065673, hamiltonian_energy_error = 0.05280788956846649, max_hamiltonian_energy_error = -0.11086888291970443, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9936183885081531, log_density = 2.995654979971727, hamiltonian_energy = 0.5104974951416956, hamiltonian_energy_error = -0.17375578876412479, max_hamiltonian_energy_error = -0.17375578876412479, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9506328718189926, log_density = 1.4414169033890225, hamiltonian_energy = 1.4055373854178188, hamiltonian_energy_error = 0.0716540876228744, max_hamiltonian_energy_error = 0.093562383323893, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9994203690455885, log_density = 1.241890763302889, hamiltonian_energy = -0.2190103391785212, hamiltonian_energy_error = 0.004065670329166604, max_hamiltonian_energy_error = -0.08438593922115611, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9963080328283463, log_density = 2.909124605173913, hamiltonian_energy = -0.19474740533879586, hamiltonian_energy_error = -0.06633321942259629, max_hamiltonian_energy_error = -0.11084848480709608, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.992694826816276, log_density = 2.698375168645601, hamiltonian_energy = -2.5917831569648797, hamiltonian_energy_error = 0.009506910355451925, max_hamiltonian_energy_error = -0.02042589882376511, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9244458574185603, log_density = 1.5444762876618743, hamiltonian_energy = -0.15055876042615157, hamiltonian_energy_error = 0.12740573878718564, max_hamiltonian_energy_error = 0.14520117097260465, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9883979213364479, log_density = 2.056515254713741, hamiltonian_energy = 1.4946050666834267, hamiltonian_energy_error = -0.06641142259317423, max_hamiltonian_energy_error = -0.15424555080239744, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8575724826303825, log_density = -0.4200687098371141, hamiltonian_energy = 4.191394477183355, hamiltonian_energy_error = 0.0986517547365775, max_hamiltonian_energy_error = 0.31980971634767297, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 2.579564481151378, hamiltonian_energy = 1.0799626251748609, hamiltonian_energy_error = -0.15063734035860854, max_hamiltonian_energy_error = -0.15063734035860854, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9072288802312192, log_density = 0.7478024465111428, hamiltonian_energy = 2.348381380102328, hamiltonian_energy_error = 0.02272781086472886, max_hamiltonian_energy_error = 0.23944092122142635, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 2.1360678744484574, hamiltonian_energy = -0.5989762405681596, hamiltonian_energy_error = -0.09303976466793329, max_hamiltonian_energy_error = -0.09303976466793329, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9530767951549693, log_density = -0.4476445074863733, hamiltonian_energy = 1.15044132623198, hamiltonian_energy_error = 0.08267313061883597, max_hamiltonian_energy_error = 0.09518851462610911, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9271381510126341, log_density = 0.6078001866267968, hamiltonian_energy = 2.4488780868028335, hamiltonian_energy_error = -0.014854827135607263, max_hamiltonian_energy_error = 0.17710257321175105, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9887467089095109, log_density = 1.7535885441917838, hamiltonian_energy = -0.1796258494784384, hamiltonian_energy_error = -0.043514060179090375, max_hamiltonian_energy_error = -0.06738758537655948, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9880163198142062, log_density = 1.1482727008678744, hamiltonian_energy = -1.0679369915245274, hamiltonian_energy_error = 0.040851343951889385, max_hamiltonian_energy_error = 0.040851343951889385, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9755752484320446, log_density = 0.6017530633648178, hamiltonian_energy = 0.8973932309189256, hamiltonian_energy_error = 0.009743734730202958, max_hamiltonian_energy_error = 0.10669743403724241, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9737134180786391, log_density = 1.5347565762672168, hamiltonian_energy = 1.4703851152681482, hamiltonian_energy_error = -0.00472153589013935, max_hamiltonian_energy_error = 0.09152025347785075, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9934933069737967, log_density = 2.4027733340635358, hamiltonian_energy = -0.3694776717083803, hamiltonian_energy_error = -2.9489023758211275e-5, max_hamiltonian_energy_error = -0.06543976473177482, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9468391010990144, log_density = 1.1148768928714343, hamiltonian_energy = 2.380086360360125, hamiltonian_energy_error = 0.13483585948327992, max_hamiltonian_energy_error = 0.1445778063039591, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9294620639196897, log_density = 0.5397368166094871, hamiltonian_energy = 3.5635302727500298, hamiltonian_energy_error = -0.0676354811185309, max_hamiltonian_energy_error = 0.18435813996193628, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8564181290590334, log_density = -0.7764704605987234, hamiltonian_energy = 5.1705136143573664, hamiltonian_energy_error = 0.16936217181500446, max_hamiltonian_energy_error = 0.3144145238479741, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = -0.2797920309022235, hamiltonian_energy = 5.522017288510991, hamiltonian_energy_error = -0.1808516785188674, max_hamiltonian_energy_error = -0.35473229401428874, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8772347188013759, log_density = -0.14914457027352235, hamiltonian_energy = 5.318798800442352, hamiltonian_energy_error = 0.07591358013183758, max_hamiltonian_energy_error = 0.2146841547511631, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9995344014164078, log_density = 2.3843322363543127, hamiltonian_energy = 0.9110504451204822, hamiltonian_energy_error = -0.07535849255345284, max_hamiltonian_energy_error = -0.080079825839663, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9977733957636625, log_density = 2.330915270986017, hamiltonian_energy = -2.0243212346041823, hamiltonian_energy_error = 0.010166154198260724, max_hamiltonian_energy_error = 0.010166154198260724, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9937596635964833, log_density = 2.392586327350644, hamiltonian_energy = -0.4449137004313979, hamiltonian_energy_error = -0.0068083820162121444, max_hamiltonian_energy_error = -0.08227292477243231, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9223680784958627, log_density = 2.627890444273355, hamiltonian_energy = 0.491842428374488, hamiltonian_energy_error = -0.0069073985248286895, max_hamiltonian_energy_error = 0.14249975915256108, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.898485346066, log_density = 1.4196698978491433, hamiltonian_energy = 2.641395277147585, hamiltonian_energy_error = 0.043228011701867075, max_hamiltonian_energy_error = 0.20533235326792854, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.977274851983559, log_density = 0.4411915830863631, hamiltonian_energy = 1.3463003968214649, hamiltonian_energy_error = 0.016265617881222383, max_hamiltonian_energy_error = -0.05508728712385835, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9915259561271959, log_density = -3.071865328868988, hamiltonian_energy = 4.468895718829115, hamiltonian_energy_error = 0.01339214675483369, max_hamiltonian_energy_error = -0.05295308551088773, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9809455849768821, log_density = 0.9152739511670323, hamiltonian_energy = 4.517196874677284, hamiltonian_energy_error = -0.06952148806486846, max_hamiltonian_energy_error = -0.06952148806486846, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9741667366301451, log_density = 0.6718036972964683, hamiltonian_energy = 0.2204713013169406, hamiltonian_energy_error = 0.01797596939003676, max_hamiltonian_energy_error = 0.0549921397266544, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9765594438175759, log_density = -1.150357952083903, hamiltonian_energy = 1.7206315149625477, hamiltonian_energy_error = 0.07281007319485777, max_hamiltonian_energy_error = 0.07281007319485777, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9807335219624053, log_density = 2.4054647375349827, hamiltonian_energy = 2.511901198848541, hamiltonian_energy_error = -0.10258123880663117, max_hamiltonian_energy_error = -0.10258123880663117, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9935998950579885, log_density = 3.114036992162573, hamiltonian_energy = -1.5303092293545197, hamiltonian_energy_error = -0.009655923478212536, max_hamiltonian_energy_error = -0.02584639173846437, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9728907310093781, log_density = 2.393306497016882, hamiltonian_energy = -2.0943366006833877, hamiltonian_energy_error = 0.040813725428774816, max_hamiltonian_energy_error = 0.040813725428774816, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9527997100560572, log_density = 1.4265169556692925, hamiltonian_energy = 0.01816957186357815, hamiltonian_energy_error = 0.039284784835536435, max_hamiltonian_energy_error = 0.12851261675975734, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.972509195333851, log_density = 1.7067487663645124, hamiltonian_energy = 1.9077245950322927, hamiltonian_energy_error = -0.045632698878594447, max_hamiltonian_energy_error = 0.11136222036768384, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9454059013283025, log_density = 1.9929702098637563, hamiltonian_energy = 0.3627505798363302, hamiltonian_energy_error = 0.030194325991966586, max_hamiltonian_energy_error = 0.13017264439584852, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9856576603120945, log_density = 1.997390968194761, hamiltonian_energy = -1.155066707088015, hamiltonian_energy_error = 0.031070095583909385, max_hamiltonian_energy_error = 0.04793188215502919, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.857571705764556, log_density = -1.6720687884670582, hamiltonian_energy = 6.4802216803444175, hamiltonian_energy_error = 0.07319599818768197, max_hamiltonian_energy_error = 0.3634431252837649, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9990109086481294, log_density = 1.612301075851752, hamiltonian_energy = 2.0152009555150627, hamiltonian_energy_error = -0.209605168754587, max_hamiltonian_energy_error = -0.209605168754587, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9599864685959083, log_density = 3.033445440600005, hamiltonian_energy = 0.7209509474926099, hamiltonian_energy_error = -0.05670366971656948, max_hamiltonian_energy_error = 0.11618181204924838, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9582915431878484, log_density = 1.6894737855672126, hamiltonian_energy = -1.3782632431621344, hamiltonian_energy_error = 0.09493093305097422, max_hamiltonian_energy_error = 0.09493093305097422, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9870316833217672, log_density = 0.4587615082849936, hamiltonian_energy = 0.4361595512997155, hamiltonian_energy_error = 0.03722946269049776, max_hamiltonian_energy_error = -0.08060143826636779, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.991130124604502, log_density = 2.44312326187584, hamiltonian_energy = 1.0194938660534167, hamiltonian_energy_error = -0.02973246961216458, max_hamiltonian_energy_error = -0.08078707417377973, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8483754821371815, log_density = 2.3742325030647695, hamiltonian_energy = 1.0820333392674382, hamiltonian_energy_error = 0.05089646020196126, max_hamiltonian_energy_error = 0.3150815950071846, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9308982329300308, log_density = -0.6284365955891023, hamiltonian_energy = 1.3369459168879445, hamiltonian_energy_error = 0.10248846878856877, max_hamiltonian_energy_error = 0.15339503824882872, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9699127844088473, log_density = 0.1207678271144168, hamiltonian_energy = 4.540884260029511, hamiltonian_energy_error = -0.09411001552225517, max_hamiltonian_energy_error = 0.1629788931215037, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9739502506826977, log_density = 1.9992289568055135, hamiltonian_energy = 2.584180617185429, hamiltonian_energy_error = -0.0143364313348191, max_hamiltonian_energy_error = 0.12568562657811144, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 2.776799474644804, hamiltonian_energy = -1.4067862235167818, hamiltonian_energy_error = -0.037267794542873656, max_hamiltonian_energy_error = -0.04366995490708181, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9163403445399617, log_density = 0.9566519043844437, hamiltonian_energy = -0.11658636724109195, hamiltonian_energy_error = 0.12039791488359619, max_hamiltonian_energy_error = 0.12039791488359619, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9943029774681839, log_density = 1.6621675620188547, hamiltonian_energy = 0.9445718587466456, hamiltonian_energy_error = -0.029337373071978146, max_hamiltonian_energy_error = -0.10306917929766124, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9763156707250042, log_density = 1.3076501561552387, hamiltonian_energy = 2.430848157373315, hamiltonian_energy_error = -0.01996901528242967, max_hamiltonian_energy_error = 0.07728724899462236, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9533067951098004, log_density = -0.366076437939185, hamiltonian_energy = 2.2124446701955285, hamiltonian_energy_error = 0.06920303304426012, max_hamiltonian_energy_error = 0.08903865325095195, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.916095182405296, log_density = 1.4056058000996678, hamiltonian_energy = 5.926461517510837, hamiltonian_energy_error = -0.10378450937048189, max_hamiltonian_energy_error = 0.22936747207184727, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9663368135317352, log_density = 2.0518084916158994, hamiltonian_energy = 0.3301441649054464, hamiltonian_energy_error = 0.009202638636358618, max_hamiltonian_energy_error = 0.06449983711004048, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9339409453831866, log_density = 1.1252217416966754, hamiltonian_energy = 1.147742796545601, hamiltonian_energy_error = 0.020312139538575025, max_hamiltonian_energy_error = 0.12640445391004107, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9905102259132367, log_density = 1.9896134632578004, hamiltonian_energy = 0.6284019925464253, hamiltonian_energy_error = -0.02486576474002211, max_hamiltonian_energy_error = -0.047133258634877606, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8875812311783703, log_density = 0.6926321639210222, hamiltonian_energy = 1.4420524035459379, hamiltonian_energy_error = 0.09691997327913393, max_hamiltonian_energy_error = 0.2145685134802855, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9182210298457412, log_density = 1.8674170945487685, hamiltonian_energy = 1.8029453961090653, hamiltonian_energy_error = -0.03813014452032348, max_hamiltonian_energy_error = 0.30847666920885963, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.986331605915821, log_density = 1.9944792470161534, hamiltonian_energy = 0.7201295626125486, hamiltonian_energy_error = -0.1788726201371711, max_hamiltonian_energy_error = -0.1788726201371711, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9546379185699824, log_density = 0.7655721822902333, hamiltonian_energy = 0.3275663015871977, hamiltonian_energy_error = 0.0905585704246834, max_hamiltonian_energy_error = 0.11247502237195267, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9932563252894335, log_density = 0.5200852550196373, hamiltonian_energy = 2.5086365963812796, hamiltonian_energy_error = -0.09795429091947172, max_hamiltonian_energy_error = -0.12196687775919068, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9918449925786902, log_density = 2.6472327858197016, hamiltonian_energy = 1.1109264352684507, hamiltonian_energy_error = -0.04951032179291226, max_hamiltonian_energy_error = -0.04951032179291226, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9941203317628812, log_density = 2.5208671772588467, hamiltonian_energy = -1.4890970606584668, hamiltonian_energy_error = 0.014890377409506828, max_hamiltonian_energy_error = 0.014890377409506828, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.803903454337714, log_density = 1.765832060348007, hamiltonian_energy = 1.4444428243439038, hamiltonian_energy_error = 0.09160770895314041, max_hamiltonian_energy_error = 0.33441102000174494, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9687083965397814, log_density = 0.6081438513347779, hamiltonian_energy = 1.5041647839541863, hamiltonian_energy_error = 0.009662048611571716, max_hamiltonian_energy_error = 0.09334058595728556, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.983161362055067, log_density = 1.6767095768570446, hamiltonian_energy = 0.014001417180703246, hamiltonian_energy_error = 0.024497011028453364, max_hamiltonian_energy_error = -0.05945613377228354, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7593641877575907, log_density = -0.28238282375512647, hamiltonian_energy = 3.526790432743579, hamiltonian_energy_error = 0.2426991638875604, max_hamiltonian_energy_error = 0.44501652123991864, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9989489421546042, log_density = 0.0837095457497945, hamiltonian_energy = 2.540145061403498, hamiltonian_energy_error = -0.01789595973047886, max_hamiltonian_energy_error = -0.19898527995946713, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 2.11688085321423, hamiltonian_energy = 1.5631059225283632, hamiltonian_energy_error = -0.12385054183690491, max_hamiltonian_energy_error = -0.1578609748144999, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9746799844288617, log_density = 2.8805895541280915, hamiltonian_energy = 0.03481339604790712, hamiltonian_energy_error = -0.026778027349479316, max_hamiltonian_energy_error = -0.07230873813342464, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.924377482381656, log_density = 2.9662349473417837, hamiltonian_energy = -0.4419227286434828, hamiltonian_energy_error = -0.022263052416319873, max_hamiltonian_energy_error = 0.1468651769129225, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9603864997187842, log_density = 2.5094975315787327, hamiltonian_energy = -1.6044226296081745, hamiltonian_energy_error = 0.058167815655359556, max_hamiltonian_energy_error = 0.0812944118526302, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 2.626669474843741, hamiltonian_energy = -2.2281678925274218, hamiltonian_energy_error = -0.006142490080716989, max_hamiltonian_energy_error = -0.07146780452476209, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9959330572916169, log_density = 2.2905238194730533, hamiltonian_energy = -1.7243457705342615, hamiltonian_energy_error = 0.0031276791627330436, max_hamiltonian_energy_error = -0.04298533609701449, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9573519040544444, log_density = 1.4646068545901016, hamiltonian_energy = -0.012968081940472054, hamiltonian_energy_error = 0.08429168316347546, max_hamiltonian_energy_error = 0.13011940695791924, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9952220547466507, log_density = 0.5023970040108079, hamiltonian_energy = 0.41550343738891693, hamiltonian_energy_error = 0.03401771370510309, max_hamiltonian_energy_error = -0.1383996999976178, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8215672266736037, log_density = -1.8186563479282114, hamiltonian_energy = 8.410532203560816, hamiltonian_energy_error = 0.26801891966393754, max_hamiltonian_energy_error = 0.44776765954378206, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 2.2001865915719403, hamiltonian_energy = 3.1639135782467562, hamiltonian_energy_error = -0.2695745745651794, max_hamiltonian_energy_error = -0.3565339954846176, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 2.2253353811332097, hamiltonian_energy = -1.6495012270853349, hamiltonian_energy_error = -0.004095466897444222, max_hamiltonian_energy_error = -0.034572960102807304, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9699227463232388, log_density = 2.3344785152471488, hamiltonian_energy = -0.9063944089789897, hamiltonian_energy_error = 0.02001070174986408, max_hamiltonian_energy_error = 0.05899075295871148, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.916628184702445, log_density = -0.03970759000132773, hamiltonian_energy = 0.4313548429309141, hamiltonian_energy_error = 0.14703800965476288, max_hamiltonian_energy_error = 0.14703800965476288, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9967977542378954, log_density = 1.3940342987045664, hamiltonian_energy = 1.8325650784253202, hamiltonian_energy_error = -0.17436301718889302, max_hamiltonian_energy_error = -0.2000382991186327, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9757725762603497, log_density = 0.9144183586713197, hamiltonian_energy = -0.6858634546559295, hamiltonian_energy_error = 0.033793075426296504, max_hamiltonian_energy_error = 0.04025320209215333, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9878504584052852, log_density = 1.4667989457438146, hamiltonian_energy = 0.8935298547989472, hamiltonian_energy_error = -0.0037105233634415757, max_hamiltonian_energy_error = 0.06469855238929667, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9749565749922757, log_density = 1.3575342594952886, hamiltonian_energy = 0.4965296868882727, hamiltonian_energy_error = 0.02439586999104315, max_hamiltonian_energy_error = 0.11957758636808569, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9522052364399507, log_density = 0.1343478896117638, hamiltonian_energy = 1.5855431013287804, hamiltonian_energy_error = 0.10521430735039905, max_hamiltonian_energy_error = 0.10521430735039905, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7454213165712115, log_density = -1.6088043894796895, hamiltonian_energy = 5.743709525891437, hamiltonian_energy_error = 0.376072398560372, max_hamiltonian_energy_error = 0.6441503512629954, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9963232377394486, log_density = 0.7843892992485557, hamiltonian_energy = 2.4319955003694496, hamiltonian_energy_error = -0.14362846856352718, max_hamiltonian_energy_error = -0.2928708581128907, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9469904497184581, log_density = -0.7069353617822038, hamiltonian_energy = 4.167965216510554, hamiltonian_energy_error = 0.018358750542432745, max_hamiltonian_energy_error = -0.143304052095778, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9997577514652407, log_density = 1.6240086980333661, hamiltonian_energy = 2.183372450345168, hamiltonian_energy_error = -0.08528334560519468, max_hamiltonian_energy_error = -0.15425296114284004, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9497545208291518, log_density = 2.3124200371122807, hamiltonian_energy = 0.8807054634822435, hamiltonian_energy_error = 0.014641354684671981, max_hamiltonian_energy_error = 0.0915090629516695, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 1.0, log_density = 2.2682061970507466, hamiltonian_energy = -1.887126137818514, hamiltonian_energy_error = -0.016748475789663875, max_hamiltonian_energy_error = -0.07181367472185451, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.989486532424239, log_density = 1.4629071278720982, hamiltonian_energy = 1.3014200059006789, hamiltonian_energy_error = -0.10177147263867559, max_hamiltonian_energy_error = -0.11007786974212141, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9059323657147192, log_density = -0.07999901184000002, hamiltonian_energy = 3.2122237142146006, hamiltonian_energy_error = 0.1625316370682035, max_hamiltonian_energy_error = 0.18764373016114888, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9951431131471331, log_density = 0.11405731961698429, hamiltonian_energy = 2.5614945711859223, hamiltonian_energy_error = -0.009656272563720592, max_hamiltonian_energy_error = -0.1659919694467371, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.991848030049086, log_density = 1.1885423043670311, hamiltonian_energy = 1.6465466442893861, hamiltonian_energy_error = 0.019124353490682644, max_hamiltonian_energy_error = -0.13265909921634744, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9634436071683571, log_density = -0.4897462174625762, hamiltonian_energy = 3.9325915440856773, hamiltonian_energy_error = 0.045566604126240584, max_hamiltonian_energy_error = 0.12372996246734758, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9879032914426153, log_density = 1.586189361086543, hamiltonian_energy = 1.4023750086349311, hamiltonian_energy_error = -0.09515297674321888, max_hamiltonian_energy_error = -0.14289168402830343, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8285490841077935, log_density = -2.5048743691255684, hamiltonian_energy = 3.070495499668799, hamiltonian_energy_error = 0.23858776303168394, max_hamiltonian_energy_error = 0.23858776303168394, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9980151485060819, log_density = 0.7565793490095665, hamiltonian_energy = 4.206623755013335, hamiltonian_energy_error = -0.0948137582131805, max_hamiltonian_energy_error = -0.25496641573551493, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 2.4880156057829375, hamiltonian_energy = -0.3036804522264527, hamiltonian_energy_error = -0.08870317275513395, max_hamiltonian_energy_error = -0.12688681495983412, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9916800863480556, log_density = 1.8584840094955588, hamiltonian_energy = -1.4398545427218532, hamiltonian_energy_error = 0.02164934260109086, max_hamiltonian_energy_error = -0.04120644443592347, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8876764730681932, log_density = -0.8929189741740551, hamiltonian_energy = 2.1971848139514645, hamiltonian_energy_error = 0.17293743069697154, max_hamiltonian_energy_error = 0.20182839958081011, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9901637952883446, log_density = 0.20129133201436922, hamiltonian_energy = 2.1327680874496853, hamiltonian_energy_error = -0.060769879966278584, max_hamiltonian_energy_error = -0.10751712332069996, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9945259852785517, log_density = -0.2305640907204598, hamiltonian_energy = 1.3955707039194478, hamiltonian_energy_error = 0.026882314421302622, max_hamiltonian_energy_error = -0.08136592907197637, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 1.0, log_density = 0.7430656684418828, hamiltonian_energy = 1.606269295864562, hamiltonian_energy_error = -0.06205886333383237, max_hamiltonian_energy_error = -0.15676425723956866, tree_depth = 5, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9952106564825909, log_density = 1.484602922666184, hamiltonian_energy = 0.7984237695582967, hamiltonian_energy_error = 0.021309668375378177, max_hamiltonian_energy_error = -0.08594065962024455, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.950040741049554, log_density = 1.8631389504072828, hamiltonian_energy = 0.6754275722159351, hamiltonian_energy_error = 0.04194860618955598, max_hamiltonian_energy_error = 0.14797052870082772, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9925880080582632, log_density = 2.9944233405287672, hamiltonian_energy = -0.3713572771121161, hamiltonian_energy_error = -0.052722184225639346, max_hamiltonian_energy_error = -0.06544995373548845, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9198993560619358, log_density = 1.1645125555878995, hamiltonian_energy = 0.3713194905446975, hamiltonian_energy_error = 0.06273534652815771, max_hamiltonian_energy_error = 0.16444440828696255, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9785522137763298, log_density = 1.838870693422816, hamiltonian_energy = 2.071264932754729, hamiltonian_energy_error = -0.059717623781203155, max_hamiltonian_energy_error = -0.10854114125093517, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9552929295040299, log_density = 1.6270360079315669, hamiltonian_energy = 0.046543601466733975, hamiltonian_energy_error = 0.01733287085088442, max_hamiltonian_energy_error = 0.11318026353127286, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9884946365146224, log_density = 0.8044076346241589, hamiltonian_energy = 1.483683469512349, hamiltonian_energy_error = 0.015921911583819615, max_hamiltonian_energy_error = -0.062158935112599956, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9987333889945493, log_density = 1.4614417482510227, hamiltonian_energy = -0.27149946333984243, hamiltonian_energy_error = 0.005083111164312926, max_hamiltonian_energy_error = -0.06789854664046724, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9904153777383323, log_density = 2.7972008734627103, hamiltonian_energy = 0.09652168931786642, hamiltonian_energy_error = -0.02854568266540336, max_hamiltonian_energy_error = -0.0747203798292555, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9648249462981608, log_density = 1.4776338544721526, hamiltonian_energy = -0.2487180094809831, hamiltonian_energy_error = 0.08689330995179767, max_hamiltonian_energy_error = 0.08689330995179767, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9702395502635497, log_density = 1.012102522057205, hamiltonian_energy = 1.1946889210149783, hamiltonian_energy_error = 0.057037704065491024, max_hamiltonian_energy_error = -0.1145661432439602, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9804561121166865, log_density = 1.6634308118957009, hamiltonian_energy = 0.8942178289698051, hamiltonian_energy_error = -0.10660174788409993, max_hamiltonian_energy_error = -0.12879157385587892, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9320162346810515, log_density = 1.9332602753728345, hamiltonian_energy = 0.6117589300273898, hamiltonian_energy_error = -0.01579958554718175, max_hamiltonian_energy_error = 0.1436048330422669, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.993916625530711, log_density = 2.1682438981278374, hamiltonian_energy = -1.1509767413517085, hamiltonian_energy_error = 0.000707630648352664, max_hamiltonian_energy_error = 0.025578232511708876, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9622767409491249, log_density = 2.6326657430344085, hamiltonian_energy = -0.6256653817875342, hamiltonian_energy_error = 0.012166306729939347, max_hamiltonian_energy_error = 0.09490801181626518, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9730559609586038, log_density = 2.125669121186405, hamiltonian_energy = -1.0381157110905628, hamiltonian_energy_error = 0.02154385343266574, max_hamiltonian_energy_error = 0.06209755701034214, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9357907237223019, log_density = 1.7802950414199747, hamiltonian_energy = 0.508980069476336, hamiltonian_energy_error = 0.08599289322698223, max_hamiltonian_energy_error = 0.14561069108497438, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9221896573540725, log_density = 2.393612185258963, hamiltonian_energy = 1.3011332639413586, hamiltonian_energy_error = -0.04305702254725574, max_hamiltonian_energy_error = 0.2485564697378444, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9562307061451287, log_density = 0.5361201440774916, hamiltonian_energy = 0.8845852509557848, hamiltonian_energy_error = 0.06046841519154733, max_hamiltonian_energy_error = 0.0862532262969452, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9684655955830481, log_density = 1.0193089358132044, hamiltonian_energy = 3.551361951333532, hamiltonian_energy_error = -0.021622588048404445, max_hamiltonian_energy_error = 0.1301172590747064, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9522065610693746, log_density = -1.8714730598889027, hamiltonian_energy = 2.9579919590876043, hamiltonian_energy_error = 0.06733848147113708, max_hamiltonian_energy_error = 0.11874084515471184, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9822642635854818, log_density = 1.1303989656836642, hamiltonian_energy = 2.952564213831513, hamiltonian_energy_error = -0.1076282437956877, max_hamiltonian_energy_error = -0.2636830074832055, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9540103389158222, log_density = 2.269626293732024, hamiltonian_energy = 0.787061478898369, hamiltonian_energy_error = -0.15136891921984974, max_hamiltonian_energy_error = -0.15136891921984974, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7609451599171627, log_density = 0.9511970466070334, hamiltonian_energy = 2.3571510120072867, hamiltonian_energy_error = 0.2147066905159054, max_hamiltonian_energy_error = 0.46080220423768914, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9894211462287196, log_density = 1.5661380424417253, hamiltonian_energy = 0.010896046921699432, hamiltonian_energy_error = -0.03270244318689186, max_hamiltonian_energy_error = -0.20045712410621386, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9117968940887158, log_density = 1.864621421147838, hamiltonian_energy = 2.0265942587534473, hamiltonian_energy_error = -0.19053422363391004, max_hamiltonian_energy_error = 0.2788126715158352, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9755641220368803, log_density = 2.4765122939371143, hamiltonian_energy = 0.6252662680762024, hamiltonian_energy_error = 0.006517759854386629, max_hamiltonian_energy_error = 0.07794318001302725, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9905140414019693, log_density = 1.9732455803701061, hamiltonian_energy = -1.4256994148508202, hamiltonian_energy_error = 0.008192899940782095, max_hamiltonian_energy_error = 0.02390880096528747, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9380443737293651, log_density = 1.111453032005338, hamiltonian_energy = 0.2773299970767864, hamiltonian_energy_error = 0.05976335738583405, max_hamiltonian_energy_error = 0.1272405436370455, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9987794537555692, log_density = 2.5290094825840157, hamiltonian_energy = -0.5369693487920861, hamiltonian_energy_error = -0.05161674700037633, max_hamiltonian_energy_error = -0.05416236070841629, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 2.368884833412782, hamiltonian_energy = -2.0196606036952653, hamiltonian_energy_error = -0.018964634596563723, max_hamiltonian_energy_error = -0.02223215950851687, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9176541206732578, log_density = 1.2754215483773628, hamiltonian_energy = 0.8511267924613986, hamiltonian_energy_error = 0.058365872590938395, max_hamiltonian_energy_error = 0.1210548241752567, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9986725123819121, log_density = 1.5643453011902935, hamiltonian_energy = -0.33378007672139587, hamiltonian_energy_error = -0.026173959331328933, max_hamiltonian_energy_error = -0.05953703280897338, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9922043660587041, log_density = 1.6429753921237467, hamiltonian_energy = -0.18112615921379627, hamiltonian_energy_error = 0.03039074042192702, max_hamiltonian_energy_error = -0.051336853636603674, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9223144704880774, log_density = 1.0242309862949135, hamiltonian_energy = 0.7886465452992535, hamiltonian_energy_error = 0.054397151020386, max_hamiltonian_energy_error = 0.16395898918075646, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9704790691878867, log_density = -0.20681414304085344, hamiltonian_energy = 2.4351994247973927, hamiltonian_energy_error = 0.04306828903314175, max_hamiltonian_energy_error = 0.10972005829928078, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 2.9224114395597987, hamiltonian_energy = 0.8240065501067622, hamiltonian_energy_error = -0.1407133128002691, max_hamiltonian_energy_error = -0.17892238921523562, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9395658909834168, log_density = 2.7032090021078687, hamiltonian_energy = -0.23940508275630545, hamiltonian_energy_error = 0.004717513561516284, max_hamiltonian_energy_error = 0.10578376273239143, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9978086832017607, log_density = 3.037234567582443, hamiltonian_energy = -2.2830422202177854, hamiltonian_energy_error = -0.011532529765690747, max_hamiltonian_energy_error = -0.024149464237963603, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.946966645314316, log_density = 1.554448668236578, hamiltonian_energy = -0.37276321906503695, hamiltonian_energy_error = 0.08581719109404662, max_hamiltonian_energy_error = 0.1123547830975572, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9164238573437219, log_density = 0.7027154390002917, hamiltonian_energy = 1.9968817644592627, hamiltonian_energy_error = 0.13482892270032698, max_hamiltonian_energy_error = 0.31907009447659096, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 1.7785587957237823, hamiltonian_energy = -0.30719175078942773, hamiltonian_energy_error = -0.08186720147282789, max_hamiltonian_energy_error = -0.2214378958245038, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9815493324187189, log_density = 1.2375339242451666, hamiltonian_energy = 0.06091771186689998, hamiltonian_energy_error = -0.023159830310134133, max_hamiltonian_energy_error = -0.14430871812846124, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8461960079692764, log_density = -0.6926729296581478, hamiltonian_energy = 4.114631691567038, hamiltonian_energy_error = 0.17915931363931392, max_hamiltonian_energy_error = 0.39420796219016196, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9505600011347729, log_density = -1.3208103082453064, hamiltonian_energy = 2.1904488203652868, hamiltonian_energy_error = 0.0508884751515426, max_hamiltonian_energy_error = -0.10885092679973418, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.978393850061478, log_density = -2.7362000452067115, hamiltonian_energy = 4.444379646643132, hamiltonian_energy_error = 0.10954380461570601, max_hamiltonian_energy_error = -0.27967920318815054, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -1.7542418205568513, hamiltonian_energy = 4.716228713938618, hamiltonian_energy_error = -0.10263329274801691, max_hamiltonian_energy_error = -0.425061053225944, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9986820723447508, log_density = -1.401257651856426, hamiltonian_energy = 4.13930055594545, hamiltonian_energy_error = -0.06220017559469326, max_hamiltonian_energy_error = -0.25715246211818155, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 1.1160793810607608, hamiltonian_energy = 2.673925111440874, hamiltonian_energy_error = -0.09035906158984819, max_hamiltonian_energy_error = -0.09450509137641738, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9492140479244743, log_density = 0.8714735471263602, hamiltonian_energy = 0.824960085704666, hamiltonian_energy_error = 0.07233648539778215, max_hamiltonian_energy_error = 0.1380400815655991, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9959016031559333, log_density = 0.886838861696166, hamiltonian_energy = -0.12004961457958385, hamiltonian_energy_error = 0.00820053685155775, max_hamiltonian_energy_error = -0.15784584821900371, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 1.9331318796721924, hamiltonian_energy = -0.6331277156659616, hamiltonian_energy_error = -0.10544044216917747, max_hamiltonian_energy_error = -0.1610731376166863, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9868783869602379, log_density = 0.2448108535768867, hamiltonian_energy = 1.3043431048882637, hamiltonian_energy_error = -0.0807098236699737, max_hamiltonian_energy_error = 0.08492757285904995, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.989404804800009, log_density = 1.5684255627728092, hamiltonian_energy = 2.9172110852775504, hamiltonian_energy_error = -0.022067941249555467, max_hamiltonian_energy_error = -0.11790439227893135, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9646237288295224, log_density = 2.961742630973202, hamiltonian_energy = -0.3042983557537262, hamiltonian_energy_error = -0.03911109699248039, max_hamiltonian_energy_error = 0.09300028961916301, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9358720370237761, log_density = 0.5842340959133168, hamiltonian_energy = 0.737656015105095, hamiltonian_energy_error = 0.06703987545174361, max_hamiltonian_energy_error = 0.1293260026846904, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9721371351987508, log_density = 2.4151340516092734, hamiltonian_energy = 1.2864345471996597, hamiltonian_energy_error = 0.014096340819290232, max_hamiltonian_energy_error = 0.08193371406080985, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9839019405087454, log_density = 2.881040222345364, hamiltonian_energy = -1.3351190776487518, hamiltonian_energy_error = -0.01903079523427964, max_hamiltonian_energy_error = 0.04335688908777757, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.89264300721099, log_density = 1.8640884267947442, hamiltonian_energy = 0.32773993283711, hamiltonian_energy_error = 0.10551768310575493, max_hamiltonian_energy_error = 0.22285173927156887, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9779518467518952, log_density = 1.8442075041115764, hamiltonian_energy = -0.020117163466369048, hamiltonian_energy_error = 0.02682259922963648, max_hamiltonian_energy_error = 0.10303924605075061, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9659463753279037, log_density = 3.050228465516456, hamiltonian_energy = -0.670232107946922, hamiltonian_energy_error = -0.1447521961201892, max_hamiltonian_energy_error = -0.15014681506060845, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8335326277115392, log_density = 1.5466620438073448, hamiltonian_energy = 3.023444646165796, hamiltonian_energy_error = 0.25754423316749087, max_hamiltonian_energy_error = 0.27909569560414793, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9831837547916071, log_density = 0.9277917849252981, hamiltonian_energy = 0.7811106054733876, hamiltonian_energy_error = -0.0033858279114100664, max_hamiltonian_energy_error = 0.0720006592847946, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9273675104823911, log_density = 2.5779726589358205, hamiltonian_energy = 4.064133356571668, hamiltonian_energy_error = -0.08415222843665227, max_hamiltonian_energy_error = 0.17741769796202078, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9435947568365213, log_density = 0.8591019699259093, hamiltonian_energy = -0.08081422690004825, hamiltonian_energy_error = 0.079074261934998, max_hamiltonian_energy_error = 0.09335630823407715, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9747735077778505, log_density = 1.9978695170556442, hamiltonian_energy = 3.0815622307864974, hamiltonian_energy_error = -0.08033381769967018, max_hamiltonian_energy_error = 0.08143997598207742, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9768721267337642, log_density = 2.0785414600882426, hamiltonian_energy = 0.1614131008120503, hamiltonian_energy_error = 0.008692995425502836, max_hamiltonian_energy_error = 0.045845875440559514, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9248114976912767, log_density = 2.2826880349020406, hamiltonian_energy = -0.4312063623427296, hamiltonian_energy_error = 0.0652630721431613, max_hamiltonian_energy_error = 0.15609819749091136, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9909558941553702, log_density = 2.586533709820353, hamiltonian_energy = -0.9176726664542549, hamiltonian_energy_error = -0.017449625701500437, max_hamiltonian_energy_error = -0.05172302100628512, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.970023762977929, log_density = 0.8578684254222324, hamiltonian_energy = 0.6049659980742486, hamiltonian_energy_error = 0.08128601524540002, max_hamiltonian_energy_error = 0.10155030437556478, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8226226195165897, log_density = 2.1828170688016595, hamiltonian_energy = 1.6627064818991073, hamiltonian_energy_error = -0.0690502637525805, max_hamiltonian_energy_error = 0.359324488729575, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8444909757625039, log_density = -0.9570358447082858, hamiltonian_energy = 2.225826877536162, hamiltonian_energy_error = 0.21511231089042893, max_hamiltonian_energy_error = 0.2172170349050866, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 2.4709479816690276, hamiltonian_energy = 1.521092090359728, hamiltonian_energy_error = -0.14710980005146657, max_hamiltonian_energy_error = -0.20682127199309552, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9678942670542452, log_density = 1.9567045470150646, hamiltonian_energy = -0.39756467539455764, hamiltonian_energy_error = 0.030148284214488008, max_hamiltonian_energy_error = 0.08125135446702658, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8380858262870717, log_density = 2.0114320414649445, hamiltonian_energy = 6.207620088673757, hamiltonian_energy_error = -0.07498302168642468, max_hamiltonian_energy_error = 0.34094889978077436, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.99633974188193, log_density = 2.558194365190655, hamiltonian_energy = -1.452576201724401, hamiltonian_energy_error = -0.01773525773733642, max_hamiltonian_energy_error = -0.04850271777304482, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6655557284382759, log_density = -0.9130008357713546, hamiltonian_energy = 5.243413954225149, hamiltonian_energy_error = 0.2860210733610291, max_hamiltonian_energy_error = 0.7485905942258446, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8990057161490018, log_density = 1.4317036500777807, hamiltonian_energy = 5.451254523274816, hamiltonian_energy_error = -0.08304692345171283, max_hamiltonian_energy_error = 0.5662855512486402, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9409355753653156, log_density = 2.004196039493907, hamiltonian_energy = 3.0478355949265383, hamiltonian_energy_error = -0.03595625348755682, max_hamiltonian_energy_error = 0.22649765106975206, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9606309232801331, log_density = 1.2214898982118605, hamiltonian_energy = -0.724627088492837, hamiltonian_energy_error = 0.06011894363383585, max_hamiltonian_energy_error = 0.0680427788898601, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9614916204424874, log_density = 0.9738233708016146, hamiltonian_energy = 1.8353588865513752, hamiltonian_energy_error = -0.08719834609953248, max_hamiltonian_energy_error = 0.14548184927873908, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9964616313027178, log_density = 1.6356955866819582, hamiltonian_energy = 0.9243076360175184, hamiltonian_energy_error = -0.03062812250266833, max_hamiltonian_energy_error = -0.06754634508413315, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9567521859320663, log_density = 0.9885063398132239, hamiltonian_energy = 1.6025164664249267, hamiltonian_energy_error = -0.028951370243162078, max_hamiltonian_energy_error = 0.11847689360007196, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9369299538492415, log_density = -1.0213974565458406, hamiltonian_energy = 3.124072513294275, hamiltonian_energy_error = -0.034963230594586836, max_hamiltonian_energy_error = 0.16952404950087274, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.996912581916252, log_density = 1.2855109257468182, hamiltonian_energy = 1.8972716847182194, hamiltonian_energy_error = -0.02199078507970098, max_hamiltonian_energy_error = -0.028321413951616137, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9913601665220652, log_density = 1.7765325190078318, hamiltonian_energy = -0.0905367360227669, hamiltonian_energy_error = -0.011173470192082924, max_hamiltonian_energy_error = -0.08488840042910795, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9819553388430202, log_density = 1.4563949775184781, hamiltonian_energy = 0.8267612609909145, hamiltonian_energy_error = 0.015200696462555285, max_hamiltonian_energy_error = 0.04762377431412901, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9668129285222056, log_density = -0.5351282609303407, hamiltonian_energy = 1.4013562059885705, hamiltonian_energy_error = 0.08413370395149622, max_hamiltonian_energy_error = 0.08875572857396974, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9732332040795436, log_density = 0.8774333875819647, hamiltonian_energy = 3.4150884607636236, hamiltonian_energy_error = -0.046015237712644375, max_hamiltonian_energy_error = 0.11581344921423309, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.976709040213167, log_density = 0.9867515818568684, hamiltonian_energy = 0.9518407081436315, hamiltonian_energy_error = 0.04297898131278677, max_hamiltonian_energy_error = 0.07791554741867923, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8651695055232693, log_density = -3.7270956570550435, hamiltonian_energy = 4.623064155146563, hamiltonian_energy_error = 0.5083431125137885, max_hamiltonian_energy_error = 0.5083431125137885, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 0.334012713433383, hamiltonian_energy = 3.868270451092318, hamiltonian_energy_error = -0.7463763258558114, max_hamiltonian_energy_error = -0.7463763258558114, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.973947434482173, log_density = 1.9232956475421705, hamiltonian_energy = 3.5093455569680465, hamiltonian_energy_error = -0.076306481414945, max_hamiltonian_energy_error = -0.14334549876659697, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9491628908700667, log_density = 0.8221564968205186, hamiltonian_energy = 1.7678833243547678, hamiltonian_energy_error = 0.04433096256934155, max_hamiltonian_energy_error = 0.09457632581572306, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9855849469686271, log_density = 0.3351620306879486, hamiltonian_energy = 2.132926866613582, hamiltonian_energy_error = -0.008635447164617283, max_hamiltonian_energy_error = -0.13568628551554784, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8135789477259129, log_density = -2.096832010545217, hamiltonian_energy = 3.018280612693291, hamiltonian_energy_error = 0.2877625916878017, max_hamiltonian_energy_error = 0.31880392508538824, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = -2.578747939311942, hamiltonian_energy = 3.3613008741233767, hamiltonian_energy_error = -0.06530305928881575, max_hamiltonian_energy_error = -0.3440582331373423, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = -1.7981148541439147, hamiltonian_energy = 3.862139916491584, hamiltonian_energy_error = -0.1362816643602791, max_hamiltonian_energy_error = -0.2459335317493121, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 0.3768495126279845, hamiltonian_energy = 2.4501505322289514, hamiltonian_energy_error = -0.046349952198681876, max_hamiltonian_energy_error = -0.1403514355161728, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9367735725721865, log_density = 0.005080485683532032, hamiltonian_energy = 3.1185584907058743, hamiltonian_energy_error = -0.027238903731808595, max_hamiltonian_energy_error = 0.18386171222751546, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9983532840870362, log_density = 2.054609957807976, hamiltonian_energy = 0.7029982261186283, hamiltonian_energy_error = -0.036640892134734315, max_hamiltonian_energy_error = -0.1047490165343743, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9634015837103754, log_density = 0.12941798914517477, hamiltonian_energy = 0.5718907473890205, hamiltonian_energy_error = 0.0941211040277039, max_hamiltonian_energy_error = 0.09520144999237234, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9808675540432664, log_density = -1.03485264695777, hamiltonian_energy = 2.3406848940988256, hamiltonian_energy_error = 0.014257005828463232, max_hamiltonian_energy_error = -0.17612419722299277, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9962707758612233, log_density = -0.8776323439224587, hamiltonian_energy = 2.6158932351447293, hamiltonian_energy_error = -0.05868754500476525, max_hamiltonian_energy_error = -0.1576603603646558, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9754474529839827, log_density = 1.4851608107793766, hamiltonian_energy = 4.45299530610618, hamiltonian_energy_error = -0.05387473902345796, max_hamiltonian_energy_error = -0.11563603197388073, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9997031753671375, log_density = 0.7253459285910786, hamiltonian_energy = -0.02693034790489024, hamiltonian_energy_error = -0.017889492106973326, max_hamiltonian_energy_error = -0.1542038943195323, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 3.222197425010254, hamiltonian_energy = -0.3568130136562355, hamiltonian_energy_error = -0.10237581423961484, max_hamiltonian_energy_error = -0.10397790185706868, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9400938471438791, log_density = -0.6168656568375974, hamiltonian_energy = 2.0797417670255918, hamiltonian_energy_error = 0.07186633406230403, max_hamiltonian_energy_error = 0.1577729829611232, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.970650002260863, log_density = -0.4577197642483881, hamiltonian_energy = 1.9349792784428574, hamiltonian_energy_error = 0.029611404247826156, max_hamiltonian_energy_error = -0.11037312417760892, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.987797688221144, log_density = 2.535700484634024, hamiltonian_energy = 4.018266164977427, hamiltonian_energy_error = -0.22100291692225138, max_hamiltonian_energy_error = -0.22100291692225138, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9509618007100781, log_density = 0.8007357443961656, hamiltonian_energy = 0.5676217793867522, hamiltonian_energy_error = 0.07323583757326113, max_hamiltonian_energy_error = 0.0965610964267164, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9899777465668708, log_density = 2.6568313574406393, hamiltonian_energy = 0.5748455544839302, hamiltonian_energy_error = -0.0639236211344214, max_hamiltonian_energy_error = -0.08092542523636337, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9781191497371909, log_density = 0.8559217903103242, hamiltonian_energy = -0.2959681184081864, hamiltonian_energy_error = 0.048391029956222686, max_hamiltonian_energy_error = 0.04990200073565343, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9440898649219199, log_density = -0.09058345776730192, hamiltonian_energy = 2.2049162427209996, hamiltonian_energy_error = 0.15175048838563088, max_hamiltonian_energy_error = 0.15175048838563088, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9952612936951858, log_density = -0.3008445445163268, hamiltonian_energy = 2.352915967803621, hamiltonian_energy_error = -0.016737369196920593, max_hamiltonian_energy_error = -0.19350246074048094, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9919400102258817, log_density = -2.036865104513776, hamiltonian_energy = 4.051806061564871, hamiltonian_energy_error = 0.009103290468915226, max_hamiltonian_energy_error = -0.0956293030389972, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9956109759935724, log_density = -2.6453805048997197, hamiltonian_energy = 3.7454621868177647, hamiltonian_energy_error = -0.014502478980830347, max_hamiltonian_energy_error = -0.08942375846052553, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9900176989743644, log_density = -0.8916206539695501, hamiltonian_energy = 4.061747637046637, hamiltonian_energy_error = -0.08115202179795222, max_hamiltonian_energy_error = -0.08308817164797322, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.968058589687071, log_density = -3.391923712936334, hamiltonian_energy = 3.7315865433242803, hamiltonian_energy_error = 0.061331839670056176, max_hamiltonian_energy_error = 0.06958754497005559, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9945727241658449, log_density = -1.2340695784708338, hamiltonian_energy = 5.363213988105562, hamiltonian_energy_error = -0.003566939024025828, max_hamiltonian_energy_error = -0.06197839815589745, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9947094647521786, log_density = -2.7895343858130603, hamiltonian_energy = 5.815222106720812, hamiltonian_energy_error = 0.028342520020009587, max_hamiltonian_energy_error = -0.08279392908372252, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9943328210470649, log_density = -0.11567756960298503, hamiltonian_energy = 5.2220650337215275, hamiltonian_energy_error = -0.0716947206564722, max_hamiltonian_energy_error = -0.19577703689139092, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 1.4894824271781157, hamiltonian_energy = 1.1047721262375, hamiltonian_energy_error = -0.022849225290282105, max_hamiltonian_energy_error = -0.055635363422028794, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9745855720412825, log_density = 2.2016071959669237, hamiltonian_energy = 1.204521651903912, hamiltonian_energy_error = -0.04134346747404338, max_hamiltonian_energy_error = 0.057724440143406275, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9353450996986248, log_density = 1.735749565123772, hamiltonian_energy = 0.24401934537304548, hamiltonian_energy_error = 0.06530731958289726, max_hamiltonian_energy_error = 0.16492468727870702, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9897937335589907, log_density = 2.3810281280598105, hamiltonian_energy = -0.6669539954275872, hamiltonian_energy_error = -0.06287378011004585, max_hamiltonian_energy_error = -0.08313015292240955, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9397100444015936, log_density = 0.8158650332191062, hamiltonian_energy = 2.065006188206661, hamiltonian_energy_error = 0.06243332291266368, max_hamiltonian_energy_error = 0.11430016003347987, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9485529679139424, log_density = 1.7444077848356816, hamiltonian_energy = 2.8859189296405567, hamiltonian_energy_error = -0.04413024011279543, max_hamiltonian_energy_error = 0.1480599802122744, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.87544155157205, log_density = 0.8528402282109546, hamiltonian_energy = 1.274121984303005, hamiltonian_energy_error = 0.09615913030057, max_hamiltonian_energy_error = 0.23554095278603837, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9450405673159415, log_density = -0.47557893901550585, hamiltonian_energy = 4.037328664570678, hamiltonian_energy_error = -0.03804015627337076, max_hamiltonian_energy_error = 0.22319526486885, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.998899667147249, log_density = 1.8957951484745532, hamiltonian_energy = 0.9298680215852553, hamiltonian_energy_error = -0.07640701611817113, max_hamiltonian_energy_error = -0.15849794331437983, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9964815472905919, log_density = 2.044725441320697, hamiltonian_energy = -0.31775926987597747, hamiltonian_energy_error = -0.027477652902373473, max_hamiltonian_energy_error = -0.06269610285103355, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9960066409090342, log_density = 2.053148686939501, hamiltonian_energy = -0.787128189149056, hamiltonian_energy_error = -0.008337989788432587, max_hamiltonian_energy_error = 0.022141448410561537, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9379513604762719, log_density = 0.6848573900897978, hamiltonian_energy = 0.599462670324485, hamiltonian_energy_error = 0.07336901286492936, max_hamiltonian_energy_error = 0.15393460473150644, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9873401333784907, log_density = -0.5366958616296564, hamiltonian_energy = 4.207169168108738, hamiltonian_energy_error = -0.069470845882047, max_hamiltonian_energy_error = -0.11924984020702567, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 2.5417362798231338, hamiltonian_energy = 2.3099211925809486, hamiltonian_energy_error = -0.06468559927060102, max_hamiltonian_energy_error = -0.07066204732205827, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.987259602477306, log_density = 3.0338681766963447, hamiltonian_energy = -1.7040914236498024, hamiltonian_energy_error = 0.004628729192724945, max_hamiltonian_energy_error = 0.029716279954033364, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9256978813725317, log_density = -0.02295732965193409, hamiltonian_energy = 1.7919000784127361, hamiltonian_energy_error = 0.0370371853054936, max_hamiltonian_energy_error = 0.14744438880467992, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9622039714238759, log_density = 2.7883238344678496, hamiltonian_energy = 2.5568120490402784, hamiltonian_energy_error = -0.04276797164214985, max_hamiltonian_energy_error = 0.15100657669179096, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.984558593903716, log_density = 2.826384247605226, hamiltonian_energy = -1.7286030479678653, hamiltonian_energy_error = -0.002055735324169916, max_hamiltonian_energy_error = 0.03766481587323289, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9621116988776787, log_density = 0.8686888581887526, hamiltonian_energy = -0.580492409044047, hamiltonian_energy_error = 0.07361903071656617, max_hamiltonian_energy_error = 0.07690702811377292, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9949857129154146, log_density = 1.4321488064330268, hamiltonian_energy = -0.19836424256377572, hamiltonian_energy_error = -0.032306687422993696, max_hamiltonian_energy_error = -0.032306687422993696, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 2.8072554996157884, hamiltonian_energy = -1.2713796366317065, hamiltonian_energy_error = -0.05149948990254938, max_hamiltonian_energy_error = -0.06675498127599244, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9341888762880339, log_density = -0.8130602825547975, hamiltonian_energy = 1.4344001414924055, hamiltonian_energy_error = 0.17725086159479453, max_hamiltonian_energy_error = 0.17725086159479453, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 2.2847514009759653, hamiltonian_energy = 0.9462497908933938, hamiltonian_energy_error = -0.1729246463711549, max_hamiltonian_energy_error = -0.21562042141771487, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9964940160266859, log_density = 2.6015032349937375, hamiltonian_energy = -1.1646181510229567, hamiltonian_energy_error = -0.000799479944860293, max_hamiltonian_energy_error = -0.031582330836596784, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8997114162259194, log_density = 2.6585237087383238, hamiltonian_energy = 2.072369957688786, hamiltonian_energy_error = -0.007477410106369042, max_hamiltonian_energy_error = 0.26632807282218973, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.959133698486532, log_density = 2.3570218192810852, hamiltonian_energy = 0.22557952112563084, hamiltonian_energy_error = 0.02327461671950326, max_hamiltonian_energy_error = 0.09866607496202773, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9743889429836943, log_density = 1.2922443695634662, hamiltonian_energy = 0.06428756910554734, hamiltonian_energy_error = -0.015591273594137256, max_hamiltonian_energy_error = 0.09125099265080355, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8351996761663437, log_density = -2.1224064999046632, hamiltonian_energy = 4.6958756247216975, hamiltonian_energy_error = 0.2021951210344506, max_hamiltonian_energy_error = 0.2362219401431851, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9901464919950413, log_density = 1.568637610847519, hamiltonian_energy = 4.355177825888863, hamiltonian_energy_error = -0.14917506836670835, max_hamiltonian_energy_error = -0.31475134681650285, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.997561483102217, log_density = 2.3055108908870388, hamiltonian_energy = -0.9577193487916038, hamiltonian_energy_error = -0.08719183014037535, max_hamiltonian_energy_error = -0.08719183014037535, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9204855617685227, log_density = 0.6504450918939924, hamiltonian_energy = 2.1444119985156345, hamiltonian_energy_error = 0.04957732516128388, max_hamiltonian_energy_error = 0.16329089960369458, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9727313332694273, log_density = 1.8857213617856772, hamiltonian_energy = 1.772248033128513, hamiltonian_energy_error = 0.00917798331936126, max_hamiltonian_energy_error = 0.0995222375521363, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 2.697721623278465, hamiltonian_energy = -1.8784411089512507, hamiltonian_energy_error = -0.06992629050263233, max_hamiltonian_energy_error = -0.06992629050263233, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9939278246673143, log_density = 3.0578267024956602, hamiltonian_energy = -1.3368233831397458, hamiltonian_energy_error = -0.005500688267203291, max_hamiltonian_energy_error = 0.03512825050772683, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9356847878974226, log_density = 1.728340191607339, hamiltonian_energy = -1.4543852647063278, hamiltonian_energy_error = 0.07837741415485633, max_hamiltonian_energy_error = 0.07887934456981704, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9994048010783426, log_density = 2.6694666409179675, hamiltonian_energy = -0.6920447382179948, hamiltonian_energy_error = -0.09666338742093528, max_hamiltonian_energy_error = -0.09666338742093528, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9674559358160739, log_density = 2.6214419611248303, hamiltonian_energy = -1.0658478643615878, hamiltonian_energy_error = -0.021026763643938295, max_hamiltonian_energy_error = 0.0768417748331548, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8754001763439637, log_density = -1.031538254367197, hamiltonian_energy = 3.2776018113402072, hamiltonian_energy_error = 0.1744543075337397, max_hamiltonian_energy_error = 0.21418116548533828, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.931692952893749, log_density = -0.19758698536145758, hamiltonian_energy = 4.793583658166715, hamiltonian_energy_error = 0.0434970134957835, max_hamiltonian_energy_error = -0.17402483810002067, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9738288494000978, log_density = 1.3093937503042383, hamiltonian_energy = 1.7605111337527934, hamiltonian_energy_error = 0.018688221057121757, max_hamiltonian_energy_error = -0.12039262083569624, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9836044985115774, log_density = 1.8749408189558032, hamiltonian_energy = -0.286281777177291, hamiltonian_energy_error = -0.04948243288118226, max_hamiltonian_energy_error = -0.18894249660056706, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9532556019008682, log_density = 0.5141900166555278, hamiltonian_energy = 1.8914422979613716, hamiltonian_energy_error = 0.02894392387760636, max_hamiltonian_energy_error = 0.09838278414226465, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9859371223804628, log_density = 0.47578949197646736, hamiltonian_energy = 1.1109777208161853, hamiltonian_energy_error = 0.008859056778182994, max_hamiltonian_energy_error = -0.11270728192715396, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9299157254233633, log_density = 0.7167111562260331, hamiltonian_energy = 3.852299684559391, hamiltonian_energy_error = -0.07394920822331752, max_hamiltonian_energy_error = 0.19524712190452842, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9766986385794755, log_density = 0.6321510237581514, hamiltonian_energy = 2.234035636235701, hamiltonian_energy_error = -0.002832346554118459, max_hamiltonian_energy_error = -0.10414166380596335, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9902851593351906, log_density = 2.075597086536659, hamiltonian_energy = 0.6965854151953659, hamiltonian_energy_error = -0.11951632752808017, max_hamiltonian_energy_error = -0.11951632752808017, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9650595473706011, log_density = 1.328586764584557, hamiltonian_energy = -0.5191962306824291, hamiltonian_energy_error = 0.06177502098848198, max_hamiltonian_energy_error = 0.09715527328542373, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9821074805260414, log_density = 0.9053870048385768, hamiltonian_energy = 0.8781645657914761, hamiltonian_energy_error = 0.04159983684837898, max_hamiltonian_energy_error = -0.06033991981739195, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9983280241645129, log_density = 2.281695142009875, hamiltonian_energy = -0.20427466997281352, hamiltonian_energy_error = -0.035711818624136304, max_hamiltonian_energy_error = -0.10108341722115122, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9617669224411747, log_density = 0.47151799486044865, hamiltonian_energy = 0.3226803422682871, hamiltonian_energy_error = 0.060572267612405195, max_hamiltonian_energy_error = 0.07463699024652881, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9995683628731596, log_density = 1.6658370258788047, hamiltonian_energy = 0.10545151647063578, hamiltonian_energy_error = -0.01060192408921612, max_hamiltonian_energy_error = -0.12852236134941664, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9955946229300212, log_density = 2.0306299806770074, hamiltonian_energy = 0.5733850562733132, hamiltonian_energy_error = -0.028463549624063944, max_hamiltonian_energy_error = -0.053937323905415724, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9913935859118294, log_density = 2.1214240874076165, hamiltonian_energy = -0.3836008355967577, hamiltonian_energy_error = -0.11962350712787284, max_hamiltonian_energy_error = -0.14073004850149018, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9748439989461513, log_density = 1.61858464328796, hamiltonian_energy = 0.7365585311016329, hamiltonian_energy_error = 0.05081257438696252, max_hamiltonian_energy_error = 0.07020711626681075, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9935734682991161, log_density = 2.612325072750062, hamiltonian_energy = 0.6091063083824775, hamiltonian_energy_error = -0.14465091804860464, max_hamiltonian_energy_error = -0.14465091804860464, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9855517200030621, log_density = 2.2253689647130894, hamiltonian_energy = -0.43069092638893514, hamiltonian_energy_error = 0.01239748221433512, max_hamiltonian_energy_error = 0.03958922618954258, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9919261319838986, log_density = 2.9292452713782584, hamiltonian_energy = -0.47736885096937254, hamiltonian_energy_error = -0.06468227972855023, max_hamiltonian_energy_error = -0.06468227972855023, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9852878212696912, log_density = 2.003406254859172, hamiltonian_energy = -0.8528453307356301, hamiltonian_energy_error = 0.005797406342800793, max_hamiltonian_energy_error = 0.03131827600099735, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9196618916765704, log_density = 1.1437196003013828, hamiltonian_energy = 0.3308290794239035, hamiltonian_energy_error = 0.14614441572168246, max_hamiltonian_energy_error = 0.14614441572168246, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.984495882776676, log_density = 0.6607622268785729, hamiltonian_energy = -0.06094231686723306, hamiltonian_energy_error = 0.046290736944751276, max_hamiltonian_energy_error = -0.07191945296107582, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9850932907588198, log_density = 0.8947915892927796, hamiltonian_energy = 1.6566374784776396, hamiltonian_energy_error = -0.08823224539685537, max_hamiltonian_energy_error = -0.2273753013046642, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9996015046750518, log_density = 2.3734525397516038, hamiltonian_energy = -0.4240636539139375, hamiltonian_energy_error = -0.09516860614454115, max_hamiltonian_energy_error = -0.10813422400424222, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9454113066718378, log_density = 1.0976125660154121, hamiltonian_energy = 1.4452312313603373, hamiltonian_energy_error = 0.07562105981948664, max_hamiltonian_energy_error = 0.1505617602109841, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9894399232649381, log_density = 1.6676212968587496, hamiltonian_energy = 1.6174015210795019, hamiltonian_energy_error = -0.14204954492248678, max_hamiltonian_energy_error = -0.14204954492248678, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9714914865024825, log_density = 1.837300792195606, hamiltonian_energy = -1.0029627578573923, hamiltonian_energy_error = 0.04394336024164347, max_hamiltonian_energy_error = 0.050105377169543885, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9843055036791488, log_density = 1.0821183514627855, hamiltonian_energy = 0.6119573298441219, hamiltonian_energy_error = 0.004659682183046909, max_hamiltonian_energy_error = 0.05500221013888851, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.870465202750628, log_density = -4.198005938852143, hamiltonian_energy = 5.379164821610799, hamiltonian_energy_error = 0.2693456842072335, max_hamiltonian_energy_error = 0.30578321964327415, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9367878008776805, log_density = -3.7476907842601186, hamiltonian_energy = 7.450805307826179, hamiltonian_energy_error = 0.22070274302923476, max_hamiltonian_energy_error = -0.44819114956011674, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = -5.882634844741346, hamiltonian_energy = 7.431395161998829, hamiltonian_energy_error = -0.005056717785301146, max_hamiltonian_energy_error = -0.5633607727388679, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -6.054600496245346, hamiltonian_energy = 7.920978861634279, hamiltonian_energy_error = -0.022382508963711523, max_hamiltonian_energy_error = -0.40839201101838185, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9915005885187002, log_density = -1.2131221421909615, hamiltonian_energy = 6.933550820406983, hamiltonian_energy_error = -0.3526685233545157, max_hamiltonian_energy_error = -0.4241597895043592, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9886238755373458, log_density = 2.744792589733713, hamiltonian_energy = 2.673195518236751, hamiltonian_energy_error = -0.13845391239777705, max_hamiltonian_energy_error = -0.1605168931086851, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9668674267697186, log_density = 2.0209316031031914, hamiltonian_energy = -1.5292361479784826, hamiltonian_energy_error = 0.03862494776964853, max_hamiltonian_energy_error = 0.04646262630177689, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9872953417972271, log_density = 1.1947817800869647, hamiltonian_energy = 0.45848362262838704, hamiltonian_energy_error = -0.004366715726413561, max_hamiltonian_energy_error = 0.04355596815696572, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9305502218484404, log_density = 1.0197860194927912, hamiltonian_energy = 1.326243532909726, hamiltonian_energy_error = 0.11632589249762271, max_hamiltonian_energy_error = 0.1550031465402899, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9893809432832308, log_density = 0.5066901453925325, hamiltonian_energy = 1.9175933012227317, hamiltonian_energy_error = -0.05346450439026196, max_hamiltonian_energy_error = -0.21583072261963698, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9267684753928753, log_density = -1.094401565933044, hamiltonian_energy = 4.5505546308549025, hamiltonian_energy_error = 0.0809486606777936, max_hamiltonian_energy_error = 0.10068265809711807, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8805289258757224, log_density = -2.0508798436930746, hamiltonian_energy = 5.648532384229007, hamiltonian_energy_error = 0.10320453612248848, max_hamiltonian_energy_error = 0.5174813989007143, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9714892913192942, log_density = -0.2455963796601104, hamiltonian_energy = 3.965573798952156, hamiltonian_energy_error = -0.07508387856680443, max_hamiltonian_energy_error = -0.239542855970301, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9677680537350207, log_density = -6.948133276855026, hamiltonian_energy = 8.18306107746845, hamiltonian_energy_error = 0.11933504442554543, max_hamiltonian_energy_error = -0.20669165707979253, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9500372276669682, log_density = 2.688803524734878, hamiltonian_energy = 9.064828950869352, hamiltonian_energy_error = -0.4639187668510374, max_hamiltonian_energy_error = -0.4639187668510374, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9152304490932072, log_density = -0.8307858450525902, hamiltonian_energy = 2.2650625152148027, hamiltonian_energy_error = 0.10296533798105045, max_hamiltonian_energy_error = 0.16268787116054817, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9727248434046598, log_density = 2.673510533927656, hamiltonian_energy = 1.6700459748195664, hamiltonian_energy_error = -0.03578052695699041, max_hamiltonian_energy_error = 0.10486200497134135, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.974336746086589, log_density = 1.4397145635669837, hamiltonian_energy = -0.642006651454722, hamiltonian_energy_error = 0.07025418258079563, max_hamiltonian_energy_error = 0.07182423238430347, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9980245798015894, log_density = 0.9643601852000909, hamiltonian_energy = 0.9659761663572624, hamiltonian_energy_error = -0.042169292566676786, max_hamiltonian_energy_error = -0.12084749033009201, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 2.260215568080799, hamiltonian_energy = -0.6697619377641157, hamiltonian_energy_error = -0.03871612723336926, max_hamiltonian_energy_error = -0.06436706051677044, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9522793543792011, log_density = 1.9541579317826177, hamiltonian_energy = 0.5281877101503034, hamiltonian_energy_error = 0.03568274760247547, max_hamiltonian_energy_error = 0.09581274024593256, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9708207791434265, log_density = 2.3536998086311947, hamiltonian_energy = -0.915563260165938, hamiltonian_energy_error = -0.025255699165755763, max_hamiltonian_energy_error = 0.08246774203307483, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9369484345977207, log_density = 1.029687604824769, hamiltonian_energy = 2.2138506454311666, hamiltonian_energy_error = 0.0840131041458485, max_hamiltonian_energy_error = 0.16050331327403278, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 1.3533005180526416, hamiltonian_energy = 0.7503236973596668, hamiltonian_energy_error = -0.06581107594513225, max_hamiltonian_energy_error = -0.08139960447418226, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9129977094511896, log_density = -0.5115519586315678, hamiltonian_energy = 3.197514711356002, hamiltonian_energy_error = 0.11380514809991427, max_hamiltonian_energy_error = 0.19026913964204084, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.994456300325285, log_density = 1.7055529146692852, hamiltonian_energy = 1.7916315028316414, hamiltonian_energy_error = -0.11104983240228727, max_hamiltonian_energy_error = -0.13496539480714165, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9943845839857826, log_density = 0.16796735138979102, hamiltonian_energy = 0.46796906376104364, hamiltonian_energy_error = 0.016929305670740913, max_hamiltonian_energy_error = -0.06056395893950772, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 0.515420244601934, hamiltonian_energy = 1.0622935927546553, hamiltonian_energy_error = -0.00945519898939473, max_hamiltonian_energy_error = -0.12863200129947017, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9115800803146448, log_density = 1.4703129056017286, hamiltonian_energy = 1.6860194444388839, hamiltonian_energy_error = 0.020148738024850843, max_hamiltonian_energy_error = 0.19269566108669678, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9978995193335682, log_density = 2.4099620765969867, hamiltonian_energy = -0.7992154003538103, hamiltonian_energy_error = -0.03986108343470074, max_hamiltonian_energy_error = -0.09327620881427212, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9822927265128246, log_density = 1.7554733614815454, hamiltonian_energy = 0.046035417471785633, hamiltonian_energy_error = 3.528709420996812e-5, max_hamiltonian_energy_error = -0.06014300613726142, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9827958478788085, log_density = 1.2972934992616878, hamiltonian_energy = 0.4631610550744778, hamiltonian_energy_error = -0.008047431964622653, max_hamiltonian_energy_error = -0.07672841791068441, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8845318475822875, log_density = 1.3109471473228087, hamiltonian_energy = 2.9694712491525728, hamiltonian_energy_error = -0.022427200173686046, max_hamiltonian_energy_error = 0.21515020904900162, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9438423513755664, log_density = 1.310521891449003, hamiltonian_energy = 3.524612313469067, hamiltonian_energy_error = -0.02523148520996621, max_hamiltonian_energy_error = 0.1937945783707491, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.989501941951166, log_density = 1.240140291038763, hamiltonian_energy = -0.1617452402804076, hamiltonian_energy_error = 0.027445997557239865, max_hamiltonian_energy_error = -0.032214039247241644, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.979637400400108, log_density = 0.466405832455715, hamiltonian_energy = 0.45268174393977334, hamiltonian_energy_error = 0.012918091804510534, max_hamiltonian_energy_error = 0.07387257144058612, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8580973400965232, log_density = -0.4338131605720523, hamiltonian_energy = 3.9821332140487806, hamiltonian_energy_error = 0.21365048779057538, max_hamiltonian_energy_error = 0.2853632336332863, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 1.3595229910728577, hamiltonian_energy = 1.5600426871669466, hamiltonian_energy_error = -0.09119260290559117, max_hamiltonian_energy_error = -0.16444441431874024, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9593250807034335, log_density = -0.8807851547087573, hamiltonian_energy = 4.033073794325967, hamiltonian_energy_error = 0.07181747485366419, max_hamiltonian_energy_error = -0.13818313268547033, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.971759152195786, log_density = -0.32039741997721904, hamiltonian_energy = 4.760025031166619, hamiltonian_energy_error = -0.03072716268914455, max_hamiltonian_energy_error = -0.2633177586010058, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 2.164134249802892, hamiltonian_energy = 1.0557298257314192, hamiltonian_energy_error = -0.11359829113840769, max_hamiltonian_energy_error = -0.11359829113840769, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9958326299417909, log_density = 3.204990823289796, hamiltonian_energy = -1.676408709574194, hamiltonian_energy_error = -0.11395254664861998, max_hamiltonian_energy_error = -0.11395254664861998, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9532031293273706, log_density = 2.666855426890967, hamiltonian_energy = -1.6059630877683078, hamiltonian_energy_error = 0.051104473699707054, max_hamiltonian_energy_error = 0.10998307393438478, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8802530238609625, log_density = -0.6602562022511336, hamiltonian_energy = 3.875716754391737, hamiltonian_energy_error = 0.1354504987348455, max_hamiltonian_energy_error = 0.1777338054433919, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 0.42276422621765875, hamiltonian_energy = 0.9775401801684485, hamiltonian_energy_error = -0.07813030559499712, max_hamiltonian_energy_error = -0.130964750390687, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9560325911372403, log_density = 0.1435787003628608, hamiltonian_energy = 2.5198513253432373, hamiltonian_energy_error = 0.0860075291552902, max_hamiltonian_energy_error = 0.0860075291552902, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9944707351650162, log_density = 2.4468186322324, hamiltonian_energy = 1.5452313037126895, hamiltonian_energy_error = -0.0753368059571764, max_hamiltonian_energy_error = -0.1634278310782673, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.986559094575178, log_density = 1.784939530295862, hamiltonian_energy = 0.26108557461190074, hamiltonian_energy_error = -0.003811064340776049, max_hamiltonian_energy_error = 0.028384300406776752, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9768895531355491, log_density = 0.32739410239634736, hamiltonian_energy = 0.33771731718028264, hamiltonian_energy_error = 0.05061904684095986, max_hamiltonian_energy_error = 0.05261126168398489, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9954712682583741, log_density = 0.5884182118560553, hamiltonian_energy = 1.245574181775044, hamiltonian_energy_error = -0.017129388659612443, max_hamiltonian_energy_error = -0.16980132212650823, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9585240621913985, log_density = -1.069060795785287, hamiltonian_energy = 2.132312865913925, hamiltonian_energy_error = 0.08831726711812626, max_hamiltonian_energy_error = 0.08831726711812626, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9624122963734953, log_density = 0.1616653778877719, hamiltonian_energy = 5.403383558221856, hamiltonian_energy_error = -0.15973255649641427, max_hamiltonian_energy_error = -0.15973255649641427, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9169374199053635, log_density = -5.299455992106687, hamiltonian_energy = 7.119069137136899, hamiltonian_energy_error = 0.07899472498929594, max_hamiltonian_energy_error = 0.1656493754799131, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9965976194468366, log_density = -1.7993635835140775, hamiltonian_energy = 7.268934132179048, hamiltonian_energy_error = 0.017035120450611174, max_hamiltonian_energy_error = -0.11409183450412552, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9942164315168173, log_density = -0.9580386435260912, hamiltonian_energy = 3.613514323161266, hamiltonian_energy_error = -0.0770129608485095, max_hamiltonian_energy_error = -0.11940178541942315, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8503715346522192, log_density = 2.1199759431177547, hamiltonian_energy = 4.678530230827625, hamiltonian_energy_error = 0.004830750834437403, max_hamiltonian_energy_error = 0.2974357016574798, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9309317379931247, log_density = 0.20724512404603956, hamiltonian_energy = 2.414742434654756, hamiltonian_energy_error = 0.08780585136592567, max_hamiltonian_energy_error = 0.12881149067032904, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9800013600495855, log_density = 1.6388730173778665, hamiltonian_energy = 1.900242048534988, hamiltonian_energy_error = -0.0360242918889675, max_hamiltonian_energy_error = -0.11161524241354837, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9321625713300181, log_density = -0.17414794751870488, hamiltonian_energy = 1.371652134361425, hamiltonian_energy_error = 0.13238252203487622, max_hamiltonian_energy_error = 0.19048332133895407, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 0.6876221769253501, hamiltonian_energy = 2.138439147752808, hamiltonian_energy_error = -0.0894793181237552, max_hamiltonian_energy_error = -0.2630318686727873, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9452952575672678, log_density = -0.23961820075360052, hamiltonian_energy = 2.807863824564805, hamiltonian_energy_error = 0.03511656913520422, max_hamiltonian_energy_error = 0.12537637886469177, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9920589009870733, log_density = -0.1609756668588389, hamiltonian_energy = 4.54242962466758, hamiltonian_energy_error = -0.06325096189064894, max_hamiltonian_energy_error = -0.0952267792575574, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7985542366368906, log_density = -0.05084013500202289, hamiltonian_energy = 4.455269963543045, hamiltonian_energy_error = 0.03237333070841775, max_hamiltonian_energy_error = 0.3639745334112874, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9990873451454347, log_density = 1.9289127026106385, hamiltonian_energy = 1.1701633014207085, hamiltonian_energy_error = -0.019975340196098923, max_hamiltonian_energy_error = -0.08702684267295657, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9615387764904919, log_density = 0.1618326522287461, hamiltonian_energy = 1.9628250661858666, hamiltonian_energy_error = 0.06502230171024603, max_hamiltonian_energy_error = 0.1181346799093057, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9268385195208967, log_density = 0.5910254275438156, hamiltonian_energy = 4.000391698634095, hamiltonian_energy_error = 0.05295642872012429, max_hamiltonian_energy_error = 0.1985745707106359, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9876177485758596, log_density = 2.7045761153732517, hamiltonian_energy = 1.9844947827691737, hamiltonian_energy_error = -0.08814337161758434, max_hamiltonian_energy_error = -0.09691713578865624, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9496017367274576, log_density = 2.9657988996495543, hamiltonian_energy = -1.4143543046616645, hamiltonian_energy_error = 0.0030916269333292057, max_hamiltonian_energy_error = 0.10266437493281888, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9593921127546695, log_density = 1.849596696815917, hamiltonian_energy = 0.08196870934061251, hamiltonian_energy_error = 0.044991483284227085, max_hamiltonian_energy_error = 0.09449238818695194, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9878186655973403, log_density = 1.2059223782189132, hamiltonian_energy = 2.1101860432975434, hamiltonian_energy_error = -0.11309550276907077, max_hamiltonian_energy_error = -0.1395769007852561, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9848924015072809, log_density = 2.5893632790674204, hamiltonian_energy = 0.45789171574631604, hamiltonian_energy_error = 0.00016627512367617392, max_hamiltonian_energy_error = -0.07181672753486157, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9148133711122213, log_density = 0.8826613579093952, hamiltonian_energy = 1.0847150480054113, hamiltonian_energy_error = 0.06859629142982415, max_hamiltonian_energy_error = 0.210533567227992, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9982749079814744, log_density = 3.0926014093805883, hamiltonian_energy = -0.2693651875812426, hamiltonian_energy_error = -0.16676122177479769, max_hamiltonian_energy_error = -0.16676122177479769, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9606147354099541, log_density = 2.527109146869565, hamiltonian_energy = -1.0717799089086264, hamiltonian_energy_error = 0.014326343836660538, max_hamiltonian_energy_error = 0.06935009856846541, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9778389495539243, log_density = 2.4148949334718175, hamiltonian_energy = -1.0153477704640383, hamiltonian_energy_error = 0.01488455355846674, max_hamiltonian_energy_error = 0.055278899671600046, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9820486955768971, log_density = 1.430521042284397, hamiltonian_energy = 0.33847177229760206, hamiltonian_energy_error = 0.0005343499882322078, max_hamiltonian_energy_error = 0.052588654026140436, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.95277359668557, log_density = 1.4921371811720725, hamiltonian_energy = 1.4894564136722441, hamiltonian_energy_error = 0.05959234587434148, max_hamiltonian_energy_error = 0.12515692817668755, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9542060032111951, log_density = -0.07322651980483919, hamiltonian_energy = 2.286825603134746, hamiltonian_energy_error = 0.06415011417738015, max_hamiltonian_energy_error = 0.11902254923150446, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.96023548877139, log_density = -0.6135153507976341, hamiltonian_energy = 2.8266098512507254, hamiltonian_energy_error = 0.045126092101642534, max_hamiltonian_energy_error = -0.19157465441147092, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 0.38428359768387566, hamiltonian_energy = 2.3456442558898436, hamiltonian_energy_error = -0.1887133871354827, max_hamiltonian_energy_error = -0.1887133871354827, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 2.074035028886767, hamiltonian_energy = 0.02697096567694368, hamiltonian_energy_error = -0.09510787133500054, max_hamiltonian_energy_error = -0.10522814083996013, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8851435929380449, log_density = -0.9811529257192468, hamiltonian_energy = 3.363950860584765, hamiltonian_energy_error = 0.12477417087966503, max_hamiltonian_energy_error = 0.2287263194303666, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9480409833834081, log_density = 1.3340444469410642, hamiltonian_energy = 4.875183223077171, hamiltonian_energy_error = -0.004334175166130549, max_hamiltonian_energy_error = -0.316885576752429, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9792403700143962, log_density = 1.8186427236068141, hamiltonian_energy = 1.7971143539799859, hamiltonian_energy_error = -0.06697475432564737, max_hamiltonian_energy_error = -0.22708083983823713, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9878253358744956, log_density = 1.4462983585852616, hamiltonian_energy = -1.0795624780842832, hamiltonian_energy_error = 0.023559755028490725, max_hamiltonian_energy_error = -0.055760209929953675, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9831201012304692, log_density = 0.5721939351922991, hamiltonian_energy = 2.6876144781110884, hamiltonian_energy_error = 0.006133539970957891, max_hamiltonian_energy_error = -0.07374884999413478, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8933103821962618, log_density = 0.6130609180899906, hamiltonian_energy = 2.631233295045461, hamiltonian_energy_error = 0.08868081119883264, max_hamiltonian_energy_error = 0.23716625212591236, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9946001868083626, log_density = 0.5773003724950811, hamiltonian_energy = 1.9662334906761396, hamiltonian_energy_error = 0.011422933888358688, max_hamiltonian_energy_error = -0.08773716367119233, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9931526386360656, log_density = 1.173026834225702, hamiltonian_energy = 1.582301484211257, hamiltonian_energy_error = -0.09118224786858331, max_hamiltonian_energy_error = -0.12871901542241027, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.976243232884747, log_density = -0.2889338763967455, hamiltonian_energy = 1.8898844597332478, hamiltonian_energy_error = 0.04554541023657066, max_hamiltonian_energy_error = -0.09460050056803171, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9913964842810479, log_density = -0.06551675962249703, hamiltonian_energy = 2.0670067873337294, hamiltonian_energy_error = 0.010903027623549999, max_hamiltonian_energy_error = -0.1453924314562265, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9407109502258828, log_density = -2.273403165876168, hamiltonian_energy = 3.434270121467836, hamiltonian_energy_error = 0.20396736084334455, max_hamiltonian_energy_error = 0.20396736084334455, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9757763570138169, log_density = -1.4035864443526123, hamiltonian_energy = 5.277362686573533, hamiltonian_energy_error = 0.08741210637685182, max_hamiltonian_energy_error = -0.35778555424783676, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9863807315510346, log_density = -4.545777241449974, hamiltonian_energy = 6.726179022466994, hamiltonian_energy_error = 0.06938507562514484, max_hamiltonian_energy_error = -0.4125161028183575, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -0.907070193747316, hamiltonian_energy = 5.689560562012064, hamiltonian_energy_error = -0.03333073786876639, max_hamiltonian_energy_error = -0.3818218510662774, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6360298038659712, log_density = -5.508324864582079, hamiltonian_energy = 8.883146929688092, hamiltonian_energy_error = 0.6824047926368149, max_hamiltonian_energy_error = 1.2388415349058075, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -3.113869984599784, hamiltonian_energy = 7.955683280450271, hamiltonian_energy_error = -0.2663499809558365, max_hamiltonian_energy_error = -0.3855293233518964, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9796710761362365, log_density = -2.0042702356253983, hamiltonian_energy = 6.763142653969814, hamiltonian_energy_error = -0.01589438686929867, max_hamiltonian_energy_error = -0.29732113013590933, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9798642172244075, log_density = 0.35368055732122805, hamiltonian_energy = 5.406699308077387, hamiltonian_energy_error = -0.06764132204500761, max_hamiltonian_energy_error = -0.3543607776733131, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9306554115358234, log_density = -3.9159188089814654, hamiltonian_energy = 5.423345398671314, hamiltonian_energy_error = 0.1165493624107139, max_hamiltonian_energy_error = 0.14091254899847439, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.979820220989563, log_density = -0.9794812169039853, hamiltonian_energy = 5.686112503190112, hamiltonian_energy_error = -0.019880351715568345, max_hamiltonian_energy_error = -0.11486784082974033, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9789016688584421, log_density = -3.088414504363456, hamiltonian_energy = 3.833503878648065, hamiltonian_energy_error = 0.06239015795454872, max_hamiltonian_energy_error = -0.07722646023452295, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9924014013628069, log_density = -0.2753845662936758, hamiltonian_energy = 5.169852800815914, hamiltonian_energy_error = -0.11036917374102018, max_hamiltonian_energy_error = -0.22297982338357425, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9838861731838049, log_density = 0.8693697778326506, hamiltonian_energy = 3.507598884202346, hamiltonian_energy_error = -0.054413124137623115, max_hamiltonian_energy_error = -0.08695781759036514, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9687824348112504, log_density = 1.1838934627396167, hamiltonian_energy = 1.632424734024862, hamiltonian_energy_error = 0.009714475654565735, max_hamiltonian_energy_error = 0.10977734367506065, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9102010040513695, log_density = 2.122597039836304, hamiltonian_energy = 3.0442717428361856, hamiltonian_energy_error = 0.014261288100765768, max_hamiltonian_energy_error = 0.2986371863139854, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9760764893957816, log_density = 1.7316724215921493, hamiltonian_energy = 1.3236731864743394, hamiltonian_energy_error = 0.019178710290916445, max_hamiltonian_energy_error = 0.11496240849252493, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 3.451904238941129, hamiltonian_energy = -1.7230330324672567, hamiltonian_energy_error = -0.11833184864063662, max_hamiltonian_energy_error = -0.11833184864063662, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9231428923773427, log_density = 1.76790549900951, hamiltonian_energy = -0.9444554703038397, hamiltonian_energy_error = 0.055066526677938876, max_hamiltonian_energy_error = 0.10411431281106376, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.969848374748815, log_density = 1.1019703995143946, hamiltonian_energy = -0.1165865886752071, hamiltonian_energy_error = 0.07071881642713151, max_hamiltonian_energy_error = 0.09156366449422448, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 1.2903386060229458, hamiltonian_energy = 0.13099510738749331, hamiltonian_energy_error = -0.01920117617553463, max_hamiltonian_energy_error = -0.1029486617964972, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9019092342643752, log_density = 1.6599501005087376, hamiltonian_energy = 2.9970593458015564, hamiltonian_energy_error = -0.03706834832075323, max_hamiltonian_energy_error = 0.20485787107185782, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9925716516266571, log_density = 1.4103344785398182, hamiltonian_energy = 0.9449398853278224, hamiltonian_energy_error = 0.001594190166854137, max_hamiltonian_energy_error = -0.08650250598111642, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9992729488547631, log_density = 1.3006546349059391, hamiltonian_energy = -0.5927764634352993, hamiltonian_energy_error = 0.010965670986889386, max_hamiltonian_energy_error = -0.11645126214198642, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.999676257666574, log_density = 0.5927767729475617, hamiltonian_energy = 0.28575289062862075, hamiltonian_energy_error = 0.0019325841395344545, max_hamiltonian_energy_error = -0.11705292367441467, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9979476803264709, log_density = 1.7925210891987486, hamiltonian_energy = -0.10928183681676895, hamiltonian_energy_error = -0.07768360783697492, max_hamiltonian_energy_error = -0.13198571635140732, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.97071959537978, log_density = -1.0206298501826403, hamiltonian_energy = 1.801223363698059, hamiltonian_energy_error = 0.08227178321133044, max_hamiltonian_energy_error = 0.08227178321133044, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.996801400796681, log_density = -0.08396037493374031, hamiltonian_energy = 2.2364896465927018, hamiltonian_energy_error = -0.0520481099337351, max_hamiltonian_energy_error = -0.09191232049853948, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9694911927122448, log_density = 3.0436119604735428, hamiltonian_energy = 3.4086240660921394, hamiltonian_energy_error = -0.06031793980120659, max_hamiltonian_energy_error = 0.07978951006717194, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9716318980821849, log_density = 1.7755543038845776, hamiltonian_energy = -1.186170392355827, hamiltonian_energy_error = 0.03590554884348918, max_hamiltonian_energy_error = 0.048972297671060705, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9016905293522911, log_density = -0.6089155632316334, hamiltonian_energy = 2.186494356533937, hamiltonian_energy_error = 0.11783365319366323, max_hamiltonian_energy_error = 0.15061225574287196, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9827473883549757, log_density = 1.9562182822665886, hamiltonian_energy = 3.384833272870755, hamiltonian_energy_error = -0.1147016922179458, max_hamiltonian_energy_error = -0.1147016922179458, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9459395299783588, log_density = -0.2387626411400472, hamiltonian_energy = 0.9244750656368197, hamiltonian_energy_error = 0.11766180072433396, max_hamiltonian_energy_error = 0.11766180072433396, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9927357306418334, log_density = 0.8693244500187074, hamiltonian_energy = 3.345922898860599, hamiltonian_energy_error = -0.09766416442459613, max_hamiltonian_energy_error = -0.09766416442459613, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7412015077613306, log_density = -4.050256479897611, hamiltonian_energy = 7.417007668700879, hamiltonian_energy_error = 0.5560538443796954, max_hamiltonian_energy_error = 0.5560538443796954, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 2.7189891187341892, hamiltonian_energy = 3.855579673339202, hamiltonian_energy_error = -0.6635960812898007, max_hamiltonian_energy_error = -0.6635960812898007, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9016877678064209, log_density = -0.44821982701695795, hamiltonian_energy = 1.9017328511046496, hamiltonian_energy_error = 0.12309055800282276, max_hamiltonian_energy_error = 0.20781440229153425, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9881391498225427, log_density = -0.8365422730178622, hamiltonian_energy = 2.0979264677455567, hamiltonian_energy_error = 0.053765741105310294, max_hamiltonian_energy_error = -0.20132660408562764, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 0.8004418706636152, hamiltonian_energy = 1.7694685926135794, hamiltonian_energy_error = -0.07615723605084801, max_hamiltonian_energy_error = -0.19661916616394626, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9926509390218226, log_density = 1.5171012269259343, hamiltonian_energy = 3.408241726170412, hamiltonian_energy_error = -0.08668131487401709, max_hamiltonian_energy_error = -0.08668131487401709, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9382492840960344, log_density = -0.018400729185671594, hamiltonian_energy = 2.094519539435741, hamiltonian_energy_error = 0.04569095688338942, max_hamiltonian_energy_error = 0.16201456982391438, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9457917893516304, log_density = 2.5096559743122313, hamiltonian_energy = 1.3312501457513357, hamiltonian_energy_error = -0.06062462734191043, max_hamiltonian_energy_error = 0.13208197828833512, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9713216948412698, log_density = 0.2341445632551311, hamiltonian_energy = 0.879796224430194, hamiltonian_energy_error = 0.0276028088641731, max_hamiltonian_energy_error = 0.08994371977633031, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9963740657647768, log_density = 3.231332059577948, hamiltonian_energy = 0.6263439095100565, hamiltonian_energy_error = -0.08218230305544849, max_hamiltonian_energy_error = -0.08218230305544849, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9615943619405666, log_density = 2.5999551793947546, hamiltonian_energy = -1.1714234813391335, hamiltonian_energy_error = 0.0512572608040911, max_hamiltonian_energy_error = 0.08228073540754233, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9764690887748709, log_density = 1.4547154950681929, hamiltonian_energy = -0.6765995762727522, hamiltonian_energy_error = 0.010744653917383995, max_hamiltonian_energy_error = 0.05055456262099889, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9826493412303492, log_density = 1.6021443444263461, hamiltonian_energy = -0.23761569095296786, hamiltonian_energy_error = -0.03931891097848528, max_hamiltonian_energy_error = 0.044174266192783196, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9565555239281669, log_density = 2.346326929592129, hamiltonian_energy = -0.32643155167394067, hamiltonian_energy_error = 0.02292974921256241, max_hamiltonian_energy_error = 0.08830757856978488, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8323429469981483, log_density = 1.256530406519131, hamiltonian_energy = 1.4647853668953816, hamiltonian_energy_error = 0.09134844898202044, max_hamiltonian_energy_error = 0.2912814887380668, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8813370921352289, log_density = -1.8886429426111473, hamiltonian_energy = 5.424472145809123, hamiltonian_energy_error = 0.2102401558465523, max_hamiltonian_energy_error = 0.34616615983632215, tree_depth = 2, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9902786069838536, log_density = -1.0577248294802715, hamiltonian_energy = 3.608909741844809, hamiltonian_energy_error = -0.07725042587864595, max_hamiltonian_energy_error = -0.3513492797540101, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9910023411917678, log_density = -1.663068989719866, hamiltonian_energy = 4.628394681738488, hamiltonian_energy_error = 0.06839959170147392, max_hamiltonian_energy_error = -0.39378136886475623, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9896781506711659, log_density = -2.628306844062566, hamiltonian_energy = 5.516264553531615, hamiltonian_energy_error = -0.07461465308980131, max_hamiltonian_energy_error = -0.3115681907035972, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9911821589337697, log_density = -1.363122005436848, hamiltonian_energy = 3.571049144280369, hamiltonian_energy_error = 0.0282069521925572, max_hamiltonian_energy_error = -0.23733100887174974, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9501173187318014, log_density = -0.7193579994162995, hamiltonian_energy = 6.084967761057378, hamiltonian_energy_error = -0.073538392943445, max_hamiltonian_energy_error = 0.16417336108296077, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 2.1073668965307917, hamiltonian_energy = 2.1094603463691257, hamiltonian_energy_error = -0.13663413777197064, max_hamiltonian_energy_error = -0.1500173813765553, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8722432199547002, log_density = -1.1093975429566498, hamiltonian_energy = 3.3832089370685514, hamiltonian_energy_error = 0.15119994679117976, max_hamiltonian_energy_error = 0.2375384281509434, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9899389777658595, log_density = -1.0625558711211447, hamiltonian_energy = 5.070232592603413, hamiltonian_energy_error = -0.025175656736737828, max_hamiltonian_energy_error = -0.13887835897139134, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9962519235199353, log_density = 1.0142267159203833, hamiltonian_energy = 1.4925550645498467, hamiltonian_energy_error = -0.08422337256266554, max_hamiltonian_energy_error = -0.09247721733047487, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9707588603454581, log_density = 1.2802538335342373, hamiltonian_energy = 1.0711974892828096, hamiltonian_energy_error = 0.03312976919846644, max_hamiltonian_energy_error = 0.08585503535173222, tree_depth = 4, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9921210212409871, log_density = 1.4230081337919245, hamiltonian_energy = 1.1625803978837927, hamiltonian_energy_error = -0.02514146320047672, max_hamiltonian_energy_error = -0.06751846383108306, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9773811082781335, log_density = 2.7097651716058753, hamiltonian_energy = 0.29269136296222165, hamiltonian_energy_error = -0.03719153465409297, max_hamiltonian_energy_error = -0.061843129961322685, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9716516608832032, log_density = 1.3243356425987134, hamiltonian_energy = -0.4165078517952132, hamiltonian_energy_error = 0.040669006398661, max_hamiltonian_energy_error = 0.06165010776112334, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9350124681986056, log_density = -0.8514566611610057, hamiltonian_energy = 3.645477011566625, hamiltonian_energy_error = 0.07907771894598925, max_hamiltonian_energy_error = 0.1656867627139329, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9793146058144693, log_density = -1.3971787954833683, hamiltonian_energy = 4.667203673824158, hamiltonian_energy_error = 0.09206183558364245, max_hamiltonian_energy_error = -0.2820728177906586, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.989859022232909, log_density = 2.606133938430995, hamiltonian_energy = 1.958279353567864, hamiltonian_energy_error = -0.17940929962845198, max_hamiltonian_energy_error = -0.23718506539102524, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9864335534936245, log_density = 0.8949577367829065, hamiltonian_energy = 0.6986085949325391, hamiltonian_energy_error = 0.011897896456003698, max_hamiltonian_energy_error = 0.05105505302055313, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9862102896941617, log_density = 2.695685693095058, hamiltonian_energy = 0.9296242925415874, hamiltonian_energy_error = 0.005277876240489698, max_hamiltonian_energy_error = 0.038936873225941526, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9991320710300577, log_density = 2.913029368242597, hamiltonian_energy = -2.3308259857630813, hamiltonian_energy_error = -0.00731467318704615, max_hamiltonian_energy_error = -0.021415555812551723, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9596010790021153, log_density = 2.739854055385159, hamiltonian_energy = 0.12427270051941663, hamiltonian_energy_error = -0.03603816207140742, max_hamiltonian_energy_error = 0.10594176821336676, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9566236196857915, log_density = 2.3075660053308074, hamiltonian_energy = -0.5372846789532129, hamiltonian_energy_error = 0.04439243964420614, max_hamiltonian_energy_error = 0.08637620009317404, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9983447277579243, log_density = 1.699351005259011, hamiltonian_energy = 2.6088167785977676, hamiltonian_energy_error = -0.17539823827109213, max_hamiltonian_energy_error = -0.2836693093998539, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9067621834927085, log_density = 1.4277072021027024, hamiltonian_energy = 0.5624367144116851, hamiltonian_energy_error = 0.020999376278722393, max_hamiltonian_energy_error = 0.14903305624731944, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.947476120089177, log_density = 0.7170847143655479, hamiltonian_energy = 1.8660121649124637, hamiltonian_energy_error = 0.0767791334099206, max_hamiltonian_energy_error = 0.1171665841926206, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9792726772664896, log_density = -1.4414810264618119, hamiltonian_energy = 3.2346297694165207, hamiltonian_energy_error = 0.06417909119632537, max_hamiltonian_energy_error = -0.15502008692190916, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9917182061980215, log_density = 0.7984326087907547, hamiltonian_energy = 3.0856877192987895, hamiltonian_energy_error = -0.06435916226128446, max_hamiltonian_energy_error = -0.16946897643029102, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9974086762697237, log_density = 2.0335314922606944, hamiltonian_energy = 0.006029610077876946, hamiltonian_energy_error = -0.061558676989308614, max_hamiltonian_energy_error = -0.078213092236888, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9907029688735077, log_density = 1.1218026591196164, hamiltonian_energy = -0.3686864783654813, hamiltonian_energy_error = 0.02341720480771592, max_hamiltonian_energy_error = -0.025439321639528334, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9824877328607485, log_density = 1.8599627397350602, hamiltonian_energy = 0.8999481737016781, hamiltonian_energy_error = -0.0631750016913104, max_hamiltonian_energy_error = -0.10926788982065361, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9853431420626853, log_density = 2.22623281499051, hamiltonian_energy = -0.16858482050866375, hamiltonian_energy_error = -0.015418723785124877, max_hamiltonian_energy_error = -0.06847468930572487, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9924791051356152, log_density = 1.6098064405862367, hamiltonian_energy = -1.2676887221870574, hamiltonian_energy_error = 0.019324903574271524, max_hamiltonian_energy_error = -0.0211784387768712, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8326478619320513, log_density = 0.9694258787109309, hamiltonian_energy = 2.209348697415949, hamiltonian_energy_error = 0.15094599446761992, max_hamiltonian_energy_error = 0.3458639394044152, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9863237343123197, log_density = 1.9991303025980223, hamiltonian_energy = 0.15366084102012412, hamiltonian_energy_error = -0.009578631625116296, max_hamiltonian_energy_error = -0.14255745946174492, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9352797294162075, log_density = 1.3920809676225971, hamiltonian_energy = 2.110644603257568, hamiltonian_energy_error = 0.007401721611508982, max_hamiltonian_energy_error = 0.1697492813398167, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9995130147180202, log_density = 3.0276053112047396, hamiltonian_energy = -1.0257630979113364, hamiltonian_energy_error = -0.06573911137408006, max_hamiltonian_energy_error = -0.08576510326162146, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9550719952313381, log_density = 2.234053635317789, hamiltonian_energy = -1.0037369988838118, hamiltonian_energy_error = 0.05680896055885776, max_hamiltonian_energy_error = 0.08856743017303992, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8975756339573219, log_density = 1.070629095691606, hamiltonian_energy = 0.8454437893948477, hamiltonian_energy_error = 0.12003595664019429, max_hamiltonian_energy_error = 0.2516913603460851, tree_depth = 3, numerical_error = false, step_size = 0.09296374664453724, nom_step_size = 0.09296374664453724, is_adapt = false)])","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Inspect posterior distribution over hyperparameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"hypers = map(unpack, samples);\nh_l1 = histogram(getindex.(hypers, :l1); label=\"l1\");\nh_l2 = histogram(getindex.(hypers, :l2); label=\"l2\");\nh_s1 = histogram(getindex.(hypers, :s1); label=\"s1\");\nh_s2 = histogram(getindex.(hypers, :s2); label=\"s2\");\nplot(h_l1, h_l2, h_s1, h_s2; layout=(2, 2))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As expected, the sampler converges to the posterior distribution quickly. One could combine this code with that from the previous sections to make predictions under the posterior over the hyperparameters.","category":"page"},{"location":"examples/getting_started/#Conclusion","page":"Getting Started","title":"Conclusion","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you now know how to fit GPs using Stheno.jl, and to investigate their posterior distributions. It's also straightforward to utilise Stheno.jl inside probabilistic programming frameworks like Soss.jl and Turing.jl (see examples folder).","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Stheno.jl","page":"Home","title":"Stheno.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Stheno.jl is a package for probabilistic programming with Gaussian processes.","category":"page"},{"location":"internals/#Interfaces","page":"Internals","title":"Interfaces","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The primary objects in Stheno are some special subtypes of AbstractGP. There are three primary concrete subtypes of AbstractGP:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP: an atomic Gaussian process given by wrapping an AbstractGP.\nCompositeGP: a Gaussian process composed of other WrappedGPs and CompositeGPs, whose properties are determined recursively from the GPs of which it is composed.\nGaussianProcessProbabilisticProgramme / GPPP: a Gaussian process comprising WrappedGPs and CompositeGPs. This is the primary piece of functionality that users should interact with.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This documentation provides the information necessary to understand the internals of Stheno, and to extend it with custom functionality.","category":"page"},{"location":"internals/#AbstractGP","page":"Internals","title":"AbstractGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP and CompositeGP implement the AbstractGPs.jl API. Please refer to the AbstractGPs.jl docs for more info on this.","category":"page"},{"location":"internals/#diag-methods","page":"Internals","title":"diag methods","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It is crucial for pseudo-point methods, and for the computation of marginal statistics at a reasonable scale, to be able to compute the diagonal of a given covariance matrix in linear time in the size of its inputs. This, in turn, necessitates that the diagonal of a given cross-covariance matrix can also be computed efficiently as the evaluation of covariance matrices often rely on the evaluation of cross-covariance matrices. As such, we have the following functions in addition to the AbstractGPs API implemented for WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Function Brief description\nvar(f, x) diag(cov(f, x))\nvar(f, x, x′) diag(cov(f, x, x′))\nvar(f, f′, x, x′) diag(cov(f, f′, x, x′))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The second and third rows of the table only make sense when length(x) == length(x′), of course.","category":"page"},{"location":"internals/#WrappedGP","page":"Internals","title":"WrappedGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"We can construct a WrappedGP in the following manner:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = wrap(GP(m, k), gpc)\n","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"where m is its MeanFunction, k its Kernel. gpc is a GPC object that handles some book-keeping, and is discussed in more depth below.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The AbstractGP interface is implemented for WrappedGPs in terms of the AbstractGP that they wrap. So if you want a particular behaviour, just make sure that the AbstractGP that you wrap has the functionality you want.","category":"page"},{"location":"internals/#Aside:-Example-Kernel-implementation","page":"Internals","title":"Aside: Example Kernel implementation","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It's straightforward to implement a new kernel yourself: simply following the instructions in KernelFunctions.jl and it'll work fine with GPs in Stheno.jl.","category":"page"},{"location":"internals/#GPC","page":"Internals","title":"GPC","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"This book-keeping object doesn't matter from a user's perspective but, unfortunately, we currently expose it to users. Fortunately, it's straightforward to work with. Say you wish to construct a collection of processes:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS WON'T WORK\nf = GP(mf, kf)\ng = GP(mg, kg)\nh = f + g\n# THIS WON'T WORK","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"You should write","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS GOOD. PLEASE DO THIS\ngpc = GPC()\nf = wrap(GP(mf, kf), gpc)\ng = wrap(GP(mg, kg), gpc)\nh = f + g\n# THIS IS GOOD. PLEASE DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The rule is simple: when constructing GPs that you plan to make interact later in your program, construct them using the same gpc object. For example, DON'T do the following:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS BAD. PLEASE DON'T DO THIS\nf = wrap(GP(mf, kf), GPC())\ng = wrap(GP(mg, kg), GPC())\nh = f + g\n# THIS IS BAD. PLEASE DON'T DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The mistake here is to construct a separate GPC object for each GP. Hopefully, the code errors, but might yield incorrect results.","category":"page"},{"location":"internals/#CompositeGP","page":"Internals","title":"CompositeGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"CompositeGPs are constructed as affine transformations of CompositeGPs and GPs. We describe the implemented transformations below.","category":"page"},{"location":"internals/#Addition","page":"Internals","title":"Addition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Given AbstractGPs f and g, we define","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f + g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"to be the CompositeGP sastisfying h(x) = f(x) + g(x) for all x.","category":"page"},{"location":"internals/#Multiplication","page":"Internals","title":"Multiplication","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Multiplication of AbstractGPs is undefined since the product of two Gaussian random variables is not itself Gaussian. However, we can scale an AbstractGP by either a constant or (deterministic) function.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = c * f\nh = sin * f","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"will both work, and produce the result that h(x) = c * f(x) or h(x) = sin(x) * f(x).","category":"page"},{"location":"internals/#Composition","page":"Internals","title":"Composition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f ∘ g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for some deterministic function g is the composition of f with g. i.e. h(x) = f(g(x)).","category":"page"},{"location":"internals/#cross","page":"Internals","title":"cross","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = cross([f, g])","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for WrappedGPs and CompositeGPs f and g. Think of cross as having stacked f and g together, so that you can work with their joint.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"For example, if you wanted to sample jointly from f and g at locations x_f and x_g, you could write something like","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"fg = cross([f, g])\nx_fg = BlockData([x_f, x_g])\nrand(fg(x_fg, 1e-6))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This particular function isn't part of the user-facing API because it isn't generally needed. It is, however, used extensively in the implementation of the GaussianProcessProbabilisticProgramme.","category":"page"},{"location":"internals/#GPPP","page":"Internals","title":"GPPP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The GaussianProcessProbabilisticProgramme is another AbstractGP which enables provides a thin layer of convenience functionality on top of WrappedGPs and CompositeGPs, and is the primary way in which it is intended that users will interact with this package.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP like this","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"is equivalent to manually constructing a GPPP using WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"gpc = GPC()\nf1 = wrap(GP(SEKernel()), gpc)\nf2 = wrap(GP(SEKernel()), gpc)\nf3 = f1 + f2\nf = Stheno.GPPP((f1=f1, f2=f2, f3=f3), gpc)","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"If you take a look at the gaussian_process_probabilistic_programming.jl source, you'll see that it's essentially just the above, and an implementation of the AbstractGPs API on top of a GPPP.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP is a single GP on an extended input domain: (Image: )","category":"page"}]
}
