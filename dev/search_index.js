var documenterSearchIndex = {"docs":
[{"location":"api/#Public-API","page":"API","title":"Public API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = Stheno","category":"page"},{"location":"api/#GPPP","page":"API","title":"GPPP","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Core functionality for working with GPPPs.","category":"page"},{"location":"api/","page":"API","title":"API","text":"@gppp\nGPPPInput\nBlockData\nsplit","category":"page"},{"location":"api/#Stheno.@gppp","page":"API","title":"Stheno.@gppp","text":"@gppp(model_expression)\n\nConstruct a GaussianProcessProbabilisticProgramme (GPPP) from a code snippet.\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx_local = randn(5)\n\nx = BlockData(GPPPInput(:f1, x_local), GPPPInput(:f2, x_local), GPPPInput(:f3, x_local))\n\ny = rand(f(x, 1e-12))\n\nf1, f2, f3 = split(x, y)\n\nisapprox(f1 + f2, f3; rtol=1e-4)\n\n# output\n\ntrue\n\n\n\n\n\n","category":"macro"},{"location":"api/#Stheno.GPPPInput","page":"API","title":"Stheno.GPPPInput","text":"GPPPInput(p, x::AbstractVector)\n\nAn collection of inputs for a GPPP. p indicates which process the vector x should be extracted from. The required type of p is determined by the type of the keys in the GPPP indexed.\n\njulia> x = [1.0, 1.5, 0.3];\n\njulia> v = GPPPInput(:a, x)\n3-element GPPPInput{Symbol, Float64, Vector{Float64}}:\n (:a, 1.0)\n (:a, 1.5)\n (:a, 0.3)\n\njulia> v isa AbstractVector{Tuple{Symbol, Float64}}\ntrue\n\njulia> v == map(x_ -> (:a, x_), x)\ntrue\n\n\n\n\n\n","category":"type"},{"location":"api/#Stheno.BlockData","page":"API","title":"Stheno.BlockData","text":"BlockData{T, TV<:AbstractVector{T}, TX<:AbstractVector{TV}} <: AbstractVector{T}\n\nA strictly ordered collection of AbstractVectors, representing a ragged array of data.\n\nVery useful when working with GPPPs. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\n# Specify a `BlockData` set that can be used to index into\n# the `f2` and `f3` processes in `f`.\nx = BlockData(\n    GPPPInput(:f2, randn(4)),\n    GPPPINput(:f3, randn(3)),\n)\n\n# Index into `f` at the input.\nf(x)\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.split","page":"API","title":"Base.split","text":"Base.split(x::BlockData, Y::AbstractVecOrMat)\n\nConvenience functionality to make working with the output of operations on GPPPs easier. Splits up the rows of Y according to the sizes of the data in x.\n\njulia> Y = vcat(randn(5, 3), randn(4, 3));\n\njulia> x = BlockData(randn(5), randn(4));\n\njulia> Y1, Y2 = split(x, Y);\n\njulia> Y1 == Y[1:5, :]\ntrue\n\njulia> Y2 == Y[6:end, :]\ntrue\n\nWorks with any BlockData, so blocks can e.g. be GPPPInputs. This is particularly helpful for working with the output from rand and marginals from a GPPP indexed at BlockData. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = BlockData(GPPPInput(:f2, randn(3)), GPPPInput(:f3, randn(4)))\ny = rand(f(x))\ny2, y3 = split(x, y)\n\nFunctionality also works with any AbstractVector.\n\n\n\n\n\n","category":"function"},{"location":"api/#Building-GPPPs","page":"API","title":"Building GPPPs","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"If in doubt about what any of these transformations can do, play around with them!","category":"page"},{"location":"api/","page":"API","title":"API","text":"+\n*\nstretch\nperiodic\nshift\nselect","category":"page"},{"location":"api/#Base.:+","page":"API","title":"Base.:+","text":"+(fa::AbstractGP, fb::AbstractGP)\n\nProduces an AbstractGP f satisfying f(x) = fa(x) + fb(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.:*","page":"API","title":"Base.:*","text":"*(f, g::AbstractGP)\n\nProduce an AbstractGP h satisfying to h(x) = f(x) * g(x), for some deterministic function f.\n\nIf f isa Real, then h(x) = f * g(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.stretch","page":"API","title":"Stheno.stretch","text":"stretch(f::AbstractGP, l::Union{AbstractVecOrMat{<:Real}, Real})\n\nThis is the primary mechanism by which to introduce length scales to your programme.\n\nIf l isa Real or l isa AbstractMatrix{<:Real}, stretch(f, l)(x) == f(l * x) for any input x. In the l isa Real case, this is equivalent to scaling the length scale by 1 / l.\n\nl isa AbstractVector{<:Real} is equivalent to stretch(f, Diagonal(l)).\n\nEquivalent to f ∘ Stretch(l).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.periodic","page":"API","title":"Stheno.periodic","text":"periodic(g::AbstractGP, f::Real)\n\nProduce an AbstractGP with period f.\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.shift","page":"API","title":"Stheno.shift","text":"shift(f::AbstractGP, a::Real)\nshift(f::AbstractGP, a::AbstractVector{<:Real})\n\nReturns the GP g given by g(x) = f(x - a)\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.select","page":"API","title":"Stheno.select","text":"select(f::AbstractGP, idx)\n\nSelect the dimensions of the input to f given by idx.\n\n\n\n\n\n","category":"function"},{"location":"input_types/#Input-Types","page":"Input Types","title":"Input Types","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Stheno enables the user to handle any type of input domain they wish and provides a common API that users must implement when considering a new way of representing input data to ensure that the package knows how to handle them appropriately.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"This interface has now been adopted throughout the JuliaGaussianProcesses ecosystem.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Discussed below is this interface's core assumptions, a detailed account of a couple of important concrete input types.","category":"page"},{"location":"input_types/#The-Central-Assumption","page":"Input Types","title":"The Central Assumption","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"The central assumption made in all user-facing and internal functions is this: when a collection of inputs are required, they subtype AbstractVector. For example, x isa AbstractVector when indexing into a GP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f(x, σ²)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"or computing the covariance matrix associated with a kernel:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"kernelmatrix(SqExponentialKernel(), x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When computing the cross-covariance matrix between two GPs","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"cov(f, g, x_f, x_g)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_f and x_g must be AbstractVectors. All other operations involving collections of inputs have the same restrictions. Always AbstractVectors.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"For example, this means that when handling multi-dimensional inputs stored in a Matrix they must be wrapped so that the package knows to treat them as a vector — more on this in below in D-dimensional Euclidean Spaces.","category":"page"},{"location":"input_types/#Dimensional-Euclidean-Space","page":"Input Types","title":"1-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When constructing a GP whose domain is the real-line, for example when using a GP to solve some kind of time-series problem, it is sufficient to work with Vector{<:Real}s of inputs. As such, the following is completely valid:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"using Stheno: GPC\nf = wrap(GP(SqExponentialKernel()), GPC())\nx = randn(10)\nf(x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"It is also possible to work with other AbstractArrays that represent a vector of 1-dimensional points, e.g.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = range(-5.0, 5.0; length=100)\nf(x)","category":"page"},{"location":"input_types/#D-Dimensional-Euclidean-Space","page":"Input Types","title":"D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Many applications of interest involve more than a single input-dimension, such as spatio-temporal modeling or Machine Learning tasks. For these cases, we provide ColVecs <: AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"X_data = randn(5, 100)\nX = ColVecs(X_data)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"tells Stheno that it should treat each column of X_data as a vector-valued input. Phrased differently, X is an AbstractVector{T} where T <: Vector{<:Real}, which stores its elements in memory as a dense matrix. This approach has the advantage of making it completely explicit how Stheno treats a matrix of data, and also simplifies quite a bit of the internal machinery, as all vectors of inputs can be assumed to be a subtype of AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If, on the other hand, each row of X_data corresponds to a vector-valued input, use RowVecs(X_data).","category":"page"},{"location":"input_types/#Structure-in-D-Dimensional-Euclidean-Space","page":"Input Types","title":"Structure in D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Consider a rectilinear grid of points in D-dimensional Euclidean space. Such grids of points can be represented in a more memory-efficient manner than can arbitrarily locate sets of points. Moreover, this structure can be exploited to accelerate inference for certain types of problems dramatically. Other such examples exist e.g., uniform grids in N-dimensions, and can be exploited to more efficiently represent input data and to accelerate inference.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Work to exploit these kinds of structures is on-going at the time of writing and will be documented before merging.","category":"page"},{"location":"input_types/#GPPPInput-and-BlockData","page":"Input Types","title":"GPPPInput and BlockData","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"A GPPPInput is a special kind of AbstractVector, specifically designed for GPPPs. Given a GPPP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"a GPPPInput like","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_ = randn(5)\nx = GPPPInput(:f3, x_)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"applied to f","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"fx = f(x, 0.1)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"constructs a FiniteGP comprising f3 at x_. GPPPInput(:f2, x_) and GPPPInput(:f1, x_) are the analogues for f1 and f2.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If you wish to refer to multiple processes in f at the same time, use a BlockData. For example","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = BlockData(GPPPInput(:f2, x_), GPPPInput(:f3, x_))","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"would pull out a 10-dimensional FiniteGP, the first 5 dimensions being f2 at x_, the last 5 dimensions being f3 at x_.","category":"page"},{"location":"kernel_design/#Kernel-Design","page":"Kernel Design","title":"Kernel Design","text":"","category":"section"},{"location":"kernel_design/","page":"Kernel Design","title":"Kernel Design","text":"Please refer to KernelFunctions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"EditURL = \"https://github.com/JuliaGaussianProcesses/Stheno.jl/blob/master/examples/getting_started/script.jl\"","category":"page"},{"location":"examples/getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Here we document how to do some basic stuff, including learning and inference in kernel parameters, with Stheno.jl. To do this, we make use of a variety of packages from the Julia ecosystem:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl to perform Bayesian inference in our model parameters,\nOptim.jl for point-estimates of our model parameters,\nParameterHandling.jl to make it easy to work with our model's parameters, and to ensure that it plays nicely with Optim and AdvancedHMC,\nZygote.jl to compute gradients.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This guide assumes that you know roughly what's going on conceptually with GPs. If you're new to Gaussian processes, an excellent introduction can be found in either this video lecture or this one.","category":"page"},{"location":"examples/getting_started/#Exact-Inference-in-a-GP-in-2-Minutes","page":"Getting Started","title":"Exact Inference in a GP in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This is only a slightly more interesting version of the first example on the README. It's slightly more interesting in that we give the kernels some learnable parameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Import the packages we'll need for this bit of the demo.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AbstractGPs\nusing LinearAlgebra\nusing Stheno\nusing Plots","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Short length-scale and small variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l1 = 0.4\ns1 = 0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Long length-scale and larger variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l2 = 5.0\ns2 = 1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Specify a GaussianProcessProbabilisticProgramme object, which is itself a GP built from other GPs.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f = @gppp let\n    f1 = s1 * stretch(GP(Matern52Kernel()), 1 / l1)\n    f2 = s2 * stretch(GP(SEKernel()), 1 / l2)\n    f3 = f1 + f2\nend;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Generate a sample from f3, one of the processes in f, at some random input locations. Add some iid observation noise, with zero-mean and variance 0.02.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"const x = GPPPInput(:f3, collect(range(-5.0, 5.0; length=100)));\nσ²_n = 0.02;\nfx = f(x, σ²_n);\nconst y = rand(fx);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Compute the log marginal likelihood of this observation, just because we can.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"logpdf(fx, y)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"24.959263959437102","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"fx should be thought of as \"f at x\", and is just as a multivariate Normal distribution, with zero mean and covariance matrix","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"heatmap(cov(f, x) + σ²_n * I)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As such samples can be drawn from it, and the log probability any particular value under it can be computed, in the same way that you would an MvNormal from Distributions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can visualise x and y with Plots.jl","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"plt = plot();\nscatter!(plt, x.x, y; color=:red, label=\"\");\ndisplay(plt)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"It's straightforward to compute the posterior over f:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior = posterior(fx, y);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior is another GP, the posterior over f given noisy observations y at inputs x.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The plotting recipes from AbstractGPs.jl can be utilised to easily print whichever component of the GPPP is needed.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"x_plot = range(-7.0, 7.0; length=1000);\nxp = GPPPInput(:f3, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp);\n    ribbon_scale=3, label=\"\", color=:blue, fillalpha=0.2, linewidth=2,\n)\nplot!(\n    plt, x_plot, rand(f_posterior(xp, 1e-9), 10);\n    samples=10, markersize=1, alpha=0.3, label=\"\", color=:blue,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you've built a simple GP probabilistic programme, performed inference in it, and looked at the posterior. We've only looked at one component of it though – we could look at others. Consider f2:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"xp2 = GPPPInput(:f2, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp2);\n    ribbon_scale=3, label=\"\", color=:red, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior(xp2, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:red,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-NelderMead-in-2-Minutes","page":"Getting Started","title":"Fit a GP with NelderMead in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Stheno.jl is slightly unusual in that it declines to provide a fit or train function. Why is this? In short, because there's really no need – the ecosystem now contains everything that is needed to easily do this yourself. By declining to insist on an interface, Stheno.jl is able to interact with a wide array of tools, that you can use in whichever way you please.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Optim requires that you provide an objective function with a single Vector{<:Real} parameter for most of its optimisers. We'll use ParameterHandling.jl to build one of these in a way that doesn't involve manually writing code to convert between a structured, human-readable, representation of our parameters (in a NamedTuple) and a Vector{Float64}.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"First, we'll put the model from before into a function:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function build_model(θ::NamedTuple)\n    return @gppp let\n        f1 = θ.s1 * stretch(GP(SEKernel()), 1 / θ.l1)\n        f2 = θ.s2 * stretch(GP(SEKernel()), 1 / θ.l2)\n        f3 = f1 + f2\n    end\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"build_model (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've assumed that the parameters will be provided as a NamedTuple, so let's build one and check that the model can be constructed:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\n\nθ = (\n    # Short length-scale and small variance.\n    l1 = positive(0.4),\n    s1 = positive(0.2),\n\n    # Long length-scale and larger variance.\n    l2 = positive(5.0),\n    s2 = positive(1.0),\n\n    # Observation noise variance -- we'll be learning this as well.\n    s_noise = positive(0.1),\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(l1 = ParameterHandling.Positive{Float64, typeof(exp), Float64}(-0.9162907691270586, exp, 1.4901161193847656e-8), s1 = ParameterHandling.Positive{Float64, typeof(exp), Float64}(-1.6094379869399091, exp, 1.4901161193847656e-8), l2 = ParameterHandling.Positive{Float64, typeof(exp), Float64}(1.6094379094538682, exp, 1.4901161193847656e-8), s2 = ParameterHandling.Positive{Float64, typeof(exp), Float64}(-1.490116130486996e-8, exp, 1.4901161193847656e-8), s_noise = ParameterHandling.Positive{Float64, typeof(exp), Float64}(-2.3025852420056685, exp, 1.4901161193847656e-8))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've used ParameterHandling.jls positive constraint to ensure that all of the parameters remain positive during optimisation. Note that there's no magic here, and Optim knows nothing about positive. Rather, ParameterHandling knows how to make sure that Optim will optimise the log of the parameters which we want to be positive.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can make this happen with the following:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\nusing ParameterHandling: value, flatten\n\nθ_flat_init, unflatten = flatten(θ);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Concrete types used for clarity only.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"unpack = value ∘ unflatten;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now easily define a function which accepts the flat form of the parameters, and return the negative log marginal likelihood (nlml) of the parameters θ:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function nlml(θ::NamedTuple)\n    f = build_model(θ)\n    return -logpdf(f(x, θ.s_noise + 1e-6), y)\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"nlml (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can use any gradient-free optimisation technique from Optim.jl to find the parameters whose negative log marginal likelihood is locally minimal:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Optim\nresults = Optim.optimize(\n    nlml ∘ unpack,\n    θ_flat_init + randn(length(θ_flat_init)),\n    NelderMead(),\n)\nθ_opt = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Note that we just added some noise to the initial values to make the optimisation more interesting.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now use this to construct the posterior GP and look at the posterior in comparison to the true posterior with the known hyperparameters","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_opt = build_model(θ_opt);\nf_posterior_opt = posterior(f_opt(x, θ_opt.s_noise), y);\nms_opt = marginals(f_posterior_opt(xp));\nplot!(\n    plt, x_plot, mean.(ms_opt);\n    ribbon=3std.(ms_opt), label=\"\", color=:green, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_opt(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:green,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Of course, the exact posterior has not been recovered because the exact hyperparameters cannot be expected to be recovered given a finite amount of data over a finite width window.","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-BFGS-in-2-minutes","page":"Getting Started","title":"Fit a GP with BFGS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The BFGS algorithm is generally the preferred choice when optimising the hyperparameters of fairly simple GPs. It requires access to the gradient of our nlml function, which can be straightforwardly obtained via reverse-mode algorithmic differentiation, which is provided by Zygote.jl:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Zygote: gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This will probably take a while to get going as Zygote needs to compile.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"results = Optim.optimize(\n    nlml ∘ unpack,\n    θ->gradient(nlml ∘ unpack, θ)[1],\n    θ_flat_init + 0.1 * randn(length(θ_flat_init)),\n    BFGS(),\n    Optim.Options(\n        show_trace=true,\n    );\n    inplace=false,\n)\nθ_bfgs = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Iter     Function value   Gradient norm \n     0     7.765481e+00     3.232975e+01\n * time: 0.0229799747467041\n     1    -6.644279e+00     2.670776e+01\n * time: 1.454280138015747\n     2    -1.148873e+01     2.187356e+01\n * time: 1.46510910987854\n     3    -1.782281e+01     2.240460e+01\n * time: 1.475888967514038\n     4    -1.841884e+01     2.066581e+01\n * time: 1.4864630699157715\n     5    -2.020905e+01     1.804618e+01\n * time: 1.5156950950622559\n     6    -2.422919e+01     4.400148e+00\n * time: 1.5229570865631104\n     7    -2.464387e+01     3.949573e+00\n * time: 1.529879093170166\n     8    -2.500061e+01     3.152311e+00\n * time: 1.536863088607788\n     9    -2.528120e+01     9.744887e-01\n * time: 1.543828010559082\n    10    -2.530566e+01     2.497774e-01\n * time: 1.5506911277770996\n    11    -2.530849e+01     1.689528e-01\n * time: 1.557589054107666\n    12    -2.530998e+01     2.605887e-02\n * time: 1.5646090507507324\n    13    -2.530999e+01     2.074287e-03\n * time: 1.5715370178222656\n    14    -2.530999e+01     2.215829e-05\n * time: 1.5929811000823975\n    15    -2.530999e+01     1.656877e-07\n * time: 1.6033179759979248\n    16    -2.530999e+01     1.694038e-09\n * time: 1.610219955444336\n","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Once more visualising the results:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_bfgs = build_model(θ_bfgs);\nf_posterior_bfgs = posterior(f_bfgs(x, θ_bfgs.s_noise), y);\nms_bfgs = marginals(f_posterior_bfgs(xp));\nplot!(\n    plt, x_plot, mean.(ms_bfgs);\n    ribbon=3std.(ms_bfgs), label=\"\", color=:orange, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_bfgs(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:orange,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Notice that the two optimisers produce (almost) indistinguishable results.","category":"page"},{"location":"examples/getting_started/#Inference-with-NUTS-in-2-minutes","page":"Getting Started","title":"Inference with NUTS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl provides a state-of-the-art implementation of the No-U-Turns sampler, which we can use to perform approximate Bayesian inference in the hyperparameters of the GP. This is slightly longer than the previous examples, but it's all set up associated with AdvancedHMC, which is literally a copy-paste from that package's README:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AdvancedHMC, Zygote","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define the log marginal joint density function and its gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"ℓπ(θ_flat) = -nlml(unpack(θ_flat)) - 0.5 * sum(abs2, θ_flat)\nfunction ∂ℓπ∂θ(θ_flat)\n    lml, back = Zygote.pullback(ℓπ, θ_flat)\n    ∂θ_flat = first(back(1.0))\n    return lml, ∂θ_flat\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"∂ℓπ∂θ (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Sampling parameter settings","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"n_samples, n_adapts = 500, 20","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(500, 20)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perturb the initialisation a little bit.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"θ0_flat = θ_flat_init + 0.1 * randn(length(θ_flat_init))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"5-element Vector{Float64}:\n -1.0200405457276678\n -1.6145434423636371\n  1.6482729068620532\n -0.10104922073234601\n -2.322131537883171","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define metric space, Hamiltonian, sampling method and adaptor","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"metric = DiagEuclideanMetric(5)\nh = Hamiltonian(metric, ℓπ, ∂ℓπ∂θ)\nint = Leapfrog(find_good_eps(h, θ0_flat))\nprop = NUTS{MultinomialTS, GeneralisedNoUTurn}(int)\nadaptor = StanHMCAdaptor(n_adapts, Preconditioner(metric), NesterovDualAveraging(0.8, int.ϵ))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"StanHMCAdaptor(\n    pc=WelfordVar,\n    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.4),\n    init_buffer=75, term_buffer=50, window_size=25,\n    state=window(76, -30), window_splits()\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perform inference.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"samples, stats = sample(h, prop, θ0_flat, n_samples, adaptor, n_adapts; progress=true)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"([[-1.0200405457276678, -1.6145434423636371, 1.6482729068620532, -0.10104922073234601, -2.322131537883171], [-1.0200405457276678, -1.6145434423636371, 1.6482729068620532, -0.10104922073234601, -2.322131537883171], [-1.0158638245072782, -1.6756566827103345, 1.5593240565221953, -0.07842370542086828, -2.538437436793571], [-1.413641855370681, -1.0362154134277528, 0.8914843092723265, -1.1799808073098386, -4.2688074619714484], [-1.1459288729274586, -1.1991531574359753, 0.8199779272635119, -1.1961240412882745, -3.9277971016128213], [-0.9020468434715064, -1.6584571764908047, -0.004776974673398299, -0.5961222627569561, -3.790997518779424], [-0.7484461137079463, -1.2932246443689253, 1.0649011693291364, -0.3628941299494929, -4.055124189113977], [-1.253587872863731, -1.9473269212722175, 0.9974084567325323, -1.083894294812572, -3.7822638358711838], [-0.834488456388411, -1.5510299678917316, 0.6114689620207548, -0.8773095071891525, -3.694003046126363], [-1.3482684068845572, -1.605729506827179, 0.9385142013550845, -0.1566904137855077, -3.931353596298056], [-1.1979654560596007, -1.9849488596317342, 0.1782378600021947, -1.071532389886894, -3.967528637066491], [-1.1375332224603152, -1.4909652596108256, 1.4205168726848438, -0.5162587389589207, -3.739508048265976], [-0.6720524955809366, -1.185670926667054, 1.4286813278256771, -0.5248309877383646, -3.3827769578982467], [-1.1112239196414624, -1.479533338192853, 2.0141038082057126, -0.5083687927712394, -3.911261485915386], [-0.8869228337996007, -1.5581601261813296, 1.3718950863355348, -0.19551583637453473, -3.7869745887330604], [-0.7492546909115838, -1.3330036566235695, 0.48363179708279014, -0.8354510310159688, -3.3481967752938475], [-1.524857467292581, -1.7053167864106498, 0.5503534252908876, -0.8498873998976748, -3.8570077944535486], [-1.6494841037127306, -1.9111946254404613, 0.08226522031344805, -0.786849980302185, -3.8810556203709403], [-1.6494841037127306, -1.9111946254404613, 0.08226522031344805, -0.786849980302185, -3.8810556203709403], [-0.9040915003430772, -1.6380098620341093, 0.024078115783517234, -0.7648485510999733, -3.8648491637830764], [-1.1420573006683752, -1.5549457916907607, 0.3687456231041503, -1.1172936217774887, -3.453640911870288], [-1.321060901925362, -1.8054970294982837, 0.5240746295437293, -0.59642225269436, -4.275170321632705], [-1.4928895479918705, -1.4632244060580306, 0.6640328142276781, -0.6360269547952195, -3.957830859669752], [-1.3440447399229525, -1.748516801454243, 0.8863361221006308, -0.8419571140398099, -3.991107475342227], [-1.3163522445919484, -1.7329809856929024, 0.5861433198960342, -0.40242700884364124, -4.104197029252964], [-1.1142942582771547, -1.346391003292935, 0.5169319064895574, -0.7520399136343211, -3.8675570044350027], [-0.9480849988081391, -1.58383609386817, 1.332595302746977, -0.9206028999322853, -3.6868320184789236], [-0.9085740302154366, -1.5469127089235046, 1.5992113274024635, 0.4551186388349157, -3.7051038821947664], [-1.2028673212180607, -1.5259114791257484, 1.7583910908702398, 0.028064583664720533, -4.105891422219811], [-1.421695894209731, -1.7147973034166861, 1.5863608365630462, -0.6799996204165841, -3.8442020869699407], [-0.9780126723611616, -1.2543230930554168, 0.8419961155015805, -0.30943317805539966, -3.7301243354659004], [-0.8407815816714788, -1.3057968547519574, 0.5463795720147347, -0.4724856852128413, -3.867734066757548], [-1.0309537457132123, -0.9589744942761212, 0.7404773461558161, -0.4996309256568036, -3.705050825896297], [-0.7072056303733223, -1.4082549864053109, 1.2812593416445286, -0.800465953116819, -3.8475016535548443], [-1.2346390776377394, -1.683934036919113, 1.5998329962553817, 0.06601963408783526, -3.923721358267873], [-0.7670170608149567, -0.9035281022617666, 0.8847428960750443, -1.4295664613675918, -4.006537864250519], [-0.58633147574511, -1.046168963439938, 0.6657965689290481, -1.4847888638239881, -4.13325940240238], [-1.4399935119678242, -1.9178325773485119, 0.46656875017610194, 0.12958939059666974, -4.225274807119805], [-1.5710313970828682, -1.88407105679725, 0.7976605092402584, -0.11051474264499789, -3.6119508122215533], [-1.167023568544837, -1.477501386098509, 0.0003359117253166899, -1.2540977310067958, -4.2278220569355645], [-0.8186905445896309, -1.3200409955017014, -0.13254595221906518, -0.5579605172006324, -3.5187960638328226], [-0.9918471732191096, -1.5957122796083532, 0.628200457195219, -1.0512441981660035, -3.981447542922545], [-0.9918471732191096, -1.5957122796083532, 0.628200457195219, -1.0512441981660035, -3.981447542922545], [-1.0842947243504013, -1.2308747215164846, 0.5217338883440761, -0.32417751951434876, -3.8506873599885294], [-1.0053538350287026, -1.9744766590378555, 1.085350691644848, -0.9084142568868423, -3.725979376378219], [-1.306171940888582, -1.1440760806480728, 1.0544016455183585, -0.3587372508212424, -3.9463594861205515], [-0.7920328344530523, -1.7843617630620532, 1.7125256532374165, -0.8469895429861505, -3.5504608458587477], [-1.4114558086802487, -1.581855374601537, 1.521563561439319, -0.8410602969452708, -3.8474477077169014], [-1.387715475063596, -1.430434723601144, 1.9664966934475785, -0.6175557978110973, -4.249448904980454], [-1.0752483235453505, -1.7100293821537957, 1.2614598821635186, -0.4300622260055701, -3.601157372300845], [-1.3328532720897006, -1.4945411964030637, 0.5691072397139882, -0.04748498434469925, -4.09662834591948], [-0.8508704166244039, -1.078717718762844, 2.1137948071208386, -0.45541616116655975, -4.0300123462336215], [-1.00936880289939, -1.602905061012025, 2.1891262374422125, -0.70792116958529, -3.7879777173761076], [-1.1264307109437666, -1.44649788869136, 1.4786136062680098, -0.36938141577700984, -4.06083478188183], [-0.9634333181904768, -1.691783191845641, 1.556268704381171, -0.21638856752698982, -4.125961517456925], [-1.0766745882987, -1.3895235689261627, 1.4963919810763993, -0.13028759254693786, -3.6528284666379154], [-0.9668648078441836, -1.418083517107391, 1.9103465691314323, -0.22863103195811563, -4.09833855159308], [-1.0759341653458505, -1.4491461085856574, 1.165024500431085, -0.175806816789958, -4.086384670095183], [-1.1948085494717107, -1.5464974730982997, 1.1092915851402754, -0.22792451239752343, -4.025246712202105], [-1.1015268655052985, -1.3711553132773107, 0.9894757593908522, -0.4711390481075544, -3.520990981694636], [-0.9525479363851942, -1.9785962612162395, 0.7110624938811705, -0.9591974789606644, -3.924231247868048], [-1.0835404480751418, -1.419503065714617, 0.6433942927812064, -0.3713159848041455, -3.4359828641261703], [-0.7091365595621544, -1.4649296336407363, 0.6516806657880171, -0.6510378745442249, -3.3787644887739887], [-1.0075679776694162, -1.5089792290679365, 0.4344418111385778, -0.4257523736076285, -4.129288047156292], [-1.0748289310029067, -1.5685639309392152, 0.74679465561262, -1.1898564823071045, -3.873158881853033], [-0.8083707117550617, -1.4222935880164718, 0.9339480368134235, -0.003259090147622129, -3.864846257498567], [-0.9097999659759283, -1.1576372593941544, 1.7486308536883797, -0.4939133311455071, -3.820260259545995], [-0.6542903102473964, -0.7754630546537981, 1.9443096937433186, -0.38877698543928435, -3.830423180140194], [-0.6920939297047924, -1.0617821131473106, 1.147633219926362, -0.5819871641616573, -3.730078901619163], [-0.6646204342893421, -1.240334557443889, 1.1553735209177403, -0.6083486557244288, -3.80841895730376], [-0.9967348067468704, -0.7891301042637915, 0.9299191813397285, -0.6067754664744734, -4.006320469649863], [-0.6389693613797001, -1.506807896227072, 1.3391666189521132, -0.775992104841262, -3.619926673846174], [-0.8485618492389796, -1.5725858763849536, 1.3829819690748926, -0.8535961466423833, -3.6244532396776132], [-1.2296518190946082, -1.6914142155914618, 1.361429746787366, -0.8917732479532291, -3.7800675902706677], [-0.9604642225699446, -1.3789882437484298, 0.33066028369264355, -0.369057159198921, -3.9763896729227777], [-0.9270749327575531, -1.3761068961902367, 0.6675355007145729, -0.5439153500654968, -3.969269816914219], [-0.7554558274257652, -1.1168073888948093, 0.8045937000572218, -0.6432834762136113, -3.7363718570800604], [-0.7607947288005417, -1.1926169026153637, 0.7196205174301731, -0.7114116675863869, -3.5716887636748296], [-0.8890515671841631, -1.400704827805166, 0.24435699004788938, -0.5593724488153904, -3.9204475164121924], [-1.0412038922991176, -1.6191729488274855, 0.44194430554770064, -0.29149199874631204, -3.482611559478286], [-1.1910350475594713, -1.3418915510963059, 1.0483738649324397, -0.9879322060470642, -4.069725862324021], [-1.1014834043186361, -1.6418976884600964, 0.4206902166910007, -0.5363258412763754, -3.8273834540388196], [-1.0889667953636415, -1.7310630004923537, 0.3687438380797443, -0.7738401908126141, -3.4346023516427895], [-1.2364754163945146, -1.1625753603689382, 0.673162161874333, -0.9340108205460446, -3.996617940815086], [-0.8338918808590783, -1.7158856335665014, 0.5359312402909133, -1.1309880572733522, -3.526650883035445], [-0.7789062381237631, -1.1166745733607903, 1.1043947713791489, -0.7946168182145795, -4.189256840559403], [-0.7653753173841173, -0.8540642844446625, 0.958706646181621, -0.6845226836673243, -3.554718356056962], [-0.6501241049493615, -1.201512007708995, 1.1048707224296619, -0.9221888119849234, -3.9012359041277014], [-1.8359824583856912, -1.825219972559668, 0.5258343896943628, -0.6185664145359033, -4.080637677898915], [-0.9247029993397009, -1.43331049804424, 1.1434057519232466, -0.556438633082196, -3.756282464012845], [-1.1448540748651683, -1.5810206242940033, 1.3412807543897953, -0.41102728752044904, -3.9458513606704253], [-1.0434961689970983, -1.998135230957499, -0.39587308692013173, -1.0455992566594932, -3.807745470314759], [-0.5692593038324144, -0.9367210404734649, 1.2768843470456543, -1.4665568388652894, -3.874058648116614], [-1.2018683007482365, -1.631898267978201, 1.3100415130885938, -1.01679242026851, -3.8163110627901276], [-0.9985523839860342, -1.6920653712013591, 1.3651239167894174, -0.9673682704867366, -3.834222193123358], [-1.1280840422324319, -1.5398964729829017, 1.5287733333462945, -0.9281864364144027, -3.7012232321633314], [-0.9042075704170515, -1.3792155609702068, 0.6005129830619982, -0.7066601283623487, -3.9815067428696516], [-0.5817098983562278, -0.9081408682271812, 0.8337229193190853, -0.9535425894450004, -3.566891320135237], [-0.8652012964769155, -1.1629590087621513, 0.5292249169003644, -0.6748450810880327, -3.926340819133309], [-1.1789112132509654, -1.572987969448526, 0.5435150872749194, -0.27238866601186096, -3.6721297648609004], [-1.146815204172895, -1.5470264573169332, 0.6499063687527237, -0.32742222553674033, -3.6799932173555794], [-1.1030388686715726, -1.419545586190912, 0.6191642537807717, -0.818888379570221, -3.4876798645019904], [-0.9865368563174983, -1.1400055049466105, 0.8646002306055988, -0.8943740986655301, -3.740453435566088], [-0.8168361820170068, -1.5487277394917738, 0.938465013395999, -0.3154277534442552, -3.7960230148860754], [-1.4156293612920585, -1.6562860291140673, 0.9905564507044875, -1.2317455877013301, -3.950836420987426], [-1.191189201293791, -1.4627316663377252, 1.2939884322164588, -1.0198667375084085, -3.922310382810507], [-0.8756589256678555, -1.3013259967469883, 0.766767985218072, -0.6545521627549316, -3.727154251961427], [-0.9173486111761234, -1.4582945568618726, 0.8670222623454652, -0.48371951342855923, -3.8702513846427453], [-1.046286459086387, -1.2341624835567477, 0.9444293104381849, -0.49023507240949316, -3.7267258805563452], [-0.7177895577728426, -1.1497765032583673, 1.0570060020215313, -0.5399289513285614, -3.6219190160283383], [-0.6262380732647613, -1.1900244548127386, 1.0558587828838688, -0.5224385943424111, -3.537848797198477], [-0.36035985762565675, -1.1810296724910583, 1.0962003190874237, -0.35247358425056763, -3.493601425345419], [-0.35764981988013, -1.2552122663239074, 1.6021413399100448, 0.05246522207491029, -3.4530434554694147], [-0.8314285831851184, -1.4347788328802107, 1.806920641853946, -0.1049869308630186, -3.7576656744789636], [-1.1676157502871647, -1.6866690640059085, 0.443106104561263, -0.7083348961251758, -3.7243420730824943], [-1.1406786301632983, -1.5277312567831227, 0.22133053499873276, -0.9690851068228626, -3.952075777765997], [-1.1642751155031839, -1.2434487239985133, -0.0066585255855420855, -0.9326338011387686, -4.115059955917365], [-1.3153003246067134, -2.0026138508573412, 0.3452626172635902, -0.7960324594395266, -3.614704623013422], [-1.1139079096738196, -1.9353030372480926, -0.09344270055195725, -0.8491471501350413, -3.5615082717148274], [-0.36875570008135544, -1.6678216256027332, 1.3514319775207846, -0.548000340492009, -3.438842592891274], [-1.0346113407604782, -0.7478325010424781, 1.403549094005571, -0.3310690172433806, -3.8099122347137304], [-1.208891281215988, -1.7963234588158097, 1.6747694377410414, -0.3266563385434932, -3.551742945742704], [-1.291882290807727, -1.6406056502764415, 1.5765149580893483, 0.019627193789159586, -4.083886391355272], [-0.6886668771485644, -1.2285737538816348, 1.5362184350790633, -0.6184540493804489, -3.7141283716436533], [-1.13048063944127, -1.3114456473912581, 0.6763444543900019, -0.9991680221798915, -4.003453646697828], [-0.925591166443867, -1.527962788315574, 0.9692535268494838, -0.6984466646315015, -3.8928343421558766], [-1.2023834027472688, -1.4464655163286255, 1.373346817591811, -0.7469633834083393, -3.8448071318915793], [-1.1003582164243855, -1.4773734250999426, 1.3982477144954004, -0.711343549728107, -3.820788151130098], [-0.727755920967968, -1.7655620832639574, 1.0907283995914514, -0.3834120680869698, -3.41399238944515], [-0.8429462244079142, -1.8584305094834088, 1.1420631104859156, -0.323755947962525, -3.6051413316029177], [-0.9888386669306256, -1.5683215252531113, 0.7792065438582746, -0.7479620751293049, -3.461157101230561], [-0.9878942664247975, -1.8012948422373738, 0.649578577601227, -0.6779380751533416, -3.948729409537387], [-0.9061681021508278, -1.6463740594655605, 0.46264697003763183, -0.7704778722081163, -3.468866855657925], [-0.7658149932162075, -1.1336084464518825, 0.4352465280551951, -0.9793207891528529, -3.7796161429925235], [-1.1748258108872334, -1.6878922481524399, 0.6373806828787859, -1.010997225656528, -3.984687847730216], [-0.9954441115925432, -1.605220159803362, 0.35858484080794395, -0.5267512060652079, -3.8421227082584664], [-1.1860410613663546, -2.037860199570343, 0.217807917539633, -1.166357937540096, -3.9907142633368795], [-1.2460670089826582, -1.8592108190144394, 0.32730404257578244, -1.0556417275377932, -3.6923560047373845], [-0.9804960785175918, -1.6535343812478782, 0.5455463022815608, -0.4013952398801421, -3.721664438109629], [-1.3396329009340888, -1.6508940841401125, 0.826360918766379, -0.965955870091237, -4.106752153771302], [-1.017344483696525, -1.516155465466717, 0.3784354627620025, -0.30237335660430126, -3.715917884204373], [-1.1837911444307445, -1.481309388191468, 0.8576326349046528, -1.0538803059914736, -3.7907295947321504], [-1.0024948389993316, -1.6108063278773121, 0.8803244633312078, -0.2298342957321432, -3.8889813435414453], [-1.3727806311514, -1.714594681254163, 0.919333207291357, -0.6488317736477568, -3.842304776171945], [-1.4297712003025378, -1.8753700106042592, 0.19552148818586254, -0.5777872348097517, -4.066152964538851], [-0.9507898744173748, -1.6026028381405288, 0.521535010528473, -1.3111968401442606, -3.499902940207744], [-1.212493656288285, -1.5430444721546883, 0.4253413924905009, -0.46455404011277424, -4.194131068209137], [-1.2688610637340947, -1.69169623469688, 1.098513630354843, -0.8946707227401953, -3.704649615165504], [-0.8401042739508974, -1.172971723787261, 1.63144207905747, -0.4235065201072552, -3.769117322875557], [-1.1526519214398558, -1.8200356391281163, 0.9642421777440977, -0.8562076461522573, -3.7680146932188614], [-1.1566703047893254, -1.4887854077598386, 1.3231779442748957, -0.31565986605225793, -3.6882678367802417], [-1.2414874517856889, -1.8639002399319415, 0.4184435773862428, -0.3976543423476719, -4.070884986794664], [-0.8813273973500374, -1.6411118705166559, 0.5481516833779478, -0.606663992303617, -3.984823587326953], [-0.826819253325053, -1.3251941771071443, 0.7121445005232913, -0.38684688369369885, -3.557824431987128], [-1.2850092592262907, -1.7526981630821286, 0.956127492567673, -0.8551536588680246, -4.132521850761755], [-1.4751408642669883, -1.4118426935528945, 0.49036306773304517, -0.9062014903120401, -4.070872087348511], [-1.3803678471824552, -1.708274582185284, 0.09947243042934709, -1.127575618454721, -4.164551845696095], [-1.079729080322123, -1.5746293996936467, 0.7512492341377238, -0.4659311439620482, -3.770888394237244], [-1.064898559300663, -1.4607630834215986, 0.8284289662788122, -0.3714989025499669, -3.932171278433253], [-1.1922085119016153, -1.6965330609589084, 0.9852786248662788, -0.09582197677776066, -3.8474565166594448], [-1.0084365685110166, -1.6291455554258842, 0.845861822051611, -0.13294136338077214, -3.635823242572015], [-1.0816007249761375, -1.552734137613332, 0.7881847217691315, -0.18470307214861148, -3.9816768575640755], [-0.8900168948662058, -1.3727437565819034, 1.032397628420798, -0.692395890431727, -3.701758483590484], [-0.7886630993400923, -1.4801407023293196, 1.369903318062416, -0.5571822958530948, -3.68753994385236], [-0.9265870315129929, -1.1518345001712686, 1.1194306249863653, -0.6211630362459625, -3.773480214059715], [-1.1679818184622128, -1.6636131324846413, 0.7286796734558159, -0.5115667402649631, -3.725295813455267], [-1.1960946201610319, -1.5985538350669506, 0.7630652363761493, -0.4678972469962064, -4.053357152535566], [-0.9502207698916398, -1.4719617083100733, -0.04934383376159722, -1.0000410061297613, -3.887368006031207], [-0.8676713216793167, -1.3586094834238722, 2.087318940453295, -0.23169689537354277, -3.6584228019198295], [-1.109294398292282, -1.891261603114791, 0.9873695124502272, -0.07714790007489723, -3.7958175705209785], [-1.2518728957980239, -1.5226930091113045, 0.7777546721018122, 0.22985810854999505, -3.8972195773191793], [-1.5602486741063677, -1.8955069928091879, 1.1142076630931352, -0.46583586636817903, -3.988862525848683], [-0.6731671129911847, -1.2535849106748744, 0.6493466709312865, -0.04296341024627849, -3.7359781943413966], [-0.7896157355889031, -1.157481639789652, 1.1642391452427763, -0.1730055843924045, -3.6220581234535065], [-1.1928158877137776, -1.7378034347827347, 1.0665660803530115, -0.31655888738979754, -4.046675713557285], [-1.2637258446388548, -1.679666763152372, 0.9081219996340888, -0.27889551594104095, -3.9920180933293827], [-0.9478526819234998, -1.5088945344296285, 0.7341760296177186, -0.9269921784028234, -3.7844981351556934], [-1.0315851904730227, -1.585576572129155, 1.4143742789896911, -0.23526197056124024, -3.763526773355643], [-0.9739270407324173, -1.2996376835178005, 1.190045221253495, -1.4447336117658016, -4.015430809748679], [-1.0945957947113811, -1.4897380513475562, 1.306106842820762, -1.000674022702886, -3.8674905097731513], [-0.9602439344704744, -1.4309197334936123, 1.4670218291667227, -0.22284192560693336, -3.8911189025051076], [-1.1415810834286022, -1.3042956751519732, 1.384663754431769, -0.18017122396518398, -3.9551500184043893], [-0.9096900667511034, -1.4690165581078172, 1.2977857241477624, -0.8406635540698082, -3.608582856829964], [-1.105071665665559, -1.258687376268497, 1.1522918456515168, -0.5443076202899959, -3.8449239938663378], [-1.0640348090928105, -1.6345904867240788, 1.7838951176929565, -0.4224425215551555, -3.7857576185249635], [-0.9713622767174991, -1.271756850770362, 1.1299166483316285, -0.0882433468426724, -3.9991017831775064], [-1.1285119418933391, -1.6139644085919767, 1.4403373038672962, 0.2201852485343002, -3.721167706121891], [-1.1495652046393563, -1.6627295876955337, 1.933824340204469, 0.6972546060106795, -3.708283415302362], [-1.0782731976425377, -1.6174274166841711, 1.1629491233958595, -0.7020379611684106, -3.9227334719857017], [-1.0120512243913897, -1.4548314871095727, 1.1489407168499999, -0.7173836173350376, -3.8252242063442083], [-0.9467374782978752, -1.465864805127273, 1.6007895214562367, 0.10967740908506204, -3.937889715816431], [-1.0394270042795837, -1.4157873428724743, 0.6436782344189904, -1.2391170627310097, -3.9232713099846745], [-0.6080623653432756, -1.1822931869911653, 1.0785645969801918, -0.7409847500186606, -3.7205096210204784], [-0.9247045001391573, -1.205365211063869, 1.5383782619186368, -1.4030812703743358, -3.810484287424111], [-0.874309477092092, -1.5709251695951334, 0.7947931350758484, -0.5186588764874959, -3.7875915307302384], [-1.2192037780422396, -1.4388892761282257, 0.5516436038939504, -0.7924898554680339, -3.9290407974533514], [-1.2102401397071552, -1.258871567279055, 1.0719044141321348, -0.9742585608686072, -4.235605572483953], [-1.1270415256081086, -1.4638611133411787, 1.029235356575446, -1.0821758699830586, -4.164912925025857], [-0.7849258232869676, -1.266806206398919, 0.7032590462978374, -1.3649303137789888, -3.5520096576155518], [-0.5485868168653163, -0.9461857586153027, 0.5776883198671663, -1.4299014837434845, -3.6882485912110576], [-0.7772073234831576, -1.1528667172901021, 0.37760937839738873, -1.3578641381059056, -3.9652011565982566], [-0.6969822286078459, -1.1354196034380957, 1.5774498173792801, 0.4373288925540393, -3.801487030856849], [-1.2259077749189604, -1.6331612900765973, 1.1213166036940716, -1.485514513553114, -3.8170671104480545], [-1.2661431003898231, -1.6804402856313894, 0.9072455734888828, -1.3375088815525118, -3.911915136328213], [-1.4212631007749863, -1.6769932337852431, 0.9302397093851527, -1.3549107333946695, -3.9788763485029626], [-0.5430542544176967, -1.3842438671985973, 0.7195558885704697, -0.6002260947827072, -3.740654875444323], [-0.5512319709103676, -1.6358347848680754, 0.8023226726773811, -0.6299931635133246, -3.6956483077687174], [-1.5573291986978592, -1.6626045998421877, 1.1460540935164336, -0.4734421048746997, -4.4278127919144925], [-1.6282851467851982, -1.697102094886353, 1.3887411187568215, 0.5208303211213394, -3.7935042231750304], [-1.2425874005333646, -1.3436099478263923, 1.8365417691277384, 0.42583622096785056, -3.865596160449139], [-0.8758266279490796, -1.49931820332732, 1.1938240405668725, -0.4842244456822883, -3.9546536078696466], [-0.9510675858281353, -1.155361258169449, 1.8977167409100706, -0.7877437891174524, -3.8800831285609356], [-1.0359586785683499, -1.4420104834733023, 1.4879112155913192, -0.3855073761603846, -4.0891654123228385], [-1.0969056631883602, -1.6690299928220038, 1.2505728393819502, -0.664167062806291, -3.6255560570511625], [-1.0471113241192904, -1.1844467301055184, 1.0263449531551962, -0.6502425310798661, -4.088303709544433], [-0.9604910063835325, -1.44861271857995, 1.3254842285174078, -0.5092746086778127, -3.7371288599861145], [-0.9897824323164172, -1.3138252378291178, 1.504603359188592, -0.8404241885890086, -3.7324144131114068], [-0.7210529071970022, -1.2687870885297798, 1.055499840985321, -0.16643979767072228, -3.766414419626822], [-1.2933115138132532, -1.914226765885274, 0.649243793691818, -0.4398264297842823, -4.037602336964759], [-1.331791721940533, -1.6114288921039681, 0.19277030557842256, -0.5593479996592874, -3.6400192887605645], [-1.3355125583831777, -1.7732969388076554, 0.9944882581239763, -0.2758330783993667, -3.9896030806297427], [-1.3585698702817546, -1.5086202004081106, 0.9312923230442559, -0.30759474846381707, -3.8898695710474414], [-1.5649457648078682, -1.7583211663910465, 1.084307834412402, -0.46262411578426155, -3.970094330316651], [-1.367704009093102, -1.5426698122718483, 0.9558737623223516, -0.536562538603023, -3.9471306405074955], [-1.313737131412905, -1.6379020044721804, 0.5242934238941657, -0.9831483053897684, -4.086470314018536], [-0.8773546095712098, -1.6561825750679908, 0.8476993306524063, -0.29564701331823157, -3.691084578610485], [-0.5030692380471351, -1.0048292768176923, 0.38600870537389664, -2.6207507662757363, -3.5105777959252964], [-1.4011276935660375, -2.2523030069674883, 0.9521902665489668, 0.2944990046791452, -3.959005127395719], [-1.281647869464234, -2.196843322079029, 0.9547117970252946, 0.14897014999179536, -3.982378197573445], [-0.7714802700159148, -0.9759654530997957, 0.423164867499439, -0.08895597299843906, -3.872156408992442], [-0.9127421777820299, -1.6934937437452433, 0.5891117827609802, -0.8429993772583111, -3.719661321872806], [-1.2039213971553873, -1.768398975888932, 0.6166252129843436, -0.4617895226242217, -3.8043711179019244], [-0.9467692369467375, -1.5846394210621775, 0.44292099061090073, -0.5018434432198788, -3.7746442263043796], [-1.1729796791486737, -1.3839171188069446, 0.753182038016026, -0.6300219903812424, -3.811753709420006], [-1.2399047766950648, -1.5490089811336558, 0.32362086524899136, -0.6704424150100053, -3.543645664727455], [-0.8446054444202513, -1.3964237911117288, 0.8810865806651051, -0.9454263093660968, -4.180602865572643], [-0.46540313176392817, -1.319370883661474, 0.679151017642943, -1.1181705969600375, -3.6698276063005517], [-1.5860240157057388, -1.6860053069515115, 0.5722616561104816, -0.7212240045754521, -4.104881817470536], [-1.2718083550113706, -2.1042940016928484, 0.3934749625323084, -0.4854635284317338, -3.6269477882459724], [-1.3391849467659782, -1.4637394087257134, 0.01437509469723312, -1.2741626357902527, -4.181078335155805], [-1.5316410906493632, -2.3740302221034884, 0.854246951163226, -0.20550147938934635, -3.8505731969498984], [-1.3639977419441125, -2.0721502117033332, 0.7673529534333019, -0.25564796029106585, -3.7959676577443497], [-1.2356430653901942, -2.1067475554603385, 0.6564614957614663, -0.3082526399305357, -3.871436726922373], [-0.9768318149441415, -1.319859180737662, 1.01400410538916, -0.28395587611568135, -3.8241468392092717], [-1.0522378994813122, -1.3729370024180532, 0.9467912248240359, -0.24039327378511588, -3.916272287242954], [-0.9093590293420599, -1.5885496655526121, 0.4838654427254134, -0.6141679097309324, -3.6419309375157805], [-1.0400522568015524, -1.5212009942746019, 0.5359825468247119, -0.7796335632674941, -3.674857413364534], [-1.3663796941578639, -1.925993284113536, 0.6187605132547528, 0.1578929301714777, -3.9836428031229962], [-1.5173111198944362, -1.8086604887251674, 1.0355655072279917, 0.3557033519503178, -4.027488803600862], [-0.7071642523490581, -0.9962477216106793, 2.411037338334542, -0.14336013774705617, -3.3784044282042145], [-1.3284308357188555, -1.5904257455601578, 1.4667680903731228, -0.8684122524789457, -3.8171516549344657], [-1.3605302437721003, -1.4815990466612372, 1.354132066928096, -0.8250785300790846, -3.736870046099187], [-1.1111892505469425, -1.2916216331562076, 1.174902607471783, -0.7483297728020112, -3.771196469673757], [-0.7041257263649163, -1.3600473546466345, 1.1463377261295356, -0.7667061763229477, -3.7902986422741405], [-1.3333970521470955, -1.6583406741242148, 1.3794455545020143, -0.7804570517232916, -4.020828232121324], [-1.0155162515443124, -1.1294738940745748, -0.25127379095900265, -0.8621835090474537, -4.0067387794660805], [-1.3772994422261151, -1.9976901081131047, 1.4004668333858623, -0.24142120322695443, -3.575544834094], [-1.0864161723133663, -1.087093699993641, 1.762088222293673, -0.001226572435344393, -4.172307035726651], [-1.2821269314862995, -1.0925690411973314, 1.5736941587160165, -0.07390526492020864, -4.19876472804353], [-1.219246637900339, -1.5581359909873713, 1.5607611042430372, 0.019904110627303927, -3.8562511171155895], [-1.1441188865131415, -1.7259492720017942, 1.5901290563527293, -0.1327545587536279, -3.744072073096071], [-1.1263891057019624, -1.8363047148476663, 1.6395375806137134, -0.14631947990017477, -3.652547349649884], [-0.8642447631627946, -1.867659394554309, 1.6498960550683313, 0.11135357995976451, -3.718857134803604], [-1.3607306913822717, -1.7091198237927396, 1.6960215150507703, 0.14871547368921337, -4.037290642216065], [-1.2279706932529897, -1.5405447952175864, 1.3087878230376773, 0.154258459456533, -4.238504457387797], [-1.3662161961539172, -1.5175220875966435, 1.4269610430084718, 0.17140728018513338, -3.9382675123847535], [-0.7437730914830212, -1.2274951950133546, 0.9874105812880631, -0.8441595429686709, -3.923188185443492], [-1.1170524646219366, -1.6091577486405615, 0.5299000400490886, -0.8200723242984074, -3.736629319201068], [-1.696798777521876, -2.0137971195913575, 0.6081450057657355, -0.45451046624674335, -3.9332232692752096], [-1.696798777521876, -2.0137971195913575, 0.6081450057657355, -0.45451046624674335, -3.9332232692752096], [-1.7728244285113899, -2.041147111890721, 0.6368301884301412, -0.5506462230338669, -3.9875722054553733], [-0.6264754981827032, -1.012528882325637, 0.6065097311711403, -0.7175521451125348, -3.6519412544537295], [-1.1822906639161819, -1.665213094261558, 0.35364178781849853, -0.4442620423961193, -3.9635782221952622], [-1.1780612043309238, -1.5610367239515022, 0.5639387759567696, -0.43893584102770816, -3.843433454503206], [-0.9331811600467599, -1.3030184310179704, 1.5494174945612345, -0.8331399350165389, -3.762506979298615], [-1.1327175001212182, -1.9422688272760025, 0.039428036687108606, -0.8238340532965097, -3.938186445266327], [-0.9808612263522234, -1.472890815279061, 0.3233955950351023, -0.8962306177939209, -4.019088302734932], [-1.04395833882956, -1.8249340999600654, 1.1683767698393808, -0.6263830793271908, -3.87937800408795], [-1.3843931978218622, -1.7016717788146127, 0.8633826710208988, -0.808580884253223, -3.631725663723236], [-0.782973339887376, -1.5213277726455767, 0.1935086477111969, -0.6964842555590212, -3.9896743982149756], [-1.1558776272754363, -1.8781582932800505, 0.49120043429004806, -0.4193398594616786, -3.830101948983891], [-1.2074397262026821, -1.8363945318963033, 0.4981687291460042, -0.6242024462208962, -3.7975250122776454], [-1.0659535994571152, -1.3875253193392525, 0.3263659813224672, -0.20039915307728678, -3.8492806272610047], [-1.4055294026981593, -1.9691701243729933, 0.34539989677110405, -1.2356354671604999, -3.874864838293667], [-0.9763428536540474, -1.7146308267139592, 0.681359907419561, -0.22839542078145025, -3.6879301913521774], [-0.8917547217472573, -1.6734780864954608, 0.7593757501593714, -0.18798134542065226, -3.567665111223898], [-0.8873058872757075, -1.5862040936488209, 0.615083741966597, -0.9177082630849712, -3.7427227712273963], [-1.498009080457109, -1.7404423947142136, 0.47006255308261813, -0.561518501731683, -3.8313089022479754], [-1.552048992670409, -1.849316474070032, 0.7176682796404787, -0.3944017333616175, -4.180341999874972], [-0.925746170974838, -1.1784450169744316, 1.365107653188172, -0.5380575212807355, -3.723349712984496], [-0.9000559704344535, -1.385299722831158, 1.7384121141697577, -0.5347652749299234, -3.7752382118675922], [-1.2770722515898871, -1.6660144537019133, 0.7901463771877727, 0.04582950685571165, -3.850214315809656], [-0.8392605348777392, -1.797732812185566, 0.5662066194687279, -0.5703685263911726, -3.7434118700927566], [-0.976718537575133, -1.0168722692773777, 0.4016992980217767, -1.1123542652697669, -3.8154897354500683], [-1.2985754846612907, -1.6850588875815997, 0.46285778402940686, -0.6080726409364327, -3.66059502304418], [-0.7798279543313218, -1.2501231085644064, 0.21411143798775395, -1.269783467886947, -3.9280242564722476], [-0.9011161495319338, -1.6468577632709156, 0.1747574469189063, -1.5601787979639667, -3.547709156381405], [-0.9342309138178988, -1.6834603142665903, 0.14521813548549528, -1.5935216773623422, -3.4745322378472143], [-1.3210675452284208, -1.4678632877980637, 0.38264180458505015, -0.2809190741305074, -3.9908429370572236], [-1.3840237142810783, -1.538565748963292, 0.2907902587329369, -0.5109796840931204, -3.7550655683542455], [-1.5261781293572847, -1.6914067534217743, 0.21182796980204602, -0.6502157412819309, -4.041150498964059], [-0.8148392690382988, -1.5374665880073102, 0.5994526898150179, -0.8587895440353002, -3.6720624247588196], [-3.290237640633817, -2.763585699377024, -0.500454568919705, -0.7064796316105559, -4.099167172093914], [-0.8125213295659097, -2.2212731027488264, -0.24526628556518906, -0.9599920049003481, -3.8224951164272345], [-1.3575668535014744, -2.250864323494501, -0.9535033584215018, -0.8457334260678833, -3.692687221301113], [-0.2193414632988558, -1.3281787424067815, -0.5450901001580029, -0.7072851161482611, -3.6096059415481845], [1.070924314520455, -0.9349292176265014, -1.4454403296000973, -2.0002522576398563, -3.9141232138196336], [0.8463980795746731, -0.27071118642026715, -0.6614131103205557, -0.8813938277504213, -3.7944093804848777], [1.3104250260114902, -0.5893112078116044, -0.8103868633340042, -1.2994201890902697, -3.726878621007643], [1.2852227090794155, -0.4938623689247424, -0.8890775045053495, -1.3166423254582886, -3.714631341135668], [1.4462386924753494, -0.7123601846683031, -0.8633846795478015, -1.5676250390189472, -3.9381343117366217], [1.0335270733488184, -0.5662945188770264, -1.2628667391550348, -1.5428914711624693, -3.8141155566775473], [0.3582195768879437, -0.7391513650037328, -1.0956340262191757, -1.617822041325476, -3.736459204792877], [0.11008398904422323, -0.9029949444243996, -1.0066212820716454, -1.7547332716549728, -3.8032877249513817], [0.19295646425366753, -1.3064818142932566, -1.3823044606497945, -1.6064751549476297, -4.144461368274739], [0.8728890624496242, 0.12409551013881426, -0.8984893290224711, -1.6408494267957077, -3.764356019796978], [0.8085656818729104, -0.688789679543949, -1.0007538574824903, -1.1371017743286487, -3.901180368254519], [0.8660913195969381, -0.5880132126129769, -0.8241855073117301, -1.2870844165065636, -4.008101672841166], [0.9273039927019582, -1.0672920518045663, -1.0934109565329606, -1.5791690969150776, -3.6553507445200877], [0.9233024286957401, -1.045929707282245, -1.0784727860006122, -1.5852592696437855, -3.579280023249531], [2.276898226993843, 0.07883054391835076, -0.8871009573854023, -1.4827357505164218, -3.7954346119014817], [1.5035884098408485, 0.5293718966503723, -0.8525978413820122, -1.297461741694239, -3.7221389172865793], [0.26770886163036, -0.8680004581418678, -0.7833637681646617, -1.2709737222367785, -3.550389364137347], [0.28343588131111425, -1.061541762765978, -1.0439743005853508, -1.4025979836345361, -4.12421207844735], [0.43527185435939886, -0.5767437866585889, -0.7932689691490059, -1.3546999046596417, -3.36064300460487], [0.561258887556641, -0.6794834319484606, -0.47384123811730366, -0.997586533304242, -3.8302707261166424], [0.7421325175320439, -0.8789830712322619, -0.9600838529434176, -1.220709847854239, -3.55784721939366], [0.5121874768090774, -1.1474349072395529, -0.5826687458343087, -1.2937712700233983, -3.6825974164217965], [0.29525568229189464, -0.9413730417022617, -1.2404802021164951, -1.6068680718117514, -4.038951909786706], [0.5631647255260646, -0.7269912748238582, -1.1533591232299711, -1.754726028942945, -3.6074346131088975], [0.9741818561920373, -0.3110252756400707, -1.1857867371647999, -1.285496374675116, -3.951679099478313], [1.208862509668271, -0.6046871546419811, -1.0423105903920105, -1.8455453927761836, -3.7970590335940546], [0.20418737967034875, -0.8551302764758927, -0.8345549183036673, -1.2651862379191798, -3.7825993186941007], [0.9649162447519867, 0.023937057110037283, -1.7581724232113563, -2.0469000774221504, -3.887321360987115], [0.9775900453608023, -0.26678426677755995, -1.8109186687104417, -1.6921579918248901, -4.168942023270792], [1.5510205373534038, -0.5866397307636037, -0.7542460368944501, -0.833959555454489, -3.6145185762541066], [0.8218955123375695, 0.06588576347004825, -1.5039515461142896, -1.7538175193388912, -3.7502813058395836], [1.1772562590359466, -0.6251690622447454, -0.8420278811527218, -1.3985688396412261, -3.9348584639151873], [0.6380099313131058, -0.4737919139762925, -1.0666835903540155, -1.5073758339646661, -3.917451907335846], [0.7403738480255388, -0.4676116066637513, -1.1990571342247849, -1.8260966620364742, -3.80082621897675], [0.5828008417294247, -0.887693625971768, -1.000830966631793, -1.8845795993456156, -3.851296911869364], [0.5277273012040683, -0.5463817841719869, -1.0016849944994761, -1.895761472331214, -3.9435645838915794], [0.28435705033336617, -0.6522461939127949, -1.0150602689989152, -1.528771092217445, -3.5868127548628324], [0.5200682889693993, -0.6338963948680023, -1.0167976756349668, -1.4432440757213878, -3.5316121520047523], [0.8780407176757137, -1.2426080949195235, -1.4865745175285552, -1.6503136647793688, -4.1535221118424825], [1.7450886906112941, 0.1087874149446868, -0.6091649262994617, -1.2748708687760149, -3.52325657787007], [1.9009303843499366, 0.4074797316357886, -0.908210867214792, -1.2328754245204157, -4.100069706114135], [1.0867478435122593, -0.9553801143095333, -1.2244752584601915, -1.733179134526306, -3.994884976979317], [0.6548283226330186, -0.7316211335823458, -1.0824712384998525, -1.4751006139566454, -3.668763171119899], [1.137311360421478, -0.48082976359456253, -0.770510799235641, -1.5822215982486203, -3.765466665911147], [1.375968226655143, -0.5499029905534455, -0.9230176556988486, -1.410556095761562, -3.6055923099452203], [1.7546751532435385, -0.1360251625207779, -1.138527520248682, -1.524519521000462, -3.846201246663244], [0.9597074110035102, -0.0694414779503576, -0.7806013761433979, -1.4638709377089876, -3.701955452462281], [0.3581122681982073, -0.44228651720290213, -0.8601337771381607, -1.070311229520629, -3.8911587853715552], [0.4214498450275984, -0.2215150013055843, -0.7454831481074216, -1.05600088642236, -3.6735618770374083], [0.5509258437644877, -0.9771959725678085, -0.920228090616943, -1.3025078925402669, -3.923758488604403], [0.7535020266641639, -0.9408195887269336, -1.2093517757690322, -1.7504783050505999, -4.0615885562144465], [1.533219984467967, -0.16749203347791922, -0.9051118665379488, -1.2566726074027355, -3.621993766831347], [1.7501518041700725, -0.11407249791283303, -1.2474297135770485, -1.6216424380451313, -3.9441880318366085], [1.9680246403989865, -0.636255627137802, -0.8378143130770641, -1.7816501409287993, -3.998557680114202], [2.08347199745498, -0.47880641624515397, -1.0807652753102657, -1.8569934888491662, -3.954378155020842], [1.355895477963926, -0.12125728915922108, -1.6442914637995854, -1.363595002382828, -3.9793693533422303], [1.600167277398996, -0.0659164835437183, -1.4568922258665784, -1.6783846343084043, -3.6435476169122603], [1.520269878120795, -0.1629176913309029, -0.9447882662897928, -1.7069419402599058, -3.9304182384759243], [1.3306822825770217, -0.14220820308361123, -0.8622064800067297, -1.7626120217120191, -4.074247690491806], [1.2109133915806893, -0.895050032423133, -0.8798606585795667, -1.622492265597222, -3.8972448839124225], [1.2997268993280946, -0.6466262295160654, -1.1183286879272845, -1.4472494360504293, -3.7488962682453124], [1.7766337242985542, 0.0669994728908889, -1.0597166757994696, -1.4228454532431447, -3.8761221076012475], [1.8233886970693858, 0.29813264228848485, -1.0554917600754474, -1.6898832176878955, -3.7197189400655417], [1.7819140984734545, 0.5366253890127551, -0.8484600000061737, -1.284873497964879, -3.6559897294225876], [2.2520439830574355, 0.4252874275829412, -1.0507093101891591, -1.5255320473658611, -4.0020880652681745], [2.305169608766049, 0.25024181672346835, -0.7422115457998553, -1.506799756654023, -3.5444359956161264], [2.298943314813653, 0.18422113759714412, -0.7228086851090689, -1.4955636757501853, -3.696400057664089], [1.4783249167512922, 0.5525973004590201, -1.268765473418056, -1.5162973335397085, -3.9472410373174776], [1.6402765778989492, 0.12730472724738723, -0.9925053866894209, -1.5365516240146624, -3.8690736010637408], [1.82020103684581, -0.657676812236602, -1.150777979588492, -1.5491749383581384, -3.943454604061271], [1.706308984508226, -0.5355481716742976, -1.1889389611859196, -1.5343605538597749, -3.9776092888393473], [1.1572859160196451, -0.8937213182559278, -0.9954796699707839, -1.4488445281425824, -3.746995437453959], [1.8445910979867255, -0.3816065375340352, -0.9762179415412399, -1.6530776069993387, -3.772800853933994], [1.7286589255341172, -0.36741563189259574, -1.088075437133274, -1.5978251038314792, -3.9357547952715732], [1.6298361832591848, -0.29823162993457214, -1.2713745289330864, -1.7290027992540267, -4.23390899814818], [1.361340756168566, -0.9134946947897765, -0.862243100753856, -1.3144099734422308, -3.4369282716873997], [1.0958046426487713, -0.7029067956588094, -0.8582945149450874, -1.478553250269665, -3.781880807566487], [1.6212755011146485, -0.7259328780099801, -1.4651867314795914, -1.400697782847472, -3.6524022041986686], [0.4112020966228274, -0.5087985725399967, -1.009395170886097, -1.3936126398011346, -3.7000953866191537], [0.13773115989675985, -0.5135534088366563, -1.2057486632029717, -1.601010695934759, -3.9245849330909324], [0.5109802697630107, -0.7523949457948261, -1.1837423331456733, -1.789068404671803, -3.8183154755271445], [0.304672218274522, -0.7413249627776906, -1.2366373714925811, -1.6823020616504787, -3.8461894894575845], [0.8894619941670212, -0.25021515483038775, -1.197377682760126, -1.623066200176846, -3.8849172207113885], [0.3266221081448048, -1.1091537904444597, -1.1133150630349289, -1.7486731299050506, -3.8467823930404026], [0.8610153221738002, -0.5023159967027986, -0.7583192340737224, -1.3240297057934254, -3.7179387477816443], [0.7931422938750025, -0.6728348710274186, -0.9456738527963501, -1.7587393557075326, -3.565160122033143], [0.7846295761621145, -0.9077149392793105, -0.8352740846422775, -1.6731272526090697, -3.8110952842439936], [1.2017568859340284, -0.7668360047507681, -1.0498836991781129, -1.27800981105101, -3.8296543419301563], [0.9970622278709734, -0.7713797465441427, -0.6696201377775408, -1.2194233964592147, -3.8199211256528685], [1.0030322062940142, -1.2863928218594851, -0.6435954442277613, -0.8579549892359979, -3.629278298114847], [0.2683572867291624, -1.7975802684810183, -1.2486363599662584, -1.4081408076063435, -3.8445180054938666], [2.7418431407116133, 0.615198671484993, -0.5623012712771832, -1.2200064292894643, -3.8703544427200045], [1.6129088215222263, -0.21436954366888605, -0.5767437964523213, -1.365781756974859, -3.8551480021032547], [1.5058507676556587, -0.019713411818474386, -0.7126068971324103, -1.149427236147544, -3.8434389845217596], [1.6877553904897904, 0.16814363499573598, -1.0654954829941743, -1.844923985110286, -3.718939050856793], [0.963741276725073, -0.20475077272211695, -0.9914693075202169, -1.483340559850232, -3.943082398036021], [0.9152956092932937, -0.3110648174938392, -0.864099108305829, -1.6847622211970839, -3.896289272301403], [0.9184823250626113, 0.10886822994602371, -0.7803130325040593, -1.4002900907765983, -3.680036858659571], [1.1634728047785887, -0.7367743613107188, -0.948617904901879, -1.3546948522438331, -4.070584834462196], [1.1875261011400076, -0.9067082700711193, -0.8610938804124069, -1.5258761841788395, -3.786229621520257], [1.4208192706337783, -1.0409445331185792, -0.6911451745579205, -1.655041388318764, -3.902784241147571], [1.4555212978516834, -1.1736711460945457, -0.4347083838170031, -1.484044250236914, -3.5682061791759145], [0.6672322687858808, -0.14445688311191152, -1.1298330807286652, -1.8507223187121256, -3.811175199536964], [1.4943426458029339, 0.04051744804988565, -1.4641651174165695, -1.5276219160232585, -4.036332403069042], [1.6069075487166784, 0.2687714125599542, -1.4074793171641362, -1.6887681438237356, -4.01330253333435], [0.7014073253494449, -1.1681761102777268, -0.8998344333779652, -1.0792661458335062, -3.8053657942944086], [0.7909344953524704, -1.0561226770971706, -0.8782425591335385, -1.6091563894274123, -3.7979600022099076], [0.7670847905449205, -0.6774409120502168, -0.822402108304774, -1.6519818859834094, -3.9909264144022187], [1.1781207799115143, -0.8483524576146624, -0.8303548010866254, -1.5696074345862063, -3.4955800439961777], [0.8289847940844642, -0.6065832535072914, -0.8860580078188034, -1.5309993335192675, -3.7996753505410013], [0.5271378128683966, -0.8875674890209623, -0.7856276262439087, -1.0199384747534344, -3.819277450166598], [0.6195603024246199, -0.8656947473766834, -0.9975305334746617, -1.2036683903072478, -3.8815987259303397], [0.32388952974245777, -0.7884808991913775, -1.3406508584719556, -2.1330351868832067, -3.9380672727391306], [0.45158784240556205, -0.9685018379785076, -0.8445173187898204, -1.7208949406856588, -3.921092053563312], [0.26563531179567224, -0.8491834435723484, -0.9132192051245953, -1.6294713701581445, -3.945877232311947], [0.7168977865191907, -0.7409489619413258, -0.987278914511647, -1.68313213313295, -3.9670247059825807], [0.8291276923840045, -0.7099503518425312, -1.094188459814702, -1.638230379362161, -3.9626540434332043], [0.762659796624965, -0.6777016037630673, -1.1107283360228806, -1.1558941235380842, -3.9750510818251046], [0.7135402536694672, -0.5366661810635716, -0.8137061384197242, -1.2727503762614445, -3.9105490452906357], [0.826141656932838, -0.6757634055728234, -0.899816343925669, -0.9722029719847786, -3.722051692497593], [-0.19593852296511988, -0.5269292342152097, -0.8576761363579861, -1.728555085622725, -3.8752066248866757], [0.8533375474483353, -1.380949960549819, -0.6576778199734832, -1.2048450640814952, -3.816421219534011], [0.9955088288120324, -1.5112949733659231, -0.7718603960641057, -1.0699687522568744, -3.5738238331374195], [1.3230730276096812, 0.17947644886636854, -1.4988543011082307, -1.5670954188175195, -3.836382520887566], [1.3324710192595208, 0.3607025210525918, -1.4864088850278168, -1.8066104286528897, -3.7824199635607667], [1.8893288156431702, 0.8378565984181716, -1.2297072685271297, -1.4614760356004237, -4.171751744136655], [2.092974890831826, 0.6684007032090786, -0.9635325829312202, -1.6337371139313344, -3.58326696391612], [2.100846686855486, 0.659957786293377, -0.8882205598992471, -1.718826416134588, -3.5811966223534766], [1.3677295060562735, 0.5925081109848187, -1.0210792973531055, -0.9412521021216596, -3.549927770882647], [1.5360710141941567, 0.6108126839842651, -1.1830310838903046, -1.4485998859566198, -3.5679682439159617], [1.3663649282739951, 0.16808571250438906, -1.038483021003207, -1.6288206198971051, -3.6045496253171687], [1.2456332380834527, -0.22490521055518312, -1.2654247574594195, -1.398025584128159, -4.160251452238417], [0.6474394998858599, -1.1807658324793955, -1.2587167136330202, -1.3387569478004087, -4.148624759512606], [0.5605972016764298, -1.0919538154223722, -1.0488524565971644, -1.518127613197884, -4.06703118778476], [0.9473810366758428, -0.7853139432546855, -1.0681396621226862, -1.3829120632686336, -3.6777804095566604], [1.4679115992247143, -1.033748265235705, -0.9971576272627559, -1.537089183961892, -4.071229570134693], [1.2788751377919112, -0.40489187729270865, -1.1075104332382, -1.6235397307681008, -3.715581962236058], [1.2313336020512604, -0.6012425967541989, -1.1042366985085974, -1.4668730039666407, -3.5700151019280018], [0.9760093481178553, -0.5028980046615709, -0.6813343307287159, -1.5930210626578976, -3.7886112832887187], [0.576720030732142, -0.6094389812778581, -1.3117612424467928, -1.7961908964542064, -3.8840355939941857], [0.22736976899925657, -0.872814204052502, -1.028084437489274, -1.5146489540708277, -3.835911547183862], [-0.03966540969058635, -0.2743272538514947, -1.2069531719789475, -1.839830995828475, -3.9355118429928133], [0.8600674761760123, -1.1383332456724118, -0.8213053049021366, -1.3620983000895983, -3.9072733299679365], [1.3128502882313826, -0.38902911811383056, -0.9981478604694767, -1.708243041199697, -3.8175728083820735], [1.9398111570976297, 0.16257646068669276, -0.9465100911322931, -1.4916537113675816, -4.026658876258315], [1.658701255258929, -0.14508307813632038, -1.1264289347783605, -1.622791955614442, -3.893573651811819], [1.1319749303197608, -0.19999116538325562, -1.126000380391986, -1.450824560565937, -3.9164637476673656], [0.952137330685674, 0.23119560403877265, -0.7155359876911297, -1.1749467422579727, -3.7061257129592557], [0.9052533077109103, 0.10692775926071592, -0.8182302195861901, -1.1953700953985174, -3.97104850443694], [0.07980518486670493, -0.8331301364446939, -1.2633293561413526, -1.8839316616008475, -3.851102761309557], [0.4182390599702973, -0.9939060093859515, -0.924707849221858, -1.3303828110431222, -3.950313576794436], [0.39380161538089564, -0.14400670535623916, -1.1694102157045614, -1.6743280201654465, -3.8894919274139985], [0.7319025795668973, -0.5268683215700503, -1.3368837750654825, -1.6837670861507021, -3.9516079119665624], [0.4361374563377502, -0.6726153878981035, -1.155311360495551, -1.8365546565175463, -3.934111375471845], [0.7048398343780895, -0.41078907243209406, -1.0738227680693933, -1.3306762237935783, -3.6799265718534753], [0.4826199394313753, -0.8954324397915415, -0.8359251921239867, -1.3482781312525403, -3.9122605381547313], [-0.05730195984601108, -0.9178521457628341, -0.9021455259222374, -1.5532847019943097, -3.81777328334758], [0.33143122202475295, -1.0410818514959617, -1.2254436117780438, -1.7329246541021932, -3.9805879778477684], [0.9577894256585422, -0.19527584802248876, -1.1440954409552369, -1.729630961663255, -3.8450670820775703], [0.6988001102566379, -0.24033173746553627, -1.3258570088666501, -1.78127485990978, -4.117850026626317], [1.1145248143964699, -0.07389257528585202, -1.4355401378998918, -1.5455254665271128, -3.6744275262101564], [0.8623296047028518, 0.08789050955181407, -1.430087180247454, -1.6098276872373227, -4.072623369257652], [1.2492976821951134, -0.8058866818009925, -1.1849279444452516, -1.6199492201419288, -3.751238471747459], [1.476550715598779, -0.4663997449650315, -0.9027768237906018, -1.210807001732276, -3.8777364305240365], [1.2201343202435062, -0.0824184448113987, -0.8136067349155258, -1.5003155480529893, -3.698049861105304], [1.3708277432842666, -0.7884761367330826, -1.0618536368474474, -1.2804555172543948, -3.9417584294737558], [1.3062755128158623, -0.287213391297161, -1.1591014701368143, -1.5034755475945791, -3.473630824786495], [1.0236898391048952, 0.1276513462009227, -1.0571863320199721, -1.511686267971087, -3.80784786970468], [0.40256704711794156, -0.43913450731348613, -1.319793543350653, -1.602945091779462, -3.8301121212239604], [0.8749568764739355, -0.8468443560637073, -0.880822934198148, -1.4036117068648508, -3.8777532852359142], [0.8358152914700888, -0.7574831895932306, -0.8781764050389405, -1.235568874961851, -3.841966617646531], [0.4862769182665821, -0.7446229431310886, -0.8955970849925615, -1.6873716994777022, -3.784411818165245], [0.5438529522569967, -0.30128347760043955, -1.0483768741635897, -1.6359796445721757, -3.9217984069734624], [0.7406454698368405, -0.5554651860468514, -1.2440034492152594, -1.9373632819204294, -3.5644627896001264], [0.7288562601773776, -0.5761716505800835, -1.1756829591018674, -1.3120803341583058, -3.9581242016553118], [1.2527238217937335, -0.14805752940323474, -0.8211703461896458, -1.690851955483976, -3.672625000017052], [1.3692983666547927, -1.0506432094490126, -1.5491321178035695, -1.3227476554736803, -3.8681915298347116], [0.9861482161396887, -0.5788125666361846, -1.0186756219935273, -1.9521405890286885, -3.886090380313793], [1.1519297660021037, -0.9165186077027315, -1.0424999650276305, -1.1684907207528443, -3.8983685092669806], [1.6469761294033025, -0.4716653088255084, -0.9635385101740086, -1.6930076688840379, -3.818474672004129], [0.8529753304817763, -0.340492695351852, -0.5912155511879338, -1.1365148487377252, -3.690697150045506], [0.380583361039291, -0.34470069744561727, -0.9758990891075475, -1.4428826251290243, -4.029722075316273], [0.4207922656582709, -1.0820924249834243, -1.7712178191333579, -1.906693593842892, -3.741874784691183], [0.4369202749436614, -0.7563592529382122, -1.366875458163599, -1.9572147712565156, -3.972517640188974], [0.682898345268745, -0.9620008929776235, -1.2515488498869305, -1.7177314589908779, -3.7259456821548382], [0.4238697277580025, -0.9268613303328963, -1.6447081427197372, -1.789371721968075, -4.172233755541231], [0.6233942825608481, -0.19298269591936995, -1.0839997592054644, -1.9236504279389008, -3.6918452006803975], [0.542722864820903, -0.5268559679978213, -1.243839518909233, -1.309625399879303, -4.084202293633588], [1.16344256136865, -0.23535901158233397, -1.0275393747515955, -1.7381578128708266, -3.5205084971419107], [0.2875713577132923, -0.7116253922533768, -1.8039738785383788, -1.8871006318314674, -3.9618445851031883], [1.1445619610940967, -1.0908918172224145, -0.8017074135666744, -1.088678237071422, -3.7349255811283077], [0.8772453500338079, -0.7073770512553028, -1.1985112886791982, -1.7857736727303724, -3.6623819880905133], [0.3239498585941797, -1.2466885007356783, -1.242311473494577, -1.6249863065697463, -3.9401584050537632], [0.6579103620656919, -0.5918951293377545, -1.1670998383482238, -1.6280048647249994, -3.712932898382611]], NamedTuple[(n_steps = 1, is_accept = true, acceptance_rate = 8.07231311573514e-97, log_density = -13.085098805987874, hamiltonian_energy = 15.204108494698385, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 221.26231394776974, tree_depth = 1, numerical_error = false, step_size = 0.4, nom_step_size = 0.4, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = -13.085098805987874, hamiltonian_energy = 15.368083354297653, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 2.4276132875912518e10, tree_depth = 0, numerical_error = true, step_size = 0.9340259163636535, nom_step_size = 0.9340259163636535, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.9964364753741543, log_density = -6.774697487401844, hamiltonian_energy = 14.406969513742412, hamiltonian_energy_error = -0.17806956887976355, max_hamiltonian_energy_error = -0.22306143254688315, tree_depth = 2, numerical_error = false, step_size = 0.09209433883419865, nom_step_size = 0.09209433883419865, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9445216243233532, log_density = 5.689527841600322, hamiltonian_energy = 8.529371813163728, hamiltonian_energy_error = -1.4056693971736607, max_hamiltonian_energy_error = -1.4384247304277942, tree_depth = 3, numerical_error = false, step_size = 0.09501007787487224, nom_step_size = 0.09501007787487224, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 12.169383601114323, hamiltonian_energy = -5.132033162878701, hamiltonian_energy_error = -0.6397544762289638, max_hamiltonian_energy_error = -0.6397544762289638, tree_depth = 2, numerical_error = false, step_size = 0.10959448652384571, nom_step_size = 0.10959448652384571, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.971418061887541, log_density = 12.174177098501861, hamiltonian_energy = -9.744303357755214, hamiltonian_energy_error = -0.16631967535553116, max_hamiltonian_energy_error = -0.4356811216141807, tree_depth = 2, numerical_error = false, step_size = 0.1701357645464506, nom_step_size = 0.1701357645464506, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.7221344648317756, log_density = 12.218045751541066, hamiltonian_energy = -9.035731135460013, hamiltonian_energy_error = 0.49334737874088574, max_hamiltonian_energy_error = 0.866011955058319, tree_depth = 2, numerical_error = false, step_size = 0.26408414423943394, nom_step_size = 0.26408414423943394, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.35299246790462224, log_density = 11.117245097276987, hamiltonian_energy = -7.9822621537860945, hamiltonian_energy_error = 0.8306484789686879, max_hamiltonian_energy_error = 3.0188740803364196, tree_depth = 3, numerical_error = false, step_size = 0.19810961564874738, nom_step_size = 0.19810961564874738, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9997153044810667, log_density = 13.870831128471751, hamiltonian_energy = -9.167969452040122, hamiltonian_energy_error = -0.023443600045103707, max_hamiltonian_energy_error = -0.03367748107339885, tree_depth = 4, numerical_error = false, step_size = 0.04722862294720923, nom_step_size = 0.04722862294720923, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9612162999780693, log_density = 13.4731535693664, hamiltonian_energy = -12.066460706531455, hamiltonian_energy_error = 0.0022122863368281287, max_hamiltonian_energy_error = 0.09058054689421269, tree_depth = 4, numerical_error = false, step_size = 0.08685265001235527, nom_step_size = 0.08685265001235527, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.8862180358300621, log_density = 12.260516782428516, hamiltonian_energy = -10.821274922558416, hamiltonian_energy_error = 0.18425753818398505, max_hamiltonian_energy_error = 0.28218827835720717, tree_depth = 3, numerical_error = false, step_size = 0.14384095065958336, nom_step_size = 0.14384095065958336, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9711031245777685, log_density = 14.138571115645501, hamiltonian_energy = -11.184002566801336, hamiltonian_energy_error = -0.18956370938340328, max_hamiltonian_energy_error = -0.28229959681753947, tree_depth = 3, numerical_error = false, step_size = 0.18958104656372532, nom_step_size = 0.18958104656372532, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.033962270645499545, log_density = 10.986748981156559, hamiltonian_energy = -9.845231521761429, hamiltonian_energy_error = 1.4365949086579715, max_hamiltonian_energy_error = 329.8157983125356, tree_depth = 2, numerical_error = false, step_size = 0.3279395414236974, nom_step_size = 0.3279395414236974, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9991282542421184, log_density = 12.66607415372265, hamiltonian_energy = -8.623420629750097, hamiltonian_energy_error = -0.015123997693171631, max_hamiltonian_energy_error = -0.015476570406150358, tree_depth = 5, numerical_error = false, step_size = 0.0300288088709337, nom_step_size = 0.0300288088709337, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9870533064706629, log_density = 13.964099272531499, hamiltonian_energy = -11.262133780307364, hamiltonian_energy_error = -0.002550540794507228, max_hamiltonian_energy_error = 0.027917775962587044, tree_depth = 4, numerical_error = false, step_size = 0.057392152166411046, nom_step_size = 0.057392152166411046, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.8857268792086317, log_density = 10.846502430637456, hamiltonian_energy = -4.6108718194250855, hamiltonian_energy_error = 0.2092873553244612, max_hamiltonian_energy_error = 0.2608112848397477, tree_depth = 4, numerical_error = false, step_size = 0.10523888737684325, nom_step_size = 0.10523888737684325, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.456894051948797, hamiltonian_energy = -10.771786561572043, hamiltonian_energy_error = -0.2622423098595945, max_hamiltonian_energy_error = -0.45030013197876784, tree_depth = 3, numerical_error = false, step_size = 0.14050011626358136, nom_step_size = 0.14050011626358136, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.8621393355919286, log_density = 12.167859783578617, hamiltonian_energy = -10.883807586838472, hamiltonian_energy_error = -0.3485566020078821, max_hamiltonian_energy_error = 0.5337224215554635, tree_depth = 2, numerical_error = false, step_size = 0.26528955007864047, nom_step_size = 0.26528955007864047, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.04334207116519715, log_density = 12.167859783578617, hamiltonian_energy = -7.124201698419442, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 260.88171254960514, tree_depth = 2, numerical_error = false, step_size = 0.32707261837192475, nom_step_size = 0.32707261837192475, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.999992119893043, log_density = 12.764606345690828, hamiltonian_energy = -10.567449873472496, hamiltonian_energy_error = -0.0014698145004707897, max_hamiltonian_energy_error = -0.00905643813129231, tree_depth = 5, numerical_error = false, step_size = 0.03431762397919273, nom_step_size = 0.03431762397919273, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.8551019492232547, log_density = 11.09988190305577, hamiltonian_energy = -9.733801848037139, hamiltonian_energy_error = 0.2682695150428813, max_hamiltonian_energy_error = 0.2768410907104588, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 11.97204326627097, hamiltonian_energy = -10.587520098614577, hamiltonian_energy_error = -0.041524004527691005, max_hamiltonian_energy_error = -0.3401649296858249, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.565852107434932, hamiltonian_energy = -10.718295182351921, hamiltonian_energy_error = -0.06697821978416307, max_hamiltonian_energy_error = -0.19517760564699316, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8489311111901263, log_density = 13.637437262894569, hamiltonian_energy = -6.688508687910146, hamiltonian_energy_error = -0.19140410748609504, max_hamiltonian_energy_error = 0.4210252128619034, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9773229894515403, log_density = 13.610891741592193, hamiltonian_energy = -10.88552051614801, hamiltonian_energy_error = -0.01892316950563533, max_hamiltonian_energy_error = 0.07614727693932899, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9906298644209538, log_density = 13.990946847201487, hamiltonian_energy = -12.430784036914714, hamiltonian_energy_error = -0.012623947428050286, max_hamiltonian_energy_error = -0.0735306369653852, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9702397738111586, log_density = 13.680916927787523, hamiltonian_energy = -12.38724871833158, hamiltonian_energy_error = -0.00516760774955749, max_hamiltonian_energy_error = 0.0980770544164713, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9590110920567153, log_density = 12.367401158020668, hamiltonian_energy = -10.505554671027157, hamiltonian_energy_error = 0.02750717606306985, max_hamiltonian_energy_error = 0.09169465126714549, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9780368026653695, log_density = 12.940255443557703, hamiltonian_energy = -11.22800992774479, hamiltonian_energy_error = 0.027004962763301776, max_hamiltonian_energy_error = 0.062003472797879766, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9857808169603316, log_density = 12.573903770752958, hamiltonian_energy = -10.472743388147954, hamiltonian_energy_error = 0.027796397195290368, max_hamiltonian_energy_error = 0.07521149571928198, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9473812050567539, log_density = 13.271014492300505, hamiltonian_energy = -10.532516628001606, hamiltonian_energy_error = -0.01701419734689935, max_hamiltonian_energy_error = 0.15938389736911418, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9996242746661775, log_density = 13.736641376368405, hamiltonian_energy = -12.078488066457608, hamiltonian_energy_error = -0.08796873348801348, max_hamiltonian_energy_error = -0.10973059192430945, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7721636140026649, log_density = 10.540455907864475, hamiltonian_energy = -9.908767811003756, hamiltonian_energy_error = 0.45388130197278365, max_hamiltonian_energy_error = 0.45388130197278365, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9968303503784658, log_density = 13.323963910153951, hamiltonian_energy = -9.218961014735674, hamiltonian_energy_error = -0.34282981049144645, max_hamiltonian_energy_error = -0.43854188363024704, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9942277021126467, log_density = 13.408397894691301, hamiltonian_energy = -11.833366427232189, hamiltonian_energy_error = -0.1355193131016179, max_hamiltonian_energy_error = -0.13604302279863134, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.7916359996433168, log_density = 10.851432531359446, hamiltonian_energy = -7.703459585553164, hamiltonian_energy_error = 0.03916119725441103, max_hamiltonian_energy_error = 0.49661164894689946, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.5590619184555723, log_density = 8.234713894027628, hamiltonian_energy = -5.8171611784470425, hamiltonian_energy_error = 0.4841840953635339, max_hamiltonian_energy_error = 0.8473954390240399, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 9.246370634388786, hamiltonian_energy = -6.724888463491369, hamiltonian_energy_error = -0.28136196234481936, max_hamiltonian_energy_error = -0.6026821963517603, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9730295028594245, log_density = 10.822734052280001, hamiltonian_energy = -7.033195811446651, hamiltonian_energy_error = -0.05336451748343762, max_hamiltonian_energy_error = -0.29950078587747964, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9752740866890439, log_density = 10.23328240090374, hamiltonian_energy = -6.56428802754955, hamiltonian_energy_error = 0.0190331486855424, max_hamiltonian_energy_error = -0.16135346678982465, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.271618436198997, hamiltonian_energy = -8.061855781120007, hamiltonian_energy_error = -0.05386479946735001, max_hamiltonian_energy_error = -0.16057123444716126, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.686875986637226, hamiltonian_energy = -9.549729573744976, hamiltonian_energy_error = -0.12477156290218261, max_hamiltonian_energy_error = -0.200741726348463, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6222478097260175, log_density = 13.686875986637226, hamiltonian_energy = -8.219265981654791, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 0.8035282549167793, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9363194543606391, log_density = 12.5837684189992, hamiltonian_energy = -10.99933011467252, hamiltonian_energy_error = 0.08847553876372771, max_hamiltonian_energy_error = 0.15265975551806932, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9703750424157533, log_density = 11.154562278821448, hamiltonian_energy = -9.790807113018873, hamiltonian_energy_error = 0.09759705708185074, max_hamiltonian_energy_error = -0.18433899571715529, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9512888606776883, log_density = 10.67605873564595, hamiltonian_energy = -9.176930163841673, hamiltonian_energy_error = 0.19276344070423335, max_hamiltonian_energy_error = -0.2941994737530962, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.291501436820548, hamiltonian_energy = -8.761898151771993, hamiltonian_energy_error = -0.13651413672799073, max_hamiltonian_energy_error = -0.4401687193204076, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9582294167291335, log_density = 12.528625145418761, hamiltonian_energy = -6.792458302044193, hamiltonian_energy_error = -0.19102165532286985, max_hamiltonian_energy_error = -0.19102165532286985, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8948835869402626, log_density = 9.688380781547945, hamiltonian_energy = -6.768898047920864, hamiltonian_energy_error = 0.1532631248292997, max_hamiltonian_energy_error = 0.23324123337098612, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9950759227515782, log_density = 13.17684325511066, hamiltonian_energy = -8.45158397451804, hamiltonian_energy_error = -0.09527394155342606, max_hamiltonian_energy_error = -0.2408963010944003, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9969304147350678, log_density = 11.829528684388777, hamiltonian_energy = -11.27441558371733, hamiltonian_energy_error = 0.021521265858586602, max_hamiltonian_energy_error = -0.08540623836121952, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9931536080149368, log_density = 10.934294160035382, hamiltonian_energy = -9.826401369302577, hamiltonian_energy_error = 0.016019642257102618, max_hamiltonian_energy_error = -0.17714682742525412, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9493992344566704, log_density = 10.651569898864334, hamiltonian_energy = -7.388510359839158, hamiltonian_energy_error = -0.06865675632864932, max_hamiltonian_energy_error = 0.15268874538997057, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9369872132936052, log_density = 13.845053462002442, hamiltonian_energy = -8.24120953104002, hamiltonian_energy_error = -0.09945386109857424, max_hamiltonian_energy_error = 0.15938749848304035, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7853610739570589, log_density = 11.748879993867805, hamiltonian_energy = -10.709793547832867, hamiltonian_energy_error = 0.35891114133217883, max_hamiltonian_energy_error = 0.38403726125773296, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9639505430664806, log_density = 13.194724879466378, hamiltonian_energy = -10.631094696720186, hamiltonian_energy_error = -0.1716152705132057, max_hamiltonian_energy_error = -0.3705160421779343, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9861967145476174, log_density = 12.324576671960498, hamiltonian_energy = -10.711264796451886, hamiltonian_energy_error = 0.02513036596334217, max_hamiltonian_energy_error = -0.11425892610896682, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8789878872742004, log_density = 13.230065334695649, hamiltonian_energy = -9.844304879894107, hamiltonian_energy_error = -0.10282304328392122, max_hamiltonian_energy_error = 0.36241129723363485, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9998134868487442, log_density = 13.769403359175337, hamiltonian_energy = -12.908424786616747, hamiltonian_energy_error = -0.06966375975128258, max_hamiltonian_energy_error = -0.08260193243259195, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8353777246194913, log_density = 12.106226506042113, hamiltonian_energy = -11.143511090406847, hamiltonian_energy_error = 0.2967038583838786, max_hamiltonian_energy_error = 0.3701698494933261, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9916409233640766, log_density = 11.18091041317899, hamiltonian_energy = -9.48672788879038, hamiltonian_energy_error = 0.04408414994428966, max_hamiltonian_energy_error = -0.4050684739365238, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9710335000035338, log_density = 11.07207089561045, hamiltonian_energy = -8.526942158174442, hamiltonian_energy_error = 0.03318213762814004, max_hamiltonian_energy_error = -0.3506762965736794, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9881908911593119, log_density = 11.270276602029131, hamiltonian_energy = -8.3078645338406, hamiltonian_energy_error = -0.14341487623999782, max_hamiltonian_energy_error = -0.3773292661534349, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9795534925256023, log_density = 12.505775978711762, hamiltonian_energy = -9.293637343377036, hamiltonian_energy_error = -0.015393208663608604, max_hamiltonian_energy_error = -0.133499182294317, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9894043305486705, log_density = 13.57937470971293, hamiltonian_energy = -10.767787815584638, hamiltonian_energy_error = -0.13587275604797888, max_hamiltonian_energy_error = -0.24201284261326172, tree_depth = 5, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9139340341773505, log_density = 12.780695407437, hamiltonian_energy = -10.947570502856074, hamiltonian_energy_error = 0.09021073853972972, max_hamiltonian_energy_error = 0.2070014712732604, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9855862487262466, log_density = 13.016142220022761, hamiltonian_energy = -9.211726736827863, hamiltonian_energy_error = -0.034575133888543164, max_hamiltonian_energy_error = -0.06691694956850291, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9614223789338207, log_density = 10.399056012649211, hamiltonian_energy = -8.844577411146885, hamiltonian_energy_error = 0.0003771758018960014, max_hamiltonian_energy_error = -0.14195085130241125, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9987524720756357, log_density = 13.200302891523982, hamiltonian_energy = -8.985115349493746, hamiltonian_energy_error = -0.06705822250334847, max_hamiltonian_energy_error = -0.11922449731793705, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.901837524253425, log_density = 13.394096955473652, hamiltonian_energy = -11.899806987582291, hamiltonian_energy_error = 0.06799297467931353, max_hamiltonian_energy_error = 0.14735699845339845, tree_depth = 1, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8099430244922212, log_density = 9.33694902027883, hamiltonian_energy = -8.126542834218988, hamiltonian_energy_error = 0.3153924486716484, max_hamiltonian_energy_error = 0.35620855601494483, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.413946748637787, hamiltonian_energy = -8.971101168710545, hamiltonian_energy_error = -0.2917408934455157, max_hamiltonian_energy_error = -0.42402581730815747, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9922245242407851, log_density = 13.292503223593616, hamiltonian_energy = -10.855369170089862, hamiltonian_energy_error = -0.08689578007047594, max_hamiltonian_energy_error = -0.1802070376005016, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.972293597572997, log_density = 13.379371968494203, hamiltonian_energy = -11.53279241381394, hamiltonian_energy_error = 0.004997371874550183, max_hamiltonian_energy_error = 0.09098773424660678, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9353126166087175, log_density = 12.931365773071619, hamiltonian_energy = -10.031283131799762, hamiltonian_energy_error = 0.03705963197746698, max_hamiltonian_energy_error = 0.16321496581534944, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9875076316094574, log_density = 14.000190800951815, hamiltonian_energy = -11.844428436141023, hamiltonian_energy_error = -0.014450300608640276, max_hamiltonian_energy_error = -0.04660121968887054, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9727882822782322, log_density = 13.493497888717094, hamiltonian_energy = -12.51130392950621, hamiltonian_energy_error = -0.02621497007268303, max_hamiltonian_energy_error = 0.07278833915425764, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9422515182157001, log_density = 12.960649323534348, hamiltonian_energy = -11.572741009947183, hamiltonian_energy_error = 0.0755341721963454, max_hamiltonian_energy_error = 0.13790146943974335, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9999195287296819, log_density = 13.34698477255392, hamiltonian_energy = -11.495318362298082, hamiltonian_energy_error = -0.065451613461045, max_hamiltonian_energy_error = -0.09572189179932877, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8567617572630472, log_density = 11.574284428382617, hamiltonian_energy = -9.180625937059283, hamiltonian_energy_error = 0.2276473784321702, max_hamiltonian_energy_error = 0.24523383370162222, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.055211378280923, hamiltonian_energy = -11.261840120429396, hamiltonian_energy_error = -0.1430567016393507, max_hamiltonian_energy_error = -0.16521806929267058, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9910328057887241, log_density = 14.367268456847778, hamiltonian_energy = -10.799602912875454, hamiltonian_energy_error = -0.1410087642497615, max_hamiltonian_energy_error = -0.1410087642497615, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7968469299472797, log_density = 11.859444168513999, hamiltonian_energy = -11.103217421528743, hamiltonian_energy_error = 0.24935970121711293, max_hamiltonian_energy_error = 0.2778119357104174, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9957809364803855, log_density = 11.628905014305658, hamiltonian_energy = -10.745479696535657, hamiltonian_energy_error = 0.029978338210874256, max_hamiltonian_energy_error = -0.14919254341029742, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9880598100360086, log_density = 11.744303782188437, hamiltonian_energy = -10.244472766595493, hamiltonian_energy_error = -0.08509755194480029, max_hamiltonian_energy_error = -0.23923191461480897, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8913777221134009, log_density = 10.766985724167629, hamiltonian_energy = -8.084419068682617, hamiltonian_energy_error = 0.007847260974319425, max_hamiltonian_energy_error = 0.37159722022758146, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.897426727187375, hamiltonian_energy = -8.796962232716766, hamiltonian_energy_error = -0.09477828558604173, max_hamiltonian_energy_error = -0.25997469724720546, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 12.761521998414395, hamiltonian_energy = -10.579147012256982, hamiltonian_energy_error = -0.12833157808402085, max_hamiltonian_energy_error = -0.2871128838812389, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9977956945950766, log_density = 12.189853760009935, hamiltonian_energy = -10.584984842085687, hamiltonian_energy_error = -0.033570040350175745, max_hamiltonian_energy_error = -0.14647930802100184, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9253545662278115, log_density = 14.499869990390248, hamiltonian_energy = -9.73952285143744, hamiltonian_energy_error = -0.04612042131027927, max_hamiltonian_energy_error = 0.1662663336363579, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9984385845963355, log_density = 14.401142405145364, hamiltonian_energy = -14.249856959589478, hamiltonian_energy_error = 0.0019457727815908044, max_hamiltonian_energy_error = 0.008044271997063035, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8543323032630722, log_density = 10.073469730688556, hamiltonian_energy = -6.740918675281868, hamiltonian_energy_error = 0.1267331703411525, max_hamiltonian_energy_error = 0.3037633398777535, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9138730496069274, log_density = 10.576927190655216, hamiltonian_energy = -4.251701741485162, hamiltonian_energy_error = -0.07225942629222804, max_hamiltonian_energy_error = 0.28840964128340474, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9915335278050982, log_density = 13.422523031699324, hamiltonian_energy = -9.278511069161716, hamiltonian_energy_error = -0.1314215281547817, max_hamiltonian_energy_error = -0.1314215281547817, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9362417094219292, log_density = 13.353157655307266, hamiltonian_energy = -11.640118911502231, hamiltonian_energy_error = 0.010259759998444196, max_hamiltonian_energy_error = 0.13554473786627774, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8626363946631018, log_density = 13.065997371592253, hamiltonian_energy = -10.346420890496114, hamiltonian_energy_error = 0.05835186888739763, max_hamiltonian_energy_error = 0.2837331325272956, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9972774856006145, log_density = 13.975141720193943, hamiltonian_energy = -12.073743617381274, hamiltonian_energy_error = -0.0317675425979953, max_hamiltonian_energy_error = -0.09197800476482243, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9746463642051579, log_density = 11.621717312720278, hamiltonian_energy = -11.20539726925017, hamiltonian_energy_error = 0.04431625095670455, max_hamiltonian_energy_error = 0.06447552631790465, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9986048871018103, log_density = 13.461152896996534, hamiltonian_energy = -10.991297382298157, hamiltonian_energy_error = -0.02046374719753352, max_hamiltonian_energy_error = -0.10461933674525525, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8643177218377784, log_density = 13.064882536531023, hamiltonian_energy = -10.496619803006674, hamiltonian_energy_error = 0.11366692772362796, max_hamiltonian_energy_error = 0.2565645903040359, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.507323814488046, hamiltonian_energy = -12.58876827682813, hamiltonian_energy_error = -0.02198901523382446, max_hamiltonian_energy_error = -0.10327355258449877, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.894969185275426, log_density = 12.010067762142368, hamiltonian_energy = -9.167608152334981, hamiltonian_energy_error = 0.18533381172283825, max_hamiltonian_energy_error = 0.29283669524536116, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9952053412493095, log_density = 13.000258637474792, hamiltonian_energy = -10.704935326793386, hamiltonian_energy_error = -0.11344596489806413, max_hamiltonian_energy_error = -0.3255535943103798, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9966017359180047, log_density = 13.576676105890503, hamiltonian_energy = -11.817327621025884, hamiltonian_energy_error = -0.08633265249346955, max_hamiltonian_energy_error = -0.1258378588030613, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9502559803697688, log_density = 11.80875429672417, hamiltonian_energy = -10.056001012773962, hamiltonian_energy_error = 0.035048058820997596, max_hamiltonian_energy_error = 0.0970651531078488, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9960346087095686, log_density = 13.615100471543437, hamiltonian_energy = -10.829424312022994, hamiltonian_energy_error = -0.0932732641087739, max_hamiltonian_energy_error = -0.1265639152447111, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9638345021911721, log_density = 14.11674233552429, hamiltonian_energy = -12.042980233796783, hamiltonian_energy_error = -0.03497998273495995, max_hamiltonian_energy_error = 0.08972194480271689, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 14.376813878281128, hamiltonian_energy = -13.899654189429492, hamiltonian_energy_error = -0.010784034378835017, max_hamiltonian_energy_error = -0.023107173086392763, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8939084436593735, log_density = 13.22328659866097, hamiltonian_energy = -13.022915902078932, hamiltonian_energy_error = 0.15740320415135756, max_hamiltonian_energy_error = 0.15740320415135756, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9893731106239966, log_density = 13.129412996046463, hamiltonian_energy = -11.596231958366872, hamiltonian_energy_error = -0.14274631475414878, max_hamiltonian_energy_error = -0.14274631475414878, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9612123434808678, log_density = 12.378150202237187, hamiltonian_energy = -12.058312252277988, hamiltonian_energy_error = 0.0524769743363791, max_hamiltonian_energy_error = 0.06746454589865358, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8752016784224859, log_density = 9.803428243814807, hamiltonian_energy = -9.55350897050026, hamiltonian_energy_error = 0.14079909739201568, max_hamiltonian_energy_error = 0.14079909739201568, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.971654223802217, log_density = 8.870695574535402, hamiltonian_energy = -5.184801331023928, hamiltonian_energy_error = 0.006790176117194235, max_hamiltonian_energy_error = -0.34604463076028047, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9799817959023333, log_density = 13.488263048090989, hamiltonian_energy = -8.093384827899957, hamiltonian_energy_error = -0.3439188763313421, max_hamiltonian_energy_error = -0.3439188763313421, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9457108384031093, log_density = 14.303574439647317, hamiltonian_energy = -11.013965460502416, hamiltonian_energy_error = 0.0318968969875435, max_hamiltonian_energy_error = 0.10179390915675413, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9909404882082445, log_density = 13.957678588736401, hamiltonian_energy = -13.316337863314546, hamiltonian_energy_error = -0.020447679704791, max_hamiltonian_energy_error = 0.04027909958196041, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9267820417722241, log_density = 11.23727130805576, hamiltonian_energy = -10.794982349390262, hamiltonian_energy_error = 0.1800780644353246, max_hamiltonian_energy_error = 0.1800780644353246, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9749771100875229, log_density = 12.604484021841808, hamiltonian_energy = -9.304858398364132, hamiltonian_energy_error = -0.029696760338348227, max_hamiltonian_energy_error = 0.1225826449068883, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9327037926164514, log_density = 10.932499579896565, hamiltonian_energy = -8.881150771117785, hamiltonian_energy_error = 0.11733601490581513, max_hamiltonian_energy_error = 0.17701233710084452, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8524645823935787, log_density = 8.347563127765952, hamiltonian_energy = -5.575636048766535, hamiltonian_energy_error = 0.2051169170684517, max_hamiltonian_energy_error = 0.51130555200867, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9849095273935362, log_density = 7.999286583560565, hamiltonian_energy = -4.18124872669516, hamiltonian_energy_error = -0.025966954150927535, max_hamiltonian_energy_error = -0.49232450595380506, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.999447359668522, log_density = 11.748189683151484, hamiltonian_energy = -7.1263245503279755, hamiltonian_energy_error = -0.3049754468279584, max_hamiltonian_energy_error = -0.687631815980084, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9964577437035717, log_density = 12.988428483079169, hamiltonian_energy = -10.561473651265738, hamiltonian_energy_error = -0.1621021595812131, max_hamiltonian_energy_error = -0.1621021595812131, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8920787084329977, log_density = 13.234270540176038, hamiltonian_energy = -8.280180024002503, hamiltonian_energy_error = -0.1597234511877481, max_hamiltonian_energy_error = 0.25832176433597454, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9864953136446779, log_density = 13.390238941964757, hamiltonian_energy = -12.425621920606439, hamiltonian_energy_error = -0.0010210994560146958, max_hamiltonian_energy_error = -0.07559802561064721, tree_depth = 5, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9959166239888285, log_density = 14.400788972159148, hamiltonian_energy = -12.607143990785787, hamiltonian_energy_error = -0.048254401904742394, max_hamiltonian_energy_error = -0.07659622751940454, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8789953532229311, log_density = 13.994914996693932, hamiltonian_energy = -12.160797639835483, hamiltonian_energy_error = 0.04662598860811684, max_hamiltonian_energy_error = 0.2832083464389594, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9978139031087494, log_density = 14.391487953934734, hamiltonian_energy = -13.696098861834109, hamiltonian_energy_error = -0.04182180624025911, max_hamiltonian_energy_error = -0.063401372026334, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7547049199546766, log_density = 10.514217807096154, hamiltonian_energy = -7.174180072951429, hamiltonian_energy_error = 0.34770493346191067, max_hamiltonian_energy_error = 0.4114792824385445, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.999415425743661, log_density = 11.631747104760873, hamiltonian_energy = -9.727780488257926, hamiltonian_energy_error = -0.04471838977512377, max_hamiltonian_energy_error = -0.20556289861189114, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9596005554187244, log_density = 12.459046131088947, hamiltonian_energy = -8.833982650005453, hamiltonian_energy_error = -0.002527204058633714, max_hamiltonian_energy_error = -0.2036513629138721, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9715131368703988, log_density = 13.50258515197559, hamiltonian_energy = -10.783808655375418, hamiltonian_energy_error = -0.10624388911878846, max_hamiltonian_energy_error = -0.20691581720520702, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9743752680461305, log_density = 12.43536068581496, hamiltonian_energy = -11.44451610581468, hamiltonian_energy_error = 0.02025722738063429, max_hamiltonian_energy_error = -0.12817765251731394, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9797665026559893, log_density = 13.365232813493776, hamiltonian_energy = -9.121458863510298, hamiltonian_energy_error = -0.157407633679032, max_hamiltonian_energy_error = -0.157407633679032, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9787748260298729, log_density = 13.977335072830083, hamiltonian_energy = -11.488241121487023, hamiltonian_energy_error = -0.021089689156827518, max_hamiltonian_energy_error = 0.04922437515518219, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9974977362232539, log_density = 14.049300545686144, hamiltonian_energy = -12.813682253091923, hamiltonian_energy_error = -0.017874729423780877, max_hamiltonian_energy_error = -0.03317613410849951, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8146863924873836, log_density = 11.222898029192079, hamiltonian_energy = -9.301842770998833, hamiltonian_energy_error = 0.24350871131369978, max_hamiltonian_energy_error = 0.33352065409733633, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9851504533201404, log_density = 13.125437895343559, hamiltonian_energy = -10.297968621637429, hamiltonian_energy_error = -0.17746498565828617, max_hamiltonian_energy_error = -0.17746498565828617, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9156823434549193, log_density = 13.854830329140931, hamiltonian_energy = -9.823853555177898, hamiltonian_energy_error = -0.0830070294810401, max_hamiltonian_energy_error = 0.18872649139495934, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9866234853829726, log_density = 13.193907410389224, hamiltonian_energy = -13.066818377266804, hamiltonian_energy_error = 0.04366353139958257, max_hamiltonian_energy_error = 0.04366353139958257, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9537874746147832, log_density = 13.101412967180792, hamiltonian_energy = -12.006662858818954, hamiltonian_energy_error = 0.023719246025111218, max_hamiltonian_energy_error = 0.10355549882801718, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9889861393005912, log_density = 13.637579666542974, hamiltonian_energy = -12.340398926716633, hamiltonian_energy_error = 0.004427635425903631, max_hamiltonian_energy_error = -0.06434579082817571, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.993317221835461, log_density = 13.923777774863911, hamiltonian_energy = -13.106026138825264, hamiltonian_energy_error = -0.04011543170242682, max_hamiltonian_energy_error = -0.07226353321074974, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9427651083476085, log_density = 13.816001726718708, hamiltonian_energy = -12.4012930621675, hamiltonian_energy_error = 0.011211967502752884, max_hamiltonian_energy_error = 0.13239657846582986, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9769435205772127, log_density = 12.875403095622502, hamiltonian_energy = -11.64998090994466, hamiltonian_energy_error = 0.036303152968841346, max_hamiltonian_energy_error = 0.0527795929632795, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8921469476380789, log_density = 11.145718283174947, hamiltonian_energy = -8.156928768987921, hamiltonian_energy_error = 0.14887242167715087, max_hamiltonian_energy_error = 0.2113627559307023, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9953728388798837, log_density = 12.583586672881989, hamiltonian_energy = -9.862426314048875, hamiltonian_energy_error = -0.05419599353306381, max_hamiltonian_energy_error = -0.20455121974319113, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9762932317382391, log_density = 13.105746058275741, hamiltonian_energy = -9.58272344453193, hamiltonian_energy_error = -0.09280188522883748, max_hamiltonian_energy_error = -0.20266358303790355, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9987751929696275, log_density = 13.424085591571204, hamiltonian_energy = -11.903186040378031, hamiltonian_energy_error = -0.10713049927463558, max_hamiltonian_energy_error = -0.12588222739901056, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9173336680237106, log_density = 13.308054779582205, hamiltonian_energy = -11.559606873828093, hamiltonian_energy_error = 0.07953502698961223, max_hamiltonian_energy_error = 0.21617092273015892, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9727469358674986, log_density = 13.649085300965401, hamiltonian_energy = -10.694281957494724, hamiltonian_energy_error = 0.019144891750524806, max_hamiltonian_energy_error = 0.1279450193620626, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9863995972519433, log_density = 12.955450465517805, hamiltonian_energy = -11.195784932585532, hamiltonian_energy_error = 0.03798235349241352, max_hamiltonian_energy_error = -0.11347033544772067, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8939397026389473, log_density = 13.258883473935303, hamiltonian_energy = -9.810735778361838, hamiltonian_energy_error = 0.05943117327876024, max_hamiltonian_energy_error = 0.20689271608885385, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9558684099559694, log_density = 12.79415103265334, hamiltonian_energy = -10.989689488899472, hamiltonian_energy_error = -0.0667527511017525, max_hamiltonian_energy_error = -0.20291342055841, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9996501740029279, log_density = 12.73903075439673, hamiltonian_energy = -11.421535770585084, hamiltonian_energy_error = 0.002451785149837349, max_hamiltonian_energy_error = -0.13327799982114286, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9670548164124675, log_density = 11.935065015798868, hamiltonian_energy = -9.983350292041447, hamiltonian_energy_error = 0.09002773772298056, max_hamiltonian_energy_error = -0.13996536729492526, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9978353672809491, log_density = 12.017420158662796, hamiltonian_energy = -9.027282380431133, hamiltonian_energy_error = -0.17608609989209079, max_hamiltonian_energy_error = -0.2316118198849857, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9609001804667143, log_density = 14.443177878917028, hamiltonian_energy = -10.266266871364708, hamiltonian_energy_error = -0.05090485818534418, max_hamiltonian_energy_error = 0.09577292513526814, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9515082492528814, log_density = 14.239447428509955, hamiltonian_energy = -12.43500401018475, hamiltonian_energy_error = -0.007797925421209939, max_hamiltonian_energy_error = 0.12006789229186232, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.987726677963813, log_density = 13.61427631071118, hamiltonian_energy = -12.297099532857162, hamiltonian_energy_error = -0.00617076011866402, max_hamiltonian_energy_error = 0.04290040323028421, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8911415132592904, log_density = 13.066555170936446, hamiltonian_energy = -9.505653799842342, hamiltonian_energy_error = 0.0620098243117333, max_hamiltonian_energy_error = 0.17587573813332646, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9989536309283287, log_density = 13.694067751667333, hamiltonian_energy = -12.59129379612792, hamiltonian_energy_error = -0.03780207905011146, max_hamiltonian_energy_error = -0.043498341814045105, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9974566834079478, log_density = 14.259098397631812, hamiltonian_energy = -12.941915955932767, hamiltonian_energy_error = -0.015458145755690822, max_hamiltonian_energy_error = -0.030060943239309523, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9455965144239826, log_density = 13.883971831210545, hamiltonian_energy = -12.44660954811143, hamiltonian_energy_error = 0.0338032198141498, max_hamiltonian_energy_error = 0.10519733039979684, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9726420428419352, log_density = 13.588200309244542, hamiltonian_energy = -12.758992171297411, hamiltonian_energy_error = 0.037902742671867884, max_hamiltonian_energy_error = 0.08623013133074764, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9997354465972301, log_density = 14.245720640312614, hamiltonian_energy = -13.026551833018011, hamiltonian_energy_error = -0.026444362551449885, max_hamiltonian_energy_error = -0.06625106521113189, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.997966439407162, log_density = 14.102299838803205, hamiltonian_energy = -13.91557645553428, hamiltonian_energy_error = 0.0012399787116308403, max_hamiltonian_energy_error = -0.032271007620362724, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.985457379884038, log_density = 12.954229452110274, hamiltonian_energy = -10.338672592293637, hamiltonian_energy_error = -0.06481346223650597, max_hamiltonian_energy_error = 0.09382332393211357, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.946139178426929, log_density = 12.38789117341154, hamiltonian_energy = -11.089119989973819, hamiltonian_energy_error = 0.04842364446039937, max_hamiltonian_energy_error = 0.1157083407419286, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9588748978683916, log_density = 12.50377825998362, hamiltonian_energy = -9.205313116301536, hamiltonian_energy_error = 0.04240252852014237, max_hamiltonian_energy_error = 0.10663794572350227, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9884327685579316, log_density = 11.934310997106635, hamiltonian_energy = -10.789359170826742, hamiltonian_energy_error = -0.030913242400908203, max_hamiltonian_energy_error = 0.06303777220034412, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8272734463328871, log_density = 11.629553875640116, hamiltonian_energy = -6.559725448338461, hamiltonian_energy_error = -0.09840437583923389, max_hamiltonian_energy_error = 0.5894979018602227, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9988989884742397, log_density = 11.727929835529306, hamiltonian_energy = -10.471475406755559, hamiltonian_energy_error = -0.022119620854743616, max_hamiltonian_energy_error = -0.11900971602041288, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 12.664454959695933, hamiltonian_energy = -10.33641368109761, hamiltonian_energy_error = -0.006478531805033327, max_hamiltonian_energy_error = -0.12005724772639681, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9937617149451837, log_density = 13.355402130002432, hamiltonian_energy = -11.5526862189216, hamiltonian_energy_error = -0.02769761609906496, max_hamiltonian_energy_error = -0.1353419175812327, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8293476532914581, log_density = 13.910118218255434, hamiltonian_energy = -11.165862568270192, hamiltonian_energy_error = -0.06332471685882268, max_hamiltonian_energy_error = 0.3710666765944133, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.998607160504123, log_density = 14.385120449673654, hamiltonian_energy = -13.637411174331506, hamiltonian_energy_error = -0.017486268316938336, max_hamiltonian_energy_error = -0.017486268316938336, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9775798346630178, log_density = 14.216086604554228, hamiltonian_energy = -13.188304788050347, hamiltonian_energy_error = 0.011430676858907418, max_hamiltonian_energy_error = 0.05112037195444863, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9581225714672961, log_density = 11.65966717007942, hamiltonian_energy = -9.914939516170303, hamiltonian_energy_error = 0.05825916787931895, max_hamiltonian_energy_error = 0.08573956679514616, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9999714365921886, log_density = 13.96143288806547, hamiltonian_energy = -11.147404292311517, hamiltonian_energy_error = -0.0947413005028892, max_hamiltonian_energy_error = -0.0947413005028892, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9711342528096222, log_density = 14.292125026868176, hamiltonian_energy = -12.437487659278952, hamiltonian_energy_error = -0.0014673733182934967, max_hamiltonian_energy_error = 0.06940829780110569, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8795070528069957, log_density = 13.392998326083784, hamiltonian_energy = -11.724928507190752, hamiltonian_energy_error = 0.09055659204777022, max_hamiltonian_energy_error = 0.23289370963751033, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9988659666869598, log_density = 13.62250930529425, hamiltonian_energy = -12.689917954159252, hamiltonian_energy_error = -0.028387956443106432, max_hamiltonian_energy_error = -0.0933552307176253, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9384979780913375, log_density = 13.620438031416167, hamiltonian_energy = -11.352776342537098, hamiltonian_energy_error = 0.05203446230712849, max_hamiltonian_energy_error = 0.1568692641620686, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9974156741863692, log_density = 13.622358450356279, hamiltonian_energy = -12.544214276282792, hamiltonian_energy_error = -0.1001332129946313, max_hamiltonian_energy_error = -0.13612918167406463, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9765811936230474, log_density = 13.01497351653475, hamiltonian_energy = -11.931522249519249, hamiltonian_energy_error = 0.028763933412843556, max_hamiltonian_energy_error = 0.05259013963367387, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.89850293671528, log_density = 12.86722940744642, hamiltonian_energy = -10.505490209889501, hamiltonian_energy_error = 0.03777306383061685, max_hamiltonian_energy_error = 0.22489543637383846, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.972570102475206, log_density = 11.530410370368678, hamiltonian_energy = -9.207291508079061, hamiltonian_energy_error = 0.001148166483167401, max_hamiltonian_energy_error = 0.07759295568758517, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9670052063441711, log_density = 14.396365328327438, hamiltonian_energy = -5.916915559064416, hamiltonian_energy_error = -0.08528325771507372, max_hamiltonian_energy_error = 0.09576499682900774, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.996461699515008, log_density = 14.634328689465585, hamiltonian_energy = -14.187500062793609, hamiltonian_energy_error = -0.021599311184159475, max_hamiltonian_energy_error = -0.021599311184159475, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9702756907346284, log_density = 13.515991574523161, hamiltonian_energy = -12.793290107265822, hamiltonian_energy_error = 0.024080470107506358, max_hamiltonian_energy_error = 0.054861489558440724, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9963539793079325, log_density = 13.365368892226485, hamiltonian_energy = -11.679281894354089, hamiltonian_energy_error = -0.020326371936935317, max_hamiltonian_energy_error = -0.037072253650555, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9678483504570027, log_density = 13.004377797211115, hamiltonian_energy = -11.6376168347223, hamiltonian_energy_error = 0.04889199118838938, max_hamiltonian_energy_error = 0.10554674699472066, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9934768781443951, log_density = 11.343880780786137, hamiltonian_energy = -10.251279082768257, hamiltonian_energy_error = -0.015586707282043477, max_hamiltonian_energy_error = 0.046737218543791315, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 14.148612691435837, hamiltonian_energy = -9.732277474574873, hamiltonian_energy_error = -0.05358400207426861, max_hamiltonian_energy_error = -0.10876272625956318, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9215392412566127, log_density = 14.133966158125954, hamiltonian_energy = -12.763765574997608, hamiltonian_energy_error = 0.03307198321496507, max_hamiltonian_energy_error = 0.1924615203674147, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8027410298035791, log_density = 11.163071259116222, hamiltonian_energy = -8.113779955338503, hamiltonian_energy_error = 0.185585758881043, max_hamiltonian_energy_error = 0.42435264716156595, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9810226683902682, log_density = 12.478595524386016, hamiltonian_energy = -9.451309477245635, hamiltonian_energy_error = -0.1023097055054496, max_hamiltonian_energy_error = -0.1972685066148312, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 11.744119113464851, hamiltonian_energy = -10.491789683367484, hamiltonian_energy_error = -0.03014429231116189, max_hamiltonian_energy_error = -0.1286936867193944, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9967702476781325, log_density = 11.296495830292773, hamiltonian_energy = -10.014998304718503, hamiltonian_energy_error = -0.07435669100761366, max_hamiltonian_energy_error = -0.13166041454126365, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9966712128389711, log_density = 12.022410466266473, hamiltonian_energy = -9.997538923146303, hamiltonian_energy_error = 0.019233383952254712, max_hamiltonian_energy_error = -0.09446019686066975, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9959817353236827, log_density = 11.48407695623568, hamiltonian_energy = -9.550516147658426, hamiltonian_energy_error = -0.05860885368756641, max_hamiltonian_energy_error = -0.15670102908888772, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9303809481887737, log_density = 10.692725558292231, hamiltonian_energy = -6.810772101619614, hamiltonian_energy_error = 0.07941832176019936, max_hamiltonian_energy_error = 0.18054440855790954, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9977253194250376, log_density = 11.863047340663615, hamiltonian_energy = -9.78825394861301, hamiltonian_energy_error = -0.04851978691525538, max_hamiltonian_energy_error = -0.1419050658671548, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9862613892604035, log_density = 10.897808851915842, hamiltonian_energy = -10.159105638676897, hamiltonian_energy_error = 0.05087942855570127, max_hamiltonian_energy_error = -0.0795188488630707, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.874785108339651, log_density = 11.768563883843772, hamiltonian_energy = -5.841077629375036, hamiltonian_energy_error = 0.13514820394679727, max_hamiltonian_energy_error = 0.27968012534508624, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9648583395428639, log_density = 10.85122971260071, hamiltonian_energy = -8.238698600571697, hamiltonian_energy_error = 0.053126637652123776, max_hamiltonian_energy_error = -0.40643068429198514, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9853376666992826, log_density = 9.185796401336649, hamiltonian_energy = -8.514749325865687, hamiltonian_energy_error = 0.10829407333924301, max_hamiltonian_energy_error = -0.19379108710791648, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9865578752664134, log_density = 9.184214995909144, hamiltonian_energy = -4.6302614433506, hamiltonian_energy_error = -0.16056859656432287, max_hamiltonian_energy_error = -0.4836340416342022, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.938521709895177, log_density = 11.74757556668205, hamiltonian_energy = -5.249333862290118, hamiltonian_energy_error = -0.1489779839157208, max_hamiltonian_energy_error = 0.3841639572293323, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9885189837630828, log_density = 13.940580957587379, hamiltonian_energy = -8.658857278795864, hamiltonian_energy_error = -0.09149820686906196, max_hamiltonian_energy_error = -0.16344124541019944, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9684554066410818, log_density = 11.989602628041066, hamiltonian_energy = -9.718880741362934, hamiltonian_energy_error = 0.005151795795709901, max_hamiltonian_energy_error = 0.12779009984741485, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9621063902813194, log_density = 13.55078670883233, hamiltonian_energy = -10.052063301161072, hamiltonian_energy_error = -0.03396004783959938, max_hamiltonian_energy_error = 0.09596497832469986, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9883465302576984, log_density = 13.48790364425646, hamiltonian_energy = -12.740668962316748, hamiltonian_energy_error = 0.0034942741198609184, max_hamiltonian_energy_error = -0.09533776828437013, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9475495346027595, log_density = 12.72490765215796, hamiltonian_energy = -10.991217345715741, hamiltonian_energy_error = 0.07945531305537656, max_hamiltonian_energy_error = 0.1033330256966618, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9988494724243467, log_density = 14.46180202095358, hamiltonian_energy = -12.23071691547865, hamiltonian_energy_error = -0.14022774792821657, max_hamiltonian_energy_error = -0.14143444985622367, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9465723655294335, log_density = 13.513197690565587, hamiltonian_energy = -12.35277500760739, hamiltonian_energy_error = 0.0691982021707016, max_hamiltonian_energy_error = 0.10877579819774219, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.960040861250126, log_density = 13.100177186442293, hamiltonian_energy = -10.376666260413, hamiltonian_energy_error = 0.0007029352518284071, max_hamiltonian_energy_error = 0.15484658694798803, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7680463218956672, log_density = 13.327120178779069, hamiltonian_energy = -10.011954856763928, hamiltonian_energy_error = 0.14415631814073393, max_hamiltonian_energy_error = 0.44935883747810657, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9181229601234868, log_density = 12.092932663397843, hamiltonian_energy = -9.523629532924518, hamiltonian_energy_error = 0.10829586223286114, max_hamiltonian_energy_error = 0.24426587817324474, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9641460647959862, log_density = 13.466415144437502, hamiltonian_energy = -8.464004489698794, hamiltonian_energy_error = -0.23329575906533861, max_hamiltonian_energy_error = -0.40218724688776497, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9602600003140679, log_density = 13.36583062331518, hamiltonian_energy = -12.722490816672078, hamiltonian_energy_error = 0.07097196142134798, max_hamiltonian_energy_error = 0.08567945543952149, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9309650975771869, log_density = 12.457838746564887, hamiltonian_energy = -11.036247192636072, hamiltonian_energy_error = -0.001154075486006434, max_hamiltonian_energy_error = 0.1794264312319136, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8548386084063293, log_density = 13.761030582726011, hamiltonian_energy = -9.1450430242389, hamiltonian_energy_error = 0.05107639985322798, max_hamiltonian_energy_error = 0.2672469922397891, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8975261061080296, log_density = 13.7215126417237, hamiltonian_energy = -11.466667423482303, hamiltonian_energy_error = -0.04179683415468105, max_hamiltonian_energy_error = 0.23872971583427294, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9872418593567608, log_density = 13.367637867261518, hamiltonian_energy = -12.949384283449575, hamiltonian_energy_error = 0.0260232684993138, max_hamiltonian_energy_error = 0.04911786809658203, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.8631549381148307, log_density = 6.757985818172891, hamiltonian_energy = -5.62827901565802, hamiltonian_energy_error = 0.1616010055730852, max_hamiltonian_energy_error = 0.2704330704294833, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9465762693447574, log_density = 7.240406463929803, hamiltonian_energy = -5.0707643289855735, hamiltonian_energy_error = 0.15864126611791285, max_hamiltonian_energy_error = -0.5480613350934593, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 8.297364158646905, hamiltonian_energy = -5.806603652759538, hamiltonian_energy_error = -0.004034429393119154, max_hamiltonian_energy_error = -0.3742649337425803, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8940076770621815, log_density = 10.826661424721083, hamiltonian_energy = -4.716630641626369, hamiltonian_energy_error = -0.3152030038589144, max_hamiltonian_energy_error = 0.3809774040123344, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9770560895614003, log_density = 13.911083579021811, hamiltonian_energy = -8.082677746944928, hamiltonian_energy_error = -0.1342396361383953, max_hamiltonian_energy_error = -0.19755480517434076, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9841527306909165, log_density = 14.305399999210955, hamiltonian_energy = -11.86012705054457, hamiltonian_energy_error = -0.025935466552127195, max_hamiltonian_energy_error = 0.04031522963518519, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9804621740047623, log_density = 14.049204561966015, hamiltonian_energy = -13.206002008310348, hamiltonian_energy_error = 0.013758217602465095, max_hamiltonian_energy_error = 0.05513501957507927, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9345657102256454, log_density = 13.91208722540199, hamiltonian_energy = -12.844281412858566, hamiltonian_energy_error = 0.08568645415236809, max_hamiltonian_energy_error = 0.13443482601014622, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9114955093489345, log_density = 12.129174584075734, hamiltonian_energy = -9.625371953381602, hamiltonian_energy_error = 0.14003242858377263, max_hamiltonian_energy_error = 0.2627071268851946, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9721181051752518, log_density = 11.386100156333436, hamiltonian_energy = -10.093403823119928, hamiltonian_energy_error = 0.12634595203696186, max_hamiltonian_energy_error = -0.31275045953378644, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9754145193821631, log_density = 10.76081470369445, hamiltonian_energy = -9.245820429089923, hamiltonian_energy_error = -0.08984980145383581, max_hamiltonian_energy_error = -0.3814936104563582, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9769130281960844, log_density = 13.160896069806665, hamiltonian_energy = -8.218728508152438, hamiltonian_energy_error = -0.26927922524654413, max_hamiltonian_energy_error = -0.3278359199020926, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8863030017137158, log_density = 11.850659108831117, hamiltonian_energy = -10.034142997861858, hamiltonian_energy_error = 0.13901429629455997, max_hamiltonian_energy_error = 0.17664190874511831, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.971683077979579, log_density = 10.320004152859308, hamiltonian_energy = -8.49282328255221, hamiltonian_energy_error = 0.05339167508959797, max_hamiltonian_energy_error = -0.14279095403034248, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5898691435090981, log_density = 7.32363025152266, hamiltonian_energy = -1.522297132652369, hamiltonian_energy_error = 0.6189614107589225, max_hamiltonian_energy_error = 0.9448282347925239, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.043459593413527, hamiltonian_energy = -7.405144869629464, hamiltonian_energy_error = -0.39623332642677855, max_hamiltonian_energy_error = -0.4438679320632275, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9609731695975948, log_density = 11.938758268557017, hamiltonian_energy = -10.951598660283922, hamiltonian_energy_error = 0.04614689076477063, max_hamiltonian_energy_error = 0.0747043404069121, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9033810253608344, log_density = 13.91292731535697, hamiltonian_energy = -9.038215457705158, hamiltonian_energy_error = -0.16698484422294335, max_hamiltonian_energy_error = 0.4892797936290787, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9971002928768561, log_density = 13.817133653693848, hamiltonian_energy = -13.493517303758997, hamiltonian_energy_error = 0.0016639066242216671, max_hamiltonian_energy_error = -0.02861837080504337, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9168852861708527, log_density = 13.775938132540032, hamiltonian_energy = -11.406155590081198, hamiltonian_energy_error = 0.015493577711918505, max_hamiltonian_energy_error = 0.19936027718236815, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9604351658311244, log_density = 14.14822822469959, hamiltonian_energy = -12.933213177373243, hamiltonian_energy_error = 0.0016794021414021643, max_hamiltonian_energy_error = 0.1105740084436917, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9350462447707447, log_density = 11.30854516308962, hamiltonian_energy = -9.140134036781978, hamiltonian_energy_error = 0.042710120361961756, max_hamiltonian_energy_error = 0.14060009136424334, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9843221547317257, log_density = 10.83215943217675, hamiltonian_energy = -8.893045814209806, hamiltonian_energy_error = -0.028582782179785937, max_hamiltonian_energy_error = 0.07152646830522968, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9595992760814119, log_density = 7.764890393592731, hamiltonian_energy = -6.1400049815723605, hamiltonian_energy_error = 0.1092219541355206, max_hamiltonian_energy_error = 0.13160610884741075, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9809786360059706, log_density = 13.074314579179958, hamiltonian_energy = -5.27656462863707, hamiltonian_energy_error = -0.3176369721213437, max_hamiltonian_energy_error = -0.34441987794562756, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9224036463641213, log_density = 12.520714198344557, hamiltonian_energy = -11.771028658612893, hamiltonian_energy_error = 0.11619659780264335, max_hamiltonian_energy_error = 0.13135004314446164, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.953384266808993, log_density = 13.587768664947262, hamiltonian_energy = -8.707482378825816, hamiltonian_energy_error = -0.01960915718964351, max_hamiltonian_energy_error = 0.2549293474247438, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 5, is_accept = true, acceptance_rate = 0.9778887184497147, log_density = 13.645723078443938, hamiltonian_energy = -12.561809319885475, hamiltonian_energy_error = -0.10743748848018164, max_hamiltonian_energy_error = -0.13885599362123102, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.427549842511196, hamiltonian_energy = -12.843570254166487, hamiltonian_energy_error = -0.027994655448308592, max_hamiltonian_energy_error = -0.07001700578017989, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8708188720793061, log_density = 10.751170404733706, hamiltonian_energy = -9.37863653950211, hamiltonian_energy_error = 0.146397160438406, max_hamiltonian_energy_error = 0.24710374878093688, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9721011304340919, log_density = 9.708419344855901, hamiltonian_energy = -6.436903657041336, hamiltonian_energy_error = 0.08664640103483556, max_hamiltonian_energy_error = -0.2447660742292337, tree_depth = 5, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.992115092509866, log_density = 10.13046643980003, hamiltonian_energy = -7.708120835697473, hamiltonian_energy_error = 0.024590551212271272, max_hamiltonian_energy_error = -0.25985072754420013, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9374943587556483, log_density = 9.013275469494996, hamiltonian_energy = -6.1900553419255235, hamiltonian_energy_error = 0.18043457259509488, max_hamiltonian_energy_error = -0.24583752995478747, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.695736054775061, hamiltonian_energy = -8.382718327961198, hamiltonian_energy_error = -0.4845472729788334, max_hamiltonian_energy_error = -0.4845472729788334, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9182255006687836, log_density = 13.489061829085669, hamiltonian_energy = -11.07672984763524, hamiltonian_energy_error = 0.04178802326208064, max_hamiltonian_energy_error = 0.14383326366470683, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9408233512301413, log_density = 12.399058160101045, hamiltonian_energy = -11.997372885510782, hamiltonian_energy_error = 0.08538260808589548, max_hamiltonian_energy_error = 0.10058401654233684, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9480933356583237, log_density = 11.264702275577388, hamiltonian_energy = -9.975148258654691, hamiltonian_energy_error = 0.08263773097353422, max_hamiltonian_energy_error = -0.14583683554592142, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8618413475887184, log_density = 12.546730803376041, hamiltonian_energy = -8.002432009029572, hamiltonian_energy_error = -0.2515335788083082, max_hamiltonian_energy_error = 0.4493942600621956, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9051057592956334, log_density = 11.179769253787402, hamiltonian_energy = -9.182605144056236, hamiltonian_energy_error = 0.19296422062603646, max_hamiltonian_energy_error = 0.2624723859384037, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7969543125181574, log_density = 12.484615199851952, hamiltonian_energy = -7.9563809609510185, hamiltonian_energy_error = 0.007063620643203983, max_hamiltonian_energy_error = 0.5850246163259651, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9927034319260576, log_density = 13.509019246596377, hamiltonian_energy = -11.759726935668066, hamiltonian_energy_error = 0.000467850003905923, max_hamiltonian_energy_error = -0.08350300106842568, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.999565867077366, log_density = 14.429648760336065, hamiltonian_energy = -11.951395143896997, hamiltonian_energy_error = -0.03877431084107208, max_hamiltonian_energy_error = -0.06796039797007047, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8703124995149994, log_density = 12.216139425034012, hamiltonian_energy = -10.342945081029749, hamiltonian_energy_error = 0.07520276156096095, max_hamiltonian_energy_error = 0.38206685255134154, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8783369326863606, log_density = 12.216139425034012, hamiltonian_energy = -9.275360802412463, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 0.17124175384031304, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9828718051466677, log_density = 11.626250822950912, hamiltonian_energy = -11.12891403343831, hamiltonian_energy_error = 0.046900705417314725, max_hamiltonian_energy_error = 0.07696690328870126, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9938612811910843, log_density = 12.513782856238198, hamiltonian_energy = -10.156423337759296, hamiltonian_energy_error = -0.003905021320223412, max_hamiltonian_energy_error = -0.08824480470769025, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9909777192377514, log_density = 13.862176751810544, hamiltonian_energy = -10.793503796625991, hamiltonian_energy_error = -0.01569247024765197, max_hamiltonian_energy_error = -0.077055188137237, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9584703537993781, log_density = 14.298491335904618, hamiltonian_energy = -12.799650981715816, hamiltonian_energy_error = -0.013274510032267983, max_hamiltonian_energy_error = 0.0948267060560184, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9841997523437412, log_density = 13.608572613034957, hamiltonian_energy = -12.721826931689227, hamiltonian_energy_error = 0.01676467187886388, max_hamiltonian_energy_error = 0.04307887565108359, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.944193082651829, log_density = 12.308369733734589, hamiltonian_energy = -10.909774275979434, hamiltonian_energy_error = 0.0956843588132017, max_hamiltonian_energy_error = 0.11859692921639287, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9746366436701084, log_density = 13.71955628558388, hamiltonian_energy = -11.057222139532918, hamiltonian_energy_error = -0.1177649294459453, max_hamiltonian_energy_error = -0.1177649294459453, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9428768766894213, log_density = 13.170624937088318, hamiltonian_energy = -11.999935611850274, hamiltonian_energy_error = 0.10619984040430452, max_hamiltonian_energy_error = 0.14887514619685227, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9272574618870097, log_density = 12.494256258153985, hamiltonian_energy = -10.064285282529712, hamiltonian_energy_error = 0.08573407086714191, max_hamiltonian_energy_error = 0.2214848097732336, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9846517448769134, log_density = 12.084366812134586, hamiltonian_energy = -10.64027569607315, hamiltonian_energy_error = 0.049046494904914084, max_hamiltonian_energy_error = -0.22926838618322876, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9658084036192716, log_density = 13.694015840360343, hamiltonian_energy = -9.542933048175659, hamiltonian_energy_error = -0.08601888372292876, max_hamiltonian_energy_error = -0.18644531747082382, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9895263256158766, log_density = 14.282190531050414, hamiltonian_energy = -12.227288556789254, hamiltonian_energy_error = -0.038331222453839686, max_hamiltonian_energy_error = -0.05662858225947609, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7818028216003121, log_density = 12.386669270206713, hamiltonian_energy = -8.848111390657312, hamiltonian_energy_error = 0.02939521322609906, max_hamiltonian_energy_error = 0.5623110726048317, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9903752367282684, log_density = 11.88206664722055, hamiltonian_energy = -10.25359304725707, hamiltonian_energy_error = -0.03369510143082621, max_hamiltonian_energy_error = -0.11091726773046595, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9401885290835382, log_density = 13.260942595433335, hamiltonian_energy = -7.730693464632848, hamiltonian_energy_error = -0.002047696929945886, max_hamiltonian_energy_error = 0.13575634677790926, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9850515583260915, log_density = 12.426813013869474, hamiltonian_energy = -11.595411555915653, hamiltonian_energy_error = 0.05296814029892616, max_hamiltonian_energy_error = 0.06737193185597157, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9533966466645738, log_density = 14.068813479483957, hamiltonian_energy = -9.92182087193763, hamiltonian_energy_error = -0.12356436888188504, max_hamiltonian_energy_error = 0.1724480210901529, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9071992644578069, log_density = 13.614727818273414, hamiltonian_energy = -11.838521110147138, hamiltonian_energy_error = 0.051890617228139035, max_hamiltonian_energy_error = 0.1635270176182022, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9249635266399705, log_density = 12.480326416583647, hamiltonian_energy = -10.75328987830016, hamiltonian_energy_error = -0.018332893307524856, max_hamiltonian_energy_error = 0.24632439754324587, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9342741526121183, log_density = 13.494754188451346, hamiltonian_energy = -10.620127439338711, hamiltonian_energy_error = -0.07992970374585262, max_hamiltonian_energy_error = 0.2197970041588153, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9926244907546008, log_density = 13.768097457251509, hamiltonian_energy = -12.189111684077941, hamiltonian_energy_error = -0.07864749796915227, max_hamiltonian_energy_error = -0.08476635975378954, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9433885337652678, log_density = 12.966680808241378, hamiltonian_energy = -11.132894242571016, hamiltonian_energy_error = 0.006256025063139603, max_hamiltonian_energy_error = 0.11658370225325498, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9499924078973332, log_density = 12.960118997065136, hamiltonian_energy = -10.07125205457342, hamiltonian_energy_error = 0.0944219550048011, max_hamiltonian_energy_error = 0.11057337665329925, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9775274681346969, log_density = 11.783813887357411, hamiltonian_energy = -10.551529670957084, hamiltonian_energy_error = 0.05130440475528708, max_hamiltonian_energy_error = -0.13323700259230797, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9876364312341328, log_density = 13.522758069434612, hamiltonian_energy = -10.18685470537385, hamiltonian_energy_error = -0.05656969286570934, max_hamiltonian_energy_error = -0.19683480255339347, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9010369658030962, log_density = 12.367724282784238, hamiltonian_energy = -7.617164498030388, hamiltonian_energy_error = -0.3088530432091341, max_hamiltonian_energy_error = -0.3088530432091341, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8536676863332028, log_density = 8.848199648777733, hamiltonian_energy = -7.083224241287823, hamiltonian_energy_error = 0.2383435930240907, max_hamiltonian_energy_error = 0.3402274315157392, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9789318765689073, log_density = 7.553815871992409, hamiltonian_energy = -5.88976000974418, hamiltonian_energy_error = 0.11565174829073932, max_hamiltonian_energy_error = -0.2714513547562696, tree_depth = 5, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.468782997377238, hamiltonian_energy = -5.792137510946637, hamiltonian_energy_error = -0.24025129250010924, max_hamiltonian_energy_error = -0.2955936511291313, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9053067623477579, log_density = 12.49634377875046, hamiltonian_energy = -7.775466133551754, hamiltonian_energy_error = 0.08852215062976398, max_hamiltonian_energy_error = 0.26285837734826956, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9964916232349597, log_density = 12.997262885973203, hamiltonian_energy = -10.93559529080989, hamiltonian_energy_error = -0.1346503780061461, max_hamiltonian_energy_error = -0.20335982600454017, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 13.756877471379765, hamiltonian_energy = -12.339926365932214, hamiltonian_energy_error = -0.0347585195545026, max_hamiltonian_energy_error = -0.07178612764669445, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.7434138512800679, log_density = 0.9032139202840774, hamiltonian_energy = 1.1264799002892167, hamiltonian_energy_error = 0.3549321137660093, max_hamiltonian_energy_error = 0.6976864814957695, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9786124858866604, log_density = 7.83082772687662, hamiltonian_energy = 0.20087880952535286, hamiltonian_energy_error = -0.12999243979771014, max_hamiltonian_energy_error = -0.5703618111279474, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8517564034917182, log_density = 4.675453557235134, hamiltonian_energy = -0.7620661056146281, hamiltonian_energy_error = 0.007464212644988422, max_hamiltonian_energy_error = 0.5882112465376981, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9851602923649786, log_density = 9.95205875052514, hamiltonian_energy = -3.1428736205413514, hamiltonian_energy_error = -0.4712363085710063, max_hamiltonian_energy_error = -0.5302558171650755, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9693427674856024, log_density = 10.29327594546928, hamiltonian_energy = -7.4660302537038135, hamiltonian_energy_error = 0.1939454970857586, max_hamiltonian_energy_error = -0.23001186359318737, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 11.750748793401977, hamiltonian_energy = -8.707263845378703, hamiltonian_energy_error = -0.08185469875113327, max_hamiltonian_energy_error = -0.2530074850280233, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9986716147494591, log_density = 14.125306891181555, hamiltonian_energy = -11.2248565196406, hamiltonian_energy_error = -0.053971511391937455, max_hamiltonian_energy_error = -0.09128837886665231, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.988380057586801, log_density = 14.166875294961628, hamiltonian_energy = -13.523477758407505, hamiltonian_energy_error = 0.015482698125463656, max_hamiltonian_energy_error = -0.028489611313847973, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8792580529767596, log_density = 13.540278972612306, hamiltonian_energy = -12.1370151375328, hamiltonian_energy_error = 0.0778590890838764, max_hamiltonian_energy_error = 0.2916658496948674, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9987840935683825, log_density = 14.049119313481876, hamiltonian_energy = -13.088063361707261, hamiltonian_energy_error = -0.0590369792862937, max_hamiltonian_energy_error = -0.14547568926943732, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9992213279596606, log_density = 14.2865739055445, hamiltonian_energy = -13.699857045583789, hamiltonian_energy_error = -0.03302126282283879, max_hamiltonian_energy_error = -0.06308453404602865, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9876896003351859, log_density = 13.336449525615734, hamiltonian_energy = -13.040565825179824, hamiltonian_energy_error = 0.03405426321242011, max_hamiltonian_energy_error = 0.03405426321242011, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9159685107053389, log_density = 11.216814398833467, hamiltonian_energy = -9.954933203815798, hamiltonian_energy_error = 0.0904116512310793, max_hamiltonian_energy_error = 0.1431987805677526, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9956677830848769, log_density = 12.311913845906581, hamiltonian_energy = -9.978829632363363, hamiltonian_energy_error = -0.01703056261556135, max_hamiltonian_energy_error = -0.11428697184865655, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9562388838642578, log_density = 13.231091535654532, hamiltonian_energy = -9.830968864490801, hamiltonian_energy_error = 0.01765386088747789, max_hamiltonian_energy_error = 0.12305037035919497, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8932732903358669, log_density = 13.411470741762898, hamiltonian_energy = -10.972650613773142, hamiltonian_energy_error = -0.0759974643471093, max_hamiltonian_energy_error = 0.31420274771455325, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.244779115375689, hamiltonian_energy = -12.88427291388665, hamiltonian_energy_error = -0.01923911766208697, max_hamiltonian_energy_error = -0.11972697884709227, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9839993799023691, log_density = 12.782020965737535, hamiltonian_energy = -12.648460250275603, hamiltonian_energy_error = 0.045898716335058154, max_hamiltonian_energy_error = -0.08318775206940643, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.989011033678291, log_density = 12.117135410787572, hamiltonian_energy = -6.546391666603002, hamiltonian_energy_error = -0.24207701835964723, max_hamiltonian_energy_error = -0.24609687116806622, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9330262701335484, log_density = 11.835742033398121, hamiltonian_energy = -9.812303941949981, hamiltonian_energy_error = 0.029739231681222833, max_hamiltonian_energy_error = 0.13502145323786507, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9933771778153895, log_density = 12.545813345643655, hamiltonian_energy = -10.36981783765014, hamiltonian_energy_error = -0.022410519032920462, max_hamiltonian_energy_error = -0.08040378032915996, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9891079557292607, log_density = 12.592749690290814, hamiltonian_energy = -11.706175521451051, hamiltonian_energy_error = 0.035790026773792505, max_hamiltonian_energy_error = -0.09993280449425157, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8468010304793661, log_density = 10.79758904058466, hamiltonian_energy = -9.46276900784169, hamiltonian_energy_error = 0.22961069841110593, max_hamiltonian_energy_error = 0.37504186713007215, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.992107406885209, hamiltonian_energy = -8.70672230706555, hamiltonian_energy_error = -0.019509636891891446, max_hamiltonian_energy_error = -0.32927494974889626, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9957936976321518, log_density = 12.42254728380436, hamiltonian_energy = -10.144451403159957, hamiltonian_energy_error = -0.02166692932862091, max_hamiltonian_energy_error = -0.3352734901580039, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9914830795794326, log_density = 12.044106943824254, hamiltonian_energy = -10.638490272514172, hamiltonian_energy_error = -0.12000405914897883, max_hamiltonian_energy_error = -0.19021149619382882, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9893582571098336, log_density = 13.943083601766912, hamiltonian_energy = -11.271793548307322, hamiltonian_energy_error = -0.10513992256393578, max_hamiltonian_energy_error = -0.12907649396096943, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9449601877682493, log_density = 13.600263370262752, hamiltonian_energy = -12.798855224581006, hamiltonian_energy_error = 0.08322050237438638, max_hamiltonian_energy_error = 0.1427436630711174, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9864822813802948, log_density = 13.009891448633775, hamiltonian_energy = -12.265561563735393, hamiltonian_energy_error = 0.00861478792894843, max_hamiltonian_energy_error = -0.107425397912845, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9989159530831266, log_density = 13.059981486218817, hamiltonian_energy = -12.427935265282159, hamiltonian_energy_error = 0.0018328664234470438, max_hamiltonian_energy_error = -0.13089352214953287, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9991683162694583, log_density = 13.513964061885732, hamiltonian_energy = -12.099569984893868, hamiltonian_energy_error = -0.10073189911992841, max_hamiltonian_energy_error = -0.147887708859205, tree_depth = 5, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9559931464080267, log_density = 9.362175558803237, hamiltonian_energy = -7.120380459529209, hamiltonian_energy_error = 0.10606204863168944, max_hamiltonian_energy_error = 0.10606204863168944, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9375761113410839, log_density = 10.583475951746124, hamiltonian_energy = -6.71908925049104, hamiltonian_energy_error = -0.13796708954701487, max_hamiltonian_energy_error = 0.25097139070388597, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9117459432944874, log_density = 10.763326520411603, hamiltonian_energy = -7.759251812482517, hamiltonian_energy_error = -0.10016789141181093, max_hamiltonian_energy_error = -0.3776035659538559, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8855509793507531, log_density = 11.647932940054432, hamiltonian_energy = -5.736546007436539, hamiltonian_energy_error = -0.20436092960347363, max_hamiltonian_energy_error = 0.4383043093751322, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9928823782438728, log_density = 14.099481727853796, hamiltonian_energy = -11.355744261523945, hamiltonian_energy_error = -0.13059384624407144, max_hamiltonian_energy_error = -0.14164492588773037, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7970090479940796, log_density = 14.434238294097147, hamiltonian_energy = -10.424404429765918, hamiltonian_energy_error = 0.023207540396695592, max_hamiltonian_energy_error = 0.48398094420612203, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9765962988781535, log_density = 14.075162098713765, hamiltonian_energy = -13.584468899405085, hamiltonian_energy_error = 0.02382118826698587, max_hamiltonian_energy_error = 0.042584942683449256, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9499342661314896, log_density = 13.234774684490926, hamiltonian_energy = -11.157975029395722, hamiltonian_energy_error = 0.09077446125555255, max_hamiltonian_energy_error = 0.11592944686974249, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9124167274438272, log_density = 12.897377400287226, hamiltonian_energy = -10.896673860364086, hamiltonian_energy_error = 0.07564053075164168, max_hamiltonian_energy_error = 0.2086613218977682, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9613708477350271, log_density = 13.080852211283613, hamiltonian_energy = -10.780789482652638, hamiltonian_energy_error = 0.04568454218289375, max_hamiltonian_energy_error = -0.16601530025172728, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9674778802625674, log_density = 12.823323076185485, hamiltonian_energy = -11.592445760211595, hamiltonian_energy_error = 0.06516008415731811, max_hamiltonian_energy_error = -0.12067327929119642, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9510935699957493, log_density = 10.832488884030974, hamiltonian_energy = -7.959237219962958, hamiltonian_energy_error = -0.2056164292270548, max_hamiltonian_energy_error = -0.21551256126910445, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9874660720748188, log_density = 11.184525227156895, hamiltonian_energy = -6.948620837805398, hamiltonian_energy_error = 0.012895351226580587, max_hamiltonian_energy_error = -0.14629591986467183, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9970172541313176, log_density = 10.985748422778876, hamiltonian_energy = -9.521088418586547, hamiltonian_energy_error = 0.021100274378483164, max_hamiltonian_energy_error = -0.0672951669259021, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9507322205670957, log_density = 13.245787905895867, hamiltonian_energy = -7.051797473082477, hamiltonian_energy_error = -0.05409760021383647, max_hamiltonian_energy_error = -0.2127050065346321, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9175001876355326, log_density = 13.971348759221343, hamiltonian_energy = -11.589698257977751, hamiltonian_energy_error = 0.02768538039578239, max_hamiltonian_energy_error = 0.205685532699464, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9686885826401272, log_density = 13.450257952961659, hamiltonian_energy = -11.735527455811393, hamiltonian_energy_error = 0.029436730812257395, max_hamiltonian_energy_error = 0.12709936038682024, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9923350350700588, log_density = 13.73457136471286, hamiltonian_energy = -12.462872637711051, hamiltonian_energy_error = -0.04876200845788503, max_hamiltonian_energy_error = -0.1261264943284175, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9941914446701479, log_density = 13.928130777048338, hamiltonian_energy = -12.659140413025998, hamiltonian_energy_error = -0.0680099109697263, max_hamiltonian_energy_error = -0.071052580608713, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9162488047526767, log_density = 12.853254782569216, hamiltonian_energy = -10.972868214847983, hamiltonian_energy_error = 0.07756807668685717, max_hamiltonian_energy_error = 0.18006247918055074, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9919672439800603, log_density = 12.350497908665757, hamiltonian_energy = -10.471601980096485, hamiltonian_energy_error = 0.00317262799040563, max_hamiltonian_energy_error = -0.07977422916672872, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9868429118889417, log_density = 11.542610457141823, hamiltonian_energy = -10.665059366573105, hamiltonian_energy_error = 0.011456269726773272, max_hamiltonian_energy_error = -0.07962442545034598, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9966996062465873, log_density = 13.928328134372876, hamiltonian_energy = -10.772700797379386, hamiltonian_energy_error = -0.06431194566777343, max_hamiltonian_energy_error = -0.08296785716499677, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8172404525532639, log_density = 13.426386677272978, hamiltonian_energy = -10.371595812033533, hamiltonian_energy_error = 0.05677655743081189, max_hamiltonian_energy_error = 0.3493755002718295, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9884363742139065, log_density = 13.013360889838484, hamiltonian_energy = -10.93479774558206, hamiltonian_energy_error = 0.02673314916533087, max_hamiltonian_energy_error = -0.09731049999079033, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.983805825448988, log_density = 13.657842513425031, hamiltonian_energy = -12.107640306075151, hamiltonian_energy_error = -0.11659041110932122, max_hamiltonian_energy_error = -0.12992077241033684, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7260041063422837, log_density = 9.097441277520426, hamiltonian_energy = -6.145567994084072, hamiltonian_energy_error = 0.5830435367946984, max_hamiltonian_energy_error = 0.5830435367946984, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9840940240199444, log_density = 9.79486149578186, hamiltonian_energy = -5.414390341164946, hamiltonian_energy_error = -0.1747306777117359, max_hamiltonian_energy_error = -0.4739713872285325, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.883755711145295, log_density = 9.164308203493302, hamiltonian_energy = -4.689017678882402, hamiltonian_energy_error = 0.22889773475436392, max_hamiltonian_energy_error = 0.42586055703296655, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9942478251992439, log_density = 11.37537664398187, hamiltonian_energy = -6.782147034506995, hamiltonian_energy_error = -0.2768027161015638, max_hamiltonian_energy_error = -0.3042025268520936, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9970688337340631, log_density = 13.184109123654645, hamiltonian_energy = -11.075356607307858, hamiltonian_energy_error = -0.14217742905042208, max_hamiltonian_energy_error = -0.1837340525822242, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6970672011608431, log_density = 10.56067600558773, hamiltonian_energy = -8.430612826706765, hamiltonian_energy_error = 0.41826406323949605, max_hamiltonian_energy_error = 0.8369870632944654, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 13.517470939421521, hamiltonian_energy = -10.67382875168303, hamiltonian_energy_error = -0.5107366382189245, max_hamiltonian_energy_error = -0.5942148569926271, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7426619515069087, log_density = 14.183816354814176, hamiltonian_energy = -7.9649372106106675, hamiltonian_energy_error = 0.07943107749608203, max_hamiltonian_energy_error = 0.5831291600600252, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9831200776892367, log_density = 13.641320193720585, hamiltonian_energy = -12.346342458134623, hamiltonian_energy_error = -0.04344368826798295, max_hamiltonian_energy_error = 0.06992787148523583, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9297234873168376, log_density = 12.703322003999956, hamiltonian_energy = -11.228306474295135, hamiltonian_energy_error = 0.042482747237901464, max_hamiltonian_energy_error = 0.1633794117986831, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9214271318226063, log_density = 11.729324906789113, hamiltonian_energy = -9.676708704119182, hamiltonian_energy_error = 0.0757827017242736, max_hamiltonian_energy_error = 0.12983375891764126, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9961147644951455, log_density = 11.776710529047577, hamiltonian_energy = -10.69439436812388, hamiltonian_energy_error = -0.018021786463625844, max_hamiltonian_energy_error = -0.04956576203493235, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9448640067755366, log_density = 10.439608124344666, hamiltonian_energy = -9.36268992812119, hamiltonian_energy_error = 0.055890434273829115, max_hamiltonian_energy_error = 0.10368642786950133, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9927585732342065, log_density = 11.032112522827108, hamiltonian_energy = -9.701573049878077, hamiltonian_energy_error = -0.012546325206141518, max_hamiltonian_energy_error = -0.06775975643070176, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.998912487868463, log_density = 11.757326942875142, hamiltonian_energy = -9.60026404509885, hamiltonian_energy_error = -0.05689930642570218, max_hamiltonian_energy_error = -0.10459353682267647, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9924205180425407, log_density = 13.697363594098164, hamiltonian_energy = -11.464910844497028, hamiltonian_energy_error = -0.056724408572689455, max_hamiltonian_energy_error = -0.056724408572689455, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9573677217964495, log_density = 13.097351920912756, hamiltonian_energy = -11.878337342753746, hamiltonian_energy_error = 0.04289592805420561, max_hamiltonian_energy_error = 0.07069144196954369, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9965505829439644, log_density = 13.721016410147602, hamiltonian_energy = -12.251253618278549, hamiltonian_energy_error = -0.029065951638957088, max_hamiltonian_energy_error = -0.04297060572772793, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9647123992392508, log_density = 14.273374038343565, hamiltonian_energy = -12.143207309541545, hamiltonian_energy_error = -0.0005835794112432069, max_hamiltonian_energy_error = 0.08927015441658348, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9088129239278812, log_density = 13.259831768982428, hamiltonian_energy = -10.52264569409186, hamiltonian_energy_error = 0.03229409430153751, max_hamiltonian_energy_error = 0.18278942022728373, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9546521701510544, log_density = 13.920120577693638, hamiltonian_energy = -11.606484712701077, hamiltonian_energy_error = -0.03617910588449291, max_hamiltonian_energy_error = 0.09681492177856477, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7684566061430605, log_density = 11.552843277950618, hamiltonian_energy = -7.207947386262223, hamiltonian_energy_error = 0.2208716292668349, max_hamiltonian_energy_error = 0.41367027344573515, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9743308941208828, log_density = 11.65047747063809, hamiltonian_energy = -9.033758846261065, hamiltonian_energy_error = 0.008542798736829837, max_hamiltonian_energy_error = -0.25569532424152897, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9965580026048576, log_density = 14.379006429271334, hamiltonian_energy = -11.264685700778033, hamiltonian_energy_error = -0.2521469063667059, max_hamiltonian_energy_error = -0.2521469063667059, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6621425652412569, log_density = 9.88879515768068, hamiltonian_energy = -8.690387495720538, hamiltonian_energy_error = 0.6183020829495316, max_hamiltonian_energy_error = 0.8606322511392737, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9945696777395308, log_density = 13.530093202736492, hamiltonian_energy = -8.241816258170566, hamiltonian_energy_error = -0.31555123538036334, max_hamiltonian_energy_error = -0.6705242261476894, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9908978080608127, log_density = 13.206970464542207, hamiltonian_energy = -11.336206411376182, hamiltonian_energy_error = -0.03219781313711323, max_hamiltonian_energy_error = -0.12213120125248267, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9400331825157993, log_density = 14.493782145222614, hamiltonian_energy = -12.150363765376945, hamiltonian_energy_error = -0.03746792352312944, max_hamiltonian_energy_error = 0.1293059625245636, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9666032773498877, log_density = 14.3824236334822, hamiltonian_energy = -13.712154410566358, hamiltonian_energy_error = 0.00214524106510261, max_hamiltonian_energy_error = 0.06591890140466639, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9487614744470148, log_density = 14.114007183514342, hamiltonian_energy = -12.231974171707314, hamiltonian_energy_error = 0.03189822856143287, max_hamiltonian_energy_error = 0.08864749793859339, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9764388290389685, log_density = 13.659538002277085, hamiltonian_energy = -13.08066032471304, hamiltonian_energy_error = 0.019683544872371783, max_hamiltonian_energy_error = 0.0553876209889701, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9922268138924082, log_density = 13.78217857991975, hamiltonian_energy = -12.5968678797054, hamiltonian_energy_error = 0.0014864086817851785, max_hamiltonian_energy_error = 0.03457117455958425, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9286774080819661, log_density = 13.002777258664933, hamiltonian_energy = -10.684779812040114, hamiltonian_energy_error = 0.07363235685942904, max_hamiltonian_energy_error = 0.15161113549641136, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9772450908489442, log_density = 13.34581946002972, hamiltonian_energy = -11.71744428246807, hamiltonian_energy_error = 0.01482456640553309, max_hamiltonian_energy_error = 0.11486756682457155, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9978041698485794, log_density = 13.951633689777033, hamiltonian_energy = -12.374695008096078, hamiltonian_energy_error = -0.08069697854803337, max_hamiltonian_energy_error = -0.13224166225321277, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.997648235474687, log_density = 13.407209295472322, hamiltonian_energy = -12.937369037339593, hamiltonian_energy_error = -0.006552286162962773, max_hamiltonian_energy_error = -0.08715417339970344, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9682555690560195, log_density = 11.258762379175943, hamiltonian_energy = -8.26500810590385, hamiltonian_energy_error = 0.03964669150997224, max_hamiltonian_energy_error = 0.09729762490251659, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8361483551455546, log_density = 7.424140134870914, hamiltonian_energy = -3.8135870376986523, hamiltonian_energy_error = 0.20472262087648474, max_hamiltonian_energy_error = 0.2904864995065042, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 55, is_accept = true, acceptance_rate = 0.9938714238848556, log_density = 7.814528864905267, hamiltonian_energy = -5.8507052877848365, hamiltonian_energy_error = 0.044733091418710735, max_hamiltonian_energy_error = -0.2983396134451439, tree_depth = 5, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9719490411986027, log_density = 11.418353260666994, hamiltonian_energy = -4.4877199182861345, hamiltonian_energy_error = 0.052291238603567436, max_hamiltonian_energy_error = -0.29055369142257614, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.95835596121041, log_density = 12.73897210665814, hamiltonian_energy = -9.941708564277741, hamiltonian_energy_error = -0.3883361484810859, max_hamiltonian_energy_error = -0.3883361484810859, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8556871849860133, log_density = 12.082087970157726, hamiltonian_energy = -8.732401566794836, hamiltonian_energy_error = 0.07976883508186283, max_hamiltonian_energy_error = 0.3211069993020921, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9707978788023061, log_density = 13.856606989495585, hamiltonian_energy = -8.779929334291324, hamiltonian_energy_error = -0.07209672231510567, max_hamiltonian_energy_error = 0.103105638493318, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.868803271821296, log_density = 13.02203207455005, hamiltonian_energy = -10.832724000389032, hamiltonian_energy_error = 0.17787694488218797, max_hamiltonian_energy_error = 0.29636844989435396, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.97955382991163, log_density = 12.151221509019674, hamiltonian_energy = -9.440964531511584, hamiltonian_energy_error = -0.09260112245083718, max_hamiltonian_energy_error = -0.16404063848407446, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8341627929527349, log_density = 13.552162355128214, hamiltonian_energy = -7.62765495653156, hamiltonian_energy_error = -0.006904141465692071, max_hamiltonian_energy_error = 0.33759590958436014, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9839468398717683, log_density = 14.040212136036962, hamiltonian_energy = -12.481935049226951, hamiltonian_energy_error = -0.07538200115787674, max_hamiltonian_energy_error = -0.1194137695402624, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7133498124855763, log_density = 10.527394316817013, hamiltonian_energy = -7.578800232862732, hamiltonian_energy_error = 0.45204899669951804, max_hamiltonian_energy_error = 0.5556518691253336, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8833667916054624, log_density = 8.832963172823034, hamiltonian_energy = -5.388479734878406, hamiltonian_energy_error = -0.08091016829835063, max_hamiltonian_energy_error = 0.3971566761981702, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 13.106507168600444, hamiltonian_energy = -7.2456832656351295, hamiltonian_energy_error = -0.3247006620282846, max_hamiltonian_energy_error = -0.3247006620282846, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9817269847871675, log_density = 12.161597980138772, hamiltonian_energy = -10.043650967654836, hamiltonian_energy_error = 0.046172596824934686, max_hamiltonian_energy_error = -0.05713271097010697, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9796634424753137, log_density = 12.166391256547033, hamiltonian_energy = -8.672140624289746, hamiltonian_energy_error = -0.05816146011636647, max_hamiltonian_energy_error = -0.11673650139805147, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9566428124186694, log_density = 12.722592643637391, hamiltonian_energy = -10.537917394059697, hamiltonian_energy_error = 0.08629979970003454, max_hamiltonian_energy_error = 0.10232033706574484, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9980486896017257, log_density = 13.56707072419379, hamiltonian_energy = -12.35440272810059, hamiltonian_energy_error = -0.024289367695457642, max_hamiltonian_energy_error = -0.07367522114486746, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8168673765916654, log_density = 12.616463884386697, hamiltonian_energy = -10.259528506722488, hamiltonian_energy_error = 0.2614155184308249, max_hamiltonian_energy_error = 0.3432340665285718, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9813173062955145, log_density = 12.550719693491203, hamiltonian_energy = -8.677601499856753, hamiltonian_energy_error = -0.1594775283416805, max_hamiltonian_energy_error = -0.33329282188708476, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.994606153065882, log_density = 14.365090638639305, hamiltonian_energy = -10.859683484842318, hamiltonian_energy_error = -0.12033752810759246, max_hamiltonian_energy_error = -0.1512528400933313, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9847529046127401, log_density = 13.028624447818117, hamiltonian_energy = -12.60994362015354, hamiltonian_energy_error = 0.03794303905920593, max_hamiltonian_energy_error = 0.03794303905920593, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8456576769721675, log_density = 13.60767189826665, hamiltonian_energy = -11.311488495700832, hamiltonian_energy_error = 0.07136666825758375, max_hamiltonian_energy_error = 0.28753516380569266, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.969464366608394, log_density = 12.358006921590562, hamiltonian_energy = -11.331113323245852, hamiltonian_energy_error = 0.061671811928478704, max_hamiltonian_energy_error = 0.08296418481263679, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.941268825677841, log_density = 12.715289881833854, hamiltonian_energy = -9.68017584133155, hamiltonian_energy_error = 0.05995327531835848, max_hamiltonian_energy_error = 0.17136035454473664, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9252097248416832, log_density = 13.48000661525129, hamiltonian_energy = -11.252128017958773, hamiltonian_energy_error = -0.12833753073807763, max_hamiltonian_energy_error = 0.2540807408942527, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9667159101088594, log_density = 13.960587822168666, hamiltonian_energy = -11.847260377664496, hamiltonian_energy_error = -0.002201572094003623, max_hamiltonian_energy_error = -0.10416830242164288, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9881907254734613, log_density = 14.420511365247185, hamiltonian_energy = -13.55905849379399, hamiltonian_energy_error = -0.08025986752033454, max_hamiltonian_energy_error = -0.10466075941359065, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8984219974588952, log_density = 12.67764463445034, hamiltonian_energy = -11.55348572930925, hamiltonian_energy_error = 0.17840731594408865, max_hamiltonian_energy_error = 0.20139272482000514, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9088613097657976, log_density = 13.762111572103578, hamiltonian_energy = -9.083595135211883, hamiltonian_energy_error = -0.2648668890955648, max_hamiltonian_energy_error = 0.29128778084323415, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8492661582347367, log_density = 12.1102295082894, hamiltonian_energy = -11.225340532315636, hamiltonian_energy_error = 0.21276423470855654, max_hamiltonian_energy_error = 0.29193307019035863, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.99890969585158, log_density = 10.219980101770588, hamiltonian_energy = -7.669925472543117, hamiltonian_energy_error = 0.016489774329177642, max_hamiltonian_energy_error = -0.27046375800624034, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9973922109280091, log_density = 12.102803949530818, hamiltonian_energy = -9.018618491657506, hamiltonian_energy_error = -0.1475524951186138, max_hamiltonian_energy_error = -0.18785769632765792, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9858276185692049, log_density = 10.928341584805342, hamiltonian_energy = -10.743816016196746, hamiltonian_energy_error = 0.04344746335383576, max_hamiltonian_energy_error = -0.05043921497515491, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8892087763299173, log_density = 11.289228944346739, hamiltonian_energy = -6.702667653859308, hamiltonian_energy_error = 0.1670897689261981, max_hamiltonian_energy_error = 0.24557734251117225, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.606885036155466, hamiltonian_energy = -9.665811903643048, hamiltonian_energy_error = -0.05121948628671369, max_hamiltonian_energy_error = -0.18154711673407498, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.966315377196009, log_density = 10.135257643563486, hamiltonian_energy = -6.778773653961959, hamiltonian_energy_error = -0.010018815435387296, max_hamiltonian_energy_error = -0.13734067582076737, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.913002925226452, hamiltonian_energy = -9.588567537620406, hamiltonian_energy_error = -0.036964915068919524, max_hamiltonian_energy_error = -0.11477089287702391, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9798630722700626, log_density = 10.414587039508682, hamiltonian_energy = -10.117870654726367, hamiltonian_energy_error = 0.028599838132791433, max_hamiltonian_energy_error = -0.04243687265932117, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7344758655847815, log_density = 6.657293567393495, hamiltonian_energy = -2.1166297145595108, hamiltonian_energy_error = 0.45253586522233835, max_hamiltonian_energy_error = 0.6106430117497348, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9571002704589555, log_density = 10.068154019921232, hamiltonian_energy = -3.777923567575275, hamiltonian_energy_error = -0.4128074485526323, max_hamiltonian_energy_error = -0.7462876429800644, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9518176346216223, log_density = 12.352589880572468, hamiltonian_energy = -7.698836107250957, hamiltonian_energy_error = -0.18022690726780777, max_hamiltonian_energy_error = -0.3477398597685113, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9750930004391637, log_density = 12.491149074626659, hamiltonian_energy = -10.190851350282857, hamiltonian_energy_error = 0.014119047032489007, max_hamiltonian_energy_error = -0.08552287493489175, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9893268495877939, log_density = 11.688965188659601, hamiltonian_energy = -10.269398770344683, hamiltonian_energy_error = 0.042495003882761395, max_hamiltonian_energy_error = -0.1457106453393049, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 13.318269565434555, hamiltonian_energy = -11.25498387236771, hamiltonian_energy_error = -0.07160891844624118, max_hamiltonian_energy_error = -0.07160891844624118, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9160924467006045, log_density = 13.740998990889889, hamiltonian_energy = -11.488295847483624, hamiltonian_energy_error = 0.06451405557582035, max_hamiltonian_energy_error = 0.25876553675036007, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9933671358274905, log_density = 12.45284441450203, hamiltonian_energy = -12.129824079833663, hamiltonian_energy_error = 0.04754249450098236, max_hamiltonian_energy_error = -0.11172098893363902, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9450964684449811, log_density = 14.058424195902045, hamiltonian_energy = -11.219717159951127, hamiltonian_energy_error = -0.06588487625218953, max_hamiltonian_energy_error = 0.20123233713289146, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8786886650770879, log_density = 13.087748600459332, hamiltonian_energy = -11.711821660256419, hamiltonian_energy_error = 0.13944416630744882, max_hamiltonian_energy_error = 0.38744175502559486, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9814889507789506, log_density = 12.433844724494143, hamiltonian_energy = -10.980579491842416, hamiltonian_energy_error = 0.07837140329041858, max_hamiltonian_energy_error = -0.15059948048057947, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 14.467070137301956, hamiltonian_energy = -11.848102340818595, hamiltonian_energy_error = -0.2238001251326196, max_hamiltonian_energy_error = -0.2238001251326196, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.965988784056565, log_density = 14.162531925346164, hamiltonian_energy = -12.707902231663374, hamiltonian_energy_error = -0.0061906656137882266, max_hamiltonian_energy_error = 0.07650510270629951, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8727472098828134, log_density = 10.383355921649818, hamiltonian_energy = -9.47024160199237, hamiltonian_energy_error = 0.17723967691890508, max_hamiltonian_energy_error = 0.17723967691890508, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9954453961338571, log_density = 13.471513142133968, hamiltonian_energy = -9.729144987970544, hamiltonian_energy_error = -0.06024477560868213, max_hamiltonian_energy_error = -0.11445306595534888, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9819295186214658, log_density = 13.920543507416802, hamiltonian_energy = -12.748935039912377, hamiltonian_energy_error = 0.013591824695089016, max_hamiltonian_energy_error = 0.05637919196227159, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8871313608948204, log_density = 12.522867454703075, hamiltonian_energy = -9.174982201807191, hamiltonian_energy_error = 0.005450512142145314, max_hamiltonian_energy_error = 0.3087997900752981, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7804991420958776, log_density = 14.040307184732534, hamiltonian_energy = -9.404737953789219, hamiltonian_energy_error = -0.02830366093478176, max_hamiltonian_energy_error = 0.5724993267377236, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9701265340700139, log_density = 13.968162753013845, hamiltonian_energy = -12.968608331242367, hamiltonian_energy_error = 0.02618085020494476, max_hamiltonian_energy_error = 0.05389274533188804, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.938903841425513, log_density = 11.335472373249974, hamiltonian_energy = -10.30347411905911, hamiltonian_energy_error = 0.039598261329093276, max_hamiltonian_energy_error = 0.12429020273794933, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8842692123231695, log_density = 11.718918097745638, hamiltonian_energy = -8.081544104734164, hamiltonian_energy_error = 0.004766984513196348, max_hamiltonian_energy_error = 0.22337494795084378, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9372260163505396, log_density = 13.25222363001421, hamiltonian_energy = -8.321802723800939, hamiltonian_energy_error = -0.0707804119938018, max_hamiltonian_energy_error = 0.21269680371822197, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9980937334824217, log_density = 13.77450687755371, hamiltonian_energy = -12.273895976452975, hamiltonian_energy_error = -0.005633581411897737, max_hamiltonian_energy_error = -0.03169317998631449, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9683171813028015, log_density = 12.808595474449254, hamiltonian_energy = -11.040600193228258, hamiltonian_energy_error = 0.04407836064521753, max_hamiltonian_energy_error = 0.07451340727179989, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9993414597455844, log_density = 14.366609117696779, hamiltonian_energy = -12.429992575084652, hamiltonian_energy_error = -0.06503094941233734, max_hamiltonian_energy_error = -0.06503094941233734, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9722928688117716, log_density = 14.140120248837817, hamiltonian_energy = -13.616728248321026, hamiltonian_energy_error = 0.049179981697642816, max_hamiltonian_energy_error = 0.058120226427515576, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9509236277582477, log_density = 13.135003184708069, hamiltonian_energy = -12.42802445810214, hamiltonian_energy_error = 0.10809658925239951, max_hamiltonian_energy_error = 0.11792667007145141, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9868093854387168, log_density = 13.895625741787889, hamiltonian_energy = -10.22772760661533, hamiltonian_energy_error = -0.1786219884163689, max_hamiltonian_energy_error = -0.1786219884163689, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9873054069058504, log_density = 12.809617764237224, hamiltonian_energy = -12.213115833578913, hamiltonian_energy_error = 0.019751703014888378, max_hamiltonian_energy_error = 0.035780675342008905, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8251765045765465, log_density = 13.9017847284344, hamiltonian_energy = -10.340240653285989, hamiltonian_energy_error = -0.011628764576357753, max_hamiltonian_energy_error = 0.29610460488623325, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9618726766976018, log_density = 13.782053004593509, hamiltonian_energy = -12.302379296147045, hamiltonian_energy_error = 0.019562203017008173, max_hamiltonian_energy_error = 0.08030555230787328, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9401825862553856, log_density = 13.035688080776897, hamiltonian_energy = -11.834043315143434, hamiltonian_energy_error = 0.07728551008178108, max_hamiltonian_energy_error = 0.1010235200794174, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.881719876589558, log_density = 11.38189049045609, hamiltonian_energy = -9.742539082880537, hamiltonian_energy_error = 0.21552706998345883, max_hamiltonian_energy_error = 0.2875301352857669, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9827691277093281, log_density = 12.087146596736385, hamiltonian_energy = -9.316260483396315, hamiltonian_energy_error = -0.2306329566748655, max_hamiltonian_energy_error = -0.2306329566748655, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9708875850868576, log_density = 13.926131755764684, hamiltonian_energy = -9.99406105834646, hamiltonian_energy_error = -0.045137012604046234, max_hamiltonian_energy_error = 0.11938814996917912, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9952285178832556, log_density = 13.837083408936726, hamiltonian_energy = -12.26354878430988, hamiltonian_energy_error = -0.009527289024049423, max_hamiltonian_energy_error = 0.019063469641269037, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9504418205457296, log_density = 13.272256314366238, hamiltonian_energy = -12.033724037900832, hamiltonian_energy_error = 0.03434058764630343, max_hamiltonian_energy_error = 0.0798106745037579, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9965377124347218, log_density = 13.743239562339209, hamiltonian_energy = -12.552257457777744, hamiltonian_energy_error = -0.0006996580288163301, max_hamiltonian_energy_error = -0.05234515363232184, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8077235015145973, log_density = 11.670893857875459, hamiltonian_energy = -10.1840340281128, hamiltonian_energy_error = 0.32110217733609403, max_hamiltonian_energy_error = 0.5443300551278192, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9828558965669744, log_density = 13.052260063334733, hamiltonian_energy = -8.81344400935476, hamiltonian_energy_error = -0.2926877797303131, max_hamiltonian_energy_error = -0.2926877797303131, tree_depth = 2, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.93246950536614, log_density = 13.629777551514799, hamiltonian_energy = -9.966111430540547, hamiltonian_energy_error = 0.03670933657502751, max_hamiltonian_energy_error = 0.19000277147312694, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8995878679104805, log_density = 14.346457198040717, hamiltonian_energy = -10.780415275773311, hamiltonian_energy_error = -0.14048731738507314, max_hamiltonian_energy_error = 0.2278267853414757, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9917484656662409, log_density = 14.129879443148251, hamiltonian_energy = -13.91367961975258, hamiltonian_energy_error = -0.000427571187186615, max_hamiltonian_energy_error = 0.021994244678943176, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9118346372660358, log_density = 13.960603759973605, hamiltonian_energy = -12.238306214093313, hamiltonian_energy_error = 0.06256708837340241, max_hamiltonian_energy_error = 0.20155355518532048, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8273094714605601, log_density = 13.800796209206407, hamiltonian_energy = -10.6885188552771, hamiltonian_energy_error = 0.009007711695202758, max_hamiltonian_energy_error = 0.3493856144650458, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9192566013990321, log_density = 12.37020219522366, hamiltonian_energy = -11.223323325505836, hamiltonian_energy_error = 0.1417102166402735, max_hamiltonian_energy_error = 0.17834106467455335, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.982950260735083, log_density = 13.532244021597165, hamiltonian_energy = -11.269242954461816, hamiltonian_energy_error = -0.09685004867934488, max_hamiltonian_energy_error = -0.17548831971730117, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9906714075099895, log_density = 12.661406022134884, hamiltonian_energy = -11.447346118383082, hamiltonian_energy_error = 0.03343594108755532, max_hamiltonian_energy_error = -0.10069006957591675, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8137884545859517, log_density = 9.034372448695814, hamiltonian_energy = -7.461216220570241, hamiltonian_energy_error = 0.38345887360090813, max_hamiltonian_energy_error = 0.5112562887299958, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.025762324558306, hamiltonian_energy = -7.666441748381937, hamiltonian_energy_error = -0.19711891667585935, max_hamiltonian_energy_error = -0.5081713782233539, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9938512793442215, log_density = 13.164137203680067, hamiltonian_energy = -11.422070315270641, hamiltonian_energy_error = -0.17239287913876922, max_hamiltonian_energy_error = -0.2957486897451034, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9924662139153156, log_density = 13.612347995321814, hamiltonian_energy = -11.625822238452598, hamiltonian_energy_error = -0.060594429419733586, max_hamiltonian_energy_error = -0.11934778355966813, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9098894900873463, log_density = 12.291692045247515, hamiltonian_energy = -10.360549034953404, hamiltonian_energy_error = 0.1360359190700855, max_hamiltonian_energy_error = 0.17383945119486732, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9364854461855618, log_density = 12.817679990241972, hamiltonian_energy = -8.912850418460588, hamiltonian_energy_error = -0.011825121940892913, max_hamiltonian_energy_error = 0.1748279780832629, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9565387433905919, log_density = 10.76867399006494, hamiltonian_energy = -9.512934410150581, hamiltonian_energy_error = 0.08797167406626016, max_hamiltonian_energy_error = 0.16331517674199603, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9989074034361877, log_density = 13.735225675863646, hamiltonian_energy = -10.664748727721658, hamiltonian_energy_error = -0.17741295442209193, max_hamiltonian_energy_error = -0.21852504137007323, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9823926110399, log_density = 13.691896487027009, hamiltonian_energy = -12.524677474638302, hamiltonian_energy_error = 0.031199204010276205, max_hamiltonian_energy_error = 0.05754042002604898, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9092337197084998, log_density = 12.53920759965807, hamiltonian_energy = -10.345763312030993, hamiltonian_energy_error = -0.008078026650046866, max_hamiltonian_energy_error = 0.19406225104498276, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8576331087222708, log_density = 12.48204618340956, hamiltonian_energy = -9.541628310425645, hamiltonian_energy_error = 0.03332721695159613, max_hamiltonian_energy_error = 0.3111307377408856, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9524151276371968, log_density = 12.562826339612908, hamiltonian_energy = -10.706248546379209, hamiltonian_energy_error = 0.019103661525951665, max_hamiltonian_energy_error = 0.1300883779366231, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9895507029792461, log_density = 12.185375188540629, hamiltonian_energy = -10.923937366503269, hamiltonian_energy_error = 0.02731371563653262, max_hamiltonian_energy_error = -0.10667233958578493, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.985228821504353, log_density = 12.218648142414668, hamiltonian_energy = -7.714561504200779, hamiltonian_energy_error = -0.15303446831978995, max_hamiltonian_energy_error = -0.20739823498344734, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9279947652208045, log_density = 12.984030248225126, hamiltonian_energy = -9.975577532055377, hamiltonian_energy_error = 0.012513223361752424, max_hamiltonian_energy_error = 0.1716631781443425, tree_depth = 4, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.790529653511803, log_density = 13.42220095077359, hamiltonian_energy = -9.248064805107848, hamiltonian_energy_error = 0.18817318224442126, max_hamiltonian_energy_error = 0.3473304477207133, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7720609727171102, log_density = 13.023266754971848, hamiltonian_energy = -2.859357794870716, hamiltonian_energy_error = -0.111434568595838, max_hamiltonian_energy_error = 0.5528235180768344, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.942515448794364, log_density = 14.265730587073417, hamiltonian_energy = -11.670374313072562, hamiltonian_energy_error = 0.024804802863185316, max_hamiltonian_energy_error = 0.12162028786757517, tree_depth = 3, numerical_error = false, step_size = 0.11218110078397782, nom_step_size = 0.11218110078397782, is_adapt = false)])","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Inspect posterior distribution over hyperparameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"hypers = map(unpack, samples);\nh_l1 = histogram(getindex.(hypers, :l1); label=\"l1\");\nh_l2 = histogram(getindex.(hypers, :l2); label=\"l2\");\nh_s1 = histogram(getindex.(hypers, :s1); label=\"s1\");\nh_s2 = histogram(getindex.(hypers, :s2); label=\"s2\");\nplot(h_l1, h_l2, h_s1, h_s2; layout=(2, 2))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As expected, the sampler converges to the posterior distribution quickly. One could combine this code with that from the previous sections to make predictions under the posterior over the hyperparameters.","category":"page"},{"location":"examples/getting_started/#Conclusion","page":"Getting Started","title":"Conclusion","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you now know how to fit GPs using Stheno.jl, and to investigate their posterior distributions. It's also straightforward to utilise Stheno.jl inside probabilistic programming frameworks like Soss.jl and Turing.jl (see examples folder).","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Stheno.jl","page":"Home","title":"Stheno.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Stheno.jl is a package for probabilistic programming with Gaussian processes.","category":"page"},{"location":"internals/#Interfaces","page":"Internals","title":"Interfaces","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The primary objects in Stheno are some special subtypes of AbstractGP. There are three primary concrete subtypes of AbstractGP:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP: an atomic Gaussian process given by wrapping an AbstractGP.\nCompositeGP: a Gaussian process composed of other WrappedGPs and CompositeGPs, whose properties are determined recursively from the GPs of which it is composed.\nGaussianProcessProbabilisticProgramme / GPPP: a Gaussian process comprising WrappedGPs and CompositeGPs. This is the primary piece of functionality that users should interact with.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This documentation provides the information necessary to understand the internals of Stheno, and to extend it with custom functionality.","category":"page"},{"location":"internals/#AbstractGP","page":"Internals","title":"AbstractGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP and CompositeGP implement the AbstractGPs.jl API. Please refer to the AbstractGPs.jl docs for more info on this.","category":"page"},{"location":"internals/#diag-methods","page":"Internals","title":"diag methods","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It is crucial for pseudo-point methods, and for the computation of marginal statistics at a reasonable scale, to be able to compute the diagonal of a given covariance matrix in linear time in the size of its inputs. This, in turn, necessitates that the diagonal of a given cross-covariance matrix can also be computed efficiently as the evaluation of covariance matrices often rely on the evaluation of cross-covariance matrices. As such, we have the following functions in addition to the AbstractGPs API implemented for WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Function Brief description\nvar(f, x) diag(cov(f, x))\nvar(f, x, x′) diag(cov(f, x, x′))\nvar(f, f′, x, x′) diag(cov(f, f′, x, x′))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The second and third rows of the table only make sense when length(x) == length(x′), of course.","category":"page"},{"location":"internals/#WrappedGP","page":"Internals","title":"WrappedGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"We can construct a WrappedGP in the following manner:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = wrap(GP(m, k), gpc)\n","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"where m is its MeanFunction, k its Kernel. gpc is a GPC object that handles some book-keeping, and is discussed in more depth below.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The AbstractGP interface is implemented for WrappedGPs in terms of the AbstractGP that they wrap. So if you want a particular behaviour, just make sure that the AbstractGP that you wrap has the functionality you want.","category":"page"},{"location":"internals/#Aside:-Example-Kernel-implementation","page":"Internals","title":"Aside: Example Kernel implementation","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It's straightforward to implement a new kernel yourself: simply following the instructions in KernelFunctions.jl and it'll work fine with GPs in Stheno.jl.","category":"page"},{"location":"internals/#GPC","page":"Internals","title":"GPC","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"This book-keeping object doesn't matter from a user's perspective but, unfortunately, we currently expose it to users. Fortunately, it's straightforward to work with. Say you wish to construct a collection of processes:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS WON'T WORK\nf = GP(mf, kf)\ng = GP(mg, kg)\nh = f + g\n# THIS WON'T WORK","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"You should write","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS GOOD. PLEASE DO THIS\ngpc = GPC()\nf = wrap(GP(mf, kf), gpc)\ng = wrap(GP(mg, kg), gpc)\nh = f + g\n# THIS IS GOOD. PLEASE DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The rule is simple: when constructing GPs that you plan to make interact later in your program, construct them using the same gpc object. For example, DON'T do the following:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS BAD. PLEASE DON'T DO THIS\nf = wrap(GP(mf, kf), GPC())\ng = wrap(GP(mg, kg), GPC())\nh = f + g\n# THIS IS BAD. PLEASE DON'T DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The mistake here is to construct a separate GPC object for each GP. Hopefully, the code errors, but might yield incorrect results.","category":"page"},{"location":"internals/#CompositeGP","page":"Internals","title":"CompositeGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"CompositeGPs are constructed as affine transformations of CompositeGPs and GPs. We describe the implemented transformations below.","category":"page"},{"location":"internals/#Addition","page":"Internals","title":"Addition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Given AbstractGPs f and g, we define","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f + g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"to be the CompositeGP sastisfying h(x) = f(x) + g(x) for all x.","category":"page"},{"location":"internals/#Multiplication","page":"Internals","title":"Multiplication","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Multiplication of AbstractGPs is undefined since the product of two Gaussian random variables is not itself Gaussian. However, we can scale an AbstractGP by either a constant or (deterministic) function.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = c * f\nh = sin * f","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"will both work, and produce the result that h(x) = c * f(x) or h(x) = sin(x) * f(x).","category":"page"},{"location":"internals/#Composition","page":"Internals","title":"Composition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f ∘ g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for some deterministic function g is the composition of f with g. i.e. h(x) = f(g(x)).","category":"page"},{"location":"internals/#cross","page":"Internals","title":"cross","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = cross([f, g])","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for WrappedGPs and CompositeGPs f and g. Think of cross as having stacked f and g together, so that you can work with their joint.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"For example, if you wanted to sample jointly from f and g at locations x_f and x_g, you could write something like","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"fg = cross([f, g])\nx_fg = BlockData([x_f, x_g])\nrand(fg(x_fg, 1e-6))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This particular function isn't part of the user-facing API because it isn't generally needed. It is, however, used extensively in the implementation of the GaussianProcessProbabilisticProgramme.","category":"page"},{"location":"internals/#GPPP","page":"Internals","title":"GPPP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The GaussianProcessProbabilisticProgramme is another AbstractGP which enables provides a thin layer of convenience functionality on top of WrappedGPs and CompositeGPs, and is the primary way in which it is intended that users will interact with this package.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP like this","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"is equivalent to manually constructing a GPPP using WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"gpc = GPC()\nf1 = wrap(GP(SEKernel()), gpc)\nf2 = wrap(GP(SEKernel()), gpc)\nf3 = f1 + f2\nf = Stheno.GPPP((f1=f1, f2=f2, f3=f3), gpc)","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"If you take a look at the gaussian_process_probabilistic_programming.jl source, you'll see that it's essentially just the above, and an implementation of the AbstractGPs API on top of a GPPP.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP is a single GP on an extended input domain: (Image: )","category":"page"}]
}
