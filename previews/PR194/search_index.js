var documenterSearchIndex = {"docs":
[{"location":"api/#Public-API","page":"API","title":"Public API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = Stheno","category":"page"},{"location":"api/#GPPP","page":"API","title":"GPPP","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Core functionality for working with GPPPs.","category":"page"},{"location":"api/","page":"API","title":"API","text":"@gppp\nGPPPInput\nBlockData\nsplit","category":"page"},{"location":"api/#Stheno.@gppp","page":"API","title":"Stheno.@gppp","text":"@gppp(model_expression)\n\nConstruct a GaussianProcessProbabilisticProgramme (GPPP) from a code snippet.\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = GPPPInput(:f3, randn(5))\n\ny = rand(f(x, 0.1))\n\nlogpdf(f(x, 0.1), y) ≈ elbo(f(x, 0.1), y, f(x, 1e-9))\n\n# output\n\ntrue\n\n\n\n\n\n","category":"macro"},{"location":"api/#Stheno.GPPPInput","page":"API","title":"Stheno.GPPPInput","text":"GPPPInput(p, x::AbstractVector)\n\nAn collection of inputs for a GPPP. p indicates which process the vector x should be extracted from. The required type of p is determined by the type of the keys in the GPPP indexed.\n\njulia> x = [1.0, 1.5, 0.3];\n\njulia> v = GPPPInput(:a, x)\n3-element GPPPInput{Symbol, Float64, Vector{Float64}}:\n (:a, 1.0)\n (:a, 1.5)\n (:a, 0.3)\n\njulia> v isa AbstractVector{Tuple{Symbol, Float64}}\ntrue\n\njulia> v == map(x_ -> (:a, x_), x)\ntrue\n\n\n\n\n\n","category":"type"},{"location":"api/#Stheno.BlockData","page":"API","title":"Stheno.BlockData","text":"BlockData{T, TV<:AbstractVector{T}, TX<:AbstractVector{TV}} <: AbstractVector{T}\n\nA strictly ordered collection of AbstractVectors, representing a ragged array of data.\n\nVery useful when working with GPPPs. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\n# Specify a `BlockData` set that can be used to index into\n# the `f2` and `f3` processes in `f`.\nx = BlockData(\n    GPPPInput(:f2, randn(4)),\n    GPPPINput(:f3, randn(3)),\n)\n\n# Index into `f` at the input.\nf(x)\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.split","page":"API","title":"Base.split","text":"Base.split(x::BlockData, Y::AbstractVecOrMat)\n\nConvenience functionality to make working with the output of operations on GPPPs easier. Splits up the rows of Y according to the sizes of the data in x.\n\njulia> Y = vcat(randn(5, 3), randn(4, 3));\n\njulia> x = BlockData(randn(5), randn(4));\n\njulia> Y1, Y2 = split(x, Y);\n\njulia> Y1 == Y[1:5, :]\ntrue\n\njulia> Y2 == Y[6:end, :]\ntrue\n\nWorks with any BlockData, so blocks can e.g. be GPPPInputs. This is particularly helpful for working with the output from rand and marginals from a GPPP indexed at BlockData. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = BlockData(GPPPInput(:f2, randn(3)), GPPPInput(:f3, randn(4)))\ny = rand(f(x))\ny2, y3 = split(x, y)\n\nFunctionality also works with any AbstractVector.\n\n\n\n\n\n","category":"function"},{"location":"api/#Building-GPPPs","page":"API","title":"Building GPPPs","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"If in doubt about what any of these transformations can do, play around with them!","category":"page"},{"location":"api/","page":"API","title":"API","text":"+\n*\nstretch\nperiodic\nshift\nselect","category":"page"},{"location":"api/#Base.:+","page":"API","title":"Base.:+","text":"+(fa::AbstractGP, fb::AbstractGP)\n\nProduces an AbstractGP f satisfying f(x) = fa(x) + fb(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.:*","page":"API","title":"Base.:*","text":"*(f, g::AbstractGP)\n\nProduce an AbstractGP h satisfying to h(x) = f(x) * g(x), for some deterministic function f.\n\nIf f isa Real, then h(x) = f * g(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.stretch","page":"API","title":"Stheno.stretch","text":"stretch(f::AbstractGP, l::Union{AbstractVecOrMat{<:Real}, Real})\n\nThis is the primary mechanism by which to introduce length scales to your programme.\n\nIf l isa Real or l isa AbstractMatrix{<:Real}, stretch(f, l)(x) == f(l * x) for any input x. In the l isa Real case, this is equivalent to scaling the length scale by 1 / l.\n\nl isa AbstractVector{<:Real} is equivalent to stretch(f, Diagonal(l)).\n\nEquivalent to f ∘ Stretch(l).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.periodic","page":"API","title":"Stheno.periodic","text":"periodic(g::AbstractGP, f::Real)\n\nProduce an AbstractGP with period f.\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.shift","page":"API","title":"Stheno.shift","text":"shift(f::AbstractGP, a::Real)\nshift(f::AbstractGP, a::AbstractVector{<:Real})\n\nReturns the GP g given by g(x) = f(x - a)\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.select","page":"API","title":"Stheno.select","text":"select(f::AbstractGP, idx)\n\nSelect the dimensions of the input to f given by idx.\n\n\n\n\n\n","category":"function"},{"location":"input_types/#Input-Types","page":"Input Types","title":"Input Types","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Stheno enables the user to handle any type of input domain they wish and provides a common API that users must implement when considering a new way of representing input data to ensure that the package knows how to handle them appropriately.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"This interface has now been adopted throughout the JuliaGaussianProcesses ecosystem.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Discussed below is this interface's core assumptions, a detailed account of a couple of important concrete input types.","category":"page"},{"location":"input_types/#The-Central-Assumption","page":"Input Types","title":"The Central Assumption","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"The central assumption made in all user-facing and internal functions is this: when a collection of inputs are required, they subtype AbstractVector. For example, x isa AbstractVector when indexing into a GP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f(x, σ²)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"or computing the covariance matrix associated with a kernel:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"kernelmatrix(SqExponentialKernel(), x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When computing the cross-covariance matrix between two GPs","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"cov(f, g, x_f, x_g)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_f and x_g must be AbstractVectors. All other operations involving collections of inputs have the same restrictions. Always AbstractVectors.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"For example, this means that when handling multi-dimensional inputs stored in a Matrix they must be wrapped so that the package knows to treat them as a vector — more on this in below in D-dimensional Euclidean Spaces.","category":"page"},{"location":"input_types/#Dimensional-Euclidean-Space","page":"Input Types","title":"1-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When constructing a GP whose domain is the real-line, for example when using a GP to solve some kind of time-series problem, it is sufficient to work with Vector{<:Real}s of inputs. As such, the following is completely valid:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"using Stheno: GPC\nf = wrap(GP(SqExponentialKernel()), GPC())\nx = randn(10)\nf(x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"It is also possible to work with other AbstractArrays that represent a vector of 1-dimensional points, e.g.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = range(-5.0, 5.0; length=100)\nf(x)","category":"page"},{"location":"input_types/#D-Dimensional-Euclidean-Space","page":"Input Types","title":"D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Many applications of interest involve more than a single input-dimension, such as spatio-temporal modeling or Machine Learning tasks. For these cases, we provide ColVecs <: AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"X_data = randn(5, 100)\nX = ColVecs(X_data)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"tells Stheno that it should treat each column of X_data as a vector-valued input. Phrased differently, X is an AbstractVector{T} where T <: Vector{<:Real}, which stores its elements in memory as a dense matrix. This approach has the advantage of making it completely explicit how Stheno treats a matrix of data, and also simplifies quite a bit of the internal machinery, as all vectors of inputs can be assumed to be a subtype of AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If, on the other hand, each row of X_data corresponds to a vector-valued input, use RowVecs(X_data).","category":"page"},{"location":"input_types/#Structure-in-D-Dimensional-Euclidean-Space","page":"Input Types","title":"Structure in D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Consider a rectilinear grid of points in D-dimensional Euclidean space. Such grids of points can be represented in a more memory-efficient manner than can arbitrarily locate sets of points. Moreover, this structure can be exploited to accelerate inference for certain types of problems dramatically. Other such examples exist e.g., uniform grids in N-dimensions, and can be exploited to more efficiently represent input data and to accelerate inference.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Work to exploit these kinds of structures is on-going at the time of writing and will be documented before merging.","category":"page"},{"location":"input_types/#GPPPInput-and-BlockData","page":"Input Types","title":"GPPPInput and BlockData","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"A GPPPInput is a special kind of AbstractVector, specifically designed for GPPPs. Given a GPPP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"a GPPPInput like","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_ = randn(5)\nx = GPPPInput(:f3, x_)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"applied to f","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"fx = f(x, 0.1)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"constructs a FiniteGP comprising f3 at x_. GPPPInput(:f2, x_) and GPPPInput(:f1, x_) are the analogues for f1 and f2.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If you wish to refer to multiple processes in f at the same time, use a BlockData. For example","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = BlockData(GPPPInput(:f2, x_), GPPPInput(:f3, x_))","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"would pull out a 10-dimensional FiniteGP, the first 5 dimensions being f2 at x_, the last 5 dimensions being f3 at x_.","category":"page"},{"location":"kernel_design/#Kernel-Design","page":"Kernel Design","title":"Kernel Design","text":"","category":"section"},{"location":"kernel_design/","page":"Kernel Design","title":"Kernel Design","text":"Please refer to KernelFunctions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"EditURL = \"https://github.com/JuliaGaussianProcesses/Stheno.jl/blob/master/examples/getting_started/script.jl\"","category":"page"},{"location":"examples/getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Here we document how to do some basic stuff, including learning and inference in kernel parameters, with Stheno.jl. To do this, we that makes use of a variety of packages from the Julia ecosystem. In particular, we'll make use of","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl to perform Bayesian inference in our model parameters,\nOptim.jl for point-estimates of our model parameters,\nParameterHandling.jl to make it easy to work with our model's parameters, and to ensure that it plays nicely with Optim and AdvancedHMC,\nZygote.jl to compute gradients.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This guide assumes that you know roughly what's going on conceptually with GPs. If you're new to Gaussian processes, an excellent introduction can be found in either this video lecture or this one.","category":"page"},{"location":"examples/getting_started/#Exact-Inference-in-a-GP-in-2-Minutes","page":"Getting Started","title":"Exact Inference in a GP in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This is only a slightly more interesting version of the first example on the README. It's slightly more interesting in that we give the kernels some learnable parameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Import the packages we'll need for this bit of the demo.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AbstractGPs\nusing LinearAlgebra\nusing Stheno\nusing Plots","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Short length-scale and small variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l1 = 0.4\ns1 = 0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Long length-scale and larger variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l2 = 5.0\ns2 = 1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Specify a GaussianProcessProbabilisticProgramme object, which is itself a GP built from other GPs.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f = @gppp let\n    f1 = s1 * stretch(GP(Matern52Kernel()), 1 / l1)\n    f2 = s2 * stretch(GP(SEKernel()), 1 / l2)\n    f3 = f1 + f2\nend;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Generate a sample from f3, one of the processes in f, at some random input locations. Add some iid observation noise, with zero-mean and variance 0.05.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"const x = GPPPInput(:f3, collect(range(-5.0, 5.0; length=100)));\nσ²_n = 0.02;\nfx = f(x, σ²_n);\nconst y = rand(fx);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Compute the log marginal likelihood of this observation, just because we can.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"logpdf(fx, y)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"24.921326653994456","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"fx should be thought of as \"f at x\", and is just as a multivariate Normal distribution, with zero mean and covariance matrix","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"heatmap(cov(f, x) + σ²_n * I)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As such samples can be drawn from it, and the log probability any particular value under it can be computed, in the same way that you would an MvNormal from Distributions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can visualise x and y with Plots.jl","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"plt = plot();\nscatter!(plt, x.x, y; color=:red, label=\"\");\ndisplay(plt)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"It's straightforward to compute the posterior over f:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior = posterior(fx, y);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior is another GP, the posterior over f given noisy observations y at inputs x.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The plotting recipes from AbstractGPs.jl can be utilised to easily print whichever component of the GPPP is needed.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"x_plot = range(-7.0, 7.0; length=1000);\nxp = GPPPInput(:f3, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp);\n    ribbon_scale=3, label=\"\", color=:blue, fillalpha=0.2, linewidth=2,\n)\nplot!(\n    plt, x_plot, rand(f_posterior(xp, 1e-9), 10);\n    samples=10, markersize=1, alpha=0.3, label=\"\", color=:blue,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you've built a simple GP probabilistic programme, performed inference in it, and looked at the posterior. We've only looked at one component of it though – we could look at others. Consider f2:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"xp2 = GPPPInput(:f2, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp2);\n    ribbon_scale=3, label=\"\", color=:red, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior(xp2, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:red,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-NelderMead-in-2-Minutes","page":"Getting Started","title":"Fit a GP with NelderMead in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Stheno.jl is slightly unusual in that it declines to provide a fit or train function. Why is this? In short, because there's really no need – the ecosystem now contains everything that is needed to easily do this yourself. By declining to insist on an interface, Stheno.jl is able to interact with a wide array of tools, that you can use in whichever way you please.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Optim requires that you provide an objective function with a single Vector{<:Real} parameter for most of its optimisers. We'll use ParameterHandling.jl to build one of these in a way that doesn't involve manually writing code to convert between a structured, human-readable, representation of our parameters (in a NamedTuple) and a Vector{Float64}.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"First, we'll put the model from before into a function:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function build_model(θ::NamedTuple)\n    return @gppp let\n        f1 = θ.s1 * stretch(GP(SEKernel()), 1 / θ.l1)\n        f2 = θ.s2 * stretch(GP(SEKernel()), 1 / θ.l2)\n        f3 = f1 + f2\n    end\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"build_model (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've assumed that the parameters will be provided as a NamedTuple, so let's build one and check that the model can be constructed:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\n\nθ = (\n    # Short length-scale and small variance.\n    l1 = positive(0.4),\n    s1 = positive(0.2),\n\n    # Long length-scale and larger variance.\n    l2 = positive(5.0),\n    s2 = positive(1.0),\n\n    # Observation noise variance -- we'll be learning this as well.\n    s_noise = positive(0.1),\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(l1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-0.9162907691270586, Bijectors.Exp{0}(), 1.4901161193847656e-8), s1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.6094379869399091, Bijectors.Exp{0}(), 1.4901161193847656e-8), l2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(1.6094379094538682, Bijectors.Exp{0}(), 1.4901161193847656e-8), s2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.490116130486996e-8, Bijectors.Exp{0}(), 1.4901161193847656e-8), s_noise = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-2.3025852420056685, Bijectors.Exp{0}(), 1.4901161193847656e-8))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've used ParameterHandling.jls positive constraint to ensure that all of the parameters remain positive during optimisation. Note that there's no magic here, and Optim knows nothing about positive. Rather, ParameterHandling knows how to make sure that Optim will optimise the log of the parameters which we want to be positive.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can make this happen with the following:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\nusing ParameterHandling: value, flatten\n\nθ_flat_init, unflatten = flatten(θ);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Concrete types used for clarity only.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"unpack = value ∘ unflatten;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now easily define a function which accepts the flat form of the parameters, and return the negative log marginal likelihood (nlml) of the parameters θ:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function nlml(θ::NamedTuple)\n    f = build_model(θ)\n    return -logpdf(f(x, θ.s_noise + 1e-6), y)\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"nlml (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can use any gradient-free optimisation technique from Optim.jl to find the parameters whose negative log marginal likelihood is locally minimal:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Optim\nresults = Optim.optimize(\n    nlml ∘ unpack,\n    θ_flat_init + randn(length(θ_flat_init)),\n    NelderMead(),\n)\nθ_opt = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Note that we just added some noise to the initial values to make the optimisation more interesting.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now use this to construct the posterior GP and look at the posterior in comparison to the true posterior with the known hyperparameters","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_opt = build_model(θ_opt);\nf_posterior_opt = posterior(f_opt(x, θ_opt.s_noise), y);\nms_opt = marginals(f_posterior_opt(xp));\nplot!(\n    plt, x_plot, mean.(ms_opt);\n    ribbon=3std.(ms_opt), label=\"\", color=:green, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_opt(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:green,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Of course, the exact posterior has not been recovered because the exact hyperparameters cannot be expected to be recovered given a finite amount of data over a finite width window.","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-BFGS-in-2-minutes","page":"Getting Started","title":"Fit a GP with BFGS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The BFGS algorithm is generally the preferred choice when optimising the hyperparameters of fairly simple GPs. It requires access to the gradient of our nlml function, which can be straightforwardly obtained via reverse-mode algorithmic differentiation, which is provided by Zygote.jl:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Zygote: gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This will probably take a while to get going as Zygote needs to compile.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"results = Optim.optimize(\n    nlml ∘ unpack,\n    θ->gradient(nlml ∘ unpack, θ)[1],\n    θ_flat_init + 0.1 * randn(length(θ_flat_init)),\n    BFGS(),\n    Optim.Options(\n        show_trace=true,\n    );\n    inplace=false,\n)\nθ_bfgs = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Iter     Function value   Gradient norm \n     0     1.412896e+01     3.177152e+01\n * time: 0.022101163864135742\n     1    -5.647848e+00     2.524629e+01\n * time: 1.3684241771697998\n     2    -2.076813e+01     1.834584e+01\n * time: 1.3889009952545166\n     3    -2.412937e+01     1.651752e+01\n * time: 1.4092810153961182\n     4    -2.856592e+01     7.420380e+00\n * time: 1.4195291996002197\n     5    -2.952433e+01     5.059092e+00\n * time: 1.4296801090240479\n     6    -2.997847e+01     1.277963e+00\n * time: 1.439831018447876\n     7    -3.006541e+01     2.923247e-01\n * time: 1.4499590396881104\n     8    -3.006959e+01     8.802439e-02\n * time: 1.4600460529327393\n     9    -3.006987e+01     1.564529e-02\n * time: 1.487551212310791\n    10    -3.006988e+01     4.985327e-04\n * time: 1.5027251243591309\n    11    -3.006988e+01     1.839856e-05\n * time: 1.512794017791748\n    12    -3.006988e+01     6.684745e-08\n * time: 1.5280261039733887\n    13    -3.006988e+01     1.539563e-09\n * time: 1.5432891845703125\n","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Once more visualising the results:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_bfgs = build_model(θ_bfgs);\nf_posterior_bfgs = posterior(f_bfgs(x, θ_bfgs.s_noise), y);\nms_bfgs = marginals(f_posterior_bfgs(xp));\nplot!(\n    plt, x_plot, mean.(ms_bfgs);\n    ribbon=3std.(ms_bfgs), label=\"\", color=:orange, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_bfgs(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:orange,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Notice that the two optimisers produce (almost) indistinguishable results.","category":"page"},{"location":"examples/getting_started/#Inference-with-NUTS-in-2-minutes","page":"Getting Started","title":"Inference with NUTS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl provides a state-of-the-art implementation of the No-U-Turns sampler, which we can use to perform approximate Bayesian inference in the hyperparameters of the GP. This is slightly longer than the previous examples, but it's all set up associated with AdvancedHMC, which is literally a copy-paste from that package's README:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AdvancedHMC, Zygote","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define the log marginal joint density function and its gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"ℓπ(θ_flat) = -nlml(unpack(θ_flat)) - 0.5 * sum(abs2, θ_flat)\nfunction ∂ℓπ∂θ(θ_flat)\n    lml, back = Zygote.pullback(ℓπ, θ_flat)\n    ∂θ_flat = first(back(1.0))\n    return lml, ∂θ_flat\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"∂ℓπ∂θ (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Sampling parameter settings","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"n_samples, n_adapts = 500, 20","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(500, 20)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perturb the initialisation a little bit.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"θ0_flat = θ_flat_init + 0.1 * randn(length(θ_flat_init))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"5-element Vector{Float64}:\n -0.8318657208431504\n -1.485199705322392\n  1.563560833341722\n  0.030959224554818823\n -2.3405951015336135","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define metric space, Hamiltonian, sampling method and adaptor","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"metric = DiagEuclideanMetric(5)\nh = Hamiltonian(metric, ℓπ, ∂ℓπ∂θ)\nint = Leapfrog(find_good_eps(h, θ0_flat))\nprop = NUTS{MultinomialTS, GeneralisedNoUTurn}(int)\nadaptor = StanHMCAdaptor(n_adapts, Preconditioner(metric), NesterovDualAveraging(0.8, int.ϵ))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"StanHMCAdaptor(\n    pc=WelfordVar,\n    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.8),\n    init_buffer=75, term_buffer=50, window_size=25,\n    state=window(76, -30), window_splits()\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perform inference.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"samples, stats = sample(h, prop, θ0_flat, n_samples, adaptor, n_adapts; progress=true)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"([[-0.8318657208431504, -1.485199705322392, 1.563560833341722, 0.030959224554818823, -2.3405951015336135], [-0.8318657208431504, -1.485199705322392, 1.563560833341722, 0.030959224554818823, -2.3405951015336135], [-1.0440490310510344, -1.489365125620953, 1.4360394457248293, 0.2505546398891946, -4.187211722938889], [-0.7051366403139823, -0.9859199812961392, 0.9020986814924782, 0.8632332273451332, -3.90943015441085], [-0.6694039320253103, -0.8951175547077769, 1.2755128728874903, -1.203864921818289, -3.931109025177239], [-0.8156806910748168, -1.106098910682685, 2.153836982682585, 0.2534759332384476, -4.129610596703041], [-0.610913888023991, -1.0002799656741364, 2.0197716446239427, 0.5056516155668972, -4.047663192075613], [-0.7932657185125868, -1.0561687947007061, 1.3961935631980804, 0.5645928171613793, -4.169981271659525], [-0.8425407681910838, -1.1476375836999957, 2.0006081079429756, 0.01951565092355785, -3.7884385752407894], [-0.6100513172435784, -0.9486144799155183, 1.4038360182966523, -0.07044147981823304, -4.05206308522283], [-0.5591800770125177, -0.5715761413983886, 1.1928809327774257, -0.2573218253769059, -4.013914248681781], [-0.960984325961738, -1.5622883050316885, 0.921566082663443, -0.12309154136058394, -4.04045030011923], [-1.0763270344223785, -1.4891264289579078, 0.9833475470104595, -0.047225262156647116, -4.143357135674629], [-0.4247225579518717, -0.6681727409837929, 0.481063172837224, -0.7105514319552865, -4.162786245474361], [-0.571930516016042, -0.3040843576326668, 0.4997952333422809, -0.8980920449589861, -3.882152982123075], [-0.7113805184821083, -1.0276671301794011, 1.1039423676640752, -0.945833972568763, -4.13110512957616], [-0.5717194812373755, -1.093405387245512, 0.7673349738504346, -0.5179223972617736, -3.9831270092799214], [-1.0517279456817614, -1.356546337544549, 1.0540767880145065, -0.45822891883720435, -4.0598991601464665], [-0.8585719065372868, -1.2866704169866183, 1.2477233183188787, -0.2853240636348843, -3.895098847281141], [-0.6693882698923267, -1.0169124208800508, 1.5472480091472718, -0.22728527496260012, -3.9037528873731517], [-0.8653475032797898, -1.0936820498999058, 1.2575496067804663, -0.2700331106440023, -4.159606332853305], [-0.7127500666474073, -1.1564332995650795, 1.5095623532602138, 0.029390127109669737, -3.884493037730383], [-1.1079391670246566, -1.4074113909166077, 1.1693669825155175, 0.0614816025826538, -4.0914917999003855], [-0.885417552143068, -1.259148872255839, 0.8279746036594275, -0.04589563169540797, -3.9031571922471744], [-0.5133884863819166, -0.8248078880402647, 1.5824354953402011, 0.11852366604214722, -4.289755944222476], [-0.8311734516286068, -1.3761141577736669, 1.0061813048219876, 0.10339099111318041, -3.7437991232841896], [-0.799251818960708, -1.0543952928601166, 1.2504309158454283, -0.07463074301211456, -3.7545178814767737], [-0.6600991867271814, -1.1434201911606419, 0.9328839251723707, 0.4067662369606438, -3.9223017766638906], [-0.6936874611575875, -0.8895266044793977, 1.419384168516964, 0.08372541428168974, -4.220908719594757], [-0.49383079229679827, -0.291487101960095, 0.7379567302216223, -1.120737648512828, -3.9230262079914655], [-0.5717953865499268, -0.7731819418915126, 1.046122105900012, 0.24569055627108127, -3.9651570123557662], [-0.8893956505661248, -1.403885361146389, 0.6458935991476584, -0.6469241071990461, -4.099723137782473], [-0.6100197826024369, -0.754886530313553, 1.3152978599379868, 0.27285043247182433, -4.230729574975385], [-0.591134997449632, -0.7471112598880447, 1.0615186418304094, -0.5895601386687873, -3.987093188759886], [-0.6880209560768485, -1.1493676140646114, 0.3427532140773266, -0.11334813411305708, -4.169218564956872], [-0.7448403309311988, -1.0846555385257215, 0.4149923323001878, -0.29220645150884234, -3.9288376638918914], [-0.8699971990363397, -1.3996301069647086, 0.7418333155677891, -0.49655875106240505, -4.184292089343089], [-0.9661856547471254, -1.4618489439652917, 0.3795199187651295, -0.7054374863770828, -3.8691921105589495], [-0.9732885637517169, -1.36009090698424, 0.5337978142532595, -0.5057627485215521, -3.949942671984445], [-0.607481735964807, -1.319687689072315, 0.7646124774357324, -0.5966913989241727, -3.99348957153373], [-0.9450952537197185, -1.133284931562899, 0.692810919960384, -0.20582476333180938, -3.9871135443366414], [-0.7190422812044195, -1.4120857760292906, 0.4941849930938358, -0.24759868379286665, -3.9101662458726336], [-0.6382713990532972, -0.9374722618241544, 2.1561589642641557, -0.03965204285422446, -3.8653814374867976], [-0.7810601194629854, -1.255011329917135, 0.1729244191678011, -0.429816964057521, -4.16972278046355], [-0.7266135971897212, -0.8241716381051047, 1.6869408112536657, -0.13478394227606041, -4.166041673378428], [-0.6538059278501597, -1.0662268394239516, 1.619320474539706, -0.21181607897297247, -4.11125436200636], [-0.6246037333292296, -0.9541061120948039, 1.8007116766630604, -0.15083561779737537, -3.979835120211136], [-0.6336780881367784, -1.0823013204615037, 2.5957363083209573, 1.2618487942465504, -3.9577653774946593], [-0.9492128062261124, -1.5734275125720536, 1.782509177323567, 0.3402058992462935, -4.0013484037047915], [-0.961261199164485, -1.090539609745698, 1.8059401897812912, 0.16962242826652604, -4.454754961663581], [-1.0406847111875261, -0.8718793229695693, 2.0176344637242383, 0.1986900348624657, -4.1607823598747835], [-0.8442892545780936, -0.9573573347449235, 1.8507085487198889, 0.019454027184139105, -4.0080967408942385], [-0.757434420983786, -1.1660288158247012, 1.708621747781847, -0.10373220998856131, -4.068874237728174], [-0.8852670554133557, -1.3425895605020728, 2.075592632120416, -0.04635966901495432, -4.006147405692607], [-0.7801211762809808, -1.1196411509573272, 2.0796549542551652, -0.04242466073723789, -4.0749957879362295], [-0.5972469915056104, -0.8698438644968036, 1.4791208111453749, -0.36602636409248435, -4.162053326013309], [-0.856550719402302, -1.2637437152905733, 1.342061653738779, -0.01854352149637155, -3.832552423285334], [-0.5418596538375005, -0.7291078782041475, 2.003956732636995, -0.20553385204018987, -3.8262427778994086], [-0.997730577431695, -1.2200919840248652, 1.3082510524351374, -0.2516707041870049, -3.704761794819591], [-0.7559034133805047, -1.1742654796865006, 1.2988618026473655, 1.5489883573429515, -3.9210280603910874], [-0.8667198649008762, -1.1808529722757346, 1.528311801043529, 0.2199632681119389, -4.215256923413222], [-0.7866579788337044, -0.9016710111468862, 2.2573538491849727, 0.19446961798326498, -3.8433078520930857], [-0.7741810347975375, -1.3189628144673642, 0.40775816368384116, -0.35550626154581244, -3.9598921027990914], [-0.7099580423475348, -1.193363265748133, 2.2334615542056278, 0.027062107198834617, -3.8680101264159474], [-0.6418703494762861, -0.9547605749197224, 2.511317570009316, 0.16459018110226303, -4.183948195537327], [-0.5971805454747461, -0.7536879870476474, 2.3079263654774325, 0.025069709723053085, -4.035654603574856], [-0.5299997162761555, -0.6930486632473556, 2.469283288486088, 0.31211093451985855, -3.9421958378102437], [-0.47610541434284054, -0.43154632493446304, 2.4298775590811235, -0.01905632608493049, -4.214704528773949], [-1.1095894568770626, -1.359032803903524, 1.7252852181231408, -0.19211272232481424, -4.189838656500354], [-1.0512781510073266, -1.6885368779647512, 1.4465590426492394, 0.1848503841382479, -4.157944183423788], [-0.6542164297023403, -1.233724884585884, 0.46580830058065115, -0.28257140256388824, -3.9229014424190445], [-0.7846927017175958, -1.087846756006447, 0.603213211324682, -0.3682102913545824, -3.8486479685654302], [-0.6877369104897053, -1.0570452025748895, 0.7179397334219042, -0.5970854159081953, -4.005614820360349], [-0.8647882300773092, -1.3322166625296703, 0.9748453455609647, -0.03457911789503518, -4.063637589347417], [-0.8529581240634319, -1.3132949093975061, 1.0021939326059175, -0.33702902878890884, -4.028479600061903], [-0.8067924264912663, -1.2002009955540258, 1.1375006205044462, 0.1708339274058028, -4.0112423118147555], [-0.7663762480751874, -1.1767252395159846, 1.2510364174444513, -0.13902866718043977, -4.018130121749973], [-0.7834297733081559, -1.2984451790672669, 1.082053072341902, -0.08056224230886332, -3.8518959225277025], [-0.9254863908443725, -1.4689343108982755, 0.8503339461120396, -0.5771612642358936, -4.236116511748925], [-1.2313833129267115, -1.328543555381418, 0.7975933491974702, -0.6466773558128487, -4.19168431838749], [-0.8054683142224943, -1.780870926064492, 0.329336427327282, -0.5901628405159627, -3.9281511296295406], [-0.6523614850485344, -0.39287776825910686, 1.6992677305681458, -0.28120268038848395, -3.900974788431938], [-0.35658266969057273, -0.2083473087767108, 1.9742663289913154, -0.1376392697415702, -3.960938250778809], [-0.4309852432649274, -0.2796487297529938, 1.9796039426684038, -0.32583200162603976, -4.013290454129366], [-0.5906630318354752, -0.9801526409447496, 1.0412723151384427, 0.015516915569275362, -3.9249626900419328], [-0.5810386077551736, -0.7302151814225816, 1.0084636332752206, -0.0079637945706613, -4.188216730930565], [-0.5458133058267328, -0.7519158755902516, 1.3894420579031863, -0.42286635808984274, -4.025015744641813], [-0.6533662375665684, -0.9750712014092512, 0.9671024190515839, -0.16056456865874058, -4.2381720536680785], [-0.7793769413386847, -1.1750973611854398, 1.1134095870502199, -0.23239265486425717, -4.256877938090318], [-1.0317192044565915, -1.4183750081376063, 0.8882261737441977, 0.15045266280902062, -3.8022297984518514], [-0.8127699986825083, -1.446367579563648, 1.0135166867614291, -0.06333378668180345, -4.295388932517348], [-0.8121380856929981, -1.4790913398488366, 1.106819827883295, -0.12117903988166359, -4.220458366828774], [-0.5493118819054122, -0.7866713878878442, 1.7627981344415105, -0.7910688116855429, -4.121026223262097], [-0.6938204728366091, -0.7499115825330755, 2.024954659106931, -0.5752782344186175, -4.08871705595908], [-0.728037429468605, -0.908769689452263, 1.5986453589259684, -0.18849457844675893, -4.077657447158131], [-0.7441729049225555, -1.1971269849212705, 1.8409626259161933, 0.379092867340983, -4.061170440259437], [-1.0239618305982217, -1.1790666910618124, 1.8607881997658478, 0.2534092232764711, -4.101437435770772], [-0.894906024873727, -0.9476856940695406, 2.542502575786414, 0.3636839410180569, -4.072077746731547], [-0.6558858444653607, -1.279682379699902, 1.1900957205587241, -0.22001518579000973, -3.971405586240533], [-0.9460030573329002, -1.4462599317313218, 1.213485535890277, 0.4237126319422114, -4.11957227764531], [-0.644945040449997, -0.6734328656396781, 1.8429733230209364, 0.5191924333601429, -4.12671110775451], [-0.6149465106033514, -1.0633608997200246, 2.2569213079320947, 0.49576494305838037, -3.9099819015318396], [-0.7070152097123714, -0.9400289132541364, 2.3890508267378774, 0.43539719165115176, -4.12068241093054], [-0.7465432468096469, -0.8664244491038934, 2.0983617066385465, 0.5223447750887957, -3.9247288999488976], [-0.6378254604621886, -1.1900523347949372, 2.101910148148631, -0.3052328049821218, -4.197488922681816], [-0.9512672306836221, -1.3326356636455967, 1.9268111641461378, 0.39812835562894106, -3.8878201514216504], [-0.9392911457091587, -1.1823407887742103, 1.8577892103153237, 0.25107843258133, -3.819338425575254], [-0.6923973324104543, -1.0506087994944888, 2.044267020092482, 0.42737434256966844, -3.898570854331269], [-0.628083600792661, -1.077704579828916, 0.05429707975108791, -0.6997939265481428, -3.920800932586046], [-0.665675140519057, -1.0789180957899862, -0.10246805410319029, -0.7327125256435035, -3.8932769282493305], [-0.895460064312751, -1.2077729750639146, 3.016708305290859, 0.360474068214269, -4.311346028386223], [-0.3718862508870715, -0.2542251610828232, 2.113694404186019, 0.6401975779045285, -4.0147433858948425], [-0.5841031818222987, -0.8510054598416761, 2.1543496396714743, 0.48538702199184547, -4.065066908945898], [-0.6904449491260651, -0.958411595935272, 1.2423876240285405, -0.7053548219464777, -4.181045291990214], [-0.9469412618522748, -1.1982267228243488, 1.2087495089540812, 0.19759139826730462, -3.7862841267009157], [-0.767677278948777, -1.3330080804439914, 1.4489553102297728, -0.6282740506840726, -4.268550649548803], [-0.8101942662468755, -1.2141341864159454, 1.4371519375217796, -0.566676660328536, -4.277366811329383], [-0.5826890569111288, -0.6563421545291616, 0.8366504937711327, -0.03913252745825016, -4.2779189248628215], [-0.9140240635921676, -1.175728397610675, 1.0392624693358403, 0.23853565067997187, -4.205392782809823], [-0.5803172717029041, -1.0831378887108671, 0.8636349430001548, 0.016546517078110307, -3.9888950270638697], [-0.8938749393465972, -1.2395996287341067, 0.879927483988848, -0.08735709731986308, -3.629609461177636], [-0.5864082969039647, -1.042697429182941, 1.0835263527658758, -0.8386247520025969, -4.170205360470067], [-0.7394065251322209, -0.9176504584072573, 1.5666447123612224, 0.5695952363602372, -4.150744286482684], [-0.637167661906435, -0.6310492478032, 1.8301549629723428, 0.1517569619323435, -3.9653092723531027], [-0.6798972516501314, -0.4109715583700851, 2.0184737124726158, -0.026213002859588178, -4.091599589891431], [-0.6624711133674893, -1.4772436750681948, 0.6570077221152728, -0.38150142568700757, -4.116810133572654], [-0.5104596966710525, -0.6943060718783062, 1.687322237120794, 0.22157858538281777, -3.9774210573477062], [-0.5839219976907281, -0.8312729805991937, 1.3428230086953385, -0.04917044058706341, -4.011313316133358], [-0.6543460544064496, -0.9171133895462452, 1.5501645468259095, 0.49680921410116413, -3.984702735957496], [-0.7205125099962721, -0.9352711591413014, 1.4807176271053182, -0.18571553371823554, -4.155050838144094], [-0.7696795961520537, -1.0016244581885798, 1.4704168822801142, -0.16724469921488228, -4.188334457981818], [-0.7275253486369482, -0.9506722814717475, 1.4990925738057437, -0.18466945597228196, -4.114802488048964], [-0.8511136734523876, -1.277327339789043, 0.5339766669978027, -0.17812245050447362, -4.050282398071294], [-0.6890644680088877, -0.7948236495668405, 1.8565842383743356, -0.2102943825563931, -4.146911752438711], [-0.5475657767598792, -1.0288373691816481, 1.9194431515269146, 0.44324812765883653, -3.813095494778983], [-0.6462039554297977, -1.248545065679815, 1.5915656107569562, 0.3480245373809447, -3.808071677905857], [-0.8460154155760288, -0.9228321411120716, 1.566213993677724, 0.03218988085173688, -4.121263333893421], [-0.6911652090608225, -0.9593561778123201, 0.6623768634546492, 0.202131310955021, -3.9939607888125868], [-0.4461729935517128, -0.5258544154720078, 0.6839821980519403, 0.4208768053128549, -4.09970183969535], [-0.66286778506522, -1.1036660557820737, 0.8449339289362026, -0.15619404874769302, -4.067107958690408], [-0.7070367644761048, -1.0066196988684284, 0.7556757003618348, -0.016934003259567218, -4.147467987893358], [-1.035423032503776, -1.516456536686104, 0.8335813061316371, 0.06896894261287091, -4.246426535221765], [-0.5745965343733198, -1.1585936157778904, 0.6611527894157259, -0.73245754018824, -3.8780235925728417], [-0.794085338516709, -1.0971062613871998, 0.8575032715719416, 0.20764408656606292, -4.083881341152563], [-0.6626320398377824, -0.9044107918802781, 1.1249033272873659, 0.5262575641828656, -3.8907395843054497], [-0.7144750141881571, -1.3450369142366585, 1.0555518524201974, 0.31585254840445876, -4.057609575151093], [-0.593153294513423, -0.8327766475977165, 1.76179998348768, 0.05052744359945088, -4.041037902170472], [-0.5925163539396406, -0.7429703970292473, 1.699274780529711, -0.084732380795167, -3.6165150072827115], [-0.6063052761295308, -0.7536424230234962, 1.252118528606292, -0.2064045326145335, -4.393494570745673], [-0.6955604693924103, -1.154758951239386, 1.8006210123207644, -0.5261005664671828, -3.6287481905232624], [-0.5615408868942388, -0.8576366193468288, 1.9418960216322474, -0.6407708766897048, -3.650391073639475], [-0.7287359608932972, -1.0748447702948416, 0.9342626819311537, -0.18560984764829863, -3.734378444978788], [-0.6298611178302871, -0.9369211081248952, 0.8059213736031664, 0.04616936967805062, -3.9224562622818455], [-0.7209605428282969, -0.5001249946822246, 0.9968498073647164, -0.21498418662121915, -3.964348473502206], [-0.6528915194366538, -0.5291848498069167, 1.5329062527896509, -0.35134158768413387, -4.181399386291084], [-0.8760267540262836, -1.677087609581997, 0.6980920657538714, -0.20804156840284188, -4.007322995225984], [-1.1961219654239357, -1.4247415515626127, 0.33633285139261065, -0.3353293442102931, -4.045357974795044], [-0.9597113014972812, -1.1204383755979497, 1.497973800197215, 0.05837237043409906, -3.9131996728780765], [-0.819792451915469, -0.8364822972473251, 1.6262511365582144, -0.3230988129565041, -4.191769770697161], [-0.6089209587976527, -1.213473983448901, 1.0145150748539893, -0.16301471703477202, -4.151429434258986], [-0.8632409752849496, -0.9646161344112664, 2.4118743534619926, 0.018791197459350414, -4.157622029652715], [-0.889574030630088, -1.1516268188582486, 0.7947014847355175, -0.10826258030123379, -4.1511106792913655], [-0.7100496212053885, -1.2894036947000187, 1.7115813744333457, -0.35243504724294333, -4.008502333842796], [-0.43331355163523466, -0.7199516727999736, 1.4213741896659267, -0.8112719036595455, -4.009763852567173], [-0.8387831116327796, -1.2340568940111072, 0.5720954430679269, 0.4882919867549832, -3.983449318555791], [-0.4932374201378765, -0.738980502526584, 1.439475093321555, 0.4982691372485517, -4.164871907841483], [-0.8113003854697828, -1.3177934928280426, 2.4258158651541457, 0.433224776652563, -3.9887488694724653], [-0.6699943540496552, -1.15066477895861, 1.7549238872147905, 0.017262579712159158, -3.957816246414891], [-0.8237754928124762, -0.8080924527343971, 1.558330918255135, -0.020393446693203723, -4.113771550319412], [-0.49163243093466313, -0.81759629128275, 2.43144408647119, -0.15708400218492466, -4.013621445339981], [-0.6774401079124501, -1.0981037091149568, 2.861852495066123, -0.15566838748094522, -4.149004330922528], [-0.7505698477423952, -1.1043781831805066, 1.8548433692763577, -0.10932372383604533, -3.905998950620978], [-0.9513469896509619, -0.9541372434220433, 2.033711393275858, -0.1041628088174136, -3.976487287691883], [-0.6444921230750248, -1.4519415392495705, 0.23421558979100787, -0.306393828167618, -4.075017245893947], [-0.6320243666041911, -0.5831146439549736, 1.1992992880107018, -0.5028399330320621, -4.176896996438487], [-0.7327151499803933, -1.212314382794324, 2.236460935232725, 0.4165511975205157, -4.210098803252648], [-0.5279450722532784, -0.8061356162071598, 1.153034201121066, 0.21579997743943796, -3.8246458510031265], [-0.5632864801578416, -0.7331192465548491, 0.9666516319187454, -0.07473765841365096, -4.239126754604408], [-0.6438899656699281, -1.04271270781493, 0.36249353923263505, -0.6455285035881595, -4.244700485109156], [-0.6983073389282933, -0.9666098763444596, 0.865490954703492, -0.6662390509366974, -4.215109722064891], [-0.8963301360741767, -0.932381391924279, 1.1042620841442776, -0.10523803251895747, -3.853017164993874], [-0.7252787540264004, -1.4268864559544876, 1.1799765820560753, 0.13391569007140902, -4.206713034343956], [-0.672494824618058, -0.9015161708011559, 0.7052001326463373, -0.20932838534682324, -4.016805336876521], [-0.7272093930486488, -1.1317379146559294, 1.2869923592393637, -0.3128719722676611, -3.999101478761261], [-0.7791826215833214, -0.9867890491930316, 1.3061781491378606, -0.41750581617880056, -3.93681103810984], [-0.8020523576978916, -1.1557181009749553, 0.9317948472818367, -0.15383517619411874, -4.23630976004137], [-0.7343304089481169, -0.8820452952166221, 1.507723755010984, 0.04728032485678296, -3.691189658804852], [-0.9295047349580166, -1.4520139714850193, 0.8584146863923875, -0.07037091530688884, -3.6409371741459085], [-0.617971970034717, -0.9583087265557927, 1.3181966516475452, -0.2777090261183264, -3.9940218445268885], [-0.7601853982589168, -0.9816937390778695, 1.4792875230095124, -0.8588148055716791, -4.030568149310083], [-0.8830914189944066, -1.151776090523759, 1.1523603432472431, -0.470762615859184, -4.114241234008081], [-1.0250787465885407, -1.36467560476854, 1.2040836741120509, 1.2986656264882341, -4.266410112665614], [-0.6071416807476373, -0.8812554899748527, 1.4636343395959253, 0.9127986083897643, -3.7605825621500704], [-0.5978569521444722, -1.0488832097552576, 1.7880705792739198, 1.1547675970067033, -4.410470613867327], [-0.6223432805532835, -0.7304709363347893, 1.5597358807745436, 0.972356798301907, -3.9542556935068545], [-0.6513180286486744, -1.1413067873063802, 2.0014424678526272, -0.7847265529259646, -4.084668801907051], [-0.5324868316925884, -0.7699874631354023, 0.9854150597062421, 0.16031984643774153, -3.9838236009345893], [-0.8289883689077417, -1.531541348754179, 1.7041384318938533, 0.07346745476996894, -4.055180266498104], [-0.769679086353018, -0.6716868956620151, 1.1159588314123479, 0.25689394000485133, -3.930045989051017], [-0.7955189382319334, -1.1471428120145732, 0.9218035047879933, 0.7206008816203759, -4.1704913624561915], [-1.1066988560938742, -1.5128114786024096, 1.17501977117165, -0.45066794493308676, -3.9327076076278913], [-0.5896382729084954, -0.7037132303635949, 0.597291642264162, -0.2674513936344132, -3.984025618414513], [-0.5255836925000696, -0.7170992235657945, 0.10308741804651728, -0.4461841535123906, -4.075331472963748], [-0.5697044499024395, -0.5652378139487555, 0.5170122026752255, -0.19561103126471074, -4.145560891083246], [-0.6568459091865682, -0.7877664621669391, 0.8635256742947728, -0.29412530922147023, -3.816179615609449], [-0.7182739928298242, -0.9286841182797895, 1.0381353792184302, -0.15396054893684286, -4.146006034087696], [-0.8714322379764998, -1.5412769903092993, 1.0715851784178543, -0.9241975621854591, -3.7691183475583294], [-0.5023093352646534, -0.6625872702224208, 0.46925443480589724, -0.09398058692581057, -4.203156442723304], [-0.7375329419710099, -1.4338483802935156, 0.2993776881812642, -0.7151937675159737, -3.8412334047956236], [-0.602563070229804, -0.8430716329746012, 1.245937022786187, -0.15318068995252462, -3.97199845219245], [-0.8115631275087704, -1.290643707309565, 1.5570278795016155, 0.09201635058561546, -4.0151968135321106], [-0.6433427454381493, -1.0536585073450415, 0.7366817616673922, -0.5301127383761067, -4.0415011192174815], [-0.6106515022551497, -0.900302873958511, 0.726115514143597, -0.15511568758760746, -3.7465671159786105], [-0.38423741202026607, -0.549839275198296, 0.39346338110844586, -0.6425795420046753, -4.277305968564145], [-0.42858733678067146, -0.5010108839388207, 0.3496620333874338, -0.6953247192520832, -4.132044152922641], [-0.6911975442558924, -0.4540714502677865, 0.4765406533449697, -0.9224460650144214, -4.1494215935461485], [-0.319712657177766, -0.23066319892896503, 2.02759482591764, 0.5934944347517297, -4.049239434572227], [-1.180897641452499, -1.548457166900678, 0.5131699472131221, -0.2627018581987706, -3.9617100605078437], [-0.7017101429198274, -1.3709056250519176, 0.6992530427398049, -0.5721605740924677, -3.923408919577407], [-1.019964699297816, -1.1373661763556724, 1.2776949216067646, 0.33549225459068777, -3.8683651892883475], [-0.9818099141159794, -1.1920722165047517, 1.431490637306638, 0.2977630279515674, -3.8527015556070845], [-0.7038781865917756, -1.2334770383648146, 1.6315968392631413, -0.33467989127890685, -3.934748628624275], [-0.851966110104799, -1.1549843146217849, 1.3767328734298736, -0.5194632995407624, -3.8113015020447736], [-0.9035712426163575, -1.2297604140696388, 0.9026545395285704, -0.12315591318080671, -4.268353034785807], [-0.7565715992384278, -1.0957443723151126, 1.1191461048035547, 0.18773276984514775, -3.7296758798737644], [-0.5689958132580798, -0.8769055491802911, 1.1624727863219224, 0.05064435540078468, -4.168374333603705], [-0.5783531432042903, -0.9442823652298478, 2.136486554071129, -0.1815846541007695, -3.8893976872122535], [-0.8167062879570454, -1.0403928972052583, 1.3101819354455313, 0.21104980683997107, -4.0388857890184635], [-0.501204476879406, -0.42037306330910407, 2.2737366160277444, 0.5382057466736699, -4.008128072011893], [-1.075146697908424, -1.52057050300881, 1.1271587448038063, -0.08268292806230437, -4.103181210335586], [-0.8997603782890794, -1.6181142431802304, 0.8558947980613283, -0.47981742257875515, -4.060234629312289], [-0.4161001992141037, -0.4568993532084546, 1.3645964098360848, 0.5137074331621608, -4.081195355318116], [-0.6778774148517563, -0.550280171082284, 1.1408686590002701, 0.5958780695396003, -4.046343525630907], [-0.6260747789704609, -0.7950025021506244, 1.1408892573251923, 0.6071706135338794, -4.060157425778076], [-0.7478498655700739, -0.8530981232074071, 1.0044443246430759, 1.1998754486709315, -4.007380576899017], [-1.0902971861813877, -1.3543942709704608, 2.0287376609182983, -0.027596555798475836, -3.660950427555373], [-0.40005770667860113, -0.20583182556140792, 0.5243597025763844, -0.5525963121564454, -3.8047559040367562], [-0.4374728341823347, -0.2926032551616586, 0.7297264591566317, -0.27434168241227846, -4.2078015468580015], [-0.6453155747946503, -1.081388416688336, 0.728918029531946, -0.37764436239025273, -3.881526710383166], [-0.7299566278272656, -1.0514073106541055, 0.6100148185610854, -0.3293637351043144, -3.903616781290594], [-0.5773642858833872, -1.0950849175838373, 1.0717538452499167, -0.12388530728713448, -3.9610832760910704], [-1.174151874273536, -1.1995423692735014, 1.1674951201898003, 0.08254939225633932, -4.341200861582008], [-0.9040072003064412, -1.4296332064734663, 1.306268462817581, 0.2763826398192755, -4.043443104198755], [-0.9521859946939509, -1.4127210874302885, 1.294524687523895, 0.0005119544383792168, -4.084085482430115], [-0.7365590507252283, -1.064512686727382, 1.3028753209750188, -0.44189217702524974, -4.216899481143746], [-0.7493431877535048, -1.1019193574024162, 1.5707085080928596, -0.330379820811789, -3.929055934912369], [-0.781447380964948, -1.1275847360655804, 1.0880454086040305, -0.5553131036540895, -4.147975920113537], [-0.5904846734009047, -0.7775108275269468, 0.8970798110409267, -0.3576823963411555, -4.034620670447109], [-0.7941406305467029, -1.2233163616423002, 1.1845052302905776, -0.7789827009659759, -3.8077064671001963], [-0.674864344552661, -0.955882658507328, 1.2528331674796536, -0.6139374742893907, -4.28037595848647], [-0.8507192929406608, -1.1200535099562543, 0.5815583290655382, -0.17664321936634172, -3.853621320949192], [-0.907340477176236, -1.220444277105392, 0.9126326099136318, -0.646270757169826, -4.286374105981917], [-0.814624164757104, -0.7984189493727146, 0.386210126629888, -0.4614185116077164, -3.7310295381252834], [-1.1165914063866562, -1.3232515635641047, 0.14148382492753284, -0.403695021977441, -4.218427656965621], [-0.7934272636381517, -1.557074487923763, 0.12079517020072747, -0.5719331611359024, -4.0333690000311], [-0.8217971496020332, -1.224521411735005, -0.02280056136386894, -0.5900439024811672, -3.8980572705139336], [-0.478384348004085, -0.7194133055136063, 0.8482270256963829, -0.0616435247396826, -4.254987478415788], [-0.478384348004085, -0.7194133055136063, 0.8482270256963829, -0.0616435247396826, -4.254987478415788], [-0.943574684949939, -1.2916581534308698, 1.7699533177926556, -0.5602860059831406, -4.071923466642424], [-1.0094953010552645, -1.4544559528904277, 1.8586265464477911, -0.6080822656814887, -3.9298644227450747], [-0.9157618520202655, -1.5699773544453377, 1.8121603188580373, -0.6003506918993462, -3.869609144336052], [-0.5852302225050512, -0.7229553067570954, 1.182210389837658, 0.05176298028731616, -4.21174192358249], [-0.6802126395233471, -0.8891958049436668, 1.4548781637855521, -0.45318025264489714, -4.104414749334267], [-0.6685493162905589, -1.1197146471745374, 1.5572074302049796, -0.12416794675153303, -4.175424427939937], [-0.7400967432873351, -1.017966435102356, 0.47820651737766234, -0.5017903589761971, -4.036718537451444], [-0.8930085706342529, -0.8831365206035874, 0.6067012237040943, -0.6559445766943542, -4.000248909477371], [-0.9699653362339298, -1.4791738662726555, 1.3667064863483336, 0.3795559580252879, -4.046423662207661], [-0.6346786788455543, -0.6875572021573559, 1.141060931968993, -0.6806892288672632, -4.082509795638182], [-0.46619763307391504, -0.7619112358171563, 1.2627558933121619, -0.6355401890408987, -3.999657171956268], [-0.9252242925129753, -1.1976250600318767, 1.1388023206416056, -0.12322469433317484, -3.9824275350952467], [-0.8486254261066156, -1.401959195361744, 1.3915599252818893, -0.04377878269648556, -3.892549868839885], [-0.6568619541046862, -0.9364243328335188, 0.9679290943526646, -0.24676488981245343, -4.129460569473894], [-0.7201007914135996, -0.6190071517267768, 1.1974788168470343, 0.23740289244167712, -3.9982865327244643], [-0.6096713199970886, -1.00145937414423, 0.8812063644612782, -0.241481038598674, -4.043796881341247], [-1.1337871829443467, -1.1408360341946593, 0.9593189798321133, -0.23774627055528977, -3.9533323730757663], [-0.8806829740573374, -1.3971807750328846, 1.0976851386931896, -0.20084185138690885, -4.140202742181148], [-0.6609631147967945, -0.9814172201686473, 0.7057857247021703, -0.40449065171347465, -3.9246402722406897], [-0.5200622983891002, -0.9838603273894937, 0.6691424257412227, -0.4825430374610846, -4.008573581921723], [-0.5946546268137297, -0.6285231660722126, 1.1406643566046875, -0.5220852355264197, -4.178131588842522], [-0.5901181778774085, -0.9567175960013241, 1.5996688417671685, -0.7803539679519824, -4.0088321405723075], [-0.7187069883542503, -0.9629649163277564, 1.4608710051684808, -0.6338744348163685, -3.98109318413803], [-0.7997103847186804, -1.0541604951028978, 1.193376537439175, -0.5302980933075297, -4.0420157356567], [-0.6261977910288662, -0.9982403489515328, 0.6633918647514377, 0.16387457828274477, -3.907098225045852], [-0.4263895874474946, -0.5292381300397073, 1.4509435466702312, -0.32508724816554374, -4.176957260295162], [-0.6872192075080875, -0.8569207702602479, 1.6586078842163292, -0.9122443554724933, -4.018354100575316], [-0.5934719827325124, -0.5897564992873331, 1.4717917644956646, -0.17738008210023834, -4.0674485285194235], [-0.7130922900907882, -1.40126974798855, 1.8778780811097169, 0.03384324768973129, -3.824824637731191], [-0.9127452317155391, -1.0385977802057729, 1.880861730203266, 0.1844649962112001, -4.119749261648637], [-1.0007488813665688, -0.9499970338799446, 1.630505742612555, 0.16687660340219937, -3.8229675710449635], [-1.0552809468229867, -1.0920214309826919, 0.3193408373358477, -0.39935258008589763, -3.637904648141114], [-0.4970642127865417, -0.8587440192490824, 0.06732315257584934, -0.3771233156018306, -4.2540489861461435], [-0.7206342647429886, -0.9178894179530805, 1.9145173609505608, 1.3723235112394747, -4.288663311255656], [-0.9037472453919274, -1.3356467305654711, 1.964919276888937, -0.4798377397774264, -4.05000212414511], [-0.6449704911174757, -0.7885605011382828, -0.24441134665836584, -0.2528615341451592, -4.022730341142825], [0.2006701467517396, -1.0097238304782699, -0.39812064035429107, -0.3427967363304058, -4.028923611330842], [0.507233416764558, -0.6820308129871262, -0.40061243118421286, -0.428382120081753, -4.102401961306471], [0.5312207969731222, -0.7443706312513882, -0.4348469925196, -0.06566782667527114, -3.9534017750918373], [1.0228246754293133, 0.0835231843196122, -0.9876573925256632, -1.4228635345808056, -3.959865820398541], [0.9536050219943253, -0.04970846701669729, -0.976114431561603, -1.5730451400922434, -4.048083391751063], [1.0099282169453963, -0.10629343897003919, -0.9615500252237296, -1.534059462716081, -4.077383363920953], [0.44782164943957437, -0.5153223317923812, -0.5809661316974071, -0.6335537996400596, -3.9238157362295607], [0.1360454758679771, -0.1315667062657008, -0.6454463944690152, -0.8234240701308927, -4.110312274440869], [0.44171376301368953, -0.03660641610849774, -0.5053640129653401, -0.6799218420013359, -3.792395989280858], [0.8369312966331215, 0.05634495352338714, -0.6639860210764321, -1.0607905811830503, -4.264685343744647], [0.8100137445854386, -0.12624298125705502, -0.7412986869948147, -0.8918739456243073, -3.979072492793275], [1.5734051141647913, -0.3286695773555436, -0.9344683921224292, -1.1595451661161087, -4.05487945524925], [1.830164652130315, -0.34381877082163126, -0.7263062011606619, -1.32616679735959, -3.9658165125998086], [1.5959389866056193, -0.47864462979498734, -1.0065758216306795, -1.16785388853389, -4.037517578071284], [1.3617621666280886, -0.6762109557714495, -0.7646264316947431, -1.2845123592082315, -4.360738511749383], [2.281269188989568, 0.7230951086299069, -0.5355008891054105, -0.8675851984895961, -3.7455561922249947], [2.2744999329695825, 0.8495177556760717, -0.7421564729428345, -0.6383123706503409, -3.945543901938401], [1.9411440857514186, 0.9374368363119482, -0.8948536137965512, -1.367885779050118, -4.053840646267698], [2.1287154775458377, 0.7637091378024434, -0.7083338620821285, -0.989594733831562, -3.9962653438694393], [2.087493820152979, -0.05368158762723488, -0.47232432660990925, -0.9286968320384682, -4.110007264305449], [2.3753038907718396, 0.12294759502792676, -1.0573315743392797, -1.054199282966369, -4.184782664438798], [1.8967969610688273, 0.4895561710715914, -0.9963695174536247, -1.1896045430332973, -3.844378363878897], [1.811037180844058, 0.4687232105743532, -0.7450145170527718, -1.01719394943578, -4.11012959110916], [1.6713815852673028, 0.7578893184002905, -0.3978209009918329, -0.45997795988251544, -4.057184193717912], [1.7098279008117665, 0.7022233627149936, -0.3497612713891044, -0.5371832585575425, -3.9713269904926913], [1.0627205845299414, 0.3330174568696429, -0.9648276119584845, -1.4070960543341071, -4.060375230997552], [0.9553498090439349, 0.2363313168040932, -0.7631368443285437, -1.323022048011349, -3.9926110050659], [1.3376479857227548, -0.7023090246359875, -0.6018910481525453, -0.773510823778, -4.138003062993956], [0.6416308946138555, 0.08641300988162329, -0.3847224113912967, -0.5333497686166022, -3.920789701690698], [1.136657270597964, -0.13546633217178963, -0.6363472352558653, -1.4721292858322943, -3.9348311796662383], [0.5840718906256473, -0.44069350276088476, -0.9484162085287762, -1.11367968723476, -3.639943478524586], [0.7496901402365596, -0.3563381157947756, -1.0270485632870903, -1.1174116874007003, -4.233243847092102], [0.5247478471065689, -0.1941986742184412, -0.9314996978565061, -1.2887541005258165, -3.933797263196936], [0.5897440754222867, 0.11798389534458142, -1.0408378519024033, -1.4873952651657218, -4.234683901955256], [1.3394552564584719, -0.8655711796579276, -0.7123488396581723, -0.785454053430798, -3.814133448732155], [1.4754841716123595, -0.9319062209037672, -0.6145528994606307, -0.7050245867460057, -4.037525337014434], [1.0473542931565039, -0.26988072123866225, -0.6863617054376197, -1.2094496099532674, -4.192470855565472], [1.088293862322056, -0.29829380922213117, -0.7239174526059364, -0.8709637598945019, -3.7306932937381156], [1.5263849681312938, -0.0685354130039551, -0.7439332507614446, -0.8048525911852212, -4.274233416418228], [0.6902343343768913, -0.6413546974823242, -0.6245001838334007, -1.0460604143095895, -3.4121554817976087], [0.791026697511906, -0.5068488745895984, -0.776292637763529, -1.0480446595201653, -3.578797473852453], [0.5849899789521288, -0.410434459045689, -0.7318743555018594, -0.9332252685341291, -4.131713059539675], [1.1396739031894867, 0.5187184038983189, -1.1072396258109898, -1.5962267761526499, -4.325839583489142], [0.9251914137052297, 0.6474514225615289, -0.9727323044480372, -1.800093038143795, -4.4407524211593055], [1.605672346460106, -1.5182705161034051, -0.36255783749086457, -0.25232326578927433, -4.441327170522035], [1.3058924407201051, -1.0633201629640667, -0.6461232763472812, -0.8974484534460516, -3.7225921649467164], [0.7219349342017142, -0.8357491821363322, -0.5526069297439739, -0.13445161954133722, -4.30377364797428], [0.6895272664910146, -0.9074130206024948, -0.3744838767316836, -0.13434370309369598, -4.292145582569352], [1.2269169880563928, -0.07555829273981016, -0.6819074006693625, -0.9003971172211749, -3.9944895261309075], [0.6649726694998923, -0.10005696619373643, -0.7833781045820741, -1.4017752035697373, -4.003895812401202], [0.96918313086427, -0.05070862992093959, -0.6317234574029558, -0.981981161240823, -4.038834281901952], [1.5478797992836542, -0.018186789868319973, -0.47368008736915374, -0.6574942162174794, -4.15499903754643], [1.9960193816527483, -0.29472264436824025, -0.41096107692860123, -0.4949975878283922, -3.951314325383976], [1.0923153046250942, -0.03517518234722131, -0.9700721873063989, -1.3428816413760774, -4.010821456940991], [1.196920107741227, -0.13570481313405597, -0.7961583888526217, -1.418036686759941, -4.009500450763232], [0.8729270183176365, 0.0276144168716926, -0.6442086642066154, -1.0025937684581872, -4.168722610997694], [0.6747253167313932, 0.00836471395380313, -0.6959891088337918, -1.0486117869656357, -3.803182997677696], [0.793284377921453, -0.16604487934014514, -0.6260353877990711, -0.9257181542994809, -3.8588148286440416], [1.0986835462620435, -0.7133436152871263, -0.7918775832700312, -0.9590542809832098, -4.2265422266106585], [1.9944343584991933, 0.5367658751803406, -0.7386132890370775, -1.0447563258693433, -4.159478978635567], [2.2876538793317667, 0.333824142526314, -0.9662599283176774, -1.5297993810553772, -3.748949419682563], [2.347805957287428, -0.2628714366250702, -0.5392565158878101, -0.7838771894739969, -4.0156825065613875], [1.2111100073334653, 0.8099631269482842, -0.9740952942536805, -1.4259206130894893, -3.809384718444436], [1.0302289418996695, -0.0579199251416698, -0.7610608416229404, -1.2217531010951599, -4.21094535624525], [0.994177814196078, 0.019400867307214437, -0.8038287403026814, -1.062371953375502, -4.117081427852705], [1.8142479911631635, -0.24432114697540108, -0.40376611115390887, -0.5158257448515042, -4.049505893347746], [1.6315979379968393, -0.03236183875662171, -1.341926021150645, -1.4486452165531833, -3.9521675835371246], [2.1750805102198516, -0.053833392812400224, -0.736050918706392, -0.9105629869391278, -4.082271515359202], [2.0786863711155976, -0.017729792448561675, -0.7533564061715803, -0.9840135634339403, -4.1434369071682555], [1.9756893703443528, 0.08232462580442598, -0.9811870891772839, -1.2338036341904879, -3.92522394478992], [1.2009462574746006, 0.1804031998703809, -0.6517272948581955, -0.6844748339500866, -4.0387131911387515], [0.7727269200479466, 0.08972941642926638, -0.5779591270373323, -0.5213937555054692, -4.268437099131097], [0.7818277411476741, 0.17016705564781548, -0.530590533129065, -0.4750626174724873, -4.253501619565427], [0.6533792584298614, -0.13162783839802736, -0.542218330377683, -0.5627289077401734, -3.624190924237537], [0.26945390059352015, -0.7453708709900038, -0.5244484353629615, -0.7799320735319479, -4.103211472009844], [1.3566057897273303, 0.2581717366298283, -0.8962809664352055, -1.3418503869062053, -4.159402875352936], [1.4837498150679613, 0.5755426922718428, -0.5613668118007926, -0.7873610078150819, -3.9501228363475978], [1.50977138098699, -0.11046113698999147, -0.6441918833828337, -1.122871718341471, -4.004868635683567], [0.461848660640389, -0.336807966337632, -1.0216784840555344, -1.5342835413935678, -4.165473189598136], [0.6340771563314774, -0.26937621693399855, -0.9745273042509804, -1.6165215897219938, -3.8995020071889215], [0.5084227580275462, -0.6927982635832007, -0.6105205583335019, -0.8803222632755028, -4.206399297980386], [1.6304117208878166, 0.35868845683386397, -0.8854540223627059, -1.289708967018358, -4.03864873971139], [1.626727794382867, 0.29895319428079237, -0.9759889632206571, -1.5156983988267374, -3.968106212253328], [0.14194198087553306, -0.6965523026412603, -0.4298632079126911, -0.33889603640228955, -3.9691552242668604], [0.8508014742793502, -0.49228727377029435, -0.70697880655647, -1.0886899126860292, -4.13159114456664], [0.7207514845079873, -0.39302888250548224, -1.1289143965612949, -1.5016160493133228, -3.729722226869772], [0.9869284564029412, -0.11091765587564603, -0.4200030456344641, -0.6373297765907728, -3.7927844681132292], [1.2219086282827893, -0.11904059576799482, -0.3916587814077399, -0.4170900332393524, -4.1183512425257405], [1.168736640179082, 0.13503743636711057, -0.7468266291583145, -0.7473191831563402, -3.8675997525059675], [1.3166091197678345, 0.05693237224148911, -0.8027207603527324, -0.7886091856385079, -4.340404396901216], [1.6450230184877725, -0.10070045660342383, -0.6061118575105564, -0.5377311688160139, -4.027803023906036], [1.262618751398633, -0.6511290361930377, -1.058087761879365, -1.3474813831832868, -4.051999411783935], [1.2494922092829706, -0.5425654786962628, -0.634773621168119, -0.7922316702565273, -4.020679954732444], [1.9505400465843412, -0.29279945966587984, -0.6423717291717745, -0.9794581849299704, -3.974317288112054], [0.8844271494850944, -0.303452514035251, -0.7667674419199103, -1.2347065381980202, -3.9998857098548575], [0.624570492435614, -0.5673650800745997, -1.1233030090491698, -1.7368540101875487, -4.1832989420634705], [0.7852407814147235, -0.6673311451129484, -0.7668641328040151, -1.1652002412415736, -4.124119304254161], [0.19594770670157546, -0.0924768650837259, -0.49195145053356704, -0.420501973842624, -4.078573180737296], [1.2653719735866042, -0.5065444217472044, -0.9073434864411009, -1.332071838003454, -4.197174089091471], [0.8225727313741016, -0.37325502995613624, -0.7557734878301836, -1.3244515467958626, -4.230962729985698], [0.8796583393971046, -0.6017623458860553, -0.6027529685744848, -0.983684446773447, -3.827347674647573], [0.7148843349071962, -0.15404244031202236, -0.7453307430349021, -1.0942308916930306, -4.143762881921392], [0.6353753205403235, 0.017325390233027343, -0.5715014470733144, -0.7430391709740721, -3.8762315325091725], [0.8830517809544123, -0.5448394622152191, -0.4308809660018793, -0.27240885380615965, -4.137477848772037], [1.2568643023919917, -0.450335742661846, -0.39821729447817156, -0.390390909859053, -4.09928386538908], [1.1399765855207322, -0.43790360211212703, -0.9796693848514031, -1.564490183965184, -4.080001432496546], [0.7765792758286681, 0.6377343451666323, -0.6750408721422636, -1.25774360698349, -3.8752690493023785], [1.0824009101144738, -0.2672717869341792, -0.47925662216177767, -0.5143744345660839, -4.158375765050768], [1.062269984816639, 0.01141247328858026, -0.9750006864888116, -1.6185390544651914, -4.168897059114574], [1.4464644992538433, 0.38913944718860266, -1.2718499623678363, -1.6966938608916404, -3.9634753401554628], [1.029012707741547, 0.19765379156552365, -0.6107704883017047, -1.1069864945844243, -4.082154354938017], [1.22944202519323, 0.4591854563758894, -0.9899282837011814, -1.34790847165835, -4.123078806290524], [0.9859880979788364, -0.2667191908611532, -0.5363511380748769, -0.7335309644840857, -4.061958662722422], [0.7840727179627994, 0.056573639178541454, -0.5468449392388793, -0.8694303244489511, -4.218698343517691], [1.0880432286512682, 0.318596795773285, -0.9893567144795854, -1.2062906650415888, -4.2003088097103545], [1.0717531307837684, 0.2089323760174387, -0.9474887431965653, -1.1304708233129104, -4.05535191463032], [1.5766656341324201, 1.1426949819686847, -0.819747185640939, -1.2075759060457432, -3.830199696838662], [1.5588824010883873, 1.0988153481769136, -0.7999043987589243, -1.1607392691716327, -3.883267093432995], [1.6255898485706406, -0.4384854849876741, -0.8656653155213702, -1.1523829302391062, -4.174796247580729], [1.7402511515335695, 0.38079302433081735, -0.6156804445269809, -0.9512603100415389, -4.175594249214604], [1.757642795073661, 0.2087313615612412, -0.6263243014067156, -0.9282325476411033, -3.9309456726719776], [1.7028456203174218, 0.33651873930166704, -0.6662264568403339, -0.881459992610021, -4.062334164988277], [1.8811398058627633, 0.23527342472389845, -0.6269043699615151, -0.6530113233718056, -3.745478226589742], [0.8213701650956039, -0.6210303253843016, -0.9014826992948564, -1.3453499575116108, -3.739550518823049], [-0.1527723513834677, -0.1510608267950082, -0.6404673205781806, -0.872030645484686, -4.247855222309389], [-0.0011249921514950856, -0.275497495116445, -0.71754354993733, -1.0482476005767465, -4.29122909900473], [0.6190963579891384, -0.34510920635663955, -0.6839704338772292, -1.193049152016474, -3.8660766851985238], [0.9574695384859655, 0.1735905320267357, -0.9769208484020635, -1.2179305510615628, -4.204224181303857], [0.707374181321643, -0.39049972887267476, -0.508875277103334, -0.69462885066252, -4.000006629477277], [0.4397772870724804, -0.35137563334431826, -0.5027200286690013, -0.5314445617129149, -4.050261486615371], [0.5150130731391662, 0.07280972613473574, -0.3980504292715076, -0.3418736579939336, -3.811483383865936], [1.1006761921014243, 0.4447828625303397, -0.7430039516916369, -1.0774734290459422, -4.050999706796729], [1.6545013659272154, -0.6954430408592809, -0.7900741735458062, -1.0294170975527859, -4.013474096607755], [1.588838335447431, -0.6496608639891432, -0.6069139850764886, -1.1982438361009684, -4.003838769426483], [0.5548700211113089, -0.44031008124567417, -0.8295365358369501, -1.4767486339392881, -4.071991927388969], [1.2823487393237503, 0.04789705499174351, -0.665774606278013, -1.2562710665743704, -4.1853500549343305], [0.9398066069846259, -0.3764806054680984, -1.0421094196839593, -1.5285587626064079, -3.924572698374649], [0.8457541584753638, -0.6030383018643103, -1.2143543139843511, -1.708643560003038, -4.209717341751144], [0.5827041954711667, -0.2561292653824361, -0.8872749831181593, -1.429738793745208, -4.030947315832914], [1.1026882150186235, -0.812703533892851, -0.8130552534692497, -1.2992475468825762, -3.9161410667530223], [1.7830965133143581, 0.5068619734741948, -0.45479517257503727, -0.4216371320375822, -3.9065462646423117], [1.660288680547333, 0.33953072403696044, -0.5476567166312779, -0.6208401601316076, -4.011097524014665], [1.7232530203259089, 0.09703421695830325, -0.9521190998984159, -1.412155314703594, -4.130763435298298], [2.152409449058394, 0.06032406206771679, -0.5479561478973816, -0.7871824480977603, -4.06057639951334], [1.9592174547283967, 0.04166513978210111, -0.7824662518736025, -1.1986536747268226, -3.814450934780832], [1.525897877475702, -0.21255708549045532, -0.6637273777436844, -0.8307150522410439, -3.9989485775931684], [0.8756748975706206, -0.1069879466721338, -0.7287029311493551, -0.8129118013770412, -4.078926709516904], [1.163633417330024, -0.022829607597609568, -0.6653752155673648, -1.1476218235990436, -4.104133604818774], [1.9057324564934277, 0.08240667939728, -0.8295146687311828, -0.9435082091039493, -3.92144282560973], [0.8197336851403201, -0.5081922903966722, -0.6867346673486957, -1.20626727609012, -3.8765542303963407], [1.4531370303296935, -0.2836053252357176, -0.7959023767265001, -0.9543989333049823, -4.194179265064242], [0.5222359226824129, -0.28386429772616456, -0.6513480114686033, -1.0528966412085432, -3.8177425794683546], [0.8243096632302144, -0.3346784605155038, -0.7951426251877266, -1.0603805687958627, -4.203518532877849], [1.3374294046143524, -0.09356221651440946, -0.6283474309539472, -1.2472209218103618, -3.765979085611691], [1.054746801388452, -0.0016320772466480726, -1.0076550296441809, -1.3709976417527483, -3.629271597734683], [0.9791428867892211, -0.9300108219498133, -0.676698229004479, -0.6685350752515218, -4.385036810276473], [0.9922772892770672, -1.2452436731986436, -0.4116454441498386, -0.5992206933701568, -4.35543896659109], [1.2630089952114014, 0.8420872117098113, -1.1145764608085944, -1.6637221940254663, -4.379553503756206], [0.884686864022609, -0.6125543235854214, -0.7245772591024118, -0.8098753740475044, -4.025078931453578], [0.5625233128991162, -0.37009051342756916, -0.46925344594661694, -0.7964625171361903, -3.985118045093456], [1.084974461467186, -0.7791986040564898, -0.7092056290584772, -1.2121577031402833, -4.149082292795226], [1.5376452529588285, 0.1391343766356718, -0.6002173900358734, -0.6352684879404942, -4.0749424222592205], [0.42930322325815407, -0.006697371555869386, -0.8333074085302675, -1.2722972987435233, -4.124963563514449], [1.247666807892505, -0.5657886307257604, -0.7217021667169183, -1.226584821931801, -3.6119012176535605], [2.126701480031138, -0.05695596824925525, -0.6613982405986603, -0.7504352985812077, -4.072840466044725], [1.1032873178495386, -0.2929937495228519, -0.5775097004918502, -0.9195648202857941, -3.7615972724166413], [1.0391432460920766, -0.6684570497182176, -0.5520185470053154, -0.552809569709519, -4.0255526772151065], [0.1863497390898483, -0.5419932079597236, -0.5118341515477125, -0.7176116772941769, -4.006582040959067], [2.5028066034212317, 0.3960153519976145, -0.9502982685982424, -1.37986324078846, -4.058683209623718], [2.4729437214741643, 0.2521027218024217, -0.45545904112008617, -0.6162610491366353, -3.5869713986833203], [1.8119991550098784, 0.9381046218153148, -0.6280101491324731, -0.8656376622424135, -4.233402240037952], [1.574366809293874, -0.6535519059726013, -0.8129714037506743, -1.213723832663236, -4.143755228755292], [1.6755938333746416, -0.8938108699820413, -0.8675200679213458, -1.0230083806878583, -3.958852497671767], [1.5320243080507414, -0.09630045140240481, -0.4034469798294868, -0.33118326256147207, -4.1125592311480395], [1.650966982426581, -0.15734739563738082, -0.5195408061751421, -0.40045168629209527, -4.2641709752060715], [1.100139374373458, -0.330576582377031, -0.6340574792294509, -0.7589171638654681, -3.790259884153926], [1.4940876814632307, 0.12762350638113013, -0.8359438460210162, -1.1768619728487684, -3.944647337863814], [1.27809588392445, -0.159357089386281, -0.7384000866438056, -1.1216885254241267, -4.1205569914353495], [0.8915672023799324, -0.2565466542101495, -0.5642589504648682, -0.8393398030013637, -4.003632578971477], [0.9283145130954745, -0.241552034236521, -0.5938264062092347, -0.7431900284973139, -3.873672151694376], [1.4720831006682489, -0.5266332503928451, -0.48540739602253447, -0.5482873767773299, -4.14779755421934], [1.7188418437382014, -0.36483943992366624, -0.7144884380171307, -1.0496086633738626, -4.231695572251818], [1.1883994699706608, -0.3001601879083825, -0.6634285713684106, -0.9684441783612705, -4.1563631213203855], [1.2098083016573902, -0.3695745910482733, -0.8105848319195007, -0.8036793232198062, -3.996395467391326], [1.4678186502604684, -0.5416712347189164, -0.4269752054561389, -0.5242130602726065, -4.108237887630375], [1.435458160446369, -0.9443760724579638, -0.5771294354901512, -1.0272272741513364, -4.009390298161608], [1.7170380475995282, -1.1055033963421521, -0.776515705846683, -1.2557112194025721, -4.048734114443653], [0.8068395933942198, 0.13047411596744585, -0.5816369734715463, -0.9088803315935398, -4.0741605837955674], [0.9737589020733969, -0.8751972817728041, -0.494720768539103, -0.521762431077492, -3.989804313828543], [1.0554505385995445, -0.5722400776254492, -0.5795451000596492, -0.7966278050351219, -3.9141343048872166], [0.663880989466036, -0.03606263327532829, -0.8677445846795837, -1.2633052280941919, -3.9084809080526783], [0.9740255715790576, -0.13908679576901836, -0.726480926995747, -1.0926610422061422, -4.074586113250868], [0.786058086732541, 0.1471086466062136, -0.5239987109767393, -0.7162497481183389, -3.947505080171858], [0.812780572412089, 0.12010512808895116, -0.4182526616406851, -0.6955385878400995, -3.791600480392129], [1.0097503717097178, 0.23864658023649793, -0.8460393892442403, -0.9640982627416284, -4.120726600916255], [2.396320917531692, 0.5093918821850402, -1.0473011979524003, -1.2451367960122288, -4.1349879707456], [1.3246725546231815, -0.03254134741992401, -0.8650703461328133, -0.9071266792169651, -4.133231259883139], [1.040138630257191, 0.43897342457771693, -0.7412935845877937, -1.101684978099526, -3.897199327562545], [1.1741300228552496, 0.5268805593114663, -1.0012369560025045, -1.2492491262800864, -4.1553311130537285], [0.9363402696416443, 0.7980528976377784, -0.7554740145092371, -1.1670153225491504, -3.9385014573580506], [1.5553564269102362, 0.14375686685096653, -0.6841573108765716, -1.0433015857218042, -4.192004908049606], [1.8354182921609288, 0.6911414142904989, -0.8354867495282949, -1.2819652512794044, -3.7140337986545617], [1.5370738700340965, 0.8941728258040318, -0.985393672556393, -1.3188747360931188, -4.354832372895704], [2.636171516214131, 0.27373073297099126, -0.6802288267703607, -0.7339657143225801, -4.361460475473536], [1.0596635760866262, 0.0005779562888020492, -0.8341617386107107, -1.4681334269866007, -4.335705410137246], [1.003440436268188, 0.0006558254921115325, -0.8551363775343358, -1.3936830495844548, -4.307395152739096]], NamedTuple[(n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = -14.36070012646822, hamiltonian_energy = 16.137870087883243, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 9.27308193135401e8, tree_depth = 0, numerical_error = true, step_size = 0.8, nom_step_size = 0.8, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = -14.36070012646822, hamiltonian_energy = 16.22099440102506, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 3.4875419541924866e10, tree_depth = 0, numerical_error = true, step_size = 1.8680518327273068, nom_step_size = 1.8680518327273068, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 16.73077809115663, hamiltonian_energy = 7.562064423259784, hamiltonian_energy_error = -7.804250699098663, max_hamiltonian_energy_error = -7.804250699098663, tree_depth = 2, numerical_error = false, step_size = 0.18418867766839725, nom_step_size = 0.18418867766839725, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.5327339280060838, log_density = 15.449946236111362, hamiltonian_energy = -14.402888391273835, hamiltonian_energy_error = 0.07360223165651725, max_hamiltonian_energy_error = 47.047918010227974, tree_depth = 3, numerical_error = false, step_size = 0.19183312443074416, nom_step_size = 0.19183312443074416, is_adapt = true), (n_steps = 23, is_accept = true, acceptance_rate = 0.999767517381038, log_density = 15.268893218728511, hamiltonian_energy = -14.408662350239013, hamiltonian_energy_error = -0.004434255573604773, max_hamiltonian_energy_error = -0.06112534066932973, tree_depth = 4, numerical_error = false, step_size = 0.06827744461294448, nom_step_size = 0.06827744461294448, is_adapt = true), (n_steps = 23, is_accept = true, acceptance_rate = 0.9934843586592129, log_density = 17.978098637385255, hamiltonian_energy = -12.153962528368197, hamiltonian_energy_error = -0.04968884475335145, max_hamiltonian_energy_error = -0.195674287479763, tree_depth = 4, numerical_error = false, step_size = 0.10068143809641633, nom_step_size = 0.10068143809641633, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.3978215407700826, log_density = 17.909601868506467, hamiltonian_energy = -16.98097156305612, hamiltonian_energy_error = -0.5243503046102482, max_hamiltonian_energy_error = 3.030473371192951, tree_depth = 3, numerical_error = false, step_size = 0.1617967534511355, nom_step_size = 0.1617967534511355, is_adapt = true), (n_steps = 63, is_accept = true, acceptance_rate = 0.9957059242628279, log_density = 17.352754544867842, hamiltonian_energy = -14.438153977259905, hamiltonian_energy_error = 0.016744614517483214, max_hamiltonian_energy_error = 0.021103202547090305, tree_depth = 5, numerical_error = false, step_size = 0.04337130715801107, nom_step_size = 0.04337130715801107, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9753572974784985, log_density = 17.308934285861028, hamiltonian_energy = -15.700290061508866, hamiltonian_energy_error = 0.028481780054226746, max_hamiltonian_energy_error = -0.09932332373970887, tree_depth = 4, numerical_error = false, step_size = 0.07628496754701587, nom_step_size = 0.07628496754701587, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.8579788059093579, log_density = 19.151464050347805, hamiltonian_energy = -16.68237663316976, hamiltonian_energy_error = -0.5967595778982933, max_hamiltonian_energy_error = 1.1653610303800193, tree_depth = 3, numerical_error = false, step_size = 0.1297663404270134, nom_step_size = 0.1297663404270134, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.5721381595345701, log_density = 18.265417641304847, hamiltonian_energy = -15.617842280351441, hamiltonian_energy_error = 0.7491885104425027, max_hamiltonian_energy_error = 87.18491132972089, tree_depth = 4, numerical_error = false, step_size = 0.15498994631778953, nom_step_size = 0.15498994631778953, is_adapt = true), (n_steps = 47, is_accept = true, acceptance_rate = 0.9999892959715809, log_density = 18.60358480736175, hamiltonian_energy = -17.899652143291224, hamiltonian_energy_error = -0.01781133246243982, max_hamiltonian_energy_error = -0.049631977177597264, tree_depth = 5, numerical_error = false, step_size = 0.07579931686227555, nom_step_size = 0.07579931686227555, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.7937980546408347, log_density = 18.116384003666695, hamiltonian_energy = -16.148477306496254, hamiltonian_energy_error = 0.08002266124451651, max_hamiltonian_energy_error = 0.34443497536556755, tree_depth = 2, numerical_error = false, step_size = 0.1443029858359127, nom_step_size = 0.1443029858359127, is_adapt = true), (n_steps = 39, is_accept = true, acceptance_rate = 0.2818521886896065, log_density = 16.11561899779239, hamiltonian_energy = -14.980732891365173, hamiltonian_energy_error = 0.31511054693885576, max_hamiltonian_energy_error = 90.61905584283775, tree_depth = 5, numerical_error = false, step_size = 0.14405863785444945, nom_step_size = 0.14405863785444945, is_adapt = true), (n_steps = 23, is_accept = true, acceptance_rate = 0.9952146641779016, log_density = 14.491499102405989, hamiltonian_energy = -12.84550733632183, hamiltonian_energy_error = 0.009582248889925538, max_hamiltonian_energy_error = -0.06681762706559091, tree_depth = 4, numerical_error = false, step_size = 0.02927301139718574, nom_step_size = 0.02927301139718574, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9611965237473227, log_density = 16.99992303848273, hamiltonian_energy = -11.41439710471379, hamiltonian_energy_error = -0.12827497512871666, max_hamiltonian_energy_error = -0.397674970778354, tree_depth = 5, numerical_error = false, step_size = 0.05552837915181306, nom_step_size = 0.05552837915181306, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.841296332972183, log_density = 18.04215773813695, hamiltonian_energy = -13.318560033373798, hamiltonian_energy_error = 0.22965799843540857, max_hamiltonian_energy_error = 0.3703601858964767, tree_depth = 3, numerical_error = false, step_size = 0.09437861782144763, nom_step_size = 0.09437861782144763, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.628626789479872, log_density = 17.69102997779634, hamiltonian_energy = -16.409680604537225, hamiltonian_energy_error = -0.05766876878110949, max_hamiltonian_energy_error = 1.9364871147186165, tree_depth = 4, numerical_error = false, step_size = 0.11064171303460267, nom_step_size = 0.11064171303460267, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.996238556897416, log_density = 18.514678864210797, hamiltonian_energy = -16.26258125484953, hamiltonian_energy_error = -0.04447411724902395, max_hamiltonian_energy_error = -0.10739256378727191, tree_depth = 4, numerical_error = false, step_size = 0.0680450463201603, nom_step_size = 0.0680450463201603, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.42750101340227487, log_density = 18.96173979953982, hamiltonian_energy = -16.259753315143012, hamiltonian_energy_error = -0.6874657814912055, max_hamiltonian_energy_error = 9.464014137757394, tree_depth = 3, numerical_error = false, step_size = 0.12752940120462442, nom_step_size = 0.12752940120462442, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.85279536887055, log_density = 18.388752107607004, hamiltonian_energy = -17.27922463665251, hamiltonian_energy_error = 0.17143367384105446, max_hamiltonian_energy_error = 0.32311023954921936, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8998767560313344, log_density = 18.627500429140376, hamiltonian_energy = -15.584309034114, hamiltonian_energy_error = -0.20103153575969657, max_hamiltonian_energy_error = 0.524196037229256, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8805723509737714, log_density = 17.456943547176813, hamiltonian_energy = -15.961163426643239, hamiltonian_energy_error = 0.1414797263268497, max_hamiltonian_energy_error = 0.4671905288320328, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9872438303381202, log_density = 18.66039114621554, hamiltonian_energy = -14.246474562108183, hamiltonian_energy_error = -0.02618678367210414, max_hamiltonian_energy_error = -0.3300916927771951, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9111498722506886, log_density = 16.86348944674666, hamiltonian_energy = -15.549211668258073, hamiltonian_energy_error = -0.14130206746755114, max_hamiltonian_energy_error = 0.2877478470139163, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9291853289997588, log_density = 17.579929181500948, hamiltonian_energy = -14.82128091088378, hamiltonian_energy_error = -0.005088803348792581, max_hamiltonian_energy_error = 0.2625441720930404, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9491496027796037, log_density = 17.53684035893139, hamiltonian_energy = -15.892333955601133, hamiltonian_energy_error = 0.07484626234925074, max_hamiltonian_energy_error = 0.22362935198387568, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9984955352210105, log_density = 17.81089291881456, hamiltonian_energy = -14.653050070504896, hamiltonian_energy_error = -0.1353792913750027, max_hamiltonian_energy_error = -0.1631341015797254, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9448776263235712, log_density = 18.20160377001882, hamiltonian_energy = -14.581012681435443, hamiltonian_energy_error = 0.0550982818774397, max_hamiltonian_energy_error = 0.12206024133141291, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9872632070958646, log_density = 15.376639096655461, hamiltonian_energy = -13.288038835175694, hamiltonian_energy_error = 0.022607621803315325, max_hamiltonian_energy_error = -0.17017806426071225, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9876688947029146, log_density = 18.249718354834606, hamiltonian_energy = -13.886946802816254, hamiltonian_energy_error = -0.14048408856218586, max_hamiltonian_energy_error = -0.1887442391159304, tree_depth = 5, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9153031564635165, log_density = 17.85694637643139, hamiltonian_energy = -15.484743373292225, hamiltonian_energy_error = 0.04684655720930664, max_hamiltonian_energy_error = 0.16411428233049996, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9844437409095145, log_density = 17.575612513694594, hamiltonian_energy = -16.62310352527992, hamiltonian_energy_error = 0.04550964926558976, max_hamiltonian_energy_error = 0.04550964926558976, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9538607892745461, log_density = 18.57529706533596, hamiltonian_energy = -15.28708467256734, hamiltonian_energy_error = -0.137491151321246, max_hamiltonian_energy_error = -0.20422070202865505, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9294550863164817, log_density = 17.456381477087746, hamiltonian_energy = -16.135818704310285, hamiltonian_energy_error = 0.04697803503236386, max_hamiltonian_energy_error = 0.1748276633302872, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9998805004314972, log_density = 18.20492582241561, hamiltonian_energy = -17.17800317744079, hamiltonian_energy_error = -0.024370544794727778, max_hamiltonian_energy_error = -0.04596580095197922, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9741275824713109, log_density = 18.327927580873144, hamiltonian_energy = -16.556725548592745, hamiltonian_energy_error = -0.00921595776064521, max_hamiltonian_energy_error = 0.0821771432710463, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9675128659232832, log_density = 15.733578289515085, hamiltonian_energy = -15.341904893208298, hamiltonian_energy_error = 0.07189013551361967, max_hamiltonian_energy_error = 0.07189013551361967, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 17.64691928379672, hamiltonian_energy = -15.153244471157127, hamiltonian_energy_error = -0.03245210984214353, max_hamiltonian_energy_error = -0.10067362203144015, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7419534911075404, log_density = 16.5553598016174, hamiltonian_energy = -12.352768197074651, hamiltonian_energy_error = -0.5001438918499517, max_hamiltonian_energy_error = 1.1175412051235778, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 17.83014021003019, hamiltonian_energy = -15.966953895384151, hamiltonian_energy_error = -0.22569392399732457, max_hamiltonian_energy_error = -0.45619808093674585, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9631013642918272, log_density = 17.270898318659345, hamiltonian_energy = -16.08146594885295, hamiltonian_energy_error = -0.10694355284675794, max_hamiltonian_energy_error = 0.18875873007703348, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9965719736383357, log_density = 17.6217279052405, hamiltonian_energy = -14.440931538966366, hamiltonian_energy_error = -0.1487669525475912, max_hamiltonian_energy_error = -0.28187991480899477, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9729069712200307, log_density = 16.825631761938908, hamiltonian_energy = -14.475597415972992, hamiltonian_energy_error = -0.008712688544415315, max_hamiltonian_energy_error = 0.096140147181762, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9358248235983894, log_density = 18.004412911122554, hamiltonian_energy = -15.458546860383278, hamiltonian_energy_error = 0.14103706123215431, max_hamiltonian_energy_error = 0.2535440675628955, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9795169926665803, log_density = 19.021070714798277, hamiltonian_energy = -17.467110042040247, hamiltonian_energy_error = -0.14313154425485664, max_hamiltonian_energy_error = -0.171625956306805, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9611888229460739, log_density = 18.892382427478488, hamiltonian_energy = -17.69485493877991, hamiltonian_energy_error = -0.02107252438346663, max_hamiltonian_energy_error = 0.10040456102091966, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9199147784739221, log_density = 15.004712085025854, hamiltonian_energy = -12.900202676814386, hamiltonian_energy_error = 0.0803210003742354, max_hamiltonian_energy_error = 0.1610393496429161, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6728878490133628, log_density = 16.16342969151909, hamiltonian_energy = -10.15641807219939, hamiltonian_energy_error = 0.1809481810414404, max_hamiltonian_energy_error = 1.6213253840332946, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8603715308952155, log_density = 14.090341385808799, hamiltonian_energy = -11.709010803017174, hamiltonian_energy_error = 0.27004161213731415, max_hamiltonian_energy_error = 0.27004161213731415, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8183881555614622, log_density = 13.090880997756942, hamiltonian_energy = -8.466206494438673, hamiltonian_energy_error = 0.3110797416537441, max_hamiltonian_energy_error = 0.874701950957931, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9022251806192848, log_density = 17.733122421148465, hamiltonian_energy = -11.954044486691043, hamiltonian_energy_error = -0.45259873784642224, max_hamiltonian_energy_error = 1.1533549009027109, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9852603990608578, log_density = 19.08043414382537, hamiltonian_energy = -17.085130134686136, hamiltonian_energy_error = -0.20049348789275, max_hamiltonian_energy_error = -0.2655744416792487, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9770206149190778, log_density = 17.90626313348542, hamiltonian_energy = -17.29934017590962, hamiltonian_energy_error = 0.01819751330359054, max_hamiltonian_energy_error = 0.04065104757021487, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9901715876185136, log_density = 18.427565911844656, hamiltonian_energy = -17.1181335790987, hamiltonian_energy_error = 0.001458205496639664, max_hamiltonian_energy_error = 0.029547156984992995, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9827698834378679, log_density = 18.798259536794035, hamiltonian_energy = -17.21383239366532, hamiltonian_energy_error = 0.002185404652315981, max_hamiltonian_energy_error = 0.048439094213104994, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9249579806666023, log_density = 18.091210154001008, hamiltonian_energy = -17.701695848816115, hamiltonian_energy_error = 0.09184671065559158, max_hamiltonian_energy_error = 0.13838949114352417, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9999285306767779, log_density = 17.13254922676355, hamiltonian_energy = -15.734573014369374, hamiltonian_energy_error = -0.026135018844614777, max_hamiltonian_energy_error = -0.07864495202458421, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7394135799805376, log_density = 15.864549203601042, hamiltonian_energy = -13.556353690432998, hamiltonian_energy_error = 0.4126714873757926, max_hamiltonian_energy_error = 0.9476913571810694, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9710686763547568, log_density = 13.248546087902898, hamiltonian_energy = -8.7340819973513, hamiltonian_energy_error = -0.2801775586365345, max_hamiltonian_energy_error = -0.2801775586365345, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8784709921870782, log_density = 17.869305181044407, hamiltonian_energy = -12.064175867722046, hamiltonian_energy_error = 0.017988196474483686, max_hamiltonian_energy_error = 0.7845473501366058, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8572559570070213, log_density = 16.34744492281044, hamiltonian_energy = -13.844733078197834, hamiltonian_energy_error = 0.21797710409012083, max_hamiltonian_energy_error = 0.5784422521588617, tree_depth = 5, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9820684408392372, log_density = 18.003846584944597, hamiltonian_energy = -14.112083158221703, hamiltonian_energy_error = -0.21373863442425112, max_hamiltonian_energy_error = -0.3330812923433477, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.941820848567609, log_density = 17.315111809145854, hamiltonian_energy = -15.037133307239259, hamiltonian_energy_error = 0.010407037262503138, max_hamiltonian_energy_error = 0.2307831531638218, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9874221774583544, log_density = 16.60936261449111, hamiltonian_energy = -15.116156909279164, hamiltonian_energy_error = -0.05093306684211285, max_hamiltonian_energy_error = -0.06801035359993257, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 17.29153660223428, hamiltonian_energy = -15.904890497347806, hamiltonian_energy_error = -0.025701242956115422, max_hamiltonian_energy_error = -0.037292938421423116, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.989106716343506, log_density = 16.329862567987096, hamiltonian_energy = -15.656458262919648, hamiltonian_energy_error = 0.01883435832012914, max_hamiltonian_energy_error = 0.032765871426676085, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9106423619036172, log_density = 15.040619996173703, hamiltonian_energy = -13.432583133727572, hamiltonian_energy_error = -6.430020546233095e-5, max_hamiltonian_energy_error = 0.27962082030568425, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.27979552080864906, log_density = 16.28443977667748, hamiltonian_energy = -9.039607309779363, hamiltonian_energy_error = 0.7843400032073689, max_hamiltonian_energy_error = 8.415074544988858, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.93698236930212, log_density = 15.347811465706773, hamiltonian_energy = -10.956278248329149, hamiltonian_energy_error = 0.009701921972268934, max_hamiltonian_energy_error = 0.16430303972625104, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9972365412027206, log_density = 17.793055486695657, hamiltonian_energy = -13.95821554805837, hamiltonian_energy_error = -0.11090875056216731, max_hamiltonian_energy_error = -0.11090875056216731, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9783425468662195, log_density = 18.18572084922021, hamiltonian_energy = -16.95116799274296, hamiltonian_energy_error = -0.008493503239741074, max_hamiltonian_energy_error = 0.10062317330099546, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.985947656449545, log_density = 18.7919467179727, hamiltonian_energy = -17.292708458121567, hamiltonian_energy_error = -0.10870043834007959, max_hamiltonian_energy_error = -0.10870043834007959, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9981587593152632, log_density = 19.236981143557863, hamiltonian_energy = -18.45434948602301, hamiltonian_energy_error = -0.0024660685164761276, max_hamiltonian_energy_error = -0.007443815049807512, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9699649249325569, log_density = 19.190663881955665, hamiltonian_energy = -18.473515184015216, hamiltonian_energy_error = 0.0017486434939009143, max_hamiltonian_energy_error = 0.07267437964920731, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8706355422295649, log_density = 18.95652184665954, hamiltonian_energy = -16.64060094063771, hamiltonian_energy_error = -0.004422578853567671, max_hamiltonian_energy_error = 0.3888936589789189, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9925194531484481, log_density = 19.25725412501108, hamiltonian_energy = -17.02978024796733, hamiltonian_energy_error = -0.002855074598969054, max_hamiltonian_energy_error = 0.038516106829021624, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7571428407204637, log_density = 18.660964531554622, hamiltonian_energy = -15.858837212330275, hamiltonian_energy_error = 0.05771018496695035, max_hamiltonian_energy_error = 0.47134746978566966, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9411767712930482, log_density = 17.49110188972274, hamiltonian_energy = -16.557500033939938, hamiltonian_energy_error = 0.0462535368703243, max_hamiltonian_energy_error = 0.24637023708248407, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 43, is_accept = true, acceptance_rate = 0.7655295535275032, log_density = 14.186247010022807, hamiltonian_energy = -13.6668386298687, hamiltonian_energy_error = 0.3691814422070685, max_hamiltonian_energy_error = 1.2916542654847785, tree_depth = 5, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9964894128357074, log_density = 12.926120569919197, hamiltonian_energy = -11.234504866029091, hamiltonian_energy_error = 0.024881093255535447, max_hamiltonian_energy_error = -0.31952162973685994, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9464294511409275, log_density = 14.59110819329527, hamiltonian_energy = -9.206990592966005, hamiltonian_energy_error = -0.37566514524449346, max_hamiltonian_energy_error = -1.7043820736206712, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.3448467053864448, log_density = 15.02138597415117, hamiltonian_energy = -11.534428592896012, hamiltonian_energy_error = -1.097120479753558, max_hamiltonian_energy_error = 2.7176315838469645, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8993787639122726, log_density = 15.893999542639083, hamiltonian_energy = -14.10212161925192, hamiltonian_energy_error = -0.04817024511821799, max_hamiltonian_energy_error = 0.24293920013604087, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.945313122871688, log_density = 18.745529074327457, hamiltonian_energy = -14.392255601765225, hamiltonian_energy_error = 0.06443124492087193, max_hamiltonian_energy_error = 0.1412205898345924, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9727627757168484, log_density = 18.31423876723852, hamiltonian_energy = -16.576501963730262, hamiltonian_energy_error = -0.043880065801811696, max_hamiltonian_energy_error = 0.08598223456404952, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9781633699298077, log_density = 18.794496248854657, hamiltonian_energy = -17.05105029847117, hamiltonian_energy_error = -0.03446456930477382, max_hamiltonian_energy_error = 0.06208502244147596, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9597113051607633, log_density = 18.637348486291216, hamiltonian_energy = -16.730978232494238, hamiltonian_energy_error = 0.03995623185238628, max_hamiltonian_energy_error = 0.08479375928447297, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.965482330453148, log_density = 18.482595988030596, hamiltonian_energy = -16.957770757962898, hamiltonian_energy_error = 0.0078197622564673, max_hamiltonian_energy_error = 0.09428081193762239, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9139309958216402, log_density = 17.067433778265368, hamiltonian_energy = -16.470659275897216, hamiltonian_energy_error = 0.12319865966750143, max_hamiltonian_energy_error = 0.17041382295823126, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9958798511593994, log_density = 17.419768588867107, hamiltonian_energy = -16.615477759918864, hamiltonian_energy_error = 0.02926511851156377, max_hamiltonian_energy_error = -0.11590389841434501, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9898781045809094, log_density = 17.66390543149408, hamiltonian_energy = -16.21550640463787, hamiltonian_energy_error = -0.007518533837373553, max_hamiltonian_energy_error = -0.14099433633333902, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9502725135006863, log_density = 17.14905358476738, hamiltonian_energy = -13.449770438820313, hamiltonian_energy_error = -0.37767121818209404, max_hamiltonian_energy_error = -0.37767121818209404, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.7769040557814675, log_density = 16.50631994414818, hamiltonian_energy = -14.912008852118783, hamiltonian_energy_error = 0.29228547027980945, max_hamiltonian_energy_error = 0.5829617223014516, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9894211962918821, log_density = 18.808963538206637, hamiltonian_energy = -15.530576785140248, hamiltonian_energy_error = -0.08767614611513963, max_hamiltonian_energy_error = -0.1650124507205053, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.99425487426394, log_density = 18.392430859370005, hamiltonian_energy = -17.0672744019448, hamiltonian_energy_error = -0.058989678821969704, max_hamiltonian_energy_error = -0.07143357683135321, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7751734642778897, log_density = 16.778802712768613, hamiltonian_energy = -16.177241664193154, hamiltonian_energy_error = 0.28048414398408994, max_hamiltonian_energy_error = 0.31093832814425326, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9773038933790573, log_density = 15.24362112837829, hamiltonian_energy = -14.760254244141922, hamiltonian_energy_error = 0.022877708111385786, max_hamiltonian_energy_error = -0.3831758992064831, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9610079356340847, log_density = 18.132176562168333, hamiltonian_energy = -14.193482167740829, hamiltonian_energy_error = -0.07114362500930582, max_hamiltonian_energy_error = -0.3289161451901137, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9047173826469378, log_density = 17.762090241510577, hamiltonian_energy = -15.875203302402998, hamiltonian_energy_error = -0.06566908196888832, max_hamiltonian_energy_error = 0.787966900407925, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9188740654356731, log_density = 16.878405209784543, hamiltonian_energy = -13.727337421728048, hamiltonian_energy_error = 0.0009840516636678842, max_hamiltonian_energy_error = 0.3060867586435041, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9938182140652576, log_density = 17.100062855838246, hamiltonian_energy = -15.534940820445748, hamiltonian_energy_error = -0.011069871584439284, max_hamiltonian_energy_error = -0.14738612235469084, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.999819285938184, log_density = 17.247225535025915, hamiltonian_energy = -16.019993605003712, hamiltonian_energy_error = -0.08362215889922808, max_hamiltonian_energy_error = -0.11137083101535339, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8324869747073812, log_density = 16.9376783298881, hamiltonian_energy = -12.077396393475059, hamiltonian_energy_error = 0.18324119889214074, max_hamiltonian_energy_error = 0.7545870239674244, tree_depth = 5, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9586308247957935, log_density = 16.46796184461479, hamiltonian_energy = -14.085126869850647, hamiltonian_energy_error = -0.005221485581696328, max_hamiltonian_energy_error = 0.309408460737286, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9788353657271436, log_density = 17.12849840435547, hamiltonian_energy = -15.144047994099878, hamiltonian_energy_error = -0.12472926096818071, max_hamiltonian_energy_error = -0.4051344739961049, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.958853102040725, log_density = 16.879331220922225, hamiltonian_energy = -15.68076087318216, hamiltonian_energy_error = 0.08521051023513415, max_hamiltonian_energy_error = -0.18278903956677262, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9586743865298023, log_density = 17.966006897850207, hamiltonian_energy = -14.632680375646386, hamiltonian_energy_error = -0.2998706760879468, max_hamiltonian_energy_error = -0.322854641759335, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9719919553572264, log_density = 15.716677976584995, hamiltonian_energy = -14.135748928839961, hamiltonian_energy_error = 0.036319134047564816, max_hamiltonian_energy_error = 0.07251852601412878, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.998948317506686, log_density = 14.65206261552493, hamiltonian_energy = -13.288754452816802, hamiltonian_energy_error = -0.00293403754705146, max_hamiltonian_energy_error = -0.09235832402904975, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.6868432463347056, log_density = 12.755394280241674, hamiltonian_energy = -8.564829525371842, hamiltonian_energy_error = 0.32400369798825324, max_hamiltonian_energy_error = 1.2529794614313152, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9403407504745764, log_density = 14.337668704579055, hamiltonian_energy = -8.507361171609782, hamiltonian_energy_error = -0.7616043290653405, max_hamiltonian_energy_error = -0.7616043290653405, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 17.66041202208838, hamiltonian_energy = -13.973494686992336, hamiltonian_energy_error = -0.1255775892653137, max_hamiltonian_energy_error = -0.1255775892653137, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.984344986191916, log_density = 18.08460377018974, hamiltonian_energy = -15.20718117874421, hamiltonian_energy_error = 0.014757762857474432, max_hamiltonian_energy_error = 0.040872901743242096, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8728497079885011, log_density = 16.865185930148257, hamiltonian_energy = -15.470326906388758, hamiltonian_energy_error = 0.21386752192426606, max_hamiltonian_energy_error = 0.2806235335025633, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9886299464563754, log_density = 16.581564316595834, hamiltonian_energy = -14.526788276432272, hamiltonian_energy_error = -0.05488012514931917, max_hamiltonian_energy_error = -0.2903014557515622, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9998265766018228, log_density = 17.42623665980812, hamiltonian_energy = -16.200597025771636, hamiltonian_energy_error = -0.08644874662609325, max_hamiltonian_energy_error = -0.10133886006240544, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 39, is_accept = true, acceptance_rate = 0.9455862735583668, log_density = 17.229248017843155, hamiltonian_energy = -14.151255758321149, hamiltonian_energy_error = -0.10211900787216166, max_hamiltonian_energy_error = -0.26377239138880526, tree_depth = 5, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9268966661504422, log_density = 17.71411205269385, hamiltonian_energy = -13.729892116776153, hamiltonian_energy_error = 0.10322263505768348, max_hamiltonian_energy_error = 0.20854500858238012, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9454563731549882, log_density = 18.382417653156693, hamiltonian_energy = -16.38356698012482, hamiltonian_energy_error = -0.18402102096405315, max_hamiltonian_energy_error = 0.25539434372207204, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8503445534098251, log_density = 16.29546356886948, hamiltonian_energy = -13.598894164054888, hamiltonian_energy_error = 0.22743770773313798, max_hamiltonian_energy_error = 0.4395722742687447, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9788921446785727, log_density = 16.93471807461585, hamiltonian_energy = -12.566592705195836, hamiltonian_energy_error = -0.20793414402286992, max_hamiltonian_energy_error = -0.20793414402286992, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 17.312194024886534, hamiltonian_energy = -15.895027536068037, hamiltonian_energy_error = -0.05675649979541397, max_hamiltonian_energy_error = -0.2045658446693075, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9035282777779595, log_density = 17.284397223203257, hamiltonian_energy = -13.000224697424006, hamiltonian_energy_error = 0.08635549696834488, max_hamiltonian_energy_error = 0.49798368495154044, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5311096271049381, log_density = 14.05704481284074, hamiltonian_energy = -11.826382796322608, hamiltonian_energy_error = 0.4168254505944855, max_hamiltonian_energy_error = 2.8419663061204954, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8926760556401961, log_density = 16.046483907105042, hamiltonian_energy = -11.97355458484126, hamiltonian_energy_error = 0.3345561748249377, max_hamiltonian_energy_error = 1.3455449609821848, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.8658931074440738, log_density = 18.001207049522968, hamiltonian_energy = -12.479300810107901, hamiltonian_energy_error = -1.4018842078683509, max_hamiltonian_energy_error = 2.1068607515732225, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8825704019204915, log_density = 19.028096717065857, hamiltonian_energy = -14.38801533121466, hamiltonian_energy_error = 0.00811827639714835, max_hamiltonian_energy_error = 0.26144308944382466, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9849270591646279, log_density = 18.078128677236478, hamiltonian_energy = -15.880343436146223, hamiltonian_energy_error = 0.015682116566857474, max_hamiltonian_energy_error = 0.02966116999291124, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9534360139103045, log_density = 18.81632991003209, hamiltonian_energy = -17.13348618231117, hamiltonian_energy_error = 0.053909091829446254, max_hamiltonian_energy_error = 0.0834443988979352, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9953062418611289, log_density = 18.592429293254, hamiltonian_energy = -18.082214216893686, hamiltonian_energy_error = 0.016819502480522885, max_hamiltonian_energy_error = -0.08650420916764645, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9982726830156521, log_density = 18.963610740275875, hamiltonian_energy = -18.051461957982475, hamiltonian_energy_error = -0.027418317958634475, max_hamiltonian_energy_error = -0.09888884354347383, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9672884110926894, log_density = 18.510263513370727, hamiltonian_energy = -17.637384298377214, hamiltonian_energy_error = -0.0038886685090204764, max_hamiltonian_energy_error = 0.0872931613095389, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9689179208448833, log_density = 17.933931682015427, hamiltonian_energy = -17.046127562541503, hamiltonian_energy_error = 0.06702650758463591, max_hamiltonian_energy_error = 0.08769699294478883, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9522381992019855, log_density = 16.414783339839964, hamiltonian_energy = -14.606507943599155, hamiltonian_energy_error = 0.18302239815094978, max_hamiltonian_energy_error = 0.32193822971617614, tree_depth = 5, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9967844452316615, log_density = 16.620374575680025, hamiltonian_energy = -12.1494082735449, hamiltonian_energy_error = -0.1801529843752725, max_hamiltonian_energy_error = -0.4140823227898043, tree_depth = 5, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9890166369461337, log_density = 17.553307301389513, hamiltonian_energy = -15.336289552736687, hamiltonian_energy_error = 0.005799169750932975, max_hamiltonian_energy_error = -0.3885524605132389, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9950281525907304, log_density = 18.022538193440127, hamiltonian_energy = -15.781101392977492, hamiltonian_energy_error = -0.25457807499792295, max_hamiltonian_energy_error = -0.3046183285339108, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9919820657699334, log_density = 16.03455063511474, hamiltonian_energy = -14.648059474458039, hamiltonian_energy_error = 0.04340463771655578, max_hamiltonian_energy_error = -0.05525975916458847, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9557397688172303, log_density = 19.32910820621872, hamiltonian_energy = -14.421385121800913, hamiltonian_energy_error = -0.028943636539723983, max_hamiltonian_energy_error = 0.15618350653465463, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9733547489098866, log_density = 18.804468805409705, hamiltonian_energy = -18.014533635196155, hamiltonian_energy_error = 0.03064712142771242, max_hamiltonian_energy_error = 0.052954358878441354, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9356307919141842, log_density = 17.36974801160932, hamiltonian_energy = -14.564156470253383, hamiltonian_energy_error = 0.05188444561596128, max_hamiltonian_energy_error = 0.15179569877471444, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7704441043544671, log_density = 16.39452383863816, hamiltonian_energy = -10.372291260619184, hamiltonian_energy_error = -0.004375839998553843, max_hamiltonian_energy_error = 0.5639566536354188, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9985650900127777, log_density = 18.479599569497005, hamiltonian_energy = -16.048554672292475, hamiltonian_energy_error = -0.23026831417478633, max_hamiltonian_energy_error = -0.29500871139804374, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9840741506868455, log_density = 17.389810502265775, hamiltonian_energy = -15.853219945028227, hamiltonian_energy_error = -0.00724240531811482, max_hamiltonian_energy_error = 0.08027180436114634, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9608999505160873, log_density = 18.001748573691284, hamiltonian_energy = -16.08593044098501, hamiltonian_energy_error = 0.0641012422145053, max_hamiltonian_energy_error = 0.1771636597395041, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9909533182165471, log_density = 18.79418954904162, hamiltonian_energy = -16.552094588740914, hamiltonian_energy_error = -0.17510550491773103, max_hamiltonian_energy_error = -0.190013845244124, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8286776201080427, log_density = 15.730845896235053, hamiltonian_energy = -14.03501028157781, hamiltonian_energy_error = 0.22168367742794004, max_hamiltonian_energy_error = 0.2646883479940829, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9885898825681748, log_density = 16.398070758241506, hamiltonian_energy = -14.550720069825475, hamiltonian_energy_error = -0.027633651170569706, max_hamiltonian_energy_error = -0.20184736908524847, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9334815464279742, log_density = 15.50539731621339, hamiltonian_energy = -13.899564423130641, hamiltonian_energy_error = 0.04043268477171402, max_hamiltonian_energy_error = 0.21103322942834168, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9874944023044976, log_density = 14.82686157649029, hamiltonian_energy = -12.075774846037163, hamiltonian_energy_error = 0.025427230116829236, max_hamiltonian_energy_error = -0.1727387003692762, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8320315810345332, log_density = 17.9232174861036, hamiltonian_energy = -12.253679930262612, hamiltonian_energy_error = 0.16261162749032465, max_hamiltonian_energy_error = 0.5470029575939304, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9843940573311657, log_density = 18.71376049636071, hamiltonian_energy = -16.418726414006034, hamiltonian_energy_error = -0.09455197064558618, max_hamiltonian_energy_error = -0.11254494138024285, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6844279312197058, log_density = 15.229320943736786, hamiltonian_energy = -11.478948754209384, hamiltonian_energy_error = 0.6389042624271433, max_hamiltonian_energy_error = -1.0701844048783595, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9920775211983296, log_density = 16.313029354422675, hamiltonian_energy = -13.763354578197175, hamiltonian_energy_error = -1.0539380094609019, max_hamiltonian_energy_error = -1.8349244706244185, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9727219555363467, log_density = 17.032532238157614, hamiltonian_energy = -15.600732102007552, hamiltonian_energy_error = -0.10533107417236565, max_hamiltonian_energy_error = -0.4803991171409425, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9426918806387837, log_density = 15.072170952919114, hamiltonian_energy = -13.169362879664085, hamiltonian_energy_error = 0.1113629076534206, max_hamiltonian_energy_error = 0.14269820686827117, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9575633482271442, log_density = 17.232629977569175, hamiltonian_energy = -13.134667808967588, hamiltonian_energy_error = -0.032399462533591716, max_hamiltonian_energy_error = 0.8302049462785437, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9505438224126052, log_density = 16.87066994288184, hamiltonian_energy = -15.644862200991161, hamiltonian_energy_error = 0.011440074261065192, max_hamiltonian_energy_error = -0.5234053103713805, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9927257991020365, log_density = 17.86306261414631, hamiltonian_energy = -15.657728128786115, hamiltonian_energy_error = -0.13182361331083747, max_hamiltonian_energy_error = -0.3960794459563619, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9931328708453491, log_density = 15.835954949652251, hamiltonian_energy = -14.780789209263059, hamiltonian_energy_error = -0.10343589495843908, max_hamiltonian_energy_error = -0.37684497951770624, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9872980158841005, log_density = 18.474646143313603, hamiltonian_energy = -15.394263137179042, hamiltonian_energy_error = -0.08487909350554368, max_hamiltonian_energy_error = -0.2908498777692632, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.8478116544544277, log_density = 18.117069603716516, hamiltonian_energy = -14.08790469281692, hamiltonian_energy_error = -0.326954529023471, max_hamiltonian_energy_error = 0.9727266396660088, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9431042989302252, log_density = 16.34949202377466, hamiltonian_energy = -15.21498832418558, hamiltonian_energy_error = 0.32093407146208897, max_hamiltonian_energy_error = 0.32093407146208897, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 15.92627890090753, hamiltonian_energy = -14.487588934769665, hamiltonian_energy_error = -0.32932462490433956, max_hamiltonian_energy_error = -0.5525783195907881, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9767450322164386, log_density = 16.878758752311146, hamiltonian_energy = -12.538282760115461, hamiltonian_energy_error = -0.0565683533700998, max_hamiltonian_energy_error = -0.11847982914135358, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 17.00971956292083, hamiltonian_energy = -15.370923321855331, hamiltonian_energy_error = -0.10118738650136905, max_hamiltonian_energy_error = -0.16174327394995736, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9702240101133672, log_density = 18.68364576540661, hamiltonian_energy = -15.326330482105764, hamiltonian_energy_error = 0.027423296344021963, max_hamiltonian_energy_error = 0.0762173403044315, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7897944733606944, log_density = 16.90759053728972, hamiltonian_energy = -14.918279265380209, hamiltonian_energy_error = 0.3596921185787707, max_hamiltonian_energy_error = 0.5034044334907648, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9914538957033351, log_density = 15.7244431657407, hamiltonian_energy = -12.738437324303327, hamiltonian_energy_error = -0.5467032175322295, max_hamiltonian_energy_error = -0.5467032175322295, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9699676180550734, log_density = 13.637044902529052, hamiltonian_energy = -12.14545292677796, hamiltonian_energy_error = -0.043593070834376135, max_hamiltonian_energy_error = -0.1187421631080614, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.967790674770628, log_density = 18.643710432677693, hamiltonian_energy = -11.29075863089135, hamiltonian_energy_error = -0.08540910940027047, max_hamiltonian_energy_error = 0.09651084800757204, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8086083408163777, log_density = 15.838672572123473, hamiltonian_energy = -15.226901838229178, hamiltonian_energy_error = 0.3779689455667423, max_hamiltonian_energy_error = 0.3779689455667423, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9550303917390617, log_density = 14.72504051888045, hamiltonian_energy = -13.77532229638986, hamiltonian_energy_error = 0.09589670547942042, max_hamiltonian_energy_error = 0.613636012840443, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8988125774987329, log_density = 17.15803456580222, hamiltonian_energy = -11.325077522893961, hamiltonian_energy_error = 0.2570778195615464, max_hamiltonian_energy_error = 1.6879902248759517, tree_depth = 5, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 17.231252439765303, hamiltonian_energy = -14.378098586860808, hamiltonian_energy_error = -0.08745591515624085, max_hamiltonian_energy_error = -0.1982357070753249, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9653506639011978, log_density = 17.483702932507377, hamiltonian_energy = -13.714546451866415, hamiltonian_energy_error = 0.05624355407978143, max_hamiltonian_energy_error = 0.08827857971527564, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9873967114875865, log_density = 18.04642319184526, hamiltonian_energy = -16.878719128289717, hamiltonian_energy_error = -0.05837879930427192, max_hamiltonian_energy_error = -0.10720939812538433, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.955104151224827, log_density = 16.840611881138532, hamiltonian_energy = -14.801860962403895, hamiltonian_energy_error = 0.04612393258421754, max_hamiltonian_energy_error = 0.12637563809548702, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8473715522751205, log_density = 17.971201144681164, hamiltonian_energy = -12.017290159937382, hamiltonian_energy_error = -0.019057582655449323, max_hamiltonian_energy_error = 0.37687394875425007, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9076014798392594, log_density = 16.52462301898315, hamiltonian_energy = -14.964669263873844, hamiltonian_energy_error = 0.2235544503703366, max_hamiltonian_energy_error = 0.3106941666088492, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9712029044468892, log_density = 17.008472549579693, hamiltonian_energy = -9.086084062011393, hamiltonian_energy_error = -0.17517311493698706, max_hamiltonian_energy_error = -0.3183442162064338, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9924651715245393, log_density = 19.006681285399658, hamiltonian_energy = -16.391447411838115, hamiltonian_energy_error = -0.2662285053940856, max_hamiltonian_energy_error = -0.2944265425648247, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9993867776463604, log_density = 19.232990341938596, hamiltonian_energy = -18.757764190551224, hamiltonian_energy_error = -0.023790528603701233, max_hamiltonian_energy_error = -0.034267237939477724, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8836579112366469, log_density = 18.51077988355496, hamiltonian_energy = -16.502073065990487, hamiltonian_energy_error = 0.11615895331130233, max_hamiltonian_energy_error = 0.21510558855705497, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9534931366527265, log_density = 18.68084180748121, hamiltonian_energy = -15.633639704183441, hamiltonian_energy_error = -0.06642940500293193, max_hamiltonian_energy_error = 0.21763687810063104, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9372774645065344, log_density = 16.475624794734298, hamiltonian_energy = -16.077621768430056, hamiltonian_energy_error = 0.1604873958942683, max_hamiltonian_energy_error = 0.1604873958942683, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9276211652954033, log_density = 16.408441756021116, hamiltonian_energy = -13.90986468383519, hamiltonian_energy_error = -0.021166094050174777, max_hamiltonian_energy_error = 0.49924684780536666, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9856898678115928, log_density = 19.218751941932155, hamiltonian_energy = -13.83210785396393, hamiltonian_energy_error = -0.14738944773198526, max_hamiltonian_energy_error = -0.14738944773198526, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8918600328198474, log_density = 17.242273723880324, hamiltonian_energy = -15.253528842644275, hamiltonian_energy_error = 0.11594357344855233, max_hamiltonian_energy_error = 0.18686851649274772, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9520739811823431, log_density = 18.374117319729983, hamiltonian_energy = -15.532430457902127, hamiltonian_energy_error = 0.008457449730656208, max_hamiltonian_energy_error = 0.2506255638253698, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9220482748089703, log_density = 12.743037562954921, hamiltonian_energy = -10.40059249988193, hamiltonian_energy_error = 0.11257503409192715, max_hamiltonian_energy_error = 0.36504066576030425, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9575447993567788, log_density = 15.253438029989425, hamiltonian_energy = -10.85959428442041, hamiltonian_energy_error = -0.23933173820679698, max_hamiltonian_energy_error = 0.509853151502945, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7881812002966654, log_density = 12.485220313465124, hamiltonian_energy = -9.277999355896862, hamiltonian_energy_error = 0.27829085740180837, max_hamiltonian_energy_error = 0.3365469573488671, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9970854069908887, log_density = 15.808047603494378, hamiltonian_energy = -10.70985635823908, hamiltonian_energy_error = -0.31093956747072404, max_hamiltonian_energy_error = -0.32169836356731807, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9834527544666462, log_density = 15.752704216586487, hamiltonian_energy = -13.286850278365169, hamiltonian_energy_error = 0.03748327474519897, max_hamiltonian_energy_error = -0.10970127226036475, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8354172198643126, log_density = 18.310146859766625, hamiltonian_energy = -12.897381069769795, hamiltonian_energy_error = -0.18808995140063978, max_hamiltonian_energy_error = 0.4567358399262247, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.5897124978371028, log_density = 16.643364315428926, hamiltonian_energy = -14.054916712375901, hamiltonian_energy_error = 0.710939264067342, max_hamiltonian_energy_error = 1.8522927760348704, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9312250200454723, log_density = 15.581155858359482, hamiltonian_energy = -14.528780657598531, hamiltonian_energy_error = 0.14392479452518359, max_hamiltonian_energy_error = 0.7412191020901968, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9765838860394387, log_density = 16.293298247866133, hamiltonian_energy = -13.278325912789018, hamiltonian_energy_error = -0.31703398173710795, max_hamiltonian_energy_error = -0.5742549075916337, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9894314414119143, log_density = 16.67249490416635, hamiltonian_energy = -13.44513451737005, hamiltonian_energy_error = 0.017885455199948552, max_hamiltonian_energy_error = -0.1783505329030337, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9975414420443184, log_density = 18.41347163329061, hamiltonian_energy = -15.952548318969285, hamiltonian_energy_error = -0.044309618226686, max_hamiltonian_energy_error = -0.0864969418583339, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.93637946348213, log_density = 17.123585523700186, hamiltonian_energy = -16.349410776597008, hamiltonian_energy_error = -0.0579934723062685, max_hamiltonian_energy_error = 0.19221517994025916, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9365256537950732, log_density = 17.46974987250958, hamiltonian_energy = -15.1276893808608, hamiltonian_energy_error = 0.10067058763995718, max_hamiltonian_energy_error = 0.13918703959486223, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9662880205429635, log_density = 17.90904309994572, hamiltonian_energy = -16.260093635515943, hamiltonian_energy_error = 0.07700913948741572, max_hamiltonian_energy_error = 0.10863503800155883, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.7565442085464723, log_density = 18.882573540224406, hamiltonian_energy = -14.320601304883686, hamiltonian_energy_error = 0.1573591506518195, max_hamiltonian_energy_error = 1.0484932123197321, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9442898816186099, log_density = 13.499583568985695, hamiltonian_energy = -12.229430833507509, hamiltonian_energy_error = 0.12025422462772717, max_hamiltonian_energy_error = 0.13047744079968915, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9903399142800029, log_density = 17.2787929597257, hamiltonian_energy = -12.296024747977421, hamiltonian_energy_error = -0.3452916351194535, max_hamiltonian_energy_error = -0.3452916351194535, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.726732356926288, log_density = 15.023913061476529, hamiltonian_energy = -13.720121222323275, hamiltonian_energy_error = 0.4263886231117091, max_hamiltonian_energy_error = 0.6553437938977158, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.980043336966933, log_density = 19.094494987079322, hamiltonian_energy = -13.03564750806414, hamiltonian_energy_error = -0.2437880809097681, max_hamiltonian_energy_error = -0.2437880809097681, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9886948221303155, log_density = 18.620261326385652, hamiltonian_energy = -18.384190979959865, hamiltonian_energy_error = 0.013452421378030266, max_hamiltonian_energy_error = 0.019894731051614656, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9986164191156575, log_density = 18.93174897377348, hamiltonian_energy = -17.605641171699762, hamiltonian_energy_error = -0.002936893019086284, max_hamiltonian_energy_error = -0.024586926536070308, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9091785461910538, log_density = 17.672100116832613, hamiltonian_energy = -16.48628020619381, hamiltonian_energy_error = 0.08032976271606174, max_hamiltonian_energy_error = 0.15505034629552128, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9529678736998654, log_density = 14.651096494076505, hamiltonian_energy = -12.748862895580269, hamiltonian_energy_error = 0.16972900221100495, max_hamiltonian_energy_error = -0.5774893382373012, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9893613643567567, log_density = 16.706605462662864, hamiltonian_energy = -13.976915941614243, hamiltonian_energy_error = -0.872780339808175, max_hamiltonian_energy_error = -0.872780339808175, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.32777505616982955, log_density = 13.615596495877828, hamiltonian_energy = -12.513709190815348, hamiltonian_energy_error = 1.060123079890312, max_hamiltonian_energy_error = 1.9877375104991, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.995499635071082, log_density = 13.433277965802985, hamiltonian_energy = -11.082551980880364, hamiltonian_energy_error = -0.5724740778183275, max_hamiltonian_energy_error = -2.0744384528000523, tree_depth = 5, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9786326588542648, log_density = 16.24233805580509, hamiltonian_energy = -9.925699930011508, hamiltonian_energy_error = -0.3156651370075423, max_hamiltonian_energy_error = 0.7367335092670153, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9983543126518878, log_density = 17.563818988726347, hamiltonian_energy = -14.656301935765008, hamiltonian_energy_error = 0.011586678491159574, max_hamiltonian_energy_error = -0.16419692717606793, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.8708760860238676, log_density = 15.902081456926933, hamiltonian_energy = -15.173445135388864, hamiltonian_energy_error = 0.2578809616857711, max_hamiltonian_energy_error = 0.46759380921291616, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9812919373632468, log_density = 16.62046127519562, hamiltonian_energy = -14.781029840312874, hamiltonian_energy_error = -0.09082852035009026, max_hamiltonian_energy_error = -0.3017361155917939, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9888554133524122, log_density = 18.424196147256296, hamiltonian_energy = -13.75002915115186, hamiltonian_energy_error = -0.23064215577907277, max_hamiltonian_energy_error = -0.23344987965475283, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9686453432547147, log_density = 17.506508641695845, hamiltonian_energy = -16.37952429023908, hamiltonian_energy_error = 0.0475222301821816, max_hamiltonian_energy_error = 0.13050526997924905, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9769120340849918, log_density = 18.10564622611386, hamiltonian_energy = -15.985165168650486, hamiltonian_energy_error = -0.01900750587335054, max_hamiltonian_energy_error = 0.11935805522128007, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.99517523580468, log_density = 17.34111178430284, hamiltonian_energy = -17.0029475033488, hamiltonian_energy_error = 0.010304124528847325, max_hamiltonian_energy_error = -0.09679430611148021, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9968700106329137, log_density = 18.509613195043798, hamiltonian_energy = -16.300122393903322, hamiltonian_energy_error = -0.07885234756063397, max_hamiltonian_energy_error = -0.12776552648140438, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6256460877426256, log_density = 17.328469099506954, hamiltonian_energy = -14.128090784377887, hamiltonian_energy_error = 0.17976650336555267, max_hamiltonian_energy_error = 1.0890851168706437, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9573310119308975, log_density = 18.34056335640424, hamiltonian_energy = -16.54913043427889, hamiltonian_energy_error = 0.05042204787456228, max_hamiltonian_energy_error = 0.1476010783278987, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9387348984494491, log_density = 15.542519351845947, hamiltonian_energy = -12.465178738316903, hamiltonian_energy_error = -0.45103253176234226, max_hamiltonian_energy_error = -0.6276027205251911, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9446604460363095, log_density = 17.942127026538984, hamiltonian_energy = -12.644361568532293, hamiltonian_energy_error = 0.040119189452649806, max_hamiltonian_energy_error = 0.12078888572133195, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8435199694211425, log_density = 17.616363486479823, hamiltonian_energy = -12.910151386801367, hamiltonian_energy_error = -0.03204763930135357, max_hamiltonian_energy_error = -1.0655967921299379, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9388408899944125, log_density = 16.107639058016318, hamiltonian_energy = -13.911975713413216, hamiltonian_energy_error = -0.4309264517093787, max_hamiltonian_energy_error = 0.47618493205971646, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.624423664681241, log_density = 14.940088059510419, hamiltonian_energy = -13.692103025242574, hamiltonian_energy_error = 0.847541088398998, max_hamiltonian_energy_error = 0.847541088398998, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6235444444840185, log_density = 17.22528403724438, hamiltonian_energy = -12.36174032450203, hamiltonian_energy_error = -0.3695216023769863, max_hamiltonian_energy_error = 1.414563050619586, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.86810691140203, log_density = 13.2148120506537, hamiltonian_energy = -12.595198558441542, hamiltonian_energy_error = 0.20267311637496377, max_hamiltonian_energy_error = 0.21997132385898688, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9810539676894631, log_density = 14.2630942195117, hamiltonian_energy = -9.41917961362517, hamiltonian_energy_error = 0.040347918617268164, max_hamiltonian_energy_error = -0.2932119740078978, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9732704622290157, log_density = 15.53641935552301, hamiltonian_energy = -10.66300123439402, hamiltonian_energy_error = -0.3081191257233158, max_hamiltonian_energy_error = -0.41460068224034785, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9996244653891305, log_density = 16.504093316497787, hamiltonian_energy = -14.811640278195304, hamiltonian_energy_error = -0.02151567226019857, max_hamiltonian_energy_error = -0.07597144433684733, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9616469498536685, log_density = 18.754421777094965, hamiltonian_energy = -16.261921341222546, hamiltonian_energy_error = 0.022107465713041563, max_hamiltonian_energy_error = 0.14413425617578568, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9392643433209071, log_density = 18.705342246211295, hamiltonian_energy = -17.243794158454943, hamiltonian_energy_error = 0.020140754152322415, max_hamiltonian_energy_error = 0.1317578525877039, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9310930512573039, log_density = 18.366087515146564, hamiltonian_energy = -17.15099764998076, hamiltonian_energy_error = 0.14659912979515255, max_hamiltonian_energy_error = 0.20550287584825, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.2910060301930944, log_density = 13.486909455550949, hamiltonian_energy = -8.215966609115657, hamiltonian_energy_error = 1.3361057471379016, max_hamiltonian_energy_error = 2.216075070437027, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9771385269680629, log_density = 18.073968921733908, hamiltonian_energy = -12.102347039279264, hamiltonian_energy_error = -0.5276061069569575, max_hamiltonian_energy_error = -0.7434008310932807, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9830596769332886, log_density = 18.298765319878584, hamiltonian_energy = -17.209893585678543, hamiltonian_energy_error = 0.004054183235290054, max_hamiltonian_energy_error = -0.05264468157661284, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9754092278054552, log_density = 18.537861162554144, hamiltonian_energy = -16.305825244588817, hamiltonian_energy_error = 0.014056072083985072, max_hamiltonian_energy_error = 0.08805364745589017, tree_depth = 5, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9919336573911377, log_density = 18.906792030020853, hamiltonian_energy = -17.757692046204376, hamiltonian_energy_error = -0.018921311046902645, max_hamiltonian_energy_error = -0.03538712924244081, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9980839600684996, log_density = 18.630670681424533, hamiltonian_energy = -17.896650705206767, hamiltonian_energy_error = 0.010956986159612825, max_hamiltonian_energy_error = -0.02407320287721504, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9266156086662557, log_density = 19.022953223373996, hamiltonian_energy = -15.930907204307184, hamiltonian_energy_error = -0.047546925630678416, max_hamiltonian_energy_error = 0.14622330066987388, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9164501028829305, log_density = 16.76244763735253, hamiltonian_energy = -15.008288138803655, hamiltonian_energy_error = 0.09924830736158441, max_hamiltonian_energy_error = 0.17946623265759065, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9924527358347239, log_density = 17.675340193118874, hamiltonian_energy = -16.0328030039112, hamiltonian_energy_error = -0.020160751748559136, max_hamiltonian_energy_error = -0.058992541476246885, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.937725849701698, log_density = 17.742165860028457, hamiltonian_energy = -15.811131185091824, hamiltonian_energy_error = 0.08586701388485452, max_hamiltonian_energy_error = 0.14795993378936956, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9569677899385872, log_density = 16.957567430533214, hamiltonian_energy = -14.001584492324444, hamiltonian_energy_error = -0.02488569402534324, max_hamiltonian_energy_error = -0.12857736066567327, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8590108263616738, log_density = 14.425005544107876, hamiltonian_energy = -12.546719760230278, hamiltonian_energy_error = 0.2978749550161979, max_hamiltonian_energy_error = 0.7648429929068037, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8819167928706798, log_density = 14.062054470613914, hamiltonian_energy = -9.705146978753783, hamiltonian_energy_error = -0.07637305830655272, max_hamiltonian_energy_error = 1.1045160207800215, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.47083371036428534, log_density = 14.816901444918866, hamiltonian_energy = -2.455261723957806, hamiltonian_energy_error = -0.39551382042392014, max_hamiltonian_energy_error = 1.6832527754153102, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9963401324956005, log_density = 15.190811773318497, hamiltonian_energy = -13.195295996325184, hamiltonian_energy_error = -0.06678438359489469, max_hamiltonian_energy_error = -0.10442211939198565, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.7168093232500775, log_density = 17.114420945596315, hamiltonian_energy = -9.864050256646127, hamiltonian_energy_error = -0.4395559807497982, max_hamiltonian_energy_error = 1.2752388341570544, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5556816592750974, log_density = 17.114420945596315, hamiltonian_energy = -14.635777259113153, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 0.7623918777924192, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 17.329852914842185, hamiltonian_energy = -15.793024591210841, hamiltonian_energy_error = -0.1388678491882107, max_hamiltonian_energy_error = -0.22250542053226496, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9778442557030608, log_density = 15.716365022560051, hamiltonian_energy = -15.294639587759303, hamiltonian_energy_error = 0.045053858791515466, max_hamiltonian_energy_error = -0.05714604400768408, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9229770323677656, log_density = 14.884686450431296, hamiltonian_energy = -13.616088611038041, hamiltonian_energy_error = 0.06915894000349354, max_hamiltonian_energy_error = 0.17967216758793647, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9597347195291512, log_density = 18.07819864515635, hamiltonian_energy = -10.768669551424374, hamiltonian_energy_error = -0.00801243258621298, max_hamiltonian_energy_error = 0.18679514838759737, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9616783337229126, log_density = 18.83981917842121, hamiltonian_energy = -15.762389152013878, hamiltonian_energy_error = -0.004936161213780821, max_hamiltonian_energy_error = 0.12060470178091087, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9415617580773064, log_density = 18.69747333197045, hamiltonian_energy = -17.744532797073628, hamiltonian_energy_error = -0.0012782109048856682, max_hamiltonian_energy_error = 0.16810426184782656, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9997484614585194, log_density = 18.358591462012768, hamiltonian_energy = -17.235760828658055, hamiltonian_energy_error = -0.03494289958175756, max_hamiltonian_energy_error = -0.0700314290490951, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 35, is_accept = true, acceptance_rate = 0.8330405131590897, log_density = 15.619059468000122, hamiltonian_energy = -14.919630862434186, hamiltonian_energy_error = 0.35000554688195074, max_hamiltonian_energy_error = 0.83122861441867, tree_depth = 5, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.922327196478766, log_density = 17.43753376431593, hamiltonian_energy = -12.626837185896552, hamiltonian_energy_error = -0.294161682009463, max_hamiltonian_energy_error = -0.7897414048896607, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9796862570388672, log_density = 17.83205448276099, hamiltonian_energy = -16.428464679727014, hamiltonian_energy_error = 0.04722370815477106, max_hamiltonian_energy_error = 0.15218281154226787, tree_depth = 5, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9640813786374888, log_density = 17.52482143378985, hamiltonian_energy = -16.65804639570883, hamiltonian_energy_error = 0.14509025934268038, max_hamiltonian_energy_error = 0.23495233781863334, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.20838107053472368, log_density = 18.536408645276826, hamiltonian_energy = -11.77364455984437, hamiltonian_energy_error = 1.2545270782568707, max_hamiltonian_energy_error = 3.6042522352224378, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9707333458301285, log_density = 17.98089921546657, hamiltonian_energy = -16.34561885030407, hamiltonian_energy_error = -0.03757412683357231, max_hamiltonian_energy_error = 0.22145924673197115, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9953916521900282, log_density = 19.225800393618684, hamiltonian_energy = -16.77624065902537, hamiltonian_energy_error = -0.03345990518705122, max_hamiltonian_energy_error = -0.03835921882314608, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8347437588978969, log_density = 16.096682968063128, hamiltonian_energy = -15.04336127145506, hamiltonian_energy_error = 0.24873255010218465, max_hamiltonian_energy_error = 0.629697642474758, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9826167973597004, log_density = 19.251113676913686, hamiltonian_energy = -15.42112431097074, hamiltonian_energy_error = -0.4300284563698664, max_hamiltonian_energy_error = -0.5154475548942461, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.39736682852592603, log_density = 15.367610919640844, hamiltonian_energy = -13.251186886967432, hamiltonian_energy_error = 1.1097229776745952, max_hamiltonian_energy_error = 3.1489321892358415, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9406044024043777, log_density = 18.796324515346818, hamiltonian_energy = -14.751140093322153, hamiltonian_energy_error = -0.4985704309187824, max_hamiltonian_energy_error = -0.7771687868232213, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9940649173086512, log_density = 18.958990017406244, hamiltonian_energy = -18.0158064118101, hamiltonian_energy_error = 0.001788101714282675, max_hamiltonian_energy_error = 0.02408897059161319, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8584530191363741, log_density = 17.745948025346475, hamiltonian_energy = -16.54302562508609, hamiltonian_energy_error = 0.21393737800595858, max_hamiltonian_energy_error = 0.2618872772003584, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7535976568024985, log_density = 17.840032164060418, hamiltonian_energy = -13.256059302978231, hamiltonian_energy_error = 0.0725594045945801, max_hamiltonian_energy_error = 0.6025770641910011, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 17.653649625271925, hamiltonian_energy = -16.2805901811605, hamiltonian_energy_error = -0.02965458884051486, max_hamiltonian_energy_error = -0.1018353653537254, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 18.41302758926934, hamiltonian_energy = -17.54502207498604, hamiltonian_energy_error = -0.02273331723554506, max_hamiltonian_energy_error = -0.05793079939150303, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9673246264153477, log_density = 18.61541233624592, hamiltonian_energy = -16.555266833393482, hamiltonian_energy_error = 0.0350151641759453, max_hamiltonian_energy_error = 0.14386151687267912, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9766306939934084, log_density = 17.963571995129918, hamiltonian_energy = -16.68869085151656, hamiltonian_energy_error = -0.05389930646459007, max_hamiltonian_energy_error = 0.12794218721312234, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.7755748902718864, log_density = 17.11286399698633, hamiltonian_energy = -11.499387140201753, hamiltonian_energy_error = -0.3843081262078698, max_hamiltonian_energy_error = 0.7482987926571951, tree_depth = 5, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8883390225432675, log_density = 16.781861719952367, hamiltonian_energy = -12.69568841887509, hamiltonian_energy_error = 0.05129051734247092, max_hamiltonian_energy_error = 0.2739076439434758, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9953977847057336, log_density = 18.03276817087355, hamiltonian_energy = -15.321872193767927, hamiltonian_energy_error = 0.005161730028417466, max_hamiltonian_energy_error = -0.12789703071451086, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8969757490339, log_density = 16.49396332364234, hamiltonian_energy = -15.63087335444702, hamiltonian_energy_error = 0.272083359797648, max_hamiltonian_energy_error = 0.3062645087901217, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9419061501205311, log_density = 17.325515828299217, hamiltonian_energy = -13.62686000680632, hamiltonian_energy_error = -0.019872154229394923, max_hamiltonian_energy_error = 0.24958221462553354, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8024035501322234, log_density = 14.528125524641974, hamiltonian_energy = -12.611859853352675, hamiltonian_energy_error = 0.37073016223233957, max_hamiltonian_energy_error = 0.6984048650898025, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8021719398774091, log_density = 12.13527280127214, hamiltonian_energy = -6.965322560286005, hamiltonian_energy_error = -2.6954255990289813, max_hamiltonian_energy_error = -3.7258475965294817, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9909129756822412, log_density = 15.203498636010538, hamiltonian_energy = -11.19569576187726, hamiltonian_energy_error = -1.58332903422089, max_hamiltonian_energy_error = -1.58332903422089, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 1.0, log_density = 13.722280723280473, hamiltonian_energy = -13.084801128871543, hamiltonian_energy_error = -0.16816170323513902, max_hamiltonian_energy_error = -0.4035237972143406, tree_depth = 5, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9864469481993943, log_density = 17.193201633339747, hamiltonian_energy = -12.440237417398734, hamiltonian_energy_error = -0.11328902260073903, max_hamiltonian_energy_error = -0.1730629140096589, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9745573429541411, log_density = 15.044158374760462, hamiltonian_energy = -12.405769578202474, hamiltonian_energy_error = 0.060598259953497546, max_hamiltonian_energy_error = 0.09582384478872896, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.981661493132183, log_density = 15.96297673989365, hamiltonian_energy = -14.039209922228004, hamiltonian_energy_error = -0.10267391282289218, max_hamiltonian_energy_error = -0.1835604730988134, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9394724937644033, log_density = 16.701572955841378, hamiltonian_energy = -15.00880442976876, hamiltonian_energy_error = 0.17182870753858204, max_hamiltonian_energy_error = 0.17182870753858204, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9747345810054259, log_density = 15.089247080825267, hamiltonian_energy = -14.561185678106586, hamiltonian_energy_error = 0.028743070584535957, max_hamiltonian_energy_error = -0.18037314934639248, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9919764763863067, log_density = 18.492406554167687, hamiltonian_energy = -14.006542357242141, hamiltonian_energy_error = -0.10427492950031336, max_hamiltonian_energy_error = -0.20242502203686463, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9455534978001235, log_density = 18.49424999224542, hamiltonian_energy = -15.204630221358553, hamiltonian_energy_error = -0.03146242869489413, max_hamiltonian_energy_error = 0.20277105286769803, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9995175630010414, log_density = 18.63493100262562, hamiltonian_energy = -18.341038279231245, hamiltonian_energy_error = -0.001196967136653626, max_hamiltonian_energy_error = -0.007598017663966061, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9281754867671571, log_density = 17.56969482518941, hamiltonian_energy = -14.778459524795082, hamiltonian_energy_error = 0.05685210365684412, max_hamiltonian_energy_error = 0.11718306653296473, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9892305356270863, log_density = 16.799468361133364, hamiltonian_energy = -15.377844279176093, hamiltonian_energy_error = -0.01731890836736305, max_hamiltonian_energy_error = 0.06673349034626419, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9206726537692658, log_density = 16.665832298358577, hamiltonian_energy = -14.476886955501051, hamiltonian_energy_error = -0.003695173358144288, max_hamiltonian_energy_error = 0.20519136151837003, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 18.03899059308978, hamiltonian_energy = -16.095127253266618, hamiltonian_energy_error = -0.015997844473709222, max_hamiltonian_energy_error = -0.09683136538218662, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9082773642930527, log_density = 18.491104380916795, hamiltonian_energy = -16.799081269311987, hamiltonian_energy_error = 0.0929764677012237, max_hamiltonian_energy_error = 0.262199939246738, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9518631642025771, log_density = 18.05116686179985, hamiltonian_energy = -16.651557330278134, hamiltonian_energy_error = -0.00039212413664557744, max_hamiltonian_energy_error = 0.450079336337712, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9675055652051908, log_density = 17.7003335213293, hamiltonian_energy = -16.934055203570267, hamiltonian_energy_error = -0.054599063582308816, max_hamiltonian_energy_error = -0.21558577608526974, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9408091893576324, log_density = 16.956954294201033, hamiltonian_energy = -15.91407818462386, hamiltonian_energy_error = 0.12588967717957011, max_hamiltonian_energy_error = 0.19146826984303722, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9681821334796418, log_density = 15.730374594477457, hamiltonian_energy = -14.155421486443242, hamiltonian_energy_error = -0.03819461266434132, max_hamiltonian_energy_error = -0.30829566819843635, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9885068996766351, log_density = 15.167437260994891, hamiltonian_energy = -11.876025414674126, hamiltonian_energy_error = 0.008836763136784498, max_hamiltonian_energy_error = -0.22983422993518232, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7365110160340601, log_density = 14.021899804006491, hamiltonian_energy = -12.388537970832793, hamiltonian_energy_error = 0.3580963654739655, max_hamiltonian_energy_error = 1.1870508458514575, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9549151402806307, log_density = 16.1850176752167, hamiltonian_energy = -12.771240153486982, hamiltonian_energy_error = -0.261770664498421, max_hamiltonian_energy_error = -0.7185052390512876, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.968717008822176, log_density = 17.382643853669514, hamiltonian_energy = -14.816776938485539, hamiltonian_energy_error = -0.00887791586447051, max_hamiltonian_energy_error = 0.0747747547106421, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7651442303760494, log_density = 15.75822266963902, hamiltonian_energy = -11.88442782909234, hamiltonian_energy_error = -0.4092223109042141, max_hamiltonian_energy_error = -0.6638173097205051, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7005005033028143, log_density = 14.0200423951952, hamiltonian_energy = -11.952433709840847, hamiltonian_energy_error = 0.5916326376551773, max_hamiltonian_energy_error = 0.6012053957660299, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9234346964950919, log_density = 16.014999115289065, hamiltonian_energy = -12.396283916764979, hamiltonian_energy_error = -0.2060384397385917, max_hamiltonian_energy_error = -1.2633766844863459, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9601192062594791, log_density = 18.146977062040175, hamiltonian_energy = -14.292365199926433, hamiltonian_energy_error = -0.20713066779611466, max_hamiltonian_energy_error = -0.2899073763804285, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9390901570853406, log_density = 15.145357052488242, hamiltonian_energy = -14.093073057644855, hamiltonian_energy_error = 0.14757408556207352, max_hamiltonian_energy_error = 0.21404378314405648, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.4511604020184844, log_density = 13.752671759060771, hamiltonian_energy = -12.089949698160545, hamiltonian_energy_error = 0.9756210770405129, max_hamiltonian_energy_error = 1.1483472789236497, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 18.16585392435276, hamiltonian_energy = -13.636265834261117, hamiltonian_energy_error = -0.7265072737286342, max_hamiltonian_energy_error = -1.0819655339432046, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.998099229276847, log_density = 18.591126892063734, hamiltonian_energy = -17.781868085061543, hamiltonian_energy_error = 0.004870271194040043, max_hamiltonian_energy_error = -0.018472027036256833, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9049417783686143, log_density = 18.148438299813524, hamiltonian_energy = -16.052393195917617, hamiltonian_energy_error = -0.05334933158639643, max_hamiltonian_energy_error = 0.23299580578941814, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8813678492660876, log_density = 15.975443036145828, hamiltonian_energy = -13.685134779217423, hamiltonian_energy_error = 0.05621914624343738, max_hamiltonian_energy_error = 0.4469868417391307, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.4486169645684854, log_density = 15.675660932796175, hamiltonian_energy = -11.000350433621035, hamiltonian_energy_error = 1.4254494176651153, max_hamiltonian_energy_error = 1.4876601151982989, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 39, is_accept = true, acceptance_rate = 1.0, log_density = 14.715428125468609, hamiltonian_energy = -11.892028004732852, hamiltonian_energy_error = -0.21108859655548073, max_hamiltonian_energy_error = -1.0278652043993137, tree_depth = 5, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9893856529255063, log_density = 16.240060424757836, hamiltonian_energy = -13.568604678269242, hamiltonian_energy_error = -0.052167878125720435, max_hamiltonian_energy_error = -0.42797389162658916, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9798476494707108, log_density = 17.8753493975078, hamiltonian_energy = -13.665903321999966, hamiltonian_energy_error = -0.21846452969744767, max_hamiltonian_energy_error = -0.24230422415958586, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9660528097507898, log_density = 16.256931454061583, hamiltonian_energy = -13.179266908475686, hamiltonian_energy_error = 0.022509032268359874, max_hamiltonian_energy_error = -0.35578256362352434, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9747191534371092, log_density = 16.002428859406187, hamiltonian_energy = -12.79730215575895, hamiltonian_energy_error = 0.11732357298712337, max_hamiltonian_energy_error = 0.11732357298712337, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9628841722938489, log_density = 17.007359224155657, hamiltonian_energy = -10.940060556619638, hamiltonian_energy_error = -0.19362422108886967, max_hamiltonian_energy_error = -0.2836536229504212, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9449286074303478, log_density = 18.630153166523122, hamiltonian_energy = -15.307529913563878, hamiltonian_energy_error = 0.06532450175920523, max_hamiltonian_energy_error = 0.17736289374818348, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8471029360908525, log_density = 17.119033723459673, hamiltonian_energy = -13.43637762663935, hamiltonian_energy_error = 0.19712080899356543, max_hamiltonian_energy_error = 0.29429440020431485, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9145730851420721, log_density = 17.026478165798927, hamiltonian_energy = -14.653699674116892, hamiltonian_energy_error = 0.06255052517193072, max_hamiltonian_energy_error = 0.6390863698548355, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8783633936993859, log_density = 12.577196572538092, hamiltonian_energy = -7.833011573714451, hamiltonian_energy_error = 0.13495752975976671, max_hamiltonian_energy_error = 0.42963710149168755, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9977043519984473, log_density = 15.410946881624211, hamiltonian_energy = -11.90262851058263, hamiltonian_energy_error = -0.0546392126214883, max_hamiltonian_energy_error = -0.38656173124010174, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.942339462131886, log_density = 18.373963544617325, hamiltonian_energy = -13.980240894781637, hamiltonian_energy_error = -0.226154659435025, max_hamiltonian_energy_error = -0.35400207943254003, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8395212385669434, log_density = 15.19519186910012, hamiltonian_energy = -10.249364670520514, hamiltonian_energy_error = 0.07973599073691062, max_hamiltonian_energy_error = 0.4240439861285932, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.759438501332208, log_density = 10.315754847244222, hamiltonian_energy = -9.4816651663171, hamiltonian_energy_error = 0.4518206997220062, max_hamiltonian_energy_error = 0.4518206997220062, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.5161867674126173, log_density = 10.332918270315819, hamiltonian_energy = -7.262440283543743, hamiltonian_energy_error = -1.4892217076296008, max_hamiltonian_energy_error = 6.0013795714155105, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9881191350757945, log_density = 14.934474816307052, hamiltonian_energy = -7.9722037830647405, hamiltonian_energy_error = -0.13847249490076052, max_hamiltonian_energy_error = -0.3418135705642431, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8830399212996124, log_density = 12.336964397479477, hamiltonian_energy = -10.929006407130304, hamiltonian_energy_error = 0.5898127249164862, max_hamiltonian_energy_error = 0.9092690643755255, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.3375172917444837, log_density = 14.453781267320805, hamiltonian_energy = -12.201056509545058, hamiltonian_energy_error = -1.1436943271590838, max_hamiltonian_energy_error = 3.5572994440955537, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.91877817155622, log_density = 19.057492088518515, hamiltonian_energy = -12.92078716298575, hamiltonian_energy_error = 0.04263599172638699, max_hamiltonian_energy_error = 0.22265146535321279, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9975906617436952, log_density = 18.459084116348095, hamiltonian_energy = -14.884187774748696, hamiltonian_energy_error = -0.031753749604977344, max_hamiltonian_energy_error = -0.0743208488862308, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9891478547886007, log_density = 19.28063182483492, hamiltonian_energy = -17.31369358647676, hamiltonian_energy_error = -0.07062707536953283, max_hamiltonian_energy_error = -0.07156729259381223, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8745119246321416, log_density = 17.774275394130214, hamiltonian_energy = -15.867346098846918, hamiltonian_energy_error = 0.015562738559667721, max_hamiltonian_energy_error = 0.2629940465324889, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9014470040932753, log_density = 16.19811638911792, hamiltonian_energy = -15.23218053649786, hamiltonian_energy_error = 0.11878058418681903, max_hamiltonian_energy_error = 0.2411366469859253, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5862271881624835, log_density = 18.68365525725639, hamiltonian_energy = -12.544326828645621, hamiltonian_energy_error = 0.3475572516187935, max_hamiltonian_energy_error = 1.0235222060898401, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9900410347880623, log_density = 18.464580617629615, hamiltonian_energy = -18.23261391053942, hamiltonian_energy_error = 0.021020318280065453, max_hamiltonian_energy_error = -0.09030954007613445, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8956138167429707, log_density = 18.804772817414307, hamiltonian_energy = -16.613435080131133, hamiltonian_energy_error = -0.16005299482417712, max_hamiltonian_energy_error = 0.35026712582607544, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9773605453240057, log_density = 17.91964776450437, hamiltonian_energy = -17.50949611777044, hamiltonian_energy_error = 0.04740059295755117, max_hamiltonian_energy_error = 0.0628311130027086, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9921399407641142, log_density = 18.686475024307075, hamiltonian_energy = -17.183379069824355, hamiltonian_energy_error = -0.03710792243851557, max_hamiltonian_energy_error = -0.05153337396011537, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8944015617252844, log_density = 17.095555738482837, hamiltonian_energy = -16.413417938855556, hamiltonian_energy_error = 0.17556307230559298, max_hamiltonian_energy_error = 0.18990224690261215, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9927050391418899, log_density = 17.847266581728977, hamiltonian_energy = -15.970353164877258, hamiltonian_energy_error = -0.1378877239417715, max_hamiltonian_energy_error = -0.14481498314786911, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9014366682203819, log_density = 14.88427499061591, hamiltonian_energy = -13.721169371217297, hamiltonian_energy_error = 0.12037164655512811, max_hamiltonian_energy_error = 0.13681696710052016, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9412473418542487, log_density = 16.625461705098836, hamiltonian_energy = -7.551119847721301, hamiltonian_energy_error = 0.03223477003435882, max_hamiltonian_energy_error = 0.16281634671058764, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9596381259854768, log_density = 15.601518872826745, hamiltonian_energy = -12.592768114831152, hamiltonian_energy_error = 0.031101732423950423, max_hamiltonian_energy_error = 0.09165529479449042, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9904620638362381, log_density = 18.826844368032816, hamiltonian_energy = -15.034342895785102, hamiltonian_energy_error = -0.09047225879635512, max_hamiltonian_energy_error = -0.09047225879635512, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9792144085265154, log_density = 18.823045688547666, hamiltonian_energy = -18.122327191918814, hamiltonian_energy_error = 0.03014141771340917, max_hamiltonian_energy_error = 0.06277577326666517, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9791044301815823, log_density = 16.59403287373665, hamiltonian_energy = -15.767868858446121, hamiltonian_energy_error = 0.1756015449818218, max_hamiltonian_energy_error = -0.19107429972678425, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.11310440470932237, log_density = 13.082013407244293, hamiltonian_energy = -12.056389122618434, hamiltonian_energy_error = 1.6452436157810393, max_hamiltonian_energy_error = 4.169048169673534, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9362017934828756, log_density = 17.6835385473357, hamiltonian_energy = -12.472227274586706, hamiltonian_energy_error = -0.41831915142914333, max_hamiltonian_energy_error = -1.693932473253966, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9915620223548913, log_density = 18.076019812051907, hamiltonian_energy = -16.53692035574676, hamiltonian_energy_error = -0.02539474937314168, max_hamiltonian_energy_error = -0.0792431372696889, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9608022187319815, log_density = 17.332173788704495, hamiltonian_energy = -16.89258192921777, hamiltonian_energy_error = 0.08970112171094868, max_hamiltonian_energy_error = 0.15042837025971423, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.929635054315033, log_density = 17.74976212890399, hamiltonian_energy = -13.807779325690108, hamiltonian_energy_error = -0.22408102462517832, max_hamiltonian_energy_error = -0.4473802631010475, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8701707642847561, log_density = 16.17467641067656, hamiltonian_energy = -12.962128838817872, hamiltonian_energy_error = 0.38071958821760177, max_hamiltonian_energy_error = 0.6864439317551785, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 16.20381530958572, hamiltonian_energy = -15.31778665058911, hamiltonian_energy_error = -0.08320719115417319, max_hamiltonian_energy_error = -0.17156033856212183, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8628388747711033, log_density = 15.162524726086705, hamiltonian_energy = -12.215032785766365, hamiltonian_energy_error = 0.14316160810939849, max_hamiltonian_energy_error = 0.36506392081974326, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9922222013282135, log_density = 16.92445402240514, hamiltonian_energy = -12.549548108882934, hamiltonian_energy_error = -0.1957413231353229, max_hamiltonian_energy_error = -0.22967715127388288, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.962091394324556, log_density = 18.015295181685055, hamiltonian_energy = -14.843463703391656, hamiltonian_energy_error = 0.01587123844720395, max_hamiltonian_energy_error = 0.11274001277682366, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9931086901015701, log_density = 17.43688809054643, hamiltonian_energy = -15.51078442896913, hamiltonian_energy_error = -0.016899120791229905, max_hamiltonian_energy_error = 0.03342528480410323, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.932698442379118, log_density = 18.87200197807033, hamiltonian_energy = -15.912584349761852, hamiltonian_energy_error = 0.07087817535559005, max_hamiltonian_energy_error = 0.13585200723829516, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.952873077202148, log_density = 17.080565069628523, hamiltonian_energy = -14.017048457461883, hamiltonian_energy_error = 0.03753746843788619, max_hamiltonian_energy_error = 0.07958812930665005, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9789906118883541, log_density = 17.4425036013278, hamiltonian_energy = -15.89345346789116, hamiltonian_energy_error = 0.004892951667347489, max_hamiltonian_energy_error = 0.04743275868674601, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9808731593478741, log_density = 17.486615817369717, hamiltonian_energy = -13.933361341640005, hamiltonian_energy_error = 0.019738736125349376, max_hamiltonian_energy_error = 0.07277914236224348, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9284542661956188, log_density = 18.005592989549882, hamiltonian_energy = -14.687586000193452, hamiltonian_energy_error = 0.014762844600660685, max_hamiltonian_energy_error = 0.1580755270253107, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9798349441443293, log_density = 16.74983907584039, hamiltonian_energy = -16.234138227010202, hamiltonian_energy_error = 0.03439334543020678, max_hamiltonian_energy_error = 0.05385276638578773, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9949558524764927, log_density = 16.39159233391507, hamiltonian_energy = -15.112918342964523, hamiltonian_energy_error = -0.006341858277277623, max_hamiltonian_energy_error = -0.1199955960083745, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9866656984344495, log_density = 19.049447433510505, hamiltonian_energy = -14.816731218320495, hamiltonian_energy_error = -0.019966939274905116, max_hamiltonian_energy_error = 0.031282824121650066, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7648755151601819, log_density = 15.939510730884717, hamiltonian_energy = -14.46220185593652, hamiltonian_energy_error = 0.3071676988412264, max_hamiltonian_energy_error = 0.3071676988412264, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9973980809036471, log_density = 16.47144760898263, hamiltonian_energy = -14.914686370667214, hamiltonian_energy_error = -0.02766203990233862, max_hamiltonian_energy_error = -0.21370494109602767, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9166540681377506, log_density = 16.839580990693694, hamiltonian_energy = -15.072995379277241, hamiltonian_energy_error = -0.37702388314044377, max_hamiltonian_energy_error = 0.4435104200156239, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5557706281343474, log_density = 16.66668238296389, hamiltonian_energy = -13.542347808238013, hamiltonian_energy_error = 0.8195856846834335, max_hamiltonian_energy_error = 1.153610419168226, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8785658501115984, log_density = 15.352410956448285, hamiltonian_energy = -11.36554351393127, hamiltonian_energy_error = 0.02718735685865248, max_hamiltonian_energy_error = 0.5554712841529295, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 17.32699200772054, hamiltonian_energy = -12.397567230842235, hamiltonian_energy_error = -0.6616822875128818, max_hamiltonian_energy_error = -1.0340232934511526, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9096605375030788, log_density = 16.437614710539634, hamiltonian_energy = -14.819450394611563, hamiltonian_energy_error = 0.060384285812824956, max_hamiltonian_energy_error = 0.4654133462991261, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.943660596194844, log_density = 18.692397658865858, hamiltonian_energy = -15.740288461739702, hamiltonian_energy_error = -0.20960817251363295, max_hamiltonian_energy_error = 0.5967495855249059, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8734935128641085, log_density = 18.42601219475887, hamiltonian_energy = -13.516682243867809, hamiltonian_energy_error = -0.060760571723488255, max_hamiltonian_energy_error = 0.35096353072368913, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8937867571679602, log_density = 19.422403734452367, hamiltonian_energy = -16.23450674563347, hamiltonian_energy_error = 0.01466253371206605, max_hamiltonian_energy_error = 0.20093401040732672, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9048090220949427, log_density = 15.69454042775375, hamiltonian_energy = -15.068367835850449, hamiltonian_energy_error = 0.1250410805894333, max_hamiltonian_energy_error = 0.13282826696747563, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9766262203795765, log_density = 18.37590386433014, hamiltonian_energy = -13.536929093407425, hamiltonian_energy_error = -0.043749599917811466, max_hamiltonian_energy_error = 0.06672520318066155, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9818143239399084, log_density = 16.400103603453076, hamiltonian_energy = -15.311087410254757, hamiltonian_energy_error = 0.025867859688988304, max_hamiltonian_energy_error = 0.04641668774655194, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9766256056848258, log_density = 17.757280646493207, hamiltonian_energy = -14.75073646769087, hamiltonian_energy_error = 0.029594533168493697, max_hamiltonian_energy_error = 0.07561044862348609, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9334756778286121, log_density = 18.31170243880102, hamiltonian_energy = -15.0257208372348, hamiltonian_energy_error = -0.014779375844453213, max_hamiltonian_energy_error = 0.21510740858306576, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9897752319425356, log_density = 17.97220256802811, hamiltonian_energy = -16.895774798544384, hamiltonian_energy_error = -0.051248149821237376, max_hamiltonian_energy_error = 0.07988370343743867, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9991835232352422, log_density = 19.01779152708796, hamiltonian_energy = -17.815036654407493, hamiltonian_energy_error = -0.05492546040238366, max_hamiltonian_energy_error = -0.0721318545112446, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9844146595474526, log_density = 17.841756569613935, hamiltonian_energy = -17.250080581699418, hamiltonian_energy_error = 0.0185080071428807, max_hamiltonian_energy_error = 0.024911405152803212, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8700049132781194, log_density = 16.739169198571894, hamiltonian_energy = -15.056332430766835, hamiltonian_energy_error = -0.03461225539654933, max_hamiltonian_energy_error = 0.4002070025881572, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6271237373947793, log_density = 16.990585320187698, hamiltonian_energy = -14.373977525036757, hamiltonian_energy_error = 0.024874237549203926, max_hamiltonian_energy_error = 1.194165016256708, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9741341196841534, log_density = 17.436404051316345, hamiltonian_energy = -15.460742647076593, hamiltonian_energy_error = -0.03203016794554259, max_hamiltonian_energy_error = 0.22456775727203926, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9313286602106051, log_density = 15.564568766444665, hamiltonian_energy = -12.28648732353115, hamiltonian_energy_error = -0.010290095479190242, max_hamiltonian_energy_error = -0.4347762002912141, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9920735560918813, log_density = 17.889548501875524, hamiltonian_energy = -14.36322961797273, hamiltonian_energy_error = -0.20765135843293336, max_hamiltonian_energy_error = -0.20765135843293336, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.830896674585832, log_density = 17.73716955725853, hamiltonian_energy = -16.687206393838053, hamiltonian_energy_error = 0.17617476243866292, max_hamiltonian_energy_error = 0.4114430505719149, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9188505565245643, log_density = 14.020480537056084, hamiltonian_energy = -11.706845337493643, hamiltonian_energy_error = 0.06654068603620189, max_hamiltonian_energy_error = 0.1630242580367387, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9803081044600397, log_density = 18.357494693041318, hamiltonian_energy = -12.768686519913697, hamiltonian_energy_error = -0.34585765600307816, max_hamiltonian_energy_error = -0.34585765600307816, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9664347872606747, log_density = 17.448137854755927, hamiltonian_energy = -15.001698481075127, hamiltonian_energy_error = -0.03225491198789143, max_hamiltonian_energy_error = 0.11487259449718223, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9714036715489246, log_density = 18.876147421775258, hamiltonian_energy = -16.56815822627191, hamiltonian_energy_error = -0.23341903267834496, max_hamiltonian_energy_error = -0.23341903267834496, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6785163651960777, log_density = 17.776421177615614, hamiltonian_energy = -15.726674154008633, hamiltonian_energy_error = 0.1268641140216662, max_hamiltonian_energy_error = 0.7440807888230037, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.5968229729086355, log_density = 17.01457010496831, hamiltonian_energy = -12.933574722961662, hamiltonian_energy_error = 0.46529686462514164, max_hamiltonian_energy_error = 1.109535693306233, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7672398537757703, log_density = 17.654400170387994, hamiltonian_energy = -12.162270620702472, hamiltonian_energy_error = 0.034851644931418235, max_hamiltonian_energy_error = 1.7646098856478698, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.946691186801195, log_density = 14.92676503756545, hamiltonian_energy = -10.91388089116964, hamiltonian_energy_error = -0.04488779762264272, max_hamiltonian_energy_error = 0.601420569910168, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.46748612423347, hamiltonian_energy = -14.65215509610741, hamiltonian_energy_error = -0.015723010105967106, max_hamiltonian_energy_error = -0.06453308861054374, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.9889717062121637, log_density = 18.113249576244186, hamiltonian_energy = -14.167318346225835, hamiltonian_energy_error = -0.014047623227613215, max_hamiltonian_energy_error = -0.14504606719106938, tree_depth = 5, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9939881627432069, log_density = 18.07604539774347, hamiltonian_energy = -17.52047145222152, hamiltonian_energy_error = -0.07160743324269347, max_hamiltonian_energy_error = -0.07683898291444535, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9443471603321096, log_density = 18.581619517820105, hamiltonian_energy = -17.67501770984159, hamiltonian_energy_error = -0.02042826659467778, max_hamiltonian_energy_error = 0.14313568595153825, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9748060666762758, log_density = 18.45145509738402, hamiltonian_energy = -17.88131691734904, hamiltonian_energy_error = 0.008801861118193699, max_hamiltonian_energy_error = 0.05240568227530318, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8923385586052454, log_density = 16.005519181150298, hamiltonian_energy = -15.463639780821318, hamiltonian_energy_error = 0.16970497089474712, max_hamiltonian_energy_error = 0.1969860333911111, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 1.0, log_density = 16.780419117038207, hamiltonian_energy = -15.019941354470088, hamiltonian_energy_error = -0.07135353731991856, max_hamiltonian_energy_error = -0.2382061424895454, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9875596372515513, log_density = 14.56602633121756, hamiltonian_energy = -12.183167975733411, hamiltonian_energy_error = 0.02701154067051803, max_hamiltonian_energy_error = 0.05975798730553983, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9457579015946357, log_density = 15.175139209566915, hamiltonian_energy = -12.239702142566712, hamiltonian_energy_error = 0.02625655473638311, max_hamiltonian_energy_error = 0.17441213049327686, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9868520850625911, log_density = 18.42768357129806, hamiltonian_energy = -14.301746927227935, hamiltonian_energy_error = -0.060059293572660266, max_hamiltonian_energy_error = -0.11241312724607688, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9188617333792929, log_density = 17.473622204533356, hamiltonian_energy = -16.33062546557018, hamiltonian_energy_error = 0.1582713357021781, max_hamiltonian_energy_error = 0.28829143197905793, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9393861753171983, log_density = 18.500118249196923, hamiltonian_energy = -15.829685501321322, hamiltonian_energy_error = -0.45837490505494394, max_hamiltonian_energy_error = 0.5267919914970669, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.998227765532746, log_density = 17.783017097229994, hamiltonian_energy = -17.544139472596818, hamiltonian_energy_error = -0.027122333360164674, max_hamiltonian_energy_error = -0.027122333360164674, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8985211320436796, log_density = 15.464327920621693, hamiltonian_energy = -14.20618254204691, hamiltonian_energy_error = 0.10890466898419149, max_hamiltonian_energy_error = 0.17197358570499333, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9980926777884941, log_density = 18.250239175055903, hamiltonian_energy = -13.260986419847212, hamiltonian_energy_error = -0.08984269102830211, max_hamiltonian_energy_error = -0.09783327375089534, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.957230453259853, log_density = 17.691189278126906, hamiltonian_energy = -15.212334374421815, hamiltonian_energy_error = 0.0503148454425002, max_hamiltonian_energy_error = 0.15199772745218, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7942316158014556, log_density = 16.92236555712566, hamiltonian_energy = -14.217057854465017, hamiltonian_energy_error = -0.14623172152226083, max_hamiltonian_energy_error = 0.42141621216771163, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8802914100427169, log_density = 17.923757421103645, hamiltonian_energy = -13.243740395020758, hamiltonian_energy_error = -0.04401380335043115, max_hamiltonian_energy_error = 0.31848011629992534, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9581200344588369, log_density = 17.763491938439714, hamiltonian_energy = -16.23224378308164, hamiltonian_energy_error = 0.10026514714061818, max_hamiltonian_energy_error = 0.1037337532103777, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9897097021226788, log_density = 18.015384889572918, hamiltonian_energy = -15.057741036970459, hamiltonian_energy_error = -0.12242145812634142, max_hamiltonian_energy_error = -0.2982022350236164, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9613981388230243, log_density = 15.321854178681992, hamiltonian_energy = -14.785466543956687, hamiltonian_energy_error = 0.08057351784531264, max_hamiltonian_energy_error = 0.08057351784531264, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.999280959298854, log_density = 18.467800811782613, hamiltonian_energy = -14.625977940175899, hamiltonian_energy_error = -0.09417233338533038, max_hamiltonian_energy_error = -0.09417233338533038, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9473327922270497, log_density = 16.964405950391978, hamiltonian_energy = -15.192658010547408, hamiltonian_energy_error = 0.06999480049249307, max_hamiltonian_energy_error = 0.10080726086296465, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9481535995190838, log_density = 16.04878728533228, hamiltonian_energy = -12.27216660152804, hamiltonian_energy_error = -0.10305993097195021, max_hamiltonian_energy_error = 0.24581905972271834, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9975909795442197, log_density = 17.74441194348764, hamiltonian_energy = -15.86576223990124, hamiltonian_energy_error = -0.02088971702055531, max_hamiltonian_energy_error = -0.03943144503014295, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9904752759882803, log_density = 17.67288735349497, hamiltonian_energy = -16.62359110147637, hamiltonian_energy_error = 0.004133805472616103, max_hamiltonian_energy_error = 0.035432043917751344, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9861641955212519, log_density = 17.73356378484852, hamiltonian_energy = -16.698577300257583, hamiltonian_energy_error = -0.019198239267335993, max_hamiltonian_energy_error = -0.06311516872441558, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.9849436699442792, log_density = 17.8418025297617, hamiltonian_energy = -16.425167491172036, hamiltonian_energy_error = 0.017480941958751828, max_hamiltonian_energy_error = 0.061044470158748254, tree_depth = 5, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9756025982922658, log_density = 18.892921127825154, hamiltonian_energy = -16.79616989943745, hamiltonian_energy_error = -0.02110994592596427, max_hamiltonian_energy_error = 0.10934581066797833, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9346446311521046, log_density = 18.181204357417403, hamiltonian_energy = -17.19298889787131, hamiltonian_energy_error = 0.12726752100537908, max_hamiltonian_energy_error = 0.31693410965638336, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9956690991077599, log_density = 18.964844876750917, hamiltonian_energy = -17.575220296974923, hamiltonian_energy_error = -0.1426160201590747, max_hamiltonian_energy_error = -0.18208771817107916, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8487113495279722, log_density = 17.438170076483928, hamiltonian_energy = -15.888879100419501, hamiltonian_energy_error = 0.22397389046417615, max_hamiltonian_energy_error = 0.3849935790806924, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9889174900211373, log_density = 18.454303620837912, hamiltonian_energy = -16.62952660791642, hamiltonian_energy_error = -0.19098691645222843, max_hamiltonian_energy_error = -0.2804300647334692, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8172823127347949, log_density = 18.12266966588836, hamiltonian_energy = -15.75649727127804, hamiltonian_energy_error = 0.18101884210094177, max_hamiltonian_energy_error = 0.6238522995180471, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 39, is_accept = true, acceptance_rate = 0.968099217858668, log_density = 18.012051571352348, hamiltonian_energy = -16.352740192056448, hamiltonian_energy_error = -0.09955612422271543, max_hamiltonian_energy_error = 0.23875043481886138, tree_depth = 5, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9246339898966853, log_density = 18.588427247377467, hamiltonian_energy = -14.602840808266588, hamiltonian_energy_error = 0.010698725251135244, max_hamiltonian_energy_error = 0.20274287632550347, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.850358387233295, log_density = 16.819783848502194, hamiltonian_energy = -14.068072122756295, hamiltonian_energy_error = 0.17789142322476081, max_hamiltonian_energy_error = 0.6532209529186712, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8883430332897961, log_density = 15.78281669892785, hamiltonian_energy = -12.081351402674937, hamiltonian_energy_error = 0.12185376546863935, max_hamiltonian_energy_error = -0.5331442996331983, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9028187921347113, log_density = 13.914374051404678, hamiltonian_energy = -12.17539802117055, hamiltonian_energy_error = 0.08757173887430447, max_hamiltonian_energy_error = 0.5283684851558199, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9924629108516829, log_density = 12.667251057484942, hamiltonian_energy = -9.9897770228153, hamiltonian_energy_error = 0.08491798470487666, max_hamiltonian_energy_error = -0.6837249587622871, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.593111379142914, log_density = 13.013325637827808, hamiltonian_energy = -9.279236380545743, hamiltonian_energy_error = 0.5030205217282315, max_hamiltonian_energy_error = 0.6937682370573466, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9964038984201461, log_density = 17.82074894834915, hamiltonian_energy = -12.086186158136492, hamiltonian_energy_error = -0.12592103666492704, max_hamiltonian_energy_error = -0.2788763061701065, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9897031561854303, log_density = 17.596707532304514, hamiltonian_energy = -14.657772931761297, hamiltonian_energy_error = -0.01893194757442629, max_hamiltonian_energy_error = -0.21810635964467906, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9844128818443306, log_density = 17.432747003747853, hamiltonian_energy = -15.447730209429297, hamiltonian_energy_error = -0.1055945211803575, max_hamiltonian_energy_error = -0.280858089812023, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9829703811753078, log_density = 17.972330292562454, hamiltonian_energy = -16.562781152309558, hamiltonian_energy_error = -0.0015134245494010656, max_hamiltonian_energy_error = -0.09695909560712934, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9885455863399591, log_density = 17.54465397886201, hamiltonian_energy = -14.185718683077107, hamiltonian_energy_error = -0.02120628561807969, max_hamiltonian_energy_error = -0.09433756438195218, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.848557885229187, log_density = 15.643412566584995, hamiltonian_energy = -12.270227029609188, hamiltonian_energy_error = 0.19904784818854715, max_hamiltonian_energy_error = 0.29906422530858556, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.966667360120472, log_density = 17.477735337517252, hamiltonian_energy = -10.293956989504746, hamiltonian_energy_error = -0.1676869581118421, max_hamiltonian_energy_error = -0.20202562725077122, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9614054938050136, log_density = 17.851399366029643, hamiltonian_energy = -14.913048781019533, hamiltonian_energy_error = 0.02541589195210925, max_hamiltonian_energy_error = 0.24517482805948632, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9884689590849923, log_density = 17.787899548243978, hamiltonian_energy = -15.213672197525058, hamiltonian_energy_error = -0.0442566848302981, max_hamiltonian_energy_error = -0.09228862236660085, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 17.281916183135294, hamiltonian_energy = -16.115375634092626, hamiltonian_energy_error = -0.03162834412171733, max_hamiltonian_energy_error = -0.0590707278740652, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9920072883433192, log_density = 16.39022140226684, hamiltonian_energy = -14.694500978257198, hamiltonian_energy_error = -0.000958686597682501, max_hamiltonian_energy_error = 0.03767139912379314, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7689083583322197, log_density = 12.508829715359742, hamiltonian_energy = -5.405403154194484, hamiltonian_energy_error = -0.09717723675878798, max_hamiltonian_energy_error = 0.6473897142733289, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9957318550887606, log_density = 16.041337042384548, hamiltonian_energy = -9.114709505001967, hamiltonian_energy_error = -0.2943957356455247, max_hamiltonian_energy_error = -0.2943957356455247, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9633886795575826, log_density = 17.85476558542692, hamiltonian_energy = -15.421089574407887, hamiltonian_energy_error = -0.0003209529668790623, max_hamiltonian_energy_error = 0.14725489163379812, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8077694165898299, log_density = 15.639775251878849, hamiltonian_energy = -13.78041692153212, hamiltonian_energy_error = 0.19783986296876854, max_hamiltonian_energy_error = 0.3735803802510116, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8814027491025248, log_density = 16.676692807071515, hamiltonian_energy = -13.678232538296703, hamiltonian_energy_error = -0.6754931898709646, max_hamiltonian_energy_error = 0.9675384924390951, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.967563959637692, log_density = 16.079518217695494, hamiltonian_energy = -15.249434140280112, hamiltonian_energy_error = 0.11441946741920894, max_hamiltonian_energy_error = 0.11441946741920894, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9912160515279831, log_density = 17.742251198710324, hamiltonian_energy = -14.3769323146524, hamiltonian_energy_error = 0.013993521247675389, max_hamiltonian_energy_error = -0.15363213418905097, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9745122126889659, log_density = 18.524107898743424, hamiltonian_energy = -16.616582770167177, hamiltonian_energy_error = -0.03257621968036517, max_hamiltonian_energy_error = -0.1894883110996588, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9944601375341162, log_density = 19.2032974833438, hamiltonian_energy = -16.12971229291589, hamiltonian_energy_error = -0.043836841089962775, max_hamiltonian_energy_error = -0.043836841089962775, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9893691435490295, log_density = 19.067546399087597, hamiltonian_energy = -18.559234987301377, hamiltonian_energy_error = 0.011933128036066165, max_hamiltonian_energy_error = 0.02640455682667664, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9841180868165273, log_density = 18.445095033671556, hamiltonian_energy = -18.40838309230262, hamiltonian_energy_error = 0.02875123098268162, max_hamiltonian_energy_error = 0.02875123098268162, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7648168117302527, log_density = 17.699294342181467, hamiltonian_energy = -15.22127000909823, hamiltonian_energy_error = -0.5610713478459584, max_hamiltonian_energy_error = 0.8986822565263388, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9809044423287505, log_density = 18.287432671175125, hamiltonian_energy = -16.068420512166366, hamiltonian_energy_error = 0.00975921064137708, max_hamiltonian_energy_error = 0.04960799732238641, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9976088989567845, log_density = 19.103445800321303, hamiltonian_energy = -17.163842123699403, hamiltonian_energy_error = -0.033392484635438535, max_hamiltonian_energy_error = -0.04645581730694559, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6085096433355908, log_density = 17.130690436594264, hamiltonian_energy = -15.656704893377375, hamiltonian_energy_error = 0.4667028681058927, max_hamiltonian_energy_error = 0.5948738471679391, tree_depth = 2, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8553492965879641, log_density = 17.205749962703514, hamiltonian_energy = -12.674284470132118, hamiltonian_energy_error = -0.8995454256259734, max_hamiltonian_energy_error = 1.6568614241683282, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9821815633490248, log_density = 16.560440591501433, hamiltonian_energy = -15.467430303752833, hamiltonian_energy_error = 0.08949178794781965, max_hamiltonian_energy_error = 0.08949178794781965, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9527975173758068, log_density = 14.146058901165356, hamiltonian_energy = -11.60826831143734, hamiltonian_energy_error = -0.003198505438581023, max_hamiltonian_energy_error = -0.13332858922586155, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 18.52393597972855, hamiltonian_energy = -13.47453851299272, hamiltonian_energy_error = -0.08748638745121973, max_hamiltonian_energy_error = -0.12217672430931081, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9903427513166129, log_density = 17.276862482686912, hamiltonian_energy = -16.27916405967674, hamiltonian_energy_error = -0.02665003133268229, max_hamiltonian_energy_error = 0.03196104268972988, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8099621235101783, log_density = 18.50509832873916, hamiltonian_energy = -15.632449955505262, hamiltonian_energy_error = 0.052666453309377914, max_hamiltonian_energy_error = 0.4881239043207479, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9430821283167966, log_density = 18.319372987609558, hamiltonian_energy = -17.303506896548825, hamiltonian_energy_error = 0.07541892682506912, max_hamiltonian_energy_error = 0.1204242705418892, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9985600585432813, log_density = 19.469199532815608, hamiltonian_energy = -18.035373214820282, hamiltonian_energy_error = -0.06525421365666517, max_hamiltonian_energy_error = -0.06525421365666517, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9773224537284405, log_density = 17.947727757653354, hamiltonian_energy = -16.51218037906884, hamiltonian_energy_error = 0.04018284922954862, max_hamiltonian_energy_error = 0.04884758450451443, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7241441102771423, log_density = 15.791174533379868, hamiltonian_energy = -14.396476833634814, hamiltonian_energy_error = 0.5138726261133133, max_hamiltonian_energy_error = 0.5138726261133133, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9661426237972179, log_density = 17.37786283547583, hamiltonian_energy = -14.14806168759648, hamiltonian_energy_error = -0.03799144167101787, max_hamiltonian_energy_error = 0.5476405889348985, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9613324864076846, log_density = 15.690124198582293, hamiltonian_energy = -12.525220390854557, hamiltonian_energy_error = -0.00985284647120288, max_hamiltonian_energy_error = 0.2748118070570271, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9434656908780101, log_density = 17.207342577737357, hamiltonian_energy = -14.425890392354749, hamiltonian_energy_error = -0.06180136527795099, max_hamiltonian_energy_error = -0.5947343411399917, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 0.8872443955174716, log_density = 17.912112395833482, hamiltonian_energy = -12.605005934314867, hamiltonian_energy_error = -0.3341768242001333, max_hamiltonian_energy_error = 0.9964910664339062, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9141327921423268, log_density = 16.717972247504484, hamiltonian_energy = -15.850885580089074, hamiltonian_energy_error = 0.14755773711024922, max_hamiltonian_energy_error = 0.23758188331201247, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9813751416215472, log_density = 16.21094482119598, hamiltonian_energy = -14.544870482200709, hamiltonian_energy_error = -0.13209801806014987, max_hamiltonian_energy_error = -0.13209801806014987, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9816550635122173, log_density = 18.58071631127904, hamiltonian_energy = -14.961118492534736, hamiltonian_energy_error = -0.0013958709199037855, max_hamiltonian_energy_error = 0.0526437352285285, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8856568602493975, log_density = 15.604082769452889, hamiltonian_energy = -14.084883760900073, hamiltonian_energy_error = 0.14717658880461393, max_hamiltonian_energy_error = 0.20873245607465485, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9749483802634049, log_density = 14.092712382051491, hamiltonian_energy = -13.130745868692113, hamiltonian_energy_error = 0.054102727237561155, max_hamiltonian_energy_error = 0.0805824583100101, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9753217130746151, log_density = 13.587251307603943, hamiltonian_energy = -10.848936251680815, hamiltonian_energy_error = 0.04624804043871045, max_hamiltonian_energy_error = -0.2334622612686612, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.96861558394165, log_density = 16.83123068819022, hamiltonian_energy = -12.150652231267152, hamiltonian_energy_error = -0.05423749414188528, max_hamiltonian_energy_error = 0.6547219862219489, tree_depth = 4, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 17.693231976883297, hamiltonian_energy = -16.578745870187255, hamiltonian_energy_error = -0.09996584768800432, max_hamiltonian_energy_error = -0.1790664553856196, tree_depth = 3, numerical_error = false, step_size = 0.08602581627994739, nom_step_size = 0.08602581627994739, is_adapt = false)])","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Inspect posterior distribution over hyperparameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"hypers = map(unpack, samples);\nh_l1 = histogram(getindex.(hypers, :l1); label=\"l1\");\nh_l2 = histogram(getindex.(hypers, :l2); label=\"l2\");\nh_s1 = histogram(getindex.(hypers, :s1); label=\"s1\");\nh_s2 = histogram(getindex.(hypers, :s2); label=\"s2\");\nplot(h_l1, h_l2, h_s1, h_s2; layout=(2, 2))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As expected, the sampler converges to the posterior distribution quickly. One could combine this code with that from the previous sections to make predictions under the posterior over the hyperparameters.","category":"page"},{"location":"examples/getting_started/#Conclusion","page":"Getting Started","title":"Conclusion","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you now know how to fit GPs using Stheno.jl, and to investigate their posterior distributions. It's also straightforward to utilise Stheno.jl inside probabilistic programming frameworks like Soss.jl and Turing.jl (see examples folder).","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Stheno.jl","page":"Home","title":"Stheno.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Stheno.jl is a package for probabilistic programming with Gaussian processes.","category":"page"},{"location":"internals/#Interfaces","page":"Internals","title":"Interfaces","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The primary objects in Stheno are some special subtypes of AbstractGP. There are three primary concrete subtypes of AbstractGP:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP: an atomic Gaussian process given by wrapping an AbstractGP.\nCompositeGP: a Gaussian process composed of other WrappedGPs and CompositeGPs, whose properties are determined recursively from the GPs of which it is composed.\nGaussianProcessProbabilisticProgramme / GPPP: a Gaussian process comprising WrappedGPs and CompositeGPs. This is the primary piece of functionality that users should interact with.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This documentation provides the information necessary to understand the internals of Stheno, and to extend it with custom functionality.","category":"page"},{"location":"internals/#AbstractGP","page":"Internals","title":"AbstractGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP and CompositeGP implement the AbstractGPs.jl API. Please refer to the AbstractGPs.jl docs for more info on this.","category":"page"},{"location":"internals/#diag-methods","page":"Internals","title":"diag methods","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It is crucial for pseudo-point methods, and for the computation of marginal statistics at a reasonable scale, to be able to compute the diagonal of a given covariance matrix in linear time in the size of its inputs. This, in turn, necessitates that the diagonal of a given cross-covariance matrix can also be computed efficiently as the evaluation of covariance matrices often rely on the evaluation of cross-covariance matrices. As such, we have the following functions in addition to the AbstractGPs API implemented for WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Function Brief description\nvar(f, x) diag(cov(f, x))\nvar(f, x, x′) diag(cov(f, x, x′))\nvar(f, f′, x, x′) diag(cov(f, f′, x, x′))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The second and third rows of the table only make sense when length(x) == length(x′), of course.","category":"page"},{"location":"internals/#WrappedGP","page":"Internals","title":"WrappedGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"We can construct a WrappedGP in the following manner:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = wrap(GP(m, k), gpc)\n","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"where m is its MeanFunction, k its Kernel. gpc is a GPC object that handles some book-keeping, and is discussed in more depth below.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The AbstractGP interface is implemented for WrappedGPs in terms of the AbstractGP that they wrap. So if you want a particular behaviour, just make sure that the AbstractGP that you wrap has the functionality you want.","category":"page"},{"location":"internals/#Aside:-Example-Kernel-implementation","page":"Internals","title":"Aside: Example Kernel implementation","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It's straightforward to implement a new kernel yourself: simply following the instructions in KernelFunctions.jl and it'll work fine with GPs in Stheno.jl.","category":"page"},{"location":"internals/#GPC","page":"Internals","title":"GPC","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"This book-keeping object doesn't matter from a user's perspective but, unfortunately, we currently expose it to users. Fortunately, it's straightforward to work with. Say you wish to construct a collection of processes:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS WON'T WORK\nf = GP(mf, kf)\ng = GP(mg, kg)\nh = f + g\n# THIS WON'T WORK","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"You should write","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS GOOD. PLEASE DO THIS\ngpc = GPC()\nf = wrap(GP(mf, kf), gpc)\ng = wrap(GP(mg, kg), gpc)\nh = f + g\n# THIS IS GOOD. PLEASE DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The rule is simple: when constructing GPs that you plan to make interact later in your program, construct them using the same gpc object. For example, DON'T do the following:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS BAD. PLEASE DON'T DO THIS\nf = wrap(GP(mf, kf), GPC())\ng = wrap(GP(mg, kg), GPC())\nh = f + g\n# THIS IS BAD. PLEASE DON'T DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The mistake here is to construct a separate GPC object for each GP. Hopefully, the code errors, but might yield incorrect results.","category":"page"},{"location":"internals/#CompositeGP","page":"Internals","title":"CompositeGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"CompositeGPs are constructed as affine transformations of CompositeGPs and GPs. We describe the implemented transformations below.","category":"page"},{"location":"internals/#Addition","page":"Internals","title":"Addition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Given AbstractGPs f and g, we define","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f + g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"to be the CompositeGP sastisfying h(x) = f(x) + g(x) for all x.","category":"page"},{"location":"internals/#Multiplication","page":"Internals","title":"Multiplication","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Multiplication of AbstractGPs is undefined since the product of two Gaussian random variables is not itself Gaussian. However, we can scale an AbstractGP by either a constant or (deterministic) function.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = c * f\nh = sin * f","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"will both work, and produce the result that h(x) = c * f(x) or h(x) = sin(x) * f(x).","category":"page"},{"location":"internals/#Composition","page":"Internals","title":"Composition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f ∘ g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for some deterministic function g is the composition of f with g. i.e. h(x) = f(g(x)).","category":"page"},{"location":"internals/#cross","page":"Internals","title":"cross","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = cross([f, g])","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for WrappedGPs and CompositeGPs f and g. Think of cross as having stacked f and g together, so that you can work with their joint.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"For example, if you wanted to sample jointly from f and g at locations x_f and x_g, you could write something like","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"fg = cross([f, g])\nx_fg = BlockData([x_f, x_g])\nrand(fg(x_fg, 1e-6))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This particular function isn't part of the user-facing API because it isn't generally needed. It is, however, used extensively in the implementation of the GaussianProcessProbabilisticProgramme.","category":"page"},{"location":"internals/#GPPP","page":"Internals","title":"GPPP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The GaussianProcessProbabilisticProgramme is another AbstractGP which enables provides a thin layer of convenience functionality on top of WrappedGPs and CompositeGPs, and is the primary way in which it is intended that users will interact with this package.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP like this","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"is equivalent to manually constructing a GPPP using WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"gpc = GPC()\nf1 = wrap(GP(SEKernel()), gpc)\nf2 = wrap(GP(SEKernel()), gpc)\nf3 = f1 + f2\nf = Stheno.GPPP((f1=f1, f2=f2, f3=f3), gpc)","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"If you take a look at the gaussian_process_probabilistic_programming.jl source, you'll see that it's essentially just the above, and an implementation of the AbstractGPs API on top of a GPPP.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP is a single GP on an extended input domain: (Image: )","category":"page"}]
}
