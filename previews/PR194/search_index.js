var documenterSearchIndex = {"docs":
[{"location":"api/#Public-API","page":"API","title":"Public API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = Stheno","category":"page"},{"location":"api/#GPPP","page":"API","title":"GPPP","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Core functionality for working with GPPPs.","category":"page"},{"location":"api/","page":"API","title":"API","text":"@gppp\nGPPPInput\nBlockData\nsplit","category":"page"},{"location":"api/#Stheno.@gppp","page":"API","title":"Stheno.@gppp","text":"@gppp(model_expression)\n\nConstruct a GaussianProcessProbabilisticProgramme (GPPP) from a code snippet.\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = GPPPInput(:f3, randn(5))\n\ny = rand(f(x, 0.1))\n\nlogpdf(f(x, 0.1), y) ≈ elbo(f(x, 0.1), y, f(x, 1e-9))\n\n# output\n\ntrue\n\n\n\n\n\n","category":"macro"},{"location":"api/#Stheno.GPPPInput","page":"API","title":"Stheno.GPPPInput","text":"GPPPInput(p, x::AbstractVector)\n\nAn collection of inputs for a GPPP. p indicates which process the vector x should be extracted from. The required type of p is determined by the type of the keys in the GPPP indexed.\n\njulia> x = [1.0, 1.5, 0.3];\n\njulia> v = GPPPInput(:a, x)\n3-element GPPPInput{Symbol, Float64, Vector{Float64}}:\n (:a, 1.0)\n (:a, 1.5)\n (:a, 0.3)\n\njulia> v isa AbstractVector{Tuple{Symbol, Float64}}\ntrue\n\njulia> v == map(x_ -> (:a, x_), x)\ntrue\n\n\n\n\n\n","category":"type"},{"location":"api/#Stheno.BlockData","page":"API","title":"Stheno.BlockData","text":"BlockData{T, TV<:AbstractVector{T}, TX<:AbstractVector{TV}} <: AbstractVector{T}\n\nA strictly ordered collection of AbstractVectors, representing a ragged array of data.\n\nVery useful when working with GPPPs. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\n# Specify a `BlockData` set that can be used to index into\n# the `f2` and `f3` processes in `f`.\nx = BlockData(\n    GPPPInput(:f2, randn(4)),\n    GPPPINput(:f3, randn(3)),\n)\n\n# Index into `f` at the input.\nf(x)\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.split","page":"API","title":"Base.split","text":"Base.split(x::BlockData, Y::AbstractVecOrMat)\n\nConvenience functionality to make working with the output of operations on GPPPs easier. Splits up the rows of Y according to the sizes of the data in x.\n\njulia> Y = vcat(randn(5, 3), randn(4, 3));\n\njulia> x = BlockData(randn(5), randn(4));\n\njulia> Y1, Y2 = split(x, Y);\n\njulia> Y1 == Y[1:5, :]\ntrue\n\njulia> Y2 == Y[6:end, :]\ntrue\n\nWorks with any BlockData, so blocks can e.g. be GPPPInputs. This is particularly helpful for working with the output from rand and marginals from a GPPP indexed at BlockData. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = BlockData(GPPPInput(:f2, randn(3)), GPPPInput(:f3, randn(4)))\ny = rand(f(x))\ny2, y3 = split(x, y)\n\nFunctionality also works with any AbstractVector.\n\n\n\n\n\n","category":"function"},{"location":"api/#Building-GPPPs","page":"API","title":"Building GPPPs","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"If in doubt about what any of these transformations can do, play around with them!","category":"page"},{"location":"api/","page":"API","title":"API","text":"+\n*\nstretch\nperiodic\nshift\nselect","category":"page"},{"location":"api/#Base.:+","page":"API","title":"Base.:+","text":"+(fa::AbstractGP, fb::AbstractGP)\n\nProduces an AbstractGP f satisfying f(x) = fa(x) + fb(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.:*","page":"API","title":"Base.:*","text":"*(f, g::AbstractGP)\n\nProduce an AbstractGP h satisfying to h(x) = f(x) * g(x), for some deterministic function f.\n\nIf f isa Real, then h(x) = f * g(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.stretch","page":"API","title":"Stheno.stretch","text":"stretch(f::AbstractGP, l::Union{AbstractVecOrMat{<:Real}, Real})\n\nThis is the primary mechanism by which to introduce length scales to your programme.\n\nIf l isa Real or l isa AbstractMatrix{<:Real}, stretch(f, l)(x) == f(l * x) for any input x. In the l isa Real case, this is equivalent to scaling the length scale by 1 / l.\n\nl isa AbstractVector{<:Real} is equivalent to stretch(f, Diagonal(l)).\n\nEquivalent to f ∘ Stretch(l).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.periodic","page":"API","title":"Stheno.periodic","text":"periodic(g::AbstractGP, f::Real)\n\nProduce an AbstractGP with period f.\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.shift","page":"API","title":"Stheno.shift","text":"shift(f::AbstractGP, a::Real)\nshift(f::AbstractGP, a::AbstractVector{<:Real})\n\nReturns the GP g given by g(x) = f(x - a)\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.select","page":"API","title":"Stheno.select","text":"select(f::AbstractGP, idx)\n\nSelect the dimensions of the input to f given by idx.\n\n\n\n\n\n","category":"function"},{"location":"input_types/#Input-Types","page":"Input Types","title":"Input Types","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Stheno enables the user to handle any type of input domain they wish and provides a common API that users must implement when considering a new way of representing input data to ensure that the package knows how to handle them appropriately.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"This interface has now been adopted throughout the JuliaGaussianProcesses ecosystem.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Discussed below is this interface's core assumptions, a detailed account of a couple of important concrete input types.","category":"page"},{"location":"input_types/#The-Central-Assumption","page":"Input Types","title":"The Central Assumption","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"The central assumption made in all user-facing and internal functions is this: when a collection of inputs are required, they subtype AbstractVector. For example, x isa AbstractVector when indexing into a GP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f(x, σ²)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"or computing the covariance matrix associated with a kernel:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"kernelmatrix(SqExponentialKernel(), x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When computing the cross-covariance matrix between two GPs","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"cov(f, g, x_f, x_g)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_f and x_g must be AbstractVectors. All other operations involving collections of inputs have the same restrictions. Always AbstractVectors.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"For example, this means that when handling multi-dimensional inputs stored in a Matrix they must be wrapped so that the package knows to treat them as a vector — more on this in below in D-dimensional Euclidean Spaces.","category":"page"},{"location":"input_types/#Dimensional-Euclidean-Space","page":"Input Types","title":"1-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When constructing a GP whose domain is the real-line, for example when using a GP to solve some kind of time-series problem, it is sufficient to work with Vector{<:Real}s of inputs. As such, the following is completely valid:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"using Stheno: GPC\nf = wrap(GP(SqExponentialKernel()), GPC())\nx = randn(10)\nf(x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"It is also possible to work with other AbstractArrays that represent a vector of 1-dimensional points, e.g.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = range(-5.0, 5.0; length=100)\nf(x)","category":"page"},{"location":"input_types/#D-Dimensional-Euclidean-Space","page":"Input Types","title":"D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Many applications of interest involve more than a single input-dimension, such as spatio-temporal modeling or Machine Learning tasks. For these cases, we provide ColVecs <: AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"X_data = randn(5, 100)\nX = ColVecs(X_data)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"tells Stheno that it should treat each column of X_data as a vector-valued input. Phrased differently, X is an AbstractVector{T} where T <: Vector{<:Real}, which stores its elements in memory as a dense matrix. This approach has the advantage of making it completely explicit how Stheno treats a matrix of data, and also simplifies quite a bit of the internal machinery, as all vectors of inputs can be assumed to be a subtype of AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If, on the other hand, each row of X_data corresponds to a vector-valued input, use RowVecs(X_data).","category":"page"},{"location":"input_types/#Structure-in-D-Dimensional-Euclidean-Space","page":"Input Types","title":"Structure in D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Consider a rectilinear grid of points in D-dimensional Euclidean space. Such grids of points can be represented in a more memory-efficient manner than can arbitrarily locate sets of points. Moreover, this structure can be exploited to accelerate inference for certain types of problems dramatically. Other such examples exist e.g., uniform grids in N-dimensions, and can be exploited to more efficiently represent input data and to accelerate inference.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Work to exploit these kinds of structures is on-going at the time of writing and will be documented before merging.","category":"page"},{"location":"input_types/#GPPPInput-and-BlockData","page":"Input Types","title":"GPPPInput and BlockData","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"A GPPPInput is a special kind of AbstractVector, specifically designed for GPPPs. Given a GPPP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"a GPPPInput like","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_ = randn(5)\nx = GPPPInput(:f3, x_)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"applied to f","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"fx = f(x, 0.1)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"constructs a FiniteGP comprising f3 at x_. GPPPInput(:f2, x_) and GPPPInput(:f1, x_) are the analogues for f1 and f2.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If you wish to refer to multiple processes in f at the same time, use a BlockData. For example","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = BlockData(GPPPInput(:f2, x_), GPPPInput(:f3, x_))","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"would pull out a 10-dimensional FiniteGP, the first 5 dimensions being f2 at x_, the last 5 dimensions being f3 at x_.","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"See Getting Started","category":"page"},{"location":"kernel_design/#Kernel-Design","page":"Kernel Design","title":"Kernel Design","text":"","category":"section"},{"location":"kernel_design/","page":"Kernel Design","title":"Kernel Design","text":"Please refer to KernelFunctions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"EditURL = \"https://github.com/JuliaGaussianProcesses/Stheno.jl/blob/master/examples/getting_started/script.jl\"","category":"page"},{"location":"examples/getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Here we document how to do some basic stuff, including learning and inference in kernel parameters, with Stheno.jl. To do this, we that makes use of a variety of packages from the Julia ecosystem. In particular, we'll make use of","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl to perform Bayesian inference in our model parameters.\nOptim.jl for point-estimates of our model parameters.\nParameterHandling.jl to make it easy to work with our model's parameters, and to ensure that it plays nicely with Optim and AdvancedHMC.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This guide assumes that you know roughly what's going on conceptually with GPs. If you're new to Gaussian processes, an excellent introduction can be found in either this video lecture or this one.","category":"page"},{"location":"examples/getting_started/#Exact-Inference-in-a-GP-in-2-Minutes","page":"Getting Started","title":"Exact Inference in a GP in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This is only a slightly more interesting version of the first example on the README. It's slightly more interesting in that we give the kernels some learnable parameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Import the packages we'll need for this bit of the demo.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AbstractGPs\nusing LinearAlgebra\nusing Stheno\nusing Plots","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Short length-scale and small variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l1 = 0.4\ns1 = 0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Long length-scale and larger variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l2 = 5.0\ns2 = 1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Specify a GaussianProcessProbabilisticProgramme object, which is itself a GP built from other GPs.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f = @gppp let\n    f1 = s1 * stretch(GP(Matern52Kernel()), 1 / l1)\n    f2 = s2 * stretch(GP(SEKernel()), 1 / l2)\n    f3 = f1 + f2\nend;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Generate a sample from f3, one of the processes in f, at some random input locations. Add some iid observation noise, with zero-mean and variance 0.05.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"const x = GPPPInput(:f3, collect(range(-5.0, 5.0; length=100)));\nσ²_n = 0.02;\nfx = f(x, σ²_n);\nconst y = rand(fx);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Compute the log marginal likelihood of this observation, just because we can.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"logpdf(fx, y)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"19.096869068661505","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"fx should be thought of as \"f at x\", and is just as a multivariate Normal distribution, with zero mean and covariance matrix","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"heatmap(cov(f, x) + σ²_n * I)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As such samples can be drawn from it, and the log probability any particular value under it can be computed, in the same way that you would an MvNormal from Distributions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can visualise x and y with Plots.jl","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"plt = plot();\nscatter!(plt, x.x, y; color=:red, label=\"\");\ndisplay(plt)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"It's straightforward to compute the posterior over f:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior = posterior(fx, y);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior is another GP, the posterior over f given noisy observations y at inputs x.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The plotting recipes from AbstractGPs.jl can be utilised to easily print whichever component of the GPPP is needed.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"x_plot = range(-7.0, 7.0; length=1000);\nxp = GPPPInput(:f3, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp);\n    ribbon_scale=3, label=\"\", color=:blue, fillalpha=0.2, linewidth=2,\n)\nplot!(\n    plt, x_plot, rand(f_posterior(xp, 1e-9), 10);\n    samples=10, markersize=1, alpha=0.3, label=\"\", color=:blue,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you've built a simple GP probabilistic programme, performed inference in it, and looked at the posterior. We've only looked at one component of it though – we could look at others. Consider f2:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"xp2 = GPPPInput(:f2, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp2);\n    ribbon_scale=3, label=\"\", color=:red, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior(xp2, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:red,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-NelderMead-in-2-Minutes","page":"Getting Started","title":"Fit a GP with NelderMead in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Stheno.jl is slightly unusual in that it declines to provide a fit or train function. Why is this? In short, because there's really no need – the ecosystem now contains everything that is needed to easily do this yourself. By declining to insist on an interface, Stheno.jl is able to interact with a wide array of tools, that you can use in whichever way you please.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Optim requires that you provide an objective function with a single Vector{<:Real} parameter for most of its optimisers. We'll use ParameterHandling.jl to build one of these in a way that doesn't involve manually writing code to convert between a structured, human-readable, representation of our parameters (in a NamedTuple) and a Vector{Float64}.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"First, we'll put the model from before into a function:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function build_model(θ::NamedTuple)\n    return @gppp let\n        f1 = θ.s1 * stretch(GP(SEKernel()), 1 / θ.l1)\n        f2 = θ.s2 * stretch(GP(SEKernel()), 1 / θ.l2)\n        f3 = f1 + f2\n    end\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"build_model (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've assumed that the parameters will be provided as a NamedTuple, so let's build one and check that the model can be constructed:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\n\nθ = (\n    # Short length-scale and small variance.\n    l1 = positive(0.4),\n    s1 = positive(0.2),\n\n    # Long length-scale and larger variance.\n    l2 = positive(5.0),\n    s2 = positive(1.0),\n\n    # Observation noise variance -- we'll be learning this as well.\n    s_noise = positive(0.1),\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(l1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-0.9162907691270586, Bijectors.Exp{0}(), 1.4901161193847656e-8), s1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.6094379869399091, Bijectors.Exp{0}(), 1.4901161193847656e-8), l2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(1.6094379094538682, Bijectors.Exp{0}(), 1.4901161193847656e-8), s2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.490116130486996e-8, Bijectors.Exp{0}(), 1.4901161193847656e-8), s_noise = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-2.3025852420056685, Bijectors.Exp{0}(), 1.4901161193847656e-8))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've used ParameterHandling.jls positive constraint to ensure that all of the parameters remain positive during optimisation. Note that there's no magic here, and Optim knows nothing about positive. Rather, ParameterHandling knows how to make sure that Optim will optimise the log of the parameters which we want to be positive.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can make this happen with the following:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\nusing ParameterHandling: value, flatten\n\nθ_flat_init, unflatten = flatten(θ);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Concrete types used for clarity only.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"unpack = value ∘ unflatten;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now easily define a function which accepts the flat form of the parameters, and return the negative log marginal likelihood (nlml) of the parameters θ:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function nlml(θ::NamedTuple)\n    f = build_model(θ)\n    return -logpdf(f(x, θ.s_noise + 1e-6), y)\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"nlml (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can use any gradient-free optimisation technique from Optim.jl to find the parameters whose negative log marginal likelihood is locally minimal:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Optim\nresults = Optim.optimize(\n    nlml ∘ unpack,\n    θ_flat_init + randn(length(θ_flat_init)),\n    NelderMead(),\n)\nθ_opt = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Note that we just added some noise to the initial values to make the optimisation more interesting.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now use this to construct the posterior GP and look at the posterior in comparison to the true posterior with the known hyperparameters","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_opt = build_model(θ_opt);\nf_posterior_opt = posterior(f_opt(x, θ_opt.s_noise), y);\nms_opt = marginals(f_posterior_opt(xp));\nplot!(\n    plt, x_plot, mean.(ms_opt);\n    ribbon=3std.(ms_opt), label=\"\", color=:green, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_opt(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:green,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Of course, the exact posterior has not been recovered because the exact hyperparameters cannot be expected to be recovered given a finite amount of data over a finite width window.","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-BFGS-in-2-minutes","page":"Getting Started","title":"Fit a GP with BFGS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The BFGS algorithm is generally the preferred choice when optimising the hyperparameters of fairly simple GPs. It requires access to the gradient of our nlml function, which can be straightforwardly obtained via reverse-mode algorithmic differentiation, which is provided by Zygote.jl:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Zygote: gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This will probably take a while to get going as Zygote needs to compile.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"results = Optim.optimize(\n    nlml ∘ unpack,\n    θ->gradient(nlml ∘ unpack, θ)[1],\n    θ_flat_init + 0.1 * randn(length(θ_flat_init)),\n    BFGS(),\n    Optim.Options(\n        show_trace=true,\n    );\n    inplace=false,\n)\nθ_bfgs = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Iter     Function value   Gradient norm \n     0     6.955928e+00     3.050156e+01\n * time: 0.025985002517700195\n     1    -7.529170e-01     2.719757e+01\n * time: 1.5630629062652588\n     2    -5.151192e+00     1.847505e+01\n * time: 1.618600845336914\n     3    -1.277130e+01     1.132521e+01\n * time: 1.6753499507904053\n     4    -1.721687e+01     1.025042e+01\n * time: 1.7000999450683594\n     5    -1.863409e+01     7.213259e+00\n * time: 1.7121529579162598\n     6    -1.905107e+01     6.304127e+00\n * time: 1.7254369258880615\n     7    -1.962451e+01     2.790889e+00\n * time: 1.737210988998413\n     8    -1.978016e+01     4.068962e-01\n * time: 1.749133825302124\n     9    -1.979276e+01     1.882033e-01\n * time: 1.7824180126190186\n    10    -1.979341e+01     1.980481e-02\n * time: 1.794616937637329\n    11    -1.979343e+01     1.804052e-03\n * time: 1.8066768646240234\n    12    -1.979343e+01     2.565201e-04\n * time: 1.8188939094543457\n    13    -1.979343e+01     1.185698e-06\n * time: 1.8307390213012695\n    14    -1.979343e+01     8.239513e-08\n * time: 1.8424758911132812\n    15    -1.979343e+01     4.379214e-12\n * time: 1.8542208671569824\n","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Once more visualising the results:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_bfgs = build_model(θ_bfgs);\nf_posterior_bfgs = posterior(f_bfgs(x, θ_bfgs.s_noise), y);\nms_bfgs = marginals(f_posterior_bfgs(xp));\nplot!(\n    plt, x_plot, mean.(ms_bfgs);\n    ribbon=3std.(ms_bfgs), label=\"\", color=:orange, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_bfgs(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:orange,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Notice that the two optimisers produce (almost) indistinguishable results.","category":"page"},{"location":"examples/getting_started/#Inference-with-NUTS-in-2-minutes","page":"Getting Started","title":"Inference with NUTS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl provides a state-of-the-art implementation of the No-U-Turns sampler, which we can use to perform approximate Bayesian inference in the hyperparameters of the GP. This is slightly longer than the previous examples, but it's all set up associated with AdvancedHMC, which is literally a copy-paste from that package's README:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AdvancedHMC, Zygote","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define the log marginal joint density function and its gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"ℓπ(θ_flat) = -nlml(unpack(θ_flat)) - 0.5 * sum(abs2, θ_flat)\nfunction ∂ℓπ∂θ(θ_flat)\n    lml, back = Zygote.pullback(ℓπ, θ_flat)\n    ∂θ_flat = first(back(1.0))\n    return lml, ∂θ_flat\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"∂ℓπ∂θ (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Sampling parameter settings","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"n_samples, n_adapts = 500, 20","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(500, 20)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perturb the initialisation a little bit.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"θ0_flat = θ_flat_init + 0.1 * randn(length(θ_flat_init))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"5-element Vector{Float64}:\n -0.8913577556358407\n -1.3861767369521312\n  1.6198954529409704\n -0.02922528502085437\n -2.321438359196791","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define metric space, Hamiltonian, sampling method and adaptor","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"metric = DiagEuclideanMetric(5)\nh = Hamiltonian(metric, ℓπ, ∂ℓπ∂θ)\nint = Leapfrog(find_good_eps(h, θ0_flat))\nprop = NUTS{MultinomialTS, GeneralisedNoUTurn}(int)\nadaptor = StanHMCAdaptor(n_adapts, Preconditioner(metric), NesterovDualAveraging(0.8, int.ϵ))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"StanHMCAdaptor(\n    pc=WelfordVar,\n    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.4),\n    init_buffer=75, term_buffer=50, window_size=25,\n    state=window(76, -30), window_splits()\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perform inference.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"samples, stats = sample(h, prop, θ0_flat, n_samples, adaptor, n_adapts; progress=true)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"([[-0.8913577556358407, -1.3861767369521312, 1.6198954529409704, -0.02922528502085437, -2.321438359196791], [-0.8913577556358407, -1.3861767369521312, 1.6198954529409704, -0.02922528502085437, -2.321438359196791], [-0.44683238347924437, -1.6524854151456885, 1.7010160236211633, -0.46347781590894355, -3.954017796145143], [-1.0863577322979396, -1.2274973255325432, 1.3813049939284903, -0.5565798906375816, -3.6517536431354674], [-1.2007450510767552, -1.4678949984339957, 1.9643174749607764, 0.7289600426244923, -3.4332666457877568], [-1.0472993958877508, -1.6797362591228013, 1.8532863137564928, 0.2960530041803273, -3.7962650800887783], [-1.0476486440322785, -1.443447795151636, 1.999542094035209, 0.7309485075406295, -3.743800829648405], [-1.0476486440322785, -1.443447795151636, 1.999542094035209, 0.7309485075406295, -3.743800829648405], [-0.6669268670427583, -1.2868734882163182, 1.9759831686075813, 0.10614441530915693, -3.692891932481692], [-1.2882991401729635, -1.6859490476153305, 1.5353096691992272, -0.17990689595413475, -3.5543580317592127], [-0.9183007912421941, -1.2357202651472503, 1.921989529647577, 1.180053735195757, -3.880073529850698], [-1.259596334628233, -1.8213984954612255, 1.4682083789379619, 0.27525468362746985, -3.6286252105360868], [-1.4414136994375912, -1.6369472183847038, 1.4113719322031306, 0.5160955795286013, -4.0197864878350975], [-1.1468606097891962, -1.8082831366774197, 1.2779790611516477, 0.24796263685461073, -3.861812369968389], [-1.1468606097891962, -1.8082831366774197, 1.2779790611516477, 0.24796263685461073, -3.861812369968389], [-1.3748039767898061, -1.522880364791682, 1.2390303527840496, 0.02097213702593935, -3.8439683861672176], [-1.3344991768664578, -1.6515472451060362, 0.8149986844684747, 0.20646789702361623, -3.747810391190395], [-1.1671722249308603, -2.0071823146036736, 0.9323257412006574, 0.3412370064571284, -3.7561682396714726], [-1.044374892259759, -1.2803446444339892, 1.183963085956987, 0.46471284974208843, -3.762607467156347], [-0.873610861515993, -1.3992097397625407, 1.2844583651022672, 0.5896252744515152, -3.954867131311157], [-0.8272432955525637, -1.453084389751879, 1.3907088814755257, -0.5473943230379132, -3.634194109504927], [-1.3227193204880077, -1.6784796447220767, 1.403097122827062, 0.011370321850944193, -3.6508762187393304], [-1.0102313873469044, -1.5218155425120092, 1.5002280016435425, 0.0018945652098372283, -3.865716113457482], [-1.1498339589448006, -1.462336238036263, 0.8188508847993524, -0.44507762350137414, -3.662085103552201], [-0.6814083369733792, -1.0669720379435128, 0.6738943251198403, 0.31238647004313225, -3.553086152115519], [-0.6704320449415334, -1.5707076515070653, 0.2857448985603038, 0.24189598173716279, -3.4493736910494373], [-0.6578189320128153, -1.382641779859662, 0.3596373043052599, 0.18208990878376566, -3.7818342373564953], [-0.837770499419526, -1.2011492000787585, 0.8398443911147955, -0.36187076173379207, -3.477592907068224], [-1.1251285987419408, -1.4730926914917186, 0.8691197909097755, -0.251070046337733, -3.802582071379366], [-1.305033439937927, -1.5323153406612826, 0.9770417281383413, -0.1966790845631192, -3.7716315707161447], [-1.1550025436345588, -1.7102625635004227, 0.9484753387900056, -0.16054175895740935, -3.6051884573180315], [-1.0706472648228436, -1.8876861291067497, 1.0936648069959372, 0.0260884068289977, -3.7175817547792365], [-1.1267564359780409, -1.936734610829737, 1.217790320396791, 0.13736486404455137, -3.9700011956020824], [-1.3935654245207076, -1.535999862938431, 1.2325911640654466, 0.5648576471662126, -3.4774711583885525], [-0.9922064235370757, -1.623432228693076, 1.0599990837289426, 0.8092208365738378, -4.153295317776688], [-0.972202738595741, -1.4525894653457503, 1.2170804806261846, 0.915224703869054, -4.090066708950608], [-1.0137401745305958, -1.1381779476646154, 1.2885953125541054, 0.2753133086925724, -3.6410294828459637], [-1.159997234437522, -1.610162180279289, 2.097960180849519, 0.11528559693579676, -3.7374624354702393], [-0.7312743242899065, -1.6587351170015476, 1.2452460168930637, -0.09600736280572222, -3.850340749962958], [-1.084887643393658, -1.5707012177954993, 1.7140926895239619, -0.19933400483712688, -3.669775213402291], [-0.7009329581076564, -1.6345047848724321, 1.2668480920761092, 0.07154164717365401, -3.432389613519965], [-1.3837518068680308, -1.4158347317150977, 1.943896053947817, 0.2913562129105958, -4.009975180541439], [-1.3609018794796346, -1.6570057419622106, 1.777249831370432, 0.037770548640109924, -3.9448523319965574], [-0.6837215814641299, -1.147596995970356, 1.306251188367503, -0.01235555294253991, -3.1945380276529307], [-1.0628951969719773, -1.3646321164681248, 2.605951045569146, -0.06016731563173104, -4.007161629823907], [-1.0718749069405273, -1.1417106209790833, 2.6822698208872193, -0.05197216774481951, -4.063362460372136], [-0.2964988741344295, -1.050997371190702, 2.1503094236057176, 0.01575135727896204, -3.3772776798463218], [-0.49425860864186344, -1.024553264657083, 2.009245843890741, -0.049735939812295946, -3.338245698559991], [-0.8212532150593499, -1.325067036506395, 1.8349844703496843, 0.47465197778083823, -3.8425315399239968], [-1.104977989480813, -1.6506807964850403, 1.6751474799812132, 0.7394408382280763, -3.836013123431521], [-1.1508838524773761, -1.2092201721854237, 1.6516862416082583, 0.21108094003725397, -3.8653486107261594], [-1.0667198471169328, -1.7264631821587604, 2.0719292724824196, 0.3126120828435317, -3.594966027321371], [-1.2998324291064218, -1.620023782083429, 1.5158683400225945, 0.00027638397035756324, -3.664332798340025], [-0.7908157756486829, -1.4778919990576125, 1.1558985866180203, -0.45966238869769904, -3.745093165415147], [-0.6257789488776946, -1.1805723268725672, 1.4019854012374124, -0.4470158486385123, -3.8388900988873003], [-1.159585751983865, -1.6292482579094578, 1.6467631029279297, 0.5215366012753183, -3.958039307271823], [-0.9997284232020431, -1.3547330125135304, 1.4658570328492067, 0.47054139202601897, -3.5806125871312573], [-0.9956034678667373, -1.4286839208870585, 1.888479562474262, -0.07025420400774557, -3.941619045416245], [-0.7840072059824768, -1.5706356832279014, 1.5900412023635109, 0.409105458173218, -3.671670278229114], [-1.268626810502216, -1.519997993508827, 1.2753776792095108, -0.14333311952482944, -3.7348045955718607], [-0.8350381376850382, -1.7046182105772048, 1.542697743982683, 0.45644664842912075, -3.5464131175599714], [-0.9294328809396023, -1.3998185429078613, 1.416750154467652, -0.3374778581255138, -3.7312013354192857], [-0.81929028389859, -0.9734068697326421, 1.8498602871424745, 0.510973195941347, -3.8201328870056854], [-1.3529988019814054, -1.8134971739254278, 1.9113073640795946, 0.4354553334002351, -3.6037659870117236], [-1.1163492840928761, -1.8817317291957893, 2.073899569671422, 0.47777232308508655, -3.3784219010385605], [-0.9065155884414273, -1.415299889425134, 1.8624061657129656, 0.5756105799366164, -3.610631869305621], [-0.4837209387442699, -1.0998409648353418, 0.8905728854220272, -0.2652095176725382, -3.706191814909246], [-1.207044172882352, -1.6876485457215276, 2.0739422154949168, 0.31625610120232694, -3.89013299658456], [-1.1990890567539043, -1.7173766474843921, 1.6057169457551739, 0.0703474293446672, -3.8947299054109865], [-1.022246079328933, -1.3875203756534888, 1.9648106398280465, 0.06148084369128742, -3.6278539584043625], [-1.0929025208531589, -1.5241950848129275, 2.0459266700888032, 0.4354217916142372, -3.8878150557290816], [-0.8762287547442972, -1.5939827263303727, 1.4096795719598623, 0.043969745898195245, -3.7163601453858823], [-1.1622212822110356, -1.0435702954593604, 1.4714439213499517, 0.5362913720807134, -3.9602562099395873], [-0.8502914107503408, -1.4074133297498457, 1.4909286423473473, 0.49103131618211, -3.6042819355797056], [-1.1191449912796445, -1.4184404272485351, 1.9068898881929195, 0.8444030096714058, -4.047962361330492], [-0.8895031484068417, -1.5740461361717566, 2.0915015515703885, 2.0820222829991364, -3.6975141589993665], [-1.29614113656975, -1.5181539954237446, 1.9013128327649575, 0.9676341431793803, -3.7245284709793958], [-0.7617131034426743, -1.670760211220852, 2.3977482749597696, 0.7378203513430257, -3.836306144596268], [-1.2740884907193892, -1.4100252834530798, 0.8916510972173637, 1.1228661478227047, -3.703515312951051], [-0.8434836745539984, -1.7920084811463046, 2.332996618014999, 1.0766176835172079, -3.7196739447844376], [-0.6132176494870917, -1.285624507794654, 0.7606837337093224, -0.6097938378364728, -3.7362666375491504], [-1.5302131753800692, -1.4932482402399068, 1.7578413066994447, 1.1436570737561524, -3.655991707374589], [-0.6004131177792136, -1.2151702005500242, 1.6718384657073502, 0.25956532819287936, -3.3903366535536175], [-1.1810031639257978, -1.2569892923586143, 2.097853265677144, 0.42418346383376815, -3.847636917623867], [-0.3548899123850934, -1.085490355883182, 1.884220448974965, 0.34684480101150145, -3.395068429275809], [-1.0092599388062113, -1.294332648456859, 1.7002545621902645, 0.6005406740954982, -3.518760306759099], [-1.0049586148659748, -1.0820466736793264, 1.9508079187215837, 0.48042239796183284, -4.0292364213622855], [-0.753421633387503, -1.7816924173336741, 1.8556095549092375, 0.15393897391759184, -3.4224614766772894], [-0.6073594154908284, -1.868761810559389, 1.7981705895378246, -0.037857348329023044, -3.4081662832787636], [-0.9265270595842725, -1.3631598047339724, 1.6747230050685937, 0.21267062265177517, -2.9457180600616844], [-0.9020178770367888, -1.5408181875594822, 1.408994440913685, -0.07114594340457425, -3.24646286518929], [-1.1334448724776256, -1.5884029816439829, 1.7234992203367496, 0.4014940113256619, -4.301466382991697], [-1.0454276260514999, -1.0940684662198832, 1.0369968630550503, -0.4254257277162885, -3.783300644517194], [-0.6737928234951195, -1.6283050695440415, 1.7146334220937565, 0.20744504650846665, -3.6750085312161547], [-0.9735653069760494, -1.508926490322001, 1.5297254976085253, -0.13327376075612146, -3.5589904879838965], [-0.9280640112089845, -1.3713030365887275, 1.2335442036903956, 0.28618447016765025, -3.937066153734665], [-0.9705052620445663, -1.7949706903682123, 1.1524351405199755, 0.015358004444919027, -3.792267389997798], [-1.1364787560816754, -1.6571768994342622, 1.0838134193445912, -0.11182196179258919, -3.652381758882108], [-0.9614075681940987, -1.5484974309434625, 1.7355715204630164, -0.1763128475755599, -3.711579286944457], [-1.1665552506671262, -1.5176521507226415, 1.5342993915539662, -0.1707980831877837, -3.5668673332429948], [-0.7801771732718006, -1.7271753387667967, 1.5233432185203426, -0.10895220799713602, -3.669682431146845], [-0.7584889881197446, -1.6333868833639593, 1.71524302270899, 0.3655316654235581, -3.7769125004101065], [-0.8394677278839187, -1.5993671815309858, 1.7050835737092098, 0.4440170495899023, -3.6387260818008587], [-0.9961897930783752, -1.5815017757721819, 1.691819325803051, 0.05324530576554809, -3.424635980914572], [-1.0068479759578544, -1.116745684427259, 1.6663455787660955, -0.211716714192477, -3.8832518551364164], [-1.112065176876308, -1.392593956897735, 1.6052555819902643, -0.2212686346315106, -3.9034269723409962], [-0.8899933943127755, -1.3875003107651829, 1.720386430959556, 0.3611051919685017, -3.6496913890942566], [-1.3011384809403774, -1.4043062031873803, 0.6082118155636271, -0.36551601039633086, -3.8822221068455884], [-1.0740031469198934, -1.5307017771413467, 0.8145752386720508, 0.22922621168521548, -3.2764143965931907], [-0.974524290600979, -1.6780086600902369, 0.7776383665108332, 0.4723786015224807, -3.5407407846492704], [-0.9518468777866667, -1.7067991816878663, 1.8308613947635712, -0.2902066953125419, -3.545055202809451], [-0.8114750451952882, -1.1953176417401177, 1.4905857106626532, 0.12800869125888337, -3.7559292295107296], [-0.7488606131999074, -1.6459369777910444, 1.837034917055232, 0.17672236972093144, -3.7790990866830843], [-0.8210569883370861, -1.5773152807123765, 1.6450572504940522, 0.07887719602790075, -3.666091658112279], [-0.8096232904440182, -0.8901354095818143, 1.9846200366302236, -0.20567014465788647, -3.6595564084206025], [-1.4059277670655068, -1.6660694928841393, 1.0302898985768092, 0.334897337139727, -3.7540153505820424], [-0.9218277103305739, -1.3154207567615022, 1.5009371778407028, 0.5492364991679661, -3.577117768487191], [-0.9207162177359216, -1.3753666728552318, 1.9538990778480334, -0.04330734947509532, -3.62788560513004], [-1.0908181632344311, -1.6597578707156584, 1.2173285264071285, -0.15382828269599308, -3.7557846202036504], [-0.966781379390841, -1.4639154746592613, 1.601327583690807, 1.0599551982742588, -3.781233562402377], [-0.7603585269883046, -1.158125647488795, 1.7327112507457383, 0.5708153299346967, -3.4502026723039054], [-0.6125203407396798, -1.0730796011220798, 1.4752605054334453, -0.0232565757688028, -3.838903846439336], [-1.3231803399183943, -1.6365205126662532, 1.5373808664750503, -0.19250478774156107, -3.6955137484507827], [-1.4886484256482841, -1.708977525571606, 1.4621042877212238, -0.32633014363365076, -3.7961037385546277], [-1.2570973543618627, -1.948324884536547, 1.4563528610324497, -0.3329602703621872, -3.802034715604662], [-0.4051232335389078, -1.0284897596850464, 1.4458259777643054, 0.10287422569404733, -3.602855057304991], [-0.553354926919563, -1.00271032669894, 1.042816423418155, 0.3117161917267977, -3.4559857491895003], [-0.553354926919563, -1.00271032669894, 1.042816423418155, 0.3117161917267977, -3.4559857491895003], [-0.5876244378334283, -0.9637751049223818, 1.0951168857885036, -0.600677262537225, -3.6812520899307843], [-0.9990666729852398, -1.5520292446428317, 1.961396960042307, 0.728366522723497, -3.9721898512909544], [-1.0315361303259059, -1.7214210506060224, 1.0984061110825727, -0.2876402973263595, -3.61994957816978], [-0.9988722761522739, -1.0437609445981935, 1.7229496122204844, 0.48337077444753723, -3.7863674213397385], [-0.8828824734326937, -1.44718314527723, 2.1050043659720017, 0.38697794561141546, -3.8873312395178936], [-0.7398670925544455, -1.3233102976951223, 1.6937462606763642, -0.28762167866421495, -3.7677002179502246], [-0.8627271549889299, -1.1044383004066987, 1.3627317358308007, 0.36590962357757495, -3.591169198504067], [-0.61059622690146, -1.2824322611566275, 1.034994023727318, 0.08685592615573892, -3.6182707234352587], [-0.6016408836040531, -1.4207143558518986, 0.6539658276067972, -0.10777414614001278, -3.5448736187838468], [-1.158160634310405, -1.7033826272913408, 1.6041655513889717, -0.03263643149017871, -3.9591853777611163], [-0.9342407873856873, -1.3909867105918907, 1.576186520331911, -0.41253258259654224, -3.632316155221443], [-1.4288715998460777, -1.8106854857460428, 0.903054063297936, -0.32354787756563186, -3.970005975870306], [-1.0813163447970566, -1.5843290165150774, 1.541965309371043, 0.040960837822584445, -3.322913151725846], [-1.0218334395018585, -1.1802009594676672, 1.2296883321314247, -0.07804974403745418, -3.6953259929890114], [-1.0781623477852196, -1.7479361829965923, 1.6569927982722816, 0.3027523951367023, -3.8486446664012592], [-1.2581271366372921, -1.7556554811014393, 2.0523773030101804, 0.3721788319971472, -3.7619593098016706], [-0.8751804249543202, -1.3305971653275925, 1.650097333429022, 0.13996044117296824, -3.7900170740547763], [-0.9519643867603572, -1.1560700738038234, 0.9638214647929925, 0.34355714065760945, -3.704170016446894], [-1.1192173929410691, -1.9224647193058646, 0.797881020162022, -0.385178397770768, -3.760431926751887], [-0.8800507635783817, -0.9857912346794157, 1.4090134823310982, -0.12484341838468749, -3.795244832741149], [-1.055205747373423, -1.8200625520251696, 1.815887023114342, 0.24130886496127327, -3.4743618402919365], [-0.7854608208426974, -1.6882305289289121, 1.264644943537666, -0.22160199826810112, -3.6114362230417614], [-1.0298051733503126, -1.6128662907740565, 1.8397013420245558, 0.21999673604867298, -3.6229539600531773], [-1.0298051733503126, -1.6128662907740565, 1.8397013420245558, 0.21999673604867298, -3.6229539600531773], [-0.888851050176328, -1.4919336890945065, 0.9428918095479385, -0.2747822410067692, -3.461590457724864], [-0.7472315089580913, -1.187064472323957, 1.4889619053111887, -0.04774287105737279, -3.8542491732951603], [-1.0628227524093665, -1.3998032457440919, 1.7654591806281539, -0.0313234859349118, -3.547953604888909], [-1.3041274216288905, -1.5704691496474785, 1.3034230601379253, 0.2898106715345427, -3.8551403611555015], [-0.9268724468353083, -1.6972577921394967, 2.084052863628045, 0.6883243982526741, -3.6603892751494067], [-0.8957154955671787, -1.0987442372900116, 1.4098767623105988, -0.22536497889860607, -3.3888513409066747], [-1.1364661395066074, -1.348244496021291, 1.726974532155466, 0.1635296943181867, -3.7067742179225407], [-0.9012464232543489, -1.1526474813083323, 2.113222776679122, -0.45537046969251493, -3.7098808549167748], [-1.0912058009855126, -1.6524220395403573, 1.5679401120613325, 0.5232624044297141, -3.744258972672558], [-0.964671970837163, -1.6142428152378383, 1.6046611826726347, 0.6655742292955819, -3.7460676154679726], [-1.1612936814398829, -1.7933624476016794, 1.5317179098339588, 0.781676182386184, -3.804382663672394], [-1.074722894666116, -1.339409059074645, 2.070367886197929, -0.20604690525292768, -3.62608530110367], [-0.7342935432390132, -1.6856422417113714, 0.9135493333914377, -0.0012668100078170597, -3.599282915461752], [-1.0795025909006304, -1.3457171587921368, 0.6728726858588281, -0.1866290434799502, -3.722275803869456], [-1.060332670530417, -1.8004079394304997, 1.3245416630824787, -0.05672863220884268, -3.7467113793741715], [-0.9645722693735241, -1.622394430997415, 1.2915257118034253, 0.05012995164804884, -3.709609985240211], [-0.9776172869455019, -1.0807637955159441, 1.6222019385293427, -0.23439761471466497, -3.8352217271017324], [-0.9937848348904359, -1.7599781690089005, 1.6071560776735943, -0.30380620394920405, -3.5639289107597203], [-0.597564786330058, -0.9592450186538447, 1.5912000214662958, 0.2937524664452281, -3.866614903650167], [-1.570511290272122, -1.8036651527957628, 1.1311471778850462, 0.16262614836879394, -3.3935129465010534], [-1.0652626767088593, -1.4644744844714768, 1.0426526362832866, 0.05213031645082504, -4.0055839708183765], [-1.0698437479155232, -1.515978972084878, 1.8865989485833203, -0.19271553988599532, -3.5959929664201824], [-1.1103617456443655, -1.3145612388136467, 1.3159875384288942, 0.2919923170395462, -3.81078113624433], [-0.921432564032275, -1.3592171254429388, 1.5420516810306195, 0.32764821830094226, -3.854755307145165], [-0.9685881797923356, -1.2283244507572577, 1.4351104324686468, 0.17209399600668632, -3.4044135423059347], [-1.1562864906243249, -1.7781209675537157, 1.666314175818226, -0.018008504404441503, -3.797143356394093], [-0.7826244611661451, -1.2118208392767302, 1.4441887893544159, 0.6772402012329961, -4.002657063508221], [-1.1471121519348941, -1.692250742906697, 1.8765953336235819, -0.1439869921750529, -3.9453525758075054], [-1.284312286061452, -1.3723410686830662, 1.8499916516121202, -0.22542590320128736, -3.7809338696252546], [-0.5532068587392579, -1.0283011676568568, 2.2530584980844846, 0.10815423724811116, -3.547182035399123], [-0.7743884200690587, -1.3454406175115552, 1.4204034028036816, 0.9292250578044304, -3.6567824404724956], [-1.1928385109049306, -1.3328552783140708, 1.6432600330997291, 0.7515775217719707, -3.974803315660078], [-0.9793475432395462, -1.61851776277043, 1.3319302091111576, -0.09004290544880633, -3.7363328470357575], [-0.6330017579969507, -0.9593536478710424, 1.3212872868312382, 0.3909154544664556, -3.4762830332666588], [-0.6860682901293247, -1.0349388523734173, 2.2714375063872625, 0.04740336282559336, -3.7465510806834783], [-0.6411515493524166, -1.4139923453894034, 0.8756652397457008, -0.16558041589339398, -3.672320285933054], [-0.9597021378577703, -1.6014849007054335, 0.9935792099211581, -0.14057754463749234, -3.4655851296363993], [-0.7203242489061464, -1.658241448212673, 0.936978963803729, -0.5103334190201475, -3.347414800567756], [-1.0527184757019916, -1.5880672237322786, 1.5286900962674843, 0.513442712415628, -3.53071519547979], [-0.5398622635265902, -1.0232668260076967, 1.708101344013989, 0.22496208753001148, -3.962031338068778], [-0.8801614633056043, -0.8136693450326802, 1.528939948945028, 0.5170853741811323, -3.9494932519564356], [-1.0428148040470184, -1.4030489423858994, 2.122997195923307, 0.09467580690625288, -4.176223156297593], [-0.8450093933887904, -1.5885698069598368, 0.6257708861623583, 0.32106011184328465, -3.745704623798383], [-0.8613978172526509, -1.626699756273283, 0.6516135630114281, 0.35743677625835324, -3.76145344217787], [-0.8763637130485414, -1.4107730101474572, 1.3307603963747392, -0.24367645554307574, -3.9646205414721454], [-1.2168361647245824, -1.5062697597132042, 1.117347472224644, -0.5086433020376074, -3.536464966988026], [-0.9286540526933642, -1.6938338959001484, 1.165238933392615, -0.6284276405225478, -3.873277231750118], [-1.015985541677856, -1.3549486107586508, 2.05750490638528, 0.549623349935007, -3.891580369768798], [-0.711056011511389, -1.066852691184499, 1.649064938418288, 0.1722439799364838, -3.573665834887661], [-1.0514023090872788, -1.5372473534438609, 1.3221418822493851, 0.41401210843027486, -3.8117113625971344], [-0.9009316474057436, -1.1914807276394686, 1.2220499430111338, 0.8772467675685086, -3.8280377766078395], [-1.2987804112542676, -1.640792782697928, 2.007242063047499, 0.07188325465464684, -3.872699687948361], [-1.384026448850181, -1.7098153965942318, 1.8618544079337456, 0.6329135720177158, -3.641938087773775], [-1.085530538488649, -1.5635595020944422, 1.2008306267307831, 0.009139301988867254, -4.006338333595258], [-0.9261021903235597, -1.7057766154596314, 1.1160541558644714, 0.031095821315007644, -4.069531281929583], [-0.8393641951221027, -1.1733804399346113, 1.8842735195957232, 0.23485249976819456, -3.6368540975500983], [-1.1770196333250347, -1.8172571442392644, 2.0391259520721516, 0.8664413110496335, -3.8913207674703587], [-0.8977790595203581, -1.276441438608604, 2.2209523806271485, 0.8611163430197748, -3.6697740087163657], [-1.0625781283947218, -1.7122448550293947, 2.098442109255073, 0.9823284368682914, -3.6934602247405772], [-1.18749050723859, -1.4955523866769513, 1.7416936233316263, 0.0777112438092718, -3.774353700577884], [-0.9597282387887438, -1.4543661286921048, 1.4514676489790717, 0.0765524300898568, -3.6551597677271035], [-1.2849421442652247, -1.6331763389626386, 1.6046231702588614, -0.0926661425376279, -3.56328355948236], [-0.7243823785595638, -1.188332040667353, 1.8913782980822913, 0.4731226926056564, -3.633839475940375], [-0.9605634674667505, -1.3451571264833777, 1.583476360081673, 0.04622592802962486, -3.7814137442700564], [-0.8821984849225905, -1.493320707693206, 1.484779445000049, 0.19827338240968034, -3.6909941832664934], [-0.9561804403696703, -1.6817642232948602, 1.2421467367063903, 0.6400351922068578, -3.792430532758804], [-1.042624445627479, -1.4084154226065821, 1.5346406235411463, 0.36031867542024326, -3.6085775771818405], [-0.8064390838341342, -1.46782499233649, 1.8943326407281695, -0.06568883365962613, -3.7998883699242403], [-0.7960845897602082, -1.472424625557546, 1.3597472161959292, 0.13894969192686327, -3.7522076364731616], [-0.6749560526114248, -1.4682470909627836, 1.4747529068078975, 0.027751974490523107, -3.8921616327969972], [-0.49770348258790686, -1.221192869433771, 1.5285234750797918, 0.11426309645703023, -3.906545051649093], [-1.2785518388084578, -1.7213199352756667, 1.9304170981348994, 0.334716411424592, -3.822087466743362], [-0.6834679085271299, -1.2872459900561242, 1.219537134276782, -0.3165482562748656, -3.612081280943049], [-0.5679956219053187, -1.186330726024056, 1.5995567818864362, 0.16539459835934106, -3.500827398830438], [-1.3037540821109466, -1.3947619624362666, 0.9778412005650832, -0.3735397366470859, -3.759973024581526], [-1.0416648043253658, -1.5339693050026626, 0.7540838851424803, -0.46975840606272046, -4.221315496664019], [-1.3828044429668733, -1.5664323482397116, 1.5193113243745606, -0.3982130088144815, -3.4204140306981077], [-0.9438635562898621, -1.3812706078268473, 1.5695427394178587, 0.011821611415345074, -3.5968998492938407], [-0.832314271987108, -1.083750063771474, 1.6938758333848107, -0.05955315778081574, -3.668966492856514], [-1.1465295696018056, -1.258164900696241, 1.3983716967500441, 0.5088159249575689, -4.096875710839038], [-1.1283201762294026, -1.406877919527101, 1.2949657548200142, 0.6709550492777414, -4.041607732497355], [-0.7055355783008641, -1.436236965638157, 2.1094550650452186, 0.25026611440308966, -3.721724616303621], [-1.2654750507744321, -1.3570496947878292, 1.8931985874627242, 0.23231892827461212, -3.6823523603917048], [-1.0221438979099307, -1.3619361242918555, 1.261868153795705, -0.1039777028545997, -3.5785268667176315], [-1.0887961563351234, -1.4963648847705964, 1.2423706946593895, -0.15362414391702675, -3.5165558574335103], [-1.1112094063483302, -1.7255670918676191, 1.3260284980971855, -0.08916108509106074, -3.756340688667352], [-0.855308698442883, -1.234476771184854, 1.270953587833664, 0.06751743796091286, -3.6730307521456997], [-1.2045981988454526, -1.432160712712498, 1.1082282070375475, 0.12346280955500294, -3.980416086593542], [-0.8905494628829579, -1.3818638935375924, 1.9462107457426128, -0.10496640655990569, -3.5611582310911465], [-1.312248115323699, -1.6424901756854398, 1.7235829038881618, 0.05189191134792849, -4.098787886617367], [-1.312248115323699, -1.6424901756854398, 1.7235829038881618, 0.05189191134792849, -4.098787886617367], [-1.2534938794184838, -1.447723873079416, 1.6453509370249535, 0.06428776056649467, -3.7882560684510382], [-1.0712043594287066, -1.1812226416861205, 1.7755029553345492, 0.1782425939314292, -3.7957181664386366], [-0.9989477239615622, -1.3447158727071966, 1.7725817912764212, 0.23187568821896812, -3.5959489525148998], [-0.8580582874721178, -1.6822885542903974, 1.931187877382659, 0.2935448776397631, -3.8218279237176636], [-0.9761363319933981, -1.5866363369307368, 2.135359470529525, 0.1734550725451293, -3.4179896875610156], [-1.0147887819054553, -1.5384931276735436, 1.2410506764275853, 0.4915701788830555, -3.5914796557872743], [-0.9584237561091198, -1.367226893778672, 1.9548473751623883, 0.013099255527769027, -3.8412900610689666], [-0.8542514893797041, -1.4738018090213276, 1.9462558993003503, 0.3508501505110396, -3.7887124066738003], [-1.1117211184539169, -1.6537027109568034, 1.9179728601969104, 0.2027389351104984, -3.7652289034014714], [-1.1187886050049993, -1.3473246468691558, 1.77548588523703, 0.42847572173327964, -3.7670749859056665], [-1.100566638467902, -1.7143029463826944, 1.9624472578662568, 0.015758010611953338, -3.9222597329711], [-0.9614018858950659, -1.374660895345827, 1.1992840695524376, 0.7640998637439671, -3.6831497717018724], [-0.7867129058662201, -1.2777923522061554, 1.3912544865827539, 0.5071093336287315, -3.4170695884484683], [-1.0383183223036538, -1.2665713039145479, 1.3601832062612227, 0.363207520497802, -3.4379713994228895], [-1.1844312093586775, -1.463018289877899, 2.1729272298225486, 0.1479954207464354, -3.781605464421662], [-1.1540606378853153, -1.6770521256548983, 2.040432099522612, 0.533184581671858, -3.7767197360654863], [-1.111205523254514, -1.3684800054381476, 1.3256719138775581, -0.34139317019990073, -3.7624433821092897], [-0.9572551588943063, -1.5523998167406097, 1.7739496126633392, 0.41260086169821764, -3.747697417923076], [-1.207135676315457, -1.4590840850229683, 1.590160552394364, 0.21787529998231409, -3.6589419340605427], [-0.80365853751205, -1.1957441113547633, 1.4828399570730117, -0.12057693080581544, -3.665977274961635], [-1.1342741001068954, -1.7730604098244651, 1.9127419561025614, 0.40363490825179754, -3.514595401920663], [-0.8697951524841436, -1.2549971070364108, 1.254606068963477, -0.34123903038447967, -3.6259403337446727], [-0.9581124266886881, -1.1182632745375538, 0.9655575621914531, 0.15974378269190645, -3.595632105242019], [-0.8444622024368851, -1.4166899118029563, 1.6490494031096945, 0.4735999418430003, -3.9164623549324586], [-0.9834639650121848, -1.4847703051109011, 1.5699494832320653, 0.6097268855638379, -3.7532728753197393], [-1.2173718808606122, -1.7008607704705279, 2.0349482144557975, 0.5560874733233999, -3.8399213635543274], [-1.3090897668726513, -1.7145530895530194, 2.0619799566157635, 0.4817613751960418, -3.855334066000381], [-0.79122163160475, -1.2682882195673761, 2.052425329988631, 0.4545886053081685, -3.6581321423996824], [-0.7334946798772368, -1.4474393216807926, 2.0644880540184705, 0.29555208211171924, -3.5369703171948124], [-0.9904276345115602, -1.2425296199276792, 1.2401865815409807, 0.4063423607427269, -3.772082016443415], [-0.8262646595023141, -1.3533320445438453, 1.8519695788296664, 0.38357436453392135, -3.732043536796757], [-1.1196663146274548, -1.4144939628355175, 2.0368036184055267, 0.5460535594661506, -3.7524207663393927], [-1.0172340241431943, -1.5702280512714513, 1.7838104919129962, 0.6650963616845114, -3.4608463773206464], [-0.9512145539394137, -1.0513059159831335, 2.4776001307885203, 1.0941471955875735, -3.9421409490889125], [-1.218116052331347, -1.6461582974107734, 0.7107024663145671, -0.6389726699486193, -3.7941102455780067], [-1.045400350701179, -1.3975243089524234, 1.0799059420308614, -0.144051391267302, -3.945958301893472], [-0.9793901363952724, -1.620204423550824, 0.7880280961699597, -0.37419678103732956, -3.6186474435992992], [-0.9801328187026903, -1.4357882824734776, 1.7850025153682345, 0.3410377361572643, -3.3697069759616483], [-0.8444664107606554, -1.6055631743839223, 1.9464303107862215, 0.2308601426488136, -3.3519013115845193], [-1.2266501982069475, -1.762474675835815, 1.8250133091358807, 0.2966496819785238, -3.9540477589231724], [-0.7158129940119967, -1.415003345438585, 2.0652625505445896, 0.9735521925449298, -3.8489826528627504], [-1.563977018388718, -1.8070570546829439, 1.722508616373994, 0.6453547348286335, -3.7197603339118985], [-0.12351190479956994, -0.5470741414721205, 0.923694744186423, 0.004361394532808996, -3.5715255132556236], [-0.4987369999418694, -0.5995041218272, 1.2402127599461337, 0.01041279546288654, -3.623216451692286], [-0.44845410544266656, -1.0972641356448447, 1.478072688160388, -0.5726607174788643, -3.6934689179411153], [-0.6026395948492914, -1.062650788255504, 0.9347831951083082, 0.7121605469451102, -3.6559640825230004], [-1.1481189644171264, -1.5252583543473697, 0.909296695760347, -0.7503352602211931, -3.736799464431598], [-1.2899983790888896, -1.5501564506588104, 1.195136002303142, -0.6954255557278575, -4.040777867706266], [-0.7448894052475761, -1.5120941440802869, 0.9452139586110384, 0.5747544097559312, -3.1845895531997703], [-1.1143688096023843, -1.8352129243008006, 1.0264158345177603, 0.23259892584562716, -3.4982506168703194], [-0.860058547814005, -1.2336443990190225, 1.514523501479015, -0.37477942986539425, -3.685081490723983], [-0.7697319703138089, -1.1482855641045948, 1.4648175275542172, -0.24170919136960434, -3.743353676371112], [-1.0298007590377087, -1.2832318710579396, 1.452581219682184, -0.5761425536379023, -3.828712752287156], [-0.7182176772035122, -1.2394152183874276, 0.24835198483721108, 0.20803123235202509, -3.637479660932958], [-0.6530823305610721, -1.4642836407912163, 0.0947122583092719, -0.021987831894140858, -3.8632493764241134], [-1.0413326224441382, -1.546477650400285, 0.183311074936455, 0.09876384113987721, -3.480301007794229], [-1.1327241641613468, -1.8223621696123424, 0.393759504834702, 0.054584990971976124, -3.3625707430479395], [-1.2112045820064692, -1.278072464152604, 0.8614728534000835, -0.1599909972775302, -3.934849048956051], [-0.8561108764583332, -1.8089577521827138, 1.3057820012555799, 0.09267710078262201, -3.6003236393381837], [-0.6793356122262932, -1.900225473950993, 1.1149621569949264, 0.05341381806569725, -3.7015490393969737], [-0.7298727745758754, -1.5115244893030526, 2.1127084761279225, 0.1818739510386325, -4.002577466730407], [-0.8308515930879316, -1.4544526410964302, 1.1864402519355337, 0.3324796114267671, -3.938125900818275], [-1.1153030707095908, -1.7347858436421035, 0.9140942149381037, 0.40652138997974774, -3.768979242358776], [-1.06670474262175, -1.418776869354962, 0.6953993181368749, -0.13440567513610882, -3.6086938042987953], [-0.9376069514862767, -1.3225985789403858, 0.6360199956425228, -0.07680577675204635, -3.4825528179786014], [-0.83766799018615, -1.4269510954644722, 1.1256233013751862, -0.005135515349059549, -3.927935647320392], [-0.8268166354493847, -1.3593977290988317, 0.9051741702362516, -0.1889819186953793, -3.677980426594052], [-1.2024725099087128, -1.5600670350570283, 1.2972877034549206, 0.05106404509710277, -3.948644523037817], [-0.8403126996238868, -1.4410179991346146, 1.0174336631211418, -0.4902686084370669, -3.621040864157759], [-1.3203684270029545, -1.5275047073068302, 1.4815909612957252, -0.1639918703199582, -3.777761670920101], [-1.104449131490648, -1.2907415363960295, 1.3857751282687372, -0.16972582292261484, -3.740498852485541], [-1.0467286914043503, -1.21119034934598, 1.421693613586072, -0.29380570654264726, -3.745236575355949], [-1.013406498721322, -1.3574886576529712, 1.9319141358164253, 0.29408196464011027, -3.3738117659147777], [-0.8319085027805896, -1.3769182393014043, 1.681138309021636, 0.4390047415859169, -3.9551863842221073], [-1.133559605191683, -1.5636930018474071, 1.7325281641807027, -0.18854274720001823, -3.584760523537282], [-0.6201742957637808, -1.7026256397479758, 1.3468466443756522, 0.20505376571654155, -3.4316654771546755], [-1.2124683470139144, -1.5291557578067954, 1.2058677836600649, -0.7578403757490888, -3.5804121263872157], [-0.8505311828852239, -1.8540642766712505, 1.896014855319288, -0.4899767336927605, -3.3547018397657045], [-0.8438300803561337, -1.4853696789555788, 1.6316534854930247, -0.15262961182264684, -3.8164453512325465], [-1.0675714493380553, -1.7029053156757747, 1.7572572826965287, 0.2703316506220993, -3.850784741514124], [-0.7244094271595461, -1.04216642177842, 1.2592061499998202, -0.18280378325495308, -3.5457514023347407], [-0.61791159047133, -1.4356936119428063, 1.319813724776124, 0.1454062184345013, -3.6902852974943285], [-0.4496610928182052, -0.7448542566000698, 1.7217433471162944, 0.45678528230030463, -3.8031951913944075], [-0.7197022170723131, -0.7145101487069299, 1.835739562415113, 0.4925573081945529, -4.029243203552471], [-1.062418830863687, -0.9487400650100106, 1.7653548931915783, 0.7572751419050764, -3.4930745071735596], [-0.6131193077663982, -1.716170929026812, 1.8147152463718688, 0.5295290312139442, -3.6702542989643794], [-0.7219816567112202, -1.315611226956567, 1.6690872467915139, 0.6936059713801461, -3.6511560828971468], [-1.1692247243698, -1.4865899796027262, 2.2219646624227605, 0.68617155796317, -3.7393946526839112], [-0.9945420779522858, -1.6172152659752428, 1.0766385802621998, -0.17674648399113613, -3.753243178903107], [-1.1589527553723387, -1.3869901055874998, 0.5665434660503068, -0.1354392619107679, -3.8111136927741165], [-1.0353690957947226, -1.7904276638139507, 0.3561818561726657, -0.04398436549125638, -3.75213229147084], [-1.0462048297556075, -1.5992020952010073, 0.048864797753585265, -0.6105497311864038, -3.9420062824004023], [-0.9535151589539462, -1.452603157188626, 2.1900160650448806, 0.9250359832169955, -3.8306047083598074], [-0.7941011276223597, -1.3155518904376526, 1.5273761386355402, -0.17312190212663742, -3.903235062313409], [-0.8860987070734755, -1.330661685864748, 1.6188496161526287, -0.05427276966643972, -3.8806022630178787], [-0.8854955939585984, -1.3780644784443807, 1.7394848025736664, -0.03556870111176028, -3.433151867501863], [-0.8416202727928012, -1.2380370713537785, 1.5864717307017995, 0.11216268614787853, -3.6596990911484846], [-0.6998039976978329, -1.1930270613254705, 1.296168644570976, 0.17490036970629527, -3.649697990110405], [-0.6168459510381978, -1.269083121442048, 1.6472526177283093, 0.5577881397957171, -3.9175156949499974], [-0.7936838435331035, -0.8535288538730215, 1.7154639655241843, 0.15369681986384406, -3.268880310898492], [-0.8083530592490287, -1.2427136100384453, 1.4105542155773647, -0.42403829037150054, -3.743345313154558], [-1.35260854334896, -2.1569178906839146, 1.2868977745765529, -0.2513084782205688, -3.520382500558271], [-1.2271370636131236, -1.9551596741834538, 1.1565394874111885, -0.27449287140619755, -3.7548981048074914], [-1.171916668932544, -1.2973861781793417, 1.4950112889931995, 0.22053809543449024, -3.8058886837651102], [-1.1537861968608125, -1.7861261908009665, 1.911478166202578, -0.037288775225849335, -3.8290655759515406], [-1.1163793486376055, -1.695459787460155, 2.0198264722540578, 0.24842916951392727, -3.9218837123806125], [-0.5293987446015074, -1.332066395209402, 1.410259537602058, -0.03658611429661413, -3.431699672582631], [-0.3891140419707814, -1.237721231246035, 1.6502347113181712, -0.2198947318338418, -3.6378131892539227], [-0.6450179450105149, -1.2104536519053433, 1.5674438738719698, -0.3407696635722739, -3.535922592063511], [-0.8027274170874821, -1.1903375847427586, 1.5116892834686675, -0.3825906240944692, -3.370932052859944], [-0.6716625095734648, -1.3680359334926038, 1.3576034355494548, -0.45776336773862897, -3.527333689331118], [-0.7478091818824191, -1.2583849374342706, 1.6843105156679872, 0.9003162529040304, -3.647375342967272], [-0.8247976703405214, -1.2020358894736114, 2.4252476703272077, 0.9943638096413869, -3.718245607521515], [-0.9447206386448442, -1.1375191473955213, 2.378299823408867, 0.9823825520782216, -3.7165461371353357], [-0.8443988676505452, -1.5372768242653418, 1.7111614077095605, 0.02447562296562983, -3.741900929261789], [-1.117887113931299, -1.5342003683452763, 1.272155060120788, -0.42682638836263465, -3.8079343946894113], [-0.9328076466507637, -1.215928477468545, 2.0341966834514804, 0.6786258249183187, -3.922830420172815], [-1.2355366113103352, -1.5448198989202422, 1.7671014415656499, 0.4725954757408888, -3.880173850556598], [-0.9321813694889904, -1.240107672298284, 1.5838582266204169, -0.05520516229567834, -3.773106445429849], [-1.0790831987564415, -1.5575781060062286, 1.256753968901594, -0.25435399246522233, -3.772507639554362], [-0.7088611986798226, -0.936571531965686, 1.5555193905643272, -0.3722216093051358, -3.756132620381385], [-1.340785277900259, -1.6855114225330199, 1.7329001217057152, 0.4590838621817117, -3.855380344819332], [-1.194228425136044, -1.6522140045583156, 1.523568277649026, 0.4169062999123796, -3.886335298494615], [-0.7659507972901435, -1.3024874888044224, 1.506155659891212, -0.49996129247070714, -3.6268454471433116], [-0.6469104720745061, -0.9351304732092229, 0.9196471609354734, 0.339706106800844, -3.679011908756965], [-0.519208959981877, -1.2828842020317082, 2.1872909296697642, 0.5287321447295015, -3.4283330240906382], [-0.5383598981520346, -1.1911777761686424, 0.9997788463601026, -0.1664142417290594, -3.5655345274278494], [-0.6692896479827287, -0.9312901074173007, 1.3206743465950506, 0.19254957747635074, -3.725914732989182], [-0.49644949590277226, -0.5714971070161127, 1.1142574941425492, 0.7167875662268735, -3.673112025892547], [-0.7376321380057491, -1.387376591369111, 1.641293203931884, -0.41589443753522526, -3.5508071051432273], [-0.8039741191127695, -0.959858608090753, 2.060609773815248, 0.30038178255358683, -3.571724833867673], [-0.6422762641504323, -1.2021232137839095, 2.1558796957171915, 0.4294391904516194, -3.935303098701098], [-1.048433117042811, -1.4962495798034932, 1.9340375767076103, 0.1130646816860971, -3.45043298049485], [-1.1383409606650678, -1.3749690725867956, 1.6074019285418841, 0.4226686571303183, -3.7172679182706587], [-0.5078404552414226, -1.21611168339989, 1.4603577093628446, 0.5839286465565773, -3.587073479680069], [-0.9897871031768481, -1.372232129265734, 1.1377360696260617, -0.1453742993590162, -3.676657721907252], [-1.231987538570614, -1.4866996497364318, 1.8391779226556166, -0.24721045077339476, -3.761684283558329], [-0.9274471902731265, -1.7635628352119936, 0.8367439704047768, -0.319252357338662, -3.70964368547529], [-1.0643452764776613, -1.818283177922287, 0.8184194467625178, -0.3444351094837408, -3.5806902815805346], [-0.8802279971668567, -1.1433562347300392, 1.5128418704253148, 0.5847524395576216, -3.959604190500995], [-0.8952722286711537, -1.1601802607571516, 1.337585100150818, 0.37316828875256547, -3.6930264206583514], [-1.1402028250866278, -1.607807868940412, 1.3548421850882368, 0.5693520200939143, -3.9311931165772207], [-1.0453844623538597, -1.4286708417561618, 1.6843168525819092, 0.432756178720779, -3.75057051330403], [-0.5629391251927469, -1.1502832919693442, 1.3806802222847097, -0.34497412822484597, -3.7650339617830015], [-1.2822671700395096, -1.5573825328627935, 1.79999909830869, 0.1503804344468147, -3.7127283010179832], [-1.2707566145874267, -1.6883534265632942, 2.1800646564356345, 0.310601707281883, -4.059380229053513], [-1.125191893996724, -1.6749844106088783, 2.0330209554871255, 0.267632037915908, -4.001476011393686], [-0.6613654310214817, -0.9778446496537379, 1.8181395956328616, 0.4933851604669844, -3.502208318840613], [-0.8469416320945449, -1.1427332988375825, 0.999239254493033, 0.1176929791348798, -3.9386373359111473], [-0.7672525479999935, -1.604259569587884, 1.583711138446507, 0.2444558297669367, -3.3186476219413543], [-0.5844675564946498, -1.2311478321774307, 1.6417275263955495, -0.05617929244413114, -3.3391316388033747], [-1.1437339357993264, -1.4417229342349356, 1.869730147879778, -0.26124753660237643, -4.1635472221787335], [-0.7976108636190432, -1.2941740468757588, 1.4519552857589724, 0.09297817718736057, -3.73598998887112], [-1.042840602466993, -1.5526700032899448, 1.5305375209646743, 0.24195458582554596, -3.6830921359753748], [-1.0193744766686006, -1.5009193071432398, 1.9469672500126889, 0.2857686504285149, -3.686269258340176], [-0.9556767901835297, -1.5991761982246435, 1.1485880858426847, 0.6797191087917791, -3.5420617772198955], [-1.097121987742628, -1.4413500981483327, 2.6363050517142343, 1.196745864702136, -3.672666721652451], [-0.6121968992920377, -1.224889675723485, 1.5982441643204177, 0.5395405168881182, -3.7331149689106025], [-0.5829709080618782, -1.2908260268028453, 1.4657925484133516, 0.4482798443968949, -3.4816712533965424], [-1.3970632533030591, -1.4787742815369864, 1.7917021604166212, 0.1986774654865397, -4.143072301936692], [-0.4806316277657729, -1.0757262459976664, 1.21548862329714, -0.31614165883549333, -3.52156864401783], [-0.927007370095061, -1.2317204208887695, 1.3349462816604531, -0.22705465628958638, -3.829763334567543], [-0.9571077888642291, -1.595365506896826, 1.253887208535009, 0.03127871126191939, -3.5758882639439613], [-0.8969892574841296, -1.3577220023746372, 1.7027841968504902, -0.3884817175805036, -3.6693158410164672], [-0.8958415301406771, -1.3026211278466102, 1.8680029451064117, -0.412566970882049, -3.738464632381616], [-1.2826153185119162, -1.6071707045571342, 1.1103400515892157, 0.1278138250521034, -3.717922902061374], [-0.7868271235161, -1.280732756277638, 2.279212514123656, 0.28463213658685227, -3.8726402278993093], [-1.4845951240996484, -1.6472034272570455, 0.6332143715610793, -0.1381692216018403, -3.759233872150232], [-0.7271597990359495, -1.9780765160301041, 1.0955418563629582, -0.054638251665850845, -3.3410983045983396], [-0.8819145315787551, -1.901900480050326, 1.4460041811061917, 0.3624396933470644, -3.3832363242833168], [-1.034443544000346, -1.4413697210923948, 1.3750965115379898, 0.14548816646867482, -3.4770903977328644], [-1.2588891127626178, -1.441301131886433, 1.9716397774255625, 0.09046803701271945, -3.766090300579639], [-1.0848998052422056, -1.5547408591355316, 1.7244353356387156, 0.17751229041000394, -3.87763910925332], [-1.0848998052422056, -1.5547408591355316, 1.7244353356387156, 0.17751229041000394, -3.87763910925332], [-1.1466275045431558, -1.4394709039785387, 1.7983699789530714, 0.5168500155790714, -3.7945388687964923], [-1.1861895563170037, -1.4467749288137313, 1.9717724680160824, 0.459760266165637, -4.146279339657804], [-0.7748569490564363, -1.5490819844973325, 1.2317434200111914, -0.2835389689226706, -3.6025416435808513], [-0.7188384818561724, -1.3453968775697358, 1.4100549966325808, -0.39810015864571446, -3.589724587525748], [-0.9988475709925734, -1.2921645375466253, 1.1819026610489378, 0.08106673456323363, -3.6409275220047963], [-1.3046939874432768, -1.52570327858793, 1.3459328884242887, -0.5987282456318921, -3.6763944679571647], [-1.4787663461173348, -1.7612071634449258, 1.3520126049486718, -0.4268162986907378, -3.5843386729000017], [-0.9076268525035187, -0.7646831088195838, 1.6705691812141172, 0.38530501652170124, -3.512961281464328], [-1.598882806973555, -1.6310546378627235, 1.8551105243980925, 0.5696793852139674, -3.5998515517128964], [-0.8018930324360934, -1.3276139472389148, 1.7999178487152463, 0.5003967061902316, -3.7443213546242835], [-1.032675779537138, -1.5058791195911412, 1.3529486233533046, 0.08390214030102106, -3.7518604653752394], [-1.1724830793917294, -1.3162451077433208, 1.5329914207947688, 0.12500893915173641, -3.801674161859196], [-1.1252088936566964, -1.642622881971825, 1.7306949683373227, -0.12696328584481398, -3.7579603529886834], [-1.2944386959344434, -1.5761756513008036, 1.7522292768811774, -0.2403984899118562, -3.796430722766354], [-0.7150314312233575, -1.0765744990013961, 1.581971888888644, -0.2967501531944873, -3.561260603022911], [-0.33900770811497105, -1.0082907443773996, 0.937326458710362, -0.2991572251900836, -3.462845175784907], [-0.661803608570205, -0.9194448367220175, 1.225356649322338, 0.006590193955259949, -3.6685400931656518], [-0.904465225508469, -1.1459192841802153, 1.09406430655174, 0.12017487205366983, -4.0490380128723125], [-1.0158203027094457, -1.8208532109573905, 1.6621373298978759, -0.1438636140268178, -3.575839221080931], [-1.020869193263305, -1.2135702291852097, 1.7966808095154811, 0.9178327887787825, -3.9330747673940865], [-1.2277311273791547, -1.88361127800694, 1.741242332165902, 0.41068093402827655, -3.542539187975636], [-0.9465273753648396, -1.4742199274039143, 1.4544816162137033, 0.0066345042983093905, -3.6835427822707922], [-1.2441077512321665, -1.4001856146649883, 1.5900379972107617, -0.02562678356007924, -3.940998095143635], [-0.8262374728342351, -1.378766155857363, 1.7681473192538872, -0.19750195853056504, -3.6714856694232996], [-1.0297709146352427, -1.2568383217047425, 0.6086192947090474, -0.1511742161391067, -3.7469424422583404], [-0.9030513785865172, -1.4806253225259596, 0.8698960424210787, 0.04745720627212448, -3.790104779845207], [-1.0104819853228495, -1.42684988243628, 1.517181751759866, 0.045127603741226555, -3.6086161826177343], [-1.1424975576088279, -1.4095941727114965, 2.0433829080083967, -0.34675621342144314, -4.0214805661997755], [-1.1841846397612708, -1.7707889562339187, 0.9398616784650898, -0.07000912676721344, -3.5744224579695922], [-1.1767648576268572, -1.2816046584927387, 1.0130888211678202, 0.3151570641934586, -3.8285334420561243], [-0.6990297972778783, -1.635393802793815, 0.9628307892908645, -0.6178123524734698, -3.6032371241789405], [-1.0300567737903998, -1.73225643156334, 1.1367906176566094, -0.6550080072684842, -3.5347196225219633], [-1.3082529583545597, -1.6849415102252454, 1.1061248669934107, -0.6395591972744847, -3.842243464105551], [-0.7848038512109685, -1.3796816055436967, 1.694906191820476, 0.17250744613462027, -3.693416476611306], [-0.6521730271219185, -1.4024850373103859, 1.7083725992243997, 0.2092827447979677, -3.4386095507675125], [-1.1786159345578242, -1.2618694418033727, 1.733987973732968, 0.1222733719797493, -3.9021931603733333], [-0.8996647178476953, -1.3107919682867668, 1.5692014089910775, 0.279834960795902, -3.7386305941161178], [-1.0629726401312194, -1.7076410403632099, 1.1759084837029032, -0.0025488078758093557, -3.7722677199621746], [-0.4931932159570189, -1.1918988401126969, 1.3303819119834626, 0.1524431223764981, -3.5617477005269977], [-0.22545657022801097, -0.9382002311659436, 1.2035236901197421, 0.30827755146832536, -3.637722085147423], [-0.7301742750225987, -1.1332374162946013, 1.6383980624350083, 0.3323778719041833, -3.7674320641570915], [-0.6848702527298232, -1.1459428003819063, 1.9822567552698904, 0.5131378830109605, -3.7659164628407926], [-0.6661638643667442, -1.3078909758583461, 1.1949865250078322, -0.13295489346818823, -3.579470406919705], [-1.3958009373064968, -1.8102786071844152, 1.8688513835277796, -0.26920721487337534, -3.817314833633304], [-1.2732996498578844, -1.5632550037725739, 1.9672014389338075, -0.36164182650943566, -3.7719931507696787], [-1.1206876232304275, -1.6569222322606685, 1.802046948139388, -0.01831941516691571, -3.975441686871141], [-1.014730879710408, -1.4765422835435091, 1.4500992565154167, -0.32091874314743773, -3.6055774815018036], [-0.8229222189792166, -1.322618042960376, 1.8070363655228723, -0.17573941965270998, -3.770416847387747], [-0.5948019190610996, -0.9458717518017857, 1.635919243679668, -0.32873086051309275, -3.4621903768993287], [-0.5597058270892463, -0.900497915831739, 1.7807852482281108, -0.41537353435962987, -3.382814362096536], [-0.5898427478755687, -0.6496135796149831, 2.0437198583522846, -0.30116125951512845, -3.5500828294768736], [-1.1169421563447266, -1.7170013716116894, 0.6949155058423151, 0.2799111166065006, -4.041304213780424], [-1.2406729235175795, -1.4301761467854937, 1.4177299775124874, -0.2156003506455294, -3.585791578289602], [-0.9783251643659026, -0.8915437358644414, 1.5779963743926202, 0.1126915395988467, -3.705536954977907], [-0.9701111214398864, -1.2932491145925409, 1.9389495783851713, 0.22633741153594134, -3.659048232512852], [-0.9027057017884476, -1.360741110972016, 1.6513073103361589, -0.2223173144777047, -3.8505140006399965], [-0.8048097651826498, -1.2413389237605725, 1.4484828950915933, 0.38453238865378964, -3.8768296563667546], [-1.0516564689865355, -1.8206750239192973, 1.705515438768585, -0.09270546295692225, -3.7533615485922844], [-0.4909523133443315, -0.6040004974750945, 1.610775337454666, 0.11253652477022463, -3.6055935901319094], [-0.9944878586039574, -1.6933233274834303, 1.5946243368388988, 0.1211886326823764, -3.702374388022367], [-0.9366852789667267, -1.2504877045946037, 1.6677986073139772, -0.17174755064696992, -4.009308165345139], [-0.4922944832731858, -1.3482458617313522, 1.787725352106349, -0.3549133989993952, -3.3783995845464334], [-0.7658659237824009, -1.0669937030214733, 1.9427397793154637, -0.193969092980392, -3.7269572907241417], [-1.5707243225917153, -2.0764036663187158, 1.8422345520093293, 0.09830653227314343, -3.782330712801098], [-1.0657463537828942, -1.2879603862876938, 2.033527242689576, 0.3099549628400633, -3.945798001598152], [-1.1006378681088558, -1.24803103289172, 1.140670069011892, 0.20647743359146825, -3.54362627864896], [-0.8569599036742599, -1.7280943302463805, 1.8688967285403022, 0.25356701777457324, -3.8559871867464386], [-1.3413595998148495, -1.522343896396795, 1.7670287991718039, 0.24068794719197376, -3.4747958990942647], [-0.8447519235443306, -1.5220399668460418, 1.2539708290649463, -0.1880857793560279, -3.806817871509091], [-1.2176588912361606, -1.5283898170696109, 1.6919055651684534, -0.043517032142736264, -3.7035327423944233], [-0.5775328561798434, -1.0419245890322135, 1.8217169291252469, 0.019923916301628073, -3.754479656440484], [-0.6191466839554827, -1.1634494905260377, 1.761711307088432, 0.1418405722636076, -3.852099410116402], [-1.500947926234613, -1.7167417757095134, 2.146900447718481, 0.7037600597061915, -3.52075170433037], [-1.0459764004796464, -1.712734670557721, 1.7835783572625918, 0.2808022465418649, -3.9881256718844598], [-1.3176266405655477, -1.4636767869175116, 1.7366088148927359, -0.300680589031359, -3.676275581708757], [-0.6760880052899069, -1.2875967704776472, 1.6549826858173873, 0.5196201833869925, -3.6839950499303984], [-0.754422835849311, -1.2372148987653862, 1.6004084816660498, 0.5101580668678422, -3.529296553345023], [-1.30619861667459, -1.7585841235138717, 1.8987122335284985, 0.21196781143634305, -3.691021473824578], [-1.5234665801336549, -1.6995187166527652, 1.8794155528304792, 0.26641148927246994, -3.8536042493218043], [-0.6915751010795823, -1.2802802168661316, 1.905505887915401, 0.4258084429432184, -3.6170556861785705], [-0.8058275010620765, -1.2975445342461756, 2.3217924234759706, 0.36432507698786676, -3.503514594647903], [-0.8370788628372936, -1.1891809554187274, 0.8603487351676901, 0.16023938216813738, -3.8978546043755373], [-1.0947696662634052, -1.657205482474793, 1.7680382131109336, -0.16705898162527594, -3.570837692703002]], NamedTuple[(n_steps = 1, is_accept = true, acceptance_rate = 2.352834922416668e-109, log_density = -15.388797067257359, hamiltonian_energy = 16.479424919585302, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 250.12615418528583, tree_depth = 1, numerical_error = false, step_size = 0.4, nom_step_size = 0.4, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = -15.388797067257359, hamiltonian_energy = 16.520579771906807, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 3.1764283439098145e10, tree_depth = 0, numerical_error = true, step_size = 0.9340259163636535, nom_step_size = 0.9340259163636535, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -1.3510151336203187, hamiltonian_energy = 16.639323687486957, hamiltonian_energy_error = -1.0491105218028736, max_hamiltonian_energy_error = -1.3165910058106327, tree_depth = 3, numerical_error = false, step_size = 0.09209433883419865, nom_step_size = 0.09209433883419865, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 6.482944346564409, hamiltonian_energy = 2.78400951669056, hamiltonian_energy_error = -0.9918132975636267, max_hamiltonian_energy_error = -1.0373657797589848, tree_depth = 2, numerical_error = false, step_size = 0.09591656221537206, nom_step_size = 0.09591656221537206, is_adapt = true), (n_steps = 11, is_accept = true, acceptance_rate = 0.8416031222582432, log_density = 5.532302112063487, hamiltonian_energy = -4.160272359108228, hamiltonian_energy_error = 0.25507786402448307, max_hamiltonian_energy_error = 0.5382860664813447, tree_depth = 3, numerical_error = false, step_size = 0.12973296357918182, nom_step_size = 0.12973296357918182, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.999217302972085, log_density = 8.248315077522403, hamiltonian_energy = -4.520021168592505, hamiltonian_energy_error = -0.3393086231400959, max_hamiltonian_energy_error = -0.3490745599857261, tree_depth = 3, numerical_error = false, step_size = 0.12651709305831485, nom_step_size = 0.12651709305831485, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9309010417412483, log_density = 7.876480306054987, hamiltonian_energy = -6.7946021808903385, hamiltonian_energy_error = -0.20149669816654203, max_hamiltonian_energy_error = 0.2804552200696193, tree_depth = 2, numerical_error = false, step_size = 0.21212462967055382, nom_step_size = 0.21212462967055382, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.1380165382435812, log_density = 7.876480306054987, hamiltonian_energy = -3.963083044365227, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 704.819916112801, tree_depth = 3, numerical_error = false, step_size = 0.3036602940552618, nom_step_size = 0.3036602940552618, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9905120473904252, log_density = 7.2153814466763855, hamiltonian_energy = -5.023958471457432, hamiltonian_energy_error = 0.010169251336407115, max_hamiltonian_energy_error = 0.015272830282185623, tree_depth = 4, numerical_error = false, step_size = 0.03698853612111505, nom_step_size = 0.03698853612111505, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9283903043635326, log_density = 7.2365882566038255, hamiltonian_energy = -3.256954294517567, hamiltonian_energy_error = 0.049961961845534475, max_hamiltonian_energy_error = 0.16813967809850494, tree_depth = 4, numerical_error = false, step_size = 0.06599481128317691, nom_step_size = 0.06599481128317691, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9866937682889702, log_density = 5.530916084671087, hamiltonian_energy = -3.701909351132432, hamiltonian_energy_error = -0.0372032359899892, max_hamiltonian_energy_error = -0.08515432812864088, tree_depth = 3, numerical_error = false, step_size = 0.09848312452910052, nom_step_size = 0.09848312452910052, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.8268980471158827, log_density = 6.8441236065739, hamiltonian_energy = -1.9030185714234067, hamiltonian_energy_error = 0.0028483620594381698, max_hamiltonian_energy_error = 0.39301668400720136, tree_depth = 2, numerical_error = false, step_size = 0.17835841905350122, nom_step_size = 0.17835841905350122, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.8391582182920758, log_density = 5.32271825444734, hamiltonian_energy = -3.6140767563327634, hamiltonian_energy_error = 0.08436328726224174, max_hamiltonian_energy_error = 0.2389595838927927, tree_depth = 2, numerical_error = false, step_size = 0.1959507211678172, nom_step_size = 0.1959507211678172, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9777945145568478, log_density = 7.062670196134199, hamiltonian_energy = -4.6438747644440195, hamiltonian_energy_error = -0.24643366179903659, max_hamiltonian_energy_error = -0.6092136460067117, tree_depth = 3, numerical_error = false, step_size = 0.2245206889738103, nom_step_size = 0.2245206889738103, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 0.0004928683938161244, log_density = 7.062670196134199, hamiltonian_energy = -4.224913370004438, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 7.615268369222021, tree_depth = 1, numerical_error = false, step_size = 0.3970859464664964, nom_step_size = 0.3970859464664964, is_adapt = true), (n_steps = 63, is_accept = true, acceptance_rate = 0.9995054296470106, log_density = 7.175440093346051, hamiltonian_energy = -5.97626852460322, hamiltonian_energy_error = 0.001016958766530962, max_hamiltonian_energy_error = -0.013327895418597357, tree_depth = 5, numerical_error = false, step_size = 0.03383635362864303, nom_step_size = 0.03383635362864303, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9954814686045625, log_density = 6.30315071074836, hamiltonian_energy = -4.123408041111108, hamiltonian_energy_error = -0.03329814155873656, max_hamiltonian_energy_error = -0.07498955797700813, tree_depth = 4, numerical_error = false, step_size = 0.064615834464235, nom_step_size = 0.064615834464235, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.8854342416069113, log_density = 4.574832756364092, hamiltonian_energy = -3.0267410407936604, hamiltonian_energy_error = 0.1811852170626156, max_hamiltonian_energy_error = 0.2862117677849798, tree_depth = 3, numerical_error = false, step_size = 0.12102789980579035, nom_step_size = 0.12102789980579035, is_adapt = true), (n_steps = 11, is_accept = true, acceptance_rate = 0.8636185732133143, log_density = 7.251699910992393, hamiltonian_energy = -2.49140180398099, hamiltonian_energy_error = -0.6517347708133574, max_hamiltonian_energy_error = 0.7325540689949994, tree_depth = 3, numerical_error = false, step_size = 0.16110628484930786, nom_step_size = 0.16110628484930786, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.8461868363081415, log_density = 6.176751177736662, hamiltonian_energy = -5.737552091098873, hamiltonian_energy_error = 0.4677098284256225, max_hamiltonian_energy_error = 0.4677098284256225, tree_depth = 3, numerical_error = false, step_size = 0.20015412858776888, nom_step_size = 0.20015412858776888, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.8744759830382366, log_density = 7.2430823052467375, hamiltonian_energy = -3.6368490512661626, hamiltonian_energy_error = -0.218698438830212, max_hamiltonian_energy_error = 0.38605200272122264, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8373006879888145, log_density = 7.544062852391157, hamiltonian_energy = -4.716791420059922, hamiltonian_energy_error = 0.10109075662213574, max_hamiltonian_energy_error = 0.3404192496254064, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9852410841640141, log_density = 8.783418964670688, hamiltonian_energy = -7.377794406171015, hamiltonian_energy_error = -0.145672529291188, max_hamiltonian_energy_error = -0.145672529291188, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9660651950317781, log_density = 6.276584913048552, hamiltonian_energy = -6.08342756479984, hamiltonian_energy_error = 0.10539892604988221, max_hamiltonian_energy_error = 0.10539892604988221, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8654510537341794, log_density = 4.972178874201583, hamiltonian_energy = -2.5710700748449087, hamiltonian_energy_error = 0.04193648584750598, max_hamiltonian_energy_error = 0.3144939334161778, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7632770068780087, log_density = 1.8223281955639639, hamiltonian_energy = 0.9879468922179053, hamiltonian_energy_error = 0.20373465657529488, max_hamiltonian_energy_error = 0.48667945311184146, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9196782033791041, log_density = 3.1932143066120755, hamiltonian_energy = 0.8520514569882991, hamiltonian_energy_error = 0.014040783112943878, max_hamiltonian_energy_error = 0.2963931258752246, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 5.696167674555388, hamiltonian_energy = -2.1586344762758407, hamiltonian_energy_error = -0.1067212931683863, max_hamiltonian_energy_error = -0.28072427630270136, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9943646095969613, log_density = 7.595772126275843, hamiltonian_energy = -4.743659688496534, hamiltonian_energy_error = -0.2702096686271567, max_hamiltonian_energy_error = -0.2702096686271567, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8932811571646783, log_density = 7.214955562713524, hamiltonian_energy = -6.164923370117176, hamiltonian_energy_error = 0.15607167407453026, max_hamiltonian_energy_error = 0.1574490829411559, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8962756340263621, log_density = 7.157229470046492, hamiltonian_energy = -5.538502945106782, hamiltonian_energy_error = 0.03405445083563752, max_hamiltonian_energy_error = 0.19239639111036233, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9420344473326192, log_density = 6.527598105167259, hamiltonian_energy = -5.671235050200605, hamiltonian_energy_error = 0.14476171738472754, max_hamiltonian_energy_error = 0.1614080507018798, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7608909647903005, log_density = 4.928211017248035, hamiltonian_energy = -3.166721670980232, hamiltonian_energy_error = 0.45616886176789917, max_hamiltonian_energy_error = 0.8493427149787798, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9669731659592133, log_density = 4.1569127288845475, hamiltonian_energy = -2.5791276344065137, hamiltonian_energy_error = 0.012910675397046933, max_hamiltonian_energy_error = -0.5564855674267055, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9713129059247559, log_density = 1.9479399308994516, hamiltonian_energy = -0.9375172450415463, hamiltonian_energy_error = 0.21753591039119824, max_hamiltonian_energy_error = -0.7297586897148456, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 3.597241263518315, hamiltonian_energy = -0.5543852919361787, hamiltonian_energy_error = -0.5312446054513433, max_hamiltonian_energy_error = -0.8806931677185728, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9818896369841161, log_density = 6.92732422571596, hamiltonian_energy = -1.6349229999016979, hamiltonian_energy_error = -0.32289576747757787, max_hamiltonian_energy_error = -0.5362496443273073, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9761343228836795, log_density = 7.45358590434811, hamiltonian_energy = -5.005169616924977, hamiltonian_energy_error = -0.19172300932969755, max_hamiltonian_energy_error = -0.19172300932969755, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.794307876306507, log_density = 5.87969812880047, hamiltonian_energy = -4.361374502093869, hamiltonian_energy_error = 0.5283396690385773, max_hamiltonian_energy_error = 0.566828285026455, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9871632131231565, log_density = 8.648235655469, hamiltonian_energy = -4.71510764640378, hamiltonian_energy_error = -0.6481832268158589, max_hamiltonian_energy_error = -0.6481832268158589, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8313581349205926, log_density = 6.212456220919526, hamiltonian_energy = -5.5402746393431235, hamiltonian_energy_error = 0.25839130298944113, max_hamiltonian_energy_error = 0.4298728265360756, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.887598720930482, log_density = 5.787910037737003, hamiltonian_energy = -3.3827744886173363, hamiltonian_energy_error = 0.08617525732830167, max_hamiltonian_energy_error = 0.5021758878839551, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.988298004818672, log_density = 7.433180210133491, hamiltonian_energy = -3.2090708832591215, hamiltonian_energy_error = -0.45413314911815306, max_hamiltonian_energy_error = -0.45413314911815306, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.4044423194063454, log_density = 4.1758695821351814, hamiltonian_energy = -1.3287302990987016, hamiltonian_energy_error = 1.088844397055996, max_hamiltonian_energy_error = 1.2824858657239655, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.823403127325253, log_density = 1.744638094142843, hamiltonian_energy = 4.726001062653973, hamiltonian_energy_error = -0.6860778214148429, max_hamiltonian_energy_error = 1.3626275524551783, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8799085274213426, log_density = 1.1386928954408226, hamiltonian_energy = 1.3253064378071011, hamiltonian_energy_error = -0.027964665985938275, max_hamiltonian_energy_error = 0.4467159722923244, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9297019306479781, log_density = 3.4051677787182886, hamiltonian_energy = 0.312935774156307, hamiltonian_energy_error = -0.010771506889618143, max_hamiltonian_energy_error = 0.2702702527566052, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9645037830734854, log_density = 4.60459012539541, hamiltonian_energy = -2.46580726208364, hamiltonian_energy_error = 0.02988763323563237, max_hamiltonian_energy_error = 0.0801728887827946, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9945409053685242, log_density = 7.70948008395143, hamiltonian_energy = -2.1152774443233744, hamiltonian_energy_error = -0.2191957070195505, max_hamiltonian_energy_error = -0.328836994458217, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9609004101085789, log_density = 7.2649102755577335, hamiltonian_energy = -4.775968910301799, hamiltonian_energy_error = 0.04102974911385715, max_hamiltonian_energy_error = 0.11171493896054852, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7607871789970427, log_density = 7.495937379255446, hamiltonian_energy = -4.240403340106587, hamiltonian_energy_error = 0.21170286408458772, max_hamiltonian_energy_error = 0.48208821792459133, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9891941641035168, log_density = 7.087506102781539, hamiltonian_energy = -4.919170761292195, hamiltonian_energy_error = -0.2005247868650617, max_hamiltonian_energy_error = -0.2005247868650617, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9062893786266384, log_density = 7.9615161489590385, hamiltonian_energy = -4.694460366674461, hamiltonian_energy_error = 0.04873740035721141, max_hamiltonian_energy_error = 0.258178278004614, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9585672084204078, log_density = 7.046328891037366, hamiltonian_energy = -4.400965429795079, hamiltonian_energy_error = -0.010847544560004252, max_hamiltonian_energy_error = 0.1399885332549422, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7299987755293572, log_density = 6.321015750989982, hamiltonian_energy = 2.6136624023680763, hamiltonian_energy_error = -0.1219245499152013, max_hamiltonian_energy_error = 1.5700125960779818, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 7.480436599261461, hamiltonian_energy = -5.386031347482305, hamiltonian_energy_error = -0.15531374443880797, max_hamiltonian_energy_error = -0.20612067590598304, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9940677702837336, log_density = 7.549377195936339, hamiltonian_energy = -6.748235849476935, hamiltonian_energy_error = 0.007387557542958945, max_hamiltonian_energy_error = -0.13449204961279726, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9717268976578813, log_density = 7.891431751917494, hamiltonian_energy = -6.284901368418972, hamiltonian_energy_error = -0.06265620332207522, max_hamiltonian_energy_error = -0.14087894701328896, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9848377264356982, log_density = 7.50657401609333, hamiltonian_energy = -6.7508580389462605, hamiltonian_energy_error = 0.016971560037243982, max_hamiltonian_energy_error = -0.12260246955455223, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8714466826515228, log_density = 8.042593749395376, hamiltonian_energy = -5.752587694320195, hamiltonian_energy_error = -0.09174771991872976, max_hamiltonian_energy_error = 0.37082374451931344, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9377602418691222, log_density = 6.636449277901727, hamiltonian_energy = -5.387943410313685, hamiltonian_energy_error = 0.14470010564195768, max_hamiltonian_energy_error = 0.17967484631266384, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9939213088628984, log_density = 8.545589528206406, hamiltonian_energy = -5.777784906238233, hamiltonian_energy_error = -0.26630637852299177, max_hamiltonian_energy_error = -0.26630637852299177, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8119384604362145, log_density = 6.290939120265575, hamiltonian_energy = -3.8833691801684487, hamiltonian_energy_error = 0.2493850434784215, max_hamiltonian_energy_error = 0.38808198447672426, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9055322659051226, log_density = 6.268343377674306, hamiltonian_energy = -4.7104783653388065, hamiltonian_energy_error = 0.12588888670246412, max_hamiltonian_energy_error = 0.22112461573445596, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8711441733204222, log_density = 4.502197282625616, hamiltonian_energy = -2.0545161126926104, hamiltonian_energy_error = 0.2351623715500537, max_hamiltonian_energy_error = 0.3842342039475768, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 7.907977459027235, hamiltonian_energy = -3.9247860396331866, hamiltonian_energy_error = -0.34180372325541253, max_hamiltonian_energy_error = -0.34180372325541253, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9130448012015004, log_density = 5.668146033568194, hamiltonian_energy = -5.141587265862717, hamiltonian_energy_error = 0.11902508841425252, max_hamiltonian_energy_error = 0.23388953822610148, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9949720125453932, log_density = 7.389832737383021, hamiltonian_energy = -5.303956042438979, hamiltonian_energy_error = -0.20824247022990772, max_hamiltonian_energy_error = -0.24303994908116522, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9097031631793886, log_density = 8.104490520469007, hamiltonian_energy = -5.268035615745784, hamiltonian_energy_error = 0.021520334277757236, max_hamiltonian_energy_error = 0.22474517400396454, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 8.026625638801477, hamiltonian_energy = -7.406904864232829, hamiltonian_energy_error = -0.011413537091283565, max_hamiltonian_energy_error = -0.11956822623078178, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9991135926225831, log_density = 8.013494693727335, hamiltonian_energy = -6.6229124855152275, hamiltonian_energy_error = -0.06095605834073403, max_hamiltonian_energy_error = -0.09296522486902425, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8506956799522302, log_density = 8.259743402363494, hamiltonian_energy = -6.221603125597866, hamiltonian_energy_error = 0.16471786466664184, max_hamiltonian_energy_error = 0.23072582310191958, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7411931819013097, log_density = 4.4252555244573575, hamiltonian_energy = -3.0568799059392475, hamiltonian_energy_error = 0.5032559798576886, max_hamiltonian_energy_error = 0.5032559798576886, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 7.715043732279485, hamiltonian_energy = -4.389598743456361, hamiltonian_energy_error = -0.5340578363072179, max_hamiltonian_energy_error = -0.5358421890530369, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9055853705443284, log_density = 6.299529769333827, hamiltonian_energy = -2.888056685446287, hamiltonian_energy_error = -0.17127685973932127, max_hamiltonian_energy_error = 0.2492379326630605, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9640928525826978, log_density = 1.7590294380610025, hamiltonian_energy = 0.40478566552756323, hamiltonian_energy_error = -0.008523930854218875, max_hamiltonian_energy_error = -0.2558726229403616, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9516078448755738, log_density = 6.236754640476438, hamiltonian_energy = 0.6226421234650727, hamiltonian_energy_error = -0.07922355127040603, max_hamiltonian_energy_error = -0.31838970481382045, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7396758908933655, log_density = 3.4721478150926153, hamiltonian_energy = -1.0292017225806358, hamiltonian_energy_error = 0.36564261182984126, max_hamiltonian_energy_error = 0.7218081147828048, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8880037974547557, log_density = 1.657474519706959, hamiltonian_energy = 0.8403346538370298, hamiltonian_energy_error = 0.14643412778655707, max_hamiltonian_energy_error = 0.3340152946936086, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7894360651113885, log_density = 4.178593856883857, hamiltonian_energy = 3.325301518987363, hamiltonian_energy_error = -0.41922777739109574, max_hamiltonian_energy_error = 0.9579658330905465, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9864731968661781, log_density = 4.000797743973875, hamiltonian_energy = -1.4294051995776171, hamiltonian_energy_error = -0.08705090277554106, max_hamiltonian_energy_error = -0.45100411636181104, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8397494592378599, log_density = 2.253833963779499, hamiltonian_energy = 2.6219998485423384, hamiltonian_energy_error = 0.26554138894092816, max_hamiltonian_energy_error = 0.9363164604366605, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9913272800966327, log_density = 6.451274893114798, hamiltonian_energy = -1.2987360668019177, hamiltonian_energy_error = -0.4917969714471844, max_hamiltonian_energy_error = -0.6503561591811509, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7231281064804248, log_density = 6.637898838276463, hamiltonian_energy = -0.7802401737156393, hamiltonian_energy_error = -0.20256440492434447, max_hamiltonian_energy_error = 0.814280233468208, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8193060753266417, log_density = 4.949285451033026, hamiltonian_energy = -2.7880717673882365, hamiltonian_energy_error = 0.15770643341635182, max_hamiltonian_energy_error = 0.4070292124899435, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7967143582221298, log_density = 6.8116951125769525, hamiltonian_energy = -1.9869614310328032, hamiltonian_energy_error = 0.17411147713262798, max_hamiltonian_energy_error = 0.6310436008067231, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8592383892716997, log_density = 5.658047296105693, hamiltonian_energy = -3.9336167415924344, hamiltonian_energy_error = -0.06302023824578518, max_hamiltonian_energy_error = 0.40000361922144156, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9299700786280817, log_density = 5.563192995120991, hamiltonian_energy = -3.7807280952000895, hamiltonian_energy_error = 0.06253860092761565, max_hamiltonian_energy_error = 0.287286723993625, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9425945399218598, log_density = 3.6424280855144175, hamiltonian_energy = -2.5514528927297757, hamiltonian_energy_error = 0.18815068617509434, max_hamiltonian_energy_error = -0.4127128997155052, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5148991357238238, log_density = -0.07047481890175078, hamiltonian_energy = 3.0376876768757333, hamiltonian_energy_error = 0.8717056238973644, max_hamiltonian_energy_error = 2.052238022020715, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9730047944937888, log_density = 5.326281072200153, hamiltonian_energy = 2.035337505344767, hamiltonian_energy_error = -0.723177309249714, max_hamiltonian_energy_error = -1.4300069726982056, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9313665538523842, log_density = 3.179245812819847, hamiltonian_energy = -2.5877986028725704, hamiltonian_energy_error = 0.46990753865465296, max_hamiltonian_energy_error = -0.5862141181657581, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9525790109791522, log_density = 6.0376006690311925, hamiltonian_energy = -1.922378514105108, hamiltonian_energy_error = -0.9077136128958165, max_hamiltonian_energy_error = -0.9802271870024506, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9777337106733103, log_density = 6.7320356689987495, hamiltonian_energy = -4.808172938119609, hamiltonian_energy_error = 0.10226075094987941, max_hamiltonian_energy_error = -0.19605243017348783, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9866749132553342, log_density = 8.451111941623711, hamiltonian_energy = -5.800456792530394, hamiltonian_energy_error = -0.31293040883598433, max_hamiltonian_energy_error = -0.4850933171673315, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8728649504892577, log_density = 7.445460101256911, hamiltonian_energy = -4.945127755909826, hamiltonian_energy_error = -0.015281595683831029, max_hamiltonian_energy_error = 0.3211172291646527, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.698108094973308, log_density = 6.913332840636546, hamiltonian_energy = -3.856990787859064, hamiltonian_energy_error = 0.12449713623871261, max_hamiltonian_energy_error = 0.8058373822584035, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 7.930449907565357, hamiltonian_energy = -6.6816308361724595, hamiltonian_energy_error = -0.23841097404266964, max_hamiltonian_energy_error = -0.30290023784831366, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9563946959474189, log_density = 8.63899096958902, hamiltonian_energy = -6.410932317431261, hamiltonian_energy_error = -0.07140566329185294, max_hamiltonian_energy_error = 0.10081247445697716, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8385889766818754, log_density = 8.095610891799005, hamiltonian_energy = -6.265692252268407, hamiltonian_energy_error = 0.16454884553306748, max_hamiltonian_energy_error = 0.43841991610961895, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.613592157114354, log_density = 6.9359078935548215, hamiltonian_energy = -3.734388102774047, hamiltonian_energy_error = 0.22825355335044595, max_hamiltonian_energy_error = 1.0173172508033748, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 0.9698408696600479, log_density = 6.838769538363032, hamiltonian_energy = -5.468752827725767, hamiltonian_energy_error = -0.0028578223808102265, max_hamiltonian_energy_error = -0.39555359289602343, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9881213478999086, log_density = 7.686122889514349, hamiltonian_energy = -6.6283093963385085, hamiltonian_energy_error = -0.2544810188004014, max_hamiltonian_energy_error = -0.4198142108998404, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8973431898885199, log_density = 7.376733216498106, hamiltonian_energy = -5.39287666799035, hamiltonian_energy_error = 0.10489493500653069, max_hamiltonian_energy_error = 0.3625677641275997, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9816061259115191, log_density = 7.395510486598576, hamiltonian_energy = -6.245455914770108, hamiltonian_energy_error = -0.16855727786941088, max_hamiltonian_energy_error = -0.2369322460790455, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9874546942390948, log_density = 8.576023422682567, hamiltonian_energy = -5.941540209643033, hamiltonian_energy_error = -0.18552978284522137, max_hamiltonian_energy_error = -0.19048938170837904, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8926686571389233, log_density = 8.453913300665757, hamiltonian_energy = -7.026238188932959, hamiltonian_energy_error = 0.06731370056674102, max_hamiltonian_energy_error = 0.16391610495418085, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7373467916013016, log_density = 4.576759569493678, hamiltonian_energy = -2.6782434838000877, hamiltonian_energy_error = 0.36173218871570034, max_hamiltonian_energy_error = 0.4565538191434739, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8957443636397366, log_density = 3.541430374392151, hamiltonian_energy = -0.2177185909875119, hamiltonian_energy_error = 0.2550177814685961, max_hamiltonian_energy_error = 0.37071329612053305, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9569609580014341, log_density = 4.91595681010903, hamiltonian_energy = -0.8456648948041021, hamiltonian_energy_error = -0.37611069408371023, max_hamiltonian_energy_error = -0.6549627158241567, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7643580417356489, log_density = 6.798296550311649, hamiltonian_energy = 3.0517310051189863, hamiltonian_energy_error = -0.7700607564415378, max_hamiltonian_energy_error = -0.7700607564415378, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9958304625325914, log_density = 8.264329435186788, hamiltonian_energy = -6.062640228749244, hamiltonian_energy_error = -0.15865613719638194, max_hamiltonian_energy_error = -0.15865613719638194, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.745666561409215, log_density = 6.771343205525435, hamiltonian_energy = -4.6688100438537905, hamiltonian_energy_error = 0.3413906866599046, max_hamiltonian_energy_error = 0.5225315646048108, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9895417081983505, log_density = 8.226511686601512, hamiltonian_energy = -5.9815289267942875, hamiltonian_energy_error = -0.29991908216618146, max_hamiltonian_energy_error = -0.41242429972994543, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9250567161208375, log_density = 5.385145832786542, hamiltonian_energy = -5.126231196944461, hamiltonian_energy_error = 0.19111073416400615, max_hamiltonian_energy_error = 0.19111073416400615, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9874237498888316, log_density = 6.220702861651425, hamiltonian_energy = -4.85798106335705, hamiltonian_energy_error = -0.139756667936064, max_hamiltonian_energy_error = -0.27417760031099814, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9870571757144889, log_density = 7.354161152860948, hamiltonian_energy = -3.6693387338427503, hamiltonian_energy_error = -0.021834489809704483, max_hamiltonian_energy_error = -0.13036743144446739, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9264157748668116, log_density = 7.924312695202415, hamiltonian_energy = -5.509199952019208, hamiltonian_energy_error = -0.06025169823031096, max_hamiltonian_energy_error = -0.30346965149251126, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9886171735887016, log_density = 8.321955515797491, hamiltonian_energy = -6.583140161747098, hamiltonian_energy_error = -0.044459952949194914, max_hamiltonian_energy_error = -0.044459952949194914, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8803199600630951, log_density = 6.2084003705590405, hamiltonian_energy = -3.75080661341599, hamiltonian_energy_error = 0.1353186098818524, max_hamiltonian_energy_error = 0.20805114991550466, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8973410852182787, log_density = 6.3077849984045375, hamiltonian_energy = -3.1454181697821353, hamiltonian_energy_error = 0.1517081946387555, max_hamiltonian_energy_error = 0.1517081946387555, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 6.884212765207547, hamiltonian_energy = -4.960003496971959, hamiltonian_energy_error = -0.020642619501172632, max_hamiltonian_energy_error = -0.20741759262217307, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9919242911573668, log_density = 7.822874692498226, hamiltonian_energy = -5.632599581847853, hamiltonian_energy_error = -0.15177118290285652, max_hamiltonian_energy_error = -0.15177118290285652, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9050698769842072, log_density = 6.052290828230047, hamiltonian_energy = -5.229699172882766, hamiltonian_energy_error = 0.1512967690175575, max_hamiltonian_energy_error = 0.15593235037199005, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6870314202719114, log_density = 5.497007753501364, hamiltonian_energy = -3.5983877383808593, hamiltonian_energy_error = 0.2412182425625118, max_hamiltonian_energy_error = 0.9129214191250421, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 6.341382126246732, hamiltonian_energy = -5.017981215788264, hamiltonian_energy_error = -0.19687208742111562, max_hamiltonian_energy_error = -0.35460052399116915, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9742820498850862, log_density = 5.526936261531132, hamiltonian_energy = -4.408872579096022, hamiltonian_energy_error = 0.04997556938383951, max_hamiltonian_energy_error = -0.08705012239400656, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.819125536506617, log_density = 5.526936261531132, hamiltonian_energy = -1.9791729861512577, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 0.33588631644374756, tree_depth = 1, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9658542396171789, log_density = 5.240604486575524, hamiltonian_energy = -2.8584159086878707, hamiltonian_energy_error = -0.0672387077613581, max_hamiltonian_energy_error = -0.2589408919598708, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.45899443343460267, log_density = 6.826173444439826, hamiltonian_energy = 1.0951786674352766, hamiltonian_energy_error = 0.09315344624516708, max_hamiltonian_energy_error = 1.7625746941655525, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9576895315271238, log_density = 7.275581373706995, hamiltonian_energy = -2.5221433409146616, hamiltonian_energy_error = -0.1568268917721518, max_hamiltonian_energy_error = -0.31600401316859905, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9691295220247894, log_density = 6.577805364104593, hamiltonian_energy = -5.640580719071361, hamiltonian_energy_error = 0.1351034805521376, max_hamiltonian_energy_error = 0.16456098242336736, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9199809215812325, log_density = 7.070831382069533, hamiltonian_energy = -4.472027224570261, hamiltonian_energy_error = -0.0043662310871317445, max_hamiltonian_energy_error = 0.315603633823514, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9162101754594296, log_density = 7.756547166248467, hamiltonian_energy = -3.7272458835779645, hamiltonian_energy_error = -0.08751643285421729, max_hamiltonian_energy_error = 0.29452539683422696, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9420889864766886, log_density = 6.937902318779257, hamiltonian_energy = -6.296146396385198, hamiltonian_energy_error = 0.133566633109778, max_hamiltonian_energy_error = 0.19072151587119635, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9997313334014137, log_density = 6.966454286574777, hamiltonian_energy = -5.357109403529215, hamiltonian_energy_error = -0.09302074147728234, max_hamiltonian_energy_error = -0.16187160275402768, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9713814685370858, log_density = 5.26828048271995, hamiltonian_energy = -4.263574247840879, hamiltonian_energy_error = 0.07779376668178628, max_hamiltonian_energy_error = 0.1114501221071631, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7817565450709067, log_density = 7.852877289004091, hamiltonian_energy = -2.9475115907639298, hamiltonian_energy_error = -0.23550440374821058, max_hamiltonian_energy_error = 0.7600080857600822, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 8.116270762689908, hamiltonian_energy = -6.91221492458741, hamiltonian_energy_error = -0.08290956981861974, max_hamiltonian_energy_error = -0.12879848014876671, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.834244550199107, log_density = 5.002868597340619, hamiltonian_energy = -2.8738395981055223, hamiltonian_energy_error = 0.1686675973580285, max_hamiltonian_energy_error = 0.32276339273775445, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8252109949258247, log_density = 6.069762728065021, hamiltonian_energy = -1.1168096707843684, hamiltonian_energy_error = 0.25588270472824437, max_hamiltonian_energy_error = 0.450031026963718, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.979916650374283, log_density = 7.716812410738097, hamiltonian_energy = -2.1887249287218102, hamiltonian_energy_error = -0.3661766825135979, max_hamiltonian_energy_error = -0.4480288062742832, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9746090856151234, log_density = 7.684217359590438, hamiltonian_energy = -6.080328090089887, hamiltonian_energy_error = 0.006842923956146052, max_hamiltonian_energy_error = -0.1741796379348708, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.961121517343735, log_density = 7.249034401101172, hamiltonian_energy = -3.13623756323247, hamiltonian_energy_error = -0.2993947171225688, max_hamiltonian_energy_error = -0.3079760857450813, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.949248863969499, log_density = 8.682065865325963, hamiltonian_energy = -5.986727119889381, hamiltonian_energy_error = -0.0023591270381357887, max_hamiltonian_energy_error = 0.09928439869945205, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6427001831539025, log_density = 6.509433078042436, hamiltonian_energy = -3.699870012439025, hamiltonian_energy_error = 0.1847511359612901, max_hamiltonian_energy_error = 0.726873534350212, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8666557757010366, log_density = 4.820072439647342, hamiltonian_energy = -1.8513178319201744, hamiltonian_energy_error = 0.09827307948438779, max_hamiltonian_energy_error = 0.43870996018731834, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 7.077385682092096, hamiltonian_energy = -3.7951881835791403, hamiltonian_energy_error = -0.09513880647582473, max_hamiltonian_energy_error = -0.2562571754684657, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8814246658345625, log_density = 6.522459345848137, hamiltonian_energy = -4.732622816172684, hamiltonian_energy_error = 0.12033064447170716, max_hamiltonian_energy_error = 0.5153158600529864, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 17, is_accept = true, acceptance_rate = 0.9008349320551421, log_density = 6.9308546074651805, hamiltonian_energy = -3.7181226097114357, hamiltonian_energy_error = -0.016684352129597624, max_hamiltonian_energy_error = -0.5313948873844545, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9596404748135161, log_density = 8.421715406221292, hamiltonian_energy = -6.094873766588856, hamiltonian_energy_error = -0.16573370023630574, max_hamiltonian_energy_error = -0.3098452713368136, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8354318277850243, log_density = 8.421715406221292, hamiltonian_energy = -4.553948813361789, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 0.400978600671265, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.936542842167462, log_density = 6.55438262593151, hamiltonian_energy = -6.395756891821586, hamiltonian_energy_error = 0.1556797445102669, max_hamiltonian_energy_error = 0.1556797445102669, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9958731632629634, log_density = 7.761029130975036, hamiltonian_energy = -5.636797020578962, hamiltonian_energy_error = -0.08660200959550401, max_hamiltonian_energy_error = -0.15040896596009823, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7906604822650307, log_density = 8.071023228356044, hamiltonian_energy = -4.984991316100716, hamiltonian_energy_error = 0.144204790329292, max_hamiltonian_energy_error = 0.4168912513042553, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9031248696220174, log_density = 7.598248058272725, hamiltonian_energy = -5.4569769198080404, hamiltonian_energy_error = -0.12559335969075391, max_hamiltonian_energy_error = 0.300599304351544, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7956573781961914, log_density = 6.857071266291928, hamiltonian_energy = -2.7746852552636616, hamiltonian_energy_error = -0.04149499320528971, max_hamiltonian_energy_error = 0.4717689683497106, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8091418565533668, log_density = 5.669488046529228, hamiltonian_energy = -3.442361413549359, hamiltonian_energy_error = 0.3256682668766988, max_hamiltonian_energy_error = 0.5210368933748835, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9656730652853482, log_density = 8.441261136400577, hamiltonian_energy = -5.270385794243829, hamiltonian_energy_error = -0.5845055112277944, max_hamiltonian_energy_error = -0.5845055112277944, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7781141468586956, log_density = 5.237191032782981, hamiltonian_energy = -2.538072492027742, hamiltonian_energy_error = 0.1996765655903201, max_hamiltonian_energy_error = 0.4127112189858817, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9831316877507997, log_density = 7.875072969390521, hamiltonian_energy = -3.8614691028461756, hamiltonian_energy_error = -0.005656405204579773, max_hamiltonian_energy_error = -0.22802416045565765, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.981738326160016, log_density = 7.388549446947739, hamiltonian_energy = -6.62176702213438, hamiltonian_energy_error = 0.05047359316664046, max_hamiltonian_energy_error = -0.07325101214164231, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9333117230976216, log_density = 6.148388095416546, hamiltonian_energy = -4.538533700317648, hamiltonian_energy_error = 0.03495217751940327, max_hamiltonian_energy_error = 0.10361547047543684, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9625896272650536, log_density = 6.425628185230144, hamiltonian_energy = -2.5226211025137446, hamiltonian_energy_error = 0.03166797268410093, max_hamiltonian_energy_error = 0.21101541779575905, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.89537048396688, log_density = 6.0034377869425, hamiltonian_energy = -2.377093124306085, hamiltonian_energy_error = 0.08625367031624442, max_hamiltonian_energy_error = 0.2555533085927464, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.977478082374213, log_density = 6.602212499168061, hamiltonian_energy = -3.1455007522088305, hamiltonian_energy_error = -0.2626326472014924, max_hamiltonian_energy_error = -0.2626326472014924, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9321908699837558, log_density = 7.507371615000359, hamiltonian_energy = -4.674368344472503, hamiltonian_energy_error = 0.09725718386351723, max_hamiltonian_energy_error = -0.2197440472070573, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9728149117136401, log_density = 8.33108342444316, hamiltonian_energy = -6.939594378785517, hamiltonian_energy_error = -0.1246741541871863, max_hamiltonian_energy_error = -0.133058708434044, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9378582353088211, log_density = 7.341166420668678, hamiltonian_energy = -6.670515114807315, hamiltonian_energy_error = 0.0741911812019227, max_hamiltonian_energy_error = 0.13455481118297996, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9694313102938599, log_density = 7.188824807076308, hamiltonian_energy = -5.522552730908696, hamiltonian_energy_error = 0.018269670066096033, max_hamiltonian_energy_error = -0.10906784582740858, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8845418553007198, log_density = 5.998288655851315, hamiltonian_energy = -4.228055164126378, hamiltonian_energy_error = 0.06339629707797734, max_hamiltonian_energy_error = 0.24939881262087482, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.2942059957155573, log_density = 2.8167053874471364, hamiltonian_energy = 0.8160218102339352, hamiltonian_energy_error = 1.1225308621804917, max_hamiltonian_energy_error = 2.788836589288242, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.927336514720565, log_density = 7.359196815902488, hamiltonian_energy = -2.0990286280367902, hamiltonian_energy_error = -0.953697804383955, max_hamiltonian_energy_error = -0.953697804383955, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9980407850110845, log_density = 7.801509703821868, hamiltonian_energy = -6.533320181430016, hamiltonian_energy_error = -0.05435214751709694, max_hamiltonian_energy_error = -0.13467994499591462, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8936080211117893, log_density = 7.959416581782563, hamiltonian_energy = -5.131392132941902, hamiltonian_energy_error = 0.07856200169046534, max_hamiltonian_energy_error = 0.167403502472391, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.999633217308998, log_density = 8.278703579035264, hamiltonian_energy = -7.4943588115861814, hamiltonian_energy_error = -0.02556535186302078, max_hamiltonian_energy_error = -0.09811207921381193, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6337019321222691, log_density = 6.273785028219812, hamiltonian_energy = -2.110679122365463, hamiltonian_energy_error = 0.6096173846122372, max_hamiltonian_energy_error = 1.2914301135576167, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.986694348607779, log_density = 7.987794483299634, hamiltonian_energy = -4.5251219537306255, hamiltonian_energy_error = -0.4761892846272797, max_hamiltonian_energy_error = -0.4761892846272797, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8134816829072519, log_density = 5.083208431821028, hamiltonian_energy = -3.8953951428558753, hamiltonian_energy_error = 0.2509613386733225, max_hamiltonian_energy_error = 0.4490122286755005, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 7.353094004546751, hamiltonian_energy = -5.105934972092955, hamiltonian_energy_error = -0.27692182000701404, max_hamiltonian_energy_error = -0.3853191368899598, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9193685539307695, log_density = 6.938915907648163, hamiltonian_energy = -5.875347375438368, hamiltonian_energy_error = 0.1666610599718652, max_hamiltonian_energy_error = 0.1666610599718652, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9436593456544463, log_density = 5.126888652344274, hamiltonian_energy = -2.6167215075569508, hamiltonian_energy_error = -0.04597670629668693, max_hamiltonian_energy_error = 0.12663624794088024, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9626574216348062, log_density = 5.897388712450947, hamiltonian_energy = -0.13910199686031532, hamiltonian_energy_error = -0.09844102621133555, max_hamiltonian_energy_error = 0.1468482534941713, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9437761442421237, log_density = 6.281911009793557, hamiltonian_energy = -4.329516681820705, hamiltonian_energy_error = 0.09233488237047816, max_hamiltonian_energy_error = -0.16030079072361225, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9557967963258036, log_density = 8.476320309873977, hamiltonian_energy = -4.118387303005936, hamiltonian_energy_error = -0.13326385866490087, max_hamiltonian_energy_error = -0.2045875565872861, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8639659437698116, log_density = 5.834027451483312, hamiltonian_energy = -4.554260067516515, hamiltonian_energy_error = 0.1391392467844197, max_hamiltonian_energy_error = 0.30242780279715564, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9885217051134038, log_density = 5.440933022338264, hamiltonian_energy = -3.4707639984667384, hamiltonian_energy_error = -0.13484209420829707, max_hamiltonian_energy_error = -0.20099468263785614, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.80820956691162, log_density = 6.4643845991014075, hamiltonian_energy = -1.8894149497388986, hamiltonian_energy_error = 0.06773894240189149, max_hamiltonian_energy_error = 0.46786662304931337, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9965054501003923, log_density = 6.794718951548173, hamiltonian_energy = -5.31130255509421, hamiltonian_energy_error = 0.02476601081364116, max_hamiltonian_energy_error = -0.12440224956434776, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.639329174631127, log_density = 3.6258021336424893, hamiltonian_energy = 0.27602131607697356, hamiltonian_energy_error = 0.21291684386358067, max_hamiltonian_energy_error = 0.6478801176638272, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9792898965598577, log_density = 7.2538575817437945, hamiltonian_energy = -1.8463043582860426, hamiltonian_energy_error = -0.2199567333329775, max_hamiltonian_energy_error = -0.3769273647715228, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8034583639570977, log_density = 4.598806083634553, hamiltonian_energy = -3.795772823243198, hamiltonian_energy_error = 0.5409158764436746, max_hamiltonian_energy_error = 0.5409158764436746, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.3813094129555253, log_density = 4.1569726507662175, hamiltonian_energy = 1.6632484215868413, hamiltonian_energy_error = 0.24263546329617647, max_hamiltonian_energy_error = 1.7509755068376545, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.6842970010839915, log_density = 4.333865470806845, hamiltonian_energy = 0.9393258499721284, hamiltonian_energy_error = 0.008487255838296903, max_hamiltonian_energy_error = 1.6849967323411859, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 4.925512956533279, hamiltonian_energy = -0.5514032375344247, hamiltonian_energy_error = -0.3592202447838444, max_hamiltonian_energy_error = -0.6590461706833164, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9947303545011564, log_density = 4.790595780749978, hamiltonian_energy = -4.43615354181919, hamiltonian_energy_error = 0.03758507077746387, max_hamiltonian_energy_error = -0.19428829866681774, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9861004870047546, log_density = 7.3520549158401085, hamiltonian_energy = -3.526515179096556, hamiltonian_energy_error = 0.004980580072727836, max_hamiltonian_energy_error = -0.3005330874468277, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9026128038527131, log_density = 5.923960197104339, hamiltonian_energy = -4.990635067721807, hamiltonian_energy_error = 0.08704103977883104, max_hamiltonian_energy_error = 0.23420584425302948, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.5911367639182424, log_density = 5.074624764664204, hamiltonian_energy = -1.4859408329998067, hamiltonian_energy_error = -0.1115228791213716, max_hamiltonian_energy_error = 1.2490568508021274, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9936608786038893, log_density = 7.637475380218033, hamiltonian_energy = -3.047558222438786, hamiltonian_energy_error = -0.47719527145663365, max_hamiltonian_energy_error = -0.47719527145663365, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7294606303972722, log_density = 7.432414521126356, hamiltonian_energy = -4.2246657638836425, hamiltonian_energy_error = 0.120501042622851, max_hamiltonian_energy_error = 0.5337504042848691, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9986740805003904, log_density = 8.086924195516152, hamiltonian_energy = -6.6950118005156085, hamiltonian_energy_error = -0.08028078920113835, max_hamiltonian_energy_error = -0.08028078920113835, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9199379944917949, log_density = 5.365382437052899, hamiltonian_energy = -4.3013030039693305, hamiltonian_energy_error = 0.1367656266434807, max_hamiltonian_energy_error = 0.14746548492613432, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8741603315714175, log_density = 7.351303699452217, hamiltonian_energy = -1.9327085938457813, hamiltonian_energy_error = -0.2975073991391235, max_hamiltonian_energy_error = 0.39602653946338107, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5070213310967358, log_density = 6.283435734854322, hamiltonian_energy = -2.063098515151129, hamiltonian_energy_error = 0.29089327441843604, max_hamiltonian_energy_error = 1.140355308349124, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9781101212144029, log_density = 7.603860871457554, hamiltonian_energy = -3.438959045749449, hamiltonian_energy_error = -0.10901465775576114, max_hamiltonian_energy_error = -0.16656172273995606, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6760428828134025, log_density = 4.672797674972287, hamiltonian_energy = -4.198285479588143, hamiltonian_energy_error = 0.8891488255507687, max_hamiltonian_energy_error = 0.8891488255507687, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9987031466679309, log_density = 7.751155323773244, hamiltonian_energy = -4.191850095295601, hamiltonian_energy_error = -0.8342029335974299, max_hamiltonian_energy_error = -1.0053568088423885, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9323820069697691, log_density = 5.883163870750025, hamiltonian_energy = -4.104260565526231, hamiltonian_energy_error = 0.04040667142714671, max_hamiltonian_energy_error = 0.15473710265657692, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9566963425399386, log_density = 6.528289771383806, hamiltonian_energy = -4.098918167951168, hamiltonian_energy_error = -0.024551084198797923, max_hamiltonian_energy_error = -0.13257062161137068, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9861214564700577, log_density = 6.525998343940827, hamiltonian_energy = -5.601391982478414, hamiltonian_energy_error = -0.0018937062950623584, max_hamiltonian_energy_error = 0.06630098242070925, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9939157670921265, log_density = 8.851308935993941, hamiltonian_energy = -4.754023074813346, hamiltonian_energy_error = -0.09712635357454502, max_hamiltonian_energy_error = -0.09712635357454502, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9594592458445916, log_density = 8.799004800234371, hamiltonian_energy = -7.99732192923045, hamiltonian_energy_error = 0.014160554620003651, max_hamiltonian_energy_error = 0.07556022225311665, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8155511714560457, log_density = 7.525236611971472, hamiltonian_energy = -3.72407441811185, hamiltonian_energy_error = 0.1391304416352046, max_hamiltonian_energy_error = 0.34810192431469966, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.956094338704997, log_density = 7.418305327682775, hamiltonian_energy = -6.090410427158975, hamiltonian_energy_error = -0.12629350188947264, max_hamiltonian_energy_error = 0.23298746672643134, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9869956635668619, log_density = 8.949923287767513, hamiltonian_energy = -6.925779743386686, hamiltonian_energy_error = -0.05157607001692455, max_hamiltonian_energy_error = -0.0649305773421025, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9120005938075896, log_density = 8.538472488892134, hamiltonian_energy = -7.215936591156501, hamiltonian_energy_error = 0.05474990767223886, max_hamiltonian_energy_error = 0.14469409953135948, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8560601327021475, log_density = 6.373105583592279, hamiltonian_energy = -4.964825633214807, hamiltonian_energy_error = 0.1730286783415247, max_hamiltonian_energy_error = 0.2570009011697474, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8876421307039841, log_density = 8.139300740172896, hamiltonian_energy = -5.162150764588335, hamiltonian_energy_error = -0.10413828334175346, max_hamiltonian_energy_error = 0.3441419228592286, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9650119247112, log_density = 7.6376565131059575, hamiltonian_energy = -6.610719212527701, hamiltonian_energy_error = 0.08246697535091752, max_hamiltonian_energy_error = -0.08460356276633085, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8584715538791619, log_density = 8.069190199304291, hamiltonian_energy = -5.262963024467336, hamiltonian_energy_error = -0.026204332259911034, max_hamiltonian_energy_error = 0.39482157947592444, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.846875814991113, log_density = 6.357484007408939, hamiltonian_energy = -5.517290223020434, hamiltonian_energy_error = 0.5087146186033271, max_hamiltonian_energy_error = 0.5087146186033271, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 5, is_accept = true, acceptance_rate = 0.8504004312781206, log_density = 4.882429622796112, hamiltonian_energy = -2.307332642231562, hamiltonian_energy_error = 0.27943650999944225, max_hamiltonian_energy_error = -0.41604390041435035, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9935360674825795, log_density = 7.721708942586179, hamiltonian_energy = -4.562822966410457, hamiltonian_energy_error = -0.7166830208404282, max_hamiltonian_energy_error = -0.7395981275122181, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.883931403108949, log_density = 7.510119218470265, hamiltonian_energy = -6.047419140624459, hamiltonian_energy_error = 0.013338576323567608, max_hamiltonian_energy_error = 0.2308497624013084, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9700280450493198, log_density = 7.126183190500843, hamiltonian_energy = -5.4169638816850485, hamiltonian_energy_error = 0.05023144030073112, max_hamiltonian_energy_error = 0.09891595678576426, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8458412845963549, log_density = 6.1097174078222345, hamiltonian_energy = -4.333970560976142, hamiltonian_energy_error = 0.35005539215488835, max_hamiltonian_energy_error = 0.35005539215488835, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8394442875851067, log_density = 2.0919701606219725, hamiltonian_energy = -1.4588951372308112, hamiltonian_energy_error = 0.6261540290012291, max_hamiltonian_energy_error = 0.6261540290012291, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.876469982553075, log_density = 4.773448413844596, hamiltonian_energy = 1.520390261141502, hamiltonian_energy_error = 0.03509523340418674, max_hamiltonian_energy_error = -0.5520048156844881, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8579028553055316, log_density = 8.655163769681025, hamiltonian_energy = -2.8484285169470507, hamiltonian_energy_error = -0.6289702243504416, max_hamiltonian_energy_error = 0.7286505885729628, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9036010883210643, log_density = 7.73123299088315, hamiltonian_energy = -5.697288294633713, hamiltonian_energy_error = 0.09121065296005249, max_hamiltonian_energy_error = 0.20223832468042513, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8687068850466703, log_density = 5.502860601007793, hamiltonian_energy = -2.1183195153708905, hamiltonian_energy_error = 0.27173982442550315, max_hamiltonian_energy_error = 0.3334681400736281, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8438020572248149, log_density = 5.970494404885514, hamiltonian_energy = -2.821560089543481, hamiltonian_energy_error = -0.15230092502003068, max_hamiltonian_energy_error = 0.6322286317335664, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.990005155022429, log_density = 6.5917242000346015, hamiltonian_energy = -4.478508992112513, hamiltonian_energy_error = 0.010684848908136146, max_hamiltonian_energy_error = -0.10143464078663289, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7250441056596831, log_density = 7.1554188282287825, hamiltonian_energy = -3.7355728606480465, hamiltonian_energy_error = 0.16519441573143823, max_hamiltonian_energy_error = 0.9060517242650601, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.8318468062139569, log_density = 8.08358615236038, hamiltonian_energy = -4.827140869743243, hamiltonian_energy_error = -0.11780693289493449, max_hamiltonian_energy_error = 0.601454581424723, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9139519999833343, log_density = 7.659619970355516, hamiltonian_energy = -6.741415839618812, hamiltonian_energy_error = 0.057820322396846535, max_hamiltonian_energy_error = 0.22560096262870122, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8970076955353888, log_density = 8.151147075148, hamiltonian_energy = -5.641371035735033, hamiltonian_energy_error = -0.16791942071351595, max_hamiltonian_energy_error = 0.3688175583588693, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9550072522311656, log_density = 8.210952551109404, hamiltonian_energy = -6.87348920813709, hamiltonian_energy_error = -0.03121568146825826, max_hamiltonian_energy_error = 0.12527947211247703, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8638343322293868, log_density = 7.3876215297835515, hamiltonian_energy = -5.838833675034163, hamiltonian_energy_error = 0.11685835009350143, max_hamiltonian_energy_error = 0.2513041776060838, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9675533876604678, log_density = 7.526940770421957, hamiltonian_energy = -5.970628716832779, hamiltonian_energy_error = -0.05122828648526223, max_hamiltonian_energy_error = -0.1756825321090627, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9413690343457082, log_density = 6.609439143711848, hamiltonian_energy = -4.685995758045751, hamiltonian_energy_error = -0.08123795768852204, max_hamiltonian_energy_error = 0.1612413812681206, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.3523841345604041, log_density = 6.609439143711848, hamiltonian_energy = 0.7051938258460977, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 2.064830713312606, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8273635145498202, log_density = 8.383787565688493, hamiltonian_energy = -4.813570753815635, hamiltonian_energy_error = -0.07809055420279964, max_hamiltonian_energy_error = 0.5013240135398327, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9888213097262446, log_density = 7.801906617911058, hamiltonian_energy = -7.602509169153773, hamiltonian_energy_error = 0.06593667669427461, max_hamiltonian_energy_error = -0.09515191812437074, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7949588958946683, log_density = 8.303790521614268, hamiltonian_energy = -5.22557416490279, hamiltonian_energy_error = 0.11318174121463542, max_hamiltonian_energy_error = 0.44406768537790153, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.89565860651878, log_density = 6.957586968567709, hamiltonian_energy = -6.677369409427625, hamiltonian_energy_error = 0.243583526931908, max_hamiltonian_energy_error = 0.243583526931908, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.978900491195299, log_density = 5.735804535260193, hamiltonian_energy = -4.750915917306942, hamiltonian_energy_error = 0.04191540810529215, max_hamiltonian_energy_error = -0.3317381361853782, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 7.282330197465853, hamiltonian_energy = -4.847247880679088, hamiltonian_energy_error = -0.15702303532957007, max_hamiltonian_energy_error = -0.2765707456413571, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9871425028493442, log_density = 8.098824400404013, hamiltonian_energy = -6.074226899245509, hamiltonian_energy_error = -0.10046783815216909, max_hamiltonian_energy_error = -0.1750404927245448, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9152071783905752, log_density = 7.986411453485919, hamiltonian_energy = -6.5279743574748705, hamiltonian_energy_error = 0.02286370911994684, max_hamiltonian_energy_error = 0.21589592987242323, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9613289488415854, log_density = 8.429430800758524, hamiltonian_energy = -5.528427476088618, hamiltonian_energy_error = -0.1485456578849682, max_hamiltonian_energy_error = -0.1485456578849682, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7818921005698464, log_density = 8.257668306940232, hamiltonian_energy = -3.9896066273352266, hamiltonian_energy_error = 0.19150738660849242, max_hamiltonian_energy_error = 0.4519651121461701, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9282997327548195, log_density = 7.170693583674613, hamiltonian_energy = -5.991500156113807, hamiltonian_energy_error = 0.14315941751529415, max_hamiltonian_energy_error = 0.15907509912493367, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9426273589426469, log_density = 6.37806223661282, hamiltonian_energy = -5.027229885566168, hamiltonian_energy_error = 0.006722101803628533, max_hamiltonian_energy_error = 0.18018025338784227, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7760984243919948, log_density = 6.155823275764698, hamiltonian_energy = -2.524996794867292, hamiltonian_energy_error = 0.15771734430231943, max_hamiltonian_energy_error = 0.48607919785612186, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8286998174194132, log_density = 5.997480025919931, hamiltonian_energy = -3.7928568044225317, hamiltonian_energy_error = 0.20477507346218182, max_hamiltonian_energy_error = 0.39858550776306245, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9506676962027888, log_density = 6.933467880540922, hamiltonian_energy = -4.053260452006539, hamiltonian_energy_error = -0.4676283771642811, max_hamiltonian_energy_error = -0.5260967202937441, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7960565669314792, log_density = 7.805904376515379, hamiltonian_energy = -3.557747711287228, hamiltonian_energy_error = -0.11465425415858022, max_hamiltonian_energy_error = 0.4856989542032739, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9516517635460583, log_density = 8.2677676766783, hamiltonian_energy = -5.731794858453908, hamiltonian_energy_error = 0.006706911046894248, max_hamiltonian_energy_error = 0.10028890416819358, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9133640089997545, log_density = 8.44840075260514, hamiltonian_energy = -6.527662127258125, hamiltonian_energy_error = 0.026350024681219608, max_hamiltonian_energy_error = 0.18353892026313368, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8591104135905023, log_density = 8.199988908465947, hamiltonian_energy = -5.227842829531024, hamiltonian_energy_error = 0.06383135794464945, max_hamiltonian_energy_error = 0.33053384101497585, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9855516182965531, log_density = 8.321591709313603, hamiltonian_energy = -6.911839913734854, hamiltonian_energy_error = -0.1213548362296919, max_hamiltonian_energy_error = -0.13515827982934958, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9224377285756541, log_density = 6.819704355077395, hamiltonian_energy = -6.104815008070739, hamiltonian_energy_error = 0.12553850866024874, max_hamiltonian_energy_error = 0.1753410212092401, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.952197705942255, log_density = 7.84484786701249, hamiltonian_energy = -5.192383598454196, hamiltonian_energy_error = -0.12327573481452347, max_hamiltonian_energy_error = -0.23359904279673938, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.8631915630587109, log_density = 6.316164740478184, hamiltonian_energy = -4.099072157051394, hamiltonian_energy_error = 0.21813187670843082, max_hamiltonian_energy_error = 0.39921567298711436, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9822522381854897, log_density = 7.249064319109211, hamiltonian_energy = -4.59093721342497, hamiltonian_energy_error = -0.010011464101991052, max_hamiltonian_energy_error = -0.3208660978580866, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9576062633439403, log_density = 7.914043749847776, hamiltonian_energy = -6.428197579663396, hamiltonian_energy_error = -0.21346224489885657, max_hamiltonian_energy_error = -0.21346224489885657, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9286399577754532, log_density = 7.5315427869220954, hamiltonian_energy = -4.86527269183207, hamiltonian_energy_error = 0.0024808393814179652, max_hamiltonian_energy_error = 0.1486544348121832, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9859249524855814, log_density = 7.104124430198555, hamiltonian_energy = -6.872088208202243, hamiltonian_energy_error = 0.054077336848225244, max_hamiltonian_energy_error = 0.054077336848225244, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.891788287257298, log_density = 7.4275223528054575, hamiltonian_energy = -5.45166190640653, hamiltonian_energy_error = 0.032415648134883845, max_hamiltonian_energy_error = 0.16420279463358067, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9144535371042326, log_density = 6.885683550995049, hamiltonian_energy = -4.740066833008811, hamiltonian_energy_error = 0.037217109107561264, max_hamiltonian_energy_error = 0.18714744335024314, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9786281068528118, log_density = 7.514206109120224, hamiltonian_energy = -5.536857840445678, hamiltonian_energy_error = -0.04579408657662132, max_hamiltonian_energy_error = 0.11144894566393493, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9804069558617835, log_density = 8.221947767331331, hamiltonian_energy = -6.398372989851534, hamiltonian_energy_error = -0.07917072728801156, max_hamiltonian_energy_error = 0.08049942865907234, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9384874115900346, log_density = 7.966873973653328, hamiltonian_energy = -7.174008526927429, hamiltonian_energy_error = 0.011286071826937416, max_hamiltonian_energy_error = 0.13894201546140028, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8816401645106927, log_density = 6.660076418877441, hamiltonian_energy = -5.8136866183381155, hamiltonian_energy_error = 0.20433986700494078, max_hamiltonian_energy_error = 0.20433986700494078, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9105046037881622, log_density = 3.369275100769894, hamiltonian_energy = -1.280949872785908, hamiltonian_energy_error = 0.014695243932684399, max_hamiltonian_energy_error = 0.41939890668159685, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 4.143040971816308, hamiltonian_energy = -2.041552283923916, hamiltonian_energy_error = -0.16998210267404845, max_hamiltonian_energy_error = -0.23060096279307496, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9524880057886446, log_density = 7.874493069968828, hamiltonian_energy = -2.4163121403593415, hamiltonian_energy_error = -0.1357025206757303, max_hamiltonian_energy_error = 0.15377606307795322, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9188739118333835, log_density = 6.37767658582383, hamiltonian_energy = -4.171246292900811, hamiltonian_energy_error = 0.04137173565029162, max_hamiltonian_energy_error = 0.1630144376684184, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.896475348429404, log_density = 6.522056185924201, hamiltonian_energy = -3.603044270058237, hamiltonian_energy_error = 0.1493906922422923, max_hamiltonian_energy_error = 0.30341049794498254, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.946653029427755, log_density = 6.025326848870515, hamiltonian_energy = -4.410931215072764, hamiltonian_energy_error = -0.04387243740189106, max_hamiltonian_energy_error = -0.22075206787124202, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9574160512295197, log_density = 7.2454850761972835, hamiltonian_energy = -4.090993265926846, hamiltonian_energy_error = -0.2450767252102226, max_hamiltonian_energy_error = -0.49081197322369174, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8688842466509022, log_density = 5.440705353003651, hamiltonian_energy = -3.5160649680015443, hamiltonian_energy_error = 0.09892338730971728, max_hamiltonian_energy_error = 0.47568394076584175, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9173984822057053, log_density = 4.252078451474116, hamiltonian_energy = -2.1549226506531225, hamiltonian_energy_error = 0.18503139283994718, max_hamiltonian_energy_error = -0.36670873882801613, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9854584553573009, log_density = 3.2835441080353247, hamiltonian_energy = -0.709504703814003, hamiltonian_energy_error = 0.09505364054669707, max_hamiltonian_energy_error = -0.37571698784573826, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5281370174667331, log_density = 5.015151674469011, hamiltonian_energy = 1.4531940673182335, hamiltonian_energy_error = 0.6453735200503221, max_hamiltonian_energy_error = 1.4032214987020848, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.922496385523414, log_density = 5.142366032801837, hamiltonian_energy = -2.7610498064234594, hamiltonian_energy_error = 0.13726299658578922, max_hamiltonian_energy_error = 0.18818990446147676, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7751537385556226, log_density = 4.434742594225133, hamiltonian_energy = -0.3938727037521188, hamiltonian_energy_error = -0.009486273401411616, max_hamiltonian_energy_error = 0.6457323803648531, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9846355268696997, log_density = 4.29562778366736, hamiltonian_energy = -1.5394918155861599, hamiltonian_energy_error = 0.06689625326610615, max_hamiltonian_energy_error = -0.31591121320791826, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8688939545719082, log_density = 4.464317785795528, hamiltonian_energy = -0.9019814242073458, hamiltonian_energy_error = 0.05581750777214367, max_hamiltonian_energy_error = 0.41404658608587286, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8259446994439824, log_density = 1.9750978029158892, hamiltonian_energy = 0.3731939045141974, hamiltonian_energy_error = 0.45827627663311254, max_hamiltonian_energy_error = 0.6401947276710542, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9998931949032082, log_density = 5.859984843737891, hamiltonian_energy = 0.06465246404262004, hamiltonian_energy_error = -0.43845828658061814, max_hamiltonian_energy_error = -0.5795411247997468, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.99780057869466, log_density = 8.033693689825276, hamiltonian_energy = -4.951621751919843, hamiltonian_energy_error = -0.2171982393897567, max_hamiltonian_energy_error = -0.2171982393897567, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.896761956566997, log_density = 7.983100314938211, hamiltonian_energy = -6.587128272504868, hamiltonian_energy_error = -0.039720135329371686, max_hamiltonian_energy_error = 0.22477605785415466, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9277678520591705, log_density = 7.2347655945799225, hamiltonian_energy = -5.8986979482677455, hamiltonian_energy_error = 0.0732894845019505, max_hamiltonian_energy_error = 0.14993324094893268, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8487830748150602, log_density = 3.225145805413577, hamiltonian_energy = -1.1311642865093958, hamiltonian_energy_error = 0.16754756581822416, max_hamiltonian_energy_error = 0.4615121419117414, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7427127184617875, log_density = 0.9000312506234369, hamiltonian_energy = 0.48573095347447004, hamiltonian_energy_error = 0.434770974533228, max_hamiltonian_energy_error = 0.434770974533228, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9267563270342564, log_density = 2.375164369412576, hamiltonian_energy = 1.3412029041923281, hamiltonian_energy_error = -0.18976300001187596, max_hamiltonian_energy_error = -0.2588717522430972, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9500756334823027, log_density = 2.0314754655018756, hamiltonian_energy = 1.3794403661738759, hamiltonian_energy_error = 0.043651271643517564, max_hamiltonian_energy_error = -0.2099308697585056, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 6.127614483001928, hamiltonian_energy = -1.449623310414128, hamiltonian_energy_error = -0.19784432288817078, max_hamiltonian_energy_error = -0.43748622114076996, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9959032670987654, log_density = 6.499363140225006, hamiltonian_energy = -5.4550366663669045, hamiltonian_energy_error = 0.02909635340539385, max_hamiltonian_energy_error = -0.2801173343763361, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8104264747758452, log_density = 3.712550466386345, hamiltonian_energy = -2.6675108270186305, hamiltonian_energy_error = 0.44761357745318175, max_hamiltonian_energy_error = 0.5343804568869883, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9843287379686113, log_density = 3.88911981869048, hamiltonian_energy = -2.7487927047106018, hamiltonian_energy_error = 0.1161954849792659, max_hamiltonian_energy_error = -0.7015652875815874, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 6.5191073194116385, hamiltonian_energy = -2.7280473561519987, hamiltonian_energy_error = -0.40815121474227345, max_hamiltonian_energy_error = -0.8812342957965753, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.865544156848655, log_density = 6.450643646309253, hamiltonian_energy = -3.670799232600436, hamiltonian_energy_error = -0.2154731672569694, max_hamiltonian_energy_error = 0.3014865773487787, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9074334761771474, log_density = 6.56481954566731, hamiltonian_energy = -3.9922345298567685, hamiltonian_energy_error = 0.027303196571264454, max_hamiltonian_energy_error = 0.2021076221315865, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8903251069271189, log_density = 5.5004072987819885, hamiltonian_energy = -4.552078864445282, hamiltonian_energy_error = 0.11337633860885088, max_hamiltonian_energy_error = 0.2508221893771294, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9912159565888375, log_density = 7.187859310826266, hamiltonian_energy = -4.278920348661725, hamiltonian_energy_error = -0.004648937465599801, max_hamiltonian_energy_error = -0.36748771836440675, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9051159079065637, log_density = 7.54112162600234, hamiltonian_energy = -5.347461163565706, hamiltonian_energy_error = -0.20518465237930972, max_hamiltonian_energy_error = 0.28202722186261386, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9584990073333204, log_density = 8.136863939579873, hamiltonian_energy = -5.623075015521661, hamiltonian_energy_error = 0.030402578872087638, max_hamiltonian_energy_error = 0.07760332764359124, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9885852627969841, log_density = 6.788986783234062, hamiltonian_energy = -6.389548203068697, hamiltonian_energy_error = 0.04171891671891448, max_hamiltonian_energy_error = -0.04743017346945688, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9523847821663922, log_density = 7.957431608060796, hamiltonian_energy = -4.204437395213018, hamiltonian_energy_error = 0.014811889444766635, max_hamiltonian_energy_error = 0.13890554841109992, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8557387933612495, log_density = 8.299171545658611, hamiltonian_energy = -6.1145511469982, hamiltonian_energy_error = -0.09779648237889926, max_hamiltonian_energy_error = 0.5124641067654858, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9912230559085297, log_density = 7.941621407873839, hamiltonian_energy = -7.362545990182504, hamiltonian_energy_error = 0.008910792858057626, max_hamiltonian_energy_error = -0.13937100495791288, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8033792258463183, log_density = 6.079114272542883, hamiltonian_energy = -4.513748033486926, hamiltonian_energy_error = 0.3865945779026525, max_hamiltonian_energy_error = 0.48700872039173415, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9931296465668176, log_density = 6.975802478943754, hamiltonian_energy = -5.626793184501151, hamiltonian_energy_error = -0.1633907388518141, max_hamiltonian_energy_error = -0.4223861804358684, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 8.171230896108167, hamiltonian_energy = -6.8567388372973745, hamiltonian_energy_error = -0.21687111286564065, max_hamiltonian_energy_error = -0.31439800599983414, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8142201891505668, log_density = 5.2072781119737535, hamiltonian_energy = -3.893873324056154, hamiltonian_energy_error = 0.39821106574626564, max_hamiltonian_energy_error = 0.43402389484812876, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.936667143492637, log_density = 4.511912734135052, hamiltonian_energy = 0.10943094805956122, hamiltonian_energy_error = -0.10791152948099203, max_hamiltonian_energy_error = 0.20617641278860965, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8675077382981798, log_density = 2.484523685802511, hamiltonian_energy = 2.1041506245211474, hamiltonian_energy_error = 0.28306245631992066, max_hamiltonian_energy_error = 0.5084165141918451, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 8.290604255559629, hamiltonian_energy = -2.2733235403228953, hamiltonian_energy_error = -0.5573077569980893, max_hamiltonian_energy_error = -0.5573077569980893, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9665708278134425, log_density = 8.080534821925626, hamiltonian_energy = -6.587360415980626, hamiltonian_energy_error = -0.027641310557127596, max_hamiltonian_energy_error = -0.2216095935409319, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8377638682422636, log_density = 7.06841018198378, hamiltonian_energy = -4.297076896814013, hamiltonian_energy_error = 0.09825112343170872, max_hamiltonian_energy_error = 0.39197329762375865, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6883056761592241, log_density = 7.009576243395255, hamiltonian_energy = -2.9130691916583578, hamiltonian_energy_error = 0.17411815076426862, max_hamiltonian_energy_error = 0.7118303438463878, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9740623476710956, log_density = 4.522517657929347, hamiltonian_energy = -3.6688632634565668, hamiltonian_energy_error = 0.04343343567922364, max_hamiltonian_energy_error = -0.16211759903185508, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9581706430734945, log_density = 2.665339859110478, hamiltonian_energy = -0.2194463068173218, hamiltonian_energy_error = 0.20562871227718338, max_hamiltonian_energy_error = -0.7173213961140075, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.40874371606530463, log_density = 2.827000294233871, hamiltonian_energy = 2.8326273997273663, hamiltonian_energy_error = 0.04374018088485787, max_hamiltonian_energy_error = 1.9137177067494884, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9117439067427474, log_density = 4.870054528441333, hamiltonian_energy = -1.4147410549937947, hamiltonian_energy_error = -0.19960096766999325, max_hamiltonian_energy_error = -0.6649660777221573, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9519219243918452, log_density = 7.056046095868613, hamiltonian_energy = -1.4501159833810027, hamiltonian_energy_error = -0.4697436198501812, max_hamiltonian_energy_error = -0.4697436198501812, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7598642274654349, log_density = 7.124640267083755, hamiltonian_energy = -2.413700788497744, hamiltonian_energy_error = -0.1901249415161228, max_hamiltonian_energy_error = 0.5654946082080321, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9240417407961711, log_density = 8.049100802840059, hamiltonian_energy = -2.374849320938349, hamiltonian_energy_error = -0.04341089039988777, max_hamiltonian_energy_error = 0.18687132818402752, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8644747433348154, log_density = 5.989566978195327, hamiltonian_energy = -4.520332822621697, hamiltonian_energy_error = -0.03710358491368204, max_hamiltonian_energy_error = 0.4503729721874725, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.954800522863407, log_density = 4.06439071807741, hamiltonian_energy = -3.054290227943066, hamiltonian_energy_error = 0.0973637157183096, max_hamiltonian_energy_error = 0.1027000809637264, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7040174519223706, log_density = -1.9515938580308578, hamiltonian_energy = 3.3058087496782482, hamiltonian_energy_error = 0.6382001722523709, max_hamiltonian_energy_error = 0.6382001722523709, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 6.8407397454923675, hamiltonian_energy = 2.739733244626013, hamiltonian_energy_error = -0.6169183151442068, max_hamiltonian_energy_error = -0.7362170000244346, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.806655092170306, log_density = 7.706006949045671, hamiltonian_energy = -2.6624479514861745, hamiltonian_energy_error = 0.23279666670719434, max_hamiltonian_energy_error = 0.41366771592510876, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7392161522848464, log_density = 8.409860619277023, hamiltonian_energy = -5.70735107955076, hamiltonian_energy_error = -0.07066220691958058, max_hamiltonian_energy_error = 0.8363556959907896, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8716033171463812, log_density = 7.4209791049988105, hamiltonian_energy = -6.851447682821115, hamiltonian_energy_error = 0.1672804441734259, max_hamiltonian_energy_error = 0.23846713453300783, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.990845361058111, log_density = 8.459207929607782, hamiltonian_energy = -6.965347949883099, hamiltonian_energy_error = -0.1922567237522097, max_hamiltonian_energy_error = -0.1922567237522097, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9206314654065523, log_density = 7.739357308842283, hamiltonian_energy = -6.98077202070629, hamiltonian_energy_error = 0.005329855148712426, max_hamiltonian_energy_error = 0.15494722699540997, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.6375478696173869, log_density = 5.283448594816871, hamiltonian_energy = -2.442234794520248, hamiltonian_energy_error = 0.48724825657539483, max_hamiltonian_energy_error = 0.9534329585008496, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7095816678073305, log_density = 2.795587090100291, hamiltonian_energy = -0.8822727591904767, hamiltonian_energy_error = 0.5344455778336519, max_hamiltonian_energy_error = 0.6491085763794082, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 7.8066236834176514, hamiltonian_energy = -0.6469530023542482, hamiltonian_energy_error = -1.0206174535757517, max_hamiltonian_energy_error = -1.0206174535757517, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8394811151334592, log_density = 2.0229542766813147, hamiltonian_energy = -0.4674029254056822, hamiltonian_energy_error = 0.4910495953984735, max_hamiltonian_energy_error = 0.4910495953984735, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 5.628635030188743, hamiltonian_energy = -0.8379269921417318, hamiltonian_energy_error = -0.4318576183207896, max_hamiltonian_energy_error = -0.5865960157506431, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9437028094137645, log_density = 7.913309592928957, hamiltonian_energy = -4.34166725578198, hamiltonian_energy_error = -0.20210267326453035, max_hamiltonian_energy_error = 0.32490642566725025, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9436076802641093, log_density = 7.2984572268803465, hamiltonian_energy = -5.876684978869779, hamiltonian_energy_error = -0.07521319968197115, max_hamiltonian_energy_error = -0.19017289203653753, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8102487172928179, log_density = 7.364874909482694, hamiltonian_energy = -4.548041671166217, hamiltonian_energy_error = -0.021929277555768678, max_hamiltonian_energy_error = 0.6564013322353004, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8653919488282449, log_density = 6.555408636659232, hamiltonian_energy = -4.0736652586365665, hamiltonian_energy_error = 0.11457857582549913, max_hamiltonian_energy_error = 0.367271722157291, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8932752287799323, log_density = 5.582771688036766, hamiltonian_energy = -2.4763502224223584, hamiltonian_energy_error = 0.13409296724306818, max_hamiltonian_energy_error = 0.18141432639424293, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 7.236315550622315, hamiltonian_energy = -5.257974086804505, hamiltonian_energy_error = -0.25074754176346215, max_hamiltonian_energy_error = -0.25074754176346215, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7661980043075497, log_density = 5.9492770711012355, hamiltonian_energy = -5.264463266687008, hamiltonian_energy_error = 0.30022632377631275, max_hamiltonian_energy_error = 0.30022632377631275, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9553789119925825, log_density = 6.857650000924668, hamiltonian_energy = -4.443884351841022, hamiltonian_energy_error = -0.2455683475743191, max_hamiltonian_energy_error = -0.5474596786291084, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9888204631585732, log_density = 6.395055570634675, hamiltonian_energy = -5.334625604896445, hamiltonian_energy_error = -0.0811814641107178, max_hamiltonian_energy_error = -0.09407018873372497, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.989810938763265, log_density = 5.182010472769123, hamiltonian_energy = -3.8109102394577827, hamiltonian_energy_error = 0.020698225997280773, max_hamiltonian_energy_error = -0.14418157623353123, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9772979396472403, log_density = 5.071523102047584, hamiltonian_energy = -4.455466961861579, hamiltonian_energy_error = 0.07357386791266585, max_hamiltonian_energy_error = -0.08347866001818272, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9976649293358908, log_density = 8.422990683354291, hamiltonian_energy = -3.7740373691903706, hamiltonian_energy_error = -0.12079330727112092, max_hamiltonian_energy_error = -0.19367305045290495, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.952140577627935, log_density = 8.081267173895558, hamiltonian_energy = -4.023536756124575, hamiltonian_energy_error = -0.17718891213634258, max_hamiltonian_energy_error = 0.23169383425188084, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8551881590215874, log_density = 6.714690233100065, hamiltonian_energy = -5.5060269053506685, hamiltonian_energy_error = 0.17525614757982044, max_hamiltonian_energy_error = 0.2768114853673529, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9734134005945599, log_density = 8.064409995806052, hamiltonian_energy = -5.5770353103851384, hamiltonian_energy_error = -0.12881616772416304, max_hamiltonian_energy_error = -0.12881616772416304, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9773001677291278, log_density = 8.633641879028536, hamiltonian_energy = -7.187388678416614, hamiltonian_energy_error = -0.010766962223462073, max_hamiltonian_energy_error = 0.06743555861455697, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9943779339034996, log_density = 8.560787095247658, hamiltonian_energy = -7.95206444981182, hamiltonian_energy_error = -0.021558126463492755, max_hamiltonian_energy_error = -0.02789902877900552, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8640258951814902, log_density = 6.56182370182302, hamiltonian_energy = -5.621600867405169, hamiltonian_energy_error = 0.15398499794038667, max_hamiltonian_energy_error = 0.21932758536517927, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.940643063649531, log_density = 7.321094080440963, hamiltonian_energy = -5.310585217712186, hamiltonian_energy_error = -0.1453378725147214, max_hamiltonian_energy_error = 0.15060788462738905, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 7.844031331329388, hamiltonian_energy = -5.930064923651226, hamiltonian_energy_error = -0.06771299093383121, max_hamiltonian_energy_error = -0.08140401121002228, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 0.7866112187005152, log_density = 7.4038973656824645, hamiltonian_energy = -5.707081256450191, hamiltonian_energy_error = 0.035062502605764045, max_hamiltonian_energy_error = 0.48059058380998376, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9731741952286127, log_density = 5.6762404450093396, hamiltonian_energy = -4.653248307214638, hamiltonian_energy_error = 0.052384004996985034, max_hamiltonian_energy_error = -0.06248829341001638, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9558143876044874, log_density = 4.878677428235131, hamiltonian_energy = -1.8669408966956076, hamiltonian_energy_error = 0.050936291623801644, max_hamiltonian_energy_error = -0.34081358194832356, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9332549365250034, log_density = 6.570164749131951, hamiltonian_energy = -2.6336573855516336, hamiltonian_energy_error = -0.22602089310950246, max_hamiltonian_energy_error = -0.5785304811785799, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9936430763656064, log_density = 6.798637733272809, hamiltonian_energy = -5.309803384821108, hamiltonian_energy_error = -0.033406356737264, max_hamiltonian_energy_error = -0.20054455475739452, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9359942091714568, log_density = 2.9839102314263197, hamiltonian_energy = -1.468509128731829, hamiltonian_energy_error = 0.10250816637702331, max_hamiltonian_energy_error = -0.21960654835456417, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9967972641913357, log_density = 7.2900128220282845, hamiltonian_energy = -2.668481367981518, hamiltonian_energy_error = -0.16518022352090656, max_hamiltonian_energy_error = -0.1897687398132919, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9125769880361763, log_density = 5.687269765628303, hamiltonian_energy = -4.381328741709292, hamiltonian_energy_error = 0.1457778627498998, max_hamiltonian_energy_error = 0.25795272047229467, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 13, is_accept = true, acceptance_rate = 0.9338909113492129, log_density = 4.715802168511045, hamiltonian_energy = -3.953082000434934, hamiltonian_energy_error = 0.2806945342413858, max_hamiltonian_energy_error = 0.2806945342413858, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 7.102295364172036, hamiltonian_energy = -3.1388961660109023, hamiltonian_energy_error = -0.2152253894599956, max_hamiltonian_energy_error = -0.44359102152403374, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9878328708435382, log_density = 8.09693183550655, hamiltonian_energy = -6.0300099877183415, hamiltonian_energy_error = -0.2535726539333263, max_hamiltonian_energy_error = -0.2790553405971572, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8281225726145063, log_density = 5.954834053078278, hamiltonian_energy = -4.293164799291932, hamiltonian_energy_error = 0.24633444765164558, max_hamiltonian_energy_error = 0.34659778649052697, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9629502674406045, log_density = 8.35640193755247, hamiltonian_energy = -4.12577823148198, hamiltonian_energy_error = -0.12017480433259653, max_hamiltonian_energy_error = -0.16520553827983075, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9678261157944117, log_density = 7.844856285606296, hamiltonian_energy = -6.7452933487210975, hamiltonian_energy_error = 0.07496844573787698, max_hamiltonian_energy_error = 0.08107126956047317, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.724724525903377, log_density = 5.9694546813600695, hamiltonian_energy = -1.4198612747672454, hamiltonian_energy_error = 0.07827473989554168, max_hamiltonian_energy_error = 0.8079761092595161, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 5.610138344529231, hamiltonian_energy = -4.84242347719939, hamiltonian_energy_error = -0.00692297077067483, max_hamiltonian_energy_error = -0.0696064013587474, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9628709539069504, log_density = 6.222243415437992, hamiltonian_energy = -4.035743915015658, hamiltonian_energy_error = 0.08315404445560404, max_hamiltonian_energy_error = 0.1175138929703099, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9559200980887019, log_density = 7.456357532071488, hamiltonian_energy = -4.509910241550502, hamiltonian_energy_error = -0.1408480823714644, max_hamiltonian_energy_error = -0.1408480823714644, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9944582352464131, log_density = 7.173083496336279, hamiltonian_energy = -5.9631459195286745, hamiltonian_energy_error = -0.05460713508191084, max_hamiltonian_energy_error = -0.08250353831141322, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7658041959306215, log_density = 8.593066785921728, hamiltonian_energy = -4.8614123556456885, hamiltonian_energy_error = -0.027892080443661982, max_hamiltonian_energy_error = 0.5182201164297222, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8213163571753396, log_density = 6.642225296742259, hamiltonian_energy = -5.153255999988524, hamiltonian_energy_error = 0.2553421400642293, max_hamiltonian_energy_error = 0.3690339402638685, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.962011302019376, log_density = 8.204105959777905, hamiltonian_energy = -5.265029297223227, hamiltonian_energy_error = -0.13153639700097308, max_hamiltonian_energy_error = -0.2729609662497081, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9138356939968296, log_density = 5.34504862596736, hamiltonian_energy = -4.6618335248131455, hamiltonian_energy_error = 0.2724227181781922, max_hamiltonian_energy_error = 0.2724227181781922, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6351123761095704, log_density = 6.867215018008711, hamiltonian_energy = -1.4538686482662815, hamiltonian_energy_error = -0.1101396885445105, max_hamiltonian_energy_error = 1.645228064666552, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8747272235882911, log_density = 6.048229654464993, hamiltonian_energy = -3.376293331559979, hamiltonian_energy_error = 0.012941616515209642, max_hamiltonian_energy_error = 0.28728163402585016, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9127182194062563, log_density = 6.493203001557406, hamiltonian_energy = -2.430103421738637, hamiltonian_energy_error = 0.011787548748746879, max_hamiltonian_energy_error = 0.2979420469894163, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9592665219061042, log_density = 5.8045138325040035, hamiltonian_energy = -4.050788328563732, hamiltonian_energy_error = 0.1394599668871832, max_hamiltonian_energy_error = -0.3468471228760359, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9481932173806371, log_density = 6.144032249609078, hamiltonian_energy = -3.234581056559948, hamiltonian_energy_error = -0.06996514870494286, max_hamiltonian_energy_error = -0.2952170951856634, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9549705974197035, log_density = 5.446099810742899, hamiltonian_energy = -3.368215609561708, hamiltonian_energy_error = 0.16099432470260977, max_hamiltonian_energy_error = -0.2679800398389953, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6758249552607405, log_density = 8.456631014480532, hamiltonian_energy = -2.4275389117588233, hamiltonian_energy_error = -0.0714080318529664, max_hamiltonian_energy_error = 0.7555854988216892, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9954942193454788, log_density = 8.687038021351979, hamiltonian_energy = -7.691253871353714, hamiltonian_energy_error = -0.024521024888655596, max_hamiltonian_energy_error = -0.024521024888655596, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9823541534774629, log_density = 8.521896614770643, hamiltonian_energy = -7.8697136294557355, hamiltonian_energy_error = -0.009437160443458659, max_hamiltonian_energy_error = 0.04552525580935729, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7247338639248947, log_density = 5.908460735758929, hamiltonian_energy = -3.711390222408234, hamiltonian_energy_error = 0.2522147427961263, max_hamiltonian_energy_error = 0.4860666446657973, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9391881750508592, log_density = 4.138318751773056, hamiltonian_energy = -1.1520631428209889, hamiltonian_energy_error = -0.156874504446483, max_hamiltonian_energy_error = 0.2646483482526283, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9596790020014639, log_density = 6.725281657719039, hamiltonian_energy = -2.0046880214553724, hamiltonian_energy_error = -0.03565745877289572, max_hamiltonian_energy_error = -0.20468225138826934, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.926215079192899, log_density = 6.457077642830026, hamiltonian_energy = -4.5714882127840974, hamiltonian_energy_error = -0.012925478530308787, max_hamiltonian_energy_error = 0.19825196251482602, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9738392272438298, log_density = 5.112943316270945, hamiltonian_energy = -3.0495232599497712, hamiltonian_energy_error = 0.025260244428297884, max_hamiltonian_energy_error = -0.38792954143363634, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 6.31375121901204, hamiltonian_energy = -3.923690498054018, hamiltonian_energy_error = -0.5305300114887297, max_hamiltonian_energy_error = -0.6562055979471229, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9893041134983328, log_density = 8.223522436221543, hamiltonian_energy = -5.257979048576775, hamiltonian_energy_error = -0.004597381525917932, max_hamiltonian_energy_error = -0.07956489539134459, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9411121239302692, log_density = 8.035419209305608, hamiltonian_energy = -6.869823334915955, hamiltonian_energy_error = 0.044768792678166136, max_hamiltonian_energy_error = 0.11047427056413195, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9533250943242317, log_density = 8.01030299005803, hamiltonian_energy = -6.234674101266345, hamiltonian_energy_error = -0.07078843317618322, max_hamiltonian_energy_error = 0.14870486980785014, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9698525496883964, log_density = 7.225064512479854, hamiltonian_energy = -6.714874680586261, hamiltonian_energy_error = 0.06757276754592301, max_hamiltonian_energy_error = 0.08297014324830698, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9837337380544998, log_density = 7.635715214342831, hamiltonian_energy = -6.254416455296656, hamiltonian_energy_error = 0.025767848035940233, max_hamiltonian_energy_error = -0.07005264498059915, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8560471496943133, log_density = 5.605946177029304, hamiltonian_energy = -2.7503029440034514, hamiltonian_energy_error = 0.06760666871312138, max_hamiltonian_energy_error = 0.34863730085209843, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.997886007368209, log_density = 4.488680724644631, hamiltonian_energy = -4.072142199058976, hamiltonian_energy_error = 0.032223535653266744, max_hamiltonian_energy_error = -0.3507880307924438, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.4530210857965561, log_density = 2.9114601510640377, hamiltonian_energy = 3.014810706740148, hamiltonian_energy_error = 0.8620321175078978, max_hamiltonian_energy_error = 1.3704113470609824, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9788812324175602, log_density = 4.442643176938191, hamiltonian_energy = -0.017587011095733907, hamiltonian_energy_error = -0.03963986322120627, max_hamiltonian_energy_error = -0.5743243674342984, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8010543085165415, log_density = 7.483744118093242, hamiltonian_energy = 0.25755019573783144, hamiltonian_energy_error = -0.3566041437505234, max_hamiltonian_energy_error = 0.4148427116594051, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 7.621838624411724, hamiltonian_energy = -6.860090943934679, hamiltonian_energy_error = -0.03579611416528117, max_hamiltonian_energy_error = -0.21690253667120718, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 8.791673514378207, hamiltonian_energy = -7.593251095270809, hamiltonian_energy_error = -0.18614350360121623, max_hamiltonian_energy_error = -0.18614350360121623, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7637970008178251, log_density = 8.791673514378207, hamiltonian_energy = -6.212244193343987, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 0.39076569273510575, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9973206009108441, log_density = 8.30216480929407, hamiltonian_energy = -7.693214117478118, hamiltonian_energy_error = 0.007497212874673309, max_hamiltonian_energy_error = -0.051011694010493436, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7786612310644352, log_density = 5.953828673397155, hamiltonian_energy = -5.4957471432470655, hamiltonian_energy_error = 0.33553079160409993, max_hamiltonian_energy_error = 0.33553079160409993, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9918016152311815, log_density = 7.469526912413571, hamiltonian_energy = -4.882736213142161, hamiltonian_energy_error = -0.22091585295033855, max_hamiltonian_energy_error = -0.32838505334001944, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9881581428946137, log_density = 7.570572260857496, hamiltonian_energy = -6.56659141114385, hamiltonian_energy_error = -0.05387405655045452, max_hamiltonian_energy_error = -0.16875924073762594, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7779153883106715, log_density = 7.995233105641123, hamiltonian_energy = -5.115390664884176, hamiltonian_energy_error = 0.07961486687556985, max_hamiltonian_energy_error = 0.5645415962234743, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8163540919000987, log_density = 6.119984141585844, hamiltonian_energy = -4.469901775592808, hamiltonian_energy_error = 0.20786061326000294, max_hamiltonian_energy_error = 0.46389548203409703, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.965849600502134, log_density = 4.886041771510868, hamiltonian_energy = -2.504792502050593, hamiltonian_energy_error = 0.04297080157439215, max_hamiltonian_energy_error = -0.281419837808937, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.92472411585752, log_density = 3.240424970135086, hamiltonian_energy = -2.322522347603717, hamiltonian_energy_error = 0.27547213133026416, max_hamiltonian_energy_error = -0.49977800415095874, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9710779466467867, log_density = 3.900026787260007, hamiltonian_energy = -1.3475537230502144, hamiltonian_energy_error = -0.08956423388478174, max_hamiltonian_energy_error = -0.8104361741095183, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9176795502683864, log_density = 7.933065260970535, hamiltonian_energy = -1.9017355495894979, hamiltonian_energy_error = -0.2674532831644405, max_hamiltonian_energy_error = -0.7633872260450034, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.7060979192554311, log_density = 8.844213799880887, hamiltonian_energy = -3.6367325859972244, hamiltonian_energy_error = -0.13617023012917162, max_hamiltonian_energy_error = 0.9068743516090394, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9028648442477506, log_density = 8.203758789753575, hamiltonian_energy = -7.035059789694937, hamiltonian_energy_error = 0.17904368966808626, max_hamiltonian_energy_error = 0.20390517041550815, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 1.0, log_density = 8.682385011376647, hamiltonian_energy = -7.70034693991375, hamiltonian_energy_error = -0.14836620389903032, max_hamiltonian_energy_error = -0.16559758616018705, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9481330187513245, log_density = 7.947982896223397, hamiltonian_energy = -7.792864300661694, hamiltonian_energy_error = 0.0916885929249105, max_hamiltonian_energy_error = 0.0916885929249105, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.5169734055026352, log_density = 7.208559794557431, hamiltonian_energy = -2.0627246731483755, hamiltonian_energy_error = 0.49842477723190726, max_hamiltonian_energy_error = 1.1864773007774563, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8812441290028231, log_density = 4.892238508628727, hamiltonian_energy = -2.4649082278687304, hamiltonian_energy_error = 0.009925213425874269, max_hamiltonian_energy_error = 0.6685955281182892, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.970659685508992, log_density = 6.853977421607139, hamiltonian_energy = -4.475497958610742, hamiltonian_energy_error = -0.09253377729311474, max_hamiltonian_energy_error = -0.09253377729311474, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8406054836379797, log_density = 5.8372893171061495, hamiltonian_energy = -3.9535363548360207, hamiltonian_energy_error = 0.31374021552704345, max_hamiltonian_energy_error = 0.3552920292589845, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9809606487738486, log_density = 7.089090993747595, hamiltonian_energy = -4.969761499711536, hamiltonian_energy_error = -0.10327516737684395, max_hamiltonian_energy_error = -0.29745065783430125, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9342368010888529, log_density = 6.117743263582042, hamiltonian_energy = -3.4105544177122216, hamiltonian_energy_error = -0.13383402714389803, max_hamiltonian_energy_error = 0.32340002747304464, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8414579735875364, log_density = 5.9623056078929295, hamiltonian_energy = -1.917295428987427, hamiltonian_energy_error = 0.10856546764385921, max_hamiltonian_energy_error = 0.3236447286356263, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9821876495867158, log_density = 8.887135260944735, hamiltonian_energy = -4.66102196555619, hamiltonian_energy_error = -0.3130306195063106, max_hamiltonian_energy_error = -0.319750730833408, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8544523769121696, log_density = 7.984174983311512, hamiltonian_energy = -5.029286445024366, hamiltonian_energy_error = -0.1723477026503959, max_hamiltonian_energy_error = 0.35372308607696024, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9960117335348905, log_density = 8.275662365669401, hamiltonian_energy = -6.960436127658781, hamiltonian_energy_error = -0.14803062238952247, max_hamiltonian_energy_error = -0.14803062238952247, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5786622466721669, log_density = 6.167407160481492, hamiltonian_energy = -1.064443788447778, hamiltonian_energy_error = 0.103258705027514, max_hamiltonian_energy_error = 0.9573727472243818, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9949882256668825, log_density = 7.435211049087947, hamiltonian_energy = -5.795375362447341, hamiltonian_energy_error = -0.026677766795476288, max_hamiltonian_energy_error = -0.12887357710180147, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9684996638371481, log_density = 8.689712354118363, hamiltonian_energy = -6.477030262976768, hamiltonian_energy_error = -0.040238796434942437, max_hamiltonian_energy_error = 0.14508513344015395, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8644082674409866, log_density = 5.3848464451451985, hamiltonian_energy = -4.9716253344716925, hamiltonian_energy_error = 0.21527241028184108, max_hamiltonian_energy_error = 0.23965023713309463, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9629842833434964, log_density = 6.728932487305817, hamiltonian_energy = -2.542334433577019, hamiltonian_energy_error = -0.07596312165487173, max_hamiltonian_energy_error = -0.32133116792215244, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9327134875856878, log_density = 6.574038538713571, hamiltonian_energy = -4.498144337463694, hamiltonian_energy_error = 0.06552137648033884, max_hamiltonian_energy_error = -0.2525583610168063, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.956621044398476, log_density = 4.154915482204007, hamiltonian_energy = -3.2924014409959432, hamiltonian_energy_error = 0.17935248262561476, max_hamiltonian_energy_error = 0.17935248262561476, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9363509365169359, log_density = 4.8746684422029745, hamiltonian_energy = -1.7382258783609528, hamiltonian_energy_error = -0.0724782815090732, max_hamiltonian_energy_error = -0.27174723875252926, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9804941557031217, log_density = 5.34986003962932, hamiltonian_energy = -2.819672535641263, hamiltonian_energy_error = -0.13865942051375146, max_hamiltonian_energy_error = -0.14681752188599928, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9920596101974647, log_density = 8.46562455175468, hamiltonian_energy = -4.432340332514167, hamiltonian_energy_error = -0.1441116030500904, max_hamiltonian_energy_error = -0.16834172913177525, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9385458392507652, log_density = 7.014631934757009, hamiltonian_energy = -6.965643703728572, hamiltonian_energy_error = 0.12086221522381813, max_hamiltonian_energy_error = 0.12086221522381813, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9906002409296217, log_density = 7.666609723580585, hamiltonian_energy = -6.707192717190103, hamiltonian_energy_error = 0.02483294308661499, max_hamiltonian_energy_error = -0.20927677623128904, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 8.541963906168789, hamiltonian_energy = -7.032986055895586, hamiltonian_energy_error = -0.163529115183918, max_hamiltonian_energy_error = -0.18766841565206605, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9223950921777861, log_density = 8.009482744506526, hamiltonian_energy = -5.823732445406533, hamiltonian_energy_error = 0.05923232543408474, max_hamiltonian_energy_error = 0.15179008689227214, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.883697805503565, log_density = 6.733404419870293, hamiltonian_energy = -5.249066427447779, hamiltonian_energy_error = 0.14131726496627284, max_hamiltonian_energy_error = 0.21471190430327525, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9388513666931017, log_density = 3.9755574685918926, hamiltonian_energy = -0.8196684789404469, hamiltonian_energy_error = 0.24974427622820672, max_hamiltonian_energy_error = 0.24974427622820672, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9933095417122677, log_density = 7.618256433223284, hamiltonian_energy = -3.150396388361634, hamiltonian_energy_error = -0.40636265421357454, max_hamiltonian_energy_error = -0.40636265421357454, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9306556837046849, log_density = 6.8221224073190605, hamiltonian_energy = -5.701663120887019, hamiltonian_energy_error = 0.03649119112890631, max_hamiltonian_energy_error = 0.17215081031257107, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9360931566262692, log_density = 7.590479160678987, hamiltonian_energy = -5.674477512394166, hamiltonian_energy_error = 0.03890821334887029, max_hamiltonian_energy_error = 0.21686793883214506, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.798659544108421, log_density = 5.849961994611071, hamiltonian_energy = -2.1485880386258587, hamiltonian_energy_error = -0.060557251510680477, max_hamiltonian_energy_error = 0.5037613244878865, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9323323911110789, log_density = 6.293122632096278, hamiltonian_energy = -3.751744002594779, hamiltonian_energy_error = 0.12561779700245168, max_hamiltonian_energy_error = 0.21985896000214566, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9948201665267947, log_density = 7.8001695642392, hamiltonian_energy = -5.356556563650166, hamiltonian_energy_error = -0.096198920433614, max_hamiltonian_energy_error = -0.16916085598403363, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9753022148428859, log_density = 8.354018441740838, hamiltonian_energy = -6.610915707151298, hamiltonian_energy_error = -0.10599572351465003, max_hamiltonian_energy_error = -0.14078800973455508, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9461749506851316, log_density = 8.100403772470779, hamiltonian_energy = -6.140010470242846, hamiltonian_energy_error = -0.017530957154816562, max_hamiltonian_energy_error = 0.13193438571181204, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9173790638279957, log_density = 5.913829628355797, hamiltonian_energy = -4.675356845981396, hamiltonian_energy_error = 0.13625389609825866, max_hamiltonian_energy_error = -0.23302921700073664, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8817164245572923, log_density = 4.541357723333672, hamiltonian_energy = -3.653034300420996, hamiltonian_energy_error = 0.11347473185638801, max_hamiltonian_energy_error = 0.284457251118194, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8940921659562395, log_density = 3.728369061189257, hamiltonian_energy = -1.7766808346843668, hamiltonian_energy_error = -0.06182142480570185, max_hamiltonian_energy_error = 0.39691386687306585, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7130805519385081, log_density = 4.339459425914821, hamiltonian_energy = 1.8999338420269947, hamiltonian_energy_error = 0.38445330778233355, max_hamiltonian_energy_error = 0.727393111599091, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9606420973289421, log_density = 7.386702062648126, hamiltonian_energy = -2.8870667115264643, hamiltonian_energy_error = -0.053554098374276826, max_hamiltonian_energy_error = -0.4161329620292875, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9042060495941363, log_density = 5.6123270032503925, hamiltonian_energy = -4.278283928631994, hamiltonian_energy_error = 0.14853262948790924, max_hamiltonian_energy_error = 0.3106160327228098, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9215099462217407, log_density = 8.100459672865174, hamiltonian_energy = -3.674808762189656, hamiltonian_energy_error = -0.36092763555899054, max_hamiltonian_energy_error = -0.36092763555899054, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9877490041399288, log_density = 8.424571049915851, hamiltonian_energy = -6.974118205796495, hamiltonian_energy_error = -0.02321590683846697, max_hamiltonian_energy_error = -0.08725606562841381, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7824169637427618, log_density = 7.338360324371349, hamiltonian_energy = -4.364134356348948, hamiltonian_energy_error = 0.12624204224320934, max_hamiltonian_energy_error = 0.4527090227514057, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9840619735936981, log_density = 7.412748868547144, hamiltonian_energy = -6.746282457012185, hamiltonian_energy_error = 0.06294981044475279, max_hamiltonian_energy_error = -0.12173478960242523, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8937415144950697, log_density = 4.954058328478265, hamiltonian_energy = -3.9926499344909403, hamiltonian_energy_error = 0.18640899647730214, max_hamiltonian_energy_error = 0.18640899647730214, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8594223640400404, log_density = 8.293001535925697, hamiltonian_energy = -2.6474538923866326, hamiltonian_energy_error = -0.35468938286509966, max_hamiltonian_energy_error = -0.43148597890973406, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9296003974587246, log_density = 7.293478853997227, hamiltonian_energy = -6.6882684195854045, hamiltonian_energy_error = 0.13881285122420906, max_hamiltonian_energy_error = 0.14302751147234272, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8298469793594856, log_density = 4.971181597925925, hamiltonian_energy = -1.7108893893367831, hamiltonian_energy_error = 0.1567577915362124, max_hamiltonian_energy_error = 0.393804023938511, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9598577501483514, log_density = 6.80349076798778, hamiltonian_energy = -3.6280888507052405, hamiltonian_energy_error = -0.26496787942604483, max_hamiltonian_energy_error = -0.26496787942604483, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8365611448176864, log_density = 2.00334345725447, hamiltonian_energy = 2.882405576314894, hamiltonian_energy_error = 0.3691476343064286, max_hamiltonian_energy_error = 0.4479019587821407, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 7.362946922602344, hamiltonian_energy = -0.26104206868668633, hamiltonian_energy_error = -0.5823179069754358, max_hamiltonian_energy_error = -0.774428702862588, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.706268749863461, log_density = 6.409051231168489, hamiltonian_energy = -4.088777745326555, hamiltonian_energy_error = 0.37555130295225503, max_hamiltonian_energy_error = 0.7488884874311941, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9679791264477842, log_density = 6.4980614554203235, hamiltonian_energy = -4.42981469487432, hamiltonian_energy_error = 0.15124858734849234, max_hamiltonian_energy_error = -0.39968501628795217, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8865745428036874, log_density = 6.070768275534343, hamiltonian_energy = -5.058216783670785, hamiltonian_energy_error = 0.11470918202619274, max_hamiltonian_energy_error = -0.3237402831176608, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8242000044256438, log_density = 7.925569310067846, hamiltonian_energy = -3.4256176932606675, hamiltonian_energy_error = -0.5664437686857626, max_hamiltonian_energy_error = 0.7666123234845967, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9264170763654966, log_density = 8.630889066472246, hamiltonian_energy = -6.347507031052201, hamiltonian_energy_error = -0.1522607262679374, max_hamiltonian_energy_error = 0.2672310644232736, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8481496545763266, log_density = 6.7260608895986955, hamiltonian_energy = -5.192336436929252, hamiltonian_energy_error = 0.07752623297071626, max_hamiltonian_energy_error = 0.4046857008643583, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9475528077252056, log_density = 6.704986156584582, hamiltonian_energy = -5.3947633700518, hamiltonian_energy_error = 0.17656700006110437, max_hamiltonian_energy_error = 0.17656700006110437, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9222346536611074, log_density = 4.016382419118045, hamiltonian_energy = -1.182253216981965, hamiltonian_energy_error = 0.07023603639680154, max_hamiltonian_energy_error = 0.1621254383810271, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9646584081506367, log_density = 6.94855826537081, hamiltonian_energy = -2.149341403256294, hamiltonian_energy_error = -0.25780924196025623, max_hamiltonian_energy_error = -0.5460698290545389, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 7.046363751006368, hamiltonian_energy = -5.198076867655259, hamiltonian_energy_error = -0.14260091071363323, max_hamiltonian_energy_error = -0.41024133164200727, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9336246344998573, log_density = 7.3313016540525044, hamiltonian_energy = -4.371633834882199, hamiltonian_energy_error = -0.27408396579545613, max_hamiltonian_energy_error = -0.27408396579545613, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9861082448588072, log_density = 7.1614025174439515, hamiltonian_energy = -6.47498661254499, hamiltonian_energy_error = 0.012107733187667336, max_hamiltonian_energy_error = 0.028949688001835838, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9806524802496467, log_density = 7.413339792829873, hamiltonian_energy = -6.207461900192556, hamiltonian_energy_error = -0.02157300802085871, max_hamiltonian_energy_error = 0.08710473548101749, tree_depth = 4, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.826333358658942, log_density = 5.915477771333528, hamiltonian_energy = -4.863052650381088, hamiltonian_energy_error = 0.17284413655070718, max_hamiltonian_energy_error = 0.2989391801510344, tree_depth = 2, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9929439227245471, log_density = 7.4737575645836625, hamiltonian_energy = -3.943565604384406, hamiltonian_energy_error = -0.10621362169357207, max_hamiltonian_energy_error = -0.26463135228275414, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8118458464277584, log_density = 5.42606108736798, hamiltonian_energy = -3.9906223947411563, hamiltonian_energy_error = 0.20198013023463357, max_hamiltonian_energy_error = 0.3805171724145344, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9252370277162199, log_density = 6.371472622557656, hamiltonian_energy = -2.606580225016437, hamiltonian_energy_error = 0.05057541780485986, max_hamiltonian_energy_error = 0.24851574001146215, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8559453663973375, log_density = 7.919506276847677, hamiltonian_energy = -1.1797847408787794, hamiltonian_energy_error = -0.12340537838370835, max_hamiltonian_energy_error = 0.4930935361677422, tree_depth = 3, numerical_error = false, step_size = 0.1399656430374228, nom_step_size = 0.1399656430374228, is_adapt = false)])","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Inspect posterior distribution over hyperparameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"hypers = map(unpack, samples);\nh_l1 = histogram(getindex.(hypers, :l1); label=\"l1\");\nh_l2 = histogram(getindex.(hypers, :l2); label=\"l2\");\nh_s1 = histogram(getindex.(hypers, :s1); label=\"s1\");\nh_s2 = histogram(getindex.(hypers, :s2); label=\"s2\");\nplot(h_l1, h_l2, h_s1, h_s2; layout=(2, 2))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As expected, the sampler converges to the posterior distribution quickly. One could combine this code with that from the previous sections to make predictions under the posterior over the hyperparameters.","category":"page"},{"location":"examples/getting_started/#Conclusion","page":"Getting Started","title":"Conclusion","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you now know how to fit GPs using Stheno.jl, and to investigate their posterior distributions. It's also straightforward to utilise Stheno.jl inside probabilistic programming frameworks like Soss.jl and Turing.jl (see examples folder).","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Stheno.jl","page":"Home","title":"Stheno.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Stheno.jl is a package for probabilistic programming with Gaussian processes.","category":"page"},{"location":"internals/#Interfaces","page":"Internals","title":"Interfaces","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The primary objects in Stheno are some special subtypes of AbstractGP. There are three primary concrete subtypes of AbstractGP:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP: an atomic Gaussian process given by wrapping an AbstractGP.\nCompositeGP: a Gaussian process composed of other WrappedGPs and CompositeGPs, whose properties are determined recursively from the GPs of which it is composed.\nGaussianProcessProbabilisticProgramme / GPPP: a Gaussian process comprising WrappedGPs and CompositeGPs. This is the primary piece of functionality that users should interact with.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This documentation provides the information necessary to understand the internals of Stheno, and to extend it with custom functionality.","category":"page"},{"location":"internals/#AbstractGP","page":"Internals","title":"AbstractGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP and CompositeGP implement the AbstractGPs.jl API. Please refer to the AbstractGPs.jl docs for more info on this.","category":"page"},{"location":"internals/#diag-methods","page":"Internals","title":"diag methods","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It is crucial for pseudo-point methods, and for the computation of marginal statistics at a reasonable scale, to be able to compute the diagonal of a given covariance matrix in linear time in the size of its inputs. This, in turn, necessitates that the diagonal of a given cross-covariance matrix can also be computed efficiently as the evaluation of covariance matrices often rely on the evaluation of cross-covariance matrices. As such, we have the following functions in addition to the AbstractGPs API implemented for WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Function Brief description\nvar(f, x) diag(cov(f, x))\nvar(f, x, x′) diag(cov(f, x, x′))\nvar(f, f′, x, x′) diag(cov(f, f′, x, x′))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The second and third rows of the table only make sense when length(x) == length(x′), of course.","category":"page"},{"location":"internals/#WrappedGP","page":"Internals","title":"WrappedGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"We can construct a WrappedGP in the following manner:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = wrap(GP(m, k), gpc)\n","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"where m is its MeanFunction, k its Kernel. gpc is a GPC object that handles some book-keeping, and is discussed in more depth below.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The AbstractGP interface is implemented for WrappedGPs in terms of the AbstractGP that they wrap. So if you want a particular behaviour, just make sure that the AbstractGP that you wrap has the functionality you want.","category":"page"},{"location":"internals/#Aside:-Example-Kernel-implementation","page":"Internals","title":"Aside: Example Kernel implementation","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It's straightforward to implement a new kernel yourself: simply following the instructions in KernelFunctions.jl and it'll work fine with GPs in Stheno.jl.","category":"page"},{"location":"internals/#GPC","page":"Internals","title":"GPC","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"This book-keeping object doesn't matter from a user's perspective but, unfortunately, we currently expose it to users. Fortunately, it's straightforward to work with. Say you wish to construct a collection of processes:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS WON'T WORK\nf = GP(mf, kf)\ng = GP(mg, kg)\nh = f + g\n# THIS WON'T WORK","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"You should write","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS GOOD. PLEASE DO THIS\ngpc = GPC()\nf = wrap(GP(mf, kf), gpc)\ng = wrap(GP(mg, kg), gpc)\nh = f + g\n# THIS IS GOOD. PLEASE DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The rule is simple: when constructing GPs that you plan to make interact later in your program, construct them using the same gpc object. For example, DON'T do the following:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS BAD. PLEASE DON'T DO THIS\nf = wrap(GP(mf, kf), GPC())\ng = wrap(GP(mg, kg), GPC())\nh = f + g\n# THIS IS BAD. PLEASE DON'T DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The mistake here is to construct a separate GPC object for each GP. Hopefully, the code errors, but might yield incorrect results.","category":"page"},{"location":"internals/#CompositeGP","page":"Internals","title":"CompositeGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"CompositeGPs are constructed as affine transformations of CompositeGPs and GPs. We describe the implemented transformations below.","category":"page"},{"location":"internals/#Addition","page":"Internals","title":"Addition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Given AbstractGPs f and g, we define","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f + g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"to be the CompositeGP sastisfying h(x) = f(x) + g(x) for all x.","category":"page"},{"location":"internals/#Multiplication","page":"Internals","title":"Multiplication","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Multiplication of AbstractGPs is undefined since the product of two Gaussian random variables is not itself Gaussian. However, we can scale an AbstractGP by either a constant or (deterministic) function.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = c * f\nh = sin * f","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"will both work, and produce the result that h(x) = c * f(x) or h(x) = sin(x) * f(x).","category":"page"},{"location":"internals/#Composition","page":"Internals","title":"Composition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f ∘ g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for some deterministic function g is the composition of f with g. i.e. h(x) = f(g(x)).","category":"page"},{"location":"internals/#cross","page":"Internals","title":"cross","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = cross([f, g])","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for WrappedGPs and CompositeGPs f and g. Think of cross as having stacked f and g together, so that you can work with their joint.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"For example, if you wanted to sample jointly from f and g at locations x_f and x_g, you could write something like","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"fg = cross([f, g])\nx_fg = BlockData([x_f, x_g])\nrand(fg(x_fg, 1e-6))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This particular function isn't part of the user-facing API because it isn't generally needed. It is, however, used extensively in the implementation of the GaussianProcessProbabilisticProgramme.","category":"page"},{"location":"internals/#GPPP","page":"Internals","title":"GPPP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The GaussianProcessProbabilisticProgramme is another AbstractGP which enables provides a thin layer of convenience functionality on top of WrappedGPs and CompositeGPs, and is the primary way in which it is intended that users will interact with this package.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP like this","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"is equivalent to manually constructing a GPPP using WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"gpc = GPC()\nf1 = wrap(GP(SEKernel()), gpc)\nf2 = wrap(GP(SEKernel()), gpc)\nf3 = f1 + f2\nf = Stheno.GPPP((f1=f1, f2=f2, f3=f3), gpc)","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"If you take a look at the gaussian_process_probabilistic_programming.jl source, you'll see that it's essentially just the above, and an implementation of the AbstractGPs API on top of a GPPP.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP is a single GP on an extended input domain: (Image: )","category":"page"}]
}
