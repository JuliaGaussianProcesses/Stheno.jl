var documenterSearchIndex = {"docs":
[{"location":"api/#Public-API","page":"API","title":"Public API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = Stheno","category":"page"},{"location":"api/#GPPP","page":"API","title":"GPPP","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Core functionality for working with GPPPs.","category":"page"},{"location":"api/","page":"API","title":"API","text":"@gppp\nGPPPInput\nBlockData\nsplit","category":"page"},{"location":"api/#Stheno.@gppp","page":"API","title":"Stheno.@gppp","text":"@gppp(model_expression)\n\nConstruct a GaussianProcessProbabilisticProgramme (GPPP) from a code snippet.\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = GPPPInput(:f3, randn(5))\n\ny = rand(f(x, 0.1))\n\nlogpdf(f(x, 0.1), y) ≈ elbo(f(x, 0.1), y, f(x, 1e-9))\n\n# output\n\ntrue\n\n\n\n\n\n","category":"macro"},{"location":"api/#Stheno.GPPPInput","page":"API","title":"Stheno.GPPPInput","text":"GPPPInput(p, x::AbstractVector)\n\nAn collection of inputs for a GPPP. p indicates which process the vector x should be extracted from. The required type of p is determined by the type of the keys in the GPPP indexed.\n\njulia> x = [1.0, 1.5, 0.3];\n\njulia> v = GPPPInput(:a, x)\n3-element GPPPInput{Symbol, Float64, Vector{Float64}}:\n (:a, 1.0)\n (:a, 1.5)\n (:a, 0.3)\n\njulia> v isa AbstractVector{Tuple{Symbol, Float64}}\ntrue\n\njulia> v == map(x_ -> (:a, x_), x)\ntrue\n\n\n\n\n\n","category":"type"},{"location":"api/#Stheno.BlockData","page":"API","title":"Stheno.BlockData","text":"BlockData{T, TV<:AbstractVector{T}, TX<:AbstractVector{TV}} <: AbstractVector{T}\n\nA strictly ordered collection of AbstractVectors, representing a ragged array of data.\n\nVery useful when working with GPPPs. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\n# Specify a `BlockData` set that can be used to index into\n# the `f2` and `f3` processes in `f`.\nx = BlockData(\n    GPPPInput(:f2, randn(4)),\n    GPPPINput(:f3, randn(3)),\n)\n\n# Index into `f` at the input.\nf(x)\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.split","page":"API","title":"Base.split","text":"Base.split(x::BlockData, Y::AbstractVecOrMat)\n\nConvenience functionality to make working with the output of operations on GPPPs easier. Splits up the rows of Y according to the sizes of the data in x.\n\njulia> Y = vcat(randn(5, 3), randn(4, 3));\n\njulia> x = BlockData(randn(5), randn(4));\n\njulia> Y1, Y2 = split(x, Y);\n\njulia> Y1 == Y[1:5, :]\ntrue\n\njulia> Y2 == Y[6:end, :]\ntrue\n\nWorks with any BlockData, so blocks can e.g. be GPPPInputs. This is particularly helpful for working with the output from rand and marginals from a GPPP indexed at BlockData. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = BlockData(GPPPInput(:f2, randn(3)), GPPPInput(:f3, randn(4)))\ny = rand(f(x))\ny2, y3 = split(x, y)\n\nFunctionality also works with any AbstractVector.\n\n\n\n\n\n","category":"function"},{"location":"api/#Building-GPPPs","page":"API","title":"Building GPPPs","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"If in doubt about what any of these transformations can do, play around with them!","category":"page"},{"location":"api/","page":"API","title":"API","text":"+\n*\nstretch\nperiodic\nshift\nselect","category":"page"},{"location":"api/#Base.:+","page":"API","title":"Base.:+","text":"+(fa::AbstractGP, fb::AbstractGP)\n\nProduces an AbstractGP f satisfying f(x) = fa(x) + fb(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.:*","page":"API","title":"Base.:*","text":"*(f, g::AbstractGP)\n\nProduce an AbstractGP h satisfying to h(x) = f(x) * g(x), for some deterministic function f.\n\nIf f isa Real, then h(x) = f * g(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.stretch","page":"API","title":"Stheno.stretch","text":"stretch(f::AbstractGP, l::Union{AbstractVecOrMat{<:Real}, Real})\n\nThis is the primary mechanism by which to introduce length scales to your programme.\n\nIf l isa Real or l isa AbstractMatrix{<:Real}, stretch(f, l)(x) == f(l * x) for any input x. In the l isa Real case, this is equivalent to scaling the length scale by 1 / l.\n\nl isa AbstractVector{<:Real} is equivalent to stretch(f, Diagonal(l)).\n\nEquivalent to f ∘ Stretch(l).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.periodic","page":"API","title":"Stheno.periodic","text":"periodic(g::AbstractGP, f::Real)\n\nProduce an AbstractGP with period f.\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.shift","page":"API","title":"Stheno.shift","text":"shift(f::AbstractGP, a::Real)\nshift(f::AbstractGP, a::AbstractVector{<:Real})\n\nReturns the GP g given by g(x) = f(x - a)\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.select","page":"API","title":"Stheno.select","text":"select(f::AbstractGP, idx)\n\nSelect the dimensions of the input to f given by idx.\n\n\n\n\n\n","category":"function"},{"location":"input_types/#Input-Types","page":"Input Types","title":"Input Types","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Stheno enables the user to handle any type of input domain they wish and provides a common API that users must implement when considering a new way of representing input data to ensure that the package knows how to handle them appropriately.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"This interface has now been adopted throughout the JuliaGaussianProcesses ecosystem.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Discussed below is this interface's core assumptions, a detailed account of a couple of important concrete input types.","category":"page"},{"location":"input_types/#The-Central-Assumption","page":"Input Types","title":"The Central Assumption","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"The central assumption made in all user-facing and internal functions is this: when a collection of inputs are required, they subtype AbstractVector. For example, x isa AbstractVector when indexing into a GP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f(x, σ²)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"or computing the covariance matrix associated with a kernel:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"kernelmatrix(SqExponentialKernel(), x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When computing the cross-covariance matrix between two GPs","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"cov(f, g, x_f, x_g)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_f and x_g must be AbstractVectors. All other operations involving collections of inputs have the same restrictions. Always AbstractVectors.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"For example, this means that when handling multi-dimensional inputs stored in a Matrix they must be wrapped so that the package knows to treat them as a vector — more on this in below in D-dimensional Euclidean Spaces.","category":"page"},{"location":"input_types/#Dimensional-Euclidean-Space","page":"Input Types","title":"1-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When constructing a GP whose domain is the real-line, for example when using a GP to solve some kind of time-series problem, it is sufficient to work with Vector{<:Real}s of inputs. As such, the following is completely valid:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"using Stheno: GPC\nf = wrap(GP(SqExponentialKernel()), GPC())\nx = randn(10)\nf(x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"It is also possible to work with other AbstractArrays that represent a vector of 1-dimensional points, e.g.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = range(-5.0, 5.0; length=100)\nf(x)","category":"page"},{"location":"input_types/#D-Dimensional-Euclidean-Space","page":"Input Types","title":"D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Many applications of interest involve more than a single input-dimension, such as spatio-temporal modeling or Machine Learning tasks. For these cases, we provide ColVecs <: AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"X_data = randn(5, 100)\nX = ColVecs(X_data)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"tells Stheno that it should treat each column of X_data as a vector-valued input. Phrased differently, X is an AbstractVector{T} where T <: Vector{<:Real}, which stores its elements in memory as a dense matrix. This approach has the advantage of making it completely explicit how Stheno treats a matrix of data, and also simplifies quite a bit of the internal machinery, as all vectors of inputs can be assumed to be a subtype of AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If, on the other hand, each row of X_data corresponds to a vector-valued input, use RowVecs(X_data).","category":"page"},{"location":"input_types/#Structure-in-D-Dimensional-Euclidean-Space","page":"Input Types","title":"Structure in D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Consider a rectilinear grid of points in D-dimensional Euclidean space. Such grids of points can be represented in a more memory-efficient manner than can arbitrarily locate sets of points. Moreover, this structure can be exploited to accelerate inference for certain types of problems dramatically. Other such examples exist e.g., uniform grids in N-dimensions, and can be exploited to more efficiently represent input data and to accelerate inference.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Work to exploit these kinds of structures is on-going at the time of writing and will be documented before merging.","category":"page"},{"location":"input_types/#GPPPInput-and-BlockData","page":"Input Types","title":"GPPPInput and BlockData","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"A GPPPInput is a special kind of AbstractVector, specifically designed for GPPPs. Given a GPPP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"a GPPPInput like","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_ = randn(5)\nx = GPPPInput(:f3, x_)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"applied to f","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"fx = f(x, 0.1)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"constructs a FiniteGP comprising f3 at x_. GPPPInput(:f2, x_) and GPPPInput(:f1, x_) are the analogues for f1 and f2.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If you wish to refer to multiple processes in f at the same time, use a BlockData. For example","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = BlockData(GPPPInput(:f2, x_), GPPPInput(:f3, x_))","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"would pull out a 10-dimensional FiniteGP, the first 5 dimensions being f2 at x_, the last 5 dimensions being f3 at x_.","category":"page"},{"location":"kernel_design/#Kernel-Design","page":"Kernel Design","title":"Kernel Design","text":"","category":"section"},{"location":"kernel_design/","page":"Kernel Design","title":"Kernel Design","text":"Please refer to KernelFunctions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"EditURL = \"https://github.com/JuliaGaussianProcesses/Stheno.jl/blob/master/examples/getting_started/script.jl\"","category":"page"},{"location":"examples/getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Here we document how to do some basic stuff, including learning and inference in kernel parameters, with Stheno.jl. To do this, we that makes use of a variety of packages from the Julia ecosystem. In particular, we'll make use of","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl to perform Bayesian inference in our model parameters,\nOptim.jl for point-estimates of our model parameters,\nParameterHandling.jl to make it easy to work with our model's parameters, and to ensure that it plays nicely with Optim and AdvancedHMC,\nZygote.jl to compute gradients.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This guide assumes that you know roughly what's going on conceptually with GPs. If you're new to Gaussian processes, an excellent introduction can be found in either this video lecture or this one.","category":"page"},{"location":"examples/getting_started/#Exact-Inference-in-a-GP-in-2-Minutes","page":"Getting Started","title":"Exact Inference in a GP in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This is only a slightly more interesting version of the first example on the README. It's slightly more interesting in that we give the kernels some learnable parameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Import the packages we'll need for this bit of the demo.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AbstractGPs\nusing LinearAlgebra\nusing Stheno\nusing Plots","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Short length-scale and small variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l1 = 0.4\ns1 = 0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Long length-scale and larger variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l2 = 5.0\ns2 = 1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Specify a GaussianProcessProbabilisticProgramme object, which is itself a GP built from other GPs.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f = @gppp let\n    f1 = s1 * stretch(GP(Matern52Kernel()), 1 / l1)\n    f2 = s2 * stretch(GP(SEKernel()), 1 / l2)\n    f3 = f1 + f2\nend;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Generate a sample from f3, one of the processes in f, at some random input locations. Add some iid observation noise, with zero-mean and variance 0.05.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"const x = GPPPInput(:f3, collect(range(-5.0, 5.0; length=100)));\nσ²_n = 0.02;\nfx = f(x, σ²_n);\nconst y = rand(fx);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Compute the log marginal likelihood of this observation, just because we can.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"logpdf(fx, y)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"21.842069120658664","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"fx should be thought of as \"f at x\", and is just as a multivariate Normal distribution, with zero mean and covariance matrix","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"heatmap(cov(f, x) + σ²_n * I)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As such samples can be drawn from it, and the log probability any particular value under it can be computed, in the same way that you would an MvNormal from Distributions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can visualise x and y with Plots.jl","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"plt = plot();\nscatter!(plt, x.x, y; color=:red, label=\"\");\ndisplay(plt)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"It's straightforward to compute the posterior over f:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior = posterior(fx, y);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior is another GP, the posterior over f given noisy observations y at inputs x.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The plotting recipes from AbstractGPs.jl can be utilised to easily print whichever component of the GPPP is needed.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"x_plot = range(-7.0, 7.0; length=1000);\nxp = GPPPInput(:f3, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp);\n    ribbon_scale=3, label=\"\", color=:blue, fillalpha=0.2, linewidth=2,\n)\nplot!(\n    plt, x_plot, rand(f_posterior(xp, 1e-9), 10);\n    samples=10, markersize=1, alpha=0.3, label=\"\", color=:blue,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you've built a simple GP probabilistic programme, performed inference in it, and looked at the posterior. We've only looked at one component of it though – we could look at others. Consider f2:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"xp2 = GPPPInput(:f2, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp2);\n    ribbon_scale=3, label=\"\", color=:red, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior(xp2, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:red,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-NelderMead-in-2-Minutes","page":"Getting Started","title":"Fit a GP with NelderMead in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Stheno.jl is slightly unusual in that it declines to provide a fit or train function. Why is this? In short, because there's really no need – the ecosystem now contains everything that is needed to easily do this yourself. By declining to insist on an interface, Stheno.jl is able to interact with a wide array of tools, that you can use in whichever way you please.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Optim requires that you provide an objective function with a single Vector{<:Real} parameter for most of its optimisers. We'll use ParameterHandling.jl to build one of these in a way that doesn't involve manually writing code to convert between a structured, human-readable, representation of our parameters (in a NamedTuple) and a Vector{Float64}.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"First, we'll put the model from before into a function:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function build_model(θ::NamedTuple)\n    return @gppp let\n        f1 = θ.s1 * stretch(GP(SEKernel()), 1 / θ.l1)\n        f2 = θ.s2 * stretch(GP(SEKernel()), 1 / θ.l2)\n        f3 = f1 + f2\n    end\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"build_model (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've assumed that the parameters will be provided as a NamedTuple, so let's build one and check that the model can be constructed:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\n\nθ = (\n    # Short length-scale and small variance.\n    l1 = positive(0.4),\n    s1 = positive(0.2),\n\n    # Long length-scale and larger variance.\n    l2 = positive(5.0),\n    s2 = positive(1.0),\n\n    # Observation noise variance -- we'll be learning this as well.\n    s_noise = positive(0.1),\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(l1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-0.9162907691270586, Bijectors.Exp{0}(), 1.4901161193847656e-8), s1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.6094379869399091, Bijectors.Exp{0}(), 1.4901161193847656e-8), l2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(1.6094379094538682, Bijectors.Exp{0}(), 1.4901161193847656e-8), s2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.490116130486996e-8, Bijectors.Exp{0}(), 1.4901161193847656e-8), s_noise = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-2.3025852420056685, Bijectors.Exp{0}(), 1.4901161193847656e-8))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've used ParameterHandling.jls positive constraint to ensure that all of the parameters remain positive during optimisation. Note that there's no magic here, and Optim knows nothing about positive. Rather, ParameterHandling knows how to make sure that Optim will optimise the log of the parameters which we want to be positive.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can make this happen with the following:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\nusing ParameterHandling: value, flatten\n\nθ_flat_init, unflatten = flatten(θ);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Concrete types used for clarity only.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"unpack = value ∘ unflatten;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now easily define a function which accepts the flat form of the parameters, and return the negative log marginal likelihood (nlml) of the parameters θ:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function nlml(θ::NamedTuple)\n    f = build_model(θ)\n    return -logpdf(f(x, θ.s_noise + 1e-6), y)\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"nlml (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can use any gradient-free optimisation technique from Optim.jl to find the parameters whose negative log marginal likelihood is locally minimal:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Optim\nresults = Optim.optimize(\n    nlml ∘ unpack,\n    θ_flat_init + randn(length(θ_flat_init)),\n    NelderMead(),\n)\nθ_opt = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Note that we just added some noise to the initial values to make the optimisation more interesting.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now use this to construct the posterior GP and look at the posterior in comparison to the true posterior with the known hyperparameters","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_opt = build_model(θ_opt);\nf_posterior_opt = posterior(f_opt(x, θ_opt.s_noise), y);\nms_opt = marginals(f_posterior_opt(xp));\nplot!(\n    plt, x_plot, mean.(ms_opt);\n    ribbon=3std.(ms_opt), label=\"\", color=:green, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_opt(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:green,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Of course, the exact posterior has not been recovered because the exact hyperparameters cannot be expected to be recovered given a finite amount of data over a finite width window.","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-BFGS-in-2-minutes","page":"Getting Started","title":"Fit a GP with BFGS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The BFGS algorithm is generally the preferred choice when optimising the hyperparameters of fairly simple GPs. It requires access to the gradient of our nlml function, which can be straightforwardly obtained via reverse-mode algorithmic differentiation, which is provided by Zygote.jl:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Zygote: gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This will probably take a while to get going as Zygote needs to compile.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"results = Optim.optimize(\n    nlml ∘ unpack,\n    θ->gradient(nlml ∘ unpack, θ)[1],\n    θ_flat_init + 0.1 * randn(length(θ_flat_init)),\n    BFGS(),\n    Optim.Options(\n        show_trace=true,\n    );\n    inplace=false,\n)\nθ_bfgs = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Iter     Function value   Gradient norm \n     0     7.241598e+00     3.193592e+01\n * time: 0.025216102600097656\n     1    -8.735460e+00     2.485048e+01\n * time: 1.5734920501708984\n     2    -1.059988e+01     2.316135e+01\n * time: 1.5848791599273682\n     3    -1.700222e+01     1.710387e+01\n * time: 1.607532024383545\n     4    -1.996278e+01     8.052418e+00\n * time: 1.619297981262207\n     5    -2.059487e+01     7.061876e+00\n * time: 1.630951166152954\n     6    -2.143119e+01     5.496898e+00\n * time: 1.642657995223999\n     7    -2.198332e+01     4.555739e+00\n * time: 1.6541900634765625\n     8    -2.242549e+01     1.361610e+00\n * time: 1.6913070678710938\n     9    -2.247269e+01     4.683865e-01\n * time: 1.702881097793579\n    10    -2.249633e+01     7.894514e-02\n * time: 1.7201621532440186\n    11    -2.249701e+01     2.492152e-02\n * time: 1.7318120002746582\n    12    -2.249704e+01     6.070668e-03\n * time: 1.7433130741119385\n    13    -2.249704e+01     4.798981e-04\n * time: 1.7549450397491455\n    14    -2.249704e+01     2.684476e-05\n * time: 1.7718839645385742\n    15    -2.249704e+01     1.752846e-08\n * time: 1.7833969593048096\n    16    -2.249704e+01     1.142595e-10\n * time: 1.7946791648864746\n","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Once more visualising the results:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_bfgs = build_model(θ_bfgs);\nf_posterior_bfgs = posterior(f_bfgs(x, θ_bfgs.s_noise), y);\nms_bfgs = marginals(f_posterior_bfgs(xp));\nplot!(\n    plt, x_plot, mean.(ms_bfgs);\n    ribbon=3std.(ms_bfgs), label=\"\", color=:orange, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_bfgs(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:orange,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Notice that the two optimisers produce (almost) indistinguishable results.","category":"page"},{"location":"examples/getting_started/#Inference-with-NUTS-in-2-minutes","page":"Getting Started","title":"Inference with NUTS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl provides a state-of-the-art implementation of the No-U-Turns sampler, which we can use to perform approximate Bayesian inference in the hyperparameters of the GP. This is slightly longer than the previous examples, but it's all set up associated with AdvancedHMC, which is literally a copy-paste from that package's README:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AdvancedHMC, Zygote","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define the log marginal joint density function and its gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"ℓπ(θ_flat) = -nlml(unpack(θ_flat)) - 0.5 * sum(abs2, θ_flat)\nfunction ∂ℓπ∂θ(θ_flat)\n    lml, back = Zygote.pullback(ℓπ, θ_flat)\n    ∂θ_flat = first(back(1.0))\n    return lml, ∂θ_flat\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"∂ℓπ∂θ (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Sampling parameter settings","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"n_samples, n_adapts = 500, 20","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(500, 20)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perturb the initialisation a little bit.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"θ0_flat = θ_flat_init + 0.1 * randn(length(θ_flat_init))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"5-element Vector{Float64}:\n -0.7810281011412661\n -1.655955401884174\n  1.5691172097429704\n  0.19991804285845374\n -2.326393524842397","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define metric space, Hamiltonian, sampling method and adaptor","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"metric = DiagEuclideanMetric(5)\nh = Hamiltonian(metric, ℓπ, ∂ℓπ∂θ)\nint = Leapfrog(find_good_eps(h, θ0_flat))\nprop = NUTS{MultinomialTS, GeneralisedNoUTurn}(int)\nadaptor = StanHMCAdaptor(n_adapts, Preconditioner(metric), NesterovDualAveraging(0.8, int.ϵ))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"StanHMCAdaptor(\n    pc=WelfordVar,\n    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.4),\n    init_buffer=75, term_buffer=50, window_size=25,\n    state=window(76, -30), window_splits()\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perform inference.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"samples, stats = sample(h, prop, θ0_flat, n_samples, adaptor, n_adapts; progress=true)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"([[-1.3955161312001947, -1.917174721988406, 0.5675561242315743, -0.1609078596849494, -4.49397624637895], [-1.3955161312001947, -1.917174721988406, 0.5675561242315743, -0.1609078596849494, -4.49397624637895], [-0.6915502043166231, -1.747261995792959, 1.2111979892364821, -0.8720896373333474, -3.916362771259313], [-0.7346669260251083, -1.3897182417164238, 0.4996284643932979, -0.3059476964012381, -3.65473020644987], [0.06767521298448238, -1.2514670768260365, -0.9098070465746887, -1.4883720832267828, -3.7459612534824878], [0.8953582206534112, -0.44762483830196187, -0.46004429090595444, -1.4876874319495392, -3.6386036932316603], [0.6953880572093076, -0.9088974409912608, -0.38656559494542414, -0.8008786091561457, -3.486663810196462], [0.8663320605214353, 0.02589834091032412, -0.44738128487904527, -1.1455129148067564, -3.52900503299985], [1.0889012166400447, 0.2626061360906814, -0.3613942073821264, -1.1215615478943775, -3.7118120537220145], [-0.4100387719853612, -2.249412054325577, -0.06166551613651801, -0.5149647712202594, -3.629686781747415], [-0.4652624428719694, -1.5434604903117297, -0.35582543174972264, -0.34733389615661736, -3.908749992342656], [0.01535353555211686, -1.21392579137332, -0.3326792599268553, -0.7200198449998096, -3.476962381422974], [0.01535353555211686, -1.21392579137332, -0.3326792599268553, -0.7200198449998096, -3.476962381422974], [0.14393676405615302, -1.373697219889008, -0.32516603899683694, -0.6012160489394912, -3.7349390930646327], [0.028414522360057655, -0.9863329365062017, -0.317132613496749, -0.9410276037230074, -3.7000345460613238], [0.16222155785230608, -0.9467906779680495, -0.2901580064683123, -0.9421366475647899, -3.7513263400197063], [1.2547414559487053, 0.055686381904412635, -0.9136088726144364, -2.0166580814544335, -3.844568622520157], [1.6590380327659489, 0.19033607083733056, -0.45140731358563174, -1.8774651667445288, -3.459943512070595], [1.5005481463195665, 0.5136073592336972, -0.7951949601793575, -1.8507788853725569, -3.583085172084467], [1.4624377792730623, 0.8236238114044636, -1.0749052509163308, -1.7622774123626144, -3.7392443024487556], [1.5660584447302286, 0.22408461804440277, -0.8967666244022282, -1.8128398419618228, -3.657214838761137], [1.3957479505885364, 0.17906094387703203, -1.2672645173831247, -1.572806050452044, -3.846509939299222], [1.1162456456726912, -0.02604882655296993, -0.6796398918621996, -1.1196699308888203, -3.7014729680072067], [1.2772239501476261, 0.043939243171538515, -1.048650022974663, -2.1591554806840003, -3.6388429226271466], [1.45765344394414, 0.1663734032323407, -0.9548750212981392, -1.477667468795348, -3.729186686375761], [1.2949524150837728, 0.2520292748890261, -1.3572889740022696, -1.8450338687988665, -3.731220776318242], [0.7806165373530827, -1.1273197333157676, -0.31671927586290133, -0.14212179118474977, -3.691106535903762], [-0.3304119465246823, -1.533625304584449, -0.196106988793872, -0.20570479550941997, -3.5036074825388988], [-0.3047036590378078, -1.6525589899227109, -0.08891161300543406, -0.5588227255315767, -3.6955189880788346], [0.2604382580915672, -0.6349114367785983, -0.5697864744906076, -1.1066735103585466, -3.618607976754058], [0.8034810352021792, -0.8397529372956569, -0.43039597619994674, -0.693707516445065, -3.955819507037603], [0.8685137697936789, -0.7326717003888243, -0.28572251314822195, -0.870713429156184, -3.6345580718589994], [1.0038669284551631, -0.8215027806134855, -0.45883738683551284, -1.0112816101183708, -3.7102652801289855], [1.0065765303245036, -0.9013045219445304, -0.5785028564978493, -1.1819193307978355, -3.8993830250566743], [0.9628530057882843, -0.18269093075181203, -0.48920213382968053, -1.1726513527322229, -3.7359024069450792], [0.6882977887697811, -0.24516833783984435, -0.4452063375438162, -1.167936355131854, -3.670166919210857], [0.11448153650778675, -0.7605372421397023, -0.33291262887660045, -0.7957042398541265, -3.807787164783548], [0.4208038833826925, -1.5467248978365533, -0.24845884819971903, -0.6761352269000824, -3.7372836235477394], [0.11599172436768672, -1.2783858481906079, -0.4039562201916952, -0.8260649891126512, -3.6848002658653694], [0.1267358114861719, -1.2455133493094175, -0.3696539379406365, -0.9664460509234789, -3.8133005416644887], [0.4016798447062509, -1.220490354545806, -0.5528230417004006, -1.2002905668364436, -3.6332897568761457], [0.5857483283947706, -1.1525028602443732, -0.4055326362228082, -0.7635038356320775, -4.061095365675722], [0.857035167053938, -0.7719288883823542, -0.293973630780275, -1.1405990442633231, -3.3003887626706043], [0.6814734843464572, -0.7094682184031147, -0.10762776703788318, -0.39000690035850744, -3.9064009649548086], [-0.0061175602353328445, -0.48514240558269206, -0.3270190498556147, -0.7474095584548925, -3.5914423618704414], [-0.12963964949866696, -0.23216941008566416, -0.09477277454235078, -0.41373315857646376, -3.612688777355002], [-0.5276795273150832, -1.4450267016402574, 1.2028279046788508, -0.6243322218738226, -3.617137497409441], [-0.3094550735366908, -0.7775294153984836, 0.5691524397584444, -0.3226095303604978, -3.663759934695844], [-0.5320735983287126, -1.3121432623423286, 0.76673087007319, -0.30033587506313714, -3.7386727771674657], [-0.5881974168899917, -1.3946796195600126, 1.1918719494117895, -0.7449115179877652, -3.683449752817669], [-0.23993679159680886, -1.0713853316140223, 0.47635465232221075, 0.02904829452277484, -3.565014554987663], [-0.3063456888120609, -1.0329324562468345, 0.6371040826592828, -0.07801165864747225, -3.5971302154131735], [-0.4657350692999172, -0.8145575658808875, 0.6172841442949345, -1.8166599334467708, -3.8071825957202687], [-0.17821034404804892, -1.1306436923357894, 0.7136971327588058, -2.084873796742074, -3.3960845418757764], [-0.15077613614822483, -0.661326901787088, 0.0049582262711178465, -1.0695592292248612, -3.254204650398677], [-0.24274511381825864, -0.4412511652176114, 0.127373353090912, -0.7629184076550506, -3.9048587601221416], [-0.47529037946745123, -1.1755267252186516, 0.36948473137610005, -1.238038825617244, -3.8203936906491283], [0.036487410269438164, -0.9105164730746179, -0.24130935410740464, -0.26382165465095186, -3.5849320367105277], [-0.41590168115739967, -0.8004130562130122, 0.33608693676486556, -1.0416256789399934, -3.8104783172643026], [-1.1607208510528597, -1.7487668344015557, 1.535235818529031, 0.11514481501384267, -3.7476606612644714], [-1.058832705632652, -1.7145606237304125, 1.5061483466744359, 0.2506844776325142, -3.7956908253806394], [-1.1214681511395157, -1.611625014460847, 1.7518296115651217, 0.3772401789219261, -3.7690173762420036], [-1.0354914232217838, -1.826315094131055, 0.7188960250181395, -0.43706933762576816, -3.803622619133138], [-1.0269063073510463, -1.9212423466211206, 0.5981386770581866, -0.39649284333644447, -3.7045169255046635], [-0.14941174291441073, -0.06560895778805137, 0.6958477640595615, -0.7428237427025564, -3.756940298821035], [-0.077907398843803, -0.06916930262153215, 0.797078652993781, -0.7377113234011101, -4.053038474725701], [-0.15792257847770405, -0.12393743143279345, 0.2832084508496489, -0.9130517889255318, -3.6646362361988265], [0.04376741416221353, -0.39982411694502784, -0.3832628954428854, -0.7291098995401534, -3.47095199250277], [-0.437290587780716, -1.2754451315785182, 0.4539258486591009, -1.0804515416636347, -3.4457761933422133], [-0.9658534031420002, -1.756414661062365, 1.3256084653316613, -0.26721155430534504, -3.974549482846437], [-1.2853077670717838, -1.910641677919726, 1.043986618610788, -0.4045646499578194, -3.694637333832331], [-0.6636787045520286, -1.3192645811064205, 0.5863301048710724, -0.7863320231637705, -3.6661477775811977], [-0.04668756667616275, -0.6072761449216136, -0.20129312330282664, -0.8646679251989045, -3.664387094459798], [-0.61716368106578, -0.982204714499586, 0.20246490882517365, -0.913809276658976, -3.653234285913262], [-0.9940620538304166, -1.470079065127763, 1.4804507810003245, 0.039202748809540375, -3.9070928306834514], [-1.097489863878856, -1.4246199563311686, 1.695270672423906, -0.07993671026852225, -3.91225002920835], [-1.600227130933566, -2.039244167831807, 1.0388556233794743, 0.24488868393123187, -3.827439842156481], [-0.45071598434586563, -0.7456107437579094, 1.0906460204224766, 1.290245570203208, -3.6859967866082823], [-0.2771968401052094, -1.0027284218971768, 1.4003092917259545, 0.6497864531218607, -3.479515274462186], [-0.5148630219861936, -1.278815417495151, 1.472939856986609, 0.42545090330383517, -3.424429060409734], [-0.5020069594122747, -1.397249829376364, 1.5222536284307233, 0.29775348211630154, -3.5311257561510727], [-0.5821931920473569, -1.134408309323643, 1.0706889382751037, 0.1664183085806461, -3.7775916866224852], [-0.6030330530948473, -1.219911181092033, 1.2831515962827282, -0.35260762153345226, -3.884851947149792], [1.097779299109823, -0.5413121301754173, -0.49512111874065023, -0.9467582110117878, -3.872020147743647], [0.3019225364260989, -0.842039074054183, -0.5414943398272577, -1.1294234071496816, -3.7004761454108563], [0.6778952463644142, -0.6713845692623721, -0.4787414366807055, -1.1742127181121056, -3.568766898685062], [-0.6031084603017057, -1.4682413846429734, 1.324525114493604, 0.08629073504485413, -3.6291346636791526], [-0.8772122288842436, -1.5427099546564056, 0.5329275422410861, -0.7748838238186095, -3.6312852628441], [-1.1463089361024361, -1.943799096753744, 0.4642658029596958, -0.2240489569118993, -3.8487899477327465], [-1.5238514289266296, -1.6852683428642872, 0.9731890906515783, -0.6742320203618256, -3.7956111841424147], [-1.17695290762542, -1.814961233692403, 1.1410846399646748, -0.3822569650012571, -3.752071028924848], [-0.4939349215145395, -0.8118723712023084, 0.7165074744651446, -0.5229115220945797, -3.8896512918779056], [-1.0356802434749268, -1.372788014162265, 0.30780061773202816, -0.9601190789328553, -3.984518234032498], [-0.761028242535783, -1.5785519057075295, 0.5504932296478777, -0.9480326259601939, -3.8054318076222455], [-0.7384483937534296, -1.5393811028147069, 1.196984268076765, -0.4671612190091574, -3.552785058223205], [-0.8036003320451671, -1.6155864724531694, 0.8518134641477807, -0.6669009522768431, -3.867329785316246], [-0.43606773453475556, -1.1742233784884428, 0.8885888907833348, -0.44990621255179664, -3.542751030717476], [-0.30873025532506915, -1.0661590816717512, 0.8962881554852602, -0.6769346338261881, -3.7732716686542926], [-0.34618012011193067, -1.2620502943482332, 0.7265629473894115, 0.26431331519904677, -3.9656156125120563], [-0.7842729047611182, -1.1633839572728186, 1.0102794961649284, 0.2246083294140097, -3.6784808875815], [-0.679163209480782, -1.556051015268276, 1.2245854645559542, -0.4026946095858159, -3.7104529944516074], [-0.34556618399510447, -0.9373315492106612, 0.4881014897179433, -0.2345660037657869, -3.481680865951602], [-0.23318340438938143, -0.5960627244313794, 0.3878187801404047, -0.28488470024552515, -3.8250189812327218], [-0.5990672324110545, -1.2441266130806061, 1.1348850169012485, -0.8579847209764689, -3.725680297307728], [-0.972768343220858, -1.521609286017015, 1.0400123266293075, -0.6165337537840742, -3.657500155499767], [-0.4646500083844617, -1.7505787457548496, 1.2329307314669435, -0.1812740583845793, -3.825578192933394], [-0.99941780044404, -1.2158177713693015, 0.8920780699268606, -0.04019887385792588, -3.8692277894384923], [-0.5660778734945554, -1.4601514103692774, 0.9908952774706999, -0.5350452484498884, -3.4212586823241278], [-0.5364877158778482, -1.3262614801208041, 0.763838398118824, -0.6177540058730188, -3.1990165529954324], [-0.2319904294661687, -0.7442001229958821, -0.21760473706061054, -1.1017720052593958, -3.891154829980467], [0.33395889198503503, -1.3548709932685066, -0.6523737421463717, -1.044697753646926, -3.5651373015704806], [-0.3213642048663934, -0.8014960899292023, -0.51576057647292, -0.858216574741558, -3.803787263538888], [-0.6270093373918533, -1.011642677882089, 0.16508318485331092, -1.3552980577156595, -3.550432201493607], [1.027101789657246, -0.9922022514181598, -0.917068219390531, -1.3046302876280473, -3.868505321580229], [1.0544727889261425, 0.4306906218950173, -0.7521955020225721, -1.3705022777033946, -3.734987253394106], [0.8974370369330583, 0.6863247072473699, -0.5122251609934632, -1.9373174424015347, -3.6584247631579734], [1.2913157216983842, -0.9905127663294332, -0.729822286377507, -1.3063190946063385, -3.8799303530498035], [-0.06171955734723483, -0.8458818849663183, -0.5644245133308261, -0.9851858728776453, -3.2884627218027616], [-0.45494727202739854, -0.7402799548173811, 0.27423490819144114, -1.2079914651393457, -3.553991978192593], [-0.2063010465996836, -0.7363288298037199, -0.1106620723876115, -1.5110810160248493, -3.7880655906558296], [-0.3366422200358939, -0.8431847060377669, 0.07353291557170512, -0.890440486062759, -3.6227156958900713], [-0.6089759655380356, -1.4874070638389236, 1.6143411135867651, 0.10494001352131609, -3.731825119032054], [-0.7777592828753541, -1.6966162092077541, 1.4271285565495453, 0.46065155045379497, -3.6603710323455743], [-0.6048683811483966, -1.4868004878548082, 1.8259759521766465, 0.3495982574872174, -3.6866812091089756], [-0.7790584264325008, -1.6196180931509019, 1.6467846058920097, -0.002341208353204373, -3.8028127790888067], [-0.5016027440504182, -1.7150926050050286, 1.5091237284938335, 0.19257069041116948, -3.4414659514636687], [-0.1652283694043051, -0.5658557478377304, 0.5170472595031921, -0.649571848544334, -3.4506839745777773], [-0.2784277045841192, -0.6996883191815104, 0.7047875852065797, -0.6032267264491356, -3.3440889186006135], [-0.42088530229317267, -1.1038513334632905, 0.10045292595703392, -0.7145308409345786, -3.8898936977738443], [-0.055904688598477095, -0.6905158374512613, -0.2270404611453148, -0.8564230949518123, -3.530166523443292], [0.3743496239658367, -0.6942288323126212, -0.10824707440274653, -0.12271282992093806, -4.045105666748099], [0.6539682303660106, -1.4605511849115698, -0.07543139118960486, -0.36027294202763815, -3.335343784878601], [0.9983136876057042, 0.21574263896406462, -0.503155242644385, -1.5718413663251616, -3.8466570255780397], [1.391046402410201, 0.06793351829774025, -0.5751845001573619, -0.9638135082176378, -3.5683387174912164], [1.1195787154441814, 0.3636097046844833, -0.3739844592468452, -1.2034096994965162, -3.737197346137021], [1.0301035462524326, 0.2908661765519331, -0.42224023530799437, -1.378670109381008, -4.104372024247899], [0.9751297127087866, -0.385499816138407, -0.6911606995157971, -1.2813023464271391, -3.25405787844477], [0.9102833850421042, -0.06144783372476223, -0.5547830302077851, -1.119115929479934, -3.2036426004963117], [0.9412915762616897, -0.0052960461605386505, -0.5320503514646362, -1.163197175788315, -3.402412251723913], [1.2606501847859137, 0.16389149575171238, -0.3924307572141983, -0.9347267863548104, -4.025056618568265], [1.2966250100689012, 0.13103255595369648, -0.2768184636432049, -0.9632920025774834, -3.851587503610032], [1.2611745509185877, 0.5388410442234928, -0.484002808642272, -0.6947460569192785, -3.724321977677718], [1.4114064097066021, 1.0934203261497615, -0.5422925463375137, -0.9110388628717244, -3.627133431503373], [1.5673943527479295, 0.26406602403768825, -0.34857246545625975, -1.2783033841224467, -3.8736286470254893], [0.7354527422353621, 0.09332228634237336, -0.9397818229717025, -1.464384765032803, -3.5739786935705307], [1.1594029149601994, 0.9996528235897425, -0.2861908542245795, -1.2146491254047227, -3.8412347626624603], [2.1420853411434044, 0.7159721995007858, -0.22694715039017518, -0.8535338011123618, -3.568680210180011], [1.4537711787544283, 0.5445486091360624, -0.525362809240565, -0.8460237597597099, -3.89606360301823], [1.7600683735820912, 0.7577809386489612, -1.084159885252754, -1.9185804066033416, -3.433061574778565], [0.7259139719124197, -0.6957976775272712, -1.1115089338277473, -1.1896473895563726, -3.8586151822712753], [0.33995690036707815, -0.9842132169258718, -1.3052207694286893, -2.2652222871892396, -3.470140533664427], [1.4454776948723729, 0.3714322197198615, -0.5505783613307769, -0.6286189913962773, -3.652638459599982], [1.2483480205824415, -0.41771470680183337, -0.618734638277748, -1.8766032383237263, -3.5615215724853844], [1.2128737828974538, -0.5519174934848206, -0.9807284123618123, -1.3628591156247039, -3.5601850881502064], [1.2030524214015623, -0.47570459098823303, -0.4974872650832104, -1.3042861743705843, -3.951419558751699], [0.7452392173986448, -0.19539256690193174, -0.2437109029005167, -0.6465963377451172, -3.441104900496129], [1.1233008232333583, -0.013205355317516543, -0.4906116432106581, -1.071608378327898, -3.40024053784106], [1.373513279641085, 0.14319772439944756, -0.7406787805705829, -1.0718120182874864, -3.725776826423293], [1.3092718912014751, -0.2811890384168961, -0.6584117607157125, -1.7174521271017926, -3.483183463936739], [1.1243346105459113, -0.5664385028724517, -0.9296056846664378, -1.5697383426151958, -3.9499226822836926], [0.9387893291193163, -0.09228584444147216, -1.1316938969459263, -1.5289708736306236, -3.70760227195159], [1.449097857579003, 0.018632256916051346, -0.6255675158297574, -1.3264406887465001, -3.599490965932385], [0.8243565572406265, -0.31421994437412193, -0.4504114227660029, -0.9020370930257198, -3.3970017070824143], [1.1282919514728462, -0.9792876661395932, -0.5733965090001581, -1.6715461484130676, -3.9300602341130775], [0.19165701327383322, -0.6254092377491683, 0.03060342183737272, -0.053889933609758106, -3.4140059951476744], [0.4002288590225511, 0.36485524395305236, -0.7864005992475787, -1.5993410921819577, -3.7179819404445764], [1.2482287637396885, -0.27545490636050673, -0.6466478462666922, -1.536690118118966, -3.7136975695990904], [1.1519264631550048, -0.44089583602184446, -0.6024789184296013, -1.5032983683888383, -3.61821182228339], [0.8056740481836326, -0.5388227922388583, -0.21443600300784205, -0.5557137450489185, -3.762895661226869], [0.32244044767276014, -0.6581298354224325, -0.34672804686497805, -0.5378825908701338, -3.91562168197097], [1.2845839607180682, -0.2392281022478662, -1.1059387019032378, -1.4569172952876728, -3.5552577052360195], [0.7000487316630716, -0.3276170655177316, -0.9784392249185457, -1.926570465010827, -3.6661914601597383], [0.698414722707075, -0.5889898102714812, -0.7767111014829395, -1.5179660821985057, -3.67526481637024], [0.630150642051442, -0.26241473883065397, -0.5566002105285777, -1.6326995102584572, -3.5177186566784133], [0.8297935737526864, -0.8839169753138272, -0.3222208173937227, -1.015276636198493, -3.58931679990964], [0.21986436456871256, -1.8059417243028288, -0.24447435306578516, -0.686965431677171, -3.9697517568611906], [0.7981805066776432, -1.0654825461668882, -0.4740736220108936, -1.5029426268532937, -3.5726357914589557], [0.7440789021841118, -1.0194614634453394, -0.9032357068229004, -1.5052726544161823, -3.6855616288509214], [0.9893125586393727, -0.8607234468522256, -0.7699611366091781, -1.4657090209394215, -3.800273311681845], [0.43449127351216466, -0.6019220639357578, -0.7244904520698913, -1.8645091162927476, -3.4905333697495182], [0.9471207490207311, -0.2106203770600428, -0.5537450118060991, -0.8449980307373686, -3.8280847678873235], [0.8411232282203727, -0.5859515439268279, -0.20539163154025541, -0.4019280760059086, -3.5557415076054344], [0.8599157146570783, -0.6941797180639354, -1.0001090798852805, -1.718560901260545, -3.4999513074768362], [1.311020634320452, 0.005550234532746064, -0.9657171764314002, -1.7851528793724818, -3.669755335838464], [1.3670513541630298, -0.19624527624200852, -0.6044191086002698, -1.8267423679142316, -3.544401923597855], [1.009111059151406, 0.012527217326071548, -0.8292944224499386, -1.2886181765040927, -3.8563289300759416], [0.4170423552882029, -0.7200277627948612, -0.6919530626626192, -1.1779713429173115, -3.43523776401391], [1.0437777301028874, -0.18741081758793157, -0.8387658114732175, -1.29448718293994, -3.9402914601060846], [0.8653085353129931, -0.5015378950715444, -0.4483860543284184, -1.461427529148029, -3.4264396856763173], [1.4613706323086177, -0.48154652284354366, -0.9454613781949892, -1.347125899775044, -4.156023247706076], [0.8248988523997662, -0.38756991989779527, -0.9748373144685248, -1.427279469662006, -3.6333745452201103], [1.0460370700899975, -0.18543360629133843, -0.43532224033596567, -1.6258191774221167, -3.61496273708297], [1.0936457781854396, -0.13238747327043263, -0.4689836003816459, -1.6197568640221447, -3.531484309475372], [1.6386544528960962, -0.4860953892819248, -0.6531725958695132, -1.2782800213239056, -3.737795830183423], [0.34345341553543096, 0.08166473415807629, -0.19976434183721464, -0.5205648007488677, -3.9327862752175426], [0.8642356900159228, -0.8600278914758137, -0.27170431810059537, -0.7363283811086654, -3.4906861016330257], [0.3280010375296887, -0.42725160351023433, -0.23552620470016963, -0.6239398704466125, -3.874036413927824], [0.5381728672961548, -1.0875904962238034, -0.7710499756164004, -1.74614005467066, -3.8505020678556634], [0.19475973860233872, -0.5020456197802854, -1.4720793545529407, -1.5837200380503753, -3.749677969361398], [-0.4366273607005553, -0.8693374181652451, 0.42793633558473415, -2.5018810938738314, -3.6179170859220178], [-0.2262969324102552, -1.077334591485037, 0.3605595457284671, -2.5111871057749595, -3.637112134156219], [-0.2844513228860122, -0.5366825648667706, -0.23600637962747095, -1.6416763491747741, -3.679062522768185], [-0.5189774860850901, -1.1004935918361014, 0.47125841895819376, -0.11126836443334547, -3.6213165379943812], [-0.13565085019564083, -0.6880050331108629, 0.9085485360210781, -0.5113350976929997, -3.787786565880253], [-0.10660167589498212, -0.6206024613390745, 0.6442005037649068, -1.6183973909000604, -3.3886868238212178], [-0.48307218820681247, -1.1610311562746225, 0.3641563880252253, -1.7380894767053319, -3.8990644544796234], [-0.3233568044949493, -0.8399530947907804, 0.7287048661541775, -0.13965026637323488, -3.8221207101673054], [-0.35294087759272436, -0.8049481204158281, 0.44972337831278375, 0.26968983968737625, -3.7986752580781005], [-0.33140104669567955, -0.7607616597475844, 0.22190142717302694, -1.1445922528322794, -3.9676070134481662], [-0.4643605780451436, -1.4522398154918323, 0.9356189960852432, -0.45504893373692856, -3.492166330027367], [-1.2487682601745003, -1.78480944883274, 1.6106346538758698, 0.46327631233888283, -4.095580886310426], [-0.124682627733681, -0.15943831773598485, -0.38614983610799236, -1.1291793090688893, -3.844997269552076], [1.29500854178619, -1.2021219513851429, -0.5324443118307438, -0.8818619133677615, -3.8413540990906463], [0.5688097457206017, -1.2650630719605582, -0.4793039450213814, -0.7464406435455063, -3.813432280526227], [0.22444863800313522, -0.45309536793898186, -0.7121646697901787, -1.2886421348621215, -3.5420462752065474], [0.1747816806446103, -0.7723273045913194, -0.3300418445132878, -1.1491307486293758, -3.895590328607842], [0.3129039574273841, -1.144754725287364, -0.15031157442450951, -0.7449732479775293, -3.7138584732474573], [1.920508207030083, 0.6729338114443912, -0.6507290810699913, -2.009968874364231, -3.6866188939360667], [1.6717961438162001, 0.7047043448700959, -0.6495092583155626, -2.0338017903833774, -3.9210292285751667], [1.6304996115734833, 0.7017360967781046, -1.0775491432104158, -1.8903309354084352, -3.9213596929459547], [1.5099810959036066, 0.5382237407410639, -0.8242454701807125, -1.5310920361020184, -3.4935466882122546], [1.118551166706125, -0.24620848923715333, -1.3068135867017632, -1.528066814896685, -3.6264827783257547], [1.194665175759762, -0.2618180419656799, -1.0106352889326473, -2.0313198995536252, -3.5720728652166374], [0.7183762942288174, -0.2833930260034768, -0.4483895921469616, -0.7590583665704197, -3.825050760966099], [0.4850414537133745, -0.4353211374404842, -0.6918500545192884, -1.4410841220024353, -3.6360910986219226], [0.28217132622259444, -0.9455514888586596, -0.5168840646270602, -1.109979598571534, -3.6858920337851657], [0.29943952482851127, -1.4616812316165444, -0.467180061967922, -1.1098021075262254, -3.6975742492538903], [0.26367221167116495, -1.4991714385443597, -0.2928776205861057, -1.1984901118300995, -3.8060037626823497], [0.45074055440589383, -1.3356992044848937, -0.617034768338136, -0.9401158337990679, -3.5980335867330093], [-0.6053827486894574, -0.8330279026664968, 0.20941972405196418, -0.8287687635493456, -3.8133846403193035], [-0.3923957510371784, -1.0361142856891061, 0.24570195949100143, -0.7362961390700457, -3.9288320405304957], [-0.6360943345477872, -1.1798025343296568, 0.7795172567337666, -0.8802358910894332, -3.9315718299343794], [-0.3519223756846932, -1.1868134310469023, 1.4610539833484137, -0.9848843828252191, -3.5230239856361423], [-0.5963526879089966, -1.1088658700662974, 0.623424949911822, -0.36444016824748304, -4.014049886964068], [-0.4582492802172138, -1.2816288949343873, 0.7394917090521647, -0.42956460360830573, -3.6930374368241354], [-0.46593154244766066, -1.0405731754307024, 0.9533144636375314, 0.2596371481503904, -3.5800007609981597], [-0.5428909388942178, -1.1536058796404616, 0.3912537117537539, -0.9629466507263984, -3.79213313913501], [0.06740493923938776, -0.16958672963693133, -0.49767546003657165, -1.0790723195201304, -3.7813175222538162], [0.6611701219313109, -0.18403574970575265, -0.4100543302544765, -0.6995296435971151, -3.6119937097552297], [0.7425037081322482, 0.1014872849939962, -0.8215561669775584, -1.4360242588956218, -3.830589345408683], [0.9492449443865902, -0.2357492796989082, -0.9432332554076921, -1.7378171680664392, -3.6355222941973975], [1.136366501134406, -1.0556378972804314, -0.8002279096235847, -1.7126539489472594, -3.778776938015295], [0.9525555726912975, -0.149102963270825, -0.601386076470359, -1.3227666543473378, -3.637087313383144], [1.1489524728556155, 0.2101850483085462, -0.347896206486471, -1.2752841518397036, -3.798943739621171], [1.3723672341709123, 5.82280269106894e-5, -0.640382901712174, -1.3086197545349687, -3.633100444654232], [0.9296385228500802, -0.31700680513665425, -0.5178853610284748, -1.348669708169029, -3.5128812883535483], [0.9043672265555911, -0.39007373681405166, -0.9568613224150914, -1.9335661227380474, -3.8472680849641017], [1.152468895316707, -0.42042746686132926, -0.8020636521040899, -1.5496566124620734, -3.739025231841124], [0.9854957972642309, -0.22038017576688493, -0.6000126851115463, -2.088089997981709, -3.439002116290412], [0.7983583476323649, -0.7724230194656514, -0.3922232436764009, -0.42859966020041884, -3.5418122315468903], [-0.13502192907168784, -1.5272269966048524, -0.3438563745838764, -0.15188703467120993, -3.793795136281401], [-0.06570325310105346, -1.6809621527902265, 0.03996193650639074, -0.1519723191650264, -3.8793108796952307], [0.4651198754783811, -1.3463418627819197, -0.36830723316601155, -0.954754858587479, -3.440938404432159], [-0.2821148908136648, -1.8463863199354007, -0.17686963715643084, -0.37884325428485277, -3.5620016098190295], [-0.2482905051271582, -1.7616650558223568, -0.2832546708459013, -0.5265652171475848, -3.430409377649756], [-0.193322764033229, -1.3907676822781951, -0.23320240024640518, -0.7355741285382063, -3.842994078603271], [0.2730679468414703, -0.9984113965022126, -0.5889380493430495, -0.6487623429509285, -3.482684492782463], [0.24422876997304274, -0.7629134848054847, -0.4913634881005085, -1.7001356995112142, -3.9823271886118867], [0.18120946218679979, -0.6928697264519043, -0.5539646962602065, -1.6437973211130448, -4.0342593897246175], [0.379436467168683, -0.3626620411314047, -0.9771255420455878, -1.7245911301481938, -3.644598174522441], [1.0266524323461765, -0.7815887637208776, -0.36848829329150956, -1.3775066434486418, -3.732816790786554], [0.5423911895137431, -0.32278337559706594, -1.3472320564265337, -1.8167867408908105, -3.714527686261595], [0.8937752581027011, -0.8317292108322556, -0.44898002839270973, -0.7048481570396568, -3.7111868128033927], [1.5229546720731661, -0.6288361360998354, -0.24190363132230883, -0.8452754711601514, -3.8320067748945887], [-0.619948461929131, -1.3223488576938558, -0.3510997187986093, -0.8429886817558752, -3.679241928888282], [-0.23877842589160922, -0.5917773332000377, 2.1219210952525787, -0.07637923870793051, -3.7367494470284885], [-0.3749416127425469, -0.8391712052703106, 1.544326469836848, -1.100497833904761, -3.651575905117186], [-0.12706034263373148, -0.33618841380287734, 0.3298199948544203, -1.892912698178348, -3.6163997660082963], [-0.7816372943138874, -1.4359060398471946, 0.6457040296114439, -0.5152983524342731, -3.6398949895235684], [-0.6976625225217784, -1.7905616218402347, 1.3266821773467368, -0.5555667229736065, -3.709405808134024], [-0.43833349542882616, -1.0044224104105812, 0.6351991138431432, -0.8124284076565483, -3.6805800314179415], [-0.29017994810382114, -0.8588767204611655, 0.720745200825413, -0.9041063181416571, -3.3726010947362495], [-0.29413367718763234, -0.7932117694909098, 0.744007398377187, -0.8650291703582141, -3.6144215187346975], [-0.5536252845042511, -1.2369781113171885, 0.39478368679978826, -0.37531123765295793, -3.422823977013161], [-0.1878041666227869, -0.6372042962445787, 0.42395524320000505, -1.5117643297933574, -3.4233313604071243], [-0.6138715551694234, -1.1638708456977467, 0.384933735950443, -1.5602186151841846, -3.4825916413278986], [-0.8100628062614362, -2.196866659302734, 0.7230281578673543, -0.34840274238302926, -3.3542858312697166], [-0.6409450200071241, -1.7165307402760772, 0.6149801811603404, -0.2897453322978234, -3.5970803578337116], [-0.3189679101727666, -0.744982205221878, 0.9775179186258156, -0.5068469935642034, -3.852061089849343], [-0.2577698896238326, -0.6599549759671527, 1.217359746166946, -0.422184685109954, -3.6520392636663064], [-0.3160520391136379, -0.7520455003228904, 1.0406554708449514, -0.4894269759588011, -3.3888368921318], [-0.3548882902933477, -0.6437962177816567, 1.1071836863282385, -0.810803807692642, -3.9952447886067226], [-0.0815226678187891, -0.48816499477600583, 1.787939001525888, -2.323036143495552, -3.729451312400283], [-0.3722663293616324, -0.723339182780207, 0.1710269216385959, -1.7353692321218743, -4.027107596703627], [-0.25140612869332024, -0.7786268188086742, 0.30644099928637025, -1.760948414855487, -3.9415001180549707], [-0.19119695088216454, -0.8064226982587043, 1.4594398514039686, -1.7329650862424764, -3.54385080343117], [-0.3694286138759795, -0.4908068892817952, 0.6339419502986205, -1.2355966002868954, -3.5321027659433915], [-1.8479010830170812, -1.979341723710753, 0.9896249844562395, -0.08965372749635571, -3.8430537315907443], [-1.5143067739939116, -1.7686849115122405, 1.3736121514001698, -0.026839365310497132, -3.6754324344391964], [-1.2221068281566834, -1.821403575204722, 1.0058451861945004, 0.11670740956755854, -3.9648611264438256], [-0.15959708430431613, -0.9482550842142539, 0.7726883542782623, -0.511097033798912, -3.452682074895071], [-1.4675631609480297, -2.055221485896806, 0.8005344025905188, -0.44259880027114856, -3.990754048332242], [-0.7247933944646712, -1.4495678633243614, 1.593392559195121, 0.13686359768208062, -3.793365211201397], [-0.728225976679043, -1.4490427423095482, 1.3723159064895314, 0.43592554197793204, -3.5238332185948416], [-0.5959631174381763, -1.6996520872869567, 0.8564538304389879, -0.3450184794893612, -3.7129547946124557], [-0.9599338204304486, -1.7788150805579073, 0.9592928390634292, -0.24266011761628647, -3.6088380054576557], [-0.6899946177467184, -1.8649235571204836, 0.9711950262979122, -0.5124527716430255, -3.4427561482323457], [-0.8369998893092531, -1.3229575150417099, 0.9141265115596634, -0.014212942415805382, -3.924497243454418], [-0.5275854051202086, -1.7394962862690684, 1.079238400130329, -0.5276562940487002, -3.6268963543881285], [-0.7843079445097279, -1.2021055615528193, 0.7972552770368073, -0.4144311179128777, -3.691467915410752], [-0.7258864102255452, -1.4031128138303386, 0.7053240201368439, -0.340921314318595, -3.6808273382284544], [-0.934360176348566, -1.7008650429785983, 1.0554772782566975, -0.9910829135106267, -3.6436711656083323], [-0.9775723992298635, -1.7989590344668438, 0.9914455470689749, -1.020414376737817, -3.635109401839085], [-0.7977346651062621, -1.5453305565096978, 0.3895068241400803, -0.8774697207280884, -3.6736415088867895], [-0.4283030616999843, -1.0967798714787613, 0.802707107150992, -1.0595448529213276, -3.4003915917644107], [-0.46891630871965967, -0.8872150202641883, 0.8958920870436681, -0.1994951861819191, -3.995591152778567], [-0.26504264978595377, -1.114146184848859, 0.8682206212552391, -0.5844570002216013, -3.390301247560108], [-0.44606837567029817, -0.7546348028361398, 0.33892508135201654, -0.12272548494025713, -3.8425367161081523], [-0.5764340473772166, -1.171143621158086, 1.4848597462868658, -0.5709377927729856, -3.843683645412375], [-0.20761209819751586, -0.46256929216207665, 0.5885010934596677, -1.0831470174276476, -3.917989012529849], [-0.7354163258886328, -1.54802249697493, 0.7036268844076801, -0.5612626754258293, -3.9153163680492478], [-0.4800821426358119, -1.7114576580978793, 0.511972881254183, -0.5115617914606521, -3.7726937742145266], [-0.8754981353746434, -1.307300558469966, 0.6341716006637013, -0.35257031197115246, -3.449698092102538], [-0.634856849649438, -1.5326429941112694, 0.9466818434946491, -0.6447837793245063, -3.8835237671120484], [-0.790815842263018, -1.7845524094946552, 0.5218820880045192, -0.7843246452661666, -3.6870636686543996], [-0.9550515722404771, -1.854645327724396, 0.7983669862825534, -0.8782978155682409, -3.511241914918125], [-0.2577081981176636, -0.9161577355548343, 0.6500444295468619, -0.3659908864159238, -3.8119669371493674], [-0.5246796901047633, -0.9615072114196177, 0.8744503195561073, -0.508182608377691, -3.8783178737508046], [-0.3711200534333936, -1.3843006449901356, 0.8300211496069834, -0.6612216344957272, -3.712529084801045], [-0.7201488573301863, -1.5520228699822007, 0.7979515701767068, -0.7781944953932411, -3.7593499655105456], [-0.5123239375332895, -1.6164283506494628, 0.8480434616171728, -0.6332264184023211, -3.6228147491776204], [-0.5094749769235511, -1.033319239261081, 0.869699654547293, -0.7650765190007947, -3.762495531290575], [-0.6898129505967109, -1.4859086543076938, 1.0599737811683874, 0.4387459991196545, -3.7042031984730808], [-0.4692578830397454, -1.1979745236972503, 1.448079324255141, 0.17803782177065045, -3.7156382144287923], [-0.6949726725449731, -1.5430110811584665, 0.9614043838009423, -0.29652670586791974, -3.65327821339664], [-0.9054871162400014, -1.9549421426595195, 1.2453792648053152, -0.39170571583972524, -3.6889167876531874], [-1.0868257428499102, -1.7677891742199852, 1.2651327455319683, -0.38143990617292356, -3.5382959869785604], [-0.3832520523956647, -0.43076665331174185, 0.4195944634786979, -0.6868496710015337, -3.7365294609431468], [0.06104106960283627, -1.5080182637005901, -0.11464149473871002, -0.2435133323018708, -3.778968254007765], [0.0190139821084131, -1.5806193254489131, -0.2970972202067373, -0.17815431796470987, -3.674964716422876], [0.6628165375096956, -1.4391740664322006, -0.7860838834724332, -1.1731185620793363, -3.759377544183219], [-0.2493234325812603, -1.144592243857043, 0.4528918775918854, -1.6747529893631559, -3.53430425988228], [-0.5244160700811255, -0.7193067587229125, 0.20163811404494109, -0.9297502491889512, -3.9465384218466255], [-0.10667733906532467, -0.5843526430142288, 0.24584308776865654, -0.44752991182668755, -3.5291371278329193], [0.14045748766741883, -0.7876029770457412, -1.0004003310118126, -1.9482880331253554, -3.327327597094085], [1.2431140163606627, -0.621703092033006, -0.969126293237464, -1.6635741439461194, -4.142732839483369], [0.9204724389975751, -0.4710461191724403, -0.9075263174704603, -1.7824771651128923, -3.656382996099176], [1.180050745045715, -0.6322675598409678, -0.45500179271585284, -1.408797667856193, -3.689823663744108], [0.981009184046423, -0.43766898609630955, -0.8296791239034181, -1.4761673801035868, -3.7176511415375115], [1.3416052271280499, -0.3224577655235601, -0.48012555610347757, -1.3579946508132683, -3.726002451603943], [1.1711322242885405, 0.27934139433579575, -1.4359409278709852, -1.6400406109048933, -3.551463957656036], [1.026128201465434, -0.9890457552613128, -0.48806930465835563, -1.0035946276140686, -3.4792624355173865], [1.5499929018169012, 0.54289307244912, -0.27492219135511264, -0.5656351370672532, -3.7419327488376988], [1.599876532652125, 0.6669483518683045, -0.12831087116753997, -0.5986803417153098, -3.68371605908396], [1.5962574205519255, 0.5865621781933948, -0.40608812217054246, -0.7028912549647993, -4.042288502845247], [1.7321459126116192, 1.0298373709524298, -0.9054396540288403, -1.8418754800628867, -4.066569528456818], [1.855285141938468, 1.3657081454867817, -1.1709974084367587, -1.367400189942006, -3.7373638218799208], [0.5038496565936288, -1.108904674182593, -0.7600159681956403, -1.3119824125149055, -3.76162079738613], [0.8016520396717888, -0.6065691955343322, -0.7507740285379981, -1.596209952291986, -3.5171187353540305], [0.5075724400536361, -0.3191583932238507, -0.8215748044335474, -1.7306883247999725, -3.94187740287085], [1.2659394570162306, -0.6765054756353263, -1.0346129761434648, -1.740462346887292, -3.5650815797659976], [1.1325104130863104, 0.4782925789399458, -0.49252288282313783, -1.373653505012916, -3.7768704968996913], [1.408637154506874, -0.1304788472571048, -0.478717917419802, -1.2483678399645561, -3.880568899467766], [0.8422151100527556, -0.1859599820582255, -0.58491185102381, -1.0032338819814548, -3.8690923978714338], [0.4364576502543075, -0.16539115314402825, -0.5370814169744419, -1.5880794233743265, -3.505543997197706], [1.608619050987677, -1.0055444448777915, -0.09349321502911602, -0.1597148260355113, -3.8866586647482846], [1.733586469944821, -1.1493703381278528, -0.2837273008380304, -0.6436220621518662, -3.336945285700264], [1.119011157874416, -0.035546751753288974, -0.4338878327163796, -1.0629604453307406, -3.9613025465197818], [1.2796076152617841, 0.0997649296822834, -0.36238411388004704, -0.9132655290389713, -3.9381979216181566], [0.8401218565546285, -0.8784153610409824, -0.7374593995414729, -1.5652961450704257, -3.8594795316116266], [1.8232719308453502, 1.1072527312152156, -0.16288326198021236, -0.627345478646713, -3.7040120167469532], [1.8059701990121595, 1.0268386882709106, -0.2482794939066516, -0.752806556976842, -3.735773292572544], [1.8717181162809524, 0.428924758970638, -0.4419774410919481, -1.2273168349995875, -3.9293185068621637], [1.8211861654566326, 0.7110385855901112, -0.7902034745259591, -1.4096759829943946, -3.431849441433933], [1.179686941132231, -0.15424960666157023, -0.5862680605869981, -1.565159003210981, -3.954296731456501], [1.240513616749563, -0.11198869095019894, -0.6058748883726428, -1.6346259497660243, -4.05212743737339], [0.829442101129816, -0.2484634868922755, -0.38108104732557735, -0.9673645885266837, -3.882272166076564], [0.8141432848032497, -0.11201883195808476, -0.6332700314914194, -1.2347625194948102, -3.651131359015142], [0.732272609353551, -1.274808457167788, -0.3891114596984824, -1.183417897618204, -3.675146807225773], [-0.012918351611397372, -0.468793485929276, -0.12578073309446353, -0.8609020684518367, -3.604300745779235], [-0.18290498263207586, -0.4305268355220877, -0.23084759457044163, -0.7178044635053552, -3.81418909510894], [-0.14316577840505254, -0.5499379431114884, -0.272152687092614, -0.7815485355973577, -3.7233772727759713], [0.7968242292005745, -0.9765984423853702, -0.3210204889126813, -1.124094927232026, -3.6970170587280076], [-0.03771692200284761, -0.48549721796576145, -0.9732753236899605, -1.6010725693186092, -3.808998642237793], [-0.3965729261801639, -0.9150928076030126, 1.146693360421422, -0.32298194504758226, -3.6446044790669703], [-0.539349770589007, -1.524983593201752, 1.0013704716737972, -0.15656469204867685, -3.6615831921736763], [-0.4399433633130559, -1.2977618989256792, 1.358884571235345, -0.04201368432187463, -3.7587940435342557], [-0.42056466356821376, -0.9935778653244106, 1.0206039745489004, -0.47545188115403336, -3.5744951498720003], [-0.45880169913138175, -0.9271796298933975, 0.9963616899999052, -0.5398871463311834, -3.462518487033671], [-0.5564684235998699, -1.692330857342112, 1.1876611359005578, -0.08119845896465379, -3.527455371302447], [-1.3185842799038148, -1.7606042951923435, 1.0005855739089347, -0.16196165173971544, -3.7096255453976275], [-0.8666809323770969, -1.7641515239811445, 1.3270863212153379, -0.2494417397283326, -3.5626595475048672], [-1.2299423451579068, -1.7240174149077838, 1.164448381758563, 0.022869021245435685, -3.98128008097697], [-0.5478998019449794, -1.3410050413645496, 1.2832234525947337, 0.02698133847063533, -3.83120918647139], [-0.4984122351153372, -0.7089910775266125, 0.15231108058209558, -1.4389555334436945, -3.733559354668021], [-0.6471116091803683, -1.372755917091536, 0.9952782563430627, -0.17574641925845608, -3.391349072869342], [-0.6576964263759094, -1.6091046107114546, 1.3579330181284985, -0.13603520549331524, -3.515568775844499], [-0.3992044018377475, -0.9566604750558723, 0.7932435820466667, -0.3034752151280718, -3.546802456235119], [-0.47506785878659624, -1.1948962338875617, 1.1157194967976205, -0.31446609103343093, -3.850688823396409], [-0.5017375941862808, -1.247721423230301, 0.974726140779704, -0.5579901682124919, -3.421796427091861], [-0.36604825168982025, -0.9895278126157219, 0.8270475288283066, -0.6555735199820724, -3.726350636347341], [-1.2046736237405373, -1.8186263571176555, 0.8594710584501213, -0.4740208098698383, -3.6361159123305513], [-1.0878452618151175, -1.7722599433833948, 0.6214710417026911, -0.07147321909583858, -3.8357195748958004], [-1.1851169160368826, -1.9554921940501173, 1.2429174650450803, -0.8466960762992347, -3.5965277490052783], [-1.4100091627750515, -1.8152471106114954, 0.6973498791231848, -0.6789768786767746, -3.55685796881569], [-0.3199053121824628, -1.4154189567389697, 1.1383492333899714, -0.6464236469221158, -3.837283372949096], [-0.5795002302520155, -1.0777169308974959, 1.1010621664241573, -0.5461017148381676, -3.855728205042843], [-1.015948799774509, -1.9690040375305795, 0.8288496362479347, -0.6346462151274678, -3.6089658412298435], [-0.7626422324275189, -1.8560639762460023, 0.9951156359820318, -0.3312972783491986, -3.8120483584455274], [-0.9030125012397154, -1.77183643867516, 1.3574176426630564, -0.4199532357720884, -3.5833486646752712], [0.29305278770773224, -0.40492352582485824, -0.3992272817571682, -1.61951283840112, -3.723871296616899], [-0.18782816314631434, -0.388537373445178, -1.377837083680003, -2.549179234648169, -3.6233729725229997], [-0.1540745427233945, -0.3483562807120599, -1.5914081770886173, -2.6119903451655646, -3.9074878257486585], [-0.327676932757162, -0.7955418354654293, -0.03613951857197836, -1.872630978566708, -3.7942977443778068], [-0.42233673185121373, -0.962070438828412, 0.7218763499445043, -1.3650101872118285, -3.574805882429011], [-0.6884052742785274, -1.3769938112052589, 0.6393450717767089, -0.16640905450927734, -3.7469457969238427], [-0.3558390501750771, -0.546342972394336, 1.090998267110181, -1.5422556672827736, -3.6494242185566463], [-0.13584767132398123, -0.3457224750696195, 1.1077575129141777, -1.6470938178848715, -3.7230874750802725], [-0.5054234545282443, -1.2834127832790951, 0.8455795177750032, -1.0600733074235404, -3.839793425165223], [-0.6593291681430747, -1.0445989431909841, 0.5277612926994268, -0.2540631149136855, -3.7384920385444067], [-0.7237777928355291, -1.2735835587567546, 0.649213689287502, -0.5826175120000154, -3.594638379726039], [-0.4953121004290165, -1.4491231712605142, 0.653779338873858, -0.3047542514294323, -3.833597472276796], [-0.7013625785135423, -1.3199599835703013, 0.7999415157630629, -0.2166680173055962, -3.5833071225933755], [-0.5465432476258743, -0.9836713641909749, 1.6305552859410035, 0.2267908520824243, -3.682670067699897], [-0.36561589431775887, -0.7433831115761617, 1.0153122166122541, 0.0925079996873384, -3.5315803162601287], [-0.19738753661849584, -0.7847564515876094, 1.009202807297771, 0.11095963776649787, -3.4929098954913376], [-1.3538302437198582, -1.9114941139079125, 0.46905624529252404, -0.7704758836985242, -3.550541278521664], [-0.6615689297886581, -1.4355654670718732, 0.8526757734841073, -0.7440265251627987, -3.7810713372985805], [-0.6981580592657122, -1.4216291992305388, 0.5660680656583305, -1.0285669561012825, -3.654690969265065], [-0.49089861803140883, -0.9495321916018175, 1.2404431390830213, -0.4567912044643728, -3.764864954768038], [-0.5305800274646733, -1.2580414448596975, 1.299348605426885, -0.46887120813635075, -3.672537311570588], [-0.4582711703566926, -1.2313997001873722, 0.8432271721057272, -0.6198287789135214, -3.6037455994694145], [-0.5453850461585282, -1.6812703084536134, 0.6632484241343881, -0.48745090667818464, -3.769679028722271], [-0.604094459667134, -1.103962102302267, 0.4724111834215081, -0.8042994873972131, -3.6459428039966606], [-0.8945724176347796, -1.6127390596550333, 1.3619428383887142, -0.2244335005314928, -3.656962643908819], [-0.7651758861284627, -1.7659135536487736, 0.8359609324251533, -0.08318761048313295, -3.824511113421636], [-0.9329842106629656, -1.6619208729010178, 1.058590355475975, -0.6551937522301516, -3.589605319989026], [-0.5879389099171507, -1.3471080247919651, 1.352987477270095, -0.019450658360903084, -3.783544342856329], [-0.3432728326853704, -0.8946142050819217, 0.507624999761345, -0.06734906100341462, -3.796613278658059], [-0.34459578721253126, -0.8733329521506326, 1.8792388217134692, -0.9430069636708359, -3.753567775583866], [-0.19835120895113506, -0.48807753919801383, 0.8299003250578412, -1.6750438238512004, -3.7445446485734233], [-0.27112513539921246, -0.7584073072806458, 0.5958772550563467, -1.6148826664450289, -3.6570016091177715], [-0.26933171277703044, -0.6248772698423557, 0.6007453196922359, -1.680552551218413, -3.794544378781832], [-0.2795131315323119, -0.6781870267277015, 0.5642950360388451, -1.5345733464107574, -3.713109529210378], [-0.30762000815510077, -0.6747767686318898, 1.3007537654465038, -2.1939182742124337, -3.5491339292124082], [-0.21932943669418892, -0.7825661577752454, 0.3312583380920474, -2.404805003608792, -3.7490317533517854], [-0.40911198820161665, -0.6153643930738044, -0.405219701459615, -1.4578169692294667, -3.7091122521917987], [0.7236898519291632, -0.7431070069015324, -0.266076774097889, -0.6263137827251045, -3.6718603524758984], [0.7830490712741649, -1.2341507341454854, -0.44576544987191064, -1.0737619885904306, -3.86278300249539], [0.9833194365705361, 0.29341794410542116, -0.5256888626649033, -1.3512367506614522, -3.9063236711176637], [0.756587586859978, -1.4386968409438314, -0.42406727085364326, -0.9047619477734807, -3.9998228938292675], [-0.21457434388598778, -0.6276161357725719, 0.17349803092699692, -0.9531400072280363, -3.791940677830781], [-0.6169940562011138, -1.2253368529249364, 0.47152679557656696, -0.6848055803419835, -3.780324498496334], [-0.5023441815507593, -1.4897692276819974, 0.5597707385939507, -0.10618628567799301, -3.8454052647224177], [-0.6196345894878901, -1.345559883439454, 0.6753506327478329, -0.6379025561710953, -3.42154435945847], [-0.6118368429354569, -1.4513543006613807, 1.1460359238503144, -0.3804779965825378, -3.663432802374038], [-0.5640055842212897, -1.6553316169424839, 1.3665169243199007, -0.6992990458469663, -3.7651922530296704], [-0.3064843224968161, -0.7077792212868612, 0.8835692403811011, 0.1842579921351865, -3.661774543756218], [-0.2617089733659116, -0.7986876667784317, 0.8106231143831844, 0.055675795327029376, -3.7634398234615767], [-0.30086423327601775, -0.6383410591674361, 0.639939486214582, -0.15316784864806932, -3.838682543451957], [-1.3431529539370386, -1.7635249819284258, 0.8779962369795116, -0.29693966642919295, -3.689333504765257], [-0.798529937800512, -1.5151792929118169, 1.4348088556578054, -0.07197531568649314, -3.6645437245820407], [-0.15498922345726837, -0.6808455733803971, 0.5517580587697067, -0.4496178952896899, -3.693737066892882], [-0.6632697736723941, -1.7076018856516335, 1.0383999245456013, -0.2811904646950282, -3.435602064671776], [-0.181934372387263, -0.589257459410125, 0.45312322513222325, -1.1124334034839156, -3.5958753155253382], [1.1890021915532296, -0.26318839121295545, -0.48585234123115795, -1.1500550973890888, -3.739424399455404], [0.757004579880936, -0.7114121127697643, -0.5907626430883448, -1.396596848326367, -3.687769167326693], [0.7245283249351163, -0.7949033601893136, -0.700625099579989, -1.347372576967664, -3.817893625845653], [0.8381285887089679, -0.78643375307954, -0.6364897724085439, -1.5036100733142277, -3.5686020595506807], [1.4610343661052825, 0.09638745150004988, -0.6688869252642017, -1.366999829828083, -3.775076068766512], [0.6179965566890199, -0.8279835259434235, -0.5356892434430497, -1.2803721665844408, -3.8754719070291817], [-0.42133839741699475, -1.102523464306888, 0.8993053967819933, -0.6280304080277367, -3.6557116819499207], [-0.785643950025342, -1.4846082794429962, 1.4319269057744368, 0.10973605378422954, -3.7574133940256775], [-0.3358288310818635, -1.1376379588738752, 0.708253951058877, -0.8159411526792184, -3.830536722386421], [-0.819974545801836, -1.2838957005275993, 0.6027655269254852, -0.17194505213218697, -3.679987299541493], [-0.45596181325791424, -1.598837264321024, 1.1001819095282936, -0.9339826488175661, -3.6593559837970284], [0.17993678353110426, -2.388791468858611, -0.24458581137663163, -0.5989879283199678, -3.771666918288927], [-0.09576502975826866, -0.14405062061777096, -0.2830354642974964, -1.1608915533754178, -3.5920258817148936], [0.13173921468433597, -0.302137098046609, -1.030741116314675, -2.027303926494362, -3.9515866054474715], [0.16209262491421866, -0.1036733484063324, -1.3880058750485091, -1.9275351024111302, -3.5778938709142056], [0.31333623093973856, 0.08645730749890085, -1.0794867144982156, -1.8309944793886932, -4.019795562977846], [0.03796677293151932, -0.570925888145185, -0.23636393701380348, -1.7138060583462034, -3.5579125475432924], [-0.48388964503229875, -0.3805490187954824, -0.013779701157223156, -1.6435789731748844, -3.663034388370836], [-0.5474723707684748, -1.266373596337302, 0.4283596667067576, -0.782301172456205, -3.6658071319937533], [-0.5309785160461251, -1.4159333279209423, 0.5425708438333042, -0.481339046804963, -3.819219862491039], [-0.593542417956449, -1.4188903601326674, 1.0911830237554667, -0.024657472225672272, -3.59149820468389], [-0.9497032349823097, -1.8391388302720053, 0.7906178549935312, -0.6375723456815308, -3.584250297765272], [-1.5950471000034474, -1.7540559662742479, 0.5636443441692677, -0.8557029439846258, -3.895092145222416], [-1.067208481184473, -1.8622252989424386, 0.8352185063360967, -0.949331094926322, -3.6870363027359994], [-0.07571366387477138, -0.22955198019488832, 0.5301102769063046, -0.15422579937347358, -3.638710505404919], [-0.2258586121843154, -1.193825436126882, 1.5075175156194012, 0.4037705667032261, -3.5559296479314444], [-0.750798825867305, -1.4068008849543172, 0.21594724849034108, -1.1985943330987159, -3.6057049946707713], [-0.7611461396235346, -1.8351599565788885, 0.8706401561965265, -0.32997672720240573, -3.5693172678313285], [-0.1974572086288446, -0.6587238093980726, 0.19477217145026668, -0.2203498940383002, -3.814473554335453], [-0.37869417787704407, -0.6132383561363332, -1.1295767984653085, -2.3965499322422272, -3.6814915906787995], [-0.12479547648333394, -0.6754749776681808, -0.7805377750107257, -1.7066903327569731, -3.658181194266913], [-0.41140788139240747, -1.114456742149405, 1.0406594578467414, 0.21665982702486994, -3.6218141179890697], [-0.2689691387636788, -0.5894266023778622, 0.6733296303849313, -0.508198436067811, -3.9504096642230166], [-0.6828789887257944, -1.5424226785824078, 1.1032443287742688, -0.16007292972123843, -3.9336600578897367], [-0.5254439400379372, -1.4078625724734486, 1.0408882921641143, -0.4524996161603377, -3.65435018434152], [-0.5663469364557959, -1.1956961176643104, 0.2161892965019392, -0.6520682069896206, -3.595306448091417], [-0.5962769422144947, -1.5530166016937448, 0.2214958276086965, -0.9074785143546044, -3.8200239051784246], [1.2142487944035096, -0.39533409434019545, -0.3746324199784746, -1.1471613197797832, -3.7594538260631998], [1.023266586758397, -0.40336995320616015, -0.5239958508063312, -0.9105720080867643, -3.72893363372331], [0.14289630137992546, -0.30404279716374916, -0.5756130330681638, -0.965499339750466, -3.6654295543623263], [1.9435640689676645, -0.4782098560658235, -0.3539515523837379, -0.8321550895993672, -3.697634758344858], [0.6948933659949516, 0.20140271371892832, -0.8533585748163839, -1.3814575827072757, -3.692651253014613], [0.7162210777586456, 0.22882668854950397, -0.6512940359919095, -1.2816941361545537, -4.019631142730315], [1.2294602106747792, -0.23274189296627334, -0.3535774270622938, -1.2135397325120687, -3.5534666675533066], [0.5719369823282863, -0.3923205955808094, -0.40517816226724157, -1.0630205713921905, -3.5478527638283364]], NamedTuple[(n_steps = 3, is_accept = true, acceptance_rate = 0.3333333333333333, log_density = -0.40698825949471384, hamiltonian_energy = 6.803512337497277, hamiltonian_energy_error = -10.249324288046015, max_hamiltonian_energy_error = 4076.343403655515, tree_depth = 1, numerical_error = true, step_size = 0.4, nom_step_size = 0.4, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = -0.40698825949471384, hamiltonian_energy = 3.1400040359908417, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 4225.97803750534, tree_depth = 0, numerical_error = true, step_size = 1.7122520847327034, nom_step_size = 1.7122520847327034, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.5889642222476805, log_density = 9.329147916752873, hamiltonian_energy = -1.7120677797, hamiltonian_energy_error = -3.8846513422094717, max_hamiltonian_energy_error = 6.943339759126809, tree_depth = 3, numerical_error = false, step_size = 0.20204444038133998, nom_step_size = 0.20204444038133998, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.8870502347187514, log_density = 11.91356240030019, hamiltonian_energy = -2.8873987370620675, hamiltonian_energy_error = 0.09669514176610772, max_hamiltonian_energy_error = 0.3816245856219047, tree_depth = 2, numerical_error = false, step_size = 0.07797790111299033, nom_step_size = 0.07797790111299033, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9693277190774656, log_density = 9.59423123595477, hamiltonian_energy = -5.919718929988166, hamiltonian_energy_error = 0.030272281387125233, max_hamiltonian_energy_error = 0.14890697438129497, tree_depth = 4, numerical_error = false, step_size = 0.07524561371188826, nom_step_size = 0.07524561371188826, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9481138537372958, log_density = 12.566985464618728, hamiltonian_energy = -7.362188349490067, hamiltonian_energy_error = 0.02524140599800795, max_hamiltonian_energy_error = 0.14212066361167608, tree_depth = 3, numerical_error = false, step_size = 0.10487440890773243, nom_step_size = 0.10487440890773243, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9027754584791429, log_density = 11.81998629409917, hamiltonian_energy = -10.534120528496915, hamiltonian_energy_error = -0.0938279901168304, max_hamiltonian_energy_error = 0.3723858105560893, tree_depth = 4, numerical_error = false, step_size = 0.1496092030677921, nom_step_size = 0.1496092030677921, is_adapt = true), (n_steps = 11, is_accept = true, acceptance_rate = 0.977847964593099, log_density = 12.020852323832155, hamiltonian_energy = -10.402141345777679, hamiltonian_energy_error = -0.256320586430407, max_hamiltonian_energy_error = -0.4947884130680915, tree_depth = 3, numerical_error = false, step_size = 0.19508316199688122, nom_step_size = 0.19508316199688122, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.15807191505978418, log_density = 12.029832043175459, hamiltonian_energy = -11.133091657897763, hamiltonian_energy_error = -0.07368938805107028, max_hamiltonian_energy_error = 16.757076768786053, tree_depth = 3, numerical_error = false, step_size = 0.3313543462855824, nom_step_size = 0.3313543462855824, is_adapt = true), (n_steps = 63, is_accept = true, acceptance_rate = 0.9802165751283748, log_density = 8.960457703394058, hamiltonian_energy = -8.304985490852879, hamiltonian_energy_error = 0.04293887350891268, max_hamiltonian_energy_error = 0.053109719214509354, tree_depth = 6, numerical_error = false, step_size = 0.04312062100354624, nom_step_size = 0.04312062100354624, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9544068204239078, log_density = 8.572123103338571, hamiltonian_energy = -4.957546680999633, hamiltonian_energy_error = 0.091350645629384, max_hamiltonian_energy_error = 0.1980692014530563, tree_depth = 3, numerical_error = false, step_size = 0.07576290608258382, nom_step_size = 0.07576290608258382, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9979755795778211, log_density = 11.217361021184658, hamiltonian_energy = -7.419138945613483, hamiltonian_energy_error = -0.443777412585451, max_hamiltonian_energy_error = -0.4906994983344699, tree_depth = 4, numerical_error = false, step_size = 0.12394423915434273, nom_step_size = 0.12394423915434273, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.008470747753145448, log_density = 11.217361021184658, hamiltonian_energy = -7.19265025244836, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 6.86158056792063, tree_depth = 1, numerical_error = false, step_size = 0.2336326074585298, nom_step_size = 0.2336326074585298, is_adapt = true), (n_steps = 95, is_accept = true, acceptance_rate = 0.9966232662107178, log_density = 11.876471268737651, hamiltonian_energy = -5.458065608570447, hamiltonian_energy_error = -0.004365273867342978, max_hamiltonian_energy_error = 0.01203401524833314, tree_depth = 6, numerical_error = false, step_size = 0.01977965952868846, nom_step_size = 0.01977965952868846, is_adapt = true), (n_steps = 63, is_accept = true, acceptance_rate = 0.9981621607197478, log_density = 12.306348912685454, hamiltonian_energy = -10.95963777734966, hamiltonian_energy_error = -0.00048097498346066914, max_hamiltonian_energy_error = 0.007733656041652992, tree_depth = 6, numerical_error = false, step_size = 0.037595565216909474, nom_step_size = 0.037595565216909474, is_adapt = true), (n_steps = 47, is_accept = true, acceptance_rate = 0.9801968180059925, log_density = 12.20403104903946, hamiltonian_energy = -11.509529310961202, hamiltonian_energy_error = 0.036844281461302586, max_hamiltonian_energy_error = 0.042191307731133776, tree_depth = 5, numerical_error = false, step_size = 0.07154297633264037, nom_step_size = 0.07154297633264037, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.5447488803498718, log_density = 10.533682259224726, hamiltonian_energy = -9.59397959769321, hamiltonian_energy_error = 0.7279926771589071, max_hamiltonian_energy_error = 1.244940832980701, tree_depth = 4, numerical_error = false, step_size = 0.12807602161153614, nom_step_size = 0.12807602161153614, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9782053900346435, log_density = 7.932791261702885, hamiltonian_energy = -4.040769753464765, hamiltonian_energy_error = 0.011514518563242149, max_hamiltonian_energy_error = 0.10201423725128755, tree_depth = 4, numerical_error = false, step_size = 0.06025083735775639, nom_step_size = 0.06025083735775639, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.955502662853986, hamiltonian_energy = -6.7023072936183, hamiltonian_energy_error = -0.27678450773903407, max_hamiltonian_energy_error = -0.4105402973430534, tree_depth = 3, numerical_error = false, step_size = 0.10681625138273566, nom_step_size = 0.10681625138273566, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.847885445875143, log_density = 10.049586003286947, hamiltonian_energy = -8.54699983691647, hamiltonian_energy_error = 0.08031789125408295, max_hamiltonian_energy_error = 0.3191906469237029, tree_depth = 3, numerical_error = false, step_size = 0.200620049425097, nom_step_size = 0.200620049425097, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9891862688338191, log_density = 11.712078189488661, hamiltonian_energy = -8.91781697638616, hamiltonian_energy_error = -0.057764511494976745, max_hamiltonian_energy_error = -0.057764511494976745, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9614290154471412, log_density = 10.947184666057105, hamiltonian_energy = -10.348017876990644, hamiltonian_energy_error = 0.03963471862687307, max_hamiltonian_energy_error = 0.0852391563551862, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.98966178975937, log_density = 11.713634837058624, hamiltonian_energy = -10.19542374572775, hamiltonian_energy_error = 0.06637174831648629, max_hamiltonian_energy_error = -0.0870262909847277, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9913349585606123, log_density = 9.909542068010552, hamiltonian_energy = -7.894401129212898, hamiltonian_energy_error = -0.03452709748562022, max_hamiltonian_energy_error = -0.14896591028116823, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9874777737144621, log_density = 11.691843806653228, hamiltonian_energy = -9.000826556922574, hamiltonian_energy_error = -0.0665210783647332, max_hamiltonian_energy_error = -0.12771464731605775, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9308556543720038, log_density = 10.76481573996709, hamiltonian_energy = -8.587767941620836, hamiltonian_energy_error = -0.03284714319322468, max_hamiltonian_energy_error = 0.16568534765799825, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8872919545946519, log_density = 8.71344179848308, hamiltonian_energy = -7.176194570535377, hamiltonian_energy_error = 0.2678042721033824, max_hamiltonian_energy_error = 0.38425528272555365, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 1.0, log_density = 9.339371758503464, hamiltonian_energy = -5.797092625707518, hamiltonian_energy_error = -0.14198941872765936, max_hamiltonian_energy_error = -0.48039606185856965, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.74455127941807, hamiltonian_energy = -9.021261921176155, hamiltonian_energy_error = -0.07086923445261917, max_hamiltonian_energy_error = -0.17150628829048387, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9950516923421576, log_density = 12.161917845910537, hamiltonian_energy = -9.981976722824216, hamiltonian_energy_error = -0.025491509366174725, max_hamiltonian_energy_error = -0.17930989699527977, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9348062752639765, log_density = 10.707234292416194, hamiltonian_energy = -9.623968924737095, hamiltonian_energy_error = 0.15788519453257166, max_hamiltonian_energy_error = 0.19135690383102144, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 12.65319814999274, hamiltonian_energy = -10.56865886982595, hamiltonian_energy_error = -0.29180019263582757, max_hamiltonian_energy_error = -0.29180019263582757, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.99795693169919, log_density = 12.798520028469204, hamiltonian_energy = -12.139511917225903, hamiltonian_energy_error = -0.03554586963317874, max_hamiltonian_energy_error = -0.06267303494317389, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8801254667888853, log_density = 11.69682793410105, hamiltonian_energy = -8.78883199634737, hamiltonian_energy_error = 0.11363779261270146, max_hamiltonian_energy_error = 0.261672268287489, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9074158288433893, log_density = 13.187769518095095, hamiltonian_energy = -9.65950875626917, hamiltonian_energy_error = -0.11388954062031864, max_hamiltonian_energy_error = 0.2786768449127255, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9923187977802829, log_density = 12.95191862500226, hamiltonian_energy = -12.622929854039095, hamiltonian_energy_error = 0.00805599621918418, max_hamiltonian_energy_error = 0.013603466137780629, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.965621253202422, log_density = 12.291897116317418, hamiltonian_energy = -9.91433224327126, hamiltonian_energy_error = 0.010264032735587847, max_hamiltonian_energy_error = 0.09197641977190685, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7681658548740612, log_density = 11.749475573999838, hamiltonian_energy = -9.46652217815728, hamiltonian_energy_error = -0.04453787535521947, max_hamiltonian_energy_error = 0.6251433534664717, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9920419133741362, log_density = 12.141068800269991, hamiltonian_energy = -11.316351714166847, hamiltonian_energy_error = 0.004289835321689139, max_hamiltonian_energy_error = -0.033335752219764814, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9332592915557031, log_density = 11.981934007702012, hamiltonian_energy = -11.427975019357945, hamiltonian_energy_error = -0.006539241543661589, max_hamiltonian_energy_error = 0.1553470307542799, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9952339592446868, log_density = 11.965810464209635, hamiltonian_energy = -10.983044317303985, hamiltonian_energy_error = 0.006993279679168296, max_hamiltonian_energy_error = -0.058118035195279916, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7595787922174615, log_density = 9.648562881811138, hamiltonian_energy = -6.774251740115391, hamiltonian_energy_error = 0.18983827233587292, max_hamiltonian_energy_error = 0.5611498304782199, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.913299895477607, log_density = 9.674242529777333, hamiltonian_energy = -6.913534165778259, hamiltonian_energy_error = 0.17476785088698144, max_hamiltonian_energy_error = 0.34784231113328, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 10.165799269265204, hamiltonian_energy = -8.05134275555536, hamiltonian_energy_error = -0.17376182821167419, max_hamiltonian_energy_error = -0.38177502945345054, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 11.465318371678826, hamiltonian_energy = -9.013377869837724, hamiltonian_energy_error = -0.20851567568277396, max_hamiltonian_energy_error = -0.31210105835533675, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 0.9631504865055084, log_density = 10.031931106385596, hamiltonian_energy = -8.566508667283447, hamiltonian_energy_error = 0.019883281389342145, max_hamiltonian_energy_error = 0.11134429576599025, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9842860755675148, log_density = 12.381246139638009, hamiltonian_energy = -9.031573212382767, hamiltonian_energy_error = -0.0636992507656231, max_hamiltonian_energy_error = -0.07819132146558161, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8869664260132774, log_density = 12.48719777923084, hamiltonian_energy = -10.444975417277442, hamiltonian_energy_error = -0.1524672472977393, max_hamiltonian_energy_error = 0.20905220202253005, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9275264615299039, log_density = 13.182853180978592, hamiltonian_energy = -10.614498982629282, hamiltonian_energy_error = 0.034993710405498035, max_hamiltonian_energy_error = 0.11907973365539881, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9248331743588086, log_density = 12.346337774023304, hamiltonian_energy = -11.265535303141899, hamiltonian_energy_error = 0.034221250006940096, max_hamiltonian_energy_error = 0.13280909579134104, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8181801895736468, log_density = 9.957990908540266, hamiltonian_energy = -7.862537662008421, hamiltonian_energy_error = 0.26041172710402805, max_hamiltonian_energy_error = 0.37071922079810804, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8894307801070743, log_density = 11.771491664748318, hamiltonian_energy = -8.874819494099139, hamiltonian_energy_error = -0.25501676694136677, max_hamiltonian_energy_error = 0.3893973738489045, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9724038665880724, log_density = 10.467996936788136, hamiltonian_energy = -9.736712053510038, hamiltonian_energy_error = 0.03981157887214337, max_hamiltonian_energy_error = -0.12907590450404172, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5889286235418023, log_density = 5.15923087549799, hamiltonian_energy = -3.526341702293081, hamiltonian_energy_error = 0.6846390473761979, max_hamiltonian_energy_error = 0.8567903495271434, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.7794685582208529, log_density = 8.332480166533156, hamiltonian_energy = -1.4692477611917552, hamiltonian_energy_error = 0.4862299726866972, max_hamiltonian_energy_error = 1.7946628455856728, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9784036335614787, log_density = 10.93439247442558, hamiltonian_energy = -7.193133689973056, hamiltonian_energy_error = -0.39258982046082735, max_hamiltonian_energy_error = -0.39258982046082735, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9011520489531347, log_density = 11.865794296095007, hamiltonian_energy = -8.867482389595922, hamiltonian_energy_error = -0.040363853878073286, max_hamiltonian_energy_error = 0.2820442491014603, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9196645508487745, log_density = 10.473826332530578, hamiltonian_energy = -8.863556267454147, hamiltonian_energy_error = 0.1548323277278172, max_hamiltonian_energy_error = 0.25146457480638773, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9687946067863783, log_density = 12.270309136221359, hamiltonian_energy = -9.320674814611692, hamiltonian_energy_error = 0.015804571583268867, max_hamiltonian_energy_error = -0.13648708984126223, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9918453900986921, log_density = 11.628659211206106, hamiltonian_energy = -9.38143665218672, hamiltonian_energy_error = -0.08465996569906942, max_hamiltonian_energy_error = -0.08465996569906942, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9898424164481152, log_density = 11.781336725147783, hamiltonian_energy = -11.166060047807337, hamiltonian_energy_error = -0.00659242777918756, max_hamiltonian_energy_error = 0.025192728910784723, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9075698927451324, log_density = 10.59956930793435, hamiltonian_energy = -9.212501131589363, hamiltonian_energy_error = 0.04128760253479591, max_hamiltonian_energy_error = 0.16448146956007292, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9671067615199604, log_density = 11.784608999261124, hamiltonian_energy = -8.542852057586078, hamiltonian_energy_error = 0.009264685576894749, max_hamiltonian_energy_error = 0.09651530327642455, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.96098562237219, log_density = 11.050026334352317, hamiltonian_energy = -9.949673542657386, hamiltonian_energy_error = 0.03440389303316316, max_hamiltonian_energy_error = 0.08104858061490994, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9520436899837967, log_density = 9.962279139544723, hamiltonian_energy = -7.565128429477928, hamiltonian_energy_error = 0.026617945601734583, max_hamiltonian_energy_error = 0.15724838263129026, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8216874447709337, log_density = 7.149316062841338, hamiltonian_energy = -6.856867616509524, hamiltonian_energy_error = 0.3562621087518698, max_hamiltonian_energy_error = 0.3562621087518698, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 10.386467114994892, hamiltonian_energy = -4.196588341642441, hamiltonian_energy_error = -0.3536507112882532, max_hamiltonian_energy_error = -0.38088540612350563, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.865435236855614, log_density = 10.24623502014941, hamiltonian_energy = -5.823058490733697, hamiltonian_energy_error = 0.02906741268726165, max_hamiltonian_energy_error = 0.30860066548956233, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9904371142322125, log_density = 11.161063287018072, hamiltonian_energy = -9.188123026544531, hamiltonian_energy_error = -0.012502196838337198, max_hamiltonian_energy_error = -0.18573736364121807, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.873420036620973, log_density = 11.094534762805278, hamiltonian_energy = -7.694617152797309, hamiltonian_energy_error = 0.15718493922162846, max_hamiltonian_energy_error = 0.27630037139180175, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9944892381057765, log_density = 11.459815991802557, hamiltonian_energy = -9.689696000348537, hamiltonian_energy_error = -0.10209073822014325, max_hamiltonian_energy_error = -0.2571698511205529, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9892788515380035, log_density = 12.801550933022149, hamiltonian_energy = -10.466995443047038, hamiltonian_energy_error = -0.022900755669617467, max_hamiltonian_energy_error = -0.13426170153835493, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9840283680124602, log_density = 11.686342561152191, hamiltonian_energy = -10.755037150206759, hamiltonian_energy_error = 0.0636079139476422, max_hamiltonian_energy_error = -0.08760830226519367, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.793186283210272, log_density = 11.370211621731041, hamiltonian_energy = -8.616515642134035, hamiltonian_energy_error = 0.2795459436375314, max_hamiltonian_energy_error = 0.5933604174083591, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9596400933673763, log_density = 11.123270403184508, hamiltonian_energy = -9.50971250151327, hamiltonian_energy_error = -0.118836979226705, max_hamiltonian_energy_error = -0.5657830660958076, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9009700275796959, log_density = 8.994860920961901, hamiltonian_energy = -8.722260216979125, hamiltonian_energy_error = 0.14847019413034523, max_hamiltonian_energy_error = 0.14847019413034523, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9778040159489917, log_density = 8.361008701863875, hamiltonian_energy = -5.2660377331904655, hamiltonian_energy_error = -0.12108500694421309, max_hamiltonian_energy_error = -0.5858246457048288, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8471322533872504, log_density = 5.999900049291208, hamiltonian_energy = -1.6272766364846696, hamiltonian_energy_error = -0.08997365489644693, max_hamiltonian_energy_error = 0.5833072935924746, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9580274233172827, log_density = 9.851288521162177, hamiltonian_energy = -3.825783242714765, hamiltonian_energy_error = -0.10148837398751631, max_hamiltonian_energy_error = -0.2586765617957907, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9839869175929798, log_density = 10.807777941839491, hamiltonian_energy = -7.801687172955802, hamiltonian_energy_error = -0.014490289268438872, max_hamiltonian_energy_error = -0.14833274068172386, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9848350523243169, log_density = 11.795527848635654, hamiltonian_energy = -9.50691798072774, hamiltonian_energy_error = -0.08195389791351104, max_hamiltonian_energy_error = -0.14838793071815815, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9186992066306782, log_density = 11.970053326375785, hamiltonian_energy = -10.384883808630192, hamiltonian_energy_error = 0.05433780168455904, max_hamiltonian_energy_error = 0.16399402263986929, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9635606748301102, log_density = 12.089596834847711, hamiltonian_energy = -8.249007499088549, hamiltonian_energy_error = -0.01794014382772602, max_hamiltonian_energy_error = 0.1445264603806926, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.993987806670822, log_density = 12.040017364260093, hamiltonian_energy = -9.967471565404368, hamiltonian_energy_error = 0.010162819092352393, max_hamiltonian_energy_error = -0.14339159479391483, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9971481815282729, log_density = 12.683542207556513, hamiltonian_energy = -10.83804135334265, hamiltonian_energy_error = -0.09905060821448863, max_hamiltonian_energy_error = -0.16151629245679366, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9675530176706967, log_density = 13.0029122790932, hamiltonian_energy = -12.03051499794852, hamiltonian_energy_error = -0.0009921069996732257, max_hamiltonian_energy_error = 0.08105323111426799, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 39, is_accept = true, acceptance_rate = 0.9834643476560558, log_density = 12.791363386100134, hamiltonian_energy = -10.842542186574775, hamiltonian_energy_error = -0.04063475050015697, max_hamiltonian_energy_error = 0.055045793160021006, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9775294956766866, log_density = 12.051152015347933, hamiltonian_energy = -10.606739915066415, hamiltonian_energy_error = 0.035033078740505985, max_hamiltonian_energy_error = 0.0605894007216925, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9694257495272967, log_density = 9.493532857928155, hamiltonian_energy = -8.800909819049952, hamiltonian_energy_error = 0.07098947267571276, max_hamiltonian_energy_error = -0.11590823807262929, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.178409816841059, hamiltonian_energy = -8.058327096523376, hamiltonian_energy_error = -0.047908600051615124, max_hamiltonian_energy_error = -0.09989802467230824, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9481695983216523, log_density = 12.042617217287445, hamiltonian_energy = -8.537561909456567, hamiltonian_energy_error = -0.05601304301196741, max_hamiltonian_energy_error = 0.1544941065126384, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9556438308501956, log_density = 11.436200891907927, hamiltonian_energy = -10.013552503551185, hamiltonian_energy_error = 0.15302317191757986, max_hamiltonian_energy_error = 0.15302317191757986, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9258117660207754, log_density = 9.556008646215426, hamiltonian_energy = -8.673594132128953, hamiltonian_energy_error = 0.11416332579264576, max_hamiltonian_energy_error = 0.44807845461407503, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9893518371858504, log_density = 11.970764723557497, hamiltonian_energy = -8.485398295302081, hamiltonian_energy_error = -0.14922844910705102, max_hamiltonian_energy_error = -0.15217763460743328, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9239974409651359, log_density = 12.399328260526305, hamiltonian_energy = -9.181091238034917, hamiltonian_energy_error = 0.020221380387591026, max_hamiltonian_energy_error = 0.1701485170600563, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9979778325769018, log_density = 12.269390973101203, hamiltonian_energy = -11.538028528646306, hamiltonian_energy_error = 0.005432154931845901, max_hamiltonian_energy_error = -0.04597983024134322, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9995878559671795, log_density = 12.87919053592531, hamiltonian_energy = -11.862049414132242, hamiltonian_energy_error = -0.02363070866436523, max_hamiltonian_energy_error = -0.07754425902345652, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.7805505731972638, log_density = 12.490198418238323, hamiltonian_energy = -10.736488256616166, hamiltonian_energy_error = -0.06856571539326772, max_hamiltonian_energy_error = 0.6556529332200309, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8054379715669404, log_density = 8.933142055338333, hamiltonian_energy = -7.722917314581033, hamiltonian_energy_error = 0.35274099379330526, max_hamiltonian_energy_error = 0.35274099379330526, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9723653406599608, log_density = 10.297599815571457, hamiltonian_energy = -7.563773613358848, hamiltonian_energy_error = -0.009010116058407291, max_hamiltonian_energy_error = -0.32662095085060017, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9793300555615453, log_density = 12.929436553305974, hamiltonian_energy = -9.343375121776935, hamiltonian_energy_error = -0.2375717970207294, max_hamiltonian_energy_error = -0.5245424465468265, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9097264611304496, log_density = 11.448635485664163, hamiltonian_energy = -10.687057347774783, hamiltonian_energy_error = 0.1285613724636434, max_hamiltonian_energy_error = 0.1665091398618479, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9518953387931012, log_density = 11.434608569016369, hamiltonian_energy = -9.313781415885845, hamiltonian_energy_error = -0.09925112345217713, max_hamiltonian_energy_error = 0.1117056591492549, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8266102379364482, log_density = 12.165617981665138, hamiltonian_energy = -8.702089190789266, hamiltonian_energy_error = 0.09488459581526243, max_hamiltonian_energy_error = 0.37807360144747015, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8469023386249327, log_density = 12.064519269957197, hamiltonian_energy = -8.918443780873549, hamiltonian_energy_error = 0.1011427714725528, max_hamiltonian_energy_error = 0.30313382818527757, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9326566759891209, log_density = 10.078739679649063, hamiltonian_energy = -8.701919096112015, hamiltonian_energy_error = 0.28505086346114084, max_hamiltonian_energy_error = 0.28505086346114084, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.674419577095488, hamiltonian_energy = -7.228486457787184, hamiltonian_energy_error = -0.18007969952840597, max_hamiltonian_energy_error = -0.38395845211463797, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9651187312227852, log_density = 11.838120977313658, hamiltonian_energy = -8.028466558532152, hamiltonian_energy_error = -0.3017644538681683, max_hamiltonian_energy_error = -0.6128680977275316, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8740318009791473, log_density = 9.126022169470485, hamiltonian_energy = -8.114250295715365, hamiltonian_energy_error = 0.22753096142681528, max_hamiltonian_energy_error = 0.3080531223897829, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9834370133485585, log_density = 11.44349414834979, hamiltonian_energy = -6.3505333756264095, hamiltonian_energy_error = -0.4209599785490967, max_hamiltonian_energy_error = -0.4209599785490967, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9512688473803963, log_density = 10.318656263637951, hamiltonian_energy = -8.032497268999975, hamiltonian_energy_error = 0.1299124009878767, max_hamiltonian_energy_error = -0.4728699996748027, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9593414540771777, log_density = 10.34154673983375, hamiltonian_energy = -8.729027877940533, hamiltonian_energy_error = 0.02477354990473657, max_hamiltonian_energy_error = -0.4407911031776699, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9955421204105858, log_density = 10.241557635761698, hamiltonian_energy = -9.34172436773611, hamiltonian_energy_error = -0.003218425051978002, max_hamiltonian_energy_error = -0.31253286660410495, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 0.9903553138482537, log_density = 10.148275967560664, hamiltonian_energy = -7.848772497985392, hamiltonian_energy_error = -0.09261037367341984, max_hamiltonian_energy_error = -0.39133597150638444, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9753487075208447, log_density = 10.924520301727428, hamiltonian_energy = -7.0240984973943466, hamiltonian_energy_error = 0.03244833090467303, max_hamiltonian_energy_error = -0.23780321974302954, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8966501108226581, log_density = 6.221056780579065, hamiltonian_energy = -5.60520031632553, hamiltonian_energy_error = 0.25872430159432636, max_hamiltonian_energy_error = 0.25981471876749396, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9978287375375353, log_density = 9.514615264707887, hamiltonian_energy = -5.256788630807493, hamiltonian_energy_error = -0.15009228462516067, max_hamiltonian_energy_error = -0.4008483864781347, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9013327483294329, log_density = 8.397772266627609, hamiltonian_energy = -5.484953479021419, hamiltonian_energy_error = 0.26439087589862, max_hamiltonian_energy_error = 0.26439087589862, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 0.9898877772313944, log_density = 11.250131057451831, hamiltonian_energy = -7.559827012493275, hamiltonian_energy_error = -0.18927010962581736, max_hamiltonian_energy_error = -0.4051911206594543, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9606315696388245, log_density = 11.21783563211328, hamiltonian_energy = -9.815393704366267, hamiltonian_energy_error = -0.1412514452332818, max_hamiltonian_energy_error = -0.24568715312117817, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9950836190567387, log_density = 12.373359925200434, hamiltonian_energy = -10.287368176024966, hamiltonian_energy_error = -0.1219635646309456, max_hamiltonian_energy_error = -0.14455624087312735, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.992514458611322, log_density = 12.096035022420763, hamiltonian_energy = -9.87934032454276, hamiltonian_energy_error = -0.03744415904985132, max_hamiltonian_energy_error = -0.042691621819781034, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9979440267674811, log_density = 11.748172329978425, hamiltonian_energy = -11.194362767572832, hamiltonian_energy_error = -0.007613274501421685, max_hamiltonian_energy_error = -0.022657899741831855, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9765625913172187, log_density = 11.021576974363327, hamiltonian_energy = -10.299932365299517, hamiltonian_energy_error = 0.035778119912633244, max_hamiltonian_energy_error = 0.05797213867404061, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9043411191512043, log_density = 11.305951803694326, hamiltonian_energy = -8.056820959655452, hamiltonian_energy_error = 0.0004004265518560146, max_hamiltonian_energy_error = 0.2278289454418383, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.934511756530721, log_density = 10.143918954743203, hamiltonian_energy = -8.314806532697164, hamiltonian_energy_error = 0.07146460377804154, max_hamiltonian_energy_error = 0.14670847572389967, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9621580237330205, log_density = 10.829004204858359, hamiltonian_energy = -7.174472241324493, hamiltonian_energy_error = -0.153923306967358, max_hamiltonian_energy_error = -0.316231034670972, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9738994397028672, log_density = 10.368026682039725, hamiltonian_energy = -8.966725545466787, hamiltonian_energy_error = 0.05043591920236068, max_hamiltonian_energy_error = -0.19977600949294505, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9862391073899872, log_density = 11.78444917955871, hamiltonian_energy = -8.512293517245535, hamiltonian_energy_error = -0.1897610691764431, max_hamiltonian_energy_error = -0.23135202467680926, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.9979724789387883, log_density = 11.430158421907622, hamiltonian_energy = -11.108209555449998, hamiltonian_energy_error = 0.0006827038386703066, max_hamiltonian_energy_error = -0.1021757804457799, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9190767923443837, log_density = 7.819300421291656, hamiltonian_energy = -7.030803352954423, hamiltonian_energy_error = 0.21407041219932132, max_hamiltonian_energy_error = 0.23410509706221205, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9339909818443605, log_density = 8.193290238862247, hamiltonian_energy = -4.533982972493881, hamiltonian_energy_error = 0.09251894660331494, max_hamiltonian_energy_error = 0.3030544599400624, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.847729516934079, log_density = 11.020565401336215, hamiltonian_energy = -4.371229931949962, hamiltonian_energy_error = -0.1686660828079125, max_hamiltonian_energy_error = 0.7220061002247338, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.749809224809204, log_density = 10.941690482185134, hamiltonian_energy = -8.079878430675567, hamiltonian_energy_error = 0.24654757192542576, max_hamiltonian_energy_error = 0.6833487204595121, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9933068856214369, log_density = 11.680326841247457, hamiltonian_energy = -10.045973856463961, hamiltonian_energy_error = -0.23351285006899936, max_hamiltonian_energy_error = -0.23351285006899936, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.4351312612614482, log_density = 7.89260833358874, hamiltonian_energy = -3.178734265081987, hamiltonian_energy_error = 0.11387665515673007, max_hamiltonian_energy_error = 2.3850981398822544, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.323980089808147, hamiltonian_energy = -7.229672583736165, hamiltonian_energy_error = -0.17036209423110993, max_hamiltonian_energy_error = -0.5729581376703958, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9185235888534284, log_density = 8.227028599271703, hamiltonian_energy = -5.284188685322352, hamiltonian_energy_error = 0.062373063758499825, max_hamiltonian_energy_error = -0.45577136007704233, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 10.993281418271035, hamiltonian_energy = -7.672106684331829, hamiltonian_energy_error = -0.2434726189804577, max_hamiltonian_energy_error = -0.5417365884418572, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9926356156286483, log_density = 10.210157798372736, hamiltonian_energy = -9.469427569812362, hamiltonian_energy_error = -0.01377071533422658, max_hamiltonian_energy_error = -0.21114464182516635, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7016777897525147, log_density = 11.420072379718734, hamiltonian_energy = -7.915253291744552, hamiltonian_energy_error = -0.21015930611664757, max_hamiltonian_energy_error = 1.0679268467198915, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8606209324068941, log_density = 9.264602898720613, hamiltonian_energy = -7.491174289326787, hamiltonian_energy_error = 0.2664692151777661, max_hamiltonian_energy_error = 0.4008568953459566, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9707546540611948, log_density = 8.09213135015265, hamiltonian_energy = -5.327024805652212, hamiltonian_energy_error = 0.018505828328268414, max_hamiltonian_energy_error = -0.3819226204141355, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.967382114738604, log_density = 10.6619600683569, hamiltonian_energy = -5.054216524442133, hamiltonian_energy_error = -0.14354614029447976, max_hamiltonian_energy_error = -0.3692993473244037, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8554817157096201, log_density = 10.117156331815739, hamiltonian_energy = -7.022689707560659, hamiltonian_energy_error = 0.18444165633199106, max_hamiltonian_energy_error = 0.401020680227683, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9906551486640237, log_density = 7.611879346332023, hamiltonian_energy = -6.489611366243607, hamiltonian_energy_error = 0.11657973353091844, max_hamiltonian_energy_error = -0.20182188235798826, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 7.869946385441947, hamiltonian_energy = -5.7628674164351334, hamiltonian_energy_error = -0.3123247443003372, max_hamiltonian_energy_error = -0.42479892426917054, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8461444310839313, log_density = 9.334210913708505, hamiltonian_energy = -5.408500941629326, hamiltonian_energy_error = 0.219054882728976, max_hamiltonian_energy_error = 0.359426532445279, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9948510759716811, log_density = 8.733104094601153, hamiltonian_energy = -6.494319534613888, hamiltonian_energy_error = -0.05262588027976367, max_hamiltonian_energy_error = -0.3184057183198208, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.9687270061131414, log_density = 9.381400137159792, hamiltonian_energy = -4.656778284895401, hamiltonian_energy_error = 0.024703139367862725, max_hamiltonian_energy_error = -0.3680420755674181, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9789336131881559, log_density = 6.232684382139881, hamiltonian_energy = -2.0405968170054374, hamiltonian_energy_error = -0.11019785632500145, max_hamiltonian_energy_error = -0.29487106018310705, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9709413075152601, log_density = 8.041989404762955, hamiltonian_energy = -5.403993155617067, hamiltonian_energy_error = -0.1053854224453099, max_hamiltonian_energy_error = -0.6507773232180112, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9890349373040178, log_density = 10.825518666424898, hamiltonian_energy = -3.3182930979459293, hamiltonian_energy_error = -0.4020809159963541, max_hamiltonian_energy_error = -0.4020809159963541, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8135793572328682, log_density = 10.594631991260567, hamiltonian_energy = -7.114619810245772, hamiltonian_energy_error = 0.15257673488202705, max_hamiltonian_energy_error = 0.36057052941220213, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9737302451790923, log_density = 11.762583655291685, hamiltonian_energy = -9.487690165583668, hamiltonian_energy_error = -0.31811002108340425, max_hamiltonian_energy_error = -0.31811002108340425, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8330396482381052, log_density = 10.803136671785904, hamiltonian_energy = -7.650198221726876, hamiltonian_energy_error = 0.09423795782169808, max_hamiltonian_energy_error = 0.41779717531591043, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9321024061777682, log_density = 11.036799262460603, hamiltonian_energy = -7.420480286377231, hamiltonian_energy_error = 0.11132823302722095, max_hamiltonian_energy_error = 0.30326757710277885, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8766141728236307, log_density = 10.48612045137001, hamiltonian_energy = -7.598827555403082, hamiltonian_energy_error = 0.11981010259046876, max_hamiltonian_energy_error = 0.39704871167580436, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8997101500367615, log_density = 11.604370723420077, hamiltonian_energy = -5.596722675493398, hamiltonian_energy_error = -0.15026977342060022, max_hamiltonian_energy_error = 0.2613097457183775, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9849949316561837, log_density = 11.455953506780464, hamiltonian_energy = -10.04653793412785, hamiltonian_energy_error = 0.019894622098789227, max_hamiltonian_energy_error = 0.12481364895145042, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8853706518026344, log_density = 11.252895603931442, hamiltonian_energy = -8.459007709477813, hamiltonian_energy_error = 0.025664044845768785, max_hamiltonian_energy_error = 0.23050248940531048, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9899906708195624, log_density = 12.370729554235657, hamiltonian_energy = -10.60332272990156, hamiltonian_energy_error = -0.03510459879393579, max_hamiltonian_energy_error = -0.26071447572363127, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8745328845917661, log_density = 10.945496995610625, hamiltonian_energy = -8.345691159828764, hamiltonian_energy_error = 0.12744873030833404, max_hamiltonian_energy_error = 0.41397944343133375, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9302354219156147, log_density = 8.862531860597606, hamiltonian_energy = -7.203831220861625, hamiltonian_energy_error = 0.11756094155554742, max_hamiltonian_energy_error = 0.26344169366884174, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9762119237638456, log_density = 7.705066738002431, hamiltonian_energy = -2.4629986045579955, hamiltonian_energy_error = 0.14359123782444794, max_hamiltonian_energy_error = -0.18533257203999653, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 63, is_accept = true, acceptance_rate = 0.7764463780996461, log_density = 7.836210856458099, hamiltonian_energy = -2.229424320503135, hamiltonian_energy_error = 0.14375629940737777, max_hamiltonian_energy_error = 2.045427248433359, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9997375990042062, log_density = 13.042995738322027, hamiltonian_energy = -7.858522743017271, hamiltonian_energy_error = -0.2569868694401318, max_hamiltonian_energy_error = -0.2569868694401318, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9843903880142372, log_density = 12.95763795415653, hamiltonian_energy = -12.552585365005877, hamiltonian_energy_error = 0.017287389602751446, max_hamiltonian_energy_error = 0.0330525231524863, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9599221659022267, log_density = 12.080795249810974, hamiltonian_energy = -10.81621069558221, hamiltonian_energy_error = 0.008335799038265534, max_hamiltonian_energy_error = 0.08618583344274988, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.3948505510371662, log_density = 10.89406469501779, hamiltonian_energy = -5.807729836693179, hamiltonian_energy_error = 0.35744384557399034, max_hamiltonian_energy_error = 1.4953542435102332, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8579892657726949, log_density = 10.624323102172315, hamiltonian_energy = -8.525777569450984, hamiltonian_energy_error = 0.20993220584457006, max_hamiltonian_energy_error = 0.26444757813567854, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9816074287451156, log_density = 11.229332577082547, hamiltonian_energy = -8.150316422138179, hamiltonian_energy_error = -0.083372667326298, max_hamiltonian_energy_error = -0.24543099409213553, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9976107189347095, log_density = 12.803979259394143, hamiltonian_energy = -10.705646977942262, hamiltonian_energy_error = -0.03781066142665068, max_hamiltonian_energy_error = -0.05881154991496551, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8931036716253059, log_density = 11.355163288888871, hamiltonian_energy = -9.952632137152095, hamiltonian_energy_error = 0.12479940593351735, max_hamiltonian_energy_error = 0.19806393398101463, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9655350899314781, log_density = 12.440009682187188, hamiltonian_energy = -9.79568572234431, hamiltonian_energy_error = -0.11467058911683914, max_hamiltonian_energy_error = -0.18016619114045085, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.923037534686934, log_density = 9.753241728919761, hamiltonian_energy = -8.152641651186785, hamiltonian_energy_error = 0.09289048657354648, max_hamiltonian_energy_error = 0.23970102594567955, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.7419524422397766, log_density = 11.060726884097118, hamiltonian_energy = -5.567227569670477, hamiltonian_energy_error = 0.28964494087542647, max_hamiltonian_energy_error = 1.1350069097340443, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9854071032140211, log_density = 11.52402397822684, hamiltonian_energy = -10.173863796600982, hamiltonian_energy_error = -0.03208935765843002, max_hamiltonian_energy_error = -0.20115921670679526, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9969472089694301, log_density = 12.041949811610875, hamiltonian_energy = -10.838519977429758, hamiltonian_energy_error = 0.005064064119443046, max_hamiltonian_energy_error = -0.056881641271340655, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.876406845087852, log_density = 10.396454184046284, hamiltonian_energy = -7.977549650494428, hamiltonian_energy_error = 0.07087911227944943, max_hamiltonian_energy_error = 0.390544576649118, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9874404842597541, log_density = 11.065794753052062, hamiltonian_energy = -9.86769484181453, hamiltonian_energy_error = 0.022739896947461702, max_hamiltonian_energy_error = -0.284997299929989, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9882205537990127, log_density = 11.201979412260226, hamiltonian_energy = -5.133733831957141, hamiltonian_energy_error = -1.7461991464322804, max_hamiltonian_energy_error = -1.7461991464322804, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.884988429893276, log_density = 11.342373513267987, hamiltonian_energy = -9.044583402479166, hamiltonian_energy_error = 0.15200625517990574, max_hamiltonian_energy_error = 0.2713590900804803, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9675729923678316, log_density = 12.199203509565804, hamiltonian_energy = -9.844452517958423, hamiltonian_energy_error = -0.0990310185179073, max_hamiltonian_energy_error = -0.41676718412392333, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9649623732001303, log_density = 11.069165576739547, hamiltonian_energy = -9.754733364703272, hamiltonian_energy_error = 0.034633611935094066, max_hamiltonian_energy_error = 0.08655377721457569, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8930385716379098, log_density = 11.141165106406872, hamiltonian_energy = -8.834733953822381, hamiltonian_energy_error = 0.11188036554013081, max_hamiltonian_energy_error = 0.2197210437534487, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 39, is_accept = true, acceptance_rate = 0.9890519127339491, log_density = 10.721130702818524, hamiltonian_energy = -10.34278974313784, hamiltonian_energy_error = 0.05952250549804816, max_hamiltonian_energy_error = -0.26524338463933894, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9891136477901284, log_density = 11.007365975391384, hamiltonian_energy = -9.716037477796695, hamiltonian_energy_error = 0.026267732181082692, max_hamiltonian_energy_error = -0.3899519442491215, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9993962547872192, log_density = 11.45620362514509, hamiltonian_energy = -9.378379844578461, hamiltonian_energy_error = -0.23892310462985833, max_hamiltonian_energy_error = -0.2797802411261934, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8622388126916213, log_density = 6.847284499470469, hamiltonian_energy = -5.17343837738199, hamiltonian_energy_error = 0.35680428886853566, max_hamiltonian_energy_error = 0.35680428886853566, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 11.67021066913506, hamiltonian_energy = -6.045097593558788, hamiltonian_energy_error = -0.3253026676463744, max_hamiltonian_energy_error = -0.3808517857830118, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.966099110110985, log_density = 11.351354787040417, hamiltonian_energy = -9.9097485644192, hamiltonian_energy_error = 0.019112804404931794, max_hamiltonian_energy_error = -0.21345621810179338, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 11.462375940449888, hamiltonian_energy = -10.704620161200497, hamiltonian_energy_error = -0.087901131417091, max_hamiltonian_energy_error = -0.26524139213107745, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9719777669778245, log_density = 9.916024374129133, hamiltonian_energy = -7.543594875131221, hamiltonian_energy_error = -0.008194196038237678, max_hamiltonian_energy_error = 0.12369875034372502, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8424593558881569, log_density = 9.027783417609738, hamiltonian_energy = -3.8507288092711427, hamiltonian_energy_error = -1.009214278448912, max_hamiltonian_energy_error = 1.6856572889928554, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 11.709004092009689, hamiltonian_energy = -8.562306924763634, hamiltonian_energy_error = -0.0939147421716946, max_hamiltonian_energy_error = -0.164092681937813, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.991468741558576, log_density = 11.386052091724995, hamiltonian_energy = -10.466884145914047, hamiltonian_energy_error = -0.0020451991799959046, max_hamiltonian_energy_error = -0.08179845132399066, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8591135198564186, log_density = 10.498810286020495, hamiltonian_energy = -8.47087141510175, hamiltonian_energy_error = 0.17462700169782508, max_hamiltonian_energy_error = 0.4095925434494454, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8979040407192093, log_density = 7.902193655426061, hamiltonian_energy = -6.1572890484819265, hamiltonian_energy_error = 0.12945280420138516, max_hamiltonian_energy_error = 0.23650285462752496, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 9.05052356059647, hamiltonian_energy = -5.981501711159076, hamiltonian_energy_error = -0.04988135343793232, max_hamiltonian_energy_error = -0.2319434393982407, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.5758903483834308, log_density = 6.444776068644018, hamiltonian_energy = -4.9373592543702065, hamiltonian_energy_error = 0.45319190903366025, max_hamiltonian_energy_error = 0.6824235476445635, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9055089628256089, log_density = 11.336265247259393, hamiltonian_energy = -4.384766703245241, hamiltonian_energy_error = -0.6137824137908829, max_hamiltonian_energy_error = -0.6387498912616332, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9443126189972444, log_density = 11.66109402504134, hamiltonian_energy = -9.03130243621925, hamiltonian_energy_error = 0.07446243627665616, max_hamiltonian_energy_error = 0.13348545863672534, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9377751660962799, log_density = 10.997806139462302, hamiltonian_energy = -9.438264519672618, hamiltonian_energy_error = 0.28439663327904086, max_hamiltonian_energy_error = 0.28439663327904086, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9746731831061772, log_density = 8.721029054013238, hamiltonian_energy = -6.651461832143125, hamiltonian_energy_error = 0.011113115794942452, max_hamiltonian_energy_error = -0.40778992144845905, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6305138600770277, log_density = 9.422941364252805, hamiltonian_energy = -5.380078196543212, hamiltonian_energy_error = 0.12518689277702233, max_hamiltonian_energy_error = 1.7181191327909886, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 12.199188891649689, hamiltonian_energy = -8.928388571827453, hamiltonian_energy_error = -0.11876941057400003, max_hamiltonian_energy_error = -0.14676909761251622, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9406503865956509, log_density = 9.90458724741639, hamiltonian_energy = -9.07698657446845, hamiltonian_energy_error = 0.043473124854596534, max_hamiltonian_energy_error = 0.09515392634039443, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9048851335132417, log_density = 11.08169776678039, hamiltonian_energy = -6.9939256942767205, hamiltonian_energy_error = 0.11634115343372109, max_hamiltonian_energy_error = 0.250436587325356, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9640316121265422, log_density = 12.123256743595686, hamiltonian_energy = -9.815548762333524, hamiltonian_energy_error = 0.04443560116432721, max_hamiltonian_energy_error = 0.13461574480086114, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9368568900240853, log_density = 9.201774719478207, hamiltonian_energy = -7.557875545522643, hamiltonian_energy_error = 0.08081974221619603, max_hamiltonian_energy_error = 0.23474800929616446, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9980039769093406, log_density = 9.913650269981254, hamiltonian_energy = -8.364733783702379, hamiltonian_energy_error = -0.14367460891086203, max_hamiltonian_energy_error = -0.2176196565121984, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8797688291653205, log_density = 9.969604545958155, hamiltonian_energy = -7.223203592922832, hamiltonian_energy_error = 0.2057518891501502, max_hamiltonian_energy_error = 0.48260861287835155, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9891266648056158, log_density = 11.210076609251177, hamiltonian_energy = -7.966281440836447, hamiltonian_energy_error = -0.0027240563498676096, max_hamiltonian_energy_error = -0.1909580970499256, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9151450217823357, log_density = 10.84420549418564, hamiltonian_energy = -9.019816923328928, hamiltonian_energy_error = 0.09475283929439016, max_hamiltonian_energy_error = 0.3861928272795936, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9849774979814279, log_density = 11.114315500440728, hamiltonian_energy = -10.07805726812205, hamiltonian_energy_error = 0.055824843780337474, max_hamiltonian_energy_error = -0.33163407988080174, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9379433572728466, log_density = 11.04248209295314, hamiltonian_energy = -9.321630665887662, hamiltonian_energy_error = 0.12260109348810744, max_hamiltonian_energy_error = -0.35630558655038413, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.6273780782905439, log_density = 8.033694946659033, hamiltonian_energy = 0.1643792595327831, hamiltonian_energy_error = 0.607316882603353, max_hamiltonian_energy_error = 0.9524781662333162, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8178606609859435, log_density = 7.199565193906668, hamiltonian_energy = -2.9097265606347404, hamiltonian_energy_error = 0.2618495458708763, max_hamiltonian_energy_error = 0.30842988063092225, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9865584527117628, log_density = 9.8905850572301, hamiltonian_energy = -5.629813693714541, hamiltonian_energy_error = -0.28241793592767817, max_hamiltonian_energy_error = -0.3428603598155746, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9644349884309912, log_density = 10.655825600430697, hamiltonian_energy = -7.752393040345734, hamiltonian_energy_error = 0.06275248343264295, max_hamiltonian_energy_error = 0.06275248343264295, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9933467658109968, log_density = 10.405331665347786, hamiltonian_energy = -8.38312540340498, hamiltonian_energy_error = 0.010706652168639863, max_hamiltonian_energy_error = -0.2206267423601016, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9556782898510908, log_density = 10.936364641837557, hamiltonian_energy = -7.244797765332004, hamiltonian_energy_error = -0.07995553855705051, max_hamiltonian_energy_error = 0.12465658160981885, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9910760994931679, log_density = 11.662166421705505, hamiltonian_energy = -8.50558937102552, hamiltonian_energy_error = 0.07842777088186814, max_hamiltonian_energy_error = -0.12732740930639608, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8902958424205224, log_density = 12.371109501745531, hamiltonian_energy = -8.010091647416374, hamiltonian_energy_error = 0.025794467427653345, max_hamiltonian_energy_error = 0.43834452924718725, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9983097960400359, log_density = 12.640648780788737, hamiltonian_energy = -11.462457086276808, hamiltonian_energy_error = -0.020860524878605347, max_hamiltonian_energy_error = -0.06062848829371781, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9814825863491734, log_density = 11.513819512261005, hamiltonian_energy = -10.984250424922896, hamiltonian_energy_error = 0.0029738927309654883, max_hamiltonian_energy_error = 0.05850945796562179, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6916675039846708, log_density = 9.166488536461195, hamiltonian_energy = -8.587805242195868, hamiltonian_energy_error = 0.4743107862427305, max_hamiltonian_energy_error = 0.4743107862427305, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 10.509998326396692, hamiltonian_energy = -8.295088578625558, hamiltonian_energy_error = -0.1244802664011786, max_hamiltonian_energy_error = -0.4826902665160926, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.9928004212844641, log_density = 10.453395101698398, hamiltonian_energy = -9.528788431912416, hamiltonian_energy_error = 0.03062062690234235, max_hamiltonian_energy_error = -0.3950225957241127, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9768730424016229, log_density = 11.749947676001328, hamiltonian_energy = -9.868035138249468, hamiltonian_energy_error = -0.3711343131798621, max_hamiltonian_energy_error = -0.3711343131798621, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9689601745626872, log_density = 11.500304640310153, hamiltonian_energy = -10.54439951378362, hamiltonian_energy_error = 0.10891476072198003, max_hamiltonian_energy_error = 0.10891476072198003, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8606187012263974, log_density = 9.135020324045215, hamiltonian_energy = -6.170376531102045, hamiltonian_energy_error = -0.3128087958758927, max_hamiltonian_energy_error = 0.552966431737997, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9737782431195192, log_density = 10.52158261705935, hamiltonian_energy = -4.6481187945823805, hamiltonian_energy_error = -0.004214588595022661, max_hamiltonian_energy_error = -0.31141804020116837, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 13.225068444675001, hamiltonian_energy = -10.549036895061391, hamiltonian_energy_error = -0.30663343707921165, max_hamiltonian_energy_error = -0.30663343707921165, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9530206684586651, log_density = 11.522953623079614, hamiltonian_energy = -9.368769477716523, hamiltonian_energy_error = 0.08209959753678397, max_hamiltonian_energy_error = 0.0970755496971929, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 12.57506196852999, hamiltonian_energy = -10.992656095446744, hamiltonian_energy_error = -0.04679593059357856, max_hamiltonian_energy_error = -0.0759027412091946, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9737485135667076, log_density = 10.500111894117632, hamiltonian_energy = -8.558453768160136, hamiltonian_energy_error = 0.019106366114415962, max_hamiltonian_energy_error = -0.12013248407678745, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9915574811013051, log_density = 11.458355809070884, hamiltonian_energy = -9.16803237728191, hamiltonian_energy_error = 0.009116337275539621, max_hamiltonian_energy_error = -0.19039859943649518, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9385762801854141, log_density = 10.841151260567589, hamiltonian_energy = -6.535406891896624, hamiltonian_energy_error = 0.07623141167027914, max_hamiltonian_energy_error = 0.2690927160438079, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9993006000936304, log_density = 12.259794876197127, hamiltonian_energy = -10.215746987655892, hamiltonian_energy_error = -0.08322541637953229, max_hamiltonian_energy_error = -0.189046884247686, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9474546006708335, log_density = 9.747022825957675, hamiltonian_energy = -8.545134836539576, hamiltonian_energy_error = 0.11878409525389344, max_hamiltonian_energy_error = 0.1301003728833816, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.966530521721491, hamiltonian_energy = -9.0245050224086, hamiltonian_energy_error = -0.10351194337849456, max_hamiltonian_energy_error = -0.15632462251683954, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9430126200563929, log_density = 11.467103958325966, hamiltonian_energy = -9.58016337432979, hamiltonian_energy_error = 0.16345672183773097, max_hamiltonian_energy_error = 0.16345672183773097, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7324961063013944, log_density = 12.566213275747177, hamiltonian_energy = -9.0858418221333, hamiltonian_energy_error = 0.1227318568842275, max_hamiltonian_energy_error = 0.6004795659302307, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8317771229933105, log_density = 12.663775676507022, hamiltonian_energy = -8.837213718944035, hamiltonian_energy_error = -0.0653060412684745, max_hamiltonian_energy_error = 0.3733445015299157, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9882885331254201, log_density = 11.375320299974923, hamiltonian_energy = -10.203133770112688, hamiltonian_energy_error = 0.036127308271018066, max_hamiltonian_energy_error = -0.05485585751298139, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9975845695005733, log_density = 12.831673465763057, hamiltonian_energy = -10.706863826762369, hamiltonian_energy_error = -0.07495578156886928, max_hamiltonian_energy_error = -0.07495578156886928, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8164801873125069, log_density = 8.516090895442556, hamiltonian_energy = -7.983604951827262, hamiltonian_energy_error = 0.29462103409557194, max_hamiltonian_energy_error = 0.29462103409557194, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8905807919162745, log_density = 9.914265009125671, hamiltonian_energy = -6.39062454881648, hamiltonian_energy_error = 0.006522503805686419, max_hamiltonian_energy_error = 0.9539903754344312, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9871932435315334, log_density = 8.000587246603889, hamiltonian_energy = -5.171929095677491, hamiltonian_energy_error = 0.053866183220160124, max_hamiltonian_energy_error = -0.6436917237315569, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9836481444645391, log_density = 7.047838793409618, hamiltonian_energy = -6.4547404432521684, hamiltonian_energy_error = 0.05029964780353424, max_hamiltonian_energy_error = -0.6432289869463474, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 10.975022135176213, hamiltonian_energy = -5.290169356201089, hamiltonian_energy_error = -0.6184291711129273, max_hamiltonian_energy_error = -0.8855861752548311, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9984299182628649, log_density = 10.280110234358936, hamiltonian_energy = -8.793470491761312, hamiltonian_energy_error = -0.08512467090617015, max_hamiltonian_energy_error = -0.14802499521747414, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9390057342032975, log_density = 9.722305864986222, hamiltonian_energy = -8.831986158425025, hamiltonian_energy_error = 0.13335960166628524, max_hamiltonian_energy_error = 0.14413997568147074, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9977927813023318, log_density = 11.420158373098772, hamiltonian_energy = -9.28725473325717, hamiltonian_energy_error = -0.11447094516272394, max_hamiltonian_energy_error = -0.18808855671210623, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5081843981790954, log_density = 8.538084878888808, hamiltonian_energy = -5.996847008239714, hamiltonian_energy_error = 0.9057429587328434, max_hamiltonian_energy_error = 1.0233327698516854, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9994463379156749, log_density = 8.206308195506459, hamiltonian_energy = -3.697367928126897, hamiltonian_energy_error = -0.05069552981442982, max_hamiltonian_energy_error = -1.622957905257258, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 8.581277232132718, hamiltonian_energy = -7.243384226481197, hamiltonian_energy_error = -0.19024182302979398, max_hamiltonian_energy_error = -0.5248347103501523, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9842115826218739, log_density = 10.72963011296601, hamiltonian_energy = -6.502498717547037, hamiltonian_energy_error = -0.28485576282767155, max_hamiltonian_energy_error = -0.49354592085575266, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9813854482961448, log_density = 11.438545013638848, hamiltonian_energy = -9.863106052594746, hamiltonian_energy_error = 0.0999590731978941, max_hamiltonian_energy_error = -0.18666177392158012, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 10.141183226788355, hamiltonian_energy = -9.084990972730802, hamiltonian_energy_error = -0.09061917530055297, max_hamiltonian_energy_error = -0.43131787167452273, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8409845283111868, log_density = 11.750212036775558, hamiltonian_energy = -7.444974384104496, hamiltonian_energy_error = -0.20973812124641888, max_hamiltonian_energy_error = 0.7190819717667694, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9914133858951295, log_density = 10.428547326397442, hamiltonian_energy = -8.59033262075795, hamiltonian_energy_error = -0.035954809013224676, max_hamiltonian_energy_error = -0.204781209911701, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9988600523519302, log_density = 10.8019371551037, hamiltonian_energy = -7.653693633890169, hamiltonian_energy_error = -0.11002934618089988, max_hamiltonian_energy_error = -0.2598315286825539, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9355174132216431, log_density = 9.165802313133707, hamiltonian_energy = -8.130088190913392, hamiltonian_energy_error = 0.03932059560547252, max_hamiltonian_energy_error = 0.13023630012346743, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.7015479007342895, log_density = 10.652696032874239, hamiltonian_energy = -6.22563266468628, hamiltonian_energy_error = 0.14692642147719948, max_hamiltonian_energy_error = 0.837679017089755, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 43, is_accept = true, acceptance_rate = 0.8273148529640433, log_density = 10.112702310552104, hamiltonian_energy = -7.529706494752425, hamiltonian_energy_error = -0.021329070649572124, max_hamiltonian_energy_error = 0.6533895753648062, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.8078187279973612, log_density = 12.507140520235042, hamiltonian_energy = -8.538735626600433, hamiltonian_energy_error = 0.18573143012615212, max_hamiltonian_energy_error = 0.30463216822630024, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.986376905790733, log_density = 11.216665638110047, hamiltonian_energy = -10.500724569954198, hamiltonian_energy_error = 0.04244950723323626, max_hamiltonian_energy_error = -0.04451358351004053, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.7947084892895814, log_density = 13.14703161130404, hamiltonian_energy = -5.869289323024997, hamiltonian_energy_error = -0.26226949109742836, max_hamiltonian_energy_error = 0.4703116953189168, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8626089113887883, log_density = 10.821157245967015, hamiltonian_energy = -10.312311934653213, hamiltonian_energy_error = 0.2109572772615529, max_hamiltonian_energy_error = 0.22457200382040554, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9541761634963526, log_density = 12.608743885613265, hamiltonian_energy = -9.306939984764064, hamiltonian_energy_error = -0.1974053527916695, max_hamiltonian_energy_error = -0.21509740680182254, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5235154132184625, log_density = 10.996727549833832, hamiltonian_energy = -6.713298785553893, hamiltonian_energy_error = 0.5519183539378218, max_hamiltonian_energy_error = 1.0734644858491142, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.986598057028876, log_density = 10.146719204176613, hamiltonian_energy = -9.421422452794792, hamiltonian_energy_error = -0.04422483569203273, max_hamiltonian_energy_error = -0.22340256531571967, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.834591952638424, log_density = 9.539434306765543, hamiltonian_energy = -5.917084881742396, hamiltonian_energy_error = 0.16183427454977917, max_hamiltonian_energy_error = 0.44134955231888373, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9453402762212723, log_density = 7.610455481736285, hamiltonian_energy = -3.007972272104152, hamiltonian_energy_error = 0.08442159600184773, max_hamiltonian_energy_error = -0.5164465198980368, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 11.624137433444858, hamiltonian_energy = -5.701367553650327, hamiltonian_energy_error = -0.19201080235517765, max_hamiltonian_energy_error = -0.2998212374254372, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9777661668663626, log_density = 12.28435796885221, hamiltonian_energy = -8.999875679267818, hamiltonian_energy_error = -0.0752152507414543, max_hamiltonian_energy_error = 0.10630218881109776, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9884279638211152, log_density = 11.98996040843723, hamiltonian_energy = -11.433235381537855, hamiltonian_energy_error = -0.023464736268229203, max_hamiltonian_energy_error = 0.03422605321440919, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.793788454506109, log_density = 10.788968172230945, hamiltonian_energy = -9.368221150433868, hamiltonian_energy_error = 0.21892756165149052, max_hamiltonian_energy_error = 0.3626909676782084, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.993504987735439, log_density = 10.218638862905301, hamiltonian_energy = -9.814454061193334, hamiltonian_energy_error = 0.05274685565119164, max_hamiltonian_energy_error = -0.21380171255347413, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9108501541647728, log_density = 7.050451161246853, hamiltonian_energy = -3.733394161798845, hamiltonian_energy_error = 0.18351090041770401, max_hamiltonian_energy_error = 0.30336985129255334, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.1904107434645728, log_density = 9.278779820006596, hamiltonian_energy = 0.5170107045398922, hamiltonian_energy_error = 0.6110130428629228, max_hamiltonian_energy_error = 5.152715540204263, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.773172802324306, log_density = 9.944132722982621, hamiltonian_energy = -6.9665018718041996, hamiltonian_energy_error = -0.20912715488411582, max_hamiltonian_energy_error = 0.7336603256103009, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.5516023594833607, log_density = 8.835888290769, hamiltonian_energy = -5.320643392003603, hamiltonian_energy_error = 0.3304944067509039, max_hamiltonian_energy_error = 1.3362834309687655, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9905360874405269, log_density = 10.465523027895916, hamiltonian_energy = -8.091195910169274, hamiltonian_energy_error = -0.0013830552879365854, max_hamiltonian_energy_error = -0.3123927823027852, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.800337477971654, log_density = 7.528452243561091, hamiltonian_energy = -5.193767521863048, hamiltonian_energy_error = 0.25089357042348226, max_hamiltonian_energy_error = 0.47619175178881257, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9895427538513967, log_density = 10.239921403923665, hamiltonian_energy = -6.357466859404948, hamiltonian_energy_error = -0.07608190815484317, max_hamiltonian_energy_error = -0.10973325259062161, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9850426283971251, log_density = 10.367805819853842, hamiltonian_energy = -8.86631615607592, hamiltonian_energy_error = 0.020966636455661103, max_hamiltonian_energy_error = 0.04999330385560974, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9305103264996893, log_density = 10.199264533015711, hamiltonian_energy = -6.455123004507842, hamiltonian_energy_error = 0.1403306743606123, max_hamiltonian_energy_error = 0.7788648751242366, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.5998476998932621, log_density = 9.131896568947958, hamiltonian_energy = -2.8564255115085864, hamiltonian_energy_error = 0.2996965331898469, max_hamiltonian_energy_error = 1.2344178451049643, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.968806390686946, log_density = 11.902846545514194, hamiltonian_energy = -6.856566928721447, hamiltonian_energy_error = -0.10138507624806614, max_hamiltonian_energy_error = -0.524190900663835, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9331060386419112, log_density = 11.255286923055163, hamiltonian_energy = -10.08230521519661, hamiltonian_energy_error = 0.06714862086601592, max_hamiltonian_energy_error = 0.18471878215075677, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9729543899126969, log_density = 12.316833055428454, hamiltonian_energy = -7.929260649402472, hamiltonian_energy_error = -0.0489003539921784, max_hamiltonian_energy_error = 0.09795012197532849, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9627659835974174, log_density = 12.087085203429147, hamiltonian_energy = -10.505997455094137, hamiltonian_energy_error = 0.04754334705774177, max_hamiltonian_energy_error = 0.11213764019630901, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9293794917329128, log_density = 10.82573086163713, hamiltonian_energy = -9.805620131882128, hamiltonian_energy_error = 0.09746566772979826, max_hamiltonian_energy_error = 0.13930031981199242, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9876116665498712, log_density = 10.747576005219836, hamiltonian_energy = -9.558446925492847, hamiltonian_energy_error = -0.006744240490474951, max_hamiltonian_energy_error = -0.3205879104003575, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9881605906228995, log_density = 11.397891488905914, hamiltonian_energy = -10.149112302991089, hamiltonian_energy_error = 0.01978102644119417, max_hamiltonian_energy_error = -0.07703208892614732, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9549945466847733, log_density = 11.764951768489636, hamiltonian_energy = -10.127733455579442, hamiltonian_energy_error = 0.047664339852444115, max_hamiltonian_energy_error = 0.20696619752631662, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.969458258896171, log_density = 12.65847752675174, hamiltonian_energy = -9.923762257233326, hamiltonian_energy_error = -0.11020835229797576, max_hamiltonian_energy_error = -0.1441759169435457, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9288879203894208, log_density = 10.649825999292089, hamiltonian_energy = -9.05463683027466, hamiltonian_energy_error = 0.059896726096239306, max_hamiltonian_energy_error = 0.10409510422016766, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9826044903734571, log_density = 10.349249748544551, hamiltonian_energy = -9.78267402583731, hamiltonian_energy_error = 0.00736901585630001, max_hamiltonian_energy_error = -0.046915447511253205, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8611898665963471, log_density = 12.005723682877845, hamiltonian_energy = -5.7353297104328895, hamiltonian_energy_error = -0.01553579949047279, max_hamiltonian_energy_error = 0.43836565593373766, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.6827692344149556, log_density = 11.02290639723827, hamiltonian_energy = -3.636286479180016, hamiltonian_energy_error = 0.3913570069265928, max_hamiltonian_energy_error = 0.9134105031923783, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9797784180559664, log_density = 10.699825082919341, hamiltonian_energy = -9.264878077577508, hamiltonian_energy_error = 0.10542528533161288, max_hamiltonian_energy_error = -0.1847803073992118, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9924079235462671, log_density = 10.601757942211485, hamiltonian_energy = -9.800968459124174, hamiltonian_energy_error = 0.06631610683819034, max_hamiltonian_energy_error = -0.24397583084744312, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9944168710203765, log_density = 10.449006570092306, hamiltonian_energy = -7.940907253469929, hamiltonian_energy_error = -0.16181421697947052, max_hamiltonian_energy_error = -0.2806385676906391, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 10.844112419502427, hamiltonian_energy = -9.43423844948606, hamiltonian_energy_error = -0.04481055753362817, max_hamiltonian_energy_error = -0.24655994000986503, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8389411060486219, log_density = 10.935548942043496, hamiltonian_energy = -6.432034320094493, hamiltonian_energy_error = -0.6717031893015006, max_hamiltonian_energy_error = -0.6717031893015006, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9991856930030988, log_density = 12.060544099687828, hamiltonian_energy = -10.344157687026984, hamiltonian_energy_error = -0.015699592880125124, max_hamiltonian_energy_error = -0.11336415717930493, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9480557688111269, log_density = 10.458766891375507, hamiltonian_energy = -9.256965886077262, hamiltonian_energy_error = 0.16330680596061953, max_hamiltonian_energy_error = 0.16330680596061953, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9867282492757415, log_density = 10.05013424069907, hamiltonian_energy = -8.632243046695006, hamiltonian_energy_error = 0.03457367285314383, max_hamiltonian_energy_error = -0.21236439187271827, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9433106751374299, log_density = 12.342390793066505, hamiltonian_energy = -7.462129528607063, hamiltonian_energy_error = -0.3530618145495197, max_hamiltonian_energy_error = -0.3530618145495197, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9461621457178042, log_density = 11.77019446010557, hamiltonian_energy = -9.653792462147287, hamiltonian_energy_error = -0.031052495514385825, max_hamiltonian_energy_error = 0.12261902717416895, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9696734030878774, log_density = 10.755984427468487, hamiltonian_energy = -10.039403329446664, hamiltonian_energy_error = 0.06182403842531059, max_hamiltonian_energy_error = 0.06267323307154093, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9888023022946922, log_density = 12.083211470738863, hamiltonian_energy = -9.830906042723704, hamiltonian_energy_error = -0.012867270202916004, max_hamiltonian_energy_error = -0.20243891774200584, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9546539773459128, log_density = 12.076280035737751, hamiltonian_energy = -10.325479653828175, hamiltonian_energy_error = 0.007268723370572161, max_hamiltonian_energy_error = 0.14578533829900664, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9319447857584089, log_density = 12.00535242610622, hamiltonian_energy = -9.888592837017848, hamiltonian_energy_error = 0.11231111215674616, max_hamiltonian_energy_error = 0.25410946931281053, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9849701055803833, log_density = 12.723271566348023, hamiltonian_energy = -10.675857007691821, hamiltonian_energy_error = -0.13932111939517, max_hamiltonian_energy_error = -0.3899722126928751, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9425752449968938, log_density = 12.123206330267738, hamiltonian_energy = -11.49289906839579, hamiltonian_energy_error = 0.09817914826301433, max_hamiltonian_energy_error = 0.09817914826301433, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9040378507177149, log_density = 12.86620184568584, hamiltonian_energy = -9.309838119619158, hamiltonian_energy_error = -0.12345510996636655, max_hamiltonian_energy_error = 0.4418585358885174, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8709351552461051, log_density = 11.375775652894445, hamiltonian_energy = -5.98821173930019, hamiltonian_energy_error = 0.0674785525563566, max_hamiltonian_energy_error = 0.33884662661595844, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9987499285980037, log_density = 12.588276595385599, hamiltonian_energy = -10.960438774877916, hamiltonian_energy_error = -0.06904712832834115, max_hamiltonian_energy_error = -0.06904712832834115, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.955383395301811, log_density = 13.05826525527106, hamiltonian_energy = -11.385736198866912, hamiltonian_energy_error = 0.03776108093667574, max_hamiltonian_energy_error = 0.10778429519888633, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9813610965465523, log_density = 11.485318361587932, hamiltonian_energy = -10.785589060161866, hamiltonian_energy_error = 0.034946317715268904, max_hamiltonian_energy_error = 0.04343257602328876, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9825490400033574, log_density = 11.373234327370412, hamiltonian_energy = -10.55791692373808, hamiltonian_energy_error = 0.023761371051030267, max_hamiltonian_energy_error = -0.07983826527523519, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9871257113808136, log_density = 10.646972471721014, hamiltonian_energy = -10.195550837502223, hamiltonian_energy_error = 0.10790198230987791, max_hamiltonian_energy_error = -0.20961154338682952, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9644256609968826, log_density = 10.372595278318412, hamiltonian_energy = -7.006735002714076, hamiltonian_energy_error = -0.505418207410897, max_hamiltonian_energy_error = -0.505418207410897, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6002908612273377, log_density = 9.103045092405466, hamiltonian_energy = -8.572390304686746, hamiltonian_energy_error = 0.42785087511042796, max_hamiltonian_energy_error = 0.7516247105460181, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 0.944048718959364, log_density = 9.486846485105687, hamiltonian_energy = -6.322252195626941, hamiltonian_energy_error = 0.05219233893152797, max_hamiltonian_energy_error = -1.0092480374165422, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9268599004750767, log_density = 8.577638456622163, hamiltonian_energy = -5.593124680939185, hamiltonian_energy_error = 0.3022672853344579, max_hamiltonian_energy_error = 0.3032305815117411, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9587920993245012, log_density = 9.734302630329921, hamiltonian_energy = -4.871745031644246, hamiltonian_energy_error = -0.04903234283958202, max_hamiltonian_energy_error = -0.6706657853493603, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 1.0, log_density = 10.275708965940044, hamiltonian_energy = -7.5643235572993985, hamiltonian_energy_error = -0.38068227124489873, max_hamiltonian_energy_error = -0.6938702526517195, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 1.0, log_density = 7.544538740855364, hamiltonian_energy = -4.394997509162161, hamiltonian_energy_error = -0.25920809588360694, max_hamiltonian_energy_error = -0.5949624663270034, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9523904812921179, log_density = 8.365373344933387, hamiltonian_energy = -3.2712844264117003, hamiltonian_energy_error = 0.02473133106595693, max_hamiltonian_energy_error = -0.2354353553163433, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9662529877981889, log_density = 12.402640799276062, hamiltonian_energy = -6.949697054012506, hamiltonian_energy_error = -0.33886103223415187, max_hamiltonian_energy_error = -0.33886103223415187, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9884403394781408, log_density = 12.266886097989147, hamiltonian_energy = -10.241536106693827, hamiltonian_energy_error = 0.0472266249430664, max_hamiltonian_energy_error = 0.0472266249430664, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 12.762679487818357, hamiltonian_energy = -11.915718874515203, hamiltonian_energy_error = -0.03610734943165106, max_hamiltonian_energy_error = -0.09446756998973704, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9589701661883895, log_density = 12.672476773272955, hamiltonian_energy = -11.16210996238736, hamiltonian_energy_error = -0.10573352273054404, max_hamiltonian_energy_error = 0.14962659613078166, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5872947072018422, log_density = 8.544571806129369, hamiltonian_energy = -6.412434469723034, hamiltonian_energy_error = 0.6485158058686453, max_hamiltonian_energy_error = 0.8881693802032, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9862551780640614, log_density = 11.309372109565585, hamiltonian_energy = -6.202251205483724, hamiltonian_energy_error = 0.0014573842088525524, max_hamiltonian_energy_error = -0.41846988247305017, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.878788318858914, log_density = 10.081950640226205, hamiltonian_energy = -5.766515518063499, hamiltonian_energy_error = -0.36573037782910145, max_hamiltonian_energy_error = 0.37766922325939944, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8190270493845325, log_density = 9.055243323795317, hamiltonian_energy = -8.492271416752953, hamiltonian_energy_error = 0.13859249718544575, max_hamiltonian_energy_error = 0.31640134225391314, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9378094904192048, log_density = 7.646097475209402, hamiltonian_energy = -6.336507871328897, hamiltonian_energy_error = 0.22650704786228193, max_hamiltonian_energy_error = 0.22650704786228193, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 7.272104077989884, hamiltonian_energy = -5.676611337616825, hamiltonian_energy_error = -0.04466204615336622, max_hamiltonian_energy_error = -0.3950822874450264, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9441323390938656, log_density = 6.486890387000315, hamiltonian_energy = -2.3598729598214163, hamiltonian_energy_error = -0.10936228740985321, max_hamiltonian_energy_error = -0.27281537086230667, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9600952450846943, log_density = 11.49409190641345, hamiltonian_energy = -3.568296961180372, hamiltonian_energy_error = -0.19323291453728864, max_hamiltonian_energy_error = -0.3485121091513852, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9789961009501954, log_density = 12.288927013742411, hamiltonian_energy = -9.74272212152939, hamiltonian_energy_error = 0.007905733192210107, max_hamiltonian_energy_error = 0.057186458968262244, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.899660141744964, log_density = 10.42261039281357, hamiltonian_energy = -8.634136525312204, hamiltonian_energy_error = 0.05403469972135255, max_hamiltonian_energy_error = 0.29161813446807194, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9656435982954513, log_density = 10.724097376121275, hamiltonian_energy = -8.390489589087375, hamiltonian_energy_error = -0.05194361012578774, max_hamiltonian_energy_error = -0.125939554006246, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9671467276609758, log_density = 11.47715499813909, hamiltonian_energy = -8.763876156401395, hamiltonian_energy_error = -0.1440280442073547, max_hamiltonian_energy_error = -0.1440280442073547, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9792050124699583, log_density = 12.163629605620294, hamiltonian_energy = -10.115746831319854, hamiltonian_energy_error = 0.004840261643202837, max_hamiltonian_energy_error = 0.07527304169643756, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8854920487822691, log_density = 11.474826105165954, hamiltonian_energy = -9.929345202412547, hamiltonian_energy_error = 0.2218143065256779, max_hamiltonian_energy_error = 0.4909434519173388, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9963892107627157, log_density = 10.387210540717748, hamiltonian_energy = -8.453730045726795, hamiltonian_energy_error = -0.028954352232885228, max_hamiltonian_energy_error = -0.16317371232332611, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9773572748074691, log_density = 8.510772862323002, hamiltonian_energy = -5.509470183215223, hamiltonian_energy_error = 0.03555437311970344, max_hamiltonian_energy_error = -0.10611998198055961, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9112892003727264, log_density = 8.0132937950185, hamiltonian_energy = -5.9462211356897905, hamiltonian_energy_error = 0.12687750853925106, max_hamiltonian_energy_error = 0.20950636837916825, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9848501357758752, log_density = 11.606438801365194, hamiltonian_energy = -5.403881284477853, hamiltonian_energy_error = -0.2212441254796671, max_hamiltonian_energy_error = -0.3154082338762416, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9589543173884236, log_density = 11.292248377601, hamiltonian_energy = -9.778926397230334, hamiltonian_energy_error = -0.026289457366175384, max_hamiltonian_energy_error = -0.1375255137436593, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7580894387007132, log_density = 11.948759709341573, hamiltonian_energy = -7.110342365779101, hamiltonian_energy_error = 0.13817747232386068, max_hamiltonian_energy_error = 0.46244777397290626, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9571590880985065, log_density = 8.047713258666622, hamiltonian_energy = -5.2856052032678695, hamiltonian_energy_error = -0.038210158064788224, max_hamiltonian_energy_error = 0.2400667079152603, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.107208349839926, hamiltonian_energy = -7.2324662755541755, hamiltonian_energy_error = -0.1008266753062328, max_hamiltonian_energy_error = -0.12388440140731927, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7910679548787696, log_density = 9.706657955746717, hamiltonian_energy = -4.962729936377695, hamiltonian_energy_error = 0.12361048068353941, max_hamiltonian_energy_error = 0.36340207592938345, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.789280663036507, log_density = 9.044987839548511, hamiltonian_energy = -6.043809723880148, hamiltonian_energy_error = 0.2657602565288242, max_hamiltonian_energy_error = 0.47738092679216937, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9701776355749068, log_density = 11.565909464814332, hamiltonian_energy = -6.03225716523522, hamiltonian_energy_error = -0.19640489111317638, max_hamiltonian_energy_error = -0.23993530297719357, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9318935745831052, log_density = 9.953911522172447, hamiltonian_energy = -9.553449337147766, hamiltonian_energy_error = 0.22855727441764628, max_hamiltonian_energy_error = 0.22855727441764628, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 12.392724823135959, hamiltonian_energy = -9.336173095226052, hamiltonian_energy_error = -0.43750657781727753, max_hamiltonian_energy_error = -0.4530837307080642, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.4762377607560814, log_density = 12.375587622215821, hamiltonian_energy = -7.580550294608585, hamiltonian_energy_error = 0.6789287594773334, max_hamiltonian_energy_error = 1.5839124439085444, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9968890827317854, log_density = 11.60882312715331, hamiltonian_energy = -10.66830246121085, hamiltonian_energy_error = -0.03420938240151017, max_hamiltonian_energy_error = -0.1347819367658527, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9775014567256675, log_density = 10.807863898730467, hamiltonian_energy = -10.5621157162729, hamiltonian_energy_error = 0.07865021181085119, max_hamiltonian_energy_error = -0.1054539329239379, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8073237475358059, log_density = 11.115861360827015, hamiltonian_energy = -7.327959770045009, hamiltonian_energy_error = -0.10427269979433262, max_hamiltonian_energy_error = 0.38514440639036973, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9565248740677638, log_density = 11.808483563338706, hamiltonian_energy = -10.592546990040647, hamiltonian_energy_error = -0.03793425205013001, max_hamiltonian_energy_error = 0.08765874255639794, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8871045881141425, log_density = 12.124371532460028, hamiltonian_energy = -9.946739605888686, hamiltonian_energy_error = 0.06712345522302066, max_hamiltonian_energy_error = 0.368866867561648, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.7948872408120728, log_density = 9.787724488532286, hamiltonian_energy = -8.649137238739248, hamiltonian_energy_error = 0.25149335938635176, max_hamiltonian_energy_error = 0.539008786556666, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9953895112544573, log_density = 12.764610236440262, hamiltonian_energy = -9.399941106902673, hamiltonian_energy_error = -0.1311743311349094, max_hamiltonian_energy_error = -0.16737922132604233, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9525126019860565, log_density = 12.807436311045059, hamiltonian_energy = -11.981076884186892, hamiltonian_energy_error = 0.04417855252197356, max_hamiltonian_energy_error = 0.10022721792940459, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9890566467966297, log_density = 12.683601348372225, hamiltonian_energy = -10.788687279324348, hamiltonian_energy_error = -0.018228177782722454, max_hamiltonian_energy_error = 0.03778730400535402, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9647741281755624, log_density = 12.806955332081857, hamiltonian_energy = -11.066747290935027, hamiltonian_energy_error = -0.0037170400109616253, max_hamiltonian_energy_error = 0.08906738090122701, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9349010999410967, log_density = 11.710878363525183, hamiltonian_energy = -11.476043649998775, hamiltonian_energy_error = 0.13655155447920642, max_hamiltonian_energy_error = 0.14153295137332478, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8707855469441267, log_density = 11.691633084633306, hamiltonian_energy = -5.850331097493629, hamiltonian_energy_error = -0.043381372284561515, max_hamiltonian_energy_error = 0.5830782227037261, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9679802245329857, log_density = 11.331101932542861, hamiltonian_energy = -9.467854442975248, hamiltonian_energy_error = 0.01062495343177261, max_hamiltonian_energy_error = 0.09328178794285336, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9873277691850877, log_density = 11.994759059244284, hamiltonian_energy = -10.132389837616563, hamiltonian_energy_error = -0.023540825179026115, max_hamiltonian_energy_error = 0.042135002915333786, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9756190839073602, log_density = 10.956705223269338, hamiltonian_energy = -10.313136890943401, hamiltonian_energy_error = 0.03969779922218564, max_hamiltonian_energy_error = 0.058978022114485995, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9979050991677565, log_density = 12.732255653756123, hamiltonian_energy = -10.80330489809449, hamiltonian_energy_error = -0.10451025706796102, max_hamiltonian_energy_error = -0.14419623672759485, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9074756619694926, log_density = 10.682670347018828, hamiltonian_energy = -8.730749132458241, hamiltonian_energy_error = 0.20601913769790414, max_hamiltonian_energy_error = 0.303854219958799, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9756602328936838, log_density = 11.290966536947657, hamiltonian_energy = -9.035268869857282, hamiltonian_energy_error = 0.04319860458281077, max_hamiltonian_energy_error = -0.2606667958604909, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9979385389949914, log_density = 12.14814820775859, hamiltonian_energy = -9.290995532460537, hamiltonian_energy_error = -0.15591702867195956, max_hamiltonian_energy_error = -0.21607992942425014, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9961067153153991, log_density = 12.52967336488434, hamiltonian_energy = -11.710953710022148, hamiltonian_energy_error = -0.008286442679834138, max_hamiltonian_energy_error = -0.06672015281457, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 1.0, log_density = 12.901019151583675, hamiltonian_energy = -12.233403376480615, hamiltonian_energy_error = -0.020883169826998227, max_hamiltonian_energy_error = -0.05560354306317805, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9310164990778206, log_density = 11.932687630740036, hamiltonian_energy = -11.266491625353408, hamiltonian_energy_error = 0.12705762710362833, max_hamiltonian_energy_error = 0.16037329125503952, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9908191129198043, log_density = 13.177010801481114, hamiltonian_energy = -11.139145384942658, hamiltonian_energy_error = -0.16462464468179228, max_hamiltonian_energy_error = -0.16462464468179228, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7550530225706199, log_density = 11.60800008136563, hamiltonian_energy = -9.005992744687115, hamiltonian_energy_error = 0.31433741248750025, max_hamiltonian_energy_error = 0.5698559970450319, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9643544793718374, log_density = 10.428134098683277, hamiltonian_energy = -9.653828983952792, hamiltonian_energy_error = 0.04266889117619854, max_hamiltonian_energy_error = 0.05788691461515505, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9531552666628393, log_density = 8.997718322714723, hamiltonian_energy = -7.430312477537397, hamiltonian_energy_error = 0.08691542729561696, max_hamiltonian_energy_error = 0.11874804614043732, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9434497682290685, log_density = 9.997609030141394, hamiltonian_energy = -5.052081061656389, hamiltonian_energy_error = -0.03329861956698643, max_hamiltonian_energy_error = -0.16776556241832097, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9354074526933446, log_density = 9.832794859331136, hamiltonian_energy = -6.436156232450114, hamiltonian_energy_error = 0.31018360681959845, max_hamiltonian_energy_error = -0.500277559827536, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9962680333092774, log_density = 12.126528215282134, hamiltonian_energy = -9.242591979378846, hamiltonian_energy_error = -0.4344178089350308, max_hamiltonian_energy_error = -0.6557587330498507, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9452616395676773, log_density = 11.231825210546507, hamiltonian_energy = -9.301448294616575, hamiltonian_energy_error = -0.0033842001557129464, max_hamiltonian_energy_error = -0.3589543952571397, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9757717870916458, log_density = 11.79163807428521, hamiltonian_energy = -8.960939311814473, hamiltonian_energy_error = 0.029876706413029197, max_hamiltonian_energy_error = 0.06482607630187864, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7622663754500193, log_density = 11.55341108219396, hamiltonian_energy = -3.4459995021524357, hamiltonian_energy_error = -0.2779213581705484, max_hamiltonian_energy_error = 0.530270119596242, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9053828169975572, log_density = 9.652360168637822, hamiltonian_energy = -6.6908224472657345, hamiltonian_energy_error = 0.23448801719689172, max_hamiltonian_energy_error = 0.5033879283195102, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9856516075482096, log_density = 7.858713306021638, hamiltonian_energy = -6.344826558511334, hamiltonian_energy_error = 0.013785423869536295, max_hamiltonian_energy_error = -0.16307946176421773, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 7.324539090079378, hamiltonian_energy = -6.886960174912535, hamiltonian_energy_error = -0.00802108681255742, max_hamiltonian_energy_error = -0.05249206252681837, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.908079146662008, log_density = 11.045725991662227, hamiltonian_energy = -5.571420889444241, hamiltonian_energy_error = -0.042304513381528075, max_hamiltonian_energy_error = 0.19336994473859193, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8013932231184009, log_density = 11.70688842932069, hamiltonian_energy = -8.509743038830637, hamiltonian_energy_error = 0.09712818857672723, max_hamiltonian_energy_error = 0.44851391935024765, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9637536630120105, log_density = 12.182100863975958, hamiltonian_energy = -10.285815045719078, hamiltonian_energy_error = 0.017355963811064967, max_hamiltonian_energy_error = 0.11186727562197163, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9710314668802205, log_density = 10.605597944510043, hamiltonian_energy = -8.427879257536208, hamiltonian_energy_error = 0.08030823711325219, max_hamiltonian_energy_error = 0.08619882632944176, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9852258231188274, log_density = 10.144373454802482, hamiltonian_energy = -9.652422740321462, hamiltonian_energy_error = -0.16830065035602182, max_hamiltonian_energy_error = -0.20054509486975647, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9374853319842074, log_density = 11.988623199388062, hamiltonian_energy = -8.464935107287426, hamiltonian_energy_error = 0.03283879088644781, max_hamiltonian_energy_error = 0.14563433415369786, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7799260348349286, log_density = 11.12709925184498, hamiltonian_energy = -6.513355844034654, hamiltonian_energy_error = 0.21324572415422427, max_hamiltonian_energy_error = 0.6022829361430313, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9489767308771, log_density = 12.252203378320944, hamiltonian_energy = -9.200094829452535, hamiltonian_energy_error = -0.10816046603847695, max_hamiltonian_energy_error = -0.5387517505521444, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.968639617236743, log_density = 12.207839342609056, hamiltonian_energy = -10.602601971809232, hamiltonian_energy_error = -0.08623399367233553, max_hamiltonian_energy_error = 0.17426859638046466, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9844121931419828, log_density = 12.2261073038069, hamiltonian_energy = -11.61923424338118, hamiltonian_energy_error = 0.019736271253407267, max_hamiltonian_energy_error = -0.1281267651524285, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9911350417572342, log_density = 10.9366102895474, hamiltonian_energy = -10.534008590963813, hamiltonian_energy_error = 0.01898681917048073, max_hamiltonian_energy_error = -0.17230152546454924, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8130168616386511, log_density = 11.180330126310007, hamiltonian_energy = -5.863194034281182, hamiltonian_energy_error = -0.19149256256850666, max_hamiltonian_energy_error = 0.5017089938787125, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8651948877348535, log_density = 10.597361344629656, hamiltonian_energy = -9.954286840036955, hamiltonian_energy_error = 0.03049755933437126, max_hamiltonian_energy_error = 0.26671345042841565, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7127130271437063, log_density = 9.50595914776992, hamiltonian_energy = -7.174763629742055, hamiltonian_energy_error = 0.32278112090659494, max_hamiltonian_energy_error = 0.6725151415783088, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.992730131512454, log_density = 12.911730962416177, hamiltonian_energy = -9.020779000939907, hamiltonian_energy_error = -0.1912213081057601, max_hamiltonian_energy_error = -0.1912213081057601, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9868081726322991, log_density = 12.187859453503359, hamiltonian_energy = -10.626060614459607, hamiltonian_energy_error = 0.010158579037771176, max_hamiltonian_energy_error = 0.05159007073656774, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9773665856395817, log_density = 12.290141945316616, hamiltonian_energy = -11.49290783419481, hamiltonian_energy_error = 0.011264736568065814, max_hamiltonian_energy_error = -0.09729642693350549, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.985155175902631, log_density = 12.734560966218453, hamiltonian_energy = -11.340954263636181, hamiltonian_energy_error = -0.0624218570574655, max_hamiltonian_energy_error = -0.09303931883184546, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9823504568981407, log_density = 13.15500704665933, hamiltonian_energy = -11.608695245504329, hamiltonian_energy_error = 0.011256340042059776, max_hamiltonian_energy_error = 0.04332869587179111, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8638235924268024, log_density = 11.747288066181165, hamiltonian_energy = -9.185011224461995, hamiltonian_energy_error = 0.14136461758013752, max_hamiltonian_energy_error = 0.3737949846590283, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9851315340880878, log_density = 12.417955864769837, hamiltonian_energy = -11.158050632222432, hamiltonian_energy_error = -0.0627943118672114, max_hamiltonian_energy_error = -0.38263311551007995, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9919957129184807, log_density = 12.326369594898708, hamiltonian_energy = -11.506388970777289, hamiltonian_energy_error = -0.02517835014641534, max_hamiltonian_energy_error = -0.1608977356081862, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.901537680987315, log_density = 11.59555572724735, hamiltonian_energy = -10.22238642701026, hamiltonian_energy_error = 0.06598284600375948, max_hamiltonian_energy_error = 0.20038012036514452, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9716288132325682, log_density = 11.988152219388763, hamiltonian_energy = -10.311750124567295, hamiltonian_energy_error = -0.02287348621163332, max_hamiltonian_energy_error = 0.1096539579951834, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9821841267834431, log_density = 12.857269383107091, hamiltonian_energy = -11.167854643220757, hamiltonian_energy_error = -0.07085872466253562, max_hamiltonian_energy_error = -0.17898439640361907, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9248064143983025, log_density = 11.734248693166506, hamiltonian_energy = -10.118932998852951, hamiltonian_energy_error = 0.0938074636506201, max_hamiltonian_energy_error = 0.11983381617382349, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9442566775254566, log_density = 9.628037371051136, hamiltonian_energy = -8.728841991976656, hamiltonian_energy_error = 0.04304712832147395, max_hamiltonian_energy_error = 0.11469269586161168, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9999305458710277, log_density = 10.969009557534507, hamiltonian_energy = -8.833585504041114, hamiltonian_energy_error = -0.011452094220070208, max_hamiltonian_energy_error = -0.03969945299562738, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.99068655948837, log_density = 11.571012987732649, hamiltonian_energy = -10.71491758111293, hamiltonian_energy_error = 0.008432763033997759, max_hamiltonian_energy_error = 0.03579823689168116, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9448352545034737, log_density = 11.37500043521662, hamiltonian_energy = -10.86712379980957, hamiltonian_energy_error = -0.02612169778862672, max_hamiltonian_energy_error = 0.10611510082399889, tree_depth = 2, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9922794177617854, log_density = 11.850434973723722, hamiltonian_energy = -11.192710531626235, hamiltonian_energy_error = -0.015642703335476682, max_hamiltonian_energy_error = 0.01822682282943866, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9487480497868838, log_density = 9.277687860304859, hamiltonian_energy = -8.85054207911985, hamiltonian_energy_error = 0.06274995600961653, max_hamiltonian_energy_error = 0.10358480725170338, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.393588292369832, log_density = 9.339920424964557, hamiltonian_energy = -3.352296904499352, hamiltonian_energy_error = 0.04920266733145162, max_hamiltonian_energy_error = 2.6523411205329253, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9557443511424495, log_density = 10.676394740444726, hamiltonian_energy = -8.561478358721768, hamiltonian_energy_error = 0.08598569736382622, max_hamiltonian_energy_error = 0.20732527571952453, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9901148403302114, log_density = 12.483181184338235, hamiltonian_energy = -9.022757442202202, hamiltonian_energy_error = -0.05468021416737834, max_hamiltonian_energy_error = -0.23069161968481744, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8338980909114391, log_density = 11.715236008032718, hamiltonian_energy = -10.465600207036777, hamiltonian_energy_error = 0.08983527030093796, max_hamiltonian_energy_error = 0.3073639416395082, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9644201670375387, log_density = 11.1785695247987, hamiltonian_energy = -10.51989684140485, hamiltonian_energy_error = 0.06830115351654342, max_hamiltonian_energy_error = 0.10569565297645944, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9504581809848818, log_density = 10.016322831679279, hamiltonian_energy = -9.170126356835654, hamiltonian_energy_error = 0.13907050058042536, max_hamiltonian_energy_error = 0.177044590574015, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.9786155328901488, log_density = 11.95637140175048, hamiltonian_energy = -7.78414917912899, hamiltonian_energy_error = -0.2493479696321419, max_hamiltonian_energy_error = -0.25598079480186264, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8705081707655494, log_density = 12.694121518788856, hamiltonian_energy = -11.087798225136929, hamiltonian_energy_error = 0.15874026360619276, max_hamiltonian_energy_error = 0.3039955529400249, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9261510211559163, log_density = 11.14868357338079, hamiltonian_energy = -9.126386220138585, hamiltonian_energy_error = 0.0943505734998702, max_hamiltonian_energy_error = 0.1870654231456239, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9819698698903745, log_density = 11.754045341582259, hamiltonian_energy = -9.395002931082255, hamiltonian_energy_error = 0.015461737632515238, max_hamiltonian_energy_error = -0.06383989928533573, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8915482754864144, log_density = 13.200624829493037, hamiltonian_energy = -8.276614799961681, hamiltonian_energy_error = -0.2106673872144995, max_hamiltonian_energy_error = 0.39055680514266555, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8811940066735041, log_density = 10.152718026310982, hamiltonian_energy = -9.468563309859544, hamiltonian_energy_error = 0.2461515223981401, max_hamiltonian_energy_error = 0.2461515223981401, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9940866558742847, log_density = 11.416377531021993, hamiltonian_energy = -8.280568743931738, hamiltonian_energy_error = -0.20325532701431825, max_hamiltonian_energy_error = -0.24527413357472128, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9592164763371893, log_density = 11.719119870225516, hamiltonian_energy = -9.895155634281068, hamiltonian_energy_error = 0.027235090781170257, max_hamiltonian_energy_error = 0.09342602332052685, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9901729646795092, log_density = 11.584275217291427, hamiltonian_energy = -10.331018675362454, hamiltonian_energy_error = -0.010433641780181802, max_hamiltonian_energy_error = -0.04424988553591369, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9238468987339583, log_density = 11.162112677553825, hamiltonian_energy = -10.330719389099432, hamiltonian_energy_error = 0.09406038973833297, max_hamiltonian_energy_error = 0.1584404202340597, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9737764749913944, log_density = 12.376029700472094, hamiltonian_energy = -9.786509213438348, hamiltonian_energy_error = 0.00801259132258636, max_hamiltonian_energy_error = 0.16813531007439586, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9882037903606521, log_density = 11.542354716081608, hamiltonian_energy = -10.573823113437914, hamiltonian_energy_error = 0.11001336428223496, max_hamiltonian_energy_error = -0.14726436631877782, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.996585386616801, log_density = 11.50426251392691, hamiltonian_energy = -9.642093332089019, hamiltonian_energy_error = -0.08074396664428463, max_hamiltonian_energy_error = -0.27500360454550865, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.995915807747967, log_density = 11.719111168800115, hamiltonian_energy = -9.742357529814027, hamiltonian_energy_error = -0.07485442779011997, max_hamiltonian_energy_error = -0.15433516910519884, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 63, is_accept = true, acceptance_rate = 0.8871516407926494, log_density = 13.154541958690782, hamiltonian_energy = -8.915191881516227, hamiltonian_energy_error = -0.14470166525404338, max_hamiltonian_energy_error = 0.36966048745517455, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9716642289724048, log_density = 13.21335349431586, hamiltonian_energy = -12.79169230783995, hamiltonian_energy_error = 0.00686781066006148, max_hamiltonian_energy_error = 0.054415786620536366, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9591120941419385, log_density = 12.539265095203234, hamiltonian_energy = -12.453723140783366, hamiltonian_energy_error = 0.07023795692491142, max_hamiltonian_energy_error = 0.08070196158229592, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9733233539541366, log_density = 12.56754655448805, hamiltonian_energy = -11.70403822572006, hamiltonian_energy_error = -0.007416242850679211, max_hamiltonian_energy_error = 0.06370951718619189, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9709573279328363, log_density = 12.418752795181721, hamiltonian_energy = -9.894755278345755, hamiltonian_energy_error = -0.0019794710500313784, max_hamiltonian_energy_error = 0.08630044918386481, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9467958220233379, log_density = 12.55543484810475, hamiltonian_energy = -10.97692372697187, hamiltonian_energy_error = 0.018467265982886616, max_hamiltonian_energy_error = 0.14529404189649675, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.910013352356526, log_density = 13.249073522227063, hamiltonian_energy = -9.299030055914736, hamiltonian_energy_error = -0.05008008312163881, max_hamiltonian_energy_error = 0.25924852282111566, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9145168307392143, log_density = 12.36762869110779, hamiltonian_energy = -10.557080485631218, hamiltonian_energy_error = 0.09984593710993295, max_hamiltonian_energy_error = 0.12854204800530056, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9689305268059363, log_density = 12.20766457464565, hamiltonian_energy = -11.06963063652677, hamiltonian_energy_error = 0.131236461723665, max_hamiltonian_energy_error = 0.131236461723665, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7157108722378778, log_density = 11.02856107065194, hamiltonian_energy = -8.427978291397539, hamiltonian_energy_error = 0.3276783701178356, max_hamiltonian_energy_error = 0.4546742132373822, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.869761793704628, log_density = 10.120256562221378, hamiltonian_energy = -6.597476119087904, hamiltonian_energy_error = 0.13179655957070224, max_hamiltonian_energy_error = 0.2909377479412427, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.8705208248354565, log_density = 10.032616866412123, hamiltonian_energy = -6.0174194010577695, hamiltonian_energy_error = -0.06285661272163257, max_hamiltonian_energy_error = 0.39166106175934434, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.951244152155491, log_density = 10.151195212541236, hamiltonian_energy = -7.772695887940159, hamiltonian_energy_error = 0.023403011652132655, max_hamiltonian_energy_error = 0.11889822963014751, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9491631481027066, log_density = 7.8129087893735285, hamiltonian_energy = -1.7409313305868377, hamiltonian_energy_error = 0.003393350719083088, max_hamiltonian_energy_error = 0.4008871538391574, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9876401214020119, log_density = 6.680994128079263, hamiltonian_energy = -6.038364669658645, hamiltonian_energy_error = -0.0029010898462873413, max_hamiltonian_energy_error = -0.10131861736598058, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9851852155808254, log_density = 6.4769878458716015, hamiltonian_energy = -4.830647142379318, hamiltonian_energy_error = 0.10017569823668371, max_hamiltonian_energy_error = -0.19006320797140486, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9902498323251988, log_density = 8.421357505656033, hamiltonian_energy = -3.1269826416376674, hamiltonian_energy_error = -0.21059708482770745, max_hamiltonian_energy_error = -0.6375790931804115, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 39, is_accept = true, acceptance_rate = 1.0, log_density = 7.882146713591887, hamiltonian_energy = -6.608851309462393, hamiltonian_energy_error = -0.27060634024632524, max_hamiltonian_energy_error = -1.0368246935389376, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9819402509965515, log_density = 12.955160423569861, hamiltonian_energy = -7.951401200753439, hamiltonian_energy_error = -0.500847690240735, max_hamiltonian_energy_error = -0.988279688671656, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9721686566411236, log_density = 12.585214289998412, hamiltonian_energy = -11.240022060832827, hamiltonian_energy_error = 0.051431968016308005, max_hamiltonian_energy_error = 0.06595522437448409, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 0.8842110317149128, log_density = 12.77517092516326, hamiltonian_energy = -10.521423963179375, hamiltonian_energy_error = 0.031024322554698003, max_hamiltonian_energy_error = 0.2914679045453408, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9637750368581502, log_density = 11.771356132913086, hamiltonian_energy = -8.274411578200734, hamiltonian_energy_error = 0.004761053699446904, max_hamiltonian_energy_error = -0.2611518986643606, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9414783600363181, log_density = 9.232547411204855, hamiltonian_energy = -7.529792055099255, hamiltonian_energy_error = -0.021113478223592885, max_hamiltonian_energy_error = 0.12391932915507642, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.91622808190658, hamiltonian_energy = -8.40681692005083, hamiltonian_energy_error = -0.012741162594428701, max_hamiltonian_energy_error = -0.0941360130653468, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.989235329517413, log_density = 9.994177627049712, hamiltonian_energy = -8.796820475407113, hamiltonian_energy_error = -0.06696312750588795, max_hamiltonian_energy_error = -0.11310329807536057, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5282959087721167, log_density = 9.65187674215159, hamiltonian_energy = -3.723964950890024, hamiltonian_energy_error = 0.7161736772790404, max_hamiltonian_energy_error = 1.7724214370850588, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9877927873025165, log_density = 10.754908152499997, hamiltonian_energy = -8.099902955201816, hamiltonian_energy_error = -0.21287712559572025, max_hamiltonian_energy_error = -0.5514946557027818, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8958040971360526, log_density = 11.845981648141395, hamiltonian_energy = -7.21653387611504, hamiltonian_energy_error = 0.015982016744469085, max_hamiltonian_energy_error = 0.29873511899883987, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.969027483510533, log_density = 10.664968532929773, hamiltonian_energy = -9.33135178971238, hamiltonian_energy_error = 0.048871989761401835, max_hamiltonian_energy_error = 0.12500053808407863, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9995539181903309, log_density = 8.497964843193664, hamiltonian_energy = -7.504302564707958, hamiltonian_energy_error = -0.004800546445852483, max_hamiltonian_energy_error = -0.1556827720039422, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9958653783260834, log_density = 10.777048978862483, hamiltonian_energy = -7.929965577094507, hamiltonian_energy_error = -0.038731022997438025, max_hamiltonian_energy_error = -0.08125375437954574, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9831495437882058, log_density = 12.16069269024357, hamiltonian_energy = -4.494376918753074, hamiltonian_energy_error = -0.22098786790426228, max_hamiltonian_energy_error = -0.22098786790426228, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9407453207637765, log_density = 11.139496206058807, hamiltonian_energy = -9.300284919093944, hamiltonian_energy_error = 0.10791384822230654, max_hamiltonian_energy_error = 0.13481652932639498, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7762475368125853, log_density = 12.008655885257642, hamiltonian_energy = -8.865813988084575, hamiltonian_energy_error = 0.2603115608479687, max_hamiltonian_energy_error = 0.5846591657052169, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9409804352290594, log_density = 13.208878214741327, hamiltonian_energy = -10.262123456766284, hamiltonian_energy_error = -0.17524883854241402, max_hamiltonian_energy_error = 0.28481082586890416, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8458819338609256, log_density = 12.165854530362804, hamiltonian_energy = -10.375125992813068, hamiltonian_energy_error = 0.09188767468647718, max_hamiltonian_energy_error = 0.3922297797619425, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9940227003310199, log_density = 11.410571526669793, hamiltonian_energy = -10.950334208401587, hamiltonian_energy_error = 0.01796928094928596, max_hamiltonian_energy_error = -0.07140285488497788, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 39, is_accept = true, acceptance_rate = 0.8123086358812784, log_density = 12.713127079032585, hamiltonian_energy = -7.155983719763245, hamiltonian_energy_error = 0.033318840482741585, max_hamiltonian_energy_error = 0.4573341976381595, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9327105215858452, log_density = 12.248554609681754, hamiltonian_energy = -11.49851645220822, hamiltonian_energy_error = 0.12262178006273317, max_hamiltonian_energy_error = 0.16390471951446095, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9648522519234743, log_density = 10.526711422483238, hamiltonian_energy = -9.672091485893302, hamiltonian_energy_error = 0.05101300384584384, max_hamiltonian_energy_error = -0.2735095047333811, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.9818874778446429, log_density = 9.754749274552035, hamiltonian_energy = -7.964337013903371, hamiltonian_energy_error = -0.29000338348513566, max_hamiltonian_energy_error = -0.3988349950595058, tree_depth = 5, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6861210215797122, log_density = 10.05456458100267, hamiltonian_energy = -5.0800162490412015, hamiltonian_energy_error = 0.379981746013498, max_hamiltonian_energy_error = 0.9152485051653887, tree_depth = 4, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9461738583878605, log_density = 8.938720457707708, hamiltonian_energy = -7.473079449357689, hamiltonian_energy_error = 0.1804805110122505, max_hamiltonian_energy_error = 0.1804805110122505, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.166352311454759, hamiltonian_energy = -7.579913211438376, hamiltonian_energy_error = -0.254907804719811, max_hamiltonian_energy_error = -0.2682437967430449, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.978574587163697, log_density = 12.540631740594351, hamiltonian_energy = -10.951880021609433, hamiltonian_energy_error = -0.1034790009762645, max_hamiltonian_energy_error = -0.15748008729805818, tree_depth = 3, numerical_error = false, step_size = 0.10644465116394573, nom_step_size = 0.10644465116394573, is_adapt = false)])","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Inspect posterior distribution over hyperparameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"hypers = map(unpack, samples);\nh_l1 = histogram(getindex.(hypers, :l1); label=\"l1\");\nh_l2 = histogram(getindex.(hypers, :l2); label=\"l2\");\nh_s1 = histogram(getindex.(hypers, :s1); label=\"s1\");\nh_s2 = histogram(getindex.(hypers, :s2); label=\"s2\");\nplot(h_l1, h_l2, h_s1, h_s2; layout=(2, 2))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As expected, the sampler converges to the posterior distribution quickly. One could combine this code with that from the previous sections to make predictions under the posterior over the hyperparameters.","category":"page"},{"location":"examples/getting_started/#Conclusion","page":"Getting Started","title":"Conclusion","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you now know how to fit GPs using Stheno.jl, and to investigate their posterior distributions. It's also straightforward to utilise Stheno.jl inside probabilistic programming frameworks like Soss.jl and Turing.jl (see examples folder).","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Stheno.jl","page":"Home","title":"Stheno.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Stheno.jl is a package for probabilistic programming with Gaussian processes.","category":"page"},{"location":"internals/#Interfaces","page":"Internals","title":"Interfaces","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The primary objects in Stheno are some special subtypes of AbstractGP. There are three primary concrete subtypes of AbstractGP:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP: an atomic Gaussian process given by wrapping an AbstractGP.\nCompositeGP: a Gaussian process composed of other WrappedGPs and CompositeGPs, whose properties are determined recursively from the GPs of which it is composed.\nGaussianProcessProbabilisticProgramme / GPPP: a Gaussian process comprising WrappedGPs and CompositeGPs. This is the primary piece of functionality that users should interact with.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This documentation provides the information necessary to understand the internals of Stheno, and to extend it with custom functionality.","category":"page"},{"location":"internals/#AbstractGP","page":"Internals","title":"AbstractGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP and CompositeGP implement the AbstractGPs.jl API. Please refer to the AbstractGPs.jl docs for more info on this.","category":"page"},{"location":"internals/#diag-methods","page":"Internals","title":"diag methods","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It is crucial for pseudo-point methods, and for the computation of marginal statistics at a reasonable scale, to be able to compute the diagonal of a given covariance matrix in linear time in the size of its inputs. This, in turn, necessitates that the diagonal of a given cross-covariance matrix can also be computed efficiently as the evaluation of covariance matrices often rely on the evaluation of cross-covariance matrices. As such, we have the following functions in addition to the AbstractGPs API implemented for WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Function Brief description\nvar(f, x) diag(cov(f, x))\nvar(f, x, x′) diag(cov(f, x, x′))\nvar(f, f′, x, x′) diag(cov(f, f′, x, x′))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The second and third rows of the table only make sense when length(x) == length(x′), of course.","category":"page"},{"location":"internals/#WrappedGP","page":"Internals","title":"WrappedGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"We can construct a WrappedGP in the following manner:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = wrap(GP(m, k), gpc)\n","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"where m is its MeanFunction, k its Kernel. gpc is a GPC object that handles some book-keeping, and is discussed in more depth below.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The AbstractGP interface is implemented for WrappedGPs in terms of the AbstractGP that they wrap. So if you want a particular behaviour, just make sure that the AbstractGP that you wrap has the functionality you want.","category":"page"},{"location":"internals/#Aside:-Example-Kernel-implementation","page":"Internals","title":"Aside: Example Kernel implementation","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It's straightforward to implement a new kernel yourself: simply following the instructions in KernelFunctions.jl and it'll work fine with GPs in Stheno.jl.","category":"page"},{"location":"internals/#GPC","page":"Internals","title":"GPC","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"This book-keeping object doesn't matter from a user's perspective but, unfortunately, we currently expose it to users. Fortunately, it's straightforward to work with. Say you wish to construct a collection of processes:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS WON'T WORK\nf = GP(mf, kf)\ng = GP(mg, kg)\nh = f + g\n# THIS WON'T WORK","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"You should write","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS GOOD. PLEASE DO THIS\ngpc = GPC()\nf = wrap(GP(mf, kf), gpc)\ng = wrap(GP(mg, kg), gpc)\nh = f + g\n# THIS IS GOOD. PLEASE DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The rule is simple: when constructing GPs that you plan to make interact later in your program, construct them using the same gpc object. For example, DON'T do the following:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS BAD. PLEASE DON'T DO THIS\nf = wrap(GP(mf, kf), GPC())\ng = wrap(GP(mg, kg), GPC())\nh = f + g\n# THIS IS BAD. PLEASE DON'T DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The mistake here is to construct a separate GPC object for each GP. Hopefully, the code errors, but might yield incorrect results.","category":"page"},{"location":"internals/#CompositeGP","page":"Internals","title":"CompositeGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"CompositeGPs are constructed as affine transformations of CompositeGPs and GPs. We describe the implemented transformations below.","category":"page"},{"location":"internals/#Addition","page":"Internals","title":"Addition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Given AbstractGPs f and g, we define","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f + g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"to be the CompositeGP sastisfying h(x) = f(x) + g(x) for all x.","category":"page"},{"location":"internals/#Multiplication","page":"Internals","title":"Multiplication","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Multiplication of AbstractGPs is undefined since the product of two Gaussian random variables is not itself Gaussian. However, we can scale an AbstractGP by either a constant or (deterministic) function.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = c * f\nh = sin * f","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"will both work, and produce the result that h(x) = c * f(x) or h(x) = sin(x) * f(x).","category":"page"},{"location":"internals/#Composition","page":"Internals","title":"Composition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f ∘ g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for some deterministic function g is the composition of f with g. i.e. h(x) = f(g(x)).","category":"page"},{"location":"internals/#cross","page":"Internals","title":"cross","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = cross([f, g])","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for WrappedGPs and CompositeGPs f and g. Think of cross as having stacked f and g together, so that you can work with their joint.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"For example, if you wanted to sample jointly from f and g at locations x_f and x_g, you could write something like","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"fg = cross([f, g])\nx_fg = BlockData([x_f, x_g])\nrand(fg(x_fg, 1e-6))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This particular function isn't part of the user-facing API because it isn't generally needed. It is, however, used extensively in the implementation of the GaussianProcessProbabilisticProgramme.","category":"page"},{"location":"internals/#GPPP","page":"Internals","title":"GPPP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The GaussianProcessProbabilisticProgramme is another AbstractGP which enables provides a thin layer of convenience functionality on top of WrappedGPs and CompositeGPs, and is the primary way in which it is intended that users will interact with this package.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP like this","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"is equivalent to manually constructing a GPPP using WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"gpc = GPC()\nf1 = wrap(GP(SEKernel()), gpc)\nf2 = wrap(GP(SEKernel()), gpc)\nf3 = f1 + f2\nf = Stheno.GPPP((f1=f1, f2=f2, f3=f3), gpc)","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"If you take a look at the gaussian_process_probabilistic_programming.jl source, you'll see that it's essentially just the above, and an implementation of the AbstractGPs API on top of a GPPP.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP is a single GP on an extended input domain: (Image: )","category":"page"}]
}
