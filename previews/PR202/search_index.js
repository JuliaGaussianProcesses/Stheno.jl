var documenterSearchIndex = {"docs":
[{"location":"api/#Public-API","page":"API","title":"Public API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = Stheno","category":"page"},{"location":"api/#GPPP","page":"API","title":"GPPP","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Core functionality for working with GPPPs.","category":"page"},{"location":"api/","page":"API","title":"API","text":"@gppp\nGPPPInput\nBlockData\nsplit","category":"page"},{"location":"api/#Stheno.@gppp","page":"API","title":"Stheno.@gppp","text":"@gppp(model_expression)\n\nConstruct a GaussianProcessProbabilisticProgramme (GPPP) from a code snippet.\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = GPPPInput(:f3, randn(5))\n\ny = rand(f(x, 0.1))\n\nlogpdf(f(x, 0.1), y) ≈ elbo(f(x, 0.1), y, f(x, 1e-9))\n\n# output\n\ntrue\n\n\n\n\n\n","category":"macro"},{"location":"api/#Stheno.GPPPInput","page":"API","title":"Stheno.GPPPInput","text":"GPPPInput(p, x::AbstractVector)\n\nAn collection of inputs for a GPPP. p indicates which process the vector x should be extracted from. The required type of p is determined by the type of the keys in the GPPP indexed.\n\njulia> x = [1.0, 1.5, 0.3];\n\njulia> v = GPPPInput(:a, x)\n3-element GPPPInput{Symbol, Float64, Vector{Float64}}:\n (:a, 1.0)\n (:a, 1.5)\n (:a, 0.3)\n\njulia> v isa AbstractVector{Tuple{Symbol, Float64}}\ntrue\n\njulia> v == map(x_ -> (:a, x_), x)\ntrue\n\n\n\n\n\n","category":"type"},{"location":"api/#Stheno.BlockData","page":"API","title":"Stheno.BlockData","text":"BlockData{T, TV<:AbstractVector{T}, TX<:AbstractVector{TV}} <: AbstractVector{T}\n\nA strictly ordered collection of AbstractVectors, representing a ragged array of data.\n\nVery useful when working with GPPPs. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\n# Specify a `BlockData` set that can be used to index into\n# the `f2` and `f3` processes in `f`.\nx = BlockData(\n    GPPPInput(:f2, randn(4)),\n    GPPPINput(:f3, randn(3)),\n)\n\n# Index into `f` at the input.\nf(x)\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.split","page":"API","title":"Base.split","text":"Base.split(x::BlockData, Y::AbstractVecOrMat)\n\nConvenience functionality to make working with the output of operations on GPPPs easier. Splits up the rows of Y according to the sizes of the data in x.\n\njulia> Y = vcat(randn(5, 3), randn(4, 3));\n\njulia> x = BlockData(randn(5), randn(4));\n\njulia> Y1, Y2 = split(x, Y);\n\njulia> Y1 == Y[1:5, :]\ntrue\n\njulia> Y2 == Y[6:end, :]\ntrue\n\nWorks with any BlockData, so blocks can e.g. be GPPPInputs. This is particularly helpful for working with the output from rand and marginals from a GPPP indexed at BlockData. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = BlockData(GPPPInput(:f2, randn(3)), GPPPInput(:f3, randn(4)))\ny = rand(f(x))\ny2, y3 = split(x, y)\n\nFunctionality also works with any AbstractVector.\n\n\n\n\n\n","category":"function"},{"location":"api/#Building-GPPPs","page":"API","title":"Building GPPPs","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"If in doubt about what any of these transformations can do, play around with them!","category":"page"},{"location":"api/","page":"API","title":"API","text":"+\n*\nstretch\nperiodic\nshift\nselect","category":"page"},{"location":"api/#Base.:+","page":"API","title":"Base.:+","text":"+(fa::AbstractGP, fb::AbstractGP)\n\nProduces an AbstractGP f satisfying f(x) = fa(x) + fb(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.:*","page":"API","title":"Base.:*","text":"*(f, g::AbstractGP)\n\nProduce an AbstractGP h satisfying to h(x) = f(x) * g(x), for some deterministic function f.\n\nIf f isa Real, then h(x) = f * g(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.stretch","page":"API","title":"Stheno.stretch","text":"stretch(f::AbstractGP, l::Union{AbstractVecOrMat{<:Real}, Real})\n\nThis is the primary mechanism by which to introduce length scales to your programme.\n\nIf l isa Real or l isa AbstractMatrix{<:Real}, stretch(f, l)(x) == f(l * x) for any input x. In the l isa Real case, this is equivalent to scaling the length scale by 1 / l.\n\nl isa AbstractVector{<:Real} is equivalent to stretch(f, Diagonal(l)).\n\nEquivalent to f ∘ Stretch(l).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.periodic","page":"API","title":"Stheno.periodic","text":"periodic(g::AbstractGP, f::Real)\n\nProduce an AbstractGP with period f.\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.shift","page":"API","title":"Stheno.shift","text":"shift(f::AbstractGP, a::Real)\nshift(f::AbstractGP, a::AbstractVector{<:Real})\n\nReturns the GP g given by g(x) = f(x - a)\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.select","page":"API","title":"Stheno.select","text":"select(f::AbstractGP, idx)\n\nSelect the dimensions of the input to f given by idx.\n\n\n\n\n\n","category":"function"},{"location":"input_types/#Input-Types","page":"Input Types","title":"Input Types","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Stheno enables the user to handle any type of input domain they wish and provides a common API that users must implement when considering a new way of representing input data to ensure that the package knows how to handle them appropriately.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"This interface has now been adopted throughout the JuliaGaussianProcesses ecosystem.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Discussed below is this interface's core assumptions, a detailed account of a couple of important concrete input types.","category":"page"},{"location":"input_types/#The-Central-Assumption","page":"Input Types","title":"The Central Assumption","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"The central assumption made in all user-facing and internal functions is this: when a collection of inputs are required, they subtype AbstractVector. For example, x isa AbstractVector when indexing into a GP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f(x, σ²)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"or computing the covariance matrix associated with a kernel:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"kernelmatrix(SqExponentialKernel(), x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When computing the cross-covariance matrix between two GPs","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"cov(f, g, x_f, x_g)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_f and x_g must be AbstractVectors. All other operations involving collections of inputs have the same restrictions. Always AbstractVectors.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"For example, this means that when handling multi-dimensional inputs stored in a Matrix they must be wrapped so that the package knows to treat them as a vector — more on this in below in D-dimensional Euclidean Spaces.","category":"page"},{"location":"input_types/#Dimensional-Euclidean-Space","page":"Input Types","title":"1-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When constructing a GP whose domain is the real-line, for example when using a GP to solve some kind of time-series problem, it is sufficient to work with Vector{<:Real}s of inputs. As such, the following is completely valid:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"using Stheno: GPC\nf = wrap(GP(SqExponentialKernel()), GPC())\nx = randn(10)\nf(x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"It is also possible to work with other AbstractArrays that represent a vector of 1-dimensional points, e.g.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = range(-5.0, 5.0; length=100)\nf(x)","category":"page"},{"location":"input_types/#D-Dimensional-Euclidean-Space","page":"Input Types","title":"D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Many applications of interest involve more than a single input-dimension, such as spatio-temporal modeling or Machine Learning tasks. For these cases, we provide ColVecs <: AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"X_data = randn(5, 100)\nX = ColVecs(X_data)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"tells Stheno that it should treat each column of X_data as a vector-valued input. Phrased differently, X is an AbstractVector{T} where T <: Vector{<:Real}, which stores its elements in memory as a dense matrix. This approach has the advantage of making it completely explicit how Stheno treats a matrix of data, and also simplifies quite a bit of the internal machinery, as all vectors of inputs can be assumed to be a subtype of AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If, on the other hand, each row of X_data corresponds to a vector-valued input, use RowVecs(X_data).","category":"page"},{"location":"input_types/#Structure-in-D-Dimensional-Euclidean-Space","page":"Input Types","title":"Structure in D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Consider a rectilinear grid of points in D-dimensional Euclidean space. Such grids of points can be represented in a more memory-efficient manner than can arbitrarily locate sets of points. Moreover, this structure can be exploited to accelerate inference for certain types of problems dramatically. Other such examples exist e.g., uniform grids in N-dimensions, and can be exploited to more efficiently represent input data and to accelerate inference.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Work to exploit these kinds of structures is on-going at the time of writing and will be documented before merging.","category":"page"},{"location":"input_types/#GPPPInput-and-BlockData","page":"Input Types","title":"GPPPInput and BlockData","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"A GPPPInput is a special kind of AbstractVector, specifically designed for GPPPs. Given a GPPP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"a GPPPInput like","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_ = randn(5)\nx = GPPPInput(:f3, x_)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"applied to f","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"fx = f(x, 0.1)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"constructs a FiniteGP comprising f3 at x_. GPPPInput(:f2, x_) and GPPPInput(:f1, x_) are the analogues for f1 and f2.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If you wish to refer to multiple processes in f at the same time, use a BlockData. For example","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = BlockData(GPPPInput(:f2, x_), GPPPInput(:f3, x_))","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"would pull out a 10-dimensional FiniteGP, the first 5 dimensions being f2 at x_, the last 5 dimensions being f3 at x_.","category":"page"},{"location":"kernel_design/#Kernel-Design","page":"Kernel Design","title":"Kernel Design","text":"","category":"section"},{"location":"kernel_design/","page":"Kernel Design","title":"Kernel Design","text":"Please refer to KernelFunctions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"EditURL = \"https://github.com/JuliaGaussianProcesses/Stheno.jl/blob/master/examples/getting_started/script.jl\"","category":"page"},{"location":"examples/getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Here we document how to do some basic stuff, including learning and inference in kernel parameters, with Stheno.jl. To do this, we that makes use of a variety of packages from the Julia ecosystem. In particular, we'll make use of","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl to perform Bayesian inference in our model parameters,\nOptim.jl for point-estimates of our model parameters,\nParameterHandling.jl to make it easy to work with our model's parameters, and to ensure that it plays nicely with Optim and AdvancedHMC,\nZygote.jl to compute gradients.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This guide assumes that you know roughly what's going on conceptually with GPs. If you're new to Gaussian processes, an excellent introduction can be found in either this video lecture or this one.","category":"page"},{"location":"examples/getting_started/#Exact-Inference-in-a-GP-in-2-Minutes","page":"Getting Started","title":"Exact Inference in a GP in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This is only a slightly more interesting version of the first example on the README. It's slightly more interesting in that we give the kernels some learnable parameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Import the packages we'll need for this bit of the demo.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AbstractGPs\nusing LinearAlgebra\nusing Stheno\nusing Plots","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Short length-scale and small variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l1 = 0.4\ns1 = 0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Long length-scale and larger variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l2 = 5.0\ns2 = 1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Specify a GaussianProcessProbabilisticProgramme object, which is itself a GP built from other GPs.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f = @gppp let\n    f1 = s1 * stretch(GP(Matern52Kernel()), 1 / l1)\n    f2 = s2 * stretch(GP(SEKernel()), 1 / l2)\n    f3 = f1 + f2\nend;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Generate a sample from f3, one of the processes in f, at some random input locations. Add some iid observation noise, with zero-mean and variance 0.05.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"const x = GPPPInput(:f3, collect(range(-5.0, 5.0; length=100)));\nσ²_n = 0.02;\nfx = f(x, σ²_n);\nconst y = rand(fx);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Compute the log marginal likelihood of this observation, just because we can.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"logpdf(fx, y)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"21.971536014981403","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"fx should be thought of as \"f at x\", and is just as a multivariate Normal distribution, with zero mean and covariance matrix","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"heatmap(cov(f, x) + σ²_n * I)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As such samples can be drawn from it, and the log probability any particular value under it can be computed, in the same way that you would an MvNormal from Distributions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can visualise x and y with Plots.jl","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"plt = plot();\nscatter!(plt, x.x, y; color=:red, label=\"\");\ndisplay(plt)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"It's straightforward to compute the posterior over f:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior = posterior(fx, y);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior is another GP, the posterior over f given noisy observations y at inputs x.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The plotting recipes from AbstractGPs.jl can be utilised to easily print whichever component of the GPPP is needed.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"x_plot = range(-7.0, 7.0; length=1000);\nxp = GPPPInput(:f3, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp);\n    ribbon_scale=3, label=\"\", color=:blue, fillalpha=0.2, linewidth=2,\n)\nplot!(\n    plt, x_plot, rand(f_posterior(xp, 1e-9), 10);\n    samples=10, markersize=1, alpha=0.3, label=\"\", color=:blue,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you've built a simple GP probabilistic programme, performed inference in it, and looked at the posterior. We've only looked at one component of it though – we could look at others. Consider f2:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"xp2 = GPPPInput(:f2, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp2);\n    ribbon_scale=3, label=\"\", color=:red, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior(xp2, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:red,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-NelderMead-in-2-Minutes","page":"Getting Started","title":"Fit a GP with NelderMead in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Stheno.jl is slightly unusual in that it declines to provide a fit or train function. Why is this? In short, because there's really no need – the ecosystem now contains everything that is needed to easily do this yourself. By declining to insist on an interface, Stheno.jl is able to interact with a wide array of tools, that you can use in whichever way you please.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Optim requires that you provide an objective function with a single Vector{<:Real} parameter for most of its optimisers. We'll use ParameterHandling.jl to build one of these in a way that doesn't involve manually writing code to convert between a structured, human-readable, representation of our parameters (in a NamedTuple) and a Vector{Float64}.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"First, we'll put the model from before into a function:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function build_model(θ::NamedTuple)\n    return @gppp let\n        f1 = θ.s1 * stretch(GP(SEKernel()), 1 / θ.l1)\n        f2 = θ.s2 * stretch(GP(SEKernel()), 1 / θ.l2)\n        f3 = f1 + f2\n    end\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"build_model (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've assumed that the parameters will be provided as a NamedTuple, so let's build one and check that the model can be constructed:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\n\nθ = (\n    # Short length-scale and small variance.\n    l1 = positive(0.4),\n    s1 = positive(0.2),\n\n    # Long length-scale and larger variance.\n    l2 = positive(5.0),\n    s2 = positive(1.0),\n\n    # Observation noise variance -- we'll be learning this as well.\n    s_noise = positive(0.1),\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(l1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-0.9162907691270586, Bijectors.Exp{0}(), 1.4901161193847656e-8), s1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.6094379869399091, Bijectors.Exp{0}(), 1.4901161193847656e-8), l2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(1.6094379094538682, Bijectors.Exp{0}(), 1.4901161193847656e-8), s2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.490116130486996e-8, Bijectors.Exp{0}(), 1.4901161193847656e-8), s_noise = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-2.3025852420056685, Bijectors.Exp{0}(), 1.4901161193847656e-8))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've used ParameterHandling.jls positive constraint to ensure that all of the parameters remain positive during optimisation. Note that there's no magic here, and Optim knows nothing about positive. Rather, ParameterHandling knows how to make sure that Optim will optimise the log of the parameters which we want to be positive.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can make this happen with the following:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\nusing ParameterHandling: value, flatten\n\nθ_flat_init, unflatten = flatten(θ);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Concrete types used for clarity only.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"unpack = value ∘ unflatten;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now easily define a function which accepts the flat form of the parameters, and return the negative log marginal likelihood (nlml) of the parameters θ:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function nlml(θ::NamedTuple)\n    f = build_model(θ)\n    return -logpdf(f(x, θ.s_noise + 1e-6), y)\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"nlml (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can use any gradient-free optimisation technique from Optim.jl to find the parameters whose negative log marginal likelihood is locally minimal:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Optim\nresults = Optim.optimize(\n    nlml ∘ unpack,\n    θ_flat_init + randn(length(θ_flat_init)),\n    NelderMead(),\n)\nθ_opt = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Note that we just added some noise to the initial values to make the optimisation more interesting.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now use this to construct the posterior GP and look at the posterior in comparison to the true posterior with the known hyperparameters","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_opt = build_model(θ_opt);\nf_posterior_opt = posterior(f_opt(x, θ_opt.s_noise), y);\nms_opt = marginals(f_posterior_opt(xp));\nplot!(\n    plt, x_plot, mean.(ms_opt);\n    ribbon=3std.(ms_opt), label=\"\", color=:green, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_opt(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:green,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Of course, the exact posterior has not been recovered because the exact hyperparameters cannot be expected to be recovered given a finite amount of data over a finite width window.","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-BFGS-in-2-minutes","page":"Getting Started","title":"Fit a GP with BFGS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The BFGS algorithm is generally the preferred choice when optimising the hyperparameters of fairly simple GPs. It requires access to the gradient of our nlml function, which can be straightforwardly obtained via reverse-mode algorithmic differentiation, which is provided by Zygote.jl:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Zygote: gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This will probably take a while to get going as Zygote needs to compile.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"results = Optim.optimize(\n    nlml ∘ unpack,\n    θ->gradient(nlml ∘ unpack, θ)[1],\n    θ_flat_init + 0.1 * randn(length(θ_flat_init)),\n    BFGS(),\n    Optim.Options(\n        show_trace=true,\n    );\n    inplace=false,\n)\nθ_bfgs = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Iter     Function value   Gradient norm \n     0     7.250380e+00     3.200757e+01\n * time: 0.030308008193969727\n     1    -1.063161e+01     2.158628e+01\n * time: 1.48797607421875\n     2    -1.422704e+01     1.837780e+01\n * time: 1.5010311603546143\n     3    -1.908648e+01     1.239061e+01\n * time: 1.5138030052185059\n     4    -1.975239e+01     9.196146e+00\n * time: 1.5264921188354492\n     5    -2.159071e+01     6.489847e+00\n * time: 1.5390901565551758\n     6    -2.234477e+01     3.496640e+00\n * time: 1.580599069595337\n     7    -2.256387e+01     7.851188e-01\n * time: 1.5996191501617432\n     8    -2.259942e+01     2.581990e-01\n * time: 1.6123220920562744\n     9    -2.260322e+01     5.788287e-02\n * time: 1.6249001026153564\n    10    -2.260330e+01     1.005466e-02\n * time: 1.6376631259918213\n    11    -2.260330e+01     4.597135e-04\n * time: 1.650541067123413\n    12    -2.260330e+01     1.216534e-05\n * time: 1.6633632183074951\n    13    -2.260330e+01     2.221989e-07\n * time: 1.6760082244873047\n    14    -2.260330e+01     2.465815e-10\n * time: 1.6885931491851807\n","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Once more visualising the results:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_bfgs = build_model(θ_bfgs);\nf_posterior_bfgs = posterior(f_bfgs(x, θ_bfgs.s_noise), y);\nms_bfgs = marginals(f_posterior_bfgs(xp));\nplot!(\n    plt, x_plot, mean.(ms_bfgs);\n    ribbon=3std.(ms_bfgs), label=\"\", color=:orange, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_bfgs(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:orange,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Notice that the two optimisers produce (almost) indistinguishable results.","category":"page"},{"location":"examples/getting_started/#Inference-with-NUTS-in-2-minutes","page":"Getting Started","title":"Inference with NUTS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl provides a state-of-the-art implementation of the No-U-Turns sampler, which we can use to perform approximate Bayesian inference in the hyperparameters of the GP. This is slightly longer than the previous examples, but it's all set up associated with AdvancedHMC, which is literally a copy-paste from that package's README:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AdvancedHMC, Zygote","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define the log marginal joint density function and its gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"ℓπ(θ_flat) = -nlml(unpack(θ_flat)) - 0.5 * sum(abs2, θ_flat)\nfunction ∂ℓπ∂θ(θ_flat)\n    lml, back = Zygote.pullback(ℓπ, θ_flat)\n    ∂θ_flat = first(back(1.0))\n    return lml, ∂θ_flat\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"∂ℓπ∂θ (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Sampling parameter settings","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"n_samples, n_adapts = 500, 20","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(500, 20)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perturb the initialisation a little bit.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"θ0_flat = θ_flat_init + 0.1 * randn(length(θ_flat_init))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"5-element Vector{Float64}:\n -0.8610855029184477\n -1.6314527873882247\n  1.5492655862372453\n -0.13167506632032275\n -2.3037855289693767","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define metric space, Hamiltonian, sampling method and adaptor","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"metric = DiagEuclideanMetric(5)\nh = Hamiltonian(metric, ℓπ, ∂ℓπ∂θ)\nint = Leapfrog(find_good_eps(h, θ0_flat))\nprop = NUTS{MultinomialTS, GeneralisedNoUTurn}(int)\nadaptor = StanHMCAdaptor(n_adapts, Preconditioner(metric), NesterovDualAveraging(0.8, int.ϵ))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"StanHMCAdaptor(\n    pc=WelfordVar,\n    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.4),\n    init_buffer=75, term_buffer=50, window_size=25,\n    state=window(76, -30), window_splits()\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perform inference.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"samples, stats = sample(h, prop, θ0_flat, n_samples, adaptor, n_adapts; progress=true)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"([[-1.1255177291597773, -1.970424585715805, 1.6473880191273962, 0.019283628304229056, -4.618768575379384], [-1.1255177291597773, -1.970424585715805, 1.6473880191273962, 0.019283628304229056, -4.618768575379384], [-1.149984525662526, -1.151270449918757, 1.8780897108854333, 0.3260198393063017, -3.7286318428784933], [-0.7103980022940073, -1.775972625612651, 1.5756686474069683, 0.18974755215013878, -3.792165787449521], [-0.704592421507057, -1.0247544346269915, 0.8426493803066979, 0.2937025745882821, -3.6041683913446425], [-0.7832788752459697, -1.1978609549084605, 0.9277859879354444, 0.14143158234298933, -4.0591850689965305], [-0.7893387777840924, -1.2216194295257699, 1.0121259123666306, 0.14888602039249196, -3.986790389175889], [-0.9625766591731109, -1.4239304159326818, 1.7270998418829335, 0.44613136325761354, -3.6288190796056092], [-0.8371311274863038, -1.2527465864385035, 2.43125116863473, 0.5528270088861053, -3.9673166966728908], [-0.8371311274863038, -1.2527465864385035, 2.43125116863473, 0.5528270088861053, -3.9673166966728908], [-0.843420676426623, -1.1624639243528034, 2.3634208707070403, 0.6065988137719809, -3.861006420659345], [-0.9672383384441661, -1.151857701928634, 1.2244400528539392, -0.05809600248700478, -3.9055738745305426], [-1.0808079306430889, -1.6492513846429453, 1.9089692392078979, 0.4234475888377771, -3.6659157594550353], [-0.4617202446813285, -1.1280259820056953, 1.8852143678674553, 0.3460621583051708, -3.6330241589482326], [-0.1398177061507636, -0.9294098792380681, 1.9166643775179406, 0.35679902209453873, -3.588827019668222], [-0.21593309084970305, -1.0637482855031188, 1.264129905127752, 0.3462656875345933, -3.5234876465378626], [-0.028733578970995835, -0.6317468476529325, 1.0778884421162938, 0.347260904349448, -3.445744194596585], [-0.2909182863594528, -0.9442840327062998, 1.2113378837617592, -0.010482516870695777, -3.7555452858383385], [-0.1649493330898491, -0.8674505001419816, 1.5009200752964498, 0.024120865754813287, -3.4191115402648062], [-0.40152209910395853, -1.4351806901601567, 1.321735811245918, 0.08520371518933761, -3.6993173617348507], [0.014114278349900498, -0.5747969411651227, 1.5614884151435373, 0.18421583645951883, -3.731426113633438], [-0.07230777058899016, -0.9587695292275219, 1.2394368100035134, 1.0143002079458843, -3.6599381041258403], [-0.1480577822767959, -0.818542762227648, 1.4998496501627974, 0.572170964091808, -3.660240363010324], [-0.170781419085872, -1.3517204536488663, 1.5611121796091763, 0.16993579253292432, -3.3476446466479746], [-0.9375419988240719, -1.2838462880566763, 1.1835652973155446, 0.2823852163042893, -3.910171332378731], [-1.1620207670594944, -1.5917632780458006, 1.369350640556441, -0.11069317819627908, -3.85408478593178], [-1.008433495105512, -1.1669493175608352, 0.998812215364427, -0.09231390255706737, -4.260571565394957], [-1.1352773020093234, -1.6043379606319543, 2.017847002250711, 0.9375555762073398, -3.7706091666035864], [-0.8752987807783186, -1.3589309085209673, 1.9003322853550373, 0.1650653928563108, -3.8063437527729307], [-0.9751063347774908, -1.3054244885694262, 1.758113274834235, 0.10649938107786248, -3.968045687893269], [-0.8801705469875959, -1.3139150556358643, 1.6028080295986262, -0.16415033034730472, -3.8689764487353413], [-1.0888475569465168, -1.4105562575112118, 1.2116137986805013, 0.17452370554761437, -3.856124271271105], [-1.1112326577381557, -1.559648563827826, 1.2331185927301318, 0.14269252455886144, -3.452836236552392], [-0.8228262573057871, -1.645254515912763, 1.63282771319973, -0.06854801234353015, -3.899247146146066], [-1.1131452800094925, -1.3878545594507774, 1.6733911353022601, -0.05426273564310603, -3.6529744966708493], [-1.0152471408794923, -1.6625453540021566, 0.7624167778488067, -0.04450328640784512, -3.8647472124464044], [-0.8330222016237656, -1.314042278608845, 1.3181653769474413, -0.3911194963137795, -3.6614416200919333], [-1.3000735061579611, -1.7280394138051771, 1.3366291870329734, 0.11347877152725644, -3.814896552858578], [-0.6052150246040358, -1.1652153495276238, 1.1654629559120706, 0.2118475830588707, -4.05210549123307], [-0.9511922609263643, -1.0146501101290377, 1.101771204762144, 0.5219985975197065, -3.494938728407453], [-0.41782173795522515, -1.1556859817082172, 1.800238330539238, 0.43537297420070076, -3.7540697625009622], [-0.19679355703840626, -1.2190543131848386, 2.122432351465499, 0.5343766426203428, -3.7846860393034483], [-1.018703440781239, -1.6153966522173167, 1.5487912855709969, 0.08857887716856781, -3.79947649187076], [-1.1489662315724283, -1.4746802909311263, 1.504089830699184, 0.280469235799159, -3.6056358393591794], [-0.8479544287199958, -1.702717248200032, 1.6060803302433502, 0.2935392220553559, -3.7755351579955536], [-0.8812405705841198, -1.7705406906592496, 1.6440429343518381, 0.42103113116413143, -3.7296287490810047], [-0.7718481665992991, -1.2501473899618318, 1.398895588333582, -0.1184008724954557, -3.7013430787811323], [-1.0497389779732302, -1.5785886026377778, 1.8370192281033069, 0.5770804745379726, -3.9054964920394815], [-0.843318503426394, -1.1702864137073081, 1.2909902829486815, -0.12929190562225745, -3.9943394293266596], [-0.9609008831570686, -1.091010199202425, 1.5117388734605606, -0.16278393268397534, -3.765254111006854], [-0.8027399290830779, -1.6674775806934894, 1.897168610411964, 0.03663358362703813, -3.765441762157452], [-0.7790044511733704, -1.326468193090526, 0.7822394925278188, 0.1064430753127806, -4.071318133396139], [-0.9094947382891212, -1.3325296178630417, 1.993956481120149, 0.9179201655898339, -4.025457108244221], [-0.8171750936013441, -1.1722586984883079, 2.2027811884172026, 0.7975345707052534, -3.9437454657999877], [-0.8627598771496515, -1.7883453007633507, 1.3611494476327652, 0.2690392437472501, -3.71231369651945], [-1.1962779357054676, -1.4942713877595493, 1.5601264677475766, 0.15424324575902193, -4.072058872132884], [-0.6817692430191459, -1.1471345917975972, 1.5088534924699029, 0.7462337357663676, -3.6358086680272668], [-0.8481002666650013, -1.1338822960345847, 1.6997157243148189, 0.49772639920700096, -3.940298253828918], [-0.6252472356500229, -0.7851282562163814, 1.2243796446277286, 1.155866990929035, -3.8495944960894217], [-0.7433203584205529, -1.1285328637105523, 1.222567721601723, -0.18965010971152108, -3.8986368852291404], [-1.080017345002251, -1.7703513330915204, 1.7868571385804017, 0.5107633302615312, -3.966903818509827], [-0.7401661030198335, -1.285407938400404, 1.22591308658842, 0.44113650492114975, -3.506778342631212], [-0.7062723864144215, -1.6161349796548368, 1.7044985247480129, 0.4097826220675432, -3.4622167218554374], [-1.0230865433733647, -1.0543272256683232, 1.3514560512656395, -0.08504691190375348, -3.6695234385004203], [-0.09704369718408079, -1.4922015994840339, 1.914234072899731, 0.15950626024170345, -3.627799232371034], [-0.28094607878979977, -1.07613981762803, 1.3684737484508225, 0.5021664588033212, -3.4989914869765366], [-0.23717656987045002, -0.9930499163280122, 2.2098384567472165, 0.6033619087794009, -3.692525286886729], [-0.3407352987825596, -1.2310172636764831, 1.6477551853384569, 0.6218064261539924, -3.4745937696683415], [-0.7880859706717973, -1.5291058299279503, 1.5324499762140515, 0.08040879597908149, -3.7255808676658946], [-0.8658041292874711, -1.2998002536346245, 1.5773818391297458, 0.18591591807405483, -3.827393599883231], [-0.8019973065207305, -1.3195519650016163, 1.580146942188809, 0.35501777721503086, -3.646588468224951], [-1.089355594925069, -1.3972054926531625, 1.3350607002334147, 0.48128265549676386, -3.889515479014057], [-1.089355594925069, -1.3972054926531625, 1.3350607002334147, 0.48128265549676386, -3.889515479014057], [-0.7833454549297567, -1.5734138451151831, 2.1075277084489974, 0.270188747880454, -3.687073698272892], [-0.6501075555385654, -1.6168212697081805, 2.076693438858866, 0.05278975409003889, -3.64776118318425], [-0.30467836507352486, -1.1701647681210086, 1.326070774916988, 0.037208072878949484, -3.5921225974622706], [-1.0997912468512436, -1.1334688500250494, 1.0992672151205785, 0.20481704311393717, -3.7415617868921296], [-0.6457403487053136, -1.675843726209564, 1.3879796448796358, -0.5845376973366644, -3.7838816976005103], [-1.0363275877979745, -1.244276608116556, 0.7598240783557145, 0.7324972823923825, -3.8837315644374124], [-0.6231147005134838, -1.1614412255929596, 1.8568785776124968, 0.22316004297344774, -3.5908085915270527], [-0.7986828544545372, -1.1022621105044337, 1.7262383393482434, -0.1194807914203076, -3.8589078015251963], [-0.9341032537746259, -1.893294596861168, 1.5587022561341648, 0.5652020943665859, -3.7953039059256475], [-0.2958301077508722, -0.5434239496692596, 1.7515418602748878, -0.33422612686268194, -3.863572592199893], [-0.6445537104964211, -2.0915853053371327, 1.2678535379747726, 0.6375536260459855, -3.5624358767866964], [-1.0968930757048247, -1.4941016598118688, 1.4215575725175171, 0.3322567904195983, -3.7681204844826115], [-1.0005127857937883, -1.532166650896293, 1.5928072635904074, 0.2916336948886615, -3.8278999464524603], [-0.9407153651081849, -1.6182445648588528, 1.490114112890953, 0.39149371940143474, -3.6692844308344874], [-1.0361068104229543, -1.727985799861726, 1.478901718493071, -0.20367924844258542, -3.771397622925725], [-0.8821975263107894, -1.5083008395812296, 1.6880268043773061, -0.19298644527364878, -3.762736732811614], [-0.9092894662733337, -1.482573995385782, 1.9981230357610948, 0.7512997448620395, -3.73359556799597], [-0.9822587337640368, -1.3806796483131965, 1.705585313531691, 0.26913585489336705, -3.9376271411745747], [-0.8247096247750184, -1.625525356768879, 1.4757777599661854, 0.1373188941697787, -3.902334676157766], [-1.115981717769683, -1.6292586148547485, 1.5029408714490495, 0.18142845388390888, -3.7290914534481967], [-1.1068922214185848, -1.3514476066708723, 1.3603438570384685, -0.3434721127057378, -3.6126346627925026], [-0.47028677441485467, -1.3903161668479669, 1.4945355372404796, -0.14141961996557412, -3.845771631202951], [-0.5390361905866835, -1.3475356555842846, 1.0954627759244886, -0.7164693029626108, -3.575335580550147], [-0.7722600305437988, -1.3266968442621445, 1.2457201714967558, 1.0134759056199019, -3.9305513856914707], [-0.6544926610343789, -1.6614683834068478, 2.039168894173381, -0.1960766740022683, -3.62572366350298], [-1.0688255933359643, -1.7620096205919549, 1.7440149203592825, 0.5744416163046848, -3.8016949481154936], [-0.7836481885217171, -1.0420092362539741, 1.5735246081825716, 0.39664929777073193, -3.8880262830703622], [-0.7226963807000317, -1.4098938743305913, 1.5926183989369982, -0.11094791921469238, -3.7206603108797105], [-1.1065755534286656, -1.6991737117279377, 1.8973598492283807, 0.4046224935693529, -3.805580891591563], [-0.7588206060038076, -1.4536838863723431, 1.1755856108849714, 0.07140127782640447, -3.8411833688081924], [-1.0821814763598623, -1.5990801128234784, 1.6507142152748728, -0.07878677779886553, -3.7789733370477148], [-1.0662825463737948, -1.460892785373246, 1.4817985467446653, 0.3660601465107106, -3.7458174271447433], [-0.9007486570506881, -1.71929529302268, 1.5854425695604115, 0.2672810130294358, -3.8413672427805308], [-0.9898870414996741, -1.3995898243101295, 1.418179372962848, 0.8001535627970244, -3.79363793152214], [-1.1756714591469966, -1.329143319833812, 1.3249058245029968, 0.8536085264559462, -4.065983450883385], [-0.5515236870114273, -1.733532033950993, 1.9536919537771114, 0.22063127684920728, -3.5174615663886555], [-0.39826190099238445, -0.921812121918083, 1.0494954254072284, 0.31333349828040113, -3.685986118848003], [-0.5582220711165545, -1.5005634911982784, 2.173900489850064, 0.12013215452612391, -3.416017766128044], [-0.3899455899313208, -1.4883073036814194, 2.251631133085397, 0.7170960016547525, -3.7358208201143723], [-0.5136294083192064, -0.896474353068656, 2.39171119594399, 0.6918985353819473, -3.6731671752100854], [-1.0234024905825363, -1.8968667087768158, 2.858974424279822, 0.7115124115920898, -3.987987637605308], [-0.9096553985484793, -1.2589025289815186, 2.0960452748714427, 0.37945525418927717, -3.520742064760061], [-0.836260107260235, -1.2142321571571304, 1.8612725496025009, 0.4014218572962525, -3.598184575526281], [-0.5521961669588333, -1.51128922062729, 1.693180480176108, 0.5498148135294675, -3.697158668689872], [-0.5489857994059091, -1.0738761518051638, 1.3230199275903916, 0.4503644117578121, -3.77948444956447], [-0.5480017629513831, -1.4988730682717861, 0.8842443631173177, -0.24246294629434728, -3.629474655571955], [-0.9124480554242054, -1.4678812638870724, 1.531460295442819, 0.1423090901141846, -3.6471186643500424], [-1.0397174843741654, -1.6165669161190594, 1.5997105091252213, 0.3823945772752455, -3.9779718942390967], [-1.0734830611009472, -1.574059524233062, 1.6292822480602172, 0.31398172076607384, -3.942800088215583], [-0.1552123548638229, -1.0920297837352244, 1.2642899300192405, -0.08407045629257212, -3.672039896070892], [-0.40144981538485563, -0.7415944718681106, 1.3093697627790222, 0.14697165778216306, -3.4364674540390023], [-0.24575258917887147, -0.9334270793098409, 1.734667849939931, 0.14269719376817622, -3.6210897540144966], [-1.1405289909380065, -1.855495340313528, 1.6246624918479184, 0.5852205193872417, -3.7214417912784374], [-0.7915130317665403, -0.9926584660404687, 1.8130502360532108, 0.6293815445809102, -3.803587606070271], [-0.10911352649053893, -1.146708340369572, 1.4662410369461172, 0.20996532158142267, -3.2900578335207515], [-0.6360798968921744, -1.3157053155043612, 1.3547535544995635, 0.4577719933124688, -3.8091653533155627], [-0.6131513089701606, -1.4223021728553777, 1.2695077388433518, 0.5684732927591921, -3.545155279180866], [-0.8635835236257019, -1.332207778168803, 2.0554588250608106, 0.9496506658489099, -3.870882675288481], [-0.5912882026041986, -1.3452055148045965, 2.0544756256160364, 0.936016225937561, -3.7706159706765385], [-1.291721445822932, -1.5510900854211942, 2.2041928945988305, 1.4690056318647033, -3.883416964447196], [-0.9112991695302843, -1.6607475528428004, 2.421847461019251, 1.3494976400508458, -3.7087502070737477], [-0.8113349955321345, -1.0733637195079548, 2.4253270163663516, 1.7173298750095078, -3.7658270660822097], [-0.7019881255899654, -1.2710299105456953, 2.496087022496321, 1.3746500912175457, -3.6523240217045263], [-0.9459172316942506, -1.360079684263395, 1.9007296056359173, 1.9764335905568922, -3.8353548003776416], [-0.8735543454583576, -1.3879428672306424, 2.0948047477831064, 1.8140448067282497, -4.082282778436752], [-0.8038050958201538, -1.263203617481173, 2.036830508753848, 2.0258407598471577, -3.3967919833605875], [-1.1139248391205334, -1.3421383636917417, 2.247037709677817, -0.061040784118245484, -3.6102015393454123], [-0.8457491054607735, -1.608881286860481, 1.9108879449975533, 0.10709525893935085, -3.928990701307462], [-0.8163579833981037, -1.3650857292569911, 1.8483189974817265, 0.26457992964954097, -3.8925507764783496], [-1.142609098590436, -1.4599605483964115, 1.6386708248137327, 0.320446392346321, -3.8255689238432673], [-0.9317879777340855, -1.4474297116914558, 1.4276706488244397, 0.02629406871090276, -3.452306378597118], [-0.9125432851390454, -1.5414700757574409, 1.4958499706485335, 0.09486905757433953, -3.5548058870132633], [-1.1481205812319022, -1.8381948776168557, 1.3778242830272696, -0.17447908752986427, -3.941508451777987], [-0.646474409607955, -1.2365769295795035, 1.5643462173965152, 0.055673691068924475, -3.6250041391329266], [-1.1339347548678431, -1.6034209941642599, 1.8453030421514185, 0.5454396259409379, -4.049832408284648], [-0.7471829807206272, -1.4402899375493154, 1.3676208506891694, -0.10454708494254597, -3.9290955490807424], [-0.7005508382194087, -1.6439816614052272, 1.752808289872928, 0.853930666127841, -3.7995454504219097], [-0.9425903188845572, -1.2440032272633323, 2.1039277770354037, 0.2157708598238626, -3.8307989884706712], [-0.7361135321210812, -1.255982715737908, 2.170478773129366, 0.19251092882732712, -4.033913556802244], [-0.7810279316505718, -1.1957845415948793, 2.166984752404335, 0.20844796151819778, -4.036964970488192], [-0.8332143367107572, -1.3430674082123073, 1.9729637230219643, 0.6992855320561947, -3.6582014102137674], [-1.0944403117134087, -1.8169712316465043, 1.7302663212150997, 0.6264329339325824, -3.9357430835428717], [-0.8157605261329787, -1.1086238939034352, 1.4032877177232337, 0.8400459291589948, -3.6682995406860317], [-0.9834980597224497, -1.5491241668805873, 1.5098013160245012, -0.12525724337870114, -3.980907387605008], [-0.8323850071805724, -1.2976277457220244, 1.6858555966333642, 0.7490251932087764, -4.130123940512152], [-1.1915915131465789, -2.0291283780853817, 1.6871172195755875, 0.1326535051108313, -3.5354444104436737], [-0.9883665581987355, -1.7054591800159529, 1.5043802123704764, 0.33614643576700287, -3.8420454322827564], [-0.7032606073478238, -1.2382735037112778, 1.5278826414734878, 0.36597844118822564, -3.93611046539742], [-0.9937901912093329, -1.8352468830389426, 1.9633408723444028, 0.6951342623304175, -3.724703525766223], [-1.1329346570552183, -1.3070544409101579, 1.5005813541416073, 0.44769762526656987, -3.8455576555994826], [-0.8173143245495156, -1.620557223364011, 2.1770859800671998, 0.5647662758168991, -3.646679055463207], [-0.9953345175035199, -1.4785533992677802, 1.628199449817226, 0.19304551093892264, -4.019927733767369], [-0.911652359153817, -1.6339696015463014, 1.6118581744410125, 0.0016180811533902072, -3.6179026595114743], [-0.9709321758998807, -1.3323280882063786, 1.9648953998178609, 1.0717246081923737, -3.6337392066035563], [-0.8154926326274283, -1.4540085247349261, 1.9555597615580191, 0.6307844773752802, -3.9928844206554737], [-0.8111067216922511, -1.8323320884741514, 1.5302576913668129, 0.45133077808946637, -3.7427615782646195], [-0.6875421179748133, -1.3045128580678285, 2.1635791379898217, 0.494465858010722, -3.705188282228667], [-0.9720603966816977, -1.3628597033775733, 1.7764274833071323, 0.31037976757190305, -3.9051150166846686], [-0.8952633556528721, -1.413978330613952, 1.7669130759626723, 0.27610800789451273, -3.903276625166399], [-1.0641287441236202, -1.6622494539111285, 2.005329174526626, 0.6403707506162355, -3.7670411559702064], [-1.0513402215402314, -1.5337285039419268, 1.8796310118714321, 0.6616276074491255, -4.006085412852558], [-0.7309739883104465, -1.499543533307566, 1.9142576334721708, 0.24609993048571588, -3.6492799840844414], [-1.0831439658729864, -1.4535329186185317, 1.1785471115540218, -0.22854758141948292, -3.9529164751727626], [-0.6620767706877438, -1.240932677252048, 1.612017334234721, 0.5061964783781264, -3.6930444801031324], [-0.7406608657856184, -1.6519646609393623, 1.8205846910243337, 0.08126467595260259, -3.6833535703269535], [-0.8842153543949252, -0.9970030600706684, 1.0627376747166086, -0.5635281003642587, -3.8108113964145702], [-0.9759019634736874, -1.7563534237396452, 1.764683140338339, -0.11632792350546961, -3.9197593820015384], [0.0379052891793904, -0.8774788584992392, 1.9147534980493786, 0.1756827141008675, -3.3721852577225655], [-1.113573820595171, -1.9027621705206588, 1.6131802990609931, 0.5552155448435533, -3.6570122087283248], [-0.708147188119595, -1.6537994828529083, 1.3911067322646744, 0.6966644916789263, -3.644511791968686], [-0.7781038849921631, -1.4748467456234136, 2.0160847316505186, 0.33866481445219754, -3.8903764826714102], [-1.2933518170353984, -1.6882429305038793, 1.4203389525354786, 0.10917583901168149, -3.7557317182596948], [-0.5818233278548652, -1.2172531036065206, 1.3779123527700872, -0.12936812500930478, -3.7810371375570337], [-0.7133339257336329, -1.0399083313716488, 1.7784823123263627, 0.5013605398249542, -3.881633701292341], [-1.0891213428187372, -1.792058449040895, 0.7274213527962693, 0.42450874391242605, -3.9522229069028803], [-1.1625381036406204, -1.6045406552395631, 0.5557868268387963, 0.030943174271719553, -3.8182285867104526], [-1.006603948745655, -1.2674769792053435, 1.5215261526095631, 0.09753542718595182, -3.8024191353543277], [-1.0232624201495903, -1.785711749533901, 1.6614567742547695, -0.013053716966760429, -3.9073754967432954], [-1.0741910030763522, -1.401502912835377, 1.7099406717414158, 0.3245307719104205, -3.891750931235573], [-0.713945960997433, -1.4878080923113632, 1.591471763850504, -0.18655181248386685, -3.704275603353709], [-0.9764321829108651, -1.4913664538707845, 1.5429314359771982, 0.09639794062747158, -3.700903346449233], [-0.9508307331231713, -1.6548949229582557, 1.6676468222701941, -0.1613923422589385, -3.8717046947346243], [-0.8069073462942736, -1.1288863236706215, 1.473739675305782, 0.7598724147820406, -4.10183228332093], [-0.6953847619147329, -1.2278409626243412, 1.1425473818413647, 0.2977979047384599, -3.6524505090764077], [-0.8332068202283301, -1.289885739346003, 1.1271726160525801, 0.40455093976256085, -3.630076791552504], [-0.8552072080929939, -1.461209131470368, 1.6669162829941842, -0.04279588495654707, -4.072766101612098], [-0.9781707937335316, -1.3309887039737778, 1.8605397674285105, -0.12553426834470566, -3.9571890066931945], [-0.8717383741497755, -1.1126719843561048, 1.9227354451928373, 0.08468756061880656, -3.8562954189720644], [-0.9333805761319663, -1.6028372948315854, 1.6302372396741862, 0.699717448522943, -3.7869952594313347], [-1.037510661044175, -1.5334855709858735, 1.233270898452472, -0.0051564028785602845, -3.8433749645704123], [-0.836600421565841, -1.336540911560982, 2.0198845375602335, 0.5893242558568041, -3.9357112931390956], [-0.7711435047854447, -1.4200006946636152, 1.8460221207635619, 1.562076123735803, -3.6188646586354043], [-1.1726286518900675, -1.621568013195625, 2.1052593462800098, 0.9149463374449729, -3.9824387322069383], [-0.9106866656102173, -1.3099740605021468, 1.8835509730343971, 0.9913344902751107, -3.9854520130846196], [-0.9385924696385777, -1.588535245166496, 1.8476755275343528, 0.3542417976958133, -3.7893491582986534], [-0.9180504326502448, -1.0205534821285818, 1.421933242239706, 0.2831523149789311, -3.934945019975779], [-0.8254637156180396, -1.570906061628203, 0.9408823708383633, 0.2119871615430521, -3.954442266619235], [-0.9737119577539188, -1.7084691722877468, 0.7995320365064811, 0.11948669196911882, -3.8800891559549116], [-0.7906223450808765, -1.1432479429819402, 1.544988400449452, -0.12293612063331731, -3.794095342122854], [-0.4757516017156144, -1.3678133019056278, 1.5579024002499613, 0.5113090191878176, -3.6232313832782013], [-1.0884685101090867, -1.38488100791964, 1.86694369008413, 0.14804730564495927, -3.7747284863529527], [-1.2301000400164888, -1.3602945824778185, 1.8476758885820852, 0.1316361983149136, -3.7099504535841685], [0.06638161533009207, -0.9832024972473187, 1.9188265753518507, 0.6081764045123156, -3.71936183909605], [-0.3446707523837253, -0.9299199112645903, 1.887207486527959, 0.3427282319233303, -3.720109918210163], [-0.13945326245133635, -1.1483011250275672, 2.3732364554458862, 0.12982227635057114, -3.613853928533756], [-1.2246031997610756, -1.482564541525487, 0.8140238396642618, 0.285822457523038, -4.079152315744694], [-1.056484201301968, -1.671878055658178, 0.9427150080309921, 0.20752259191394629, -3.5060287153117193], [-0.8996230294732298, -1.155969188156475, 2.2659238904980175, 0.6361727851595578, -3.8379399849865488], [-1.0551592548971258, -1.486419244707239, 1.411342762805328, 0.6576896622802503, -3.821284033028255], [-0.9772205217856882, -1.4690836488205992, 2.5113918431656947, 0.8262681871274596, -3.687225262780609], [-0.825750049867018, -1.7387578226893718, 1.2808625991412628, -0.024051252634650744, -3.689597685067137], [-1.0883584875590107, -1.5363153566583636, 1.8353007584940657, -0.02500320378471045, -3.6799384958991133], [-0.7828269027072663, -1.4038346194388296, 1.9258833428891504, 1.0720019245043284, -3.9422329328586776], [-0.6874350342935738, -1.6763045936837104, 1.5731842173300337, 0.08686636671451878, -3.6388395118196093], [-1.0430131288374225, -1.2940482357995406, 2.2436317146673668, 0.019809453772799458, -3.9250551014453543], [-1.032827260755127, -1.538056062072908, 0.9623973071169818, 0.4751953384158164, -3.661908019287753], [-0.9807216073336915, -1.5717910310569736, 1.032892439647014, 0.4041364855783808, -3.8840238040101465], [-0.2343990332338089, -1.364327863473566, 1.2730942797286389, 0.16185829654517359, -3.563910598874637], [-0.5767248679472938, -1.4521068662667345, 1.211592911589994, 0.2970797469944129, -3.8964669905727685], [-0.9842567031242249, -1.1761268182703382, 1.7259713762925921, -0.017546387148602766, -3.9681622903629035], [-0.7377208724546194, -1.3086503815680284, 1.3987335974051363, -0.17960707859430713, -3.844875650410878], [-0.6296689798174501, -1.3454552274269895, 1.4823134978473722, 0.5260857859873447, -3.4521766853130975], [-1.306637531747687, -1.5971928904640407, 1.796412273017226, 0.21268183522745393, -3.8470569149191727], [-0.9536343632260249, -1.6812139745404795, 1.2815191965940318, 1.1371146097887572, -3.9480012848160295], [-1.1502608155860004, -1.4785146181873763, 1.7467422136372068, -0.17896905758680304, -3.6327328960251077], [-1.1536705060247872, -1.5212075131392513, 1.7500422854617967, -0.1265445724676067, -3.571521371346295], [-1.0009485716094255, -1.3000638962829685, 1.3684794725511407, 0.5163284438800194, -3.8834195754872267], [-0.8269276878631345, -1.3830620808888177, 1.4090082855036916, 0.35693633144366943, -4.163269442045667], [-0.9817627317282509, -1.22381127661191, 1.3081910664949457, 0.0019465309521036478, -3.7635371331853693], [-0.8586011683715415, -1.130213132807277, 2.036650483570161, 0.06567792350999016, -3.3865111070844565], [-0.38933254675571244, -1.4214796715114406, 2.01153413163297, 0.21889705710174145, -3.9327578259834874], [0.039320170330379524, -0.6242009960823165, 1.4201280069572897, 0.7399583623891656, -3.7027190023353986], [-0.07762279388979944, -1.0736858854276667, 1.3243123231807554, 0.2823781313737897, -3.727998978959136], [-0.47164938237869586, -0.8607546672830295, 2.070709207096303, 0.517979832674032, -3.4726703713194826], [-0.4820389143891502, -1.0358194175595359, 2.2315263813728086, 0.5393199997229672, -3.6997190298132385], [-0.4642941808919602, -1.5042602280320483, 2.299576756389177, 0.4670572524635083, -3.6070234837687787], [-0.7476976283365383, -1.6594673723916389, 1.2624749861875597, 0.4671576276496092, -3.6712303577726524], [-0.8546667600346833, -1.6039587195898082, 1.0546906556744609, 0.6355872880423774, -3.622282047687387], [-1.052317380835064, -1.727103902992868, 0.6218100928113779, -0.17991155596973524, -3.85486334542215], [-0.9314637753464798, -1.3154576846585735, 1.3845709119434964, 0.02539662550075561, -3.722945481295333], [-0.6776265552083145, -1.424729547516634, 0.8648815829286673, -0.2340048450419499, -3.8835153614609688], [-0.7243017084363041, -0.8351865905621508, 1.7792275412422787, -0.14788690164388996, -3.5547802893377294], [-0.7428256389612136, -1.5832344575735462, 1.936326350581567, 0.02296541914514713, -3.827917485117467], [-0.6039413821922598, -1.7063721618728038, 1.210986415123447, 0.4459868524581944, -3.655180518878078], [-0.3031511806825229, -0.9625159282427684, 1.2524113652838453, 0.32812230619445926, -3.652081192690593], [-1.193523312358653, -1.4376201301325735, 2.217010918309127, 0.5726728051318376, -3.937748381443549], [-0.6715228229225428, -1.521149254483427, 2.0875575944231755, 0.6574243326835453, -3.5836693547325753], [-0.45454200386814814, -1.6707361797162648, 1.0401533959333398, -0.039007034935251594, -3.9019929416966654], [-1.0278291781535567, -1.1629990529574077, 1.7928120738174163, 1.0880704720817742, -3.421636019684243], [-0.9056844339549154, -1.6325879890050743, 1.394085167833089, -0.12804451885650048, -4.004556276020421], [-1.081094520844897, -1.50475621368599, 1.2863844719376731, -0.0531047912192934, -3.5732620330721763], [-1.085369864459868, -1.7760162409112048, 1.2538062130560952, -0.006182093540972808, -3.6842798106009798], [-0.8282935630693232, -1.2526206815151122, 1.2553604962128875, -0.024540326121600033, -3.912361346437963], [-0.8068900261693501, -1.1579458148381998, 1.1640292676785011, -0.11693729370026543, -4.00073567038067], [-0.944504256543046, -1.514886772007556, 1.8110454792048416, 0.05266432962846919, -3.6063173291431387], [-0.9552795174039369, -1.3224079918527214, 0.8202712236302627, 0.0632204047084639, -3.867777815198865], [-0.6621542699153332, -0.810572649132549, 2.0943494247181267, 1.0627791640266122, -3.8172746530102453], [-0.7545798047159332, -0.9735199891065193, 2.287714083426242, 1.5238491124139366, -3.9745559504193717], [-1.074973960402428, -1.4799909065825478, 1.8250459503363687, 0.5067316070296372, -3.515154292098889], [-1.0239661142969263, -1.2840484222431137, 0.4615489541225388, -0.18682445676713852, -3.682377578071205], [-0.7454681676870546, -1.4173806078605196, 0.2504766520455883, -0.04322785353129002, -3.800448248237161], [-1.2687547733311693, -1.7397584551429013, 1.0551584093543735, -0.28886822187374206, -3.8570560772170057], [-0.7148100080182731, -1.280718996278503, 1.228213047728296, 0.5103871875740588, -3.7111276859881728], [-0.830883929188877, -1.311200618610514, 2.1762355131484195, 0.3228713679022083, -4.0323789032930595], [-0.9677173540829738, -1.2732648289889206, 2.259670684915373, 1.0381068251881829, -4.017994972919472], [-0.7961148177018861, -1.3353478076912886, 0.8344310254584053, -0.041102075531114925, -3.8938199089303676], [-0.8708507185196436, -1.568821551437989, 2.228809811653866, 0.38912247671440914, -3.7494632645219172], [-0.8170977790913138, -1.8170859749281545, 1.8496671090036234, 0.39703998461094114, -3.6997896898153853], [-0.8424161966966098, -0.8607991591747746, 2.1246012771732548, 0.22122219363722032, -3.8283669194800254], [-0.32229051795621544, -1.2340825042691046, 1.7634679537007067, 0.6645498264574742, -3.4517213924263137], [-0.8811825279419615, -0.8326213873719776, 1.5410836969252315, 0.7089156077828954, -3.991733929683454], [-0.7040650667888027, -0.6410692104577818, 1.6502643167647295, 0.7733300483843167, -4.157202048549872], [-0.8027625873514126, -1.1669485209958759, 1.9301342017294616, 0.9583752523227358, -3.6707563755145722], [-0.9433204384934868, -1.2825213966492044, 1.763949225607398, 0.3612213717491465, -3.6912241406030213], [-0.6020916962892463, -1.3082946183647708, 1.382829845661105, 0.143644865085011, -3.745162887632731], [-0.8064228906733212, -1.4630193474661393, 1.4175816923298257, -0.02260519039988293, -3.700710376881041], [-0.8475101192931149, -1.591692642712604, 1.2201703998278772, -0.024674961147293728, -3.9331897785388383], [-0.6110804409759721, -1.503289029485217, 1.8135479061963973, 0.3811145260053415, -3.723436704319494], [-0.9487638101735916, -1.6626935021591704, 1.721314159350896, 0.07388998305986168, -3.9863864005571776], [-0.6171609579364246, -1.0708270654742496, 1.686557642525981, -0.028553646529742696, -3.658807731884191], [-0.9436726573223632, -1.1839748048542353, 1.7941233889113126, 0.35915086380835437, -4.103905940730611], [-0.8265293764808149, -1.4356052434489102, 1.5703315431437794, -0.10881079293277615, -3.5857063024224005], [-0.9441210233260096, -1.402298484643045, 1.7009416662608698, 0.44554184422349863, -3.9505356488914574], [-0.9357057614461759, -1.384600225371594, 1.3208396675645049, -0.17042556422712132, -4.004723757352259], [-1.004595023397307, -1.521815022015266, 1.5690729681412794, 0.4693615922828413, -3.9070751924445197], [-0.9058563810436743, -1.517142000944426, 1.496054941562156, -0.13802625815658545, -3.6524980815323227], [-0.9469580099382737, -1.5566480419741966, 1.5636593300062736, -0.27572643095159566, -3.522332506542284], [-0.7616815400569802, -1.5121895036489368, 1.7425230359643282, -0.2224788647235687, -3.714545188624533], [-0.9112236893562957, -0.9473156875971108, 1.530235089314616, -0.0009714045336144117, -3.953780567071047], [-0.6883147681750873, -0.9743076591480276, 1.4457171271654683, -0.04699054130331429, -3.736294021137956], [-0.8651156544545567, -1.380244698683662, 0.8613318851764711, 0.28348130750999206, -3.809292457979342], [-0.8651156544545567, -1.380244698683662, 0.8613318851764711, 0.28348130750999206, -3.809292457979342], [-0.8100486185434664, -1.5068678428394637, 1.9339504328613584, 0.26954088451288843, -3.9604279563092306], [-0.8237025828629796, -1.6573496829007872, 1.784623089508596, 0.24932502902267273, -4.0594596103630725], [-0.841826068259039, -1.1092475077183979, 1.1853032598838198, 0.2528962749395973, -3.860924230945021], [-0.5894625505087704, -1.2255590866307238, 1.3055118995858335, 0.002507458584325481, -3.71329853029507], [-0.521071481167763, -1.1161561462774654, 1.5105988836867812, -0.04698273632132676, -3.5610533585802386], [-0.40005441856608615, -1.1253247653189422, 1.4466466886232467, 0.46198805807026466, -3.454221053903072], [-0.20760129984045816, -0.900864839078253, 0.8806617490804092, 0.13573416575569267, -3.79052025798529], [-0.5910961178576732, -1.5242273336507381, 1.0402074648644741, -0.29641741937713795, -3.484252840182962], [-1.160510024441526, -1.4836284651969507, 1.0025560893420353, 0.07455542654207509, -3.930107401182455], [-0.8625846169319267, -1.5297315667849403, 1.2407477231162234, 0.5369175807323238, -3.8706566284619397], [-0.9107161144851011, -1.8195085574711243, 1.560963411687246, 0.12362768954998238, -3.5556083807498964], [-1.04605366658387, -1.604680693751911, 1.3764401073714927, 0.11578449678928851, -3.6425603394722383], [-0.986270416956646, -1.2062871380577724, 1.145742008408654, -0.12761424210075153, -3.919882067061418], [-0.8724495338414309, -1.9164327633405172, 1.8786150183071297, 0.18062653164739395, -3.6672025522161387], [-1.08282475289047, -1.3221552461997532, 1.513681071847282, 0.1805436173039461, -3.7032358251155286], [-0.5884463052564689, -1.7763353859413755, 1.3259307541746088, -0.1925672411137614, -3.9818546468781664], [-0.9036457911330791, -1.269622960428367, 1.2326214689181092, 0.1805995978455019, -3.9130817747264213], [-0.8527943426712548, -1.2829622523983446, 1.4748450985047845, 0.3969636385095962, -3.725936226897157], [-0.9826459754251209, -1.2942840681755405, 1.46409282755422, 0.36279067034323775, -3.7059351819042874], [-0.8554235099258012, -1.703537577875168, 0.515284617835986, 0.46842617360924266, -3.910366997619338], [-1.1980728567819927, -1.5227418042089638, 0.9982757519965249, 0.1923894853318205, -3.6946415881277774], [-0.9461484158247975, -1.2030959110976385, 1.9681052015850498, 0.30615401319892543, -3.6742205203620637], [-0.9732713796636981, -1.6980690906187663, 1.3003910147889544, -0.19985711652501723, -3.8989620310494026], [-0.5693631233420755, -0.9605324705129856, 1.2197124560163086, -0.27349601622873265, -3.498618630601442], [-0.9445174073923087, -1.2572647089503108, 2.218129828899936, 0.4775263933803556, -3.3406112085431228], [-0.8634755811192307, -1.1630135064856786, 2.429425503486242, 0.529070294267259, -3.701477400389476], [-0.5077935793587447, -1.3952811769669213, 2.7448161962420783, 1.0694326940514403, -3.7754408209584507], [-1.0173139120385883, -1.3195707196778055, 2.4986634823194973, 0.6084950542361512, -3.635625090140132], [-1.0624847406218696, -1.329752019667143, 2.0344757663494044, 0.5107471918927842, -3.751918315875728], [-0.7217645362303126, -1.871973599064762, 1.8739657085657118, 0.6833597935974736, -3.6488833115471393], [-0.8340135806762092, -1.856777817776883, 1.5645068548888081, 0.6622737600477908, -3.6677469233593447], [-1.2156269124425105, -1.3637679982279394, 1.4838512539357935, -0.00138290908742289, -3.9750311786224257], [-0.24491512552073655, -1.7231680658766426, 2.078640045200411, 1.1731813799132975, -3.568863864824323], [-0.8387793578136393, -0.8423504668023386, 1.3108214085815093, 0.2785854721438034, -3.99510312063644], [-1.108085511410867, -1.804025068140032, 1.4946371917423116, -0.06902950965504656, -3.4596571989746154], [-0.9098450282183245, -1.7304829338182028, 1.8677645953636293, -0.22260930143161178, -3.5092218008467837], [-1.090288368727536, -1.4014377894016214, 1.483810728179461, 0.20914949522790308, -4.1569838098245295], [-0.7768813271223369, -1.2758777230993534, 1.8774642265453858, 0.193033332213858, -3.716189395673517], [-0.19596987560288082, -1.2044816370103772, 0.7733805611245788, -0.3955152208277841, -3.6062041209287883], [-1.5143122921390044, -1.8285816645459858, 2.0788137127831243, 0.7093211290886055, -3.8427020954487126], [-0.7056743869539011, -1.301918428929268, 1.1685109000838114, 0.7222766468240982, -3.7802243001322253], [-0.9406648736268197, -1.5243641128604497, 1.2920682952822529, 0.2305720951517634, -3.654614478125984], [-0.6615622608455813, -1.2189046620634245, 1.805632737028133, -0.3763853199488566, -3.6219183529054684], [-1.208940219838118, -1.5892714086126951, 1.349213424070629, 0.9978280272400166, -3.6520585291523306], [-0.5733895999740206, -1.2416749497245831, 0.6817312659255448, -0.07004355165589643, -3.7406447164282524], [-1.178109928245766, -2.261687289437257, 0.43414724256288906, 0.5751317666329666, -3.618640526041901], [-0.9477535456908801, -2.3971479263139717, 0.2572563282473049, 0.008688262258897461, -3.9403202531854595], [-1.2052058940295638, -1.4094958709598147, 0.8236013961817794, 0.280033226448571, -3.5965474822071895], [-0.844057412661541, -1.2354901000544651, 1.6830122351102021, -0.11309964347505685, -3.356886244737869], [-0.8200642503479042, -1.4105893457384067, 1.0005789561234109, 0.28421883849170604, -3.6076790944474575], [-0.8351593038482831, -1.2952040758083214, 0.6028532408393705, -0.10749714111840944, -3.61393470275058], [-0.7180137529550872, -1.2599632871578355, 0.7694611671119646, 0.1053050252811409, -3.92207098550791], [-0.8281110243561609, -1.7090737677748247, 2.6087782208913053, 1.1923478160195629, -3.7392425463137355], [-0.7349555310604323, -1.3950650512094003, 2.502999904921257, 1.4541277211573977, -3.8157377684563345], [-1.0171031153609231, -1.4839376332887202, 1.2175197334976626, 0.44519348550758264, -4.146324621536926], [-0.5671361561582071, -1.2253225702042805, 1.7988459046077638, 0.694747386471859, -3.5966682607214557], [-0.47232324537572407, -0.7916227144704289, 1.566113483353075, 0.5531955024086322, -3.5709072087866263], [0.11020075168711554, -0.8447372027703373, 1.5428167482030546, 0.9816972769740674, -3.607082025319203], [-0.2019669350444125, -0.7119022829247815, 1.696088120706808, 0.34920812459238465, -3.346428397964849], [0.1325097600107028, -0.5474695721385989, 1.815667220197104, 0.30375550744536434, -3.5557574098582516], [-0.2030312975162255, -0.6274591086780809, 1.9051322337020633, 0.6114825257219332, -3.6022415313896063], [-0.14801862470258223, -0.9510019290155901, 1.9801476760300571, 0.4936203602472324, -3.7321423040474673], [-1.1151293671244977, -1.73107990907057, 0.8065738305590541, -0.23768013099222826, -3.730139088773361], [-0.772806008666067, -1.0502265679362945, 1.21407816232584, 0.548867238560333, -3.895609907226087], [-0.6725794202014858, -1.1250019136788374, 1.15319904417957, 0.5697700116267357, -3.9206145674241752], [-0.8790686122756065, -1.5829661824685692, 1.7556857259302958, -0.08287558961805855, -3.8573207574622117], [-0.8302130712168617, -1.7844319318756752, 1.6864617069298473, -0.12165382294260005, -3.9315248289024862], [-0.5635789433683387, -0.9227647288950354, 1.6317686184791058, 0.2988800991051227, -3.8837522475464032], [-0.17651990878941878, -1.409871721554243, 2.060305944095198, 0.844456108717456, -3.303738606889564], [-1.416625685882139, -1.3264468861509235, 1.4577081619373022, -0.15977239106940225, -4.019027656060126], [-0.8703098028952306, -1.9176075172593066, 1.8313088713377639, -0.1393073965786355, -3.7751704353062134], [-0.7766453082921483, -0.9970455551760776, 1.9439007271892188, 0.4292682673240943, -3.8587584478563555], [-1.1397402185122105, -1.719742308531609, 0.4212652974395308, -0.13740237909337058, -3.6626136216379437], [-0.9743319798444843, -2.022660659597385, 0.7010923923753652, 0.4779987454970075, -3.6165539724816544], [-1.7693249382080176, -2.137555829792338, 0.25937700354341425, 0.23973895270903156, -4.00864985374043], [-1.3587644250740933, -2.3131536931219943, 0.3084255573555024, -0.06698887160624045, -3.6055606005644725], [-1.371474824408283, -2.3767559342775515, 0.29420625410083234, 0.15152617448711206, -3.523346421857727], [-1.0847812501339125, -1.6920733510698256, 0.8039445125598463, 0.3690236529382025, -3.6856059846488], [-1.1914362239824872, -1.6701608195914168, 0.8224627877290684, -0.19345399587285955, -3.497593223269189], [-0.7862487003170382, -1.0962938147315096, 1.538290656757614, 0.29225482655339785, -3.7995959126452505], [-1.0311409935578224, -1.8109725735825688, 1.7755901638392038, 0.45314709084280996, -3.8200145733153805], [-1.0355683127867625, -1.6263279314018972, 1.8565104172650548, 0.49117897233330254, -3.3164301580384894], [-0.9040195084717799, -1.4876818923275765, 1.7411314622572678, 0.004013971793973434, -4.246808715515528], [-0.9876234297527648, -1.2585272551989608, 1.5674758317531, 0.16881151867807298, -4.053687080257145], [-0.806268040154845, -1.7996697429267439, 1.6803756590031007, 0.20422996232522236, -3.4488086092255736], [-0.8790637287318359, -1.1999643385865588, 1.2085731263964692, -0.02459717081669366, -3.8462741162646834], [-1.0050894879245333, -1.236163256513312, 1.286937240758188, -0.04368179266059186, -3.5926352348298227], [-0.8195744233876208, -0.9784971292501923, 1.2503593004352198, 0.0832044660284961, -3.714816016362085], [-0.6876486778019162, -1.287647670891629, 1.3358070734138394, -0.1208002174802362, -3.7640538436248194], [-0.7244852147122586, -1.222401561348884, 1.3696173062968546, 0.1318448011522977, -3.7912406323876464], [-0.5285504082006133, -1.0506153157399056, 1.1923962421824466, 0.35178148259314734, -3.737049664821464], [-1.0642906864775508, -1.813415906945037, 1.961293388584881, 0.005843344266890059, -3.762724073088727], [-1.0836489523996848, -1.3890189589069004, 1.7985532428995195, 0.09229214390848194, -3.6901023939378823], [-0.7503269833705764, -1.6516978424946098, 2.2050204331698895, 0.728641473773141, -3.9128619877156012], [-0.942272522037622, -1.4822574276202851, 1.9339836975984417, 0.659104973815317, -4.035466440841527], [-0.4204821704919269, -1.0756730016376133, 1.496359785868757, -0.25019223019468767, -3.71284736691964], [-0.7928513483125192, -1.5991293290303676, 1.0798461644992239, 0.38997477894433674, -3.6644444397390936], [-0.1483017817550688, -0.8865152687258716, 2.053852790806374, 0.5116684862704184, -3.475477872304012], [-0.9045664676269907, -1.5782584044130714, 0.9722981474425364, 0.17367991814754474, -3.8872819496715914], [-1.005720621453961, -1.4423771178527658, 1.7526831536332457, 0.5216670599264267, -3.7368608333959656], [-1.004468720448745, -1.8435899790874473, 1.8945979995054314, 0.23672020713028855, -3.825161862771561], [-1.0286050467551815, -1.7560829996134733, 1.900806916453572, 0.06510241304752995, -3.875907962374503], [-0.3578543409383099, -1.201705015335041, 1.779878124279635, 0.566589735841791, -3.6121163760721284], [-0.32142533413293234, -1.319583628892856, 1.9085023415030984, 0.7088233447720252, -3.630672221825173], [-1.0767288177123466, -1.3929335187524414, 1.5549134590337548, 0.35209599804016684, -3.526746690425831], [-0.3815192306978845, -1.3849839448311363, 1.5652170911723793, 0.2568712729358603, -3.7772600277939463], [-0.8732850657951516, -1.7189030657708795, 1.7616749186363687, 0.305717253745785, -3.539856077713035], [-1.1154351184646127, -1.6239014867435921, 1.7114831138099138, 0.264566242566677, -3.868197396355186], [-0.8136562166293971, -1.3407733097540016, 0.6622309053827297, -0.044296578606560194, -3.7719257797178467], [-0.9379679093981543, -1.3282052193008216, 0.11327057704419163, 0.09239261468954546, -4.0447475079247175], [-0.5435183104452436, -1.9156095826463457, 2.1496283861886694, 0.17013203131353424, -3.851593518905023], [-1.1784289477964904, -1.1717183684394121, 0.8466697365867936, -0.12411553475790263, -3.6432286989604674], [-1.061127836909596, -1.4520922878624636, 0.815981089001464, -0.1800926141728914, -3.7857433492120607], [-1.05295657236083, -1.5743883426638288, 0.7475330849836511, -0.3754397937087065, -3.8670728279045625], [-0.7963884180860408, -0.9879371888099493, 1.771141950278163, 1.174240410035918, -3.698161490791604], [-1.0128179882842696, -1.5871069660055726, 1.4473291418805065, -0.45134849708614627, -3.8511969430411903], [-0.6615101274467317, -1.333967096919184, 1.1797716388928479, 0.7038259955753086, -3.8647684177832984], [-1.1511583573071984, -1.4365472773069488, 1.3376736247936531, 0.7929771304615791, -3.7983655312589852], [-0.6576933613653502, -1.352084480526758, 1.3387203211133958, 0.5309664412706903, -3.8395228194019198], [-0.14784441665351147, -1.4342734725381516, 1.1857711387842502, 0.42736241174326406, -3.2609774994411342], [-0.1509227717028147, -0.8302528773339952, 1.800278881390246, 0.2505252727702479, -3.2940057103228604], [-1.1149002245643582, -1.757003510826188, 1.5704963205916225, 0.27206661186018866, -4.120720760004448], [-0.9960779084249035, -1.3574168625513334, 1.3305458091796776, 0.26896357957893563, -3.7157504998533586], [-0.946889565488598, -1.3184281718679762, 1.2420290682262363, 0.29044718395423536, -3.922921933906398], [-0.966284141464582, -1.6843423770291968, 1.7933947379733906, -0.2268952789811737, -3.6943715309613445], [-0.896458185562823, -1.4358777787066246, 1.1713947056176546, 0.07534860053759526, -3.7889360921005], [-0.697636033169315, -1.3377450895580574, 1.726033194678522, 0.11601582399211151, -3.6991898159691883], [-0.9819090749235967, -1.5303899527399265, 1.0317949203033006, 0.019386868240893983, -3.922935302485303], [-0.9483860174591383, -1.3769238374244273, 1.8948679807405269, 0.5070810644554319, -3.8956636439909724], [-0.7783718829745213, -1.5220589019268473, 1.3988991135842177, -0.28287193308538977, -3.7210965011159516], [-0.7918203370857129, -1.2926259485137779, 1.2081535876716853, -0.3490776653205282, -3.605590147961463], [-0.6974694479371305, -1.0827685578938335, 1.29090224034015, -0.014825369404298266, -3.801507549761368], [-1.1420678441685206, -1.921827643387482, 1.8524723704231365, 0.01559367970423374, -3.8050836398819037], [-1.3405929126715697, -2.0501871250264156, 1.6762469028241018, 0.10462911368409228, -3.8853712777643445], [-1.3140604092722112, -1.7250679982436348, 1.6036118317225767, -0.03238340177957638, -3.8246445780570437], [-0.9055372012855214, -1.408774322825432, 1.1845149699818092, -0.06278060403739169, -3.959695179099474], [-0.9909813899536333, -1.4494280583578498, 1.756443853594036, 0.24267913102478672, -3.953389845768704], [-1.1954053289060367, -1.6364059203511694, 1.7419171161031843, 0.09143768468670746, -3.9412347085994517], [-0.37177524543516816, -1.0805765700680936, 1.9102579805001192, 0.8475979141148818, -3.4302310843909813], [-0.32324439622397816, -1.0424874520947833, 1.8594405071184628, 0.8572268012947462, -3.4415675100982868], [-0.40691652725987015, -0.7157641184535908, 2.4127575356548263, 0.9800806602204712, -3.8279359570694718], [-0.5130932929173267, -1.3202085477245173, 1.5140882754974998, 1.0871285152344912, -3.0945590808261145], [-0.610678523849776, -1.7862266838716827, 1.987304178525154, 0.7868333098464004, -3.373117879760395], [-0.9095227122759098, -1.8137185837636298, 2.075457529001438, 0.9820097296800632, -3.590503453749759], [-1.0829690072378744, -1.5554521368358045, 1.9518705077305867, 1.1045423783582864, -3.3116160826358145], [-0.7881588264293593, -1.140911014270212, 2.1224175287518174, 0.31053327908001704, -3.2110547498243687], [-1.0357129744549318, -1.7041282630195043, 1.4558898219791574, 0.5881025527524645, -4.3296859836995285], [-1.0180626864180777, -1.529621382607839, 1.721851728698383, 0.6391291893380757, -3.797573996391728], [-0.9158201422446027, -1.5107392144993714, 1.510133649034141, 0.12356919094821534, -3.887206048153139], [-1.0337343086360202, -1.6370865371620176, 1.5602515339576024, 0.09466554175130752, -3.6470202885741876], [-0.9083047737070433, -1.5048404501953416, 1.6080091162199317, -0.46820858631483675, -4.118707132209452], [-0.12082524889821844, -0.46030992824857353, 1.5203772879544701, 1.0308363319630454, -3.6416204455351466], [-0.20654777421920087, -0.8331334122001911, 1.35089238931239, 0.936716150440362, -3.434416222769853], [-0.2899405855176881, -1.2298611743674261, 1.3819225010639014, 1.269896161788667, -3.6983313091887977], [-0.28869216281478766, -1.3941129830310564, 1.3930996386805605, 1.2300969230267398, -3.612451638986683], [-0.30387987583267057, -0.9624535178450537, 2.4180844422916214, 0.7195061625758534, -3.5400233387973468], [-0.5476188783479075, -1.5354350724552448, 1.5240615563160818, 0.8562317543965741, -3.6063793417032857], [-1.1131778445833234, -1.3293829981708298, 2.186546626239774, 0.8843065247478703, -3.805823869486298], [-0.8380659815711152, -1.3630179215006628, 1.9318208987221803, 0.15107756758326607, -3.501161028502849], [-0.9260610256967539, -1.4594311732413559, 1.7274087453611866, -0.059821540657842176, -4.017172330524257], [-0.7030790306328302, -0.8084419180958662, 2.2086643503191565, 0.20158095697978548, -3.524253838065904], [-0.7280777429219109, -0.7359120931937434, 2.440666500400251, 0.13251375302550447, -3.4547463110415997], [-1.0113735276379094, -1.3396819353299023, 2.484155479564469, 0.6628487220230399, -4.034365805598393], [-0.8093461758543528, -1.268303818957702, 2.0924645362505134, 0.7046164211590561, -3.6509185598968608], [-0.8866736350726678, -1.3952464083264464, 2.3231129518965576, 0.663536836426939, -3.7503691435077586], [-0.9770274537812412, -1.4438667257946147, 2.348347626342202, 0.2908391035629246, -3.8663353850449718], [-1.1410596537556061, -1.4281870462880475, 2.324007573470438, 0.37466228458711565, -3.9907932696454442], [0.1972645978137072, 0.16413027012474762, 1.699128129295089, 0.1787545443840747, -3.619794519941561], [-1.354736532219704, -1.4361806790017717, 1.9888747659510684, 0.22775363411183344, -4.038385089216426], [-1.3096133087781614, -1.6285863799172147, 1.7548648964428684, 0.6265876739895271, -3.7075608379164477], [-1.1940459206609804, -1.765173310467459, 1.7643955489658663, 0.436674690423274, -3.896382113460441], [-0.9001701045258745, -1.4639581650496272, 1.7345995219319983, 0.12030930342862137, -3.8059849875841847], [-1.1454492535353256, -1.640316226527591, 1.375040248055724, 0.18258135733329217, -3.797571060844493], [-0.3819162980917217, -1.075563760207047, 1.4359598725157037, 0.005173457927254349, -3.5927230058819686], [-1.3940076243331656, -1.7169847036891055, 1.4206585269231176, 0.06293162365503163, -3.7291981123600024], [-0.36912931063714405, -1.34445727137652, 1.766375964154446, 0.3695505653018365, -3.3961721146946005], [-0.32157648389391313, -0.9750289048384415, 1.728654059583597, 0.5286722977957776, -3.566258601994784], [-0.4107460718661083, -0.9581142160481401, 1.7737523945077884, 0.71207728993762, -3.756585364703908], [-1.0099376146908925, -1.0505879214635763, 1.5182421466968805, 0.26741271255554483, -3.8384053175131676], [-0.8646124271922643, -1.2703508809063984, 1.8168444247916875, 0.3339797754388188, -3.719887095015788], [-1.070362895627735, -1.2945807484050627, 1.640328320343881, 0.1822185521552084, -3.6804442793039907], [-1.4680942179073044, -1.4947503295416522, 1.765811271997956, 0.19348317294800652, -3.56618964714263], [-0.7682612584580848, -1.8579826448356158, 1.7576419759704105, 0.41739053417129085, -3.874152441695524], [-0.9858642486182647, -1.7239353970925526, 1.6407838001020716, 0.6308346905543283, -3.695082716875861], [-0.734029965875899, -0.9836669213149678, 1.615265012015024, 0.48967974392252034, -3.833420726945978], [-1.0269404061247636, -1.6351252528672022, 1.4068458104027017, -0.24003210793514765, -3.822037097177993], [-0.8898047517022905, -1.4516495078214569, 1.605337952858894, 0.9971405959169858, -3.8612900160188444], [-0.8583710206163085, -1.367949888178554, 1.5081541638594085, 0.07419850806671141, -3.7626196639129112], [-0.9679333292188975, -1.564490031170667, 1.460330387618297, 0.0818487891647079, -3.9349016573165576], [-0.9663796084888197, -1.4319321920504913, 1.7207078552432207, 0.46624408283734653, -3.7855623598742874], [-0.9907915737551394, -1.415191838776248, 2.0107360954183364, 0.4864643644742339, -4.060156220036291], [-0.55133873895148, -1.4697689593530636, 0.9362225087683234, -0.21838381418033012, -3.5619879614031955], [-0.9078298895720289, -1.8557052157457847, 0.8920392825557897, 0.5198651921860031, -3.6463730619181787], [-0.7216969948665236, -1.7813471746832592, 1.2296327105273699, 0.22045496709023885, -3.4901585961496178], [-0.6338528475778918, -1.7688031459621, 0.9460090213408683, 0.44704180037164243, -3.965045383928508]], NamedTuple[(n_steps = 3, is_accept = true, acceptance_rate = 0.14220348780411535, log_density = -6.680340640302308, hamiltonian_energy = 17.83344994491821, hamiltonian_energy_error = 0.8518839457905791, max_hamiltonian_energy_error = 659.2544254684409, tree_depth = 2, numerical_error = false, step_size = 0.4, nom_step_size = 0.4, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = -6.680340640302308, hamiltonian_energy = 9.307322681396037, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 3406.008906726259, tree_depth = 0, numerical_error = true, step_size = 1.2096132768103407, nom_step_size = 1.2096132768103407, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 7.829398847786953, hamiltonian_energy = 7.613813238031357, hamiltonian_energy_error = -2.2593958218710526, max_hamiltonian_energy_error = -3.009146558071045, tree_depth = 2, numerical_error = false, step_size = 0.12876516369612362, nom_step_size = 0.12876516369612362, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.657537302624794, hamiltonian_energy = -5.527473852478584, hamiltonian_energy_error = -1.1701047432262097, max_hamiltonian_energy_error = -1.3823806675801213, tree_depth = 2, numerical_error = false, step_size = 0.1401071359461518, nom_step_size = 0.1401071359461518, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.35834038343785385, log_density = 8.042004673512455, hamiltonian_energy = -3.7927506122402566, hamiltonian_energy_error = 0.339425247382116, max_hamiltonian_energy_error = 7.652131474231737, tree_depth = 2, numerical_error = false, step_size = 0.19476114123002952, nom_step_size = 0.19476114123002952, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.998502111300392, log_density = 8.530687229423025, hamiltonian_energy = -6.565064913307639, hamiltonian_energy_error = 0.009645559950763882, max_hamiltonian_energy_error = -0.012919187427232082, tree_depth = 4, numerical_error = false, step_size = 0.04576571343720331, nom_step_size = 0.04576571343720331, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.9916344281860284, log_density = 9.571067684362818, hamiltonian_energy = -8.311265015975035, hamiltonian_energy_error = -0.0496457835457651, max_hamiltonian_energy_error = -0.09447904468495238, tree_depth = 2, numerical_error = false, step_size = 0.07449319195892978, nom_step_size = 0.07449319195892978, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.988391077070862, log_density = 11.099810783029673, hamiltonian_energy = -8.650766346661857, hamiltonian_energy_error = -0.0651017558861362, max_hamiltonian_energy_error = -0.1350291905343326, tree_depth = 3, numerical_error = false, step_size = 0.12661203548502356, nom_step_size = 0.12661203548502356, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.8551466253978993, log_density = 9.157973795719496, hamiltonian_energy = -8.665057307729864, hamiltonian_energy_error = 0.03757392737764498, max_hamiltonian_energy_error = 0.5069719548981251, tree_depth = 2, numerical_error = false, step_size = 0.22137332880667834, nom_step_size = 0.22137332880667834, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.04568344093595199, log_density = 9.157973795719496, hamiltonian_energy = -5.926438659180221, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 8.055668059407044, tree_depth = 3, numerical_error = false, step_size = 0.25982324593763423, nom_step_size = 0.25982324593763423, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9999922752164322, log_density = 9.543663869998657, hamiltonian_energy = -8.79523498082455, hamiltonian_energy_error = -0.0021255756271472137, max_hamiltonian_energy_error = -0.0026866730753596357, tree_depth = 5, numerical_error = false, step_size = 0.02382769399557348, nom_step_size = 0.02382769399557348, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9407059859609608, log_density = 9.884946741504592, hamiltonian_energy = -6.870858762894824, hamiltonian_energy_error = 0.04366848350307073, max_hamiltonian_energy_error = 0.08979516363045992, tree_depth = 5, numerical_error = false, step_size = 0.045077087838524176, nom_step_size = 0.045077087838524176, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9985868931110021, log_density = 10.509927816679777, hamiltonian_energy = -8.90414179189366, hamiltonian_energy_error = -0.02102308097440364, max_hamiltonian_energy_error = -0.07236056621733766, tree_depth = 4, numerical_error = false, step_size = 0.07116377862156135, nom_step_size = 0.07116377862156135, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.878177543862959, log_density = 9.683834648666089, hamiltonian_energy = -7.356524549692875, hamiltonian_energy_error = 0.03900918691582689, max_hamiltonian_energy_error = 0.3464341150826966, tree_depth = 3, numerical_error = false, step_size = 0.1350191771051831, nom_step_size = 0.1350191771051831, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.8828249853174374, log_density = 9.2432963806209, hamiltonian_energy = -7.203565834814751, hamiltonian_energy_error = -1.761930939151502, max_hamiltonian_energy_error = -1.761930939151502, tree_depth = 2, numerical_error = false, step_size = 0.1755253418286854, nom_step_size = 0.1755253418286854, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.4052549318494472, log_density = 9.416955736739496, hamiltonian_energy = -6.8579346590893895, hamiltonian_energy_error = 0.0993237488165688, max_hamiltonian_energy_error = 2.1656816648857706, tree_depth = 3, numerical_error = false, step_size = 0.231393616640969, nom_step_size = 0.231393616640969, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9865073783813292, log_density = 7.850413808048548, hamiltonian_energy = -6.765560867139201, hamiltonian_energy_error = 0.017877600651497794, max_hamiltonian_energy_error = 0.03253065681238265, tree_depth = 4, numerical_error = false, step_size = 0.07005372650694179, nom_step_size = 0.07005372650694179, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9997001945077529, log_density = 9.032816358468754, hamiltonian_energy = -7.651206289436325, hamiltonian_energy_error = -0.022120987004742076, max_hamiltonian_energy_error = -0.3019112104919648, tree_depth = 4, numerical_error = false, step_size = 0.12758947053349376, nom_step_size = 0.12758947053349376, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.6793553892433623, log_density = 8.803106190728641, hamiltonian_energy = -7.781784580583929, hamiltonian_energy_error = 0.17547051463344587, max_hamiltonian_energy_error = 2.634608720955532, tree_depth = 2, numerical_error = false, step_size = 0.24002175762067499, nom_step_size = 0.24002175762067499, is_adapt = true), (n_steps = 11, is_accept = true, acceptance_rate = 0.8947398668425016, log_density = 9.78585051596266, hamiltonian_energy = -8.151809363443132, hamiltonian_energy_error = -0.08620016158731225, max_hamiltonian_energy_error = 0.4331786836785527, tree_depth = 3, numerical_error = false, step_size = 0.17082389179229734, nom_step_size = 0.17082389179229734, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9658004508698398, log_density = 7.839942896185118, hamiltonian_energy = -6.912844846431136, hamiltonian_energy_error = 0.104665547123175, max_hamiltonian_energy_error = 0.104665547123175, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9744686691056081, log_density = 6.372854408855437, hamiltonian_energy = -5.215764499967756, hamiltonian_energy_error = 0.10063099094045569, max_hamiltonian_energy_error = -0.15062613779554468, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6768084789137883, log_density = 8.966534862025798, hamiltonian_energy = -3.5048493373439698, hamiltonian_energy_error = -0.08264066070112719, max_hamiltonian_energy_error = 1.1651891951496465, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7831990521722485, log_density = 8.18544542306321, hamiltonian_energy = -4.845086950612251, hamiltonian_energy_error = 0.26708179477239913, max_hamiltonian_energy_error = 0.4283293217974373, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9716668102657666, log_density = 10.719961803580247, hamiltonian_energy = -8.04688628576725, hamiltonian_energy_error = -0.9679716232390057, max_hamiltonian_energy_error = -0.9679716232390057, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6368766267344051, log_density = 10.657012189594724, hamiltonian_energy = -6.186094798498675, hamiltonian_energy_error = 0.17753963639547, max_hamiltonian_energy_error = 0.9743442989868587, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.479465941290292, log_density = 5.424179986545912, hamiltonian_energy = -2.8937645586743717, hamiltonian_energy_error = 0.8847350043000972, max_hamiltonian_energy_error = 0.9430109420822146, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.974476573448518, log_density = 9.586823972314033, hamiltonian_energy = -4.1961155548737405, hamiltonian_energy_error = -1.4503637454612939, max_hamiltonian_energy_error = -2.077214891291592, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9443733027531706, log_density = 11.327359561689699, hamiltonian_energy = -7.698073692911599, hamiltonian_energy_error = -0.08692788560453923, max_hamiltonian_energy_error = 0.14664670096011534, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9083572821503128, log_density = 10.912296083797425, hamiltonian_energy = -9.659277907723036, hamiltonian_energy_error = 0.10062140409369036, max_hamiltonian_energy_error = 0.1489142247874522, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9808685717734444, log_density = 10.984817266892875, hamiltonian_energy = -9.703900025261458, hamiltonian_energy_error = -0.10266979722009495, max_hamiltonian_energy_error = -0.10266979722009495, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7336520472326242, log_density = 10.624160672080095, hamiltonian_energy = -8.413041384750649, hamiltonian_energy_error = 0.2447801918291912, max_hamiltonian_energy_error = 0.42617770119807474, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6026946908065632, log_density = 8.610665498928121, hamiltonian_energy = -5.243979893231838, hamiltonian_energy_error = 0.3651325056453478, max_hamiltonian_energy_error = 1.1897794875226326, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 10.412564748619031, hamiltonian_energy = -8.005519888976435, hamiltonian_energy_error = -0.315684315304507, max_hamiltonian_energy_error = -0.35533503636622754, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8799677947716388, log_density = 9.865633552282633, hamiltonian_energy = -8.672534113008846, hamiltonian_energy_error = 0.14238034232363006, max_hamiltonian_energy_error = 0.2579782216150672, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9497609618625061, log_density = 8.831056675810366, hamiltonian_energy = -5.913082957397625, hamiltonian_energy_error = -0.32067259097417633, max_hamiltonian_energy_error = -0.40732028770482387, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9722649195390195, log_density = 9.402522954646724, hamiltonian_energy = -6.567900381458083, hamiltonian_energy_error = 0.01313898911635114, max_hamiltonian_energy_error = 0.07821503681581543, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7829180306359016, log_density = 9.616732685461878, hamiltonian_energy = -5.4863257318967245, hamiltonian_energy_error = 0.10581634717459121, max_hamiltonian_energy_error = 0.5097393287469796, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6162315981398885, log_density = 7.270771413947534, hamiltonian_energy = -3.3504599144617284, hamiltonian_energy_error = 1.0515320134551924, max_hamiltonian_energy_error = 1.0515320134551924, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9586949369597292, log_density = 6.178291752443276, hamiltonian_energy = -4.800293675356442, hamiltonian_energy_error = 0.13229237665998728, max_hamiltonian_energy_error = -0.7821528644797864, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9803228411367372, log_density = 9.609122686994574, hamiltonian_energy = -3.753539394058567, hamiltonian_energy_error = -0.426623516625082, max_hamiltonian_energy_error = -1.305892021788893, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8755857742349237, log_density = 8.159153187406343, hamiltonian_energy = -6.792554859936801, hamiltonian_energy_error = 0.140536298066686, max_hamiltonian_energy_error = 0.29165364751359313, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9007628315363841, log_density = 11.771183520703868, hamiltonian_energy = -6.287825638687602, hamiltonian_energy_error = -0.6733567589350171, max_hamiltonian_energy_error = -0.6733567589350171, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6389636440634797, log_density = 10.079958355517654, hamiltonian_energy = -8.276018388285863, hamiltonian_energy_error = 0.4003758458646729, max_hamiltonian_energy_error = 0.4976441420973483, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9642145564774824, log_density = 11.063779634298992, hamiltonian_energy = -9.093251165587603, hamiltonian_energy_error = -0.29907915470441004, max_hamiltonian_energy_error = -0.29907915470441004, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9866741386830731, log_density = 10.627123719766391, hamiltonian_energy = -10.052029464135149, hamiltonian_energy_error = 0.016638858322128414, max_hamiltonian_energy_error = -0.16388531815170815, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9863249138060514, log_density = 10.745988088302594, hamiltonian_energy = -8.813621522430795, hamiltonian_energy_error = -0.07602509219973363, max_hamiltonian_energy_error = -0.08494135225279997, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.958099847010386, log_density = 11.136733338917798, hamiltonian_energy = -8.686907227331083, hamiltonian_energy_error = 0.0071494123108646335, max_hamiltonian_energy_error = 0.10970814188994815, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8493526279813944, log_density = 10.041465940976043, hamiltonian_energy = -8.09520241547817, hamiltonian_energy_error = -0.023150803983778445, max_hamiltonian_energy_error = 0.43236833620775883, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6678173873689703, log_density = 9.319005951247096, hamiltonian_energy = -6.835114425857994, hamiltonian_energy_error = 0.42492223049298516, max_hamiltonian_energy_error = 0.7369443518624061, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9928888918664761, log_density = 10.013092710849998, hamiltonian_energy = -7.059181465037607, hamiltonian_energy_error = -0.1811502332447521, max_hamiltonian_energy_error = -0.46551341059279494, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9519219769691545, log_density = 7.645993303924353, hamiltonian_energy = -6.958381743513719, hamiltonian_energy_error = 0.2792570181226335, max_hamiltonian_energy_error = -0.3112798845466376, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8923658181834185, log_density = 9.638334251333191, hamiltonian_energy = -1.8840876735703977, hamiltonian_energy_error = -0.22422033398240337, max_hamiltonian_energy_error = 0.340771126939845, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9797288145068326, log_density = 9.513947863460327, hamiltonian_energy = -6.947893799051217, hamiltonian_energy_error = -0.05394718554513922, max_hamiltonian_energy_error = -0.1357830762622001, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8012291502678254, log_density = 10.14416887887043, hamiltonian_energy = -7.740249504618237, hamiltonian_energy_error = 0.21053565235079486, max_hamiltonian_energy_error = 0.4211990892778479, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9673123833297514, log_density = 9.793910977152663, hamiltonian_energy = -8.277719725169572, hamiltonian_energy_error = -0.022468346198298406, max_hamiltonian_energy_error = -0.28060311085850387, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9543667963144818, log_density = 9.369968999093842, hamiltonian_energy = -5.6544365882936765, hamiltonian_energy_error = -0.03835078163842187, max_hamiltonian_energy_error = 0.13566252029647252, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9606255511769864, log_density = 10.551061441513212, hamiltonian_energy = -7.763306272191169, hamiltonian_energy_error = -0.0879501306581707, max_hamiltonian_energy_error = 0.24307948146661218, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.71594568319969, log_density = 4.995245646392146, hamiltonian_energy = -2.77176560055956, hamiltonian_energy_error = 0.17393239793151904, max_hamiltonian_energy_error = 0.7981149785710917, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9857248019911137, log_density = 9.688895313789521, hamiltonian_energy = -0.9153785434228787, hamiltonian_energy_error = -0.4752864528344052, max_hamiltonian_energy_error = -0.4930173505131883, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.17925958480604, hamiltonian_energy = -9.092808357897997, hamiltonian_energy_error = -0.01553074374068153, max_hamiltonian_energy_error = -0.17163364958301308, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8971532410106452, log_density = 9.285548323752016, hamiltonian_energy = -7.590792904314002, hamiltonian_energy_error = 0.17446847840422208, max_hamiltonian_energy_error = 0.212423279189224, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9623879202246072, log_density = 9.631259075498203, hamiltonian_energy = -6.682711516172357, hamiltonian_energy_error = -0.09543658698425173, max_hamiltonian_energy_error = -0.2360283434638042, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.972575074416239, log_density = 8.065604937057678, hamiltonian_energy = -7.3644396501418825, hamiltonian_energy_error = 0.2529694408664831, max_hamiltonian_energy_error = -0.41094730239638544, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 6.8426111027724374, hamiltonian_energy = -5.664999279689916, hamiltonian_energy_error = -0.1276546192659822, max_hamiltonian_energy_error = -0.7945315997072706, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9171138675769799, log_density = 9.300718340971578, hamiltonian_energy = -3.0771338822578, hamiltonian_energy_error = -0.39423589578343066, max_hamiltonian_energy_error = -0.39423589578343066, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9279686745582036, log_density = 8.651681489353507, hamiltonian_energy = -6.901960263972093, hamiltonian_energy_error = -0.011568588479357267, max_hamiltonian_energy_error = 0.13812194172854664, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7038781210953616, log_density = 9.37715362080979, hamiltonian_energy = -4.788896123295309, hamiltonian_energy_error = 0.11227973323908103, max_hamiltonian_energy_error = 0.6455727823330921, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9579390457377526, log_density = 11.413398799027537, hamiltonian_energy = -7.8509010760965054, hamiltonian_energy_error = -0.03772257054807504, max_hamiltonian_energy_error = -0.2588321192551444, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9022183433296034, log_density = 11.751409230261384, hamiltonian_energy = -8.186229893203118, hamiltonian_energy_error = -0.03833264283180249, max_hamiltonian_energy_error = 0.20642086676371463, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9663384862402978, log_density = 11.206686736234253, hamiltonian_energy = -10.97980061424897, hamiltonian_energy_error = 0.0645445860124898, max_hamiltonian_energy_error = 0.0645445860124898, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.885600471534319, log_density = 10.356849169631094, hamiltonian_energy = -9.282095134475444, hamiltonian_energy_error = 0.17639492691513503, max_hamiltonian_energy_error = 0.19797316002823884, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.5779144952057739, log_density = 10.356849169631094, hamiltonian_energy = -5.258017055638604, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 0.6055228622943458, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9920496156332936, log_density = 9.94408956597795, hamiltonian_energy = -9.145084872868102, hamiltonian_energy_error = -0.041784047168910377, max_hamiltonian_energy_error = -0.22555421553473742, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9866124670486004, log_density = 8.725253894865805, hamiltonian_energy = -7.303309303314037, hamiltonian_energy_error = 0.06280720090581138, max_hamiltonian_energy_error = -0.32808788746855644, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 9.945926456894094, hamiltonian_energy = -6.456880007300026, hamiltonian_energy_error = -0.23229927844548737, max_hamiltonian_energy_error = -0.45731550790788944, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.509153883436061, log_density = 7.873160864540452, hamiltonian_energy = -4.266787624021922, hamiltonian_energy_error = 1.1856387942546958, max_hamiltonian_energy_error = 1.1856387942546958, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9616467133834583, log_density = 5.935165123737729, hamiltonian_energy = -4.226531540011097, hamiltonian_energy_error = -0.08177736622030007, max_hamiltonian_energy_error = -0.7954524586604848, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9021079270546228, log_density = 6.400302214739163, hamiltonian_energy = -1.9472163538411191, hamiltonian_energy_error = -0.07774948194998732, max_hamiltonian_energy_error = -0.5817978115557487, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9876190224604694, log_density = 9.760372739828394, hamiltonian_energy = -4.881956551450991, hamiltonian_energy_error = -0.1763383487492618, max_hamiltonian_energy_error = -0.2738346153947262, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9855734611188873, log_density = 10.034757250049942, hamiltonian_energy = -8.247501861835916, hamiltonian_energy_error = -0.11302843376290816, max_hamiltonian_energy_error = -0.11302843376290816, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7225460753898245, log_density = 9.2592707183517, hamiltonian_energy = -8.244017491769842, hamiltonian_energy_error = 0.3932867218786722, max_hamiltonian_energy_error = 0.4865450188793634, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6371144362284765, log_density = 4.993385811303851, hamiltonian_energy = -2.461202770839596, hamiltonian_energy_error = 0.4870934295916314, max_hamiltonian_energy_error = 0.7867397890299372, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 4.204891478696581, hamiltonian_energy = -2.1944235976562143, hamiltonian_energy_error = -0.03557087760986821, max_hamiltonian_energy_error = -1.0926607156284462, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9540810539436296, log_density = 11.137818810691218, hamiltonian_energy = -3.2316056507657533, hamiltonian_energy_error = -1.0180392643377965, max_hamiltonian_energy_error = -1.0180392643377965, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9963505064949937, log_density = 11.945258052355035, hamiltonian_energy = -11.027723430287825, hamiltonian_energy_error = -0.15541991232240981, max_hamiltonian_energy_error = -0.15541991232240981, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.900463761662364, log_density = 11.265069609964259, hamiltonian_energy = -10.826064141535053, hamiltonian_energy_error = 0.07421096684685224, max_hamiltonian_energy_error = 0.14074629430654895, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.962301706432003, log_density = 10.538899831077776, hamiltonian_energy = -8.98087015829415, hamiltonian_energy_error = -0.008603121052475515, max_hamiltonian_energy_error = 0.11092315403217867, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8349353600375973, log_density = 10.807927054390685, hamiltonian_energy = -8.129751856639514, hamiltonian_energy_error = -0.0025071170969326317, max_hamiltonian_energy_error = 0.44405912686030735, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8320638185179257, log_density = 10.794391830070271, hamiltonian_energy = -4.501421428012206, hamiltonian_energy_error = 0.13870621331014288, max_hamiltonian_energy_error = 0.3645215127431376, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9546586792571318, log_density = 11.521620674838875, hamiltonian_energy = -10.083128450780778, hamiltonian_energy_error = 0.030453174756441825, max_hamiltonian_energy_error = 0.093763959650909, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7927192425329783, log_density = 10.910859257829722, hamiltonian_energy = -9.623073102183678, hamiltonian_energy_error = 0.2220018376748456, max_hamiltonian_energy_error = 0.39681068477619874, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8249274348175171, log_density = 11.25435220083492, hamiltonian_energy = -8.807648188571983, hamiltonian_energy_error = 0.051467727457970014, max_hamiltonian_energy_error = 0.5772374602593757, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7418561946594789, log_density = 8.302480735442614, hamiltonian_energy = -6.268666479091379, hamiltonian_energy_error = 0.39503603984808056, max_hamiltonian_energy_error = 0.5694676404850387, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 8.924962611299854, hamiltonian_energy = -6.9922387210007235, hamiltonian_energy_error = -0.07039372732152582, max_hamiltonian_energy_error = -0.4703233576034247, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9397264018949626, log_density = 4.164561817052482, hamiltonian_energy = -2.678331307403029, hamiltonian_energy_error = 0.2163141603010179, max_hamiltonian_energy_error = 0.2163141603010179, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 7.859845332939525, hamiltonian_energy = -2.5480164301437904, hamiltonian_energy_error = -0.004823016621319454, max_hamiltonian_energy_error = -0.6407079211149913, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8617360944804565, log_density = 7.317471425204399, hamiltonian_energy = -6.010070846367314, hamiltonian_energy_error = 0.2095615494986669, max_hamiltonian_energy_error = 0.5526732467383564, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9231781655842719, log_density = 10.652884945761791, hamiltonian_energy = -3.5289420875909814, hamiltonian_energy_error = -0.34412860708354387, max_hamiltonian_energy_error = -0.34412860708354387, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9575017059185414, log_density = 10.329352809937127, hamiltonian_energy = -9.603203836908246, hamiltonian_energy_error = 0.024051518596795773, max_hamiltonian_energy_error = 0.0987286508026326, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8296174561797248, log_density = 10.71935865100464, hamiltonian_energy = -7.772132058524622, hamiltonian_energy_error = 0.08331436611039411, max_hamiltonian_energy_error = 0.41242404446850145, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9349448979040426, log_density = 10.676397283909804, hamiltonian_energy = -8.401420237901174, hamiltonian_energy_error = -0.029807431458763745, max_hamiltonian_energy_error = 0.18490676508765702, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9080566444155238, log_density = 10.589499879985555, hamiltonian_energy = -8.800765354208405, hamiltonian_energy_error = 0.015620210843312776, max_hamiltonian_energy_error = 0.257437013997329, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9626188460490138, log_density = 11.080256890351647, hamiltonian_energy = -9.14873931854605, hamiltonian_energy_error = -0.0803724074202492, max_hamiltonian_energy_error = -0.17032339120678408, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8161975304193794, log_density = 11.257996536254797, hamiltonian_energy = -8.222504274054806, hamiltonian_energy_error = 0.09389548852636054, max_hamiltonian_energy_error = 0.45338118420979345, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9918166492940473, log_density = 11.123234601300911, hamiltonian_energy = -10.774497399057, hamiltonian_energy_error = 0.024856429428421478, max_hamiltonian_energy_error = -0.094423587829505, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9321721792628322, log_density = 10.17926341256248, hamiltonian_energy = -8.369820148605363, hamiltonian_energy_error = -0.08410165861517171, max_hamiltonian_energy_error = 0.1687253125037369, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.5398422609195764, log_density = 6.859228992256398, hamiltonian_energy = -6.04635190723081, hamiltonian_energy_error = 0.5963345761568357, max_hamiltonian_energy_error = 0.6348505149291936, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 8.502439709325742, hamiltonian_energy = -6.331982375392387, hamiltonian_energy_error = -0.16203575432751016, max_hamiltonian_energy_error = -0.5234247746322325, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9840250168248303, log_density = 8.570428573202182, hamiltonian_energy = -5.760124044473788, hamiltonian_energy_error = -0.057113914374811614, max_hamiltonian_energy_error = -0.40074006699753895, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9046386154253062, log_density = 7.682683850070719, hamiltonian_energy = -5.248514668968319, hamiltonian_energy_error = 0.11412193110835567, max_hamiltonian_energy_error = 0.2878904858328859, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9984232520271495, log_density = 8.209157013463852, hamiltonian_energy = -6.067472920795536, hamiltonian_energy_error = -0.09974871246807027, max_hamiltonian_energy_error = -0.35368396248764267, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9717026298054195, log_density = 7.224611824006972, hamiltonian_energy = -6.008852276240453, hamiltonian_energy_error = 0.016046124693725794, max_hamiltonian_energy_error = 0.09569016829270804, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 2.6934090902782515, hamiltonian_energy = -0.3282473813493345, hamiltonian_energy_error = -0.3082976724865336, max_hamiltonian_energy_error = -1.0599006145379546, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9231639627215392, log_density = 9.109843655872979, hamiltonian_energy = 0.2736017419402206, hamiltonian_energy_error = -0.2649407821953931, max_hamiltonian_energy_error = -0.6214437941901849, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9949579748987086, log_density = 10.328769160968207, hamiltonian_energy = -7.837036531215343, hamiltonian_energy_error = -0.16137473732871577, max_hamiltonian_energy_error = -0.2965481826773946, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9606710735925927, log_density = 10.025760341010127, hamiltonian_energy = -9.22643224535971, hamiltonian_energy_error = -0.030670280244571302, max_hamiltonian_energy_error = -0.1657884195613235, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9192441698815514, log_density = 9.17491578533539, hamiltonian_energy = -7.014255225346924, hamiltonian_energy_error = 0.07814102786218413, max_hamiltonian_energy_error = 0.12066064535297016, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9263919236071638, log_density = 7.829916177497251, hamiltonian_energy = -4.782098508801528, hamiltonian_energy_error = 0.059244593860994677, max_hamiltonian_energy_error = 0.19017827123782372, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9947338786891361, log_density = 11.565569013747172, hamiltonian_energy = -7.197476626782496, hamiltonian_energy_error = -0.19162516311284516, max_hamiltonian_energy_error = -0.19162516311284516, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9925619799734682, log_density = 11.217194428599003, hamiltonian_energy = -10.889958077437859, hamiltonian_energy_error = 0.01971038547829629, max_hamiltonian_energy_error = -0.051267257419162604, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9794127317449353, log_density = 11.447955205849635, hamiltonian_energy = -10.826208418812726, hamiltonian_energy_error = -0.026519723025430153, max_hamiltonian_energy_error = -0.07661294762440463, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8499758525658311, log_density = 8.989870143034496, hamiltonian_energy = -7.22700664879741, hamiltonian_energy_error = 0.1804480583378476, max_hamiltonian_energy_error = 0.2638351135071817, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7853008600102045, log_density = 7.414667766958345, hamiltonian_energy = -5.413361489285419, hamiltonian_energy_error = 0.29297095858423194, max_hamiltonian_energy_error = 0.4084674273480493, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9797339788554497, log_density = 9.57966582167882, hamiltonian_energy = -6.5005772913922, hamiltonian_energy_error = -0.4004964661775974, max_hamiltonian_energy_error = -0.4004964661775974, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.816346788939814, log_density = 9.581430051513895, hamiltonian_energy = -7.104504955772505, hamiltonian_energy_error = 0.033930958132811995, max_hamiltonian_energy_error = 0.44004675964405404, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9945479101013446, log_density = 9.690736663337029, hamiltonian_energy = -8.562525056476305, hamiltonian_energy_error = -0.01797537745810196, max_hamiltonian_energy_error = -0.12817659664367476, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7118676119063838, log_density = 7.7070780057032415, hamiltonian_energy = -5.393007850626422, hamiltonian_energy_error = 0.40190635635955196, max_hamiltonian_energy_error = 0.6831832491378576, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8962390589858508, log_density = 9.983429491231018, hamiltonian_energy = -4.8058100714863645, hamiltonian_energy_error = 0.30917131585084245, max_hamiltonian_energy_error = 0.30917131585084245, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9880147200022102, log_density = 9.187554216299677, hamiltonian_energy = -8.882932218222427, hamiltonian_energy_error = -0.042803622653625695, max_hamiltonian_energy_error = -0.2507715883320518, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9300265545341726, log_density = 10.16106475873514, hamiltonian_energy = -5.260151213989689, hamiltonian_energy_error = -0.20331810995227784, max_hamiltonian_energy_error = 0.2534014151790078, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.646874924551006, log_density = 8.893613953625225, hamiltonian_energy = -8.176694617923395, hamiltonian_energy_error = 0.39476536191245515, max_hamiltonian_energy_error = 0.6049802673084912, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9705306145035105, log_density = 6.202868904380276, hamiltonian_energy = -5.4205398914384375, hamiltonian_energy_error = 0.1272133464855969, max_hamiltonian_energy_error = -0.24307338006693868, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9898287308770816, log_density = 7.451723930692731, hamiltonian_energy = -5.248706613498122, hamiltonian_energy_error = -0.16975198752543363, max_hamiltonian_energy_error = -0.30515648503749127, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9667056228041047, log_density = 6.165094616733423, hamiltonian_energy = -5.265804911039688, hamiltonian_energy_error = -0.0873319897614584, max_hamiltonian_energy_error = 0.1281512253350341, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9450941702635943, log_density = 7.381979022708425, hamiltonian_energy = -5.0169803456757185, hamiltonian_energy_error = -0.005200243842783614, max_hamiltonian_energy_error = 0.1307928957143094, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8860754348822611, log_density = 5.778669764473632, hamiltonian_energy = -2.606383146457303, hamiltonian_energy_error = -0.25789786741013776, max_hamiltonian_energy_error = -0.25789786741013776, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8359670733538432, log_density = 5.571098356323725, hamiltonian_energy = -2.6825766213031708, hamiltonian_energy_error = 0.16418915155261704, max_hamiltonian_energy_error = 0.32736414545110293, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9141541185834576, log_density = 2.9618025685916294, hamiltonian_energy = -2.6324001820843463, hamiltonian_energy_error = 0.1916008319764675, max_hamiltonian_energy_error = -0.20851443415379434, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9629038701300263, log_density = 6.504656365713963, hamiltonian_energy = -1.7377586769898006, hamiltonian_energy_error = -0.026831414744606263, max_hamiltonian_energy_error = -0.762092199791204, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 10.195262363048117, hamiltonian_energy = -6.541213240818573, hamiltonian_energy_error = -0.4262615304406223, max_hamiltonian_energy_error = -0.4525298805993545, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7803046144311577, log_density = 11.234201436394963, hamiltonian_energy = -8.590982106929276, hamiltonian_energy_error = -0.22653341619879974, max_hamiltonian_energy_error = 0.5262802862414544, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7592873677197743, log_density = 11.005734215300997, hamiltonian_energy = -9.059185342052512, hamiltonian_energy_error = 0.22512785638275723, max_hamiltonian_energy_error = 0.7351198925918112, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9028908318977441, log_density = 9.727642926236687, hamiltonian_energy = -9.349264874207876, hamiltonian_energy_error = 0.22248473732435592, max_hamiltonian_energy_error = -0.22882356536816317, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.902084520263244, hamiltonian_energy = -9.537270470204865, hamiltonian_energy_error = -0.16775121052385877, max_hamiltonian_energy_error = -0.3277210675515363, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.93512647019543, log_density = 9.270720396110306, hamiltonian_energy = -8.041764482530924, hamiltonian_energy_error = 0.04932008627485551, max_hamiltonian_energy_error = 0.1584062074910495, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9318467137784887, log_density = 10.420849445839384, hamiltonian_energy = -7.32498745601248, hamiltonian_energy_error = -0.07378769375702277, max_hamiltonian_energy_error = 0.17726831898518203, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7533675321854594, log_density = 9.991961499584892, hamiltonian_energy = -6.791968214747278, hamiltonian_energy_error = 0.2225695170579005, max_hamiltonian_energy_error = 0.47563325197690265, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8006445608654091, log_density = 10.250829271825882, hamiltonian_energy = -7.641306030816458, hamiltonian_energy_error = 0.030645023867378107, max_hamiltonian_energy_error = 0.5519795473967202, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9132327059276001, log_density = 9.231703141654911, hamiltonian_energy = -5.244908522506785, hamiltonian_energy_error = 0.09844507154570081, max_hamiltonian_energy_error = 0.3720888083114833, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9848635866060784, log_density = 10.22990294981739, hamiltonian_energy = -8.371708010077162, hamiltonian_energy_error = -0.31631026899853154, max_hamiltonian_energy_error = -0.31631026899853154, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8536348200285836, log_density = 8.408858989442155, hamiltonian_energy = -7.867875081302401, hamiltonian_energy_error = 0.2824412908007421, max_hamiltonian_energy_error = 0.2824412908007421, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 8.829945399138223, hamiltonian_energy = -8.14612020988752, hamiltonian_energy_error = -0.23166519138298902, max_hamiltonian_energy_error = -0.23166519138298902, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.525704829090982, hamiltonian_energy = -7.980139239558665, hamiltonian_energy_error = -0.1145199669666459, max_hamiltonian_energy_error = -0.2076277433073468, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8513631638676793, log_density = 9.80185667099868, hamiltonian_energy = -7.4519742630963535, hamiltonian_energy_error = 0.0951451632709368, max_hamiltonian_energy_error = 0.28396437709985634, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9629382932676693, log_density = 8.952380668240782, hamiltonian_energy = -7.665668595071604, hamiltonian_energy_error = 0.0749634008942941, max_hamiltonian_energy_error = 0.08441025752312026, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9797714711244842, log_density = 11.00245257119737, hamiltonian_energy = -6.958359953922975, hamiltonian_energy_error = -0.20704010909002424, max_hamiltonian_energy_error = -0.20704010909002424, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6626707975175707, log_density = 8.80034659668739, hamiltonian_energy = -6.623641244680205, hamiltonian_energy_error = 0.366073433741092, max_hamiltonian_energy_error = 0.6344292384681749, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.3369819940635889, log_density = 7.0013682163564255, hamiltonian_energy = -4.226157659343841, hamiltonian_energy_error = 1.2677992230172723, max_hamiltonian_energy_error = 1.471788154894294, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 11.299667977954659, hamiltonian_energy = -6.890294920146979, hamiltonian_energy_error = -0.4430262650601753, max_hamiltonian_energy_error = -0.4430262650601753, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.907246674232914, log_density = 10.217586225907388, hamiltonian_energy = -9.550306800593056, hamiltonian_energy_error = 0.24230882559416322, max_hamiltonian_energy_error = 0.24230882559416322, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.350293050201337, hamiltonian_energy = -8.78246228532545, hamiltonian_energy_error = -0.14914434900012807, max_hamiltonian_energy_error = -0.3940086925518802, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8014696054866423, log_density = 9.90385829724529, hamiltonian_energy = -5.459005926117831, hamiltonian_energy_error = 0.27474358172348357, max_hamiltonian_energy_error = 0.3370667748435068, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 9.604268420856812, hamiltonian_energy = -8.584278398995302, hamiltonian_energy_error = -0.14118881050838006, max_hamiltonian_energy_error = -0.42186748290072806, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9764921916808734, log_density = 11.26591002192105, hamiltonian_energy = -8.642066695997265, hamiltonian_energy_error = -0.17693261083438827, max_hamiltonian_energy_error = -0.17693261083438827, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9982825836021801, log_density = 10.977217125735867, hamiltonian_energy = -10.382729648817993, hamiltonian_energy_error = 0.010451992068903238, max_hamiltonian_energy_error = -0.06290396392493136, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9055140793447879, log_density = 9.12142901792534, hamiltonian_energy = -7.711529152032158, hamiltonian_energy_error = 0.15618358444986935, max_hamiltonian_energy_error = 0.18430876802856133, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9910083991829814, log_density = 10.069768583842665, hamiltonian_energy = -8.691638380416043, hamiltonian_energy_error = 0.06500925134739255, max_hamiltonian_energy_error = -0.23471590997066016, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9814764643293002, log_density = 9.605497572707087, hamiltonian_energy = -7.818762268550586, hamiltonian_energy_error = -0.013810826459393688, max_hamiltonian_energy_error = -0.4094501516471416, tree_depth = 5, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.88554229748236, hamiltonian_energy = -8.630407524449602, hamiltonian_energy_error = -0.2747070136621659, max_hamiltonian_energy_error = -0.29828479963257415, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9948577516634843, log_density = 11.503180743090308, hamiltonian_energy = -9.722633901298813, hamiltonian_energy_error = -0.0882069299931807, max_hamiltonian_energy_error = -0.10744957608783778, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 11.682700158031313, hamiltonian_energy = -11.42530988469168, hamiltonian_energy_error = -0.035175110252973596, max_hamiltonian_energy_error = -0.035175110252973596, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9761605004451971, log_density = 10.386812665004214, hamiltonian_energy = -10.014315130206302, hamiltonian_energy_error = 0.05621456869815766, max_hamiltonian_energy_error = 0.05621456869815766, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8842401354530396, log_density = 10.478817127976258, hamiltonian_energy = -8.48737971368381, hamiltonian_energy_error = 0.001164033933690689, max_hamiltonian_energy_error = 0.19938791178208604, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9711543696133774, log_density = 10.545793485351107, hamiltonian_energy = -9.519443761812282, hamiltonian_energy_error = 0.06701078556762319, max_hamiltonian_energy_error = -0.12658316631319977, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.995595435310536, log_density = 9.860761854863458, hamiltonian_energy = -8.908558658388683, hamiltonian_energy_error = 0.028179342149270425, max_hamiltonian_energy_error = -0.12675379747551752, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8251631361700037, log_density = 10.462479790791713, hamiltonian_energy = -6.027808663178472, hamiltonian_energy_error = 0.09503485946672718, max_hamiltonian_energy_error = 0.33080350865229846, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9929538620661632, log_density = 10.204255356524035, hamiltonian_energy = -9.279046275904124, hamiltonian_energy_error = 0.05058088035875841, max_hamiltonian_energy_error = -0.1654630518328748, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9290404174598004, log_density = 5.947741191537334, hamiltonian_energy = -3.9373952835434274, hamiltonian_energy_error = 0.27069219553928736, max_hamiltonian_energy_error = 0.27069219553928736, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.760229358072998, hamiltonian_energy = -2.692754239476435, hamiltonian_energy_error = -0.340976781602353, max_hamiltonian_energy_error = -0.340976781602353, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.287816845168674, log_density = 7.195802682070992, hamiltonian_energy = -0.2681895430583303, hamiltonian_energy_error = 1.1893542432101878, max_hamiltonian_energy_error = 1.844262334664613, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9249694468105307, log_density = 9.088639915152484, hamiltonian_energy = -5.218750026807744, hamiltonian_energy_error = -0.2615356096472379, max_hamiltonian_energy_error = -0.3696789760200172, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.981353240981299, log_density = 9.149110793979856, hamiltonian_energy = -6.698463250017609, hamiltonian_energy_error = 0.008284872156202105, max_hamiltonian_energy_error = -0.10238824099942256, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.380181608927844, hamiltonian_energy = -8.674305990838533, hamiltonian_energy_error = -0.09945652657675907, max_hamiltonian_energy_error = -0.2389985964178578, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9563116743259586, log_density = 9.867843334681474, hamiltonian_energy = -7.2863197344939525, hamiltonian_energy_error = 0.0425287612260874, max_hamiltonian_energy_error = 0.1351075383603444, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8113440075771455, log_density = 9.695194845387817, hamiltonian_energy = -6.812970058177575, hamiltonian_energy_error = 0.5928611823240413, max_hamiltonian_energy_error = 0.5928611823240413, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.988960825417351, log_density = 9.838104593181834, hamiltonian_energy = -9.175706163090581, hamiltonian_energy_error = -0.09025920529676768, max_hamiltonian_energy_error = -0.34408356775426086, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9169162079619688, log_density = 7.45140686962981, hamiltonian_energy = -5.2794813525684035, hamiltonian_energy_error = 0.07430471791829074, max_hamiltonian_energy_error = 0.2211085838466884, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.997344155453143, log_density = 7.860185332183102, hamiltonian_energy = -6.451741843669545, hamiltonian_energy_error = -0.023480211224987002, max_hamiltonian_energy_error = -0.07078638321689379, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9053288637605704, log_density = 11.027355034574144, hamiltonian_energy = -4.518362630438681, hamiltonian_energy_error = -0.11563039489191063, max_hamiltonian_energy_error = 0.29777955267309686, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9051886406860188, log_density = 10.420213211824983, hamiltonian_energy = -8.826142146642365, hamiltonian_energy_error = -0.08259997538563724, max_hamiltonian_energy_error = 0.33468154997668265, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9394570036924564, log_density = 11.199957351150367, hamiltonian_energy = -8.839886017445203, hamiltonian_energy_error = -0.005046146070863955, max_hamiltonian_energy_error = 0.17348257491473085, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9851262345888385, log_density = 10.287187663934928, hamiltonian_energy = -9.808245088555804, hamiltonian_energy_error = 0.012809575836644882, max_hamiltonian_energy_error = -0.1576977281001426, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9980486546306745, log_density = 11.715808065474707, hamiltonian_energy = -10.132512284295293, hamiltonian_energy_error = -0.12122677928894277, max_hamiltonian_energy_error = -0.2186330245663175, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8931188822625215, log_density = 10.682684002652099, hamiltonian_energy = -9.986495009390467, hamiltonian_energy_error = 0.06197319305609028, max_hamiltonian_energy_error = 0.2423302053342553, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8675489106546398, log_density = 8.287700479437374, hamiltonian_energy = -7.076609113088127, hamiltonian_energy_error = 0.29095523404543044, max_hamiltonian_energy_error = 0.29095523404543044, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7403803553726042, log_density = 9.961738542655239, hamiltonian_energy = -5.54424748186963, hamiltonian_energy_error = 0.40357741239373457, max_hamiltonian_energy_error = 0.5382994799272343, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.996345743591475, log_density = 9.977271800336737, hamiltonian_energy = -9.042410851188977, hamiltonian_energy_error = -0.0002521413747196277, max_hamiltonian_energy_error = -0.07904410243498461, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.852009624521156, log_density = 9.979965488794885, hamiltonian_energy = -5.986384265789605, hamiltonian_energy_error = 0.09517596270637085, max_hamiltonian_energy_error = 0.3249441182361643, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9817434209955209, log_density = 9.994921408554802, hamiltonian_energy = -8.14828753229871, hamiltonian_energy_error = -0.17617013783613267, max_hamiltonian_energy_error = -0.2569809665102394, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7905570689375994, log_density = 10.129429655451208, hamiltonian_energy = -5.987154391648394, hamiltonian_energy_error = -0.026810971563373087, max_hamiltonian_energy_error = 0.45745830950143507, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9810429212889599, log_density = 11.052493492031436, hamiltonian_energy = -8.968834956725882, hamiltonian_energy_error = -0.0987810092903505, max_hamiltonian_energy_error = -0.0987810092903505, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9687612072184457, log_density = 11.201012323901754, hamiltonian_energy = -8.95654586696396, hamiltonian_energy_error = -0.043928004502285845, max_hamiltonian_energy_error = 0.06740167069194669, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9588054950821426, log_density = 10.623759964044204, hamiltonian_energy = -10.295029165800475, hamiltonian_energy_error = 0.05005821352046702, max_hamiltonian_energy_error = 0.11031318917203947, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8075094043763862, log_density = 7.217583155553038, hamiltonian_energy = -3.9744250428812027, hamiltonian_energy_error = 0.15470307716221043, max_hamiltonian_energy_error = 0.2900460769694142, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9895546173043345, log_density = 8.780588839609496, hamiltonian_energy = -6.104559890530191, hamiltonian_energy_error = 0.0010152556062275053, max_hamiltonian_energy_error = -0.14336236649567358, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8965583816089863, log_density = 9.736056582677877, hamiltonian_energy = -7.4152873868235165, hamiltonian_energy_error = -0.14143084699766284, max_hamiltonian_energy_error = 0.20006277662528849, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8709019061558059, log_density = 11.518042119842772, hamiltonian_energy = -7.104225133979732, hamiltonian_energy_error = -0.07142411590576803, max_hamiltonian_energy_error = 0.33696593624408067, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6993357073783528, log_density = 9.543816873675754, hamiltonian_energy = -8.539693942675207, hamiltonian_energy_error = 0.4502969778346415, max_hamiltonian_energy_error = 0.4502969778346415, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9323149342616451, log_density = 8.991367776727317, hamiltonian_energy = -5.904081683965118, hamiltonian_energy_error = -0.011687783449349176, max_hamiltonian_energy_error = -0.3149867943585587, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 8.774304524243785, hamiltonian_energy = -6.950002274319161, hamiltonian_energy_error = -0.18788854012490397, max_hamiltonian_energy_error = -0.3050297429670028, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9845453141050566, log_density = 10.533243812685761, hamiltonian_energy = -7.960062258706931, hamiltonian_energy_error = -0.11333500419152731, max_hamiltonian_energy_error = -0.11333500419152731, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.865056381268909, log_density = 10.082160050222548, hamiltonian_energy = -7.305611516863765, hamiltonian_energy_error = 0.11989123071916197, max_hamiltonian_energy_error = 0.22794150495460475, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9785279611628991, log_density = 10.531943399229094, hamiltonian_energy = -9.567588764743387, hamiltonian_energy_error = 0.046554941280549045, max_hamiltonian_energy_error = -0.15908378070543172, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.904210040296395, log_density = 8.715950302959534, hamiltonian_energy = -8.541249369080846, hamiltonian_energy_error = 0.3107737204354084, max_hamiltonian_energy_error = 0.3107737204354084, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 6.248013512146741, hamiltonian_energy = -3.174307245925318, hamiltonian_energy_error = -0.63057249489506, max_hamiltonian_energy_error = -1.3002046286092046, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7160330537144518, log_density = 9.022705281027733, hamiltonian_energy = -2.7749783995853843, hamiltonian_energy_error = -0.01261392251521709, max_hamiltonian_energy_error = 1.1924775185407894, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9462854153064387, log_density = 7.221919274026833, hamiltonian_energy = -3.9831132461605367, hamiltonian_energy_error = 0.012491620610212806, max_hamiltonian_energy_error = 0.15647747903604214, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9714639402657231, log_density = 6.811698213467469, hamiltonian_energy = -4.933342431382096, hamiltonian_energy_error = 0.10109431447494277, max_hamiltonian_energy_error = -0.4942613397439901, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9350886359775491, log_density = 8.032661902586838, hamiltonian_energy = -5.148065524107404, hamiltonian_energy_error = -0.003601379525278503, max_hamiltonian_energy_error = 0.21658273569412412, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9906555264213023, log_density = 9.66267453757277, hamiltonian_energy = -6.368700050313488, hamiltonian_energy_error = -0.20116342315249103, max_hamiltonian_energy_error = -0.31189181816488887, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9766165104746254, log_density = 10.56830283783341, hamiltonian_energy = -8.262840965340573, hamiltonian_energy_error = -0.04507396926603491, max_hamiltonian_energy_error = -0.18267946960603787, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8762908762871985, log_density = 8.950051603179912, hamiltonian_energy = -6.807390291640342, hamiltonian_energy_error = -0.01726289428080907, max_hamiltonian_energy_error = 0.2904322488962796, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9268770523284579, log_density = 10.131290842448639, hamiltonian_energy = -7.347166833970617, hamiltonian_energy_error = 0.05497266913132748, max_hamiltonian_energy_error = 0.23718651890250975, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9453464212089397, log_density = 10.272377006486343, hamiltonian_energy = -8.239830805758022, hamiltonian_energy_error = 0.015565451848466694, max_hamiltonian_energy_error = -0.2409192829458835, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9226760230325389, log_density = 9.191105429005116, hamiltonian_energy = -7.469609982773017, hamiltonian_energy_error = -0.021578139378741312, max_hamiltonian_energy_error = -0.24008625895915792, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9012905996240461, log_density = 10.305984114573963, hamiltonian_energy = -6.837023038515064, hamiltonian_energy_error = 0.111422419464561, max_hamiltonian_energy_error = 0.2243324105168547, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7782309092349803, log_density = 8.226038292749273, hamiltonian_energy = -4.912601946459324, hamiltonian_energy_error = 0.09567769859796371, max_hamiltonian_energy_error = 0.6423325376901676, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9885220345857093, log_density = 8.931583235353198, hamiltonian_energy = -7.267062932284098, hamiltonian_energy_error = -0.1320522791235499, max_hamiltonian_energy_error = -0.43192023025698045, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.923727880368418, hamiltonian_energy = -8.789951352064584, hamiltonian_energy_error = -0.10242306401960555, max_hamiltonian_energy_error = -0.1931032906575627, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.4050110335948048, log_density = 9.21210075818766, hamiltonian_energy = -3.9855324474315053, hamiltonian_energy_error = 0.757527520202963, max_hamiltonian_energy_error = 1.2794696519684061, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.846160274451986, log_density = 8.739851821715998, hamiltonian_energy = -5.0384898487139465, hamiltonian_energy_error = 0.08936463507443726, max_hamiltonian_energy_error = 0.6133162190692589, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8219258668340969, log_density = 9.823831640224778, hamiltonian_energy = -5.1494132838212785, hamiltonian_energy_error = -0.5851334138533772, max_hamiltonian_energy_error = 0.6414514909019795, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8765890888930611, log_density = 10.449217580177832, hamiltonian_energy = -6.924135448367881, hamiltonian_energy_error = -0.25754638223537185, max_hamiltonian_energy_error = 0.4624049458177364, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9661506056976421, log_density = 9.266253195890354, hamiltonian_energy = -7.768986712970424, hamiltonian_energy_error = 0.07061916629304488, max_hamiltonian_energy_error = -0.16789331329777202, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9756949470509585, log_density = 9.66224459258557, hamiltonian_energy = -8.48116579867082, hamiltonian_energy_error = -0.1784062785784073, max_hamiltonian_energy_error = -0.4090768095431425, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.89626233212862, log_density = 6.983151116404052, hamiltonian_energy = -3.927875337139406, hamiltonian_energy_error = 0.07834935648288388, max_hamiltonian_energy_error = 0.24562643428572972, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8729536735008042, log_density = 9.072611103436412, hamiltonian_energy = -2.580380043068203, hamiltonian_energy_error = 0.007048234219674043, max_hamiltonian_energy_error = 0.5374625617488884, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9894649931627774, log_density = 8.968122801331722, hamiltonian_energy = -8.431575854053527, hamiltonian_energy_error = 0.0045474022426130745, max_hamiltonian_energy_error = -0.4207154297386211, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.934252804958659, log_density = 10.560030308454476, hamiltonian_energy = -7.8260917672200545, hamiltonian_energy_error = -0.3388766486241792, max_hamiltonian_energy_error = -0.5913179039203893, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7916494612666098, log_density = 8.792887796251666, hamiltonian_energy = -7.75315115099895, hamiltonian_energy_error = 0.3751274880076094, max_hamiltonian_energy_error = 0.3751274880076094, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 10.541320025014455, hamiltonian_energy = -8.015594966783024, hamiltonian_energy_error = -0.41293211425322074, max_hamiltonian_energy_error = -0.6473048240757793, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8782995399493517, log_density = 6.803056399742747, hamiltonian_energy = -2.6033441605731955, hamiltonian_energy_error = -0.05391094186307832, max_hamiltonian_energy_error = 0.7831202654338743, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8840148664478829, log_density = 7.226833580997763, hamiltonian_energy = -4.785459618086595, hamiltonian_energy_error = -0.01880618580091742, max_hamiltonian_energy_error = 0.42764231549362286, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 6.991096802019747, hamiltonian_energy = -5.421978252299745, hamiltonian_energy_error = -0.24210172722214374, max_hamiltonian_energy_error = -0.7174381880081864, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9505820297746914, log_density = 8.309738839465613, hamiltonian_energy = -5.92746547581733, hamiltonian_energy_error = 0.1724345054470131, max_hamiltonian_energy_error = -0.20091114222534756, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.985937254919376, log_density = 7.31522132375998, hamiltonian_energy = -5.890411745330356, hamiltonian_energy_error = 0.019190082446908008, max_hamiltonian_energy_error = -0.5199168367889273, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9573925172241282, log_density = 8.443954667150486, hamiltonian_energy = -5.421664368392057, hamiltonian_energy_error = -0.2395710688281758, max_hamiltonian_energy_error = 0.34544138919588185, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9638898750173845, log_density = 8.578963361043826, hamiltonian_energy = -7.21951948098637, hamiltonian_energy_error = -0.035733339348679394, max_hamiltonian_energy_error = 0.0802548114608399, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9339723035954874, log_density = 9.63142063285066, hamiltonian_energy = -4.966853026812056, hamiltonian_energy_error = 0.0006020331061993289, max_hamiltonian_energy_error = 0.14402976526246825, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9723310517448499, log_density = 8.542052142087705, hamiltonian_energy = -7.7711504744451725, hamiltonian_energy_error = 0.020982895596595164, max_hamiltonian_energy_error = -0.13381592504843098, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9639801579153164, log_density = 7.569468690535636, hamiltonian_energy = -4.666103447194809, hamiltonian_energy_error = -0.20190343334230576, max_hamiltonian_energy_error = 0.2182235351820312, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9595461930782551, log_density = 11.325968108800346, hamiltonian_energy = -6.485288287643123, hamiltonian_energy_error = -0.0614310719737059, max_hamiltonian_energy_error = 0.1703156571670652, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7434024743578279, log_density = 7.861288513784546, hamiltonian_energy = -6.78968176007581, hamiltonian_energy_error = 0.391748814005215, max_hamiltonian_energy_error = 0.5451249751592906, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9934414999107749, log_density = 7.006032610352575, hamiltonian_energy = -3.870929389502964, hamiltonian_energy_error = 0.0414620764090996, max_hamiltonian_energy_error = -0.21033576246049224, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.689855637788984, hamiltonian_energy = -5.879152161562837, hamiltonian_energy_error = -0.19265207124811745, max_hamiltonian_energy_error = -0.23202460587875873, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9488483271217066, log_density = 8.558785115034398, hamiltonian_energy = -8.514119633689853, hamiltonian_energy_error = 0.06560227506665939, max_hamiltonian_energy_error = -0.24596281049472601, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9061233317306067, log_density = 9.448922786987954, hamiltonian_energy = -5.795216776736924, hamiltonian_energy_error = -0.12610294734356842, max_hamiltonian_energy_error = 0.30322065487920025, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9792725663034365, log_density = 8.711288228527799, hamiltonian_energy = -7.87546949630066, hamiltonian_energy_error = 0.13433076032552904, max_hamiltonian_energy_error = -0.19560559116980158, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9766205871788157, log_density = 9.4529506982678, hamiltonian_energy = -7.607446649659919, hamiltonian_energy_error = 0.059261079821658846, max_hamiltonian_energy_error = -0.2595647809959445, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.7640265312349763, log_density = 6.1546875487771935, hamiltonian_energy = -3.5836767082409255, hamiltonian_energy_error = 0.3014092690192496, max_hamiltonian_energy_error = 1.0569460817237273, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9985935012943928, log_density = 5.43943007538584, hamiltonian_energy = -4.616750683592167, hamiltonian_energy_error = -0.1050556183821838, max_hamiltonian_energy_error = -1.0996064676963933, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.936512907519257, log_density = 10.234051098216195, hamiltonian_energy = -3.7684093240641623, hamiltonian_energy_error = -1.2901430534938703, max_hamiltonian_energy_error = -1.2901430534938703, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9693786803114092, log_density = 9.943160676672102, hamiltonian_energy = -9.385913822015887, hamiltonian_energy_error = 0.060879030033856196, max_hamiltonian_energy_error = -0.1930642070932791, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9999242998320902, log_density = 10.04105311677663, hamiltonian_energy = -8.839905925744997, hamiltonian_energy_error = -0.12471521728366675, max_hamiltonian_energy_error = -0.3183952265531378, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9919361043263208, log_density = 10.877670054231112, hamiltonian_energy = -9.337214309230465, hamiltonian_energy_error = -0.11134186831494297, max_hamiltonian_energy_error = -0.11134186831494297, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.691454309063985, log_density = 9.641212037618224, hamiltonian_energy = -8.420818267356843, hamiltonian_energy_error = 0.03862558386254733, max_hamiltonian_energy_error = 0.7560946129145698, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9992591669498859, log_density = 10.730653992094386, hamiltonian_energy = -8.67696473011959, hamiltonian_energy_error = -0.04119213313121506, max_hamiltonian_energy_error = -0.09806688775196726, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.991714893126372, log_density = 9.568712865921613, hamiltonian_energy = -8.969942248881857, hamiltonian_energy_error = -0.024788004119786322, max_hamiltonian_energy_error = -0.129061879824647, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9606167963882059, log_density = 6.916603069319491, hamiltonian_energy = -5.685858087034645, hamiltonian_energy_error = 0.08746336957644107, max_hamiltonian_energy_error = -0.2609710538838197, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8236802579215008, log_density = 6.011374190093658, hamiltonian_energy = -3.2018655654093906, hamiltonian_energy_error = -0.08299897684524948, max_hamiltonian_energy_error = 0.40764144535887326, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5948939938865607, log_density = 9.533507501719981, hamiltonian_energy = -3.255818204412974, hamiltonian_energy_error = 0.5643582643326122, max_hamiltonian_energy_error = 0.9111559427728695, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9695589074836511, log_density = 6.171734369094262, hamiltonian_energy = -5.136317296894792, hamiltonian_energy_error = 0.08270084279304246, max_hamiltonian_energy_error = -0.25533057423043815, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 5.935641510014722, hamiltonian_energy = -4.785164658958101, hamiltonian_energy_error = -0.13156979409472846, max_hamiltonian_energy_error = -0.3550913330318597, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9224931631817517, log_density = 7.8895098771383125, hamiltonian_energy = -2.429526568431287, hamiltonian_energy_error = 0.06633800386127531, max_hamiltonian_energy_error = 0.1589794289580202, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9990017145044128, log_density = 10.023577754204055, hamiltonian_energy = -6.6567165404368716, hamiltonian_energy_error = -0.08700708484422304, max_hamiltonian_energy_error = -0.10903665072439583, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8819154656726106, log_density = 9.47490860442249, hamiltonian_energy = -4.2334628385603885, hamiltonian_energy_error = -0.226178880862693, max_hamiltonian_energy_error = 0.4517284400588424, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8686979523664113, log_density = 8.610734210153293, hamiltonian_energy = -4.46299284082007, hamiltonian_energy_error = 0.06951644641010368, max_hamiltonian_energy_error = 0.28267785494654785, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9946908150577658, log_density = 9.344408276001165, hamiltonian_energy = -7.418204352564342, hamiltonian_energy_error = -0.040095641001790305, max_hamiltonian_energy_error = -0.1809679289307775, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.994510625974799, log_density = 10.00853098751113, hamiltonian_energy = -8.100459926360642, hamiltonian_energy_error = -0.0400594216076442, max_hamiltonian_energy_error = -0.19019828804641037, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9167395300893108, log_density = 9.661084056964441, hamiltonian_energy = -7.609481458675135, hamiltonian_energy_error = 0.1250452685000143, max_hamiltonian_energy_error = 0.2984609936782965, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9170516800514598, log_density = 7.849625678759498, hamiltonian_energy = -6.202838202945394, hamiltonian_energy_error = -0.08084489916629778, max_hamiltonian_energy_error = 0.23413805534780963, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8964568058403414, log_density = 9.162128514499493, hamiltonian_energy = -5.212308776894146, hamiltonian_energy_error = -0.29596637494372047, max_hamiltonian_energy_error = 0.3525600212786486, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7858543132480209, log_density = 6.962431836536862, hamiltonian_energy = -5.477882872849315, hamiltonian_energy_error = 0.6597242083661135, max_hamiltonian_energy_error = 0.6597242083661135, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9647851041755814, log_density = 4.357045457562915, hamiltonian_energy = -2.91381157645231, hamiltonian_energy_error = -0.34394305946555637, max_hamiltonian_energy_error = -0.5002653706149944, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8879304582683479, log_density = 9.429185821099608, hamiltonian_energy = -2.768317486537862, hamiltonian_energy_error = -0.2162438206858015, max_hamiltonian_energy_error = 0.35616336601485266, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8302452069999736, log_density = 11.046732867539646, hamiltonian_energy = -7.438300214455002, hamiltonian_energy_error = -0.0878261224906618, max_hamiltonian_energy_error = 0.2809009555008428, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9828078115641623, log_density = 10.447401505662203, hamiltonian_energy = -9.749870766136901, hamiltonian_energy_error = -0.006744618827070781, max_hamiltonian_energy_error = 0.1227239911782867, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9900340867970998, log_density = 11.340871273477573, hamiltonian_energy = -8.455546300789697, hamiltonian_energy_error = -0.16976386807076516, max_hamiltonian_energy_error = -0.16976386807076516, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9292491213925612, log_density = 10.39516422204893, hamiltonian_energy = -8.93194006283094, hamiltonian_energy_error = 0.1221380665995433, max_hamiltonian_energy_error = 0.1841409498032398, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.306991899131814, hamiltonian_energy = -9.428555191698317, hamiltonian_energy_error = -0.046308828841929994, max_hamiltonian_energy_error = -0.1402085145110501, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9831280042070275, log_density = 10.696463102542713, hamiltonian_energy = -5.3390406661862455, hamiltonian_energy_error = -0.5949981289092117, max_hamiltonian_energy_error = -0.667103889911532, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9037988216825521, log_density = 9.512079073819033, hamiltonian_energy = -7.998990284914067, hamiltonian_energy_error = 0.08912929732683317, max_hamiltonian_energy_error = 0.2126094137857013, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8356729568315904, log_density = 9.411840981481024, hamiltonian_energy = -6.482234388948532, hamiltonian_energy_error = 0.11003131137585243, max_hamiltonian_energy_error = 0.5519710646161871, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 1.0, log_density = 10.637851523009212, hamiltonian_energy = -8.647447917662515, hamiltonian_energy_error = -0.21753077294721024, max_hamiltonian_energy_error = -0.29934456560460276, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.996868107986658, log_density = 11.482748042713215, hamiltonian_energy = -10.040560828410038, hamiltonian_energy_error = -0.08947449870926683, max_hamiltonian_energy_error = -0.10118671457092887, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8951834229270593, log_density = 10.546011726639856, hamiltonian_energy = -8.768281849729995, hamiltonian_energy_error = 0.06162947205486802, max_hamiltonian_energy_error = 0.22318806162231652, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7682950005243219, log_density = 11.559200712374619, hamiltonian_energy = -7.724026155234307, hamiltonian_energy_error = 0.10360913725246856, max_hamiltonian_energy_error = 0.3747796498017628, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9201224394270869, log_density = 11.057463337731777, hamiltonian_energy = -10.225221059304328, hamiltonian_energy_error = 0.073781714397537, max_hamiltonian_energy_error = 0.1484425475242368, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8755539773179232, log_density = 9.349994486974182, hamiltonian_energy = -9.01057259374407, hamiltonian_energy_error = 0.20056172588893695, max_hamiltonian_energy_error = 0.2127094860059806, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9961630640058354, log_density = 9.89662028577283, hamiltonian_energy = -8.351990884967504, hamiltonian_energy_error = -0.10588876940914993, max_hamiltonian_energy_error = -0.10588876940914993, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8681956692153816, log_density = 8.691254599635094, hamiltonian_energy = -6.689957229511961, hamiltonian_energy_error = 0.25574525388621794, max_hamiltonian_energy_error = 0.380973693072967, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.583086946115703, hamiltonian_energy = -7.026677341615608, hamiltonian_energy_error = -0.10584486068403809, max_hamiltonian_energy_error = -0.3279900379823122, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.962007897279184, log_density = 9.730742046645547, hamiltonian_energy = -7.506437886893012, hamiltonian_energy_error = -0.05314737689599269, max_hamiltonian_energy_error = 0.0983268926618921, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.5069331273574217, log_density = 9.730742046645547, hamiltonian_energy = -6.981883694703015, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 0.8002228885573501, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8510147694255252, log_density = 10.335167920245356, hamiltonian_energy = -7.945333445078428, hamiltonian_energy_error = 0.24255181752260047, max_hamiltonian_energy_error = 0.27783825119113637, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8655272881007195, log_density = 9.105759264631104, hamiltonian_energy = -7.6945308719712, hamiltonian_energy_error = 0.4101487073012642, max_hamiltonian_energy_error = 0.4101487073012642, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9767377724764259, log_density = 10.336366968235847, hamiltonian_energy = -6.839018979978791, hamiltonian_energy_error = -0.974033598443862, max_hamiltonian_energy_error = -0.974033598443862, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9422495793951038, log_density = 10.116433866272738, hamiltonian_energy = -8.734399404671578, hamiltonian_energy_error = 0.04554055607199459, max_hamiltonian_energy_error = 0.12113125255958046, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9392848018281332, log_density = 9.498695617323293, hamiltonian_energy = -7.653864359646532, hamiltonian_energy_error = 0.049046071717191, max_hamiltonian_energy_error = -0.21114768252091398, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9788186919368587, log_density = 9.19408410348441, hamiltonian_energy = -8.596990936699665, hamiltonian_energy_error = 0.007246170991708212, max_hamiltonian_energy_error = -0.1552383489741498, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9545293971501956, log_density = 7.958075329404764, hamiltonian_energy = -6.619100339149214, hamiltonian_energy_error = -0.05082170440174938, max_hamiltonian_energy_error = -0.32617199744158576, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9865714360842096, log_density = 7.759203579339799, hamiltonian_energy = -5.286513812531061, hamiltonian_energy_error = 0.028111443856725593, max_hamiltonian_energy_error = -0.3115506444131526, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9993434913109933, log_density = 9.372509766675229, hamiltonian_energy = -6.5739526676655835, hamiltonian_energy_error = -0.19603161179162854, max_hamiltonian_energy_error = -0.30732362112250744, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9531369815989862, log_density = 10.349055898317186, hamiltonian_energy = -7.109229855516521, hamiltonian_energy_error = -0.10427382059565282, max_hamiltonian_energy_error = 0.23671908612273285, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7139474747176688, log_density = 9.85118261905128, hamiltonian_energy = -6.78490490027498, hamiltonian_energy_error = 0.14047489117081735, max_hamiltonian_energy_error = 0.7173100974713131, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.973889570517911, log_density = 11.005024107921711, hamiltonian_energy = -8.000244424351449, hamiltonian_energy_error = -0.17316707510227047, max_hamiltonian_energy_error = -0.17316707510227047, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9675047686370534, log_density = 9.72752593815848, hamiltonian_energy = -8.68806943586557, hamiltonian_energy_error = 0.10351293291624053, max_hamiltonian_energy_error = 0.10351293291624053, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9822753977382995, log_density = 8.571222314780652, hamiltonian_energy = -7.248347572731703, hamiltonian_energy_error = 0.09637780027775911, max_hamiltonian_energy_error = -0.3492188867494255, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9905127042163869, log_density = 10.484685573614385, hamiltonian_energy = -7.170861816706057, hamiltonian_energy_error = -0.08863251231877811, max_hamiltonian_energy_error = -0.523216203376232, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8485264733872044, log_density = 5.838688376623379, hamiltonian_energy = -4.476696146155414, hamiltonian_energy_error = 0.5987534265348202, max_hamiltonian_energy_error = 0.5987534265348202, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8017281321609596, log_density = 11.013104840200358, hamiltonian_energy = -3.6293641587487855, hamiltonian_energy_error = -1.787200925333655, max_hamiltonian_energy_error = -1.787200925333655, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9754580244032452, log_density = 11.332947422436805, hamiltonian_energy = -10.325664956289216, hamiltonian_energy_error = -0.006324827831685198, max_hamiltonian_energy_error = 0.09569565260768975, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9114016159762495, log_density = 10.931203322392463, hamiltonian_energy = -10.611533949799062, hamiltonian_energy_error = 0.1717552696833522, max_hamiltonian_energy_error = 0.1728369015498341, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8377101021218828, log_density = 6.630464132450117, hamiltonian_energy = -5.584178035752823, hamiltonian_energy_error = 0.248936608246062, max_hamiltonian_energy_error = 0.26923193348223684, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9981801017934517, log_density = 8.818826617156638, hamiltonian_energy = -6.201867739322363, hamiltonian_energy_error = -0.008614152237107042, max_hamiltonian_energy_error = -0.36690856810917083, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.957034667528945, log_density = 10.081906817453845, hamiltonian_energy = -6.6030747052109735, hamiltonian_energy_error = -0.24030550416681074, max_hamiltonian_energy_error = -0.5041869879069791, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9801796342144112, log_density = 10.337420840129319, hamiltonian_energy = -8.259312465768483, hamiltonian_energy_error = -0.17860164894343455, max_hamiltonian_energy_error = -0.22260752780429982, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8036743727094858, log_density = 7.4331249178951895, hamiltonian_energy = -5.783694962009394, hamiltonian_energy_error = 0.323189230181967, max_hamiltonian_energy_error = 0.43326217992745697, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9608758787969963, log_density = 6.411138412125556, hamiltonian_energy = -5.318449874579083, hamiltonian_energy_error = 0.23525107979293036, max_hamiltonian_energy_error = -0.515551588302066, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9452735446710321, log_density = 9.00700258692786, hamiltonian_energy = -4.961179726491017, hamiltonian_energy_error = -0.6405336690586774, max_hamiltonian_energy_error = -0.6405336690586774, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7538829429593908, log_density = 6.669851734757909, hamiltonian_energy = -3.9796965438573535, hamiltonian_energy_error = 0.4015925802566578, max_hamiltonian_energy_error = 0.49307946871427877, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9814003125267997, log_density = 8.267332013918105, hamiltonian_energy = -5.890305626337208, hamiltonian_energy_error = 0.012598985019412368, max_hamiltonian_energy_error = -0.2903743873117932, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9901423471172696, log_density = 10.073424738809612, hamiltonian_energy = -6.907429491404638, hamiltonian_energy_error = -0.027228190462802004, max_hamiltonian_energy_error = -0.27399239518437746, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6921957074713637, log_density = 8.326908941810665, hamiltonian_energy = -6.861730628183084, hamiltonian_energy_error = 0.2872024871451577, max_hamiltonian_energy_error = 1.2459610291853949, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9648267895083045, log_density = 8.967454919799287, hamiltonian_energy = -5.684301276347597, hamiltonian_energy_error = 0.02359856498006785, max_hamiltonian_energy_error = -0.2507675284145927, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9822030455814162, log_density = 9.298851979660972, hamiltonian_energy = -7.3116298786407885, hamiltonian_energy_error = 0.011027733529002326, max_hamiltonian_energy_error = -0.2794520570042289, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.740354199610141, log_density = 5.238178828942045, hamiltonian_energy = -4.283787934537769, hamiltonian_energy_error = 0.5425468937478488, max_hamiltonian_energy_error = 0.6363627402913385, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 8.0657646179479, hamiltonian_energy = -3.4552978752354546, hamiltonian_energy_error = -0.33945607249938936, max_hamiltonian_energy_error = -0.33945607249938936, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8888753673563716, log_density = 8.527720595633314, hamiltonian_energy = -5.664114181129281, hamiltonian_energy_error = 0.000983252752232211, max_hamiltonian_energy_error = 0.48962609992025197, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.942163866678031, log_density = 7.814932050884394, hamiltonian_energy = -5.341179775056043, hamiltonian_energy_error = 0.05593515838121732, max_hamiltonian_energy_error = -0.24098944564426095, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9445491550677383, log_density = 9.26542747011596, hamiltonian_energy = -6.096365428383811, hamiltonian_energy_error = 0.0006468992384967009, max_hamiltonian_energy_error = -0.30776178403450416, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 10.927051027487753, hamiltonian_energy = -7.614645558305449, hamiltonian_energy_error = -0.20395762086844993, max_hamiltonian_energy_error = -0.399453428573012, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9206613153869065, log_density = 5.959034033068124, hamiltonian_energy = -4.739329005462455, hamiltonian_energy_error = 0.22504382470610462, max_hamiltonian_energy_error = 0.22504382470610462, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8305926503874678, log_density = 5.470248534243497, hamiltonian_energy = -1.7955952877348085, hamiltonian_energy_error = 0.690679966448656, max_hamiltonian_energy_error = 0.690679966448656, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9965570609231816, log_density = 8.98236467771104, hamiltonian_energy = -1.720257175272053, hamiltonian_energy_error = 0.024395744536224395, max_hamiltonian_energy_error = -0.3183272889799862, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9937680978027484, log_density = 11.12923697427669, hamiltonian_energy = -7.7981953303451625, hamiltonian_energy_error = -0.175707670082641, max_hamiltonian_energy_error = -0.22844333013730633, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8441576094341448, log_density = 7.848915080554255, hamiltonian_energy = -4.7369232131796934, hamiltonian_energy_error = 0.18742155271233418, max_hamiltonian_energy_error = 0.3304351341112204, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9501783165126046, log_density = 7.273977143461266, hamiltonian_energy = -5.676743465752699, hamiltonian_energy_error = 0.07270279575375227, max_hamiltonian_energy_error = -0.42394024216682347, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.943987536967353, log_density = 7.737685293742349, hamiltonian_energy = -2.8793019179884034, hamiltonian_energy_error = -0.2969012345181703, max_hamiltonian_energy_error = -0.41831820856185065, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7552476675567982, log_density = 4.114668234735422, hamiltonian_energy = -2.8557755921763426, hamiltonian_energy_error = 0.3410194402930382, max_hamiltonian_energy_error = 0.5304381478122338, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9217034875254606, log_density = 2.009026240662882, hamiltonian_energy = 0.38418188863554326, hamiltonian_energy_error = 0.1892066774244925, max_hamiltonian_energy_error = 0.31010800557452, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9999060404579423, log_density = 6.731383445953803, hamiltonian_energy = -0.8744728300062947, hamiltonian_energy_error = 0.0006579331849816406, max_hamiltonian_energy_error = -0.6084219683257461, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9873671116983113, log_density = 7.549763048857546, hamiltonian_energy = -4.4512000860361045, hamiltonian_energy_error = -0.016964095416900804, max_hamiltonian_energy_error = -0.448882991017018, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9529444906366015, log_density = 9.706066695351701, hamiltonian_energy = -5.074060566205173, hamiltonian_energy_error = -0.5865973167446548, max_hamiltonian_energy_error = -0.5865973167446548, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.974626078036399, log_density = 7.757253949691375, hamiltonian_energy = -6.112401451610636, hamiltonian_energy_error = -0.004249786379761922, max_hamiltonian_energy_error = -0.15632198808871145, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9215830736505995, log_density = 8.430181724314187, hamiltonian_energy = -6.871127326342636, hamiltonian_energy_error = 0.12281559898217509, max_hamiltonian_energy_error = 0.1274669792800367, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9815036311703423, log_density = 6.762598067690675, hamiltonian_energy = -4.130226863558544, hamiltonian_energy_error = 0.05195906495990954, max_hamiltonian_energy_error = -0.30187372794086365, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9746474846116151, log_density = 7.289043996222567, hamiltonian_energy = -5.160458971585833, hamiltonian_energy_error = -0.06315944034507659, max_hamiltonian_energy_error = -0.3609327149243242, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9119983660956019, log_density = 8.78276684294679, hamiltonian_energy = -3.9488852655473883, hamiltonian_energy_error = 0.13518161370919746, max_hamiltonian_energy_error = 0.204545720903341, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.6849375989827033, log_density = 9.566532743426194, hamiltonian_energy = -4.252502772625272, hamiltonian_energy_error = 0.023284001269022525, max_hamiltonian_energy_error = 1.1076143952019546, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9182992558767592, log_density = 7.785085849302828, hamiltonian_energy = -6.400157584744167, hamiltonian_energy_error = 0.16991965634360628, max_hamiltonian_energy_error = 0.29715800157902006, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9597877668466565, log_density = 5.407798442437649, hamiltonian_energy = -5.297660957297782, hamiltonian_energy_error = 0.27189361562923064, max_hamiltonian_energy_error = -0.4117582569747533, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9877080590841703, log_density = 7.603319459373846, hamiltonian_energy = -3.036257159921033, hamiltonian_energy_error = -0.3740570172778863, max_hamiltonian_energy_error = -0.6057146081177773, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7893649206628294, log_density = 7.024583658292393, hamiltonian_energy = -3.4707657204788167, hamiltonian_energy_error = -0.43400576370863453, max_hamiltonian_energy_error = 0.5863630531340771, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 8.00022815427975, hamiltonian_energy = -5.986350666877291, hamiltonian_energy_error = -0.23006205987157724, max_hamiltonian_energy_error = -0.23006205987157724, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9959728695437876, log_density = 8.726758920337872, hamiltonian_energy = -7.41742490894365, hamiltonian_energy_error = 0.0013430895256441033, max_hamiltonian_energy_error = -0.07296859186512172, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9824349913839643, log_density = 7.762364007040215, hamiltonian_energy = -5.4334681143404335, hamiltonian_energy_error = -0.0604689385578574, max_hamiltonian_energy_error = 0.0950594623404557, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.964611201903704, log_density = 9.372314102212147, hamiltonian_energy = -5.503310655773744, hamiltonian_energy_error = -0.24640924852597657, max_hamiltonian_energy_error = -0.24640924852597657, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7945449318151542, log_density = 8.540495235864219, hamiltonian_energy = -8.24592254896018, hamiltonian_energy_error = 0.29719044065236666, max_hamiltonian_energy_error = 0.3035187012561451, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.83351298404731, hamiltonian_energy = -8.120396579779046, hamiltonian_energy_error = -0.313959917426633, max_hamiltonian_energy_error = -0.313959917426633, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8356173459797418, log_density = 8.875432641668345, hamiltonian_energy = -8.19826213005665, hamiltonian_energy_error = 0.416499238061812, max_hamiltonian_energy_error = 0.416499238061812, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9598904330397166, log_density = 8.431388751456163, hamiltonian_energy = -5.67207862643916, hamiltonian_energy_error = -0.0846054375869505, max_hamiltonian_energy_error = -0.25705464664779853, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 1.0, log_density = 6.541079056357598, hamiltonian_energy = -5.969571230058766, hamiltonian_energy_error = -0.06611356426065829, max_hamiltonian_energy_error = -0.7570362119139729, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.6010877581543307, log_density = 5.801581094136196, hamiltonian_energy = -1.6774311378509408, hamiltonian_energy_error = -0.16502739100983632, max_hamiltonian_energy_error = 2.5662557958498793, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 7.662284115839219, hamiltonian_energy = -3.363837226859543, hamiltonian_energy_error = -0.09270812689672692, max_hamiltonian_energy_error = -0.6371118681252059, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9904200608449197, log_density = 9.774769914803684, hamiltonian_energy = -6.044108492220881, hamiltonian_energy_error = -0.7619944883783436, max_hamiltonian_energy_error = -0.7619944883783436, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9724672310751773, log_density = 6.565966304890139, hamiltonian_energy = -5.102823377045757, hamiltonian_energy_error = 0.024511775196558006, max_hamiltonian_energy_error = -0.1981221152322279, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9094628166537172, log_density = 5.750396066273998, hamiltonian_energy = -3.489901208893696, hamiltonian_energy_error = 0.0860878789252757, max_hamiltonian_energy_error = 0.2281185274731845, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9505090659445492, log_density = 3.6485479122735693, hamiltonian_energy = -1.4216668288188976, hamiltonian_energy_error = 0.03358018582477795, max_hamiltonian_energy_error = 0.12079226308430124, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8587983062789666, log_density = 3.8326284439807026, hamiltonian_energy = -1.1954569205792374, hamiltonian_energy_error = 0.11320553030819536, max_hamiltonian_energy_error = 0.4023542424237334, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9818096381021678, log_density = 3.5307347306159222, hamiltonian_energy = -2.135117665913226, hamiltonian_energy_error = 0.01471382693611023, max_hamiltonian_energy_error = 0.07551517657684714, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8698610134299524, log_density = 8.20764214113654, hamiltonian_energy = -0.9395193065695775, hamiltonian_energy_error = -0.16809719826623493, max_hamiltonian_energy_error = 0.9354132569960036, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8797941179935906, log_density = 6.274760649066181, hamiltonian_energy = -4.052937542918901, hamiltonian_energy_error = 0.25707229249726105, max_hamiltonian_energy_error = 0.4454282105662184, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9471158156645857, log_density = 10.81368280433793, hamiltonian_energy = -3.542697880559478, hamiltonian_energy_error = -0.6613832796377834, max_hamiltonian_energy_error = -0.6613832796377834, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8837843442355192, log_density = 10.465473905539257, hamiltonian_energy = -8.19132689032407, hamiltonian_energy_error = 0.012754905884726497, max_hamiltonian_energy_error = 0.2474743240954611, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7076776046392848, log_density = 7.400898100358843, hamiltonian_energy = -6.631281447113873, hamiltonian_energy_error = 0.4787980013040709, max_hamiltonian_energy_error = 0.4787980013040709, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9656476281333922, log_density = 7.642494868529514, hamiltonian_energy = -4.858230590768333, hamiltonian_energy_error = 0.014350571571237758, max_hamiltonian_energy_error = -0.710937033287399, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.302640532259455, hamiltonian_energy = -5.807736969847725, hamiltonian_energy_error = -0.48735938097775655, max_hamiltonian_energy_error = -0.48735938097775655, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9303647011505696, log_density = 8.978712671999125, hamiltonian_energy = -8.592977976389692, hamiltonian_energy_error = 0.16780920103926356, max_hamiltonian_energy_error = -0.21489235318150612, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.948930285682901, log_density = 10.765533901713816, hamiltonian_energy = -7.4038325966620055, hamiltonian_energy_error = -0.6613834123702205, max_hamiltonian_energy_error = -0.6613834123702205, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6395170935281187, log_density = 9.43166714337727, hamiltonian_energy = -7.902466372668302, hamiltonian_energy_error = 0.46228902501500535, max_hamiltonian_energy_error = 0.6367674376748695, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9048939565868716, log_density = 9.5788536784749, hamiltonian_energy = -6.0257345188994, hamiltonian_energy_error = -0.2753513446206721, max_hamiltonian_energy_error = -0.3614073735726535, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7915557608570241, log_density = 10.411781528583871, hamiltonian_energy = -6.228064903181116, hamiltonian_energy_error = 0.13364939188427005, max_hamiltonian_energy_error = 0.5086992154388561, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9814644032540588, log_density = 10.913432036106256, hamiltonian_energy = -8.7708930948676, hamiltonian_energy_error = 0.004423786610093572, max_hamiltonian_energy_error = -0.08570827960210003, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9093615495367217, log_density = 9.087610268842148, hamiltonian_energy = -5.626097564324014, hamiltonian_energy_error = 0.17970791556428267, max_hamiltonian_energy_error = 0.3784904472351762, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9175247193908059, log_density = 8.930704523743902, hamiltonian_energy = -6.63740507061847, hamiltonian_energy_error = 0.003981748136037133, max_hamiltonian_energy_error = 0.20759686739658623, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9857731235150936, log_density = 10.389709421273864, hamiltonian_energy = -8.055308363423208, hamiltonian_energy_error = 0.006175933345668128, max_hamiltonian_energy_error = -0.0856036188531828, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9132972254229988, log_density = 8.246056231959095, hamiltonian_energy = -6.618497501543472, hamiltonian_energy_error = 0.13562002764955583, max_hamiltonian_energy_error = -0.49974355283737015, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9926481119853929, log_density = 10.322789894294377, hamiltonian_energy = -5.653982062107921, hamiltonian_energy_error = -0.7516308163334342, max_hamiltonian_energy_error = -0.7516308163334342, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.709716757133013, log_density = 8.82321549064456, hamiltonian_energy = -6.411164359955241, hamiltonian_energy_error = 0.13797108244146994, max_hamiltonian_energy_error = 0.7438075816534608, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9810536509552252, log_density = 9.54043035410933, hamiltonian_energy = -6.538293020999008, hamiltonian_energy_error = -0.05517576346129083, max_hamiltonian_energy_error = -0.08630987933426582, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.949500779686678, log_density = 8.609935870459571, hamiltonian_energy = -6.787297382178532, hamiltonian_energy_error = 0.044866207967444005, max_hamiltonian_energy_error = 0.11641960787818917, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9676341153446614, log_density = 9.98190629003842, hamiltonian_energy = -6.747646183431561, hamiltonian_energy_error = -0.5034167395260791, max_hamiltonian_energy_error = -0.5034167395260791, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9878114184900865, log_density = 11.373006805267838, hamiltonian_energy = -8.816860949458082, hamiltonian_energy_error = -0.06514727429615519, max_hamiltonian_energy_error = -0.0959220546421129, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9278478243534705, log_density = 9.68500387563017, hamiltonian_energy = -9.026850204801681, hamiltonian_energy_error = 0.15958005569089728, max_hamiltonian_energy_error = 0.1656000319150639, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9991183349536567, log_density = 9.979958429277294, hamiltonian_energy = -8.623452824310284, hamiltonian_energy_error = -0.07654916452579208, max_hamiltonian_energy_error = -0.20463148023372035, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8783801500402968, log_density = 9.856094209203217, hamiltonian_energy = -6.857853525446569, hamiltonian_energy_error = 0.025652147271399528, max_hamiltonian_energy_error = 0.275630025855901, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9746152606680454, log_density = 9.411785985114076, hamiltonian_energy = -8.875776100383705, hamiltonian_energy_error = 0.02167705419479482, max_hamiltonian_energy_error = -0.22684116283396172, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8756351645065042, log_density = 9.616112639047321, hamiltonian_energy = -7.723037744116975, hamiltonian_energy_error = 0.26629697441335143, max_hamiltonian_energy_error = 0.355159036676886, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.982628229896637, log_density = 9.71809058056018, hamiltonian_energy = -8.177781288813556, hamiltonian_energy_error = -0.1934613120041906, max_hamiltonian_energy_error = -0.4218904018915044, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9967941202615884, log_density = 10.122817061534764, hamiltonian_energy = -9.180735108090648, hamiltonian_energy_error = -0.02263976967759973, max_hamiltonian_energy_error = -0.2978762625295843, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9867569673824192, log_density = 11.348820259070514, hamiltonian_energy = -9.263203423219158, hamiltonian_energy_error = -0.17416095726424885, max_hamiltonian_energy_error = -0.17416095726424885, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.73047221153533, log_density = 8.768207977517575, hamiltonian_energy = -5.385336944840633, hamiltonian_energy_error = 0.066341702212247, max_hamiltonian_energy_error = 0.4988748691001117, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9219331660527885, log_density = 4.43571015862779, hamiltonian_energy = -3.551998982740937, hamiltonian_energy_error = 0.0904859696026783, max_hamiltonian_energy_error = 0.13963091349372547, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.30030530290185825, log_density = 4.483469568158299, hamiltonian_energy = 3.1797382241357877, hamiltonian_energy_error = 1.1792613714528972, max_hamiltonian_energy_error = 3.361631772559991, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 5.516119573510599, hamiltonian_energy = -2.109300585927495, hamiltonian_energy_error = -0.09769236592717556, max_hamiltonian_energy_error = -0.9365825427532264, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9931611764514348, log_density = 8.838221600941754, hamiltonian_energy = -4.831363833211125, hamiltonian_energy_error = -0.7743070396047207, max_hamiltonian_energy_error = -0.9792887623040469, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9229487083115183, log_density = 7.361691317976879, hamiltonian_energy = -6.472725753334228, hamiltonian_energy_error = 0.044796175674409966, max_hamiltonian_energy_error = 0.1655605225584278, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8598828742015414, log_density = 7.731093552680578, hamiltonian_energy = -3.624022277671232, hamiltonian_energy_error = 0.1988938227247723, max_hamiltonian_energy_error = 0.4119716992376663, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9806912673770444, log_density = 9.362019683690207, hamiltonian_energy = -5.486566072474346, hamiltonian_energy_error = -0.1940631766557992, max_hamiltonian_energy_error = -0.1940631766557992, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8731266397663884, log_density = 8.47305550324932, hamiltonian_energy = -7.2964155810764195, hamiltonian_energy_error = 0.25783652925341105, max_hamiltonian_energy_error = 0.2661641539867947, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 8.893097640298013, hamiltonian_energy = -7.2691423331592375, hamiltonian_energy_error = -0.0335305525328895, max_hamiltonian_energy_error = -0.3748644030493331, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.749999151719877, hamiltonian_energy = -8.241396769372844, hamiltonian_energy_error = -0.07810110762391886, max_hamiltonian_energy_error = -0.26457140489081254, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 5.694083624216166, hamiltonian_energy = -3.9981289991188507, hamiltonian_energy_error = -0.30124828440351825, max_hamiltonian_energy_error = -0.7428320268276885, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9165034565555622, log_density = 7.537216347828814, hamiltonian_energy = -0.7171306347755788, hamiltonian_energy_error = -0.18021214241084849, max_hamiltonian_energy_error = -0.7253378676922715, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8969423732765067, log_density = 9.252210965877671, hamiltonian_energy = -4.805389951566677, hamiltonian_energy_error = -0.0895821586106722, max_hamiltonian_energy_error = 0.35440324751098196, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9425094074281998, log_density = 11.049626198135858, hamiltonian_energy = -7.656831380336829, hamiltonian_energy_error = -0.24556557313050753, max_hamiltonian_energy_error = -0.24556557313050753, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9570743667384033, log_density = 10.941030022349842, hamiltonian_energy = -9.79973813262642, hamiltonian_energy_error = -0.0889636454930205, max_hamiltonian_energy_error = 0.1242365325180188, tree_depth = 1, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9890774520605211, log_density = 9.564987689930827, hamiltonian_energy = -9.442114694745916, hamiltonian_energy_error = 0.0795388231856986, max_hamiltonian_energy_error = -0.11973607144779663, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9479045408244898, log_density = 11.273528944005404, hamiltonian_energy = -7.289905054229836, hamiltonian_energy_error = -0.14070488846454943, max_hamiltonian_energy_error = 0.2238368729901472, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7336702438683039, log_density = 10.869907189498464, hamiltonian_energy = -6.784614708154324, hamiltonian_energy_error = 0.3777560911929365, max_hamiltonian_energy_error = 0.4780837826213977, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9567497081324741, log_density = 10.428467693045864, hamiltonian_energy = -9.049061195679094, hamiltonian_energy_error = -0.09110613715554017, max_hamiltonian_energy_error = -0.12730716755566363, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9972307248662263, log_density = 11.301912539896325, hamiltonian_energy = -9.291170285951257, hamiltonian_energy_error = -0.014160928816776774, max_hamiltonian_energy_error = -0.04422133586733956, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8748975173912046, log_density = 10.20181075498288, hamiltonian_energy = -8.131904264216317, hamiltonian_energy_error = 0.09525622929424316, max_hamiltonian_energy_error = 0.19795743930908394, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9756590967015565, log_density = 9.128366322979458, hamiltonian_energy = -8.432546660328649, hamiltonian_energy_error = 0.0619598027571584, max_hamiltonian_energy_error = -0.07641913547095136, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9965654965145176, log_density = 10.093003803451813, hamiltonian_energy = -8.171349002754077, hamiltonian_energy_error = -0.06795517511449667, max_hamiltonian_energy_error = -0.15511241695719669, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.960819464040865, log_density = 8.336938047499046, hamiltonian_energy = -6.882168316648482, hamiltonian_energy_error = 0.17858757746515774, max_hamiltonian_energy_error = 0.17858757746515774, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9420750224763903, log_density = 6.425539578639317, hamiltonian_energy = -4.4404936683184015, hamiltonian_energy_error = 0.19197976363389202, max_hamiltonian_energy_error = -0.2063860753022837, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9919347504584346, log_density = 9.599687913224189, hamiltonian_energy = -5.275278572117166, hamiltonian_energy_error = -0.49573601197009776, max_hamiltonian_energy_error = -0.49573601197009776, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6456130342638583, log_density = 10.797302473148177, hamiltonian_energy = -4.742741825556774, hamiltonian_energy_error = -0.3813215792198221, max_hamiltonian_energy_error = 1.0402550020243666, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8552598434678585, log_density = 11.494897315654649, hamiltonian_energy = -9.07389561257399, hamiltonian_energy_error = 0.03607342557034521, max_hamiltonian_energy_error = 0.2687131317799345, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8404465226703822, log_density = 10.440391067787498, hamiltonian_energy = -8.404470952946223, hamiltonian_energy_error = 0.11606117333748855, max_hamiltonian_energy_error = 0.24770540433182475, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8168430457183544, log_density = 8.180880150370934, hamiltonian_energy = -5.7240814954549855, hamiltonian_energy_error = 0.24054943720398647, max_hamiltonian_energy_error = 0.4245455063923771, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9984932417134237, log_density = 8.275112083532733, hamiltonian_energy = -7.908371007421769, hamiltonian_energy_error = -0.02583526081040155, max_hamiltonian_energy_error = -0.16836568798044027, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9042399491119136, log_density = 5.249361620061368, hamiltonian_energy = -4.109625411597397, hamiltonian_energy_error = 0.25597951161872423, max_hamiltonian_energy_error = 0.2600713532369152, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.812446393911868, log_density = 2.920326855221269, hamiltonian_energy = 1.1031237639746356, hamiltonian_energy_error = 0.5075542869587908, max_hamiltonian_energy_error = 0.6906074854285973, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.8832406660021243, log_density = 6.900285186816866, hamiltonian_energy = 0.2817079736527326, hamiltonian_energy_error = -0.6205892862049831, max_hamiltonian_energy_error = -1.1284357930804276, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9632414227229723, log_density = 8.023930079959815, hamiltonian_energy = -5.058420050952863, hamiltonian_energy_error = -0.08884150952788872, max_hamiltonian_energy_error = -0.773508099913113, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7416847168221302, log_density = 5.520398516898599, hamiltonian_energy = -4.268551587583234, hamiltonian_energy_error = 0.42292306150052283, max_hamiltonian_energy_error = 0.42292306150052283, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9440795419472161, log_density = 4.784883331009292, hamiltonian_energy = -2.5563313406973633, hamiltonian_energy_error = 0.21674657500108507, max_hamiltonian_energy_error = -0.6558311986346306, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9888936496887608, log_density = 5.1016114417781075, hamiltonian_energy = -3.6202982246385202, hamiltonian_energy_error = 0.08093292699476429, max_hamiltonian_energy_error = -0.8549076808788341, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 11.340568831561646, hamiltonian_energy = -5.159584857117153, hamiltonian_energy_error = -1.0184527964718093, max_hamiltonian_energy_error = -1.0184527964718093, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9938321711768607, log_density = 11.87017885221989, hamiltonian_energy = -10.674121051235696, hamiltonian_energy_error = -0.01887812128203592, max_hamiltonian_energy_error = 0.04100411892104816, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9451571159097867, log_density = 11.205838156924084, hamiltonian_energy = -11.087116376650744, hamiltonian_energy_error = 0.08508723081690484, max_hamiltonian_energy_error = 0.08508723081690484, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8132227984281339, log_density = 7.12930237012951, hamiltonian_energy = -6.004982043328189, hamiltonian_energy_error = 0.41677433994191126, max_hamiltonian_energy_error = 0.41677433994191126, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8855142871952764, log_density = 6.415094849813546, hamiltonian_energy = 0.2786983701927914, hamiltonian_energy_error = -0.9690050211865975, max_hamiltonian_energy_error = -0.9690050211865975, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9215818647189655, log_density = 7.075631560811904, hamiltonian_energy = -4.802896799739752, hamiltonian_energy_error = 0.07309751510921281, max_hamiltonian_energy_error = 0.15549005382080594, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9597029297149109, log_density = 6.252542239065688, hamiltonian_energy = -4.54603504271812, hamiltonian_energy_error = -0.0019545713082989025, max_hamiltonian_energy_error = 0.16486242931076323, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8709665506445112, log_density = 6.197712401839803, hamiltonian_energy = -4.712194970589352, hamiltonian_energy_error = 0.048761755999896295, max_hamiltonian_energy_error = 0.33214066976230505, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.975317906277767, log_density = 7.8893635287704615, hamiltonian_energy = -3.207839120253384, hamiltonian_energy_error = -0.06530776718064235, max_hamiltonian_energy_error = 0.11690040330970497, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9752454529385972, log_density = 8.804002236813652, hamiltonian_energy = -5.968083629451465, hamiltonian_energy_error = 0.02048506979527076, max_hamiltonian_energy_error = -0.14275029844753817, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9015384327722321, log_density = 8.793680457474565, hamiltonian_energy = -6.555401277397058, hamiltonian_energy_error = 0.01699286433924385, max_hamiltonian_energy_error = 0.6710124809597069, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9563045747561563, log_density = 9.6817143485448, hamiltonian_energy = -7.169043084986775, hamiltonian_energy_error = 0.07409533576913141, max_hamiltonian_energy_error = -0.3869919648506812, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.64390309341779, hamiltonian_energy = -9.103033174236863, hamiltonian_energy_error = -0.10948695803931585, max_hamiltonian_energy_error = -0.17990259352452043, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7836971072406208, log_density = 6.231640612459037, hamiltonian_energy = -4.704976610100735, hamiltonian_energy_error = 0.359586683659435, max_hamiltonian_energy_error = 0.359586683659435, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.923706059383561, log_density = 3.5143184976354434, hamiltonian_energy = -2.5125327308000287, hamiltonian_energy_error = 0.25991363811077806, max_hamiltonian_energy_error = -0.27974100024825566, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9754676221482289, log_density = 8.417774368513705, hamiltonian_energy = -0.9116370693610136, hamiltonian_energy_error = -0.24135273836914006, max_hamiltonian_energy_error = -0.3781013139976901, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.072235672696557, hamiltonian_energy = -7.985943523675296, hamiltonian_energy_error = -0.1728621460877271, max_hamiltonian_energy_error = -0.1728621460877271, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9850720083491289, log_density = 10.106367130073604, hamiltonian_energy = -8.33404057286168, hamiltonian_energy_error = -0.07856963738617928, max_hamiltonian_energy_error = -0.07856963738617928, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.928678360080185, log_density = 9.585620570000478, hamiltonian_energy = -7.410979988914491, hamiltonian_energy_error = 0.023799177227814994, max_hamiltonian_energy_error = 0.15953249671773495, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8170163331055368, log_density = 8.395176625151176, hamiltonian_energy = -7.5625639016196295, hamiltonian_energy_error = 0.2948300607076142, max_hamiltonian_energy_error = 0.347586546072292, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.956861078753477, log_density = 4.89821402436726, hamiltonian_energy = -3.738024198670331, hamiltonian_energy_error = 0.06982107095064283, max_hamiltonian_energy_error = -0.18519132228364477, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.609866979663166, log_density = 7.183219049859186, hamiltonian_energy = -2.582218625777716, hamiltonian_energy_error = 0.5555817992006657, max_hamiltonian_energy_error = 0.8293290283155699, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8374909361851971, log_density = 9.13903620423745, hamiltonian_energy = -5.0045356000851715, hamiltonian_energy_error = -0.2771048315613065, max_hamiltonian_energy_error = 0.9336644842634527, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 10.220095257155021, hamiltonian_energy = -8.606260323012307, hamiltonian_energy_error = -0.13776617901310217, max_hamiltonian_energy_error = -0.20315149158376045, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9989979146459831, log_density = 11.793227700334123, hamiltonian_energy = -9.838617221840906, hamiltonian_energy_error = -0.14792115645853343, max_hamiltonian_energy_error = -0.14792115645853343, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9447359599841985, log_density = 10.996753566019855, hamiltonian_energy = -10.2807544094559, hamiltonian_energy_error = 0.061112166104450694, max_hamiltonian_energy_error = 0.09413494856642757, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9475348402417564, log_density = 9.803342159888969, hamiltonian_energy = -9.042695648247333, hamiltonian_energy_error = 0.040305373249193366, max_hamiltonian_energy_error = 0.10068158928386595, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9016102926019821, log_density = 8.785473390058456, hamiltonian_energy = -3.030829326062194, hamiltonian_energy_error = -0.18405322807994917, max_hamiltonian_energy_error = 0.2705012810829097, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9312954872838469, log_density = 9.222673782111672, hamiltonian_energy = -7.1129505094393926, hamiltonian_energy_error = -0.029575218126085545, max_hamiltonian_energy_error = -0.7543708334678465, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.98049063699679, log_density = 9.396427566860618, hamiltonian_energy = -7.844812808194067, hamiltonian_energy_error = -0.08176935162252086, max_hamiltonian_energy_error = 0.12398539152614418, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9655541588487385, log_density = 8.493277968791293, hamiltonian_energy = -8.20149430421414, hamiltonian_energy_error = 0.07130040418766725, max_hamiltonian_energy_error = 0.08580782479678994, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8123682345923654, log_density = 9.08893710062269, hamiltonian_energy = -5.5260742503775635, hamiltonian_energy_error = 0.41069062856312755, max_hamiltonian_energy_error = -0.49554898133838776, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8355406295017895, log_density = 11.25777344519039, hamiltonian_energy = -6.937160341165878, hamiltonian_energy_error = -0.2246138351164415, max_hamiltonian_energy_error = 0.32091050664948373, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7299320434186723, log_density = 10.274542305221178, hamiltonian_energy = -8.105231200941775, hamiltonian_energy_error = 0.42403091176093, max_hamiltonian_energy_error = 0.491286566947565, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7438549581205068, log_density = 6.184075947565004, hamiltonian_energy = -1.6978699627445275, hamiltonian_energy_error = 0.3724621448304761, max_hamiltonian_energy_error = 0.4491373777959029, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 8.606748233236686, hamiltonian_energy = -5.541325245586508, hamiltonian_energy_error = -0.2752681048012038, max_hamiltonian_energy_error = -0.5752499101951951, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 10.607301707256193, hamiltonian_energy = -8.037471521320668, hamiltonian_energy_error = -0.4696405704218396, max_hamiltonian_energy_error = -0.4696405704218396, tree_depth = 2, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9181628298183788, log_density = 9.8474775410191, hamiltonian_energy = -8.683142097609064, hamiltonian_energy_error = 0.08663364322974765, max_hamiltonian_energy_error = 0.14154348716130905, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9877365552759746, log_density = 10.757668104806076, hamiltonian_energy = -8.524895528506827, hamiltonian_energy_error = -0.09918247016896942, max_hamiltonian_energy_error = -0.09918247016896942, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9175367688788825, log_density = 10.053273250545516, hamiltonian_energy = -8.79625128390371, hamiltonian_energy_error = 0.08888254836952214, max_hamiltonian_energy_error = 0.1725703475569773, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9919705313437934, log_density = 11.7792255846993, hamiltonian_energy = -9.0809068205156, hamiltonian_energy_error = -0.09599922417123352, max_hamiltonian_energy_error = -0.09599922417123352, tree_depth = 4, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9740524184726878, log_density = 11.612584990874888, hamiltonian_energy = -11.317764162533994, hamiltonian_energy_error = 0.03458651091064269, max_hamiltonian_energy_error = 0.04906600915272108, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9823357295350404, log_density = 11.707849781815307, hamiltonian_energy = -10.82014328333862, hamiltonian_energy_error = -0.013025398210015027, max_hamiltonian_energy_error = 0.04543662117985647, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8849013352860969, log_density = 10.0815403813952, hamiltonian_energy = -9.653188224965449, hamiltonian_energy_error = 0.1745096351028277, max_hamiltonian_energy_error = 0.1745096351028277, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7694357948234989, log_density = 8.138736899848297, hamiltonian_energy = -5.545094834375512, hamiltonian_energy_error = 0.23690527818430418, max_hamiltonian_energy_error = 0.46079442384928715, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9868912821492241, log_density = 6.881698778334403, hamiltonian_energy = -5.011839098587549, hamiltonian_energy_error = 0.01842968767408415, max_hamiltonian_energy_error = -0.32818890295673064, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9589233328884585, log_density = 8.498637735299676, hamiltonian_energy = -4.77697195130667, hamiltonian_energy_error = -0.09131634468448091, max_hamiltonian_energy_error = -0.3555002861244443, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7736398296897887, log_density = 4.864762538320981, hamiltonian_energy = -3.2308028491676004, hamiltonian_energy_error = 0.5921798956476079, max_hamiltonian_energy_error = 0.5921798956476079, tree_depth = 3, numerical_error = false, step_size = 0.13422235023200896, nom_step_size = 0.13422235023200896, is_adapt = false)])","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Inspect posterior distribution over hyperparameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"hypers = map(unpack, samples);\nh_l1 = histogram(getindex.(hypers, :l1); label=\"l1\");\nh_l2 = histogram(getindex.(hypers, :l2); label=\"l2\");\nh_s1 = histogram(getindex.(hypers, :s1); label=\"s1\");\nh_s2 = histogram(getindex.(hypers, :s2); label=\"s2\");\nplot(h_l1, h_l2, h_s1, h_s2; layout=(2, 2))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As expected, the sampler converges to the posterior distribution quickly. One could combine this code with that from the previous sections to make predictions under the posterior over the hyperparameters.","category":"page"},{"location":"examples/getting_started/#Conclusion","page":"Getting Started","title":"Conclusion","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you now know how to fit GPs using Stheno.jl, and to investigate their posterior distributions. It's also straightforward to utilise Stheno.jl inside probabilistic programming frameworks like Soss.jl and Turing.jl (see examples folder).","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Stheno.jl","page":"Home","title":"Stheno.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Stheno.jl is a package for probabilistic programming with Gaussian processes.","category":"page"},{"location":"internals/#Interfaces","page":"Internals","title":"Interfaces","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The primary objects in Stheno are some special subtypes of AbstractGP. There are three primary concrete subtypes of AbstractGP:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP: an atomic Gaussian process given by wrapping an AbstractGP.\nCompositeGP: a Gaussian process composed of other WrappedGPs and CompositeGPs, whose properties are determined recursively from the GPs of which it is composed.\nGaussianProcessProbabilisticProgramme / GPPP: a Gaussian process comprising WrappedGPs and CompositeGPs. This is the primary piece of functionality that users should interact with.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This documentation provides the information necessary to understand the internals of Stheno, and to extend it with custom functionality.","category":"page"},{"location":"internals/#AbstractGP","page":"Internals","title":"AbstractGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP and CompositeGP implement the AbstractGPs.jl API. Please refer to the AbstractGPs.jl docs for more info on this.","category":"page"},{"location":"internals/#diag-methods","page":"Internals","title":"diag methods","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It is crucial for pseudo-point methods, and for the computation of marginal statistics at a reasonable scale, to be able to compute the diagonal of a given covariance matrix in linear time in the size of its inputs. This, in turn, necessitates that the diagonal of a given cross-covariance matrix can also be computed efficiently as the evaluation of covariance matrices often rely on the evaluation of cross-covariance matrices. As such, we have the following functions in addition to the AbstractGPs API implemented for WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Function Brief description\nvar(f, x) diag(cov(f, x))\nvar(f, x, x′) diag(cov(f, x, x′))\nvar(f, f′, x, x′) diag(cov(f, f′, x, x′))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The second and third rows of the table only make sense when length(x) == length(x′), of course.","category":"page"},{"location":"internals/#WrappedGP","page":"Internals","title":"WrappedGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"We can construct a WrappedGP in the following manner:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = wrap(GP(m, k), gpc)\n","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"where m is its MeanFunction, k its Kernel. gpc is a GPC object that handles some book-keeping, and is discussed in more depth below.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The AbstractGP interface is implemented for WrappedGPs in terms of the AbstractGP that they wrap. So if you want a particular behaviour, just make sure that the AbstractGP that you wrap has the functionality you want.","category":"page"},{"location":"internals/#Aside:-Example-Kernel-implementation","page":"Internals","title":"Aside: Example Kernel implementation","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It's straightforward to implement a new kernel yourself: simply following the instructions in KernelFunctions.jl and it'll work fine with GPs in Stheno.jl.","category":"page"},{"location":"internals/#GPC","page":"Internals","title":"GPC","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"This book-keeping object doesn't matter from a user's perspective but, unfortunately, we currently expose it to users. Fortunately, it's straightforward to work with. Say you wish to construct a collection of processes:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS WON'T WORK\nf = GP(mf, kf)\ng = GP(mg, kg)\nh = f + g\n# THIS WON'T WORK","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"You should write","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS GOOD. PLEASE DO THIS\ngpc = GPC()\nf = wrap(GP(mf, kf), gpc)\ng = wrap(GP(mg, kg), gpc)\nh = f + g\n# THIS IS GOOD. PLEASE DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The rule is simple: when constructing GPs that you plan to make interact later in your program, construct them using the same gpc object. For example, DON'T do the following:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS BAD. PLEASE DON'T DO THIS\nf = wrap(GP(mf, kf), GPC())\ng = wrap(GP(mg, kg), GPC())\nh = f + g\n# THIS IS BAD. PLEASE DON'T DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The mistake here is to construct a separate GPC object for each GP. Hopefully, the code errors, but might yield incorrect results.","category":"page"},{"location":"internals/#CompositeGP","page":"Internals","title":"CompositeGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"CompositeGPs are constructed as affine transformations of CompositeGPs and GPs. We describe the implemented transformations below.","category":"page"},{"location":"internals/#Addition","page":"Internals","title":"Addition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Given AbstractGPs f and g, we define","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f + g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"to be the CompositeGP sastisfying h(x) = f(x) + g(x) for all x.","category":"page"},{"location":"internals/#Multiplication","page":"Internals","title":"Multiplication","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Multiplication of AbstractGPs is undefined since the product of two Gaussian random variables is not itself Gaussian. However, we can scale an AbstractGP by either a constant or (deterministic) function.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = c * f\nh = sin * f","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"will both work, and produce the result that h(x) = c * f(x) or h(x) = sin(x) * f(x).","category":"page"},{"location":"internals/#Composition","page":"Internals","title":"Composition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f ∘ g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for some deterministic function g is the composition of f with g. i.e. h(x) = f(g(x)).","category":"page"},{"location":"internals/#cross","page":"Internals","title":"cross","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = cross([f, g])","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for WrappedGPs and CompositeGPs f and g. Think of cross as having stacked f and g together, so that you can work with their joint.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"For example, if you wanted to sample jointly from f and g at locations x_f and x_g, you could write something like","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"fg = cross([f, g])\nx_fg = BlockData([x_f, x_g])\nrand(fg(x_fg, 1e-6))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This particular function isn't part of the user-facing API because it isn't generally needed. It is, however, used extensively in the implementation of the GaussianProcessProbabilisticProgramme.","category":"page"},{"location":"internals/#GPPP","page":"Internals","title":"GPPP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The GaussianProcessProbabilisticProgramme is another AbstractGP which enables provides a thin layer of convenience functionality on top of WrappedGPs and CompositeGPs, and is the primary way in which it is intended that users will interact with this package.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP like this","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"is equivalent to manually constructing a GPPP using WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"gpc = GPC()\nf1 = wrap(GP(SEKernel()), gpc)\nf2 = wrap(GP(SEKernel()), gpc)\nf3 = f1 + f2\nf = Stheno.GPPP((f1=f1, f2=f2, f3=f3), gpc)","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"If you take a look at the gaussian_process_probabilistic_programming.jl source, you'll see that it's essentially just the above, and an implementation of the AbstractGPs API on top of a GPPP.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP is a single GP on an extended input domain: (Image: )","category":"page"}]
}
