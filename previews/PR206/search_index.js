var documenterSearchIndex = {"docs":
[{"location":"api/#Public-API","page":"API","title":"Public API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = Stheno","category":"page"},{"location":"api/#GPPP","page":"API","title":"GPPP","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Core functionality for working with GPPPs.","category":"page"},{"location":"api/","page":"API","title":"API","text":"@gppp\nGPPPInput\nBlockData\nsplit","category":"page"},{"location":"api/#Stheno.@gppp","page":"API","title":"Stheno.@gppp","text":"@gppp(model_expression)\n\nConstruct a GaussianProcessProbabilisticProgramme (GPPP) from a code snippet.\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = GPPPInput(:f3, randn(5))\n\ny = rand(f(x, 0.1))\n\nlogpdf(f(x, 0.1), y) ≈ elbo(f(x, 0.1), y, f(x, 1e-9))\n\n# output\n\ntrue\n\n\n\n\n\n","category":"macro"},{"location":"api/#Stheno.GPPPInput","page":"API","title":"Stheno.GPPPInput","text":"GPPPInput(p, x::AbstractVector)\n\nAn collection of inputs for a GPPP. p indicates which process the vector x should be extracted from. The required type of p is determined by the type of the keys in the GPPP indexed.\n\njulia> x = [1.0, 1.5, 0.3];\n\njulia> v = GPPPInput(:a, x)\n3-element GPPPInput{Symbol, Float64, Vector{Float64}}:\n (:a, 1.0)\n (:a, 1.5)\n (:a, 0.3)\n\njulia> v isa AbstractVector{Tuple{Symbol, Float64}}\ntrue\n\njulia> v == map(x_ -> (:a, x_), x)\ntrue\n\n\n\n\n\n","category":"type"},{"location":"api/#Stheno.BlockData","page":"API","title":"Stheno.BlockData","text":"BlockData{T, TV<:AbstractVector{T}, TX<:AbstractVector{TV}} <: AbstractVector{T}\n\nA strictly ordered collection of AbstractVectors, representing a ragged array of data.\n\nVery useful when working with GPPPs. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\n# Specify a `BlockData` set that can be used to index into\n# the `f2` and `f3` processes in `f`.\nx = BlockData(\n    GPPPInput(:f2, randn(4)),\n    GPPPINput(:f3, randn(3)),\n)\n\n# Index into `f` at the input.\nf(x)\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.split","page":"API","title":"Base.split","text":"Base.split(x::BlockData, Y::AbstractVecOrMat)\n\nConvenience functionality to make working with the output of operations on GPPPs easier. Splits up the rows of Y according to the sizes of the data in x.\n\njulia> Y = vcat(randn(5, 3), randn(4, 3));\n\njulia> x = BlockData(randn(5), randn(4));\n\njulia> Y1, Y2 = split(x, Y);\n\njulia> Y1 == Y[1:5, :]\ntrue\n\njulia> Y2 == Y[6:end, :]\ntrue\n\nWorks with any BlockData, so blocks can e.g. be GPPPInputs. This is particularly helpful for working with the output from rand and marginals from a GPPP indexed at BlockData. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = BlockData(GPPPInput(:f2, randn(3)), GPPPInput(:f3, randn(4)))\ny = rand(f(x))\ny2, y3 = split(x, y)\n\nFunctionality also works with any AbstractVector.\n\n\n\n\n\n","category":"function"},{"location":"api/#Building-GPPPs","page":"API","title":"Building GPPPs","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"If in doubt about what any of these transformations can do, play around with them!","category":"page"},{"location":"api/","page":"API","title":"API","text":"+\n*\nstretch\nperiodic\nshift\nselect","category":"page"},{"location":"api/#Base.:+","page":"API","title":"Base.:+","text":"+(fa::AbstractGP, fb::AbstractGP)\n\nProduces an AbstractGP f satisfying f(x) = fa(x) + fb(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.:*","page":"API","title":"Base.:*","text":"*(f, g::AbstractGP)\n\nProduce an AbstractGP h satisfying to h(x) = f(x) * g(x), for some deterministic function f.\n\nIf f isa Real, then h(x) = f * g(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.stretch","page":"API","title":"Stheno.stretch","text":"stretch(f::AbstractGP, l::Union{AbstractVecOrMat{<:Real}, Real})\n\nThis is the primary mechanism by which to introduce length scales to your programme.\n\nIf l isa Real or l isa AbstractMatrix{<:Real}, stretch(f, l)(x) == f(l * x) for any input x. In the l isa Real case, this is equivalent to scaling the length scale by 1 / l.\n\nl isa AbstractVector{<:Real} is equivalent to stretch(f, Diagonal(l)).\n\nEquivalent to f ∘ Stretch(l).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.periodic","page":"API","title":"Stheno.periodic","text":"periodic(g::AbstractGP, f::Real)\n\nProduce an AbstractGP with period f.\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.shift","page":"API","title":"Stheno.shift","text":"shift(f::AbstractGP, a::Real)\nshift(f::AbstractGP, a::AbstractVector{<:Real})\n\nReturns the GP g given by g(x) = f(x - a)\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.select","page":"API","title":"Stheno.select","text":"select(f::AbstractGP, idx)\n\nSelect the dimensions of the input to f given by idx.\n\n\n\n\n\n","category":"function"},{"location":"input_types/#Input-Types","page":"Input Types","title":"Input Types","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Stheno enables the user to handle any type of input domain they wish and provides a common API that users must implement when considering a new way of representing input data to ensure that the package knows how to handle them appropriately.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"This interface has now been adopted throughout the JuliaGaussianProcesses ecosystem.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Discussed below is this interface's core assumptions, a detailed account of a couple of important concrete input types.","category":"page"},{"location":"input_types/#The-Central-Assumption","page":"Input Types","title":"The Central Assumption","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"The central assumption made in all user-facing and internal functions is this: when a collection of inputs are required, they subtype AbstractVector. For example, x isa AbstractVector when indexing into a GP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f(x, σ²)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"or computing the covariance matrix associated with a kernel:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"kernelmatrix(SqExponentialKernel(), x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When computing the cross-covariance matrix between two GPs","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"cov(f, g, x_f, x_g)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_f and x_g must be AbstractVectors. All other operations involving collections of inputs have the same restrictions. Always AbstractVectors.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"For example, this means that when handling multi-dimensional inputs stored in a Matrix they must be wrapped so that the package knows to treat them as a vector — more on this in below in D-dimensional Euclidean Spaces.","category":"page"},{"location":"input_types/#Dimensional-Euclidean-Space","page":"Input Types","title":"1-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When constructing a GP whose domain is the real-line, for example when using a GP to solve some kind of time-series problem, it is sufficient to work with Vector{<:Real}s of inputs. As such, the following is completely valid:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"using Stheno: GPC\nf = wrap(GP(SqExponentialKernel()), GPC())\nx = randn(10)\nf(x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"It is also possible to work with other AbstractArrays that represent a vector of 1-dimensional points, e.g.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = range(-5.0, 5.0; length=100)\nf(x)","category":"page"},{"location":"input_types/#D-Dimensional-Euclidean-Space","page":"Input Types","title":"D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Many applications of interest involve more than a single input-dimension, such as spatio-temporal modeling or Machine Learning tasks. For these cases, we provide ColVecs <: AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"X_data = randn(5, 100)\nX = ColVecs(X_data)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"tells Stheno that it should treat each column of X_data as a vector-valued input. Phrased differently, X is an AbstractVector{T} where T <: Vector{<:Real}, which stores its elements in memory as a dense matrix. This approach has the advantage of making it completely explicit how Stheno treats a matrix of data, and also simplifies quite a bit of the internal machinery, as all vectors of inputs can be assumed to be a subtype of AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If, on the other hand, each row of X_data corresponds to a vector-valued input, use RowVecs(X_data).","category":"page"},{"location":"input_types/#Structure-in-D-Dimensional-Euclidean-Space","page":"Input Types","title":"Structure in D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Consider a rectilinear grid of points in D-dimensional Euclidean space. Such grids of points can be represented in a more memory-efficient manner than can arbitrarily locate sets of points. Moreover, this structure can be exploited to accelerate inference for certain types of problems dramatically. Other such examples exist e.g., uniform grids in N-dimensions, and can be exploited to more efficiently represent input data and to accelerate inference.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Work to exploit these kinds of structures is on-going at the time of writing and will be documented before merging.","category":"page"},{"location":"input_types/#GPPPInput-and-BlockData","page":"Input Types","title":"GPPPInput and BlockData","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"A GPPPInput is a special kind of AbstractVector, specifically designed for GPPPs. Given a GPPP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"a GPPPInput like","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_ = randn(5)\nx = GPPPInput(:f3, x_)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"applied to f","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"fx = f(x, 0.1)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"constructs a FiniteGP comprising f3 at x_. GPPPInput(:f2, x_) and GPPPInput(:f1, x_) are the analogues for f1 and f2.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If you wish to refer to multiple processes in f at the same time, use a BlockData. For example","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = BlockData(GPPPInput(:f2, x_), GPPPInput(:f3, x_))","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"would pull out a 10-dimensional FiniteGP, the first 5 dimensions being f2 at x_, the last 5 dimensions being f3 at x_.","category":"page"},{"location":"kernel_design/#Kernel-Design","page":"Kernel Design","title":"Kernel Design","text":"","category":"section"},{"location":"kernel_design/","page":"Kernel Design","title":"Kernel Design","text":"Please refer to KernelFunctions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"EditURL = \"https://github.com/JuliaGaussianProcesses/Stheno.jl/blob/master/examples/getting_started/script.jl\"","category":"page"},{"location":"examples/getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Here we document how to do some basic stuff, including learning and inference in kernel parameters, with Stheno.jl. To do this, we that makes use of a variety of packages from the Julia ecosystem. In particular, we'll make use of","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl to perform Bayesian inference in our model parameters,\nOptim.jl for point-estimates of our model parameters,\nParameterHandling.jl to make it easy to work with our model's parameters, and to ensure that it plays nicely with Optim and AdvancedHMC,\nZygote.jl to compute gradients.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This guide assumes that you know roughly what's going on conceptually with GPs. If you're new to Gaussian processes, an excellent introduction can be found in either this video lecture or this one.","category":"page"},{"location":"examples/getting_started/#Exact-Inference-in-a-GP-in-2-Minutes","page":"Getting Started","title":"Exact Inference in a GP in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This is only a slightly more interesting version of the first example on the README. It's slightly more interesting in that we give the kernels some learnable parameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Import the packages we'll need for this bit of the demo.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AbstractGPs\nusing LinearAlgebra\nusing Stheno\nusing Plots","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Short length-scale and small variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l1 = 0.4\ns1 = 0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Long length-scale and larger variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l2 = 5.0\ns2 = 1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Specify a GaussianProcessProbabilisticProgramme object, which is itself a GP built from other GPs.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f = @gppp let\n    f1 = s1 * stretch(GP(Matern52Kernel()), 1 / l1)\n    f2 = s2 * stretch(GP(SEKernel()), 1 / l2)\n    f3 = f1 + f2\nend;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Generate a sample from f3, one of the processes in f, at some random input locations. Add some iid observation noise, with zero-mean and variance 0.05.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"const x = GPPPInput(:f3, collect(range(-5.0, 5.0; length=100)));\nσ²_n = 0.02;\nfx = f(x, σ²_n);\nconst y = rand(fx);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Compute the log marginal likelihood of this observation, just because we can.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"logpdf(fx, y)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"19.812515575231544","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"fx should be thought of as \"f at x\", and is just as a multivariate Normal distribution, with zero mean and covariance matrix","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"heatmap(cov(f, x) + σ²_n * I)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As such samples can be drawn from it, and the log probability any particular value under it can be computed, in the same way that you would an MvNormal from Distributions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can visualise x and y with Plots.jl","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"plt = plot();\nscatter!(plt, x.x, y; color=:red, label=\"\");\ndisplay(plt)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"It's straightforward to compute the posterior over f:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior = posterior(fx, y);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior is another GP, the posterior over f given noisy observations y at inputs x.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The plotting recipes from AbstractGPs.jl can be utilised to easily print whichever component of the GPPP is needed.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"x_plot = range(-7.0, 7.0; length=1000);\nxp = GPPPInput(:f3, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp);\n    ribbon_scale=3, label=\"\", color=:blue, fillalpha=0.2, linewidth=2,\n)\nplot!(\n    plt, x_plot, rand(f_posterior(xp, 1e-9), 10);\n    samples=10, markersize=1, alpha=0.3, label=\"\", color=:blue,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you've built a simple GP probabilistic programme, performed inference in it, and looked at the posterior. We've only looked at one component of it though – we could look at others. Consider f2:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"xp2 = GPPPInput(:f2, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp2);\n    ribbon_scale=3, label=\"\", color=:red, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior(xp2, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:red,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-NelderMead-in-2-Minutes","page":"Getting Started","title":"Fit a GP with NelderMead in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Stheno.jl is slightly unusual in that it declines to provide a fit or train function. Why is this? In short, because there's really no need – the ecosystem now contains everything that is needed to easily do this yourself. By declining to insist on an interface, Stheno.jl is able to interact with a wide array of tools, that you can use in whichever way you please.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Optim requires that you provide an objective function with a single Vector{<:Real} parameter for most of its optimisers. We'll use ParameterHandling.jl to build one of these in a way that doesn't involve manually writing code to convert between a structured, human-readable, representation of our parameters (in a NamedTuple) and a Vector{Float64}.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"First, we'll put the model from before into a function:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function build_model(θ::NamedTuple)\n    return @gppp let\n        f1 = θ.s1 * stretch(GP(SEKernel()), 1 / θ.l1)\n        f2 = θ.s2 * stretch(GP(SEKernel()), 1 / θ.l2)\n        f3 = f1 + f2\n    end\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"build_model (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've assumed that the parameters will be provided as a NamedTuple, so let's build one and check that the model can be constructed:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\n\nθ = (\n    # Short length-scale and small variance.\n    l1 = positive(0.4),\n    s1 = positive(0.2),\n\n    # Long length-scale and larger variance.\n    l2 = positive(5.0),\n    s2 = positive(1.0),\n\n    # Observation noise variance -- we'll be learning this as well.\n    s_noise = positive(0.1),\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(l1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-0.9162907691270586, Bijectors.Exp{0}(), 1.4901161193847656e-8), s1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.6094379869399091, Bijectors.Exp{0}(), 1.4901161193847656e-8), l2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(1.6094379094538682, Bijectors.Exp{0}(), 1.4901161193847656e-8), s2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.490116130486996e-8, Bijectors.Exp{0}(), 1.4901161193847656e-8), s_noise = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-2.3025852420056685, Bijectors.Exp{0}(), 1.4901161193847656e-8))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've used ParameterHandling.jls positive constraint to ensure that all of the parameters remain positive during optimisation. Note that there's no magic here, and Optim knows nothing about positive. Rather, ParameterHandling knows how to make sure that Optim will optimise the log of the parameters which we want to be positive.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can make this happen with the following:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\nusing ParameterHandling: value, flatten\n\nθ_flat_init, unflatten = flatten(θ);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Concrete types used for clarity only.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"unpack = value ∘ unflatten;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now easily define a function which accepts the flat form of the parameters, and return the negative log marginal likelihood (nlml) of the parameters θ:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function nlml(θ::NamedTuple)\n    f = build_model(θ)\n    return -logpdf(f(x, θ.s_noise + 1e-6), y)\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"nlml (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can use any gradient-free optimisation technique from Optim.jl to find the parameters whose negative log marginal likelihood is locally minimal:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Optim\nresults = Optim.optimize(\n    nlml ∘ unpack,\n    θ_flat_init + randn(length(θ_flat_init)),\n    NelderMead(),\n)\nθ_opt = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Note that we just added some noise to the initial values to make the optimisation more interesting.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now use this to construct the posterior GP and look at the posterior in comparison to the true posterior with the known hyperparameters","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_opt = build_model(θ_opt);\nf_posterior_opt = posterior(f_opt(x, θ_opt.s_noise), y);\nms_opt = marginals(f_posterior_opt(xp));\nplot!(\n    plt, x_plot, mean.(ms_opt);\n    ribbon=3std.(ms_opt), label=\"\", color=:green, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_opt(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:green,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Of course, the exact posterior has not been recovered because the exact hyperparameters cannot be expected to be recovered given a finite amount of data over a finite width window.","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-BFGS-in-2-minutes","page":"Getting Started","title":"Fit a GP with BFGS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The BFGS algorithm is generally the preferred choice when optimising the hyperparameters of fairly simple GPs. It requires access to the gradient of our nlml function, which can be straightforwardly obtained via reverse-mode algorithmic differentiation, which is provided by Zygote.jl:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Zygote: gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This will probably take a while to get going as Zygote needs to compile.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"results = Optim.optimize(\n    nlml ∘ unpack,\n    θ->gradient(nlml ∘ unpack, θ)[1],\n    θ_flat_init + 0.1 * randn(length(θ_flat_init)),\n    BFGS(),\n    Optim.Options(\n        show_trace=true,\n    );\n    inplace=false,\n)\nθ_bfgs = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Iter     Function value   Gradient norm \n     0     1.063958e+01     3.163925e+01\n * time: 0.0295870304107666\n     1    -6.078526e+00     2.402487e+01\n * time: 1.745548963546753\n     2    -1.063276e+01     2.069252e+01\n * time: 1.7708768844604492\n     3    -1.306618e+01     1.836866e+01\n * time: 1.7866699695587158\n     4    -2.200627e+01     4.093200e+00\n * time: 1.839735984802246\n     5    -2.287091e+01     3.417688e+00\n * time: 1.8538529872894287\n     6    -2.343082e+01     1.048242e+00\n * time: 1.8677740097045898\n     7    -2.378367e+01     1.393659e+00\n * time: 1.882093906402588\n     8    -2.414435e+01     1.888821e+00\n * time: 1.9058759212493896\n     9    -2.428029e+01     3.979523e-01\n * time: 1.9273350238800049\n    10    -2.429173e+01     2.970826e-01\n * time: 1.9489710330963135\n    11    -2.430192e+01     1.859780e-01\n * time: 1.9931209087371826\n    12    -2.430915e+01     1.901235e-01\n * time: 2.0146069526672363\n    13    -2.431206e+01     1.550781e-01\n * time: 2.03568696975708\n    14    -2.431325e+01     6.398078e-02\n * time: 2.0565109252929688\n    15    -2.431378e+01     4.601421e-02\n * time: 2.077124834060669\n    16    -2.431399e+01     2.855392e-02\n * time: 2.097853899002075\n    17    -2.431408e+01     2.741343e-02\n * time: 2.1191229820251465\n    18    -2.431412e+01     1.256891e-02\n * time: 2.1541268825531006\n    19    -2.431414e+01     1.208009e-02\n * time: 2.1750898361206055\n    20    -2.431414e+01     4.631005e-03\n * time: 2.196014881134033\n    21    -2.431414e+01     4.884870e-03\n * time: 2.2172129154205322\n    22    -2.431414e+01     1.597116e-03\n * time: 2.238219976425171\n    23    -2.431415e+01     1.838620e-03\n * time: 2.258870840072632\n    24    -2.431415e+01     5.485263e-04\n * time: 2.2908358573913574\n    25    -2.431415e+01     6.550702e-04\n * time: 2.3115968704223633\n    26    -2.431415e+01     1.959432e-04\n * time: 2.332986831665039\n    27    -2.431415e+01     2.326716e-04\n * time: 2.3561599254608154\n    28    -2.431415e+01     7.176391e-05\n * time: 2.376847982406616\n    29    -2.431415e+01     8.417955e-05\n * time: 2.3977580070495605\n    30    -2.431415e+01     2.625277e-05\n * time: 2.4304959774017334\n    31    -2.431415e+01     3.072393e-05\n * time: 2.4512109756469727\n    32    -2.431415e+01     9.548316e-06\n * time: 2.4721529483795166\n    33    -2.431415e+01     1.121577e-05\n * time: 2.4929769039154053\n    34    -2.431415e+01     3.469051e-06\n * time: 2.513701915740967\n    35    -2.431415e+01     4.087960e-06\n * time: 2.534885883331299\n    36    -2.431415e+01     1.263446e-06\n * time: 2.5663909912109375\n    37    -2.431415e+01     1.490263e-06\n * time: 2.5870039463043213\n    38    -2.431415e+01     4.612405e-07\n * time: 2.6088500022888184\n    39    -2.431415e+01     5.439251e-07\n * time: 2.6316609382629395\n    40    -2.431415e+01     1.685611e-07\n * time: 2.655853033065796\n    41    -2.431415e+01     1.987928e-07\n * time: 2.677119016647339\n    42    -2.431415e+01     6.161548e-08\n * time: 2.698662042617798\n    43    -2.431415e+01     7.265196e-08\n * time: 2.736480951309204\n    44    -2.431415e+01     2.249929e-08\n * time: 2.7593109607696533\n    45    -2.431415e+01     2.654792e-08\n * time: 2.7804758548736572\n    46    -2.431415e+01     8.245076e-09\n * time: 2.8016300201416016\n","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Once more visualising the results:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_bfgs = build_model(θ_bfgs);\nf_posterior_bfgs = posterior(f_bfgs(x, θ_bfgs.s_noise), y);\nms_bfgs = marginals(f_posterior_bfgs(xp));\nplot!(\n    plt, x_plot, mean.(ms_bfgs);\n    ribbon=3std.(ms_bfgs), label=\"\", color=:orange, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_bfgs(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:orange,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Notice that the two optimisers produce (almost) indistinguishable results.","category":"page"},{"location":"examples/getting_started/#Inference-with-NUTS-in-2-minutes","page":"Getting Started","title":"Inference with NUTS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl provides a state-of-the-art implementation of the No-U-Turns sampler, which we can use to perform approximate Bayesian inference in the hyperparameters of the GP. This is slightly longer than the previous examples, but it's all set up associated with AdvancedHMC, which is literally a copy-paste from that package's README:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AdvancedHMC, Zygote","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define the log marginal joint density function and its gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"ℓπ(θ_flat) = -nlml(unpack(θ_flat)) - 0.5 * sum(abs2, θ_flat)\nfunction ∂ℓπ∂θ(θ_flat)\n    lml, back = Zygote.pullback(ℓπ, θ_flat)\n    ∂θ_flat = first(back(1.0))\n    return lml, ∂θ_flat\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"∂ℓπ∂θ (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Sampling parameter settings","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"n_samples, n_adapts = 500, 20","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(500, 20)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perturb the initialisation a little bit.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"θ0_flat = θ_flat_init + 0.1 * randn(length(θ_flat_init))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"5-element Vector{Float64}:\n -0.9650103067119525\n -1.632352858785326\n  1.5154825411087378\n -0.057889847047760436\n -2.324209250981206","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define metric space, Hamiltonian, sampling method and adaptor","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"metric = DiagEuclideanMetric(5)\nh = Hamiltonian(metric, ℓπ, ∂ℓπ∂θ)\nint = Leapfrog(find_good_eps(h, θ0_flat))\nprop = NUTS{MultinomialTS, GeneralisedNoUTurn}(int)\nadaptor = StanHMCAdaptor(n_adapts, Preconditioner(metric), NesterovDualAveraging(0.8, int.ϵ))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"StanHMCAdaptor(\n    pc=WelfordVar,\n    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.4),\n    init_buffer=75, term_buffer=50, window_size=25,\n    state=window(76, -30), window_splits()\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perform inference.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"samples, stats = sample(h, prop, θ0_flat, n_samples, adaptor, n_adapts; progress=true)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"([[-0.9650103067119525, -1.632352858785326, 1.5154825411087378, -0.057889847047760436, -2.324209250981206], [-0.9650103067119525, -1.632352858785326, 1.5154825411087378, -0.057889847047760436, -2.324209250981206], [-0.9543454344334913, -1.4539709775323686, 1.222442950119805, 0.014598314716813443, -4.312493087147222], [-1.3073111467354925, -1.3489310914366728, 1.2219596005885196, 0.13355438136557712, -3.9272866593114237], [-1.1609972135417488, -1.2326944622686098, 1.1218252173983116, 0.06156641004811764, -4.03446967456496], [-1.1123282364356093, -1.5293219202407058, 2.765692670040384, 0.07082313509241417, -4.06069329932367], [-1.11112127850533, -1.5480774362107053, 1.8961233561212636, 0.040703218914280054, -3.8687381135267396], [-1.11112127850533, -1.5480774362107053, 1.8961233561212636, 0.040703218914280054, -3.8687381135267396], [-0.3566213311151976, -0.7335420378929373, 1.5155958891297883, 0.645076608387105, -3.739346196977546], [-0.7517117684578608, -1.2399941715595908, 2.385154229862686, 0.3054290307610075, -3.661698103593512], [-1.2393070217394022, -1.4237904892887827, 1.6676840158344675, 0.03730714495931836, -3.922498497875689], [-0.933568344247556, -1.295551835230408, 1.4890477180855035, 0.33833346336639214, -3.600251565375613], [-0.4386715093990666, -1.4731213070613778, 1.3430786108280268, 0.13131614535855712, -3.9259800927820083], [-0.5476233965611927, -1.2681405443625944, 1.4250659598325623, 0.21021155062016078, -3.829070271059958], [-0.7735780943119465, -1.029651498920904, 1.4335667707088622, 0.2906174277524286, -3.9308590101600407], [-0.8622993528942929, -0.9630856220072139, 1.4026606839571296, 0.43456854885455787, -4.132719024691371], [-0.7838592095605141, -0.8460737263654028, 1.3678365654834312, 0.1944853786071691, -4.045699999645725], [-0.9634023299254901, -1.5756350124016134, 1.7643277445791106, 0.08624622672457875, -3.5774713706451413], [-1.1046985162512806, -1.5754632014450023, 1.751942704504385, 0.076392533057679, -3.53083321247403], [-0.6820609982745961, -1.1615629007444246, 1.8216227853405507, 0.1714262560019938, -3.9378516284566407], [-1.1559216316357233, -1.5115254744795938, 1.6741749177653191, 0.13944018921490772, -3.68892316448821], [-1.0054668249898362, -1.5193432000090588, 1.717038199107774, 0.052342984426608716, -3.9959942039764162], [-1.0044307431860826, -1.2706121527845837, 1.6023932236679361, 0.08540700605339477, -3.7514259638318976], [-1.025078148459376, -1.06429115708258, 1.452588509552123, 0.19287471635160272, -4.234513141819608], [-1.0615710140804424, -1.0168061910059703, 1.452924831267178, 0.20080184679763977, -4.291458239862644], [-1.1114338323770798, -1.0790523345636338, 1.4929885691526945, 0.26855214370544145, -3.8998199404205898], [-0.5929778135705831, -1.5010666104893964, 1.3011305905789878, -0.10323680879537836, -3.703407371594916], [-0.9490234424775399, -1.0183859838779001, 3.3008145321405347, 0.4416597609404355, -3.5710899346564617], [-1.0208144135762764, -1.0417509935563856, 3.320728813078414, 0.38062553514081504, -3.464429880637251], [-0.9109858797446858, -1.2190450526588652, 1.8697270546451015, -0.023973020589965963, -3.6147130799443636], [-1.047407514808067, -1.4510335489961932, 1.553538497837169, 0.07039251623159666, -3.7379371340537335], [-1.2423348928683289, -1.663124519269787, 1.419720720344603, 0.4062604561702897, -3.527399168859071], [-0.9123021591659003, -1.2249361848472988, 1.6100583149574865, 0.0761851883257038, -3.966673651547705], [-0.49031559007864234, -1.0336702850629458, 1.1790599088331009, 0.061087754718344836, -3.5787841246937777], [-1.4741641912971188, -1.5381190013310524, 1.984440482075073, 0.21598199307555443, -4.1338960510586436], [-1.1434008395972572, -1.5132125592103622, 1.84765901779514, 0.4137956623548014, -3.8313442348614717], [-0.4547412710894351, -0.844135782945174, 2.1063115759069824, 0.12717107197630514, -3.601757084338698], [-0.40857094014481193, -0.9848142116520232, 2.060021274859645, 0.21196945852351465, -3.722535102716638], [-1.0469231374819006, -1.396311813395353, 1.9748741185492795, 0.534557379892239, -3.6536119583970685], [-1.3994111419487143, -1.6793351012797253, 1.9156860761090653, 0.27176126312362286, -3.8419192890973903], [-1.4981438587349216, -1.6391668894181188, 1.5072679865645666, 0.13724489529803302, -3.378443664234744], [-1.385843980246058, -1.7181810624135558, 1.626212366717262, 0.06689290594621188, -3.464485462392929], [-1.30734885983955, -1.6450240140405854, 1.6517625965671034, 0.3434784250066215, -3.7908596820152467], [-1.151218591204263, -1.7086959054927164, 1.7459221452203266, 0.4214305138737896, -3.8433645758045234], [-0.6671025681606066, -1.2641434024756428, 1.6663032128433986, -0.03149876562856276, -3.8897411480664177], [-1.224197766984987, -1.5603239210880349, 1.7807792591892333, 0.252992214349969, -3.6387559145469055], [-1.2569076108030652, -1.3376532225655382, 1.802270849183921, 0.33218988001105515, -3.796726555682646], [-1.1944947419061134, -1.6958125636659478, 2.084646886176697, 0.2589314290970949, -4.029136151655597], [-1.3699621845282723, -1.3378738087056101, 2.324289971029259, -0.1253657006525024, -3.6355721944726764], [-0.6751011082572869, -1.215394806838513, 1.199715900912118, 0.15894288168746043, -3.733644236907209], [-0.2851042860908036, -0.9155665309547659, 2.4520712822529234, 0.7288669714934423, -3.78420955346796], [-0.5820798785440133, -0.8325442943058928, 2.355759999772317, 0.7095313398892698, -3.588394055823849], [-0.812027577648486, -1.1732649602395684, 2.4369354850086067, 0.19917805795885596, -3.8697291013085535], [-0.9953479961326037, -1.0645874167445128, 2.5782916219937175, 0.18904897266529147, -3.7922350630829227], [-0.9444876599211456, -1.1977800110603511, 3.115209326685309, 0.6020562435316061, -3.497514228870681], [-0.8370200598220952, -1.4225506060628372, 2.2090811095805396, -0.15919062824800004, -4.029811064285565], [-1.598125673730872, -1.3982135843668997, 2.363392170429847, 0.3977502632359279, -3.933857680450864], [-0.6026084075371702, -1.124912245157156, 2.995830815538299, -0.40937991362549303, -3.5537473523099523], [-0.9943521957458201, -1.6047651143622066, 2.938607224980493, 1.1639465531700615, -3.9534075321733693], [-1.5013289498201436, -1.306182208883323, 2.8193844908706716, 1.0823475662693787, -3.8372542979024935], [-0.26091378747587873, -0.8206024938937738, 3.2568288720987066, -0.4149591312753038, -4.016857452749482], [-1.3361519079092554, -1.856031077686485, 2.603089579018507, 0.7036601683957028, -3.8931940147985937], [-0.39965039742395414, -0.649924841161059, 3.301518266213126, -0.03766544465178001, -3.6348668877532107], [-0.6644803179835292, -1.4415510200517963, 1.7021090389848241, 1.5222795167930905, -3.7561491709922916], [-0.6723979052534852, -0.9017300038972363, 2.034158062819793, 1.391036735631548, -3.709051552462571], [-1.2142203486712813, -1.7512861520096088, 2.834371090960151, 0.015610482497861455, -3.6691277048339], [-0.4373427365747816, -1.081354832039845, 1.835512422970672, 0.3915300512093216, -3.414675291779267], [-0.46025100376833356, -1.0737168707664413, 2.107893561879701, -0.030464815003120427, -3.5133716028690585], [-0.5693889202220166, -1.0214741159709726, 1.865089717900583, -0.2458951946856387, -3.9176813719969257], [-0.1947724069990936, -0.44613405387393146, 1.7786693402762013, 0.05695346651892448, -3.484276028645364], [-0.6511355709610454, -1.4031879016904705, 2.5644296108925375, -0.09656367735359174, -3.884793063251959], [-0.4991886777702649, -1.3569247378506721, 2.6215221789003853, -0.15187166945904124, -3.763627629324512], [-1.3809174236144761, -1.5917850258219959, 2.562803589741596, 0.07662051380432437, -4.036456253098449], [-1.477132772006524, -1.4905577895426043, 2.616616309089912, 0.17529333225560997, -3.980309425836636], [-0.8278722652378179, -1.307719383971046, 2.4109455380904086, -0.05892890036088971, -3.9650870473141904], [-0.7665201400176906, -1.4588362410464586, 2.1522099058399142, 0.07630392665413327, -3.788893296926181], [-0.8399122651925272, -1.380161822624396, 2.2487586477036396, 0.4984811475652257, -3.729645910278362], [-0.7507414470070013, -1.4013665277733651, 2.23703635212006, -0.03265687371975806, -3.86802050794328], [-0.9239896047460046, -1.2687348230968682, 2.548106777570217, -0.20715713544615122, -3.679453519053255], [-1.397102794907582, -1.3517043682932277, 2.7026919752294654, 0.5495357730952783, -3.8779607621280077], [-1.3702996607211815, -1.4466448186014118, 2.9897605483070597, 0.5638641105203598, -3.870912720136924], [-1.1245638018658997, -1.421104940847724, 2.837281186846122, 0.7952811159111005, -4.2386632862668625], [-0.499954552513886, -1.2183156801726271, 1.8059379128842337, 0.9424390223476093, -3.958624052953086], [-0.41729272210350543, -0.8258192219888101, 2.035510638755279, 1.1247322586017177, -3.9191799463026555], [-0.9891877719132551, -1.195760133972438, 1.8425322723417237, -0.19971469103872191, -3.515447713064418], [-1.2102527435490376, -1.055011394108239, 0.9627375015815134, 1.0995499865107257, -3.8521141950270192], [-1.0517008829872092, -0.9178901873326063, 2.6721935190616275, 0.17070573640988262, -3.916312036383103], [-1.096395007983574, -1.7656523415134235, 3.0503237767759668, 0.542578832703964, -3.9706097827552687], [-1.132675893648547, -1.4805082467770219, 2.8209602199048502, 0.33644120476591344, -3.5743632575627085], [-0.23622598697261324, -0.5663141923820075, 2.404621886506774, -0.020093415043696813, -3.552025813415696], [-0.45751801148482824, -1.0576387883833143, 1.8387034955324015, -0.5254293333615963, -3.87423228780729], [-0.5047174970057842, -0.9991962827152108, 1.6830408782639281, -0.6147755182406189, -3.8561709825580746], [-1.056918175403688, -1.2597129434764227, 1.763279981148044, 1.2946907023250458, -4.043227593617968], [-0.42296364107065243, -0.929317427174003, 2.1854138688400426, -0.04806834453867942, -3.7611102958387077], [-0.728573786632158, -1.379573941315284, 2.5327400733304426, -0.07602654995061421, -3.72992855330511], [-0.7443965854804759, -1.0387619534581647, 2.897998772070254, -0.018038670143722707, -3.743435625518688], [-1.0543238855075052, -1.3968572847823801, 2.4702515155124574, 0.49429257340264354, -4.110012367960184], [-0.9163576895589299, -1.1037057605105556, 3.005863213570632, 0.39749431521026674, -3.781930523384125], [-0.5244697929832393, -1.023640350727735, 1.7718661726382745, 0.08003358673700692, -3.616996130102497], [-0.3384288922450061, -0.7798628815706261, 1.8244193309351175, -0.22107691247842284, -3.730741824131312], [-1.1799510623545948, -1.3263604270815403, 1.6198092166115752, -0.1834908983874738, -3.8475036539596763], [-0.4360043346806843, -1.3107024747104163, 2.2153116854774932, 0.6621437513671535, -3.821980930856748], [-1.6056161697259572, -1.5864341132840172, 2.3559535911358385, 0.4409843157358916, -3.9652534687649696], [-1.07092768708449, -1.5738123320393047, 1.7655657957997108, 0.32412028473416393, -3.5704034468121417], [-0.7170194177428209, -1.1050499597910808, 1.7679881346135624, 0.39401358031956485, -4.106706211002811], [-0.604702791374639, -0.9309466769148086, 1.3442896349332265, 0.28432337412119546, -3.4689767321104266], [-0.5096106920355212, -1.0964957769890156, 2.2540158236258665, 0.21715959009101804, -3.5380126698926353], [-0.7487951868691212, -1.1742298745062634, 1.9418957422290077, 0.39904641585549155, -3.8365296588159694], [-0.6390901840109261, -1.202536311607746, 1.330921330487594, 0.1858521083291338, -3.6293418172022918], [-0.9692517701639567, -1.2757826961099035, 1.3309402246883641, 0.5087786062357267, -3.9342494581246297], [-0.2989271397190479, -0.38805982423478635, 1.011911907213638, -0.1684237404084563, -3.508752242604355], [-0.35565187973058177, -0.8735713588942807, 1.8105545460202093, 0.31985247173810016, -3.7762085240128935], [-0.4315701290736245, -0.4723982905135922, 2.0121275362419753, 0.36537786831042285, -3.7794878485697367], [-0.6735424169986342, -1.16186699311784, 2.5210765179845502, 0.2370781025006925, -3.6877506266569493], [-0.5910929115970109, -1.3757774945272467, 2.1953961464297223, 0.32855076879904127, -3.6080111030934585], [-1.0211384972582207, -1.4570413337507313, 1.5670201636167427, 0.029243165246938853, -3.679858855877607], [-1.0293864652105111, -1.0139371153873837, 1.8362890718204827, 0.5050102741580709, -4.017564024518667], [-1.2807268347530287, -1.0634162140901566, 1.5210280704191321, 0.5944439007432307, -3.8222606476757126], [-1.2032925981597713, -1.434226661690475, 3.1455749521911254, 0.6305575197065135, -4.0406446558367035], [-0.8708825283148248, -1.3703483599303785, 2.828149674774744, 0.6654700498242556, -3.857221986022642], [-0.7157623121635998, -0.9488031862494886, 2.5800301544507453, 0.8119160587898152, -3.5623822013827766], [-1.3250042158910116, -1.171930948575513, 1.1820933302691552, -0.02922733401331551, -4.017356176699405], [-0.6431553891083214, -1.4633775352244158, 1.3022719194018006, 0.2135093533191168, -3.736783306502128], [-0.3240859943925915, -0.5018924831076428, 1.2738807040272035, 0.30118796907921264, -3.6594879368411517], [-0.31674895249787516, -0.8050835700854153, 1.9245317024912147, -0.044789492615346066, -3.888484278676747], [-0.38021713164039006, -0.7149607613994721, 1.0698517735969584, 0.40234763122821293, -3.813897639398455], [-0.5459881071269949, -0.8182760083395937, 1.6170075795732384, -0.04384578708826639, -3.7235021650053692], [-0.31374280277869215, -0.9855614240671225, 1.5843021137444506, -0.29707727092005115, -3.737145396948554], [-0.3880659645688453, -1.112583801662149, 2.419053253987444, 0.24357043588241967, -3.78405025282671], [-0.8787080361275104, -1.0938848629213118, 2.3828683019486987, 0.13831315204906322, -3.8404194090552504], [-1.0500344293177986, -1.379546494517358, 2.377637428817114, 0.06152835817785541, -3.5764178815005963], [-1.0982482969214733, -1.300114060350562, 2.5460110631548996, -0.0509559197556838, -4.006676735648204], [-1.2190828839487953, -1.5556956164845044, 2.7820779443940107, -0.1512514474403402, -3.9097619353369133], [-0.37684451390465556, -1.0278373224697428, 1.3817090437526915, 0.27410146821020326, -3.652611757140617], [-1.2065347424934456, -1.765944559366164, 2.1286101191328046, -0.1664883070326152, -3.9177907182870624], [-0.7083559518535837, -1.2746268541433419, 1.8913156176933201, -0.09845344285230137, -3.9775141234985885], [-1.1672133817581394, -1.4138844249586915, 1.5555402021106364, 0.49648448703670367, -3.6894594512743164], [-1.0951683540270816, -1.400987443202313, 2.2074202602427633, 0.5928960082071291, -4.200452617520403], [-0.9637882178343804, -1.516498462111583, 2.4187011169605657, 0.09937313474441578, -4.0079702078963155], [-0.8943480932874885, -1.0644784965414442, 2.02298753135827, 0.28930339205509686, -3.836447231751386], [-0.9898888646456085, -1.5456661949867636, 3.009450977645132, 0.8199487771376104, -3.7190425547441546], [-1.0168909725716442, -1.5142128729257887, 2.9792918224054983, 1.0791309636141793, -3.9588117279323876], [-1.2171766544171692, -1.3169495293460287, 2.4632446385507722, -0.22929318903926044, -3.736425751671704], [-1.2221724507685474, -1.4623399167090476, 1.8789839459099937, -0.13727203029819132, -3.9025789784028544], [-1.2024348424383762, -1.5614432001105294, 1.142099506453988, 0.38379688536716483, -3.676960421138747], [-0.8035629198598089, -1.343607603831834, 2.8050464936535233, 1.0649058788657662, -3.635470526381134], [-0.4703786024081483, -1.3002351474282432, 1.8804475689495255, -0.16443480500866567, -3.669759040454352], [-1.0650743776390779, -1.2675810974802844, 2.250680838605912, 0.04130664726331293, -3.9821978565754654], [-0.9020408729548692, -1.394156921673698, 2.143069438089029, -0.2506636478106884, -3.9712673907838223], [-0.9633647536768254, -1.3840350481598094, 1.4307388204764422, 0.3889637902107426, -3.8205837232691113], [-1.112354137285568, -1.364660940004165, 3.2937079839907426, 0.6830134810490653, -3.887948316169088], [-1.1551455104449349, -1.1777615341031917, 3.276282396913263, 0.6068981318945224, -3.944835696696904], [-1.1551455104449349, -1.1777615341031917, 3.276282396913263, 0.6068981318945224, -3.944835696696904], [-0.8354799199418045, -1.5493076960640453, 3.021560939339857, -0.06482583295784039, -3.7505694240467484], [-1.0813902958647634, -1.550351834646983, 2.7343702738133295, 1.2930650577460556, -3.8261560142924305], [-1.115211164124045, -1.3264755325712314, 2.6222488054772803, 0.992725026950876, -3.623359139324422], [-0.6684797002523275, -1.3115275925627645, 2.364061846298347, 0.06063286096842724, -3.9634231205146215], [-1.1716333336662308, -1.1656938279722022, 2.1049647743361257, 0.045250211068026056, -3.898488959307684], [-0.8267459108700975, -1.4479697343162052, 1.7388086882616818, 0.26465578030058634, -3.831642639968293], [-1.242174284020046, -1.2525310401654677, 2.294109134820586, -0.2629718113462652, -3.781036747029053], [-1.1572316275709658, -1.3727807945142971, 2.1483122821638454, 0.11292129027045189, -3.750907366891523], [-0.826662874056564, -1.0828050113642158, 1.870977945607094, -0.21056787359118334, -3.9512797435716327], [-1.2988167940157762, -1.8510646997366234, 1.6622899312943156, 0.48042946630627315, -3.6219281681196516], [-1.0565614267513048, -1.4356339525121364, 1.8096633170587135, 0.2751649428381533, -3.8239085501223284], [-1.0928652632537863, -1.7021410047945245, 1.7372666241584127, 0.33248924508974187, -3.851019636532376], [-1.0130058211823807, -1.4187170018980013, 1.7535980828625335, 0.4793159351295945, -3.75304156078542], [-0.7465344278205276, -0.9843520187535365, 1.5161941255610845, 0.4988011395936931, -3.7611178452456473], [-0.787951670922524, -1.4950769248228675, 2.156175320687562, 0.36706281190015466, -3.6130338864436906], [-0.7248339108150931, -1.2776047378322861, 2.1442420351235896, -0.19802430991453368, -3.731812503542436], [-0.7205989856436231, -1.3694417224308866, 2.235342348343803, -0.3126462972240308, -3.8112019086554976], [-0.8886399291914262, -1.2280969260705557, 1.729900609767438, 0.7990843332182355, -3.700459365362906], [-0.29785483445726196, -0.9761897288952904, 1.8947022127268454, 0.7225683081334429, -3.762722227930396], [-0.29785483445726196, -0.9761897288952904, 1.8947022127268454, 0.7225683081334429, -3.762722227930396], [-0.5318489767440393, -0.70535576706729, 1.852607745242998, -0.004013816908432444, -3.7318191301384434], [-0.3031412013837277, -0.6331502326148761, 1.7428460428656436, -0.015301807314514302, -3.6949915614406477], [-0.3031412013837277, -0.6331502326148761, 1.7428460428656436, -0.015301807314514302, -3.6949915614406477], [-0.7428764673019006, -1.0620591822784833, 1.7255605489901793, 0.10514567906014266, -3.9007754520320095], [-0.8457947940874105, -1.5449551965351813, 1.9268916909364355, 0.30266824605876536, -3.880484014984114], [-1.1117547601257958, -1.2759518645947248, 1.9627017940364697, 0.2513393536184971, -3.6757616538905054], [-1.0381195350326313, -1.2251673374356493, 1.9479119578097788, 0.039209306427319096, -3.7383924854786215], [-0.6980952031833954, -1.2139634688779684, 1.347698862714074, -0.19570325760143875, -3.7351778290363025], [-0.90505540095349, -1.1653172812039387, 2.330631301922211, 0.2745324926443975, -3.6090857497326985], [-0.8430994571374739, -1.4197333480651664, 2.2711866824539877, 0.4882286028342536, -3.8775175479770327], [-0.4338202707203791, -0.9148525707542681, 1.611054853450574, 0.32383146480491887, -3.8488968702390327], [-0.47601725645016385, -0.9796413609880543, 2.1490028669917742, 0.1796587161945759, -3.3093969195318356], [-0.2678022595558672, -0.7610813692173551, 2.05070872889699, 0.25440549878869556, -3.8863562105048546], [-0.5603565186430728, -1.3444596065491996, 2.2444884572803634, 0.721134056582849, -3.7900906641286722], [-0.8625582394154466, -1.1782454232169932, 1.4946992407583248, 0.33848989678608377, -4.056394612300903], [-0.7424577781339728, -1.5260277972603158, 1.2748430680419571, 0.14937172269000348, -3.677663371917893], [-0.5663976411993693, -0.55518059881755, 1.2856760648150996, 0.05081716013093488, -3.713378090122893], [-0.12105685123558446, -0.4512738703198467, 1.1088011945492167, -0.0440886334589369, -3.6659791701858144], [-0.25275794413975133, -0.057690843716388496, 1.0032974168017836, -0.12416329302994729, -3.8711659307337714], [-1.1857947506419615, -1.3691537008472812, 2.620973129272258, 0.36754182381770084, -3.9248930047498116], [-0.23893757326128598, -0.8299154245768068, 2.1351643794645936, -0.14029349234457922, -3.194013110252381], [-0.728592062277057, -1.1798088505055515, 0.5981478546634185, 0.6775609552602533, -3.9990879706251503], [-0.4388749277719992, -1.016497255279602, 0.7894381304364788, 0.23145866527823725, -3.518085825078076], [-0.9379457676823717, -1.5675461523863836, 2.754400149482949, 0.1948201011993862, -3.90485995610603], [-1.3325218684745943, -1.18964649436078, 3.0407605623056684, 0.18835571569875412, -3.9153098943379177], [-1.1370492640586647, -1.385892138620711, 3.0308108624872125, 0.2085051073635807, -3.8723233865876168], [-0.6452894566655258, -1.0462349396868607, 0.7578373186003137, 0.14829358968907996, -3.61154306675748], [-0.2773230264558665, -1.0431754303616407, 1.2522944769965378, 0.11443781989531253, -3.757230434443279], [-0.7760659291032589, -1.1225158520913514, 1.3117204144583043, 0.25944953511089164, -3.8413680885485664], [-0.40600342619478014, -1.054303583619162, 1.0573381376704052, 0.24155039228211142, -3.4397382026915246], [-0.4380290225614494, -1.1591026331220426, 1.0947734710263253, 0.31043719416245846, -3.2580357486507543], [-1.3473041689573377, -1.5913946167745916, 1.69744886034273, 0.09776202867863618, -4.235610260792703], [-1.2409092039925385, -1.3897220066233507, 1.5471916632102432, -0.12775456228000093, -3.860617741822562], [-0.588092655048768, -0.6183028172803159, 2.46612041482916, 0.1418919561317271, -3.807400402647625], [-1.1949857626246267, -1.3739580062521488, 2.081441590233144, 0.15430731186579252, -3.8265029017966823], [-0.6850878121778665, -1.4583500312578435, 1.9841217004649068, -0.1382779286735678, -3.717109773120945], [-0.5876181628368711, -1.0408598534875406, 2.2711155079308103, 0.2835839997403431, -3.6802139031293617], [-0.5726016547613335, -1.1413327334038008, 1.8192139042467186, 0.11172818654783229, -3.7637983598316604], [-1.241343747070906, -1.3902012015915892, 2.57042188099519, 0.2990018346600286, -3.804711997376052], [-0.7139250200037094, -1.420742850442354, 2.4803640867942165, 0.033216060209365295, -3.9156957854399637], [-0.567173017922836, -1.507418059356537, 1.6484017308910148, 0.03473423805114777, -3.8387844399181383], [-0.8899680240293917, -1.0772513438899742, 1.6298949211378106, 0.5528205902292747, -3.4293690701067248], [-0.5153215709338111, -1.4063442325151956, 2.475554835944132, 0.5783239385755181, -3.948270003674842], [-1.3640815317389368, -1.477389654654937, 2.3138410061213066, 0.098707789528974, -3.5970321390159254], [-1.0798420395346824, -1.1721301116812786, 2.0665880645174948, 0.7193853639184158, -4.111280485768477], [-0.9672382422524802, -1.2412726436826906, 2.500615830380709, 0.7328168852121909, -3.99725842083278], [-0.9407262240508283, -1.509633810155939, 2.827987538922207, 1.494650474176001, -3.785281830521797], [-0.9936415315162678, -1.2842624844862862, 2.569740482997972, 0.2878846945537537, -4.02532052730461], [-1.1901337085897, -1.6627706640199669, 2.0454223467545636, -0.5460773206246158, -3.7777803619623223], [-1.0064273375869612, -1.2971484932385438, 3.2756513989798863, 0.7153889396741158, -4.018881368466188], [-1.3681617106008135, -1.5174384493686202, 2.9482176144423455, 0.38536911045856764, -3.7706291324396224], [-0.9520026774715865, -1.2979483797542994, 2.5171020494006777, -0.2207484908733554, -4.101782845974904], [-0.34341851375340327, -1.0434122573174593, 1.6809196708899459, 0.98962747133323, -3.912479155127245], [-0.9182197955998539, -1.3848403603068855, 2.0051010937704232, -0.3453605351550617, -3.8593525254158187], [-0.468448820464065, -1.2136017913621766, 2.913399430224022, 1.0052076199870026, -3.765767554251585], [-0.987040021721115, -1.1417479664832761, 2.733552962495268, 1.135902626640692, -3.728526344440156], [-1.1737682910980456, -1.7485978216855753, 1.750273156345854, 0.9468127764477094, -3.949617614524334], [-0.9334963001260504, -1.6018480876502281, 1.9898606776382948, 0.9551531594581082, -3.56792874589052], [-0.902977224248253, -1.8483084775709835, 2.0157257840124805, 0.9236331141914207, -3.6787177818846035], [-1.1140334363578739, -1.6280253735918735, 1.9734526533835015, 0.7991654634207104, -3.8915554017877776], [-0.9443058835191088, -1.4739505453260615, 2.3110473508531353, 0.743593819574617, -3.7162991848028706], [-0.8802967215897369, -1.236587054721154, 2.1002682415420018, -0.32847685646210767, -3.6014849879777673], [-0.70450177772262, -1.5088734855194046, 3.070805028147535, 0.8828244574596494, -3.794448210763275], [-1.1185351910566217, -1.1938109482804948, 3.354962939479207, 0.9604375061455291, -4.140617640991524], [-1.2946886392116812, -1.5977555089699078, 3.166607304247081, 1.2263083713608347, -3.788412975943464], [-1.1390800079125063, -1.545283466154064, 2.5993341942847823, 1.6356384236350232, -3.741993247877133], [-1.3346368156836474, -1.6400886444927893, 2.6081548017688916, 1.463236353684339, -3.905065512239333], [-1.3261439919103906, -1.603917977128918, 2.572126826981617, 1.4103591369593345, -4.041398218004188], [-0.13063368539337372, -0.19690390120422147, 2.3607024180743457, -0.3017344169626925, -3.8321809100145705], [-0.13063368539337372, -0.19690390120422147, 2.3607024180743457, -0.3017344169626925, -3.8321809100145705], [-0.21249385773762539, -0.4565272625597734, 2.371193723493031, -0.472653629160041, -3.547245562878483], [-0.4777555878066639, -0.5775586486159598, 1.9922397782589072, -0.3693956103449033, -3.736493678664707], [-0.3376053132461287, -0.664805641176675, 1.927006227667447, -0.44933321992866454, -3.6254256293177214], [-0.19307422401218, -0.47440738763109513, 1.1762440568473267, 0.688751688023334, -3.7518636238836436], [-0.19307422401218, -0.47440738763109513, 1.1762440568473267, 0.688751688023334, -3.7518636238836436], [-0.29713560852404336, -0.5664119472104475, 0.9927125280897857, 0.8329521541015923, -3.5955128781546404], [-0.6195078149597366, -1.0077708877179659, 1.9179991112482369, -0.3325355030156866, -3.593963739591931], [-0.7129285101420605, -1.2806690651203063, 1.974250083409923, -0.3799467975861306, -4.016084712973078], [-1.0882724996431372, -1.5568094419797809, 1.7570557773327153, 0.4386585825722652, -3.3952781462364894], [-0.537889360383799, -0.8697002844498886, 2.234766105660633, -0.08463443299280958, -3.9870925274069213], [-0.6128216942005053, -1.164656771123015, 1.4883002348674457, 0.1279674376841312, -3.399350194397514], [-0.9325271650687356, -1.1832913917274284, 1.2575286500949951, 0.050370861356008184, -4.187009210526367], [-0.6617669975190422, -1.1710436464395253, 0.568746323309858, 0.42790687282122464, -3.398984380949144], [-1.3171379887070473, -1.5344532722344149, 1.3121351934207393, 0.3869660516352391, -4.29500292569005], [-1.3081178254538055, -1.459989827050479, 1.36407049485267, 0.4769953921913305, -4.148310357617161], [-1.2302306781372687, -1.611018845023229, 1.122297233591812, 0.9427184783092525, -3.632630341799239], [-1.0002594645146619, -1.503463744526747, 1.0274726558511151, 0.7762517726526377, -3.7933802557931866], [-0.8217286606412397, -1.3013785534959836, 1.6091057421968014, 0.13506633227025033, -3.9939804377864667], [-0.9422687920035118, -1.144825405779925, 1.669379793011695, 0.07133419704449029, -3.945647149117887], [-1.0620166136355829, -1.318168858748942, 1.6456865131411522, 0.0653888923231789, -3.8103316826375133], [-0.9946906658107789, -1.4795450649897224, 2.026139355510155, -0.49080320184704157, -3.96167502710909], [-1.0702476341755718, -1.421290480783736, 2.1641833001643, -0.012246357620646547, -3.5883620752361804], [-1.3218687943480691, -1.3545550119278464, 3.734567246089773, 0.24494303895648245, -4.08088790101191], [-0.7432274472120666, -1.378555572573988, 2.978563477173342, 1.150488336589837, -3.3217562470941733], [-0.411979830293866, -0.799215402750149, 2.368568575765287, 0.9660292610516569, -4.099806461012981], [-0.6172676887585063, -0.9776099591296393, 1.1849793949969334, -0.3551394723183805, -4.030260709814881], [-0.6444057939213113, -1.0948398598167148, 1.6495246416350116, 0.7045897109948996, -3.6414976313723555], [-1.2849404746155213, -1.3996426117734169, 2.4079276992028205, -0.25290125063546476, -3.9094347937193348], [-0.94482567794444, -1.342104753350119, 2.334817771636262, -0.168736813076999, -3.633765237397354], [-0.9702503553252806, -1.729168389391837, 2.288473233682334, 0.2755396876634025, -3.680536932902192], [-1.5140230930827796, -1.7721257056223594, 2.686315497348788, 0.21021395789764805, -3.7832219172094477], [-0.33768492669348515, -0.8878183049405397, 1.742570210430752, -0.1107471668106482, -3.871791255227758], [-1.2821067183830823, -1.4815294133485584, 2.0756383358466866, 0.2659947977231464, -3.8556536214335377], [-1.0693019813336258, -1.6554582848530732, 1.88514918313137, 0.7260848810233835, -3.7929681189138704], [-1.2439909893374281, -1.4118759654991029, 1.4442180881692819, 0.3112484209589654, -3.789542786806517], [-0.8080159268049653, -1.1319743056895653, 2.5570179012833245, 0.5284940674764274, -3.345211918387386], [-0.755238089282948, -1.2153791596430363, 2.2506737821271403, 0.8175392662283896, -3.818809708658345], [-0.5651483785441921, -1.3939515251742054, 2.1418078891444154, -0.34446701017153025, -3.9387671009267446], [-1.1507346798333655, -1.5013088463788076, 2.7091751212488036, 0.4865340817411913, -4.161238683418218], [-0.5911816051358453, -1.241478234505012, 2.1891895923570504, 0.42414756093139927, -3.8362433001774177], [-0.43937579023666323, -0.910659872048465, 2.7383254293080896, -0.20037752003804638, -3.5331941951490142], [-0.7076679070418695, -1.1516760119919536, 2.6099676877002613, -0.3734427290317096, -3.929306957757363], [-0.803700254327428, -0.9604851660887244, 2.71197963904313, 0.4264621394811573, -3.6093310158939427], [-0.7952824654660084, -0.9657994187390389, 3.100821482800216, 0.21802751086584288, -3.8346445396621065], [-0.7390217164536772, -1.252575718655397, 1.5445998721788545, 0.14602653140085722, -3.7636161622639923], [-0.9612643643537166, -1.1772729832296052, 1.9709008886621386, -0.29028633483234867, -3.91800743341963], [-0.8986478230247118, -1.4956261077938868, 2.055515521684475, 1.026673159063088, -3.7083123816288857], [-1.1471945388385234, -1.4285864842335272, 2.2920465153537273, 0.599111271404817, -4.22859981382491], [-0.9891824054396966, -1.309502198192286, 1.708157126095934, 0.23953353175618985, -3.538976485071137], [-0.7119968723062939, -1.7559870248533522, 2.537510586469109, 0.19930793429052432, -3.667035822530132], [-0.8077685871037602, -1.5937591853659325, 2.2068921386692084, 0.1106037949865077, -3.637394013254037], [-0.829364920328208, -1.3196189936406193, 2.2423804915249024, 0.16992744444034935, -3.5347789698618026], [-1.0842200888568874, -1.2547459803312222, 2.7939644168371305, -0.14538607319732397, -3.8954262527106387], [-0.8847912581391739, -1.4287123557708956, 2.3105458205552525, 0.36593747382288966, -3.842242049329102], [-0.7603771585666537, -1.449147279642533, 2.1902124969351795, 0.21805235438563708, -3.8350079858285877], [-0.7984038299805738, -1.4476919724110502, 2.1516981231669923, 0.24941568206062056, -3.6030996301659552], [-0.8454087176828647, -1.4274205014036003, 1.66189200640397, 0.25605483893834613, -3.8058227990236486], [-0.8596510668650214, -1.219758018883563, 1.3787711470303896, -0.06885945465325236, -3.8839722621586614], [-1.2174499470406035, -1.4508990045636372, 1.1967214498471597, 0.5225730005218128, -3.5931500468432547], [-0.8094385765451554, -1.3108947021414301, 1.8655570509145978, 0.387270092205475, -4.152758937808992], [-1.104933619390441, -1.5981520434438714, 4.415561480458265, 0.14332190102262737, -3.718230390170062], [-0.6761335618635963, -0.9401076550431698, 2.72044252737275, 0.5841793974615201, -3.6127761706642527], [-0.71878485052471, -1.4872729673964746, 2.2250317272781395, 0.12984961978434892, -3.9023621845592826], [-0.9470659986025515, -1.475604072525787, 2.60594213328377, 0.6379632476467296, -3.9896316523349693], [-0.9383671857275995, -1.5261497472618628, 1.9324782418256248, -0.14256619608808616, -3.9851458382101845], [-0.22967659298015905, -0.27154505145394575, 1.1025866252570038, 0.32752374527829875, -3.7170821823353486], [-0.2520539783748459, -0.7665926987792773, 1.2545593335660605, 0.10511358078830693, -3.8168996090519913], [-1.253544548371071, -1.3961770384843568, 2.5874880285146897, 0.2730448120217171, -4.204780276083337], [-0.5575687724844542, -1.325785204781516, 2.2187464844923674, 0.5047428955737235, -3.4869524659063376], [-1.0139782556987869, -1.0750676719943792, 2.83604367429753, 0.5468414411898089, -4.004783248354652], [-0.7768935177654659, -1.5941705956498142, 2.126780120791784, -0.03672116892594662, -3.5906902100135483], [-0.9927378837350431, -1.148413209080644, 1.5529304678783096, -0.20713340917713008, -3.912912800504824], [-1.072649854524258, -1.1588963305523876, 1.6868715834414887, 0.5584497253568365, -3.9721999616982258], [-0.7039300983474749, -1.4850796299793594, 1.5940610863181688, 0.4102806323523805, -3.3607895141959654], [-0.42101934838485505, -0.6980725535942036, 1.676673192182347, 0.20048611839576502, -4.038977760376762], [-0.24518498097123423, -0.6358176868353642, 2.0376613584698475, 0.17306487670209572, -3.3198666981520653], [-1.0614393199791596, -1.5030162926740085, 1.932768298842794, 0.29779634378275577, -4.095361574502546], [-0.9719962025822385, -1.3913303426859749, 2.9012087457524047, 0.45767434256178, -3.4032852001876375], [-1.1584785383542846, -1.4705713442492687, 2.526198056248645, -0.3325071991599965, -4.22656960202191], [-1.1591711544579895, -1.5530798136768733, 2.5552674216738684, -0.5048356414122398, -3.412297988621363], [-1.0419318652866874, -1.4670830223325964, 2.4942817811768503, -0.6340740505779048, -3.633460551002621], [-0.5946877762408982, -1.0743782198460992, 1.4652718001256264, 0.0904988615866888, -3.9293666722664105], [-1.2079740682795506, -1.4192119669487788, 2.3448203096966944, 0.49448193873287355, -4.11219966527523], [-0.6790085019824944, -1.1024275084808444, 2.8140754517335758, 0.8229164737665022, -3.626493847182994], [-0.7743639456389355, -0.938552139913812, 2.700997418595393, 0.2852374047957362, -3.5938769515146114], [-0.26699039599704255, -1.194155964491748, 2.959160084049029, 0.4275906731199023, -3.60683405224014], [-1.3772852194535599, -1.4274358602576993, 1.2141217597809346, 0.10309326665349851, -3.6142213952676734], [-0.47020329172379555, -0.6038403777167497, 2.5929799583337485, 0.15871026983884856, -3.349430599616128], [-0.3168192589359867, -0.7043408058595397, 2.2419174482259305, 0.33034646932490525, -3.7932757476052856], [-0.331859964398389, -0.6998537475147982, 1.7484690050505327, -0.1649938327861697, -3.6699303986984093], [-0.3725365990808554, -0.7592695741699469, 1.8318511789330028, -0.3753168569838965, -3.8822608247053028], [-0.3720021029591668, -0.8851070566504755, 1.1230995175786882, 0.7561004840855604, -3.7375553705863895], [-0.4859679941569896, -1.1038457163603508, 2.0462638283858934, 0.5682434217910509, -3.3176068996034713], [-1.3361932998290955, -1.591951642106804, 3.2489019589352717, 0.7240492376723351, -3.605309178454791], [-0.716707062014983, -1.5211437306562703, 2.548765196012195, 0.11884213215110967, -3.824245737264966], [-1.1270389550728273, -1.3843535617172713, 2.0115514697160646, 0.26583195158754336, -3.6721054534405693], [-1.0005589340428866, -1.1660203367648412, 1.7494507271808533, 0.09441058032163266, -4.070659174605409], [-0.7535230860102469, -1.1310616652974081, 2.7426313766453294, 0.6211928875642805, -3.9689163982496916], [-0.49644809024953984, -0.8460324884291542, 3.0154383018370683, 0.4088783478333584, -3.9261294434479397], [-0.3233055078448116, -0.839654044838233, 2.393779064456958, -0.2977558077568655, -3.7649111952906344], [-0.8470418877039558, -1.442998015782391, 2.2448170492128177, -0.2511552878929266, -3.462791536045692], [-0.6497256037025474, -1.4816094752106697, 2.433626829047572, -0.411325011140293, -3.31309639227152], [-1.3044293136649048, -1.514904374655364, 2.221136859832451, 1.0679847452905566, -3.8598868240962405], [-1.2071147802040156, -1.6765713563164313, 2.222199873917514, 1.1313284300549566, -3.9801043818965653], [-0.6151504817650956, -0.6966189922766548, 1.6422138736750387, 0.3466120662176113, -3.6151278468118306], [-0.6173768067578724, -1.4630704524494147, 2.8670871195294776, 0.005882572720528376, -3.54015114124208], [-0.8751981340160013, -0.9999324618679487, 2.954028239567817, 0.9068589294758347, -3.934188900381294], [-1.251239445735946, -1.5414338962666905, 1.5850716254263362, 0.4155679621428806, -4.079970194267473], [-1.1554525643677103, -1.3497680455464447, 1.942019278888834, 1.4587664217227874, -3.7829004617980617], [-0.500064556514444, -1.298158862243957, 2.2841474223379863, -0.19607002040660726, -3.921901825574021], [-0.4811746095315512, -0.8368817061041609, 1.5975497389702225, 0.1329927692356066, -3.499134038627121], [-0.21809932726408998, -0.7305898668673816, 1.3851863110008271, -0.1768342876446518, -3.712471090908583], [-0.7969629403137292, -0.8288446863085334, 1.8860840407149877, 0.37949595450853235, -3.9878581285254056], [-0.9857429223278334, -1.4764641920340593, 2.205601090467756, 0.40636945658470286, -3.6691078845845913], [-1.2181384874678571, -1.2366657091974849, 1.6738081849838318, 0.7383555673170423, -3.921335144692886], [-0.7784824865061203, -1.215491388693247, 1.971783445838195, 0.5048285816961625, -3.6760481883833407], [-0.9582235238154022, -1.2171603233652226, 2.9014254972546665, 0.8072632593891986, -3.718951064612401], [-0.8722003106496989, -1.6189460551859327, 2.6221866518950234, 0.6065055874271328, -4.000572402100279], [-0.15688899415080065, -0.6265051625856894, 1.5116214238696242, 0.02579742475538034, -3.857693235958023], [-0.3388786889784886, -0.4386782399935605, 1.3118618452630852, 0.12861867793319948, -3.756067304852655], [-0.6167717856250883, -0.9654324437094578, 1.078548924297862, 0.15649179199183486, -3.736462846841777], [-1.2253289678448562, -1.318290502791821, 2.044870388384533, 0.1434054825610178, -3.8632823291072786], [-1.1361402490038484, -1.2966772623495468, 2.7316268625994353, 0.18001759669294218, -3.634667491681696], [-1.1678085856376264, -1.5567522264729352, 3.430604205205836, -0.10520486624211907, -4.134899130713536], [-1.087280066907306, -1.2494319018476507, 2.762533579691565, 0.10582527941325903, -3.6051740112124557], [-0.9153671166532993, -1.2034253497694234, 2.5884332321193075, 0.534762185294032, -4.12976833329325], [-1.3232553485218577, -1.5932420295682492, 2.1722206098707173, 0.34439866188387874, -3.8146730639952744], [-0.6907829192656905, -1.191796506957862, 3.032252323401331, 0.38829508362296083, -3.83933707910583], [-0.46283084360851057, -1.1064771441817969, 2.9391850904700303, 0.31372479361620453, -3.8265467790596635], [-0.7459755682692013, -1.1623595686848027, 2.990033730967892, 0.32735373613498703, -3.617128919918806], [-1.4156778845116371, -1.2422895419541566, 2.560898351952595, -0.4056252429160987, -3.689930673767476], [-0.4596029490536901, -1.0324684469279772, 2.820459119355166, -0.6792003277488092, -4.011016801628546], [-1.3111343116309824, -1.2624895578599022, 2.7358915892355324, 1.5118647413066755, -3.9575944533954135], [-0.38537853473749045, -0.9293961431309282, 1.6945192369254647, -0.3696676385988722, -3.8061506063326256], [-0.5816340190837059, -1.2706300138754898, 2.452149086589424, 1.3584799789775572, -3.824193458379221], [-1.2698135090327378, -1.4416840141254184, 1.5408769303043528, 1.065214725917755, -3.8452800550094506], [-0.5205822852920163, -0.601533235341768, 2.117766324551024, 1.0638520697417229, -3.307163087888212], [-0.2754872718819161, -0.7328593502154911, 1.9194201882815167, 0.886492689156134, -3.4774860234950413], [-0.3936701460627037, -0.8505319835442837, 1.7847762740397854, 0.989575009879606, -3.917138011610176], [-0.5253050856658437, -0.9785818844485943, 2.295683774410764, 0.8601065978359186, -3.630835085497098], [-1.0905270049738043, -1.5598395013120896, 2.0825566794782344, -0.258316394566679, -4.0616318949417], [-1.079603860634293, -1.3637992651091009, 2.3988028231721383, -0.08794273608410043, -3.7157107981897157], [-0.6827768630711524, -1.1178274235914956, 1.7687204781038977, 0.6327478366791361, -4.0036801750206354], [-0.4556277187593688, -0.9932434988984357, 2.399073008351901, -0.5554620100941132, -3.3524385051656442], [-0.4223511368644839, -0.93461188745917, 2.441385425053135, -0.1100074102114239, -3.5982775590460636], [-1.2590405696380924, -1.4082645417189155, 1.7054869556321473, 0.3362955059663155, -3.9827906853362], [-0.43725037088591007, -0.907241372142267, 2.4584686261317956, 0.5177563569246579, -3.640707247526355], [-0.35540450878765045, -0.8898243820101043, 2.526012855635777, 0.5205479360217332, -3.830004603033534], [-1.165171075809956, -1.4256618098016864, 2.8421752234283155, 0.6121042067583744, -3.770621588746124], [-1.1354390984103315, -1.3918053358553732, 2.7396003260075474, 0.4659748152662138, -3.8352378351075114], [-0.8093474033781495, -1.3162617098127687, 2.9798383406970403, -0.32335666645832484, -3.794624611763192], [-0.9310494869081165, -1.5656328475810521, 2.6203680213411844, -0.3850491199868924, -3.6405058836515782], [-0.5410002646785492, -0.684786158409605, 2.746133127403554, 0.2381714884757003, -3.4888524468885134], [-0.38265903505845966, -1.0414559903942497, 2.825894910908899, 0.33213320442360306, -3.548501194593075], [-0.9387604940945153, -1.2733279211656687, 2.6769445218729535, 0.1408723681098072, -3.9083701670146307], [-1.2269529626565723, -1.4546248009363367, 1.7183843174884073, 0.09336513997159027, -3.978030113923964], [-1.0324684625179654, -1.3674472541288951, 2.2840517665461477, 0.8903259552160487, -3.8963675941134523], [-1.003881174004863, -1.4406502532428047, 2.558868183240578, -0.1032961335681305, -3.758760053916834], [-0.8618099658687135, -1.338978372946101, 3.1531997105465677, -0.07935210932513492, -3.7957594221173663], [-1.1456003559536447, -1.4274390111112913, 2.7796939211358183, 1.2847248498496011, -3.755518970948761], [-0.6902404546450195, -1.1287905972930663, 3.665649784673784, 0.8833128661735603, -3.50555269877949], [-0.4636814417349401, -0.8390171473726206, 3.1458116465629997, 0.20948210380132692, -3.8673784012509826], [-1.077525226557983, -1.4775024191298547, 2.136775632561613, 1.0401497165514488, -3.52930672069419], [-0.8554212688286058, -1.1658871604940197, 2.2371899207534196, 0.2017677690956818, -4.054234833437355], [-0.8889503798963684, -1.0578608724796077, 2.216386489912897, -0.2713162112135844, -3.9515520045098365], [-1.348709871376548, -1.739757782708162, 2.22103893402829, -0.1704737342032095, -3.8247238781432906], [-0.9029678395183801, -0.8875317257233382, 2.234459101604952, 0.5969570630482113, -3.7180778899019336], [-0.7655659701062434, -1.136744054935271, 0.9582848233685567, 0.3292593643597471, -3.785068891351636], [-0.6884911105044935, -1.3704519346080386, 1.5080456603372903, 0.4633404098330662, -3.6959714003155892], [-0.1983193476927899, -0.12737470227491465, 1.9832222169115377, 0.5176694715752821, -3.677733847265044], [0.02081776774089636, 0.03728242945856214, 1.97168288375618, 0.47856557105746966, -3.835455108243428], [0.028903209443902872, 0.4075176857289992, 2.1426769190230135, 0.9098999872627691, -3.535125440696107], [-0.025549900412926443, 0.3114591871957857, 2.426749509684943, 0.8427180640793038, -3.7216035032150927], [-0.025549900412926443, 0.3114591871957857, 2.426749509684943, 0.8427180640793038, -3.7216035032150927], [-0.025549900412926443, 0.3114591871957857, 2.426749509684943, 0.8427180640793038, -3.7216035032150927], [-0.021816790515963316, -0.005249783032453881, 2.713542091983443, 0.6580611020386782, -3.4311984089073038], [0.055306595809996695, 0.05902831077427337, 2.0539237401565638, 0.4044682095108362, -3.7673630530234665], [-0.3070194784186556, -0.8179883609762484, 1.7026162049392606, -0.3307700485904613, -3.641217092897006], [-0.3070194784186556, -0.8179883609762484, 1.7026162049392606, -0.3307700485904613, -3.641217092897006], [-0.3070194784186556, -0.8179883609762484, 1.7026162049392606, -0.3307700485904613, -3.641217092897006], [-1.0533046760749798, -1.4594231405032283, 2.4635246392896333, 0.322103909304157, -3.744263007707504], [-0.9916158116577342, -1.5572873762485895, 2.5295412956034617, 0.34346803026738376, -3.8112626073916362], [-0.24263941428503913, -0.8936287515960979, 2.288897293598608, 0.2770916267831107, -3.5045529986327146], [-0.4730049403677788, -0.6327713667934449, 2.300507339163621, 0.3928160218680046, -3.314352801209271], [-0.40851934799776035, -1.1496104293213167, 2.148941235810669, 0.6084000567566551, -3.825099318686618], [-0.674212512846435, -1.010752682689598, 1.958913517306775, 0.7149177747559127, -3.3928861722571417], [-0.4759961439812999, -1.264365209246688, 1.8835593112012412, 0.7150347246985279, -3.936957448016996], [-0.7398648671213184, -0.9480773340721771, 2.3232199737269954, 0.4794598175356761, -3.5414303889637293], [-0.36821128432095, -1.2931833182515184, 2.3147376244209945, 0.40308828463778895, -3.566992154579331], [-0.36821128432095, -1.2931833182515184, 2.3147376244209945, 0.40308828463778895, -3.566992154579331], [-0.9869207466992611, -0.878710796529017, 1.4787791154437684, 0.4214911054135426, -3.966196029233383], [-1.194991981193996, -1.5818806652249833, 2.8987897687452024, 0.2985232115364452, -4.06877560786216], [-0.6810884302731888, -1.2999509328976073, 1.8263588805251332, 0.5064314522091928, -3.857672397203003], [-1.106760588724954, -1.3950619647552025, 2.376756485603863, 0.415492354657193, -3.9976963538756345], [-0.9865603526682953, -1.4701339044399355, 2.3810859982728405, 0.3310340603355237, -4.151980149695555], [-1.306787316277746, -1.2660615848755838, 2.210303558387924, 0.4144296809071347, -3.872299710971908], [-0.7533857366885178, -1.1518547132570387, 2.5358330106676292, 0.1831019905898408, -3.606218514928989], [-0.7027026755961389, -1.2128878396442568, 2.5457984092161605, 0.2101152884975574, -3.6386090624011773], [-0.6875138970582038, -1.466420829339096, 2.564949354466861, 0.4050255245900326, -3.372654617710337], [-1.1993213197702022, -1.3595751750485854, 2.2289668046510167, 0.2143102762514441, -3.943296992386948], [-0.5072823044851257, -1.2699378146502938, 2.02474711401298, -0.22611829795298433, -3.6315882197913405], [-0.7688369023303064, -1.2985476131529903, 3.258929780312915, 0.7544314970511998, -3.977580572452239], [-0.8894817521578022, -1.0718999692484845, 2.153926989493073, -0.20691052036515198, -3.730524748050509], [-0.7750405405265023, -1.091382179460448, 2.3890830751103187, -0.24469505212139334, -3.8287015548011505], [-0.4049899224103458, -0.7385375997967899, 2.1373235007500115, 0.07537118032309587, -3.612390015299425], [-0.5847259468219238, -1.0479261686340107, 2.0214850649666567, 0.039065791337482135, -3.734641530781261], [-0.3888367494578927, -0.8249927449157779, 2.3294891882058093, 0.294208382028972, -3.518065428671457], [-1.086754766593298, -1.4747749409305428, 2.0104734509804176, -0.05638745739861274, -3.64441464371815], [-0.771346916484638, -1.4472806233918678, 2.0956994106675517, 0.44403871890794744, -3.7918014111426657], [-0.8982309382076596, -1.0849966393869557, 1.819220486206289, 0.4579903326129582, -3.7958778953787857], [-0.9765876498571724, -0.8369109922068106, 1.8033001252897016, 0.6562122559958545, -4.000962680299634], [-0.5348395622127015, -1.3368870568167641, 2.1588600157722766, -0.37022558390407545, -3.294596142175526], [-0.75804444810519, -1.3488507920577515, 2.797783765305765, 1.0068246313392122, -3.6297262530524157], [-0.6653796726103756, -1.1172301853047237, 3.7752700692362287, 1.0642267701986317, -3.8971579695024645], [-1.2290977621050794, -1.46961073740189, 3.7894998991506514, 0.048013063046567994, -3.998433344407993], [-0.4316500608326091, -0.7961435244399662, 1.4922719027660292, 0.2802810555538197, -3.557300106946424], [-0.6010856766256312, -1.2854918061663925, 1.533383284722901, -0.09813330094114348, -3.8894460777391147], [-1.0662314598083549, -1.4286236035529503, 1.8005899093213296, 0.11224135508604782, -3.662204400995039], [-0.9143680167917143, -1.6305421011699932, 1.945512705197183, -0.06282713036157173, -3.518221327915989], [-1.039082743249232, -1.3993819711786664, 1.936972349679651, -0.02169331175782996, -3.5042858007683066], [-0.6570634642949821, -1.2103528805063746, 1.9523858729444157, 0.4921808483311656, -4.058979424654113], [-1.1790330089600574, -1.2179433226209695, 2.8434571642271975, 0.7295472464150783, -3.8383451605991388], [-0.9180302850734592, -1.5626727406695735, 2.8406768936539093, 0.8341815970401156, -3.9857989195573165], [-0.4705416603370601, -0.7539232595953376, 1.6776104930857583, 0.1582128045934693, -3.5076219622129563], [-1.0758619393839708, -1.5306524676992521, 2.58473324392444, -0.3985255839750671, -3.8684083722001374], [-0.9472875276499572, -1.058418130686684, 2.657060784400286, 0.7170620564594666, -3.807391738600924], [-0.4136117401194138, -0.6119098386793925, 1.6610417495045284, 0.9248302595219833, -3.6289185624236295], [-0.7378347998408556, -1.2123134306342653, 1.8983896969446779, 0.5020045550189991, -3.766968829263268], [-1.164409349296577, -1.6808289335367983, 2.811920684397446, -0.0902744211340391, -3.98124641565373], [-0.7934807488009122, -1.0642414244077207, 2.725217739750055, -0.09184130577279671, -3.7395314281874814], [-1.1689090411343366, -1.4991561545410292, 3.4688298409759866, -0.06662324044237755, -3.5572703901352765], [-0.8385277528527861, -1.3903882005195622, 1.3591946520685771, 0.39736537120861387, -3.958656768158117], [-0.974633278682304, -1.3454916067709113, 3.2451966133647225, 0.8002542032023746, -3.718115274145894], [-0.8803243002750369, -1.3733082074448448, 1.946423516405452, 0.18165040864336165, -3.5795974834892736], [-0.8601490654538918, -1.0569705357920882, 1.9109746079848207, 0.11022310461341149, -3.884737374788894], [-0.9958799836345671, -1.0967506989749047, 1.852367134662127, 0.03853428487254025, -3.74890819861468], [-0.9207922987093857, -1.6396404480701272, 1.1048749819807124, -0.13375038967549738, -3.968370620369522], [-0.8125068816954464, -0.8726866672809203, 0.8252187189714569, 0.37211818073486247, -3.6853474995252684], [-1.1306902710666158, -1.3650159301860105, 2.899271943133269, -0.010169066987595593, -3.8573898683959205], [-1.0534319183205085, -1.5450567032637608, 2.745871755870848, 0.6061593393908608, -3.868551280185195], [-1.0538533429056285, -1.4014965216149033, 2.4012908271493427, 0.8451019784948484, -4.049585709525695], [-0.9678609305377013, -1.10407184969571, 2.9080951723655364, 0.08401602761473584, -3.7544416053703347], [-1.1027952649730655, -1.5554237231960064, 2.483028308825957, 0.284256920003868, -3.6869068920695938], [-0.3779685432851788, -0.8577403507343865, 2.3418229549567653, -0.05608405392307995, -3.6798881914535806], [-0.7047630173839552, -0.9604940660430877, 2.7989183802868176, 0.9855875442374832, -3.7354172314176477], [-1.2580326616144644, -1.650492175514685, 1.7909698631534594, -0.16782867812719487, -3.7783048790711087], [-0.7849338546194254, -0.8186856914330726, 2.157280425759321, 0.15777499157964958, -3.6841499778407227], [-0.5034153239637724, -1.2666973104620984, 1.8359267362348615, 0.12100433753200081, -3.76798443908386], [-0.8701742990716975, -1.2026641352243435, 1.3675984032426505, 0.005832343424219441, -3.9018571923022125], [-0.5742423190685164, -1.4081388603162814, 2.0624836202607444, 0.29910374621339475, -3.6087426093791444], [-0.4773365200202053, -1.1567376022119442, 2.080515459333949, 0.3877431466423401, -3.586568569475788], [-0.960134818985234, -1.2116261035477147, 1.9569063646339744, 0.8270762000792156, -3.8890469408972357], [-0.9921364844630403, -1.1395235207928402, 2.088126765372568, -0.0659290443224185, -3.843441843530554], [-0.9098793319514473, -1.628543315584689, 1.3884945893712182, 0.19415893172245707, -3.740617297356262], [-0.6110417897799956, -1.4233943132187816, 2.720568832088722, 0.06552622611024084, -3.890892614131353], [-0.652467551340484, -1.3065219006204807, 1.3754959125357555, 0.4894267258109194, -3.7869595917323515], [-0.9361911929758204, -1.003511860874281, 1.548088223631291, -0.1290763293991638, -3.694345780049965]], NamedTuple[(n_steps = 7, is_accept = true, acceptance_rate = 0.031020355961678892, log_density = -17.037680751887308, hamiltonian_energy = 18.298825669904332, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 843.4491841119739, tree_depth = 3, numerical_error = false, step_size = 0.4, nom_step_size = 0.4, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = -17.037680751887308, hamiltonian_energy = 19.805192595619683, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 5.564206941558678e9, tree_depth = 0, numerical_error = true, step_size = 0.9882194937693396, nom_step_size = 0.9882194937693396, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 4.120600206939116, hamiltonian_energy = 16.272526039387127, hamiltonian_energy_error = -1.91509268732392, max_hamiltonian_energy_error = -1.91509268732392, tree_depth = 3, numerical_error = false, step_size = 0.09908015350843156, nom_step_size = 0.09908015350843156, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 8.030206829954114, hamiltonian_energy = -3.8983532396724607, hamiltonian_energy_error = -0.5116010885654934, max_hamiltonian_energy_error = -0.607111978433772, tree_depth = 2, numerical_error = false, step_size = 0.10418190026987632, nom_step_size = 0.10418190026987632, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.8891018654254257, log_density = 7.8202930298549695, hamiltonian_energy = -6.127677170157851, hamiltonian_energy_error = -0.0413518212574191, max_hamiltonian_energy_error = 0.4045071726604519, tree_depth = 2, numerical_error = false, step_size = 0.14175607516445987, nom_step_size = 0.14175607516445987, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9824448799345044, log_density = 8.78813767539178, hamiltonian_energy = -6.516025988754236, hamiltonian_energy_error = -0.3355295220083363, max_hamiltonian_energy_error = -0.5955271913578377, tree_depth = 4, numerical_error = false, step_size = 0.15988841189697006, nom_step_size = 0.15988841189697006, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.8920672554898141, log_density = 9.771305884255828, hamiltonian_energy = -7.59895192543839, hamiltonian_energy_error = -0.30667934957068965, max_hamiltonian_energy_error = 0.44555671108459194, tree_depth = 3, numerical_error = false, step_size = 0.25627056731281816, nom_step_size = 0.25627056731281816, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.013315592424769145, log_density = 9.771305884255828, hamiltonian_energy = -7.707995517947291, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 37.41545587481545, tree_depth = 2, numerical_error = false, step_size = 0.3261082551756692, nom_step_size = 0.3261082551756692, is_adapt = true), (n_steps = 63, is_accept = true, acceptance_rate = 0.9965233468113769, log_density = 8.640126514047255, hamiltonian_energy = -6.560241172239209, hamiltonian_energy_error = 0.0018026631118477354, max_hamiltonian_energy_error = 0.008676319484140826, tree_depth = 6, numerical_error = false, step_size = 0.02686217146725135, nom_step_size = 0.02686217146725135, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9886361073883156, log_density = 9.779653576313443, hamiltonian_energy = -6.066805643481258, hamiltonian_energy_error = 0.016002587531584567, max_hamiltonian_energy_error = 0.024248469009919837, tree_depth = 4, numerical_error = false, step_size = 0.04877038220448064, nom_step_size = 0.04877038220448064, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9993918724297454, log_density = 9.553302810319437, hamiltonian_energy = -9.031586577173028, hamiltonian_energy_error = 0.0018453577832904244, max_hamiltonian_energy_error = -0.01504948847529164, tree_depth = 4, numerical_error = false, step_size = 0.08801669112079852, nom_step_size = 0.08801669112079852, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.42325037226358997, log_density = 8.968131459728976, hamiltonian_energy = -6.705702437364305, hamiltonian_energy_error = 0.38674863205156385, max_hamiltonian_energy_error = 1.9216028019321394, tree_depth = 3, numerical_error = false, step_size = 0.16594778929478737, nom_step_size = 0.16594778929478737, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9702673174500888, log_density = 5.060256702670731, hamiltonian_energy = -4.270327700768008, hamiltonian_energy_error = 0.12753541449663608, max_hamiltonian_energy_error = 0.12753541449663608, tree_depth = 4, numerical_error = false, step_size = 0.05115180939385032, nom_step_size = 0.05115180939385032, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.9865398299744995, log_density = 9.089620251845464, hamiltonian_energy = -4.491713261331793, hamiltonian_energy_error = -0.448365281047419, max_hamiltonian_energy_error = -0.448365281047419, tree_depth = 2, numerical_error = false, step_size = 0.08893458149384446, nom_step_size = 0.08893458149384446, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.6759399837787982, log_density = 8.742222249310611, hamiltonian_energy = -6.995271473714313, hamiltonian_energy_error = 0.3695161660235069, max_hamiltonian_energy_error = 0.5238410669674902, tree_depth = 2, numerical_error = false, step_size = 0.16246113923891162, nom_step_size = 0.16246113923891162, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.8800993296556056, log_density = 6.618691698083481, hamiltonian_energy = -6.1175857155087705, hamiltonian_energy_error = 0.18943214049765977, max_hamiltonian_energy_error = 0.20718516017430133, tree_depth = 2, numerical_error = false, step_size = 0.11287190588344971, nom_step_size = 0.11287190588344971, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9728450385536309, log_density = 6.8591009223341395, hamiltonian_energy = -4.572446607310977, hamiltonian_energy_error = -0.13227599101325538, max_hamiltonian_energy_error = -0.6332465601311563, tree_depth = 2, numerical_error = false, step_size = 0.148031995615271, nom_step_size = 0.148031995615271, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.2939480078186728, log_density = 8.641767179177066, hamiltonian_energy = -4.31773517872518, hamiltonian_energy_error = -0.8119820034343586, max_hamiltonian_energy_error = 240.4304723375707, tree_depth = 2, numerical_error = false, step_size = 0.25716557772964216, nom_step_size = 0.25716557772964216, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9937464170686302, log_density = 8.038724990627962, hamiltonian_energy = -7.630049242302054, hamiltonian_energy_error = 0.013398526537412359, max_hamiltonian_energy_error = -0.026347950085392036, tree_depth = 3, numerical_error = false, step_size = 0.05668116930573562, nom_step_size = 0.05668116930573562, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9951726207839225, log_density = 9.351301016509233, hamiltonian_energy = -7.593064383058346, hamiltonian_energy_error = -0.08852497422538619, max_hamiltonian_energy_error = -0.15784736180489034, tree_depth = 3, numerical_error = false, step_size = 0.10500742369781728, nom_step_size = 0.10500742369781728, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9996718736093008, log_density = 9.261487178081996, hamiltonian_energy = -8.16444004625792, hamiltonian_energy_error = -0.05290220641312082, max_hamiltonian_energy_error = -0.12442548323396174, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8054825940712956, log_density = 9.238926384119956, hamiltonian_energy = -5.894411965534793, hamiltonian_energy_error = -0.09268476173391882, max_hamiltonian_energy_error = 0.383566346630559, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 1.0, log_density = 9.736861525245477, hamiltonian_energy = -9.029679721983754, hamiltonian_energy_error = -0.0870341478944372, max_hamiltonian_energy_error = -0.1267438439356514, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8236415311538231, log_density = 6.466607133832818, hamiltonian_energy = -5.797073758383497, hamiltonian_energy_error = 0.2743836494587315, max_hamiltonian_energy_error = 0.30858627571304176, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9562673976450592, log_density = 5.2658918964597365, hamiltonian_energy = -5.14825940772636, hamiltonian_energy_error = 0.14063980570899215, max_hamiltonian_energy_error = -0.2917726496854991, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8267210633312896, log_density = 8.298263652300086, hamiltonian_energy = -2.1327107239688914, hamiltonian_energy_error = -0.09161894099565515, max_hamiltonian_energy_error = 0.7336292537061238, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.980549931491354, log_density = 7.46177404990825, hamiltonian_energy = -6.701590439221788, hamiltonian_energy_error = 0.04789550356568295, max_hamiltonian_energy_error = -0.14905423936801476, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7571545284569329, log_density = 5.590901189574023, hamiltonian_energy = -3.385516501621724, hamiltonian_energy_error = 0.38512002301067705, max_hamiltonian_energy_error = 0.7278703321314075, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9423525578043951, log_density = 4.212351049662958, hamiltonian_energy = -3.7304953788872006, hamiltonian_energy_error = 0.18988084828461105, max_hamiltonian_energy_error = -0.3316588738008037, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9930013001610088, log_density = 9.22607823128197, hamiltonian_energy = -3.4680579785394228, hamiltonian_energy_error = -0.4127596173462953, max_hamiltonian_energy_error = -0.6143425045922477, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9972867658244174, log_density = 9.661857000039305, hamiltonian_energy = -7.584773203817809, hamiltonian_energy_error = -0.10226539751462482, max_hamiltonian_energy_error = -0.1546590121515452, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8772178914789813, log_density = 6.451490099592778, hamiltonian_energy = -5.482413739102713, hamiltonian_energy_error = 0.2639122346768108, max_hamiltonian_energy_error = 0.2639122346768108, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9863859848557589, log_density = 9.545842591606778, hamiltonian_energy = -5.39573393491894, hamiltonian_energy_error = -0.35765864262956626, max_hamiltonian_energy_error = -0.35765864262956626, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9796760393274572, log_density = 8.777565263005805, hamiltonian_energy = -7.305017636357872, hamiltonian_energy_error = -0.012310845718799257, max_hamiltonian_energy_error = 0.08124834181663232, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9737339744929562, log_density = 7.849433414877989, hamiltonian_energy = -6.183700552455409, hamiltonian_energy_error = 0.02857792001225956, max_hamiltonian_energy_error = 0.1346355055773687, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.773489484678176, hamiltonian_energy = -7.533146862725641, hamiltonian_energy_error = -0.11113867730475491, max_hamiltonian_energy_error = -0.11113867730475491, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9748197685778988, log_density = 9.270734487265381, hamiltonian_energy = -8.595878908191033, hamiltonian_energy_error = 0.04080835649522285, max_hamiltonian_energy_error = 0.041324406678159065, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9945293479464837, log_density = 9.700030475652996, hamiltonian_energy = -9.158427130331791, hamiltonian_energy_error = -0.0389329422951068, max_hamiltonian_energy_error = -0.04330520342051081, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7310266219722731, log_density = 9.259174966187507, hamiltonian_energy = -6.423613908905232, hamiltonian_energy_error = 0.25627654737859107, max_hamiltonian_energy_error = 0.9145923919543, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.951295930484557, log_density = 8.140411181455129, hamiltonian_energy = -6.5131388479238, hamiltonian_energy_error = 0.045429115398322395, max_hamiltonian_energy_error = 0.0978014387296966, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8317277670097759, log_density = 3.2743057464805982, hamiltonian_energy = -1.3399969618518222, hamiltonian_energy_error = 0.4219108930722746, max_hamiltonian_energy_error = 0.7411356039920003, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 5.136216099165498, hamiltonian_energy = -2.4597772102311457, hamiltonian_energy_error = -0.13186419873596167, max_hamiltonian_energy_error = -0.42682778407413124, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9555677922726091, log_density = 8.572701210817078, hamiltonian_energy = -3.2365733298301214, hamiltonian_energy_error = -0.3390874004944724, max_hamiltonian_energy_error = -0.3390874004944724, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9562358239426104, log_density = 8.519124027669003, hamiltonian_energy = -7.05668421387574, hamiltonian_energy_error = 0.04662562627457323, max_hamiltonian_energy_error = -0.2604570920083056, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.976322207616909, log_density = 9.296247013576533, hamiltonian_energy = -7.064737019432783, hamiltonian_energy_error = -0.03861785797555228, max_hamiltonian_energy_error = 0.14902382392544133, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9810704326109421, log_density = 8.627694840102528, hamiltonian_energy = -7.5330843589095915, hamiltonian_energy_error = 0.02803870510338946, max_hamiltonian_energy_error = -0.13845636072455658, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9078373781538777, log_density = 9.093696178064592, hamiltonian_energy = -6.34561988083224, hamiltonian_energy_error = 0.0014338279894738903, max_hamiltonian_energy_error = 0.29376227561415735, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9883353140406165, log_density = 8.2569852496335, hamiltonian_energy = -7.715238354755479, hamiltonian_energy_error = 0.0791303718541796, max_hamiltonian_energy_error = -0.2357858832952875, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8469211426835502, log_density = 6.916985053453367, hamiltonian_energy = -5.494345112221523, hamiltonian_energy_error = 0.2329027100205332, max_hamiltonian_energy_error = 1.2386628674966351, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9870675621388308, log_density = 9.216483375294864, hamiltonian_energy = -4.789022349016341, hamiltonian_energy_error = -0.38578382626439467, max_hamiltonian_energy_error = -0.4150427000195016, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9070446894191925, log_density = 7.578055538135207, hamiltonian_energy = -5.395001791372274, hamiltonian_energy_error = 0.27461824801059187, max_hamiltonian_energy_error = 0.27461824801059187, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9788700983852481, log_density = 7.745536964970363, hamiltonian_energy = -7.057645742000098, hamiltonian_energy_error = 0.0654879902412775, max_hamiltonian_energy_error = -0.14874720481232284, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9992654407277456, log_density = 9.719291010269504, hamiltonian_energy = -4.255628657815701, hamiltonian_energy_error = -0.18538690385775514, max_hamiltonian_energy_error = -0.18538690385775514, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9060974563410717, log_density = 8.719047733997101, hamiltonian_energy = -7.073006643791431, hamiltonian_energy_error = 0.04484221307536185, max_hamiltonian_energy_error = 0.24180248286126016, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7597939860423601, log_density = 6.450342657462578, hamiltonian_energy = -4.1858282046409965, hamiltonian_energy_error = 0.28581316328469164, max_hamiltonian_energy_error = 0.5766568626419604, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9799244777673923, log_density = 8.417584834390528, hamiltonian_energy = -3.9678972806106136, hamiltonian_energy_error = -0.1230447194193034, max_hamiltonian_energy_error = -0.37548619416922646, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 6.2510807696143775, hamiltonian_energy = -4.3651189436664275, hamiltonian_energy_error = -0.06017002302078556, max_hamiltonian_energy_error = -0.5204056414273408, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7276649785206454, log_density = 6.529458036309983, hamiltonian_energy = -1.8750626035425384, hamiltonian_energy_error = 0.036070315656044905, max_hamiltonian_energy_error = 1.8424052120773027, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9008380490388741, log_density = 6.408979948870559, hamiltonian_energy = -3.1676351661249673, hamiltonian_energy_error = 0.07828295453065204, max_hamiltonian_energy_error = 0.28156811365336276, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.87624698269509, log_density = 4.586929885250761, hamiltonian_energy = -2.8220812020014217, hamiltonian_energy_error = 0.28710858496105507, max_hamiltonian_energy_error = 0.29934209725219096, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8588805781762129, log_density = 2.4878067225674503, hamiltonian_energy = 0.012070342095561681, hamiltonian_energy_error = -0.8106477611842995, max_hamiltonian_energy_error = -0.8106477611842995, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9629592946116013, log_density = 5.421124160631983, hamiltonian_energy = -0.08263499493350412, hamiltonian_energy_error = 0.031278972772477154, max_hamiltonian_energy_error = -0.3479274714752236, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6061236017496885, log_density = 5.869169318449881, hamiltonian_energy = -1.371207115537982, hamiltonian_energy_error = 0.001061297227244573, max_hamiltonian_energy_error = 20.031764743031413, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9835317798869166, log_density = 5.142627448158718, hamiltonian_energy = -2.5408322529390803, hamiltonian_energy_error = 0.024351919162326485, max_hamiltonian_energy_error = 0.07874783539093944, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7966861817862021, log_density = 5.959455601437405, hamiltonian_energy = -0.37978400794187106, hamiltonian_energy_error = -0.2649372874573732, max_hamiltonian_energy_error = 0.9816635604324802, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9597891352026712, log_density = 7.108959057233459, hamiltonian_energy = -3.2754950065368895, hamiltonian_energy_error = -0.044487509890497545, max_hamiltonian_energy_error = 0.6245106965031648, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8812754275586691, log_density = 8.069072332269283, hamiltonian_energy = -4.324651471649865, hamiltonian_energy_error = -0.11531496190251822, max_hamiltonian_energy_error = 0.7250154404448934, tree_depth = 5, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9891439331607115, log_density = 8.971588497666101, hamiltonian_energy = -5.663019695615259, hamiltonian_energy_error = -0.11370631225344052, max_hamiltonian_energy_error = -0.19377605076209736, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9919844164764925, log_density = 8.509656734736735, hamiltonian_energy = -7.992912798212783, hamiltonian_energy_error = 0.023671629477119538, max_hamiltonian_energy_error = -0.08359135537868134, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9834106028945458, log_density = 7.6521554856666265, hamiltonian_energy = -6.24361001719364, hamiltonian_energy_error = -0.02804062492842707, max_hamiltonian_energy_error = -0.15279733896649184, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8765001874266528, log_density = 8.432446176789195, hamiltonian_energy = -5.064474293681635, hamiltonian_energy_error = 0.10450210971874885, max_hamiltonian_energy_error = 0.6059275419449364, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9673892861073152, log_density = 7.791931022278568, hamiltonian_energy = -6.431354372318831, hamiltonian_energy_error = 0.07566004441131469, max_hamiltonian_energy_error = -0.19249583222344668, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.832718866959474, log_density = 8.589555134226954, hamiltonian_energy = -5.460076087766194, hamiltonian_energy_error = -0.032755086551587986, max_hamiltonian_energy_error = 0.32616468748786076, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9687553221359524, log_density = 8.13689414479947, hamiltonian_energy = -7.6580145242400075, hamiltonian_energy_error = 0.0560280191806255, max_hamiltonian_energy_error = 0.0560280191806255, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9858525511277916, log_density = 9.27779938103418, hamiltonian_energy = -6.84260036967319, hamiltonian_energy_error = 0.06312197946026021, max_hamiltonian_energy_error = -0.09062972011187398, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9744378611635092, log_density = 9.67671496135565, hamiltonian_energy = -8.01407920247461, hamiltonian_energy_error = -0.050461674404447265, max_hamiltonian_energy_error = -0.10300523848325582, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9929072584588672, log_density = 9.779339798366308, hamiltonian_energy = -8.15242612293818, hamiltonian_energy_error = -0.06939545659882107, max_hamiltonian_energy_error = -0.11274022772960812, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9562708812324232, log_density = 9.513914904175, hamiltonian_energy = -7.0339638761900005, hamiltonian_energy_error = 0.04258157982285393, max_hamiltonian_energy_error = 0.1235927480470016, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9977586882385007, log_density = 9.026016801545307, hamiltonian_energy = -8.59351134462515, hamiltonian_energy_error = -0.011949430805755057, max_hamiltonian_energy_error = -0.0843741232313917, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8888897002833857, log_density = 7.7673908731984405, hamiltonian_energy = -6.111318498746363, hamiltonian_energy_error = 0.0893778883766485, max_hamiltonian_energy_error = 0.37197862338924104, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9684995701841997, log_density = 7.907188024762689, hamiltonian_energy = -6.032912903150525, hamiltonian_energy_error = -0.12355307193841991, max_hamiltonian_energy_error = -0.2501468434563616, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.944107379644032, log_density = 6.497372427519373, hamiltonian_energy = -5.304049131645444, hamiltonian_energy_error = 0.14355728147555702, max_hamiltonian_energy_error = -0.1515889763303786, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9705682029707766, log_density = 6.769454490200372, hamiltonian_energy = -3.0229884073120723, hamiltonian_energy_error = 0.048986803998535056, max_hamiltonian_energy_error = -0.25151324818823806, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8396897286007923, log_density = 6.7040382070646345, hamiltonian_energy = -3.009919064325138, hamiltonian_energy_error = -0.14907819975428804, max_hamiltonian_energy_error = 0.8942648695781483, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8502743274810178, log_density = 7.499732183035883, hamiltonian_energy = -2.9359304282767704, hamiltonian_energy_error = 0.09387364273843302, max_hamiltonian_energy_error = 0.9910522887932749, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9306182003333837, log_density = 2.1935423528381452, hamiltonian_energy = 0.18529196742697263, hamiltonian_energy_error = 0.1123113064813479, max_hamiltonian_energy_error = -0.29473313031623416, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9652741236432727, log_density = 6.882820271350271, hamiltonian_energy = 0.6259560843888066, hamiltonian_energy_error = -0.242357723887336, max_hamiltonian_energy_error = -0.4213138549156463, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9680931629109377, log_density = 6.2456614695684465, hamiltonian_energy = -3.3026143586105574, hamiltonian_energy_error = 0.007706071775212209, max_hamiltonian_energy_error = 0.22718812562087587, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9436851440780522, log_density = 8.141518341276889, hamiltonian_energy = -3.9680833253246703, hamiltonian_energy_error = -0.1708210031273345, max_hamiltonian_energy_error = -0.39149739753726065, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8412945809991687, log_density = 7.638694808881111, hamiltonian_energy = -5.509405738802077, hamiltonian_energy_error = -0.22001300242799626, max_hamiltonian_energy_error = 0.7357293462581671, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9403636854861701, log_density = 6.9324156494993545, hamiltonian_energy = -4.648998149367874, hamiltonian_energy_error = 0.11340730641414254, max_hamiltonian_energy_error = 0.1846964855930855, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9974018916127915, log_density = 6.096305038661143, hamiltonian_energy = -5.07605321727686, hamiltonian_energy_error = 0.01835417070077039, max_hamiltonian_energy_error = -0.14399689459157194, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9913078892979215, log_density = 6.516060882103027, hamiltonian_energy = -2.3973852874497004, hamiltonian_energy_error = -0.06335636898077102, max_hamiltonian_energy_error = -0.20392439409037522, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8582357958497641, log_density = 9.417660816225682, hamiltonian_energy = -2.5037342271064444, hamiltonian_energy_error = -0.28159142374008006, max_hamiltonian_energy_error = 0.6741449715304908, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8605661205839745, log_density = 9.415747821038298, hamiltonian_energy = -7.457770599160071, hamiltonian_energy_error = 0.08414365610336638, max_hamiltonian_energy_error = 0.2824525779664864, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9693195007061937, log_density = 8.255643717818392, hamiltonian_energy = -7.817085873136431, hamiltonian_energy_error = 0.056521038911030885, max_hamiltonian_energy_error = 0.056521038911030885, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9893836093958688, log_density = 8.81704213556575, hamiltonian_energy = -7.18660574107837, hamiltonian_energy_error = 0.02277370035498194, max_hamiltonian_energy_error = -0.09818339504964069, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9262788024280199, log_density = 8.273340491295041, hamiltonian_energy = -6.233463358333643, hamiltonian_energy_error = -0.01236930429444616, max_hamiltonian_energy_error = 0.2484593496801466, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9873477298859487, log_density = 9.686546224154949, hamiltonian_energy = -6.274614061473896, hamiltonian_energy_error = -0.15438720661836847, max_hamiltonian_energy_error = -0.15438720661836847, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9797456388214375, log_density = 8.86557251009682, hamiltonian_energy = -8.261615604716974, hamiltonian_energy_error = -0.04126968217652838, max_hamiltonian_energy_error = 0.05954952801709901, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5029819735109022, log_density = 8.893496860934464, hamiltonian_energy = -3.808689021130622, hamiltonian_energy_error = 0.4202044187801004, max_hamiltonian_energy_error = 4.430741284656297, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9105142264212863, log_density = 7.4382153354240526, hamiltonian_energy = -5.863583298658444, hamiltonian_energy_error = 0.32857798343772515, max_hamiltonian_energy_error = 0.32857798343772515, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9950276956094648, log_density = 6.651835336169084, hamiltonian_energy = -4.842260687644517, hamiltonian_energy_error = -0.043507433606274404, max_hamiltonian_energy_error = -0.20541870738257906, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8689281145814183, log_density = 8.497383054064287, hamiltonian_energy = -3.2709511886750997, hamiltonian_energy_error = -0.05359485532708863, max_hamiltonian_energy_error = 0.8815489775481673, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9310576389818069, log_density = 7.327597263824893, hamiltonian_energy = -6.657266747266898, hamiltonian_energy_error = 0.13548642086291895, max_hamiltonian_energy_error = -0.1922576487790355, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 7.755148669572436, hamiltonian_energy = -5.673183249374092, hamiltonian_energy_error = -0.11598685621018934, max_hamiltonian_energy_error = -0.369366254578388, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9943085212389415, log_density = 9.264887401943822, hamiltonian_energy = -7.295294928052532, hamiltonian_energy_error = -0.2010954752990246, max_hamiltonian_energy_error = -0.3131208361876059, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9999998194053215, log_density = 9.819798913043732, hamiltonian_energy = -9.098702755410844, hamiltonian_energy_error = -0.05342385649777981, max_hamiltonian_energy_error = -0.06678474682673219, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9973749273666687, log_density = 9.325317759541011, hamiltonian_energy = -8.836583731633658, hamiltonian_energy_error = -0.000159790738829102, max_hamiltonian_energy_error = 0.02101725347525729, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8278544090949936, log_density = 8.973263857277344, hamiltonian_energy = -6.585673450259183, hamiltonian_energy_error = -0.0003401038432739867, max_hamiltonian_energy_error = 0.3489539296912829, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9187917082703592, log_density = 6.238825869501511, hamiltonian_energy = -4.701392843054079, hamiltonian_energy_error = 0.16762752016523397, max_hamiltonian_energy_error = 0.22208411213832058, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.912014398073449, log_density = 9.41270818768989, hamiltonian_energy = -5.184424902646051, hamiltonian_energy_error = -0.011841854226556592, max_hamiltonian_energy_error = 0.33029420084971406, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.34981925338713143, log_density = 7.30143791972502, hamiltonian_energy = -1.7130576100157864, hamiltonian_energy_error = 0.4243209762020692, max_hamiltonian_energy_error = 35.92706189368645, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9829451734129705, log_density = 9.636873797133052, hamiltonian_energy = -6.657479432647076, hamiltonian_energy_error = -0.34411517552814885, max_hamiltonian_energy_error = -0.5079089536058712, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9615035604316978, log_density = 9.144808653172458, hamiltonian_energy = -7.939735738018644, hamiltonian_energy_error = 0.08540996243377208, max_hamiltonian_energy_error = 0.08540996243377208, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9936202361323155, log_density = 9.393363694233543, hamiltonian_energy = -8.400756048828816, hamiltonian_energy_error = -0.05108787418192584, max_hamiltonian_energy_error = -0.11756863748820656, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9252116167724175, log_density = 8.028334422546427, hamiltonian_energy = -7.474019930970828, hamiltonian_energy_error = 0.1326560543935269, max_hamiltonian_energy_error = 0.14173420875604137, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7065963448131554, log_density = 5.71252308544198, hamiltonian_energy = -2.924726832097406, hamiltonian_energy_error = 0.4727450518476415, max_hamiltonian_energy_error = 0.7410318461740908, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 63, is_accept = true, acceptance_rate = 0.6549264387496975, log_density = 8.061980715928723, hamiltonian_energy = -4.23187340627619, hamiltonian_energy_error = -0.8332916841112827, max_hamiltonian_energy_error = 5.266540769301752, tree_depth = 5, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9768512033986193, log_density = 8.890969543243578, hamiltonian_energy = -7.141246659913923, hamiltonian_energy_error = 0.0073937796343788165, max_hamiltonian_energy_error = 0.05578822807506967, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8558829121103314, log_density = 7.107083594583708, hamiltonian_energy = -5.880272163162498, hamiltonian_energy_error = 0.24610566809103673, max_hamiltonian_energy_error = 0.3065714024242574, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9749593317404858, log_density = 6.166857931895212, hamiltonian_energy = -4.222095741356992, hamiltonian_energy_error = 0.10245597758971581, max_hamiltonian_energy_error = -0.19868313523351233, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9987207068204115, log_density = 8.5116824832301, hamiltonian_energy = -5.7665334717490655, hamiltonian_energy_error = -0.2761455881553241, max_hamiltonian_energy_error = -0.3430227186603565, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.3328266618569761, log_density = 8.261842232095756, hamiltonian_energy = -3.3089261147646276, hamiltonian_energy_error = -0.012611430877845997, max_hamiltonian_energy_error = 12.003457309303482, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9584674834373025, log_density = 8.512285849900692, hamiltonian_energy = -5.272427380922743, hamiltonian_energy_error = 0.014827343449930197, max_hamiltonian_energy_error = 0.1942263628553036, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9938269564108079, log_density = 8.229029848581366, hamiltonian_energy = -6.256409799441608, hamiltonian_energy_error = -0.09697317029864294, max_hamiltonian_energy_error = -0.17386919511302246, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9314335473550797, log_density = 8.894040616077858, hamiltonian_energy = -3.6782712636619443, hamiltonian_energy_error = 0.08788849384231234, max_hamiltonian_energy_error = 0.21038887257415873, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9642622053389477, log_density = 7.870169777373363, hamiltonian_energy = -7.021033327493792, hamiltonian_energy_error = 0.10464827331457283, max_hamiltonian_energy_error = -0.11755348516228281, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9986098588140776, log_density = 8.698899765517812, hamiltonian_energy = -6.70156017560646, hamiltonian_energy_error = 0.021072593506618276, max_hamiltonian_energy_error = -0.18460366880939993, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8750359095091931, log_density = 9.524705687499774, hamiltonian_energy = -7.255552869808994, hamiltonian_energy_error = 0.11977598968774483, max_hamiltonian_energy_error = 0.3482981727043999, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8790025939413698, log_density = 8.994179530573502, hamiltonian_energy = -7.6348888353299, hamiltonian_energy_error = 0.11004748232776507, max_hamiltonian_energy_error = 0.24046264956743268, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9969274772521154, log_density = 9.494089177098633, hamiltonian_energy = -8.4210756384172, hamiltonian_energy_error = -0.14826405654773467, max_hamiltonian_energy_error = -0.14826405654773467, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9990299193936121, log_density = 8.866440494547644, hamiltonian_energy = -8.426281637592467, hamiltonian_energy_error = -0.007920539828177198, max_hamiltonian_energy_error = -0.03191442411159073, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9860457813296243, log_density = 9.1004973272264, hamiltonian_energy = -7.069323145766741, hamiltonian_energy_error = 0.016629410451667326, max_hamiltonian_energy_error = 0.0394126205362193, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.4909165172402932, log_density = 7.4091950803245314, hamiltonian_energy = -5.044878175047159, hamiltonian_energy_error = 0.5346503789281778, max_hamiltonian_energy_error = 1.448860805942486, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.551682769946114, log_density = 8.79232165456782, hamiltonian_energy = -4.0821925265113705, hamiltonian_energy_error = 0.10163297501163804, max_hamiltonian_energy_error = 23.63746634070204, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 8.787748817524433, hamiltonian_energy = -6.576919457417876, hamiltonian_energy_error = -0.07010928548573148, max_hamiltonian_energy_error = -0.19376153909930327, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9450598979615931, log_density = 7.877624141849889, hamiltonian_energy = -6.036822335849211, hamiltonian_energy_error = 0.1276195016961239, max_hamiltonian_energy_error = 0.14539183583061366, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8237808743330575, log_density = 9.122692791830035, hamiltonian_energy = -3.844083364500154, hamiltonian_energy_error = -0.05004543731683775, max_hamiltonian_energy_error = 0.5080364609830483, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8715518527240853, log_density = 9.496441941710998, hamiltonian_energy = -5.9261365158207635, hamiltonian_energy_error = -0.07701371493030429, max_hamiltonian_energy_error = 0.4132620374545759, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9562318522800107, log_density = 7.874587703323609, hamiltonian_energy = -6.729300647451547, hamiltonian_energy_error = -0.0019923494977343026, max_hamiltonian_energy_error = 0.10900991616280198, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9593798447716279, log_density = 7.2801800315210485, hamiltonian_energy = -6.258332055931451, hamiltonian_energy_error = 0.04319969478614105, max_hamiltonian_energy_error = 0.1101803809166979, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9369839901157494, log_density = 8.447314522095674, hamiltonian_energy = -4.714766456029331, hamiltonian_energy_error = 0.03906494100788471, max_hamiltonian_energy_error = 0.19889890265641696, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9465052081927036, log_density = 9.427080626639544, hamiltonian_energy = -4.383951965420106, hamiltonian_energy_error = -0.17353153086610362, max_hamiltonian_energy_error = 0.29386010130016516, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9337426693454557, log_density = 7.285455746947498, hamiltonian_energy = -4.418475783734531, hamiltonian_energy_error = 0.09756271287125795, max_hamiltonian_energy_error = 0.19116033959058498, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9129223270106732, log_density = 7.627111806240304, hamiltonian_energy = -2.0654580018985076, hamiltonian_energy_error = -0.26450276700476216, max_hamiltonian_energy_error = 0.453864822363951, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9752432848921564, log_density = 8.527443116007856, hamiltonian_energy = -5.716357362776099, hamiltonian_energy_error = -0.01897758793978177, max_hamiltonian_energy_error = -0.14267152564907093, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.914328667280278, hamiltonian_energy = -8.086527788242112, hamiltonian_energy_error = -0.11551586509217504, max_hamiltonian_energy_error = -0.1408629274484019, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9212818344102709, log_density = 9.04512739599797, hamiltonian_energy = -8.127820255678778, hamiltonian_energy_error = 0.09739751554145037, max_hamiltonian_energy_error = 0.12669911961099523, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9993860890467287, log_density = 9.633356754500825, hamiltonian_energy = -8.268642425696477, hamiltonian_energy_error = -0.11259122804078991, max_hamiltonian_energy_error = -0.11259122804078991, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.878068974057062, log_density = 8.053097469594906, hamiltonian_energy = -4.762154973238625, hamiltonian_energy_error = 0.018376444633943834, max_hamiltonian_energy_error = 0.28991442629581954, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8789588597032238, log_density = 7.1636787375163, hamiltonian_energy = -6.140260699014362, hamiltonian_energy_error = 0.14908271414183094, max_hamiltonian_energy_error = 0.2026147141101564, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6937856437697354, log_density = 7.1636787375163, hamiltonian_energy = -3.209250444127141, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 0.6333342424398278, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 8.039916982280161, hamiltonian_energy = -6.324312754406951, hamiltonian_energy_error = -0.04519861090783728, max_hamiltonian_energy_error = -0.1407097105801034, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9983793622848408, log_density = 7.065572720373343, hamiltonian_energy = -5.8493741527216745, hamiltonian_energy_error = -0.025715112548926555, max_hamiltonian_energy_error = -0.0769885931176919, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9209677952574555, log_density = 7.355515853794378, hamiltonian_energy = -5.485236675263508, hamiltonian_energy_error = 0.13786735003037265, max_hamiltonian_energy_error = 0.13786735003037265, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 8.787296835162973, hamiltonian_energy = -5.970491373543344, hamiltonian_energy_error = -0.014461566716686747, max_hamiltonian_energy_error = -0.19422753289665007, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9138639126758469, log_density = 9.019649744572181, hamiltonian_energy = -6.5875471864689015, hamiltonian_energy_error = 0.018819899926983297, max_hamiltonian_energy_error = 0.31536921690404096, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9988721675691524, log_density = 9.703355578855803, hamiltonian_energy = -8.401602350488233, hamiltonian_energy_error = -0.11833931164814793, max_hamiltonian_energy_error = -0.16843370190917817, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9295333329612743, log_density = 8.083025200885544, hamiltonian_energy = -7.500930788931478, hamiltonian_energy_error = 0.18696266690374674, max_hamiltonian_energy_error = 0.18696266690374674, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9632434442911878, log_density = 9.799027795365896, hamiltonian_energy = -7.046607785235702, hamiltonian_energy_error = -0.18305387079939806, max_hamiltonian_energy_error = -0.26674010525121084, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9258159598650955, log_density = 8.720818170380857, hamiltonian_energy = -6.825593379233963, hamiltonian_energy_error = -0.04528808902403547, max_hamiltonian_energy_error = 0.2288252007128868, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8702934417694494, log_density = 5.716034438392933, hamiltonian_energy = -4.215870692118754, hamiltonian_energy_error = 0.24345411241715542, max_hamiltonian_energy_error = 0.2681323273588285, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 10.140118120309848, hamiltonian_energy = -5.323289287743081, hamiltonian_energy_error = -0.3263083232662396, max_hamiltonian_energy_error = -0.3263083232662396, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8270335070917557, log_density = 8.624186617304177, hamiltonian_energy = -6.888814709843174, hamiltonian_energy_error = 0.12212037925794839, max_hamiltonian_energy_error = 0.30990110379617786, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9659464753837624, log_density = 9.769275922442182, hamiltonian_energy = -7.77429111009147, hamiltonian_energy_error = -0.12388200317234954, max_hamiltonian_energy_error = -0.12388200317234954, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9313314875576535, log_density = 8.740184521097511, hamiltonian_energy = -6.474846589222401, hamiltonian_energy_error = 0.14055575005222654, max_hamiltonian_energy_error = 0.17513283418544567, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.944976763106876, log_density = 9.145465620106012, hamiltonian_energy = -5.64116580915757, hamiltonian_energy_error = -0.06046216316036279, max_hamiltonian_energy_error = -0.2110817342682747, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9819779409948962, log_density = 9.625303068793835, hamiltonian_energy = -6.320973454127701, hamiltonian_energy_error = -0.11600792777110591, max_hamiltonian_energy_error = -0.11788113971439973, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9752634123697012, log_density = 8.912249986911968, hamiltonian_energy = -8.795582222312325, hamiltonian_energy_error = 0.06000161915028279, max_hamiltonian_energy_error = 0.06000161915028279, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9964724257306892, log_density = 8.726639307788922, hamiltonian_energy = -7.69896537879894, hamiltonian_energy_error = -0.0024975897562669047, max_hamiltonian_energy_error = -0.10217954864783074, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9718573151380941, log_density = 7.942182579083251, hamiltonian_energy = -6.954875880414478, hamiltonian_energy_error = 0.15855831496715211, max_hamiltonian_energy_error = 0.15855831496715211, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.004462252135475509, log_density = 7.942182579083251, hamiltonian_energy = -2.8937396086342098, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 6.955503034255637, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9955914881367478, log_density = 8.436877615695025, hamiltonian_energy = -6.193091230268742, hamiltonian_energy_error = -0.13962261663328412, max_hamiltonian_energy_error = -0.32117189334081964, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8974858181113412, log_density = 9.032377898623832, hamiltonian_energy = -6.570910233562021, hamiltonian_energy_error = -0.3366539317302797, max_hamiltonian_energy_error = 0.8946361503522953, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.2555765573131289, log_density = 9.032377898623832, hamiltonian_energy = -6.305236255049049, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 1.7394915779750946, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7279606436830655, log_density = 9.341020961308523, hamiltonian_energy = -5.048161368880575, hamiltonian_energy_error = 0.2364589442010736, max_hamiltonian_energy_error = 0.988706025850628, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9503817963202251, log_density = 9.106462103973485, hamiltonian_energy = -8.417212765521219, hamiltonian_energy_error = 0.10391323897030347, max_hamiltonian_energy_error = 0.1257180687555195, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9519179469935791, log_density = 9.226010788109342, hamiltonian_energy = -8.302397464455977, hamiltonian_energy_error = -0.0013386007148952217, max_hamiltonian_energy_error = 0.15577251314400975, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9930191267296016, log_density = 9.650282593548013, hamiltonian_energy = -7.455389129670062, hamiltonian_energy_error = -0.07702651233988256, max_hamiltonian_energy_error = -0.16952857793952614, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9276109144990178, log_density = 8.778065766557853, hamiltonian_energy = -5.910386648290064, hamiltonian_energy_error = -0.0398549925139422, max_hamiltonian_energy_error = 0.2567562439816138, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9031680739379879, log_density = 9.076738479591198, hamiltonian_energy = -6.581968626348061, hamiltonian_energy_error = 0.1290305289673217, max_hamiltonian_energy_error = 0.21795806459589162, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.98652329694332, log_density = 9.552881637022432, hamiltonian_energy = -8.235576559878618, hamiltonian_energy_error = -0.10255765158019159, max_hamiltonian_energy_error = -0.14608541612548542, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.99480293471934, log_density = 9.248504357293136, hamiltonian_energy = -8.170806456948142, hamiltonian_energy_error = -0.025608724060552035, max_hamiltonian_energy_error = -0.09649224126089884, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.7960030207064079, log_density = 6.995308536977699, hamiltonian_energy = -5.366332151439814, hamiltonian_energy_error = 0.3559618495379233, max_hamiltonian_energy_error = 0.4803443844866395, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9714160149917038, log_density = 8.271540543548891, hamiltonian_energy = -5.08978005876118, hamiltonian_energy_error = -0.25203118909258926, max_hamiltonian_energy_error = -0.30625252256489066, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9862898974927705, log_density = 8.460585570211956, hamiltonian_energy = -7.064179364140241, hamiltonian_energy_error = 0.004271308614533176, max_hamiltonian_energy_error = -0.12934896366310955, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9405807252261699, log_density = 8.494693823521478, hamiltonian_energy = -6.040265173639694, hamiltonian_energy_error = 0.03601149149309535, max_hamiltonian_energy_error = 0.20060484627654507, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8907374462496749, log_density = 8.372946926558479, hamiltonian_energy = -6.266208876946221, hamiltonian_energy_error = 0.006659951810435771, max_hamiltonian_energy_error = 0.4222709383904659, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7681286015366238, log_density = 6.626205610374036, hamiltonian_energy = -4.403534341597855, hamiltonian_energy_error = 0.19919805296625093, max_hamiltonian_energy_error = 4.393738815161209, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.3521146844079104, log_density = 7.534427724868293, hamiltonian_energy = -5.86194687481778, hamiltonian_energy_error = -1.139134878258452, max_hamiltonian_energy_error = 5.402129328731011, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.33107540161347, log_density = 4.851093146786118, hamiltonian_energy = -3.344327203052786, hamiltonian_energy_error = 1.3361525314237346, max_hamiltonian_energy_error = 29.342353849229703, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.322537616903125, log_density = 9.6536719644959, hamiltonian_energy = -3.054971241417908, hamiltonian_energy_error = 0.8424238735355023, max_hamiltonian_energy_error = 2.3545909567578542, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7640352760005786, log_density = 4.071532897098605, hamiltonian_energy = -3.141424931230057, hamiltonian_energy_error = 0.48904490432732617, max_hamiltonian_energy_error = 0.6373017300144164, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9795846614750732, log_density = 3.8907833550596873, hamiltonian_energy = -0.06473593627495555, hamiltonian_energy_error = -0.49994911381267526, max_hamiltonian_energy_error = -0.6563769394470862, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9703091026083147, log_density = 7.150196290614057, hamiltonian_energy = -1.0659891987012076, hamiltonian_energy_error = -0.45963945836187037, max_hamiltonian_energy_error = -0.45963945836187037, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9736034837656291, log_density = 8.824555670080219, hamiltonian_energy = -4.230771321403684, hamiltonian_energy_error = 0.04077798628437268, max_hamiltonian_energy_error = 0.12091118988480432, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9341909063512746, log_density = 6.72166416300977, hamiltonian_energy = -6.521521354419961, hamiltonian_energy_error = 0.17296177498088916, max_hamiltonian_energy_error = -0.22227162345596607, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 9.128451587061106, hamiltonian_energy = -6.856310967079689, hamiltonian_energy_error = -0.38348620833961267, max_hamiltonian_energy_error = -0.38348620833961267, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9045852814297815, log_density = 7.106667758954322, hamiltonian_energy = -6.22787251862393, hamiltonian_energy_error = 0.11414766881256977, max_hamiltonian_energy_error = 0.2581205569205913, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9514715873082921, log_density = 7.598580620555207, hamiltonian_energy = -4.393548787851628, hamiltonian_energy_error = 0.2513901144210804, max_hamiltonian_energy_error = -0.28951840737172496, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8969689495728276, log_density = 9.203196861280185, hamiltonian_energy = -6.863083463323552, hamiltonian_energy_error = 0.022596629519215483, max_hamiltonian_energy_error = 0.22280080128645974, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8562692602996792, log_density = 7.35061866338724, hamiltonian_energy = -5.05208214492198, hamiltonian_energy_error = -0.4931112804914992, max_hamiltonian_energy_error = 0.5642127210876584, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8227198016817875, log_density = 5.0950862143856925, hamiltonian_energy = -4.114128445318488, hamiltonian_energy_error = 0.2447590379897866, max_hamiltonian_energy_error = 0.37794784175286233, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9840746371565755, log_density = 7.294244837400692, hamiltonian_energy = -2.0295596581901485, hamiltonian_energy_error = -0.219786937471937, max_hamiltonian_energy_error = -0.519989946977728, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 8.873229061240252, hamiltonian_energy = -6.575929519933949, hamiltonian_energy_error = -0.140941554410432, max_hamiltonian_energy_error = -0.19056647308005026, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7432915567721469, log_density = 6.728739626533391, hamiltonian_energy = -5.134095374041662, hamiltonian_energy_error = 0.7984468528537381, max_hamiltonian_energy_error = 0.8039359342048433, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9935827509259113, log_density = 9.889956740511634, hamiltonian_energy = -6.876207965455604, hamiltonian_energy_error = -0.24573130561459777, max_hamiltonian_energy_error = -0.36419098909525793, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8590720648183563, log_density = 9.050023239875324, hamiltonian_energy = -7.449465390738453, hamiltonian_energy_error = 0.10629049389634382, max_hamiltonian_energy_error = 0.2801770890298556, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9677418089972795, log_density = 9.72573110321549, hamiltonian_energy = -7.4584848507327965, hamiltonian_energy_error = -0.05964726294783418, max_hamiltonian_energy_error = 0.12237663625075523, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9625578613545208, log_density = 9.982775972298406, hamiltonian_energy = -8.626574494281362, hamiltonian_energy_error = -0.02980634704400309, max_hamiltonian_energy_error = 0.0809397802983689, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9145774660779618, log_density = 9.379359343534595, hamiltonian_energy = -8.46675729480802, hamiltonian_energy_error = 0.10832854919152801, max_hamiltonian_energy_error = 0.14451883326241344, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8719438385399972, log_density = 8.82838637675641, hamiltonian_energy = -6.759528619984276, hamiltonian_energy_error = 0.04726961958417153, max_hamiltonian_energy_error = 0.35341198404154817, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9214823174520542, log_density = 7.555324452622759, hamiltonian_energy = -5.978279390621562, hamiltonian_energy_error = 0.2536594198170343, max_hamiltonian_energy_error = 0.30481719860576906, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8685210563290359, log_density = 6.448486956132241, hamiltonian_energy = -3.667067858442183, hamiltonian_energy_error = 0.1974294833083996, max_hamiltonian_energy_error = 0.5580129490696151, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.976675998756682, log_density = 6.577600042085379, hamiltonian_energy = -4.00857219130217, hamiltonian_energy_error = 0.055188262506097985, max_hamiltonian_energy_error = -0.47439632794804965, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.6288744519996697, log_density = 7.514966546947893, hamiltonian_energy = -1.9748073623563709, hamiltonian_energy_error = 0.4666808760898382, max_hamiltonian_energy_error = 35.25213558767011, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9868379145038588, log_density = 8.011447768301437, hamiltonian_energy = -4.567272921224894, hamiltonian_energy_error = -0.05468398454781731, max_hamiltonian_energy_error = -0.08994341047936594, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9988020469416745, log_density = 8.844753312704071, hamiltonian_energy = -6.101288871228478, hamiltonian_energy_error = -0.09459255170141923, max_hamiltonian_energy_error = -0.1424243930704936, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9980916074137468, log_density = 6.22129068582935, hamiltonian_energy = -6.006339720672307, hamiltonian_energy_error = 0.01003322971325904, max_hamiltonian_energy_error = -0.027885760861839692, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9792957960110217, log_density = 9.422737407233967, hamiltonian_energy = -5.532534870348574, hamiltonian_energy_error = -0.032474189255921715, max_hamiltonian_energy_error = 0.07084617781885161, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9493385062812149, log_density = 6.227971763221326, hamiltonian_energy = -4.623941385008564, hamiltonian_energy_error = 0.13831636714664164, max_hamiltonian_energy_error = 0.13831636714664164, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9796543499113052, log_density = 7.517215748213461, hamiltonian_energy = -2.4722883623754726, hamiltonian_energy_error = -0.062474850596173415, max_hamiltonian_energy_error = -0.18916307615042394, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9829563353358833, log_density = 7.946853738959641, hamiltonian_energy = -5.90080622367602, hamiltonian_energy_error = 0.02754618830928468, max_hamiltonian_energy_error = -0.10056843473442711, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9599217725918121, log_density = 8.144848249912805, hamiltonian_energy = -5.567410542832152, hamiltonian_energy_error = 0.029888711299668635, max_hamiltonian_energy_error = -0.15015335157748488, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9555215253712313, log_density = 6.286445711629085, hamiltonian_energy = -3.295300830777996, hamiltonian_energy_error = 0.017015984577234633, max_hamiltonian_energy_error = -0.2937872607771794, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9808061210100473, log_density = 9.052911915691096, hamiltonian_energy = -5.125295555580127, hamiltonian_energy_error = -0.3253338075654515, max_hamiltonian_energy_error = -0.3253338075654515, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9133482972224342, log_density = 6.9259363108339045, hamiltonian_energy = -5.637390592107109, hamiltonian_energy_error = 0.16657434486692768, max_hamiltonian_energy_error = 0.17284730194359987, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8992612025688741, log_density = 7.120086838078798, hamiltonian_energy = -4.131103504342727, hamiltonian_energy_error = 0.0585049778937492, max_hamiltonian_energy_error = 0.23368238294000898, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9729756756555688, log_density = 6.534446536600916, hamiltonian_energy = -3.4734226776857478, hamiltonian_energy_error = 0.09513818200780388, max_hamiltonian_energy_error = 0.23244097978397127, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 7.100146795441091, hamiltonian_energy = -4.099156112913732, hamiltonian_energy_error = -0.0750409576165767, max_hamiltonian_energy_error = -0.20777197720610996, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7974290594809155, log_density = 5.0321279917372035, hamiltonian_energy = -3.6933453692755753, hamiltonian_energy_error = 0.22611983637929445, max_hamiltonian_energy_error = 0.3969011721196889, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9813198973837277, log_density = 8.39753235505265, hamiltonian_energy = -4.457907805501275, hamiltonian_energy_error = -0.3497818251171152, max_hamiltonian_energy_error = -0.3998120147475701, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9157246271714599, log_density = 9.051652311693683, hamiltonian_energy = -6.433144943495986, hamiltonian_energy_error = -0.03891056923633052, max_hamiltonian_energy_error = 0.22039207041850872, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9797095067750796, log_density = 8.429052734274428, hamiltonian_energy = -7.435722476551251, hamiltonian_energy_error = 0.05563246153796264, max_hamiltonian_energy_error = 0.05563246153796264, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9775064019371932, log_density = 6.845165453323478, hamiltonian_energy = -5.59495457747296, hamiltonian_energy_error = 0.06316736694619252, max_hamiltonian_energy_error = -0.14514904533624495, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8753948863901427, log_density = 5.601385077552674, hamiltonian_energy = -2.4669218844967276, hamiltonian_energy_error = -0.1196410090858393, max_hamiltonian_energy_error = 0.43531567992380404, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9570087715223445, log_density = 5.987019006604509, hamiltonian_energy = -3.886127021577567, hamiltonian_energy_error = -0.07470972429685485, max_hamiltonian_energy_error = 0.0953507913578675, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9901631466120338, log_density = 5.532883963577348, hamiltonian_energy = -0.8936966446142929, hamiltonian_energy_error = -0.004639639862949352, max_hamiltonian_energy_error = -0.07894241142310587, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9566380539105868, log_density = 5.459884797377214, hamiltonian_energy = -2.034962949012373, hamiltonian_energy_error = 0.019709544920167854, max_hamiltonian_energy_error = 0.28446844429061535, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9744914628346742, log_density = 5.68779113473062, hamiltonian_energy = -4.7162809186213135, hamiltonian_energy_error = -0.0048913677795301425, max_hamiltonian_energy_error = 0.07961221280372666, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.728159723743041, log_density = 5.6902562440151545, hamiltonian_energy = -1.845721221004427, hamiltonian_energy_error = -0.09664257730708226, max_hamiltonian_energy_error = 1.4058772018143801, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.08714730518193772, log_density = 5.6902562440151545, hamiltonian_energy = 2.1787572811929605, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 40.74900911007438, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8004673080368266, log_density = 5.885707257768008, hamiltonian_energy = -4.125434295945393, hamiltonian_energy_error = 0.25949140953638494, max_hamiltonian_energy_error = 0.4806384566503308, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.22809932698230453, log_density = 6.700157025438331, hamiltonian_energy = -3.107314023053808, hamiltonian_energy_error = 0.3630693469448145, max_hamiltonian_energy_error = 3.4733051822320804, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9862266701333143, log_density = 7.4135208027614645, hamiltonian_energy = -6.018436946764822, hamiltonian_energy_error = -0.23859571047937944, max_hamiltonian_energy_error = -0.24793798568637992, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.99933000413561, log_density = 7.483788511338023, hamiltonian_energy = -5.818248809177907, hamiltonian_energy_error = -0.06064418386600767, max_hamiltonian_energy_error = -0.09523866049002105, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 2.7417380003722186e-8, log_density = 7.483788511338023, hamiltonian_energy = -0.5035157517790969, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 48.946334885718585, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9770126058734716, log_density = 6.527331484918974, hamiltonian_energy = -6.300412794977057, hamiltonian_energy_error = 0.06198667114349643, max_hamiltonian_energy_error = 0.06198667114349643, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9614027717501477, log_density = 8.292631713825676, hamiltonian_energy = -5.652445112583033, hamiltonian_energy_error = -0.14234504391118907, max_hamiltonian_energy_error = -0.36945622479503104, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.962386604778624, log_density = 7.371688566314019, hamiltonian_energy = -6.240087876314756, hamiltonian_energy_error = 0.12865698967125727, max_hamiltonian_energy_error = 0.12865698967125727, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8831851891523306, log_density = 6.563702997756023, hamiltonian_energy = -3.884575747457815, hamiltonian_energy_error = 0.20712214783524052, max_hamiltonian_energy_error = 0.35306514500757924, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9713040485981478, log_density = 7.697668442117374, hamiltonian_energy = -5.325773945476969, hamiltonian_energy_error = -0.20397703030181713, max_hamiltonian_energy_error = -0.35768847915745283, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.99279700742734, log_density = 7.86534899107581, hamiltonian_energy = -5.967259568136896, hamiltonian_energy_error = -0.0038936329172116757, max_hamiltonian_energy_error = -0.2429703376391643, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9171006273298637, log_density = 6.876866100524063, hamiltonian_energy = -5.6611461011526645, hamiltonian_energy_error = 0.16694579258376407, max_hamiltonian_energy_error = 0.19725689046378392, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 3.9290118963169363, hamiltonian_energy = -2.962663492134552, hamiltonian_energy_error = -0.014158404873138242, max_hamiltonian_energy_error = -0.38556215160461305, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5917400304104171, log_density = 5.931927648620395, hamiltonian_energy = -0.7063916252671554, hamiltonian_energy_error = -0.03415039294312994, max_hamiltonian_energy_error = 20.19570114862099, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 7.624909157361055, hamiltonian_energy = -5.5744346103205515, hamiltonian_energy_error = -0.21667408610703198, max_hamiltonian_energy_error = -0.24020559203994285, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8326328201593426, log_density = 4.4848167132941015, hamiltonian_energy = -1.5614862542605534, hamiltonian_energy_error = 0.2116632653706736, max_hamiltonian_energy_error = 0.32189326165080945, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 6.515384217097772, hamiltonian_energy = -3.9061723176470853, hamiltonian_energy_error = -0.156717139156072, max_hamiltonian_energy_error = -0.22735557438121035, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.919014872050891, log_density = 9.134602824768555, hamiltonian_energy = -4.383443045367425, hamiltonian_energy_error = 0.06072626189410535, max_hamiltonian_energy_error = 0.1704875970627544, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9920669282860409, log_density = 9.483664519597816, hamiltonian_energy = -8.651801079470232, hamiltonian_energy_error = -0.10683955843420989, max_hamiltonian_energy_error = -0.11749020496904272, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9934158813997003, log_density = 9.901474578334234, hamiltonian_energy = -9.156508096913484, hamiltonian_energy_error = -0.02039741797874406, max_hamiltonian_energy_error = -0.05412239618841319, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.836709295036102, log_density = 7.672355513162897, hamiltonian_energy = -5.839731256982514, hamiltonian_energy_error = 0.129248964418764, max_hamiltonian_energy_error = 0.25972388273988223, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8546030986149235, log_density = 9.043493680239798, hamiltonian_energy = -5.083307130916004, hamiltonian_energy_error = 0.07681203099662337, max_hamiltonian_energy_error = 0.3310414699094766, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9765025673747858, log_density = 6.001977333777887, hamiltonian_energy = -3.246150247146727, hamiltonian_energy_error = -0.013349498690899075, max_hamiltonian_energy_error = -0.14669753017775466, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8365131604125119, log_density = 4.29690173082138, hamiltonian_energy = -0.03692816677450583, hamiltonian_energy_error = 0.3365624782052743, max_hamiltonian_energy_error = 0.36876255330609453, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9885630850136946, log_density = 4.6159111407495175, hamiltonian_energy = -2.1307104082370802, hamiltonian_energy_error = 0.1259344456847602, max_hamiltonian_energy_error = -0.3974764399672388, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 5.470104609376257, hamiltonian_energy = -3.296503927245116, hamiltonian_energy_error = -0.20889757765447348, max_hamiltonian_energy_error = -0.5041853753985661, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9744923735421934, log_density = 8.839481444972431, hamiltonian_energy = -1.8363748647858742, hamiltonian_energy_error = -0.07375053007640897, max_hamiltonian_energy_error = -0.12080699717378796, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.99779747668546, log_density = 8.86569402284982, hamiltonian_energy = -7.420447191280617, hamiltonian_energy_error = -0.015396483204344058, max_hamiltonian_energy_error = -0.11183920137570347, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9620959945475003, log_density = 9.254089676769167, hamiltonian_energy = -7.174746367975583, hamiltonian_energy_error = 0.03502389936059913, max_hamiltonian_energy_error = 0.11645363985834933, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9077042995609713, log_density = 7.984876989144954, hamiltonian_energy = -5.734886623122525, hamiltonian_energy_error = 0.14978361611917723, max_hamiltonian_energy_error = 0.1910208482180682, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9458840282035362, log_density = 6.014550950256524, hamiltonian_energy = -2.1384140739861075, hamiltonian_energy_error = 0.015227579791905033, max_hamiltonian_energy_error = 0.18287868109955596, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.782378521039474, log_density = 8.573021739209471, hamiltonian_energy = -4.371284082143411, hamiltonian_energy_error = -0.1901294487464238, max_hamiltonian_energy_error = 2.3493459072859295, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9997608459948829, log_density = 9.582397583290712, hamiltonian_energy = -7.897774811524188, hamiltonian_energy_error = -0.1430525483517524, max_hamiltonian_energy_error = -0.1430525483517524, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9467050591879533, log_density = 8.35492543839239, hamiltonian_energy = -6.157067197760986, hamiltonian_energy_error = 0.09385154665953621, max_hamiltonian_energy_error = 0.14918771000439435, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.852993729648065, log_density = 8.949335014311757, hamiltonian_energy = -4.785563708226762, hamiltonian_energy_error = 0.005321013522626927, max_hamiltonian_energy_error = 0.48078229746374124, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8563765207810261, log_density = 6.105737779518606, hamiltonian_energy = -4.217363037404513, hamiltonian_energy_error = 0.3062325219618538, max_hamiltonian_energy_error = 0.4391146643562589, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9933269753056485, log_density = 9.013672941289883, hamiltonian_energy = -4.54848656845569, hamiltonian_energy_error = -0.4663798173893845, max_hamiltonian_energy_error = -0.48573533331044416, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9397961791663599, log_density = 6.960423131708341, hamiltonian_energy = -5.643978608579627, hamiltonian_energy_error = 0.22723381685999655, max_hamiltonian_energy_error = 0.27488844647624244, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7265516681961817, log_density = 8.050704242530253, hamiltonian_energy = -0.9787777693012716, hamiltonian_energy_error = -0.16084504540019395, max_hamiltonian_energy_error = 0.9170247983504993, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9988989021097012, log_density = 9.49883912811699, hamiltonian_energy = -7.455960838023401, hamiltonian_energy_error = -0.09814959797462741, max_hamiltonian_energy_error = -0.19951883097290146, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9360987696172497, log_density = 7.541004953696168, hamiltonian_energy = -6.117624563623033, hamiltonian_energy_error = 0.06093245107047718, max_hamiltonian_energy_error = 0.16255448735810418, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9521643107773986, log_density = 7.6409115067001565, hamiltonian_energy = -3.682396813080694, hamiltonian_energy_error = 0.0501441756315395, max_hamiltonian_energy_error = 0.10735074385649712, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.911181847960157, log_density = 7.511321010083098, hamiltonian_energy = -4.320131105611505, hamiltonian_energy_error = 0.16282095101491834, max_hamiltonian_energy_error = 0.28117161387946066, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9909044023629032, log_density = 7.406824105846862, hamiltonian_energy = -4.897456737271437, hamiltonian_energy_error = -0.12682906749317358, max_hamiltonian_energy_error = -0.2574045228318482, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9981798726946124, log_density = 9.86514955111629, hamiltonian_energy = -7.209051271518363, hamiltonian_energy_error = -0.17293967269072663, max_hamiltonian_energy_error = -0.17293967269072663, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9624113410614028, log_density = 9.013194111161958, hamiltonian_energy = -7.626235763828728, hamiltonian_energy_error = 0.054329591147741496, max_hamiltonian_energy_error = 0.07062014209496148, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9424669041636148, log_density = 8.042985300706423, hamiltonian_energy = -6.363684787600819, hamiltonian_energy_error = 0.07343817039858358, max_hamiltonian_energy_error = 0.12313046732855781, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9576207331749819, log_density = 7.602678958832367, hamiltonian_energy = -4.588571461269867, hamiltonian_energy_error = 0.10066675078975074, max_hamiltonian_energy_error = 0.10066675078975074, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8602681505224877, log_density = 8.651491034600706, hamiltonian_energy = -5.394073018131481, hamiltonian_energy_error = 0.05759298489970366, max_hamiltonian_energy_error = 0.515740534569038, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9545511930001803, log_density = 6.254919715866464, hamiltonian_energy = -4.925947113586043, hamiltonian_energy_error = 0.2244003872631648, max_hamiltonian_energy_error = 0.2244003872631648, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9762040133634596, log_density = 8.77090970117866, hamiltonian_energy = -4.686245213797434, hamiltonian_energy_error = -0.30811020431154734, max_hamiltonian_energy_error = -0.3540986615320936, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8817044470254662, log_density = 9.185118954682412, hamiltonian_energy = -6.322001521152457, hamiltonian_energy_error = 0.02466013545993828, max_hamiltonian_energy_error = 0.42297490635263646, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.975821204810775, log_density = 8.936686861173932, hamiltonian_energy = -7.628264689445292, hamiltonian_energy_error = -0.12425299728592787, max_hamiltonian_energy_error = -0.12425299728592787, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9857191420727517, log_density = 9.917423764003779, hamiltonian_energy = -8.099986817033795, hamiltonian_energy_error = -0.005983940525416287, max_hamiltonian_energy_error = 0.05688419704051206, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9573738506840687, log_density = 9.593041703809973, hamiltonian_energy = -8.91757772750582, hamiltonian_energy_error = 0.052796060847017046, max_hamiltonian_energy_error = 0.09241677714444485, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9979801081153031, log_density = 9.429981382376775, hamiltonian_energy = -8.973118845310294, hamiltonian_energy_error = -0.010806279001586816, max_hamiltonian_energy_error = -0.07199293625866154, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9784003953586106, log_density = 9.82607374461168, hamiltonian_energy = -8.002073044258804, hamiltonian_energy_error = -0.0329311216372421, max_hamiltonian_energy_error = 0.08068385757560126, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9761293148441578, log_density = 9.181971208458794, hamiltonian_energy = -8.867739743024382, hamiltonian_energy_error = 0.002235166900256047, max_hamiltonian_energy_error = 0.04942279250178139, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7666512675749474, log_density = 6.617490955551048, hamiltonian_energy = -4.613132585518184, hamiltonian_energy_error = 0.2774147488318466, max_hamiltonian_energy_error = 0.3646915293749924, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8884518620312899, log_density = 7.185967482180843, hamiltonian_energy = -4.11506818811533, hamiltonian_energy_error = 0.24623763291400014, max_hamiltonian_energy_error = -0.3437657661412832, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 3.915375493445797, hamiltonian_energy = 1.1635954564225832, hamiltonian_energy_error = -0.34671984816265944, max_hamiltonian_energy_error = -0.4809066284513328, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8393410925509535, log_density = 7.756756602168853, hamiltonian_energy = -1.013766178044408, hamiltonian_energy_error = 0.14729301096878977, max_hamiltonian_energy_error = 0.35339547850059894, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.979365429746538, log_density = 8.807080916502604, hamiltonian_energy = -6.899270478105046, hamiltonian_energy_error = 0.022484595486343295, max_hamiltonian_energy_error = -0.22281213201865047, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9952535695574637, log_density = 8.65733403262052, hamiltonian_energy = -7.763305332267641, hamiltonian_energy_error = -0.07678785311243175, max_hamiltonian_energy_error = -0.23655491096481374, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9694835838169206, log_density = 8.73032410550652, hamiltonian_energy = -7.305289092327934, hamiltonian_energy_error = 0.0392812725150824, max_hamiltonian_energy_error = -0.15475595924912167, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.916542099214987, log_density = 7.470869718839819, hamiltonian_energy = -4.3547409356300735, hamiltonian_energy_error = -0.3747610687544958, max_hamiltonian_energy_error = -0.4996316654546913, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7307088952013713, log_density = 8.381375270995328, hamiltonian_energy = -4.973462530496688, hamiltonian_energy_error = -0.1136836577457121, max_hamiltonian_energy_error = 3.302247728163799, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8782390145928799, log_density = 8.217080601781786, hamiltonian_energy = -5.621888153594247, hamiltonian_energy_error = 0.04940175959580895, max_hamiltonian_energy_error = 1.0473132832557033, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9997081205108093, log_density = 8.285571027921147, hamiltonian_energy = -7.203121820272351, hamiltonian_energy_error = -0.04072747010294897, max_hamiltonian_energy_error = -0.13658195702230547, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9837094849478147, log_density = 7.852323453888404, hamiltonian_energy = -6.746214632816454, hamiltonian_energy_error = 0.009230047052712465, max_hamiltonian_energy_error = 0.09663276135143573, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.943519976907607, log_density = 8.342307528106087, hamiltonian_energy = -5.414229486403359, hamiltonian_energy_error = 0.03406701735127893, max_hamiltonian_energy_error = 0.18481726439360724, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9893667762702506, log_density = 8.681697224341665, hamiltonian_energy = -6.530602379918081, hamiltonian_energy_error = -0.10421045741590795, max_hamiltonian_energy_error = -0.14007129526355655, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9732347434492975, log_density = 8.83842861359595, hamiltonian_energy = -6.477095096759891, hamiltonian_energy_error = 0.020874552922869327, max_hamiltonian_energy_error = 0.09510964680371536, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8625113213962587, log_density = 6.752465016654632, hamiltonian_energy = -5.333853559390031, hamiltonian_energy_error = 0.18906063878457413, max_hamiltonian_energy_error = 0.3928286653519768, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9949474160500373, log_density = 6.905108578375197, hamiltonian_energy = -5.564452944339163, hamiltonian_energy_error = 0.05384397374642802, max_hamiltonian_energy_error = -0.34941562664188197, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9960528082576224, log_density = 6.3954433963335156, hamiltonian_energy = -5.915367355643483, hamiltonian_energy_error = -0.06731912369619586, max_hamiltonian_energy_error = -0.38747175436441683, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9860958629885398, log_density = 8.924875438116022, hamiltonian_energy = -4.9868670884732555, hamiltonian_energy_error = -0.13798180109524516, max_hamiltonian_energy_error = -0.2773570350782162, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8977305685876883, log_density = 6.5639280551078745, hamiltonian_energy = -3.7090508718346578, hamiltonian_energy_error = 0.17235426120870256, max_hamiltonian_energy_error = 0.38128542843687496, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9951180727474179, log_density = 6.87632859860059, hamiltonian_energy = -4.669894687942305, hamiltonian_energy_error = -0.053807732852845014, max_hamiltonian_energy_error = -0.2888667268515617, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7440841564915913, log_density = 4.529480282224018, hamiltonian_energy = -1.2070033726559601, hamiltonian_energy_error = 0.34877582292114484, max_hamiltonian_energy_error = 0.6226814941277352, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9816321458666096, log_density = 6.079527351013667, hamiltonian_energy = -3.2029606909971458, hamiltonian_energy_error = -0.1783421310354547, max_hamiltonian_energy_error = -0.4025685686909797, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9979284172119817, log_density = 8.897784239798625, hamiltonian_energy = -2.832031805084794, hamiltonian_energy_error = -0.08074976603193207, max_hamiltonian_energy_error = -0.15455042896475835, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 1.0, log_density = 8.99263695881366, hamiltonian_energy = -7.708005918765672, hamiltonian_energy_error = -0.06994289005372156, max_hamiltonian_energy_error = -0.11977977058706024, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9443103685303674, log_density = 7.9640217047243205, hamiltonian_energy = -6.020811151530344, hamiltonian_energy_error = 0.019390359877970553, max_hamiltonian_energy_error = 0.2539419787410626, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8785233096036766, log_density = 7.497656015363166, hamiltonian_energy = 4.012561962210681, hamiltonian_energy_error = 0.12514898213376036, max_hamiltonian_energy_error = 0.3705638831242908, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9700494116017656, log_density = 4.7630953099454345, hamiltonian_energy = -3.977326892741446, hamiltonian_energy_error = 0.2352846050187285, max_hamiltonian_energy_error = -0.9331218037465989, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 6.067503037308974, hamiltonian_energy = -3.6681133696850905, hamiltonian_energy_error = -0.5601116739236884, max_hamiltonian_energy_error = -1.0893383385013848, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8546365270519203, log_density = 4.9146214596935724, hamiltonian_energy = -2.536141091422666, hamiltonian_energy_error = 0.022667382618831056, max_hamiltonian_energy_error = 0.6465450594384641, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9912260561426977, log_density = 8.790001352975391, hamiltonian_energy = -4.7665897008712825, hamiltonian_energy_error = -0.7311345493715251, max_hamiltonian_energy_error = -0.7311345493715251, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.96794877863323, log_density = 8.86458391509436, hamiltonian_energy = -6.759270574413147, hamiltonian_energy_error = -0.03274946581608518, max_hamiltonian_energy_error = 0.07822083659267598, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9012548036988347, log_density = 7.584115665519857, hamiltonian_energy = -6.887155627405129, hamiltonian_energy_error = 0.11987615640494731, max_hamiltonian_energy_error = 0.19239041065400997, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.969212284276501, log_density = 7.694919858348406, hamiltonian_energy = -5.298268377943244, hamiltonian_energy_error = -0.06800364843680473, max_hamiltonian_energy_error = 0.11830969148156623, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.5212615091994065, log_density = 6.795144618122594, hamiltonian_energy = 1.2085951299189635, hamiltonian_energy_error = 0.49447655863703766, max_hamiltonian_energy_error = 1.189048015776262, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9641547261866459, log_density = 5.79933248620662, hamiltonian_energy = -3.211279615600846, hamiltonian_energy_error = -0.024694536123600397, max_hamiltonian_energy_error = -0.25235620084873966, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9997793818846039, log_density = 8.671983056980622, hamiltonian_energy = -4.092932698992134, hamiltonian_energy_error = -0.11278102870013829, max_hamiltonian_energy_error = -0.23606107412068233, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9758598104735765, log_density = 9.458979054600466, hamiltonian_energy = -7.432422541337296, hamiltonian_energy_error = -0.03080468029815009, max_hamiltonian_energy_error = -0.2001089001829932, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9049228295581694, log_density = 8.99447941039189, hamiltonian_energy = -7.255998386864421, hamiltonian_energy_error = -0.07234648511344055, max_hamiltonian_energy_error = 0.2670738322171866, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9164649142855883, log_density = 8.066102443138046, hamiltonian_energy = -5.683395734381282, hamiltonian_energy_error = 0.0832438466282559, max_hamiltonian_energy_error = 0.21183560388360512, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9323445003205825, log_density = 6.915644467629116, hamiltonian_energy = -4.173571955840639, hamiltonian_energy_error = 0.025341847009770824, max_hamiltonian_energy_error = 0.20003067357421944, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9984732581812094, log_density = 7.954695581072347, hamiltonian_energy = -4.65046348735758, hamiltonian_energy_error = -0.13054322708204236, max_hamiltonian_energy_error = -0.1870501541208176, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8757452838187025, log_density = 7.718484934140314, hamiltonian_energy = -4.548557127087323, hamiltonian_energy_error = 0.14437969550254692, max_hamiltonian_energy_error = 0.3862707954630835, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8892209961744378, log_density = 4.821978539056378, hamiltonian_energy = -3.9301520276281394, hamiltonian_energy_error = 0.18467090989894785, max_hamiltonian_energy_error = -0.1942574304714615, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9694624449118964, log_density = 7.6426036313465975, hamiltonian_energy = -0.43611049173423133, hamiltonian_energy_error = -0.2928690194336774, max_hamiltonian_energy_error = -0.34465786378574315, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9414134930823232, log_density = 6.71630632836461, hamiltonian_energy = -6.482979176972016, hamiltonian_energy_error = 0.11480279909895774, max_hamiltonian_energy_error = 0.11480279909895774, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.935759768542963, log_density = 7.42461181612159, hamiltonian_energy = -4.080658619362153, hamiltonian_energy_error = -0.16594158976466522, max_hamiltonian_energy_error = -0.5909377050166573, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9479868295471314, log_density = 7.491461670350967, hamiltonian_energy = -3.538284969071654, hamiltonian_energy_error = -0.20795412337100938, max_hamiltonian_energy_error = 0.8236563341198644, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9887376647491881, log_density = 6.801412427124276, hamiltonian_energy = -4.9322308771321435, hamiltonian_energy_error = -0.005010347999277798, max_hamiltonian_energy_error = -0.1380042674977897, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.999754420570376, log_density = 8.743810798300167, hamiltonian_energy = -4.952428388385343, hamiltonian_energy_error = -0.1152647124826709, max_hamiltonian_energy_error = -0.17982055553712595, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9415421779420974, log_density = 6.296868556669192, hamiltonian_energy = -3.622711344606039, hamiltonian_energy_error = 0.07539804287316842, max_hamiltonian_energy_error = 0.19731533298836457, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 9, is_accept = true, acceptance_rate = 0.8299390158629876, log_density = 7.657697215665824, hamiltonian_energy = -2.813690659856186, hamiltonian_energy_error = -0.0138365952837054, max_hamiltonian_energy_error = 0.5247190134968545, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9881334591674011, log_density = 8.528325495697242, hamiltonian_energy = -5.504942700458804, hamiltonian_energy_error = -0.20549473349870784, max_hamiltonian_energy_error = -0.31302571414335656, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9931750310354721, log_density = 8.0311078763069, hamiltonian_energy = -6.906212559655188, hamiltonian_energy_error = -0.014160247034983087, max_hamiltonian_energy_error = -0.13860948404883722, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.32771861639374733, log_density = 7.4439181261227905, hamiltonian_energy = 0.8376358347712056, hamiltonian_energy_error = 0.9151747013203826, max_hamiltonian_energy_error = 1.7007531410781338, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9731385331005298, log_density = 9.57338319525329, hamiltonian_energy = -6.36884923197938, hamiltonian_energy_error = -0.11916947208451933, max_hamiltonian_energy_error = -0.1684060709690982, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9338133241568748, log_density = 8.114629264293551, hamiltonian_energy = -6.812184265559132, hamiltonian_energy_error = 0.08831203601413495, max_hamiltonian_energy_error = 0.12281056159561476, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.627799551699457, hamiltonian_energy = -7.395702644701961, hamiltonian_energy_error = -0.0971994147986539, max_hamiltonian_energy_error = -0.13666658238060325, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9356194596739177, log_density = 8.158058832448834, hamiltonian_energy = -6.401247284502155, hamiltonian_energy_error = 0.02418459041687271, max_hamiltonian_energy_error = 0.17037670447739917, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7778868980001016, log_density = 7.0825443549803175, hamiltonian_energy = -3.6464235450942595, hamiltonian_energy_error = 0.26511244961126534, max_hamiltonian_energy_error = 0.5636928465647992, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9129947423479301, log_density = 7.449670210210201, hamiltonian_energy = -5.360951895514443, hamiltonian_energy_error = -1.161540114290604, max_hamiltonian_energy_error = -1.161540114290604, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9986887216509818, log_density = 7.88476143799069, hamiltonian_energy = -6.927989048172889, hamiltonian_energy_error = -0.32504556713844135, max_hamiltonian_energy_error = -0.5114865226732865, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9581631026973886, log_density = 8.584594233799713, hamiltonian_energy = -7.292254104769223, hamiltonian_energy_error = 0.039756750837297794, max_hamiltonian_energy_error = 0.25022727927311283, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9820034534039526, log_density = 9.607819464718066, hamiltonian_energy = -6.81729088988053, hamiltonian_energy_error = 0.04269336904324561, max_hamiltonian_energy_error = -0.18784950094074127, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9538124696959234, log_density = 8.432598631847107, hamiltonian_energy = -7.68621435054881, hamiltonian_energy_error = 0.1121300626982098, max_hamiltonian_energy_error = 0.16704798284593014, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9786163925624487, log_density = 6.268941427565043, hamiltonian_energy = -5.282063889174756, hamiltonian_energy_error = -0.030625553999858113, max_hamiltonian_energy_error = -0.1881009483379792, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9448875072120961, log_density = 8.128598462309123, hamiltonian_energy = -4.865102738627552, hamiltonian_energy_error = 0.0748920544154501, max_hamiltonian_energy_error = 0.137523846896066, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9707659462190704, log_density = 7.756301527137159, hamiltonian_energy = -5.941495824766369, hamiltonian_energy_error = -0.015912773670775593, max_hamiltonian_energy_error = -0.15195315972319623, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.976157264313396, log_density = 8.940150492176823, hamiltonian_energy = -5.882991530524813, hamiltonian_energy_error = -0.1126790319153157, max_hamiltonian_energy_error = -0.23773330962409567, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9630126114906333, log_density = 8.4800869642884, hamiltonian_energy = -5.229960137080717, hamiltonian_energy_error = -0.04661295838111723, max_hamiltonian_energy_error = 0.11204570562960914, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.99232435135616, log_density = 8.094147396970651, hamiltonian_energy = -5.83739401602165, hamiltonian_energy_error = -0.0704190840181802, max_hamiltonian_energy_error = -0.17043244996818618, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 8.341515867797094, hamiltonian_energy = -7.847159004366075, hamiltonian_energy_error = -0.022552078010342314, max_hamiltonian_energy_error = -0.09079909990148227, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8399395681981048, log_density = 4.642554813287735, hamiltonian_energy = -3.056971877416061, hamiltonian_energy_error = 0.47792361853000864, max_hamiltonian_energy_error = 0.5201460045947801, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6667643746189883, log_density = 3.196034037449383, hamiltonian_energy = 4.857892785284653, hamiltonian_energy_error = -0.6440435247599083, max_hamiltonian_energy_error = 8.134915318252379, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9596001266706021, log_density = 5.113421444563439, hamiltonian_energy = -1.024784802986793, hamiltonian_energy_error = 0.0022202346531292605, max_hamiltonian_energy_error = -0.34191744665700696, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 8.101398669493259, hamiltonian_energy = -4.936650936298356, hamiltonian_energy_error = -0.22650296874863152, max_hamiltonian_energy_error = -0.2535017204289538, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.910674912532902, log_density = 6.664180440084968, hamiltonian_energy = -5.389094668995396, hamiltonian_energy_error = 0.13092079694593295, max_hamiltonian_energy_error = 0.19580979470335436, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9678135236921637, log_density = 6.9347457465079785, hamiltonian_energy = -3.8678684646502997, hamiltonian_energy_error = -0.005560826400023533, max_hamiltonian_energy_error = -0.1539863859148074, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7342910552958289, log_density = 3.0275450508009474, hamiltonian_energy = 0.16594285982762091, hamiltonian_energy_error = 0.6375864924906649, max_hamiltonian_energy_error = 0.70292083574543, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8717938516972433, log_density = 7.097044359929852, hamiltonian_energy = -2.912534642910754, hamiltonian_energy_error = -0.729011537511326, max_hamiltonian_energy_error = -0.729011537511326, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9524491005929545, log_density = 7.092950438159265, hamiltonian_energy = -5.405876935754087, hamiltonian_energy_error = 0.004127820844137986, max_hamiltonian_energy_error = 0.18740685701573145, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9983501189782309, log_density = 8.477050652165396, hamiltonian_energy = -6.063391598335263, hamiltonian_energy_error = -0.10228145664720678, max_hamiltonian_energy_error = -0.1750657093332073, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.953217334436819, log_density = 8.303459510155033, hamiltonian_energy = -7.022917337316353, hamiltonian_energy_error = 0.10499109325136313, max_hamiltonian_energy_error = 0.12210351021102817, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9951883861980726, log_density = 9.60256304154044, hamiltonian_energy = -7.695679740500811, hamiltonian_energy_error = -0.12001274051888089, max_hamiltonian_energy_error = -0.17824071267123642, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8554615688363593, log_density = 8.055925487307722, hamiltonian_energy = -5.162557166186125, hamiltonian_energy_error = 0.22861347225382733, max_hamiltonian_energy_error = 0.36236373615754847, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9973668022786307, log_density = 4.796166883532038, hamiltonian_energy = -2.4693382765637395, hamiltonian_energy_error = -0.004868380369390302, max_hamiltonian_energy_error = -0.2893544755661521, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 8.753712442740964, hamiltonian_energy = -4.27848315035023, hamiltonian_energy_error = -0.2925804264113032, max_hamiltonian_energy_error = -0.2925804264113032, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9834591368208498, log_density = 9.460499526871885, hamiltonian_energy = -7.205840854823213, hamiltonian_energy_error = -0.05503564241345149, max_hamiltonian_energy_error = -0.06281224753178449, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9927770577638317, log_density = 8.933761952961646, hamiltonian_energy = -8.214364377472188, hamiltonian_energy_error = 0.010159000658742201, max_hamiltonian_energy_error = -0.031878576880027154, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8938443808687193, log_density = 8.315691519527576, hamiltonian_energy = -7.320957010467435, hamiltonian_energy_error = 0.056697830402058, max_hamiltonian_energy_error = 0.19508163230602893, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9988022581059073, log_density = 8.870661767916435, hamiltonian_energy = -6.056687414187881, hamiltonian_energy_error = -0.0737668923453505, max_hamiltonian_energy_error = -0.09238586041200136, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9950579597892558, log_density = 9.504564141587778, hamiltonian_energy = -8.675427450225728, hamiltonian_energy_error = -0.03309587822585236, max_hamiltonian_energy_error = -0.05257303194460228, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9664903746050902, log_density = 7.933671615654077, hamiltonian_energy = -7.119526327598818, hamiltonian_energy_error = 0.021953333220240623, max_hamiltonian_energy_error = 0.07486938561322187, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9521784656962803, log_density = 7.5959823880944555, hamiltonian_energy = -5.957244780072046, hamiltonian_energy_error = 0.08459835199624077, max_hamiltonian_energy_error = 0.11613271106784673, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7364313172154461, log_density = 6.121934052860892, hamiltonian_energy = -2.6191948249159736, hamiltonian_energy_error = 0.28917424376974, max_hamiltonian_energy_error = 1.2758335920003718, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9997114928804663, log_density = 7.823736846148876, hamiltonian_energy = -5.633807577002712, hamiltonian_energy_error = -0.32937935199772905, max_hamiltonian_energy_error = -0.32937935199772905, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.658142997155032, hamiltonian_energy = -7.518115467132565, hamiltonian_energy_error = -0.0647526590200398, max_hamiltonian_energy_error = -0.10998559074943604, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9779253142993525, log_density = 9.65766894021597, hamiltonian_energy = -5.718610435945857, hamiltonian_energy_error = 0.000497508476286157, max_hamiltonian_energy_error = 0.047789294812260685, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9476129482320552, log_density = 9.033749870731441, hamiltonian_energy = -6.791731602737009, hamiltonian_energy_error = 0.029063263688422047, max_hamiltonian_energy_error = 0.08188823811909884, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9497675959665607, log_density = 9.656209519676207, hamiltonian_energy = -7.767800597647617, hamiltonian_energy_error = 0.006756509161246704, max_hamiltonian_energy_error = 0.092345037844348, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9691702153062313, log_density = 8.39806767965521, hamiltonian_energy = -7.429647573935333, hamiltonian_energy_error = 0.0011773950683240386, max_hamiltonian_energy_error = 0.07259937220841994, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8088998711871805, log_density = 7.1026619014992285, hamiltonian_energy = -3.482002781118928, hamiltonian_energy_error = 0.06709839239183113, max_hamiltonian_energy_error = 0.44125015778061316, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.824047163727937, log_density = 5.048581892296507, hamiltonian_energy = 0.8611704918768517, hamiltonian_energy_error = 0.18822954035121242, max_hamiltonian_energy_error = 0.8890846094591569, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 7.053284597695651, hamiltonian_energy = -4.077711929901111, hamiltonian_energy_error = -0.10745804531546854, max_hamiltonian_energy_error = -0.1633943950293708, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.629100769741149, log_density = 6.79092263970087, hamiltonian_energy = 0.7421455025358368, hamiltonian_energy_error = 0.2686737379021187, max_hamiltonian_energy_error = 1.2187984636478724, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9194988209387075, log_density = 8.87832512661473, hamiltonian_energy = -4.026446960123767, hamiltonian_energy_error = -0.14406853755792692, max_hamiltonian_energy_error = 0.3493329330403512, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9905629934587563, log_density = 8.43198124632983, hamiltonian_energy = -6.15862704734878, hamiltonian_energy_error = -0.09874306045042669, max_hamiltonian_energy_error = -0.14799229281984783, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9523491132535844, log_density = 7.382869431271192, hamiltonian_energy = -3.062505290765764, hamiltonian_energy_error = 0.027913054008546823, max_hamiltonian_energy_error = -0.2243042090488787, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8748779375856066, log_density = 7.330945153560753, hamiltonian_energy = -4.0686004347304, hamiltonian_energy_error = 0.10262395906160204, max_hamiltonian_energy_error = 1.1042477463424394, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9656173969416935, log_density = 8.103585370188222, hamiltonian_energy = -4.139845027212022, hamiltonian_energy_error = -0.13752880717497717, max_hamiltonian_energy_error = 0.4959688121836514, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9912263432515468, log_density = 9.249317080900262, hamiltonian_energy = -7.379446918733164, hamiltonian_energy_error = -0.010024620383473959, max_hamiltonian_energy_error = 0.019407802939926277, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8386569364940698, log_density = 6.489405146481278, hamiltonian_energy = -2.2468214023062245, hamiltonian_energy_error = 0.18333268659320368, max_hamiltonian_energy_error = 0.847328252011244, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6817929417137867, log_density = 4.851233208193097, hamiltonian_energy = -4.5545248957301165, hamiltonian_energy_error = 0.40886549799291405, max_hamiltonian_energy_error = 0.965020905410757, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.26529643632472377, log_density = 2.517026099266694, hamiltonian_energy = -1.7258412827653689, hamiltonian_energy_error = -0.5909628131281335, max_hamiltonian_energy_error = 7.0820572637788075, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.18791619470935816, log_density = 3.124771532624239, hamiltonian_energy = -0.4695752435293872, hamiltonian_energy_error = 0.1315948888531231, max_hamiltonian_energy_error = 17.030058964518215, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.3433104928097764e-5, log_density = 3.124771532624239, hamiltonian_energy = 0.3188088895098482, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 41.08977410491932, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.04330239044473858, log_density = 3.124771532624239, hamiltonian_energy = 0.5721826772294518, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 4.275341399124036, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8834546468922867, log_density = 3.177579376030655, hamiltonian_energy = -0.3102324065527853, hamiltonian_energy_error = 0.18004124913854458, max_hamiltonian_energy_error = 0.6559238193117141, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.533683633250705, log_density = 4.314495211238491, hamiltonian_energy = -0.07702862993038373, hamiltonian_energy_error = 0.6771940024337986, max_hamiltonian_energy_error = 0.9918350140875716, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7834452902786246, log_density = 8.206284031807167, hamiltonian_energy = -4.207897552142356, hamiltonian_energy_error = -1.1680178635765008, max_hamiltonian_energy_error = 1.445874224724411, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.008498641157979275, log_density = 8.206284031807167, hamiltonian_energy = -4.746683079475675, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 6.391878726502297, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 2.6862656465469208e-5, log_density = 8.206284031807167, hamiltonian_energy = -1.7809450104752553, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 21.71891281216918, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9749423525299192, log_density = 9.880646921704539, hamiltonian_energy = -6.939403633248951, hamiltonian_energy_error = -0.016454378109491685, max_hamiltonian_energy_error = 0.061926966058187816, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9858088200826559, log_density = 9.508829142409931, hamiltonian_energy = -9.386501298121225, hamiltonian_energy_error = 0.040687123811204984, max_hamiltonian_energy_error = 0.040687123811204984, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.890982058004825, log_density = 7.530541719271628, hamiltonian_energy = -6.66374755102225, hamiltonian_energy_error = 0.17298805439038034, max_hamiltonian_energy_error = 0.19375606552867009, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.3780070402085754, log_density = 5.1152943665212, hamiltonian_energy = -1.7476193763965355, hamiltonian_energy_error = 0.848826980408778, max_hamiltonian_energy_error = 1.2156861912353312, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9207033753779008, log_density = 8.361323866963815, hamiltonian_energy = -4.485868593229286, hamiltonian_energy_error = -0.4863911871535791, max_hamiltonian_energy_error = -0.5314327823104907, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.833657691885494, log_density = 6.691178328487197, hamiltonian_energy = -5.687096975467972, hamiltonian_energy_error = 0.258309592301857, max_hamiltonian_energy_error = 0.31660706766345736, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9815538587113009, log_density = 7.2558231334335375, hamiltonian_energy = -5.474882608974697, hamiltonian_energy_error = -0.04950949377449021, max_hamiltonian_energy_error = -0.33572471089403333, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9932282617946862, log_density = 7.767548009417929, hamiltonian_energy = -6.406081727352758, hamiltonian_energy_error = -0.05369098494290547, max_hamiltonian_energy_error = -0.34621445149487684, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9663818917982397, log_density = 7.137187229427415, hamiltonian_energy = -5.670648125770455, hamiltonian_energy_error = 0.10631021604193247, max_hamiltonian_energy_error = -0.1497122966215345, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.27319935000372475, log_density = 7.137187229427415, hamiltonian_energy = 2.7371928444765175, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 2.4176299555978904, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.987051332960363, log_density = 6.98037615862833, hamiltonian_energy = -3.348395119860089, hamiltonian_energy_error = 0.018646632588055656, max_hamiltonian_energy_error = -0.3258422986431291, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.997772448163966, log_density = 8.354345590222508, hamiltonian_energy = -4.2333134774217775, hamiltonian_energy_error = -0.19805884380956051, max_hamiltonian_energy_error = -0.2912831180646016, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9912378167222133, log_density = 9.376856003490136, hamiltonian_energy = -7.07238993331233, hamiltonian_energy_error = -0.03453974564643758, max_hamiltonian_energy_error = -0.10409974148259948, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9534443182529809, log_density = 9.820398025731574, hamiltonian_energy = -7.787575687583466, hamiltonian_energy_error = -0.1263088296870052, max_hamiltonian_energy_error = 0.16643390333434382, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7486448503714803, log_density = 8.022146419601253, hamiltonian_energy = -7.3503827186276975, hamiltonian_energy_error = 0.3590696540781755, max_hamiltonian_energy_error = 0.3590696540781755, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 8.528754275725316, hamiltonian_energy = -7.126757765040395, hamiltonian_energy_error = -0.08301565136439226, max_hamiltonian_energy_error = -0.2901742734682786, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9572070382648621, log_density = 9.168225479922821, hamiltonian_energy = -6.682454922832328, hamiltonian_energy_error = -0.08060974659291364, max_hamiltonian_energy_error = 0.2723491733451189, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.518367249399287, hamiltonian_energy = -9.087878267492478, hamiltonian_energy_error = -0.055701103047068656, max_hamiltonian_energy_error = -0.07767810303399969, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8215621079774874, log_density = 6.895780805355294, hamiltonian_energy = -6.3925346407443335, hamiltonian_energy_error = 0.24910895550564582, max_hamiltonian_energy_error = 0.24910895550564582, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9771773624353349, log_density = 9.9461235771774, hamiltonian_energy = -5.599137399152294, hamiltonian_energy_error = -0.23268287604593318, max_hamiltonian_energy_error = -0.23268287604593318, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9224382010935948, log_density = 8.78073995040707, hamiltonian_energy = -7.413310781230402, hamiltonian_energy_error = -0.02517984020453401, max_hamiltonian_energy_error = 0.29927119830939386, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7795006338109333, log_density = 6.811204144214962, hamiltonian_energy = -1.6350603979980285, hamiltonian_energy_error = 0.04082744678544703, max_hamiltonian_energy_error = 0.6553527259198959, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 8.82996963681985, hamiltonian_energy = -5.954441674916755, hamiltonian_energy_error = -0.0657949102911779, max_hamiltonian_energy_error = -0.20605927968652082, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.997656641521855, log_density = 8.859095742758456, hamiltonian_energy = -7.904353740788267, hamiltonian_energy_error = -0.05140349135997191, max_hamiltonian_energy_error = -0.10963698042627001, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.982021204054819, log_density = 8.961590486139427, hamiltonian_energy = -4.544421587853608, hamiltonian_energy_error = -0.08038509879493905, max_hamiltonian_energy_error = -0.6103238488949474, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9390852061079953, log_density = 9.914429653484024, hamiltonian_energy = -7.942820564472644, hamiltonian_energy_error = 0.005730504435185857, max_hamiltonian_energy_error = 0.16994583595488422, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9150971933938697, log_density = 8.558792577939094, hamiltonian_energy = -7.835858953540051, hamiltonian_energy_error = 0.06740246655458204, max_hamiltonian_energy_error = 0.15636656728884368, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9934750528040064, log_density = 9.237131654606326, hamiltonian_energy = -8.143863744144301, hamiltonian_energy_error = -0.026191628990439142, max_hamiltonian_energy_error = -0.11633477720926244, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9987746827146031, log_density = 9.518627663679117, hamiltonian_energy = -7.746736737627617, hamiltonian_energy_error = -0.010741413477759032, max_hamiltonian_energy_error = -0.03604406225848322, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9774300689771852, log_density = 9.296950688678825, hamiltonian_energy = -8.767684949688771, hamiltonian_energy_error = 0.011789999729495904, max_hamiltonian_energy_error = 0.07651321707274228, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7562426770805368, log_density = 6.312639725138311, hamiltonian_energy = -2.9489558988346634, hamiltonian_energy_error = 0.19773384103231706, max_hamiltonian_energy_error = 0.36443733555026014, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.942711939130475, log_density = 5.247212583830528, hamiltonian_energy = -3.416748958733697, hamiltonian_energy_error = 0.06980461537442606, max_hamiltonian_energy_error = -0.3493595461328636, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 7.754351703108471, hamiltonian_energy = -3.8725609362284747, hamiltonian_energy_error = -0.1557667757977339, max_hamiltonian_energy_error = -0.290636243675765, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9582684087034264, log_density = 4.853122394989011, hamiltonian_energy = -3.762186549904717, hamiltonian_energy_error = 0.0611539863850914, max_hamiltonian_energy_error = -0.09670457870502913, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9991258818405166, log_density = 6.564724771926656, hamiltonian_energy = -3.4750761869180513, hamiltonian_energy_error = -0.0967718401911708, max_hamiltonian_energy_error = -0.0967718401911708, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7570243741373216, log_density = 8.854252885821829, hamiltonian_energy = -2.468030072836074, hamiltonian_energy_error = 0.30769071311503016, max_hamiltonian_energy_error = 0.4775672924568708, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.991133266517113, log_density = 8.697850097411884, hamiltonian_energy = -7.902844461968913, hamiltonian_energy_error = 0.03209128406970141, max_hamiltonian_energy_error = -0.11868578197327029, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.895555623889949, log_density = 9.533952100973336, hamiltonian_energy = -5.143955817343008, hamiltonian_energy_error = -0.0214085003624902, max_hamiltonian_energy_error = 0.2712080103891594, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9269951353536753, log_density = 7.717200894593807, hamiltonian_energy = -7.034022685270071, hamiltonian_energy_error = 0.14295768295201494, max_hamiltonian_energy_error = 0.19883001065175687, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9285670183364374, log_density = 8.262584039139348, hamiltonian_energy = -5.851339435603651, hamiltonian_energy_error = 0.0021179282589534054, max_hamiltonian_energy_error = 0.36596987999462804, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.988332861196538, log_density = 7.696969456877554, hamiltonian_energy = -7.289090995161351, hamiltonian_energy_error = 0.08130634813917847, max_hamiltonian_energy_error = -0.24759218935569471, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8791535203784986, log_density = 7.950745835293937, hamiltonian_energy = -4.071352592711651, hamiltonian_energy_error = -0.16077011434537436, max_hamiltonian_energy_error = 0.3825965231470083, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9483382851156831, log_density = 7.214816096693934, hamiltonian_energy = -6.776561073318436, hamiltonian_energy_error = 0.09097271490179804, max_hamiltonian_energy_error = -0.17962483630240644, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 8.323921442973871, hamiltonian_energy = -4.807446993832684, hamiltonian_energy_error = -0.10225660278772075, max_hamiltonian_energy_error = -0.34604998140705145, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9812971186241465, log_density = 8.373855771272106, hamiltonian_energy = -4.412802702268634, hamiltonian_energy_error = -0.2623284438477844, max_hamiltonian_energy_error = -0.27827790036669153, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8237613311530713, log_density = 8.1618957188001, hamiltonian_energy = -3.026095049684847, hamiltonian_energy_error = 0.2218719929176176, max_hamiltonian_energy_error = 0.4354501208867001, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9044709142676617, log_density = 7.113809482250405, hamiltonian_energy = -1.0030177435690018, hamiltonian_energy_error = -2.4511770357846547, max_hamiltonian_energy_error = -2.9209928888840473, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9611798125238865, log_density = 9.776077628752265, hamiltonian_energy = -5.854630466780458, hamiltonian_energy_error = 0.04679114050843136, max_hamiltonian_energy_error = 0.22831654269296653, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9229069436627898, log_density = 7.912734526142694, hamiltonian_energy = -6.977067908632846, hamiltonian_energy_error = 0.1733741870141774, max_hamiltonian_energy_error = 0.1733741870141774, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9986798314945347, log_density = 8.542850595200154, hamiltonian_energy = -7.099904457866635, hamiltonian_energy_error = -0.05512343767407124, max_hamiltonian_energy_error = -0.19021028952487828, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9330131120922613, log_density = 6.034673408768224, hamiltonian_energy = -4.237953885589527, hamiltonian_energy_error = 0.125881715912862, max_hamiltonian_energy_error = 0.20441394479233388, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.957576886268433, log_density = 8.71009715273109, hamiltonian_energy = -3.7237761474006392, hamiltonian_energy_error = -0.08362444287044468, max_hamiltonian_energy_error = -0.30216857651415907, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9786589139326035, log_density = 7.735252054821892, hamiltonian_energy = -5.798088058117583, hamiltonian_energy_error = -0.05451529266558186, max_hamiltonian_energy_error = -0.14620148171761027, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9114303687137528, log_density = 9.42648899973081, hamiltonian_energy = -6.022842264909931, hamiltonian_energy_error = 0.060373278841319156, max_hamiltonian_energy_error = 0.2309301516450315, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.818029135077948, log_density = 9.464505269259757, hamiltonian_energy = -3.4435276464611224, hamiltonian_energy_error = -0.040637536489660064, max_hamiltonian_energy_error = 0.4554301907197047, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9385589703944002, log_density = 9.10482797701268, hamiltonian_energy = -8.530998522424145, hamiltonian_energy_error = 0.09227670383912212, max_hamiltonian_energy_error = 0.11517836757201039, tree_depth = 2, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9153700319283335, log_density = 6.178315926134845, hamiltonian_energy = -4.622288543963154, hamiltonian_energy_error = 0.17295279977092104, max_hamiltonian_energy_error = 0.2939258189969518, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6754012089681891, log_density = 5.945911070420026, hamiltonian_energy = -3.6011195514496857, hamiltonian_energy_error = -0.07255708880933609, max_hamiltonian_energy_error = 1.2585294572736014, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9518447915794355, log_density = 9.230910256363128, hamiltonian_energy = -3.8533819472696633, hamiltonian_energy_error = -0.2208159912148, max_hamiltonian_energy_error = 0.6394758072244269, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9428418648005632, log_density = 9.010927825241813, hamiltonian_energy = -7.708288451906401, hamiltonian_energy_error = 0.03871216696515134, max_hamiltonian_energy_error = 0.1399833015391767, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9444817516875493, log_density = 8.522054069968064, hamiltonian_energy = -6.5419663662683885, hamiltonian_energy_error = 0.04100241835800844, max_hamiltonian_energy_error = 0.1435896993114678, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9592421144525561, log_density = 8.305574472479112, hamiltonian_energy = -6.290800015472318, hamiltonian_energy_error = 0.07167584625172196, max_hamiltonian_energy_error = 0.10552979995867862, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8943473549200551, log_density = 9.307781587495704, hamiltonian_energy = -5.960034903359992, hamiltonian_energy_error = -0.07691458242832105, max_hamiltonian_energy_error = 0.3664471989233311, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9820099809619159, log_density = 9.040361749483738, hamiltonian_energy = -7.8255393590680775, hamiltonian_energy_error = -0.050901289360607116, max_hamiltonian_energy_error = -0.08001755332369687, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8244210460635528, log_density = 7.155359338817217, hamiltonian_energy = -4.326379698161807, hamiltonian_energy_error = 0.2274108971286637, max_hamiltonian_energy_error = 0.36257500529955244, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9893299136341637, log_density = 8.17388218762502, hamiltonian_energy = -5.5528215646365044, hamiltonian_energy_error = -0.050567108157532736, max_hamiltonian_energy_error = -0.13007862835105666, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8793880598674371, log_density = 7.688132021640971, hamiltonian_energy = -4.779069793022754, hamiltonian_energy_error = 0.11557090949305238, max_hamiltonian_energy_error = 0.24956508478541117, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9855797063647914, log_density = 9.352771973916314, hamiltonian_energy = -7.513882936317902, hamiltonian_energy_error = -0.27176818080094467, max_hamiltonian_energy_error = -0.2782051902933995, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9058011315293519, log_density = 9.257206955903726, hamiltonian_energy = -7.828910985293559, hamiltonian_energy_error = 0.018812330068619154, max_hamiltonian_energy_error = 0.2947645891138908, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9724256879112217, log_density = 8.899316343246888, hamiltonian_energy = -8.118742079645711, hamiltonian_energy_error = 0.09501781488602212, max_hamiltonian_energy_error = 0.09501781488602212, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9383463434899589, log_density = 9.317978954727439, hamiltonian_energy = -7.507278062172156, hamiltonian_energy_error = -0.10899634125471636, max_hamiltonian_energy_error = 0.24450076924282715, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9634774882124588, log_density = 8.93922104619501, hamiltonian_energy = -7.573346929483625, hamiltonian_energy_error = -0.027737834939649098, max_hamiltonian_energy_error = 0.12069326847246042, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9453662868263202, log_density = 9.555175278510019, hamiltonian_energy = -6.083229872175956, hamiltonian_energy_error = 0.012334067042298003, max_hamiltonian_energy_error = 0.27427348852724265, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9775996727965839, log_density = 8.476393313873334, hamiltonian_energy = -7.439655313393235, hamiltonian_energy_error = 0.05689607959823384, max_hamiltonian_energy_error = 0.07113827376604043, tree_depth = 3, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8210694540913394, log_density = 7.910084550765934, hamiltonian_energy = -5.208103461764447, hamiltonian_energy_error = 0.0021357774005270613, max_hamiltonian_energy_error = 0.6186596798855764, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 9.041339954339366, hamiltonian_energy = -7.19011366152825, hamiltonian_energy_error = -0.23059051408774067, max_hamiltonian_energy_error = -0.24603954753840096, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8336534117622068, log_density = 7.8420039617235755, hamiltonian_energy = -6.583003931504562, hamiltonian_energy_error = 0.2251388946185422, max_hamiltonian_energy_error = 0.3605177555447572, tree_depth = 4, numerical_error = false, step_size = 0.11854094484423472, nom_step_size = 0.11854094484423472, is_adapt = false)])","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Inspect posterior distribution over hyperparameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"hypers = map(unpack, samples);\nh_l1 = histogram(getindex.(hypers, :l1); label=\"l1\");\nh_l2 = histogram(getindex.(hypers, :l2); label=\"l2\");\nh_s1 = histogram(getindex.(hypers, :s1); label=\"s1\");\nh_s2 = histogram(getindex.(hypers, :s2); label=\"s2\");\nplot(h_l1, h_l2, h_s1, h_s2; layout=(2, 2))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As expected, the sampler converges to the posterior distribution quickly. One could combine this code with that from the previous sections to make predictions under the posterior over the hyperparameters.","category":"page"},{"location":"examples/getting_started/#Conclusion","page":"Getting Started","title":"Conclusion","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you now know how to fit GPs using Stheno.jl, and to investigate their posterior distributions. It's also straightforward to utilise Stheno.jl inside probabilistic programming frameworks like Soss.jl and Turing.jl (see examples folder).","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Stheno.jl","page":"Home","title":"Stheno.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Stheno.jl is a package for probabilistic programming with Gaussian processes.","category":"page"},{"location":"internals/#Interfaces","page":"Internals","title":"Interfaces","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The primary objects in Stheno are some special subtypes of AbstractGP. There are three primary concrete subtypes of AbstractGP:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP: an atomic Gaussian process given by wrapping an AbstractGP.\nCompositeGP: a Gaussian process composed of other WrappedGPs and CompositeGPs, whose properties are determined recursively from the GPs of which it is composed.\nGaussianProcessProbabilisticProgramme / GPPP: a Gaussian process comprising WrappedGPs and CompositeGPs. This is the primary piece of functionality that users should interact with.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This documentation provides the information necessary to understand the internals of Stheno, and to extend it with custom functionality.","category":"page"},{"location":"internals/#AbstractGP","page":"Internals","title":"AbstractGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP and CompositeGP implement the AbstractGPs.jl API. Please refer to the AbstractGPs.jl docs for more info on this.","category":"page"},{"location":"internals/#diag-methods","page":"Internals","title":"diag methods","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It is crucial for pseudo-point methods, and for the computation of marginal statistics at a reasonable scale, to be able to compute the diagonal of a given covariance matrix in linear time in the size of its inputs. This, in turn, necessitates that the diagonal of a given cross-covariance matrix can also be computed efficiently as the evaluation of covariance matrices often rely on the evaluation of cross-covariance matrices. As such, we have the following functions in addition to the AbstractGPs API implemented for WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Function Brief description\nvar(f, x) diag(cov(f, x))\nvar(f, x, x′) diag(cov(f, x, x′))\nvar(f, f′, x, x′) diag(cov(f, f′, x, x′))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The second and third rows of the table only make sense when length(x) == length(x′), of course.","category":"page"},{"location":"internals/#WrappedGP","page":"Internals","title":"WrappedGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"We can construct a WrappedGP in the following manner:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = wrap(GP(m, k), gpc)\n","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"where m is its MeanFunction, k its Kernel. gpc is a GPC object that handles some book-keeping, and is discussed in more depth below.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The AbstractGP interface is implemented for WrappedGPs in terms of the AbstractGP that they wrap. So if you want a particular behaviour, just make sure that the AbstractGP that you wrap has the functionality you want.","category":"page"},{"location":"internals/#Aside:-Example-Kernel-implementation","page":"Internals","title":"Aside: Example Kernel implementation","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It's straightforward to implement a new kernel yourself: simply following the instructions in KernelFunctions.jl and it'll work fine with GPs in Stheno.jl.","category":"page"},{"location":"internals/#GPC","page":"Internals","title":"GPC","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"This book-keeping object doesn't matter from a user's perspective but, unfortunately, we currently expose it to users. Fortunately, it's straightforward to work with. Say you wish to construct a collection of processes:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS WON'T WORK\nf = GP(mf, kf)\ng = GP(mg, kg)\nh = f + g\n# THIS WON'T WORK","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"You should write","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS GOOD. PLEASE DO THIS\ngpc = GPC()\nf = wrap(GP(mf, kf), gpc)\ng = wrap(GP(mg, kg), gpc)\nh = f + g\n# THIS IS GOOD. PLEASE DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The rule is simple: when constructing GPs that you plan to make interact later in your program, construct them using the same gpc object. For example, DON'T do the following:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS BAD. PLEASE DON'T DO THIS\nf = wrap(GP(mf, kf), GPC())\ng = wrap(GP(mg, kg), GPC())\nh = f + g\n# THIS IS BAD. PLEASE DON'T DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The mistake here is to construct a separate GPC object for each GP. Hopefully, the code errors, but might yield incorrect results.","category":"page"},{"location":"internals/#CompositeGP","page":"Internals","title":"CompositeGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"CompositeGPs are constructed as affine transformations of CompositeGPs and GPs. We describe the implemented transformations below.","category":"page"},{"location":"internals/#Addition","page":"Internals","title":"Addition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Given AbstractGPs f and g, we define","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f + g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"to be the CompositeGP sastisfying h(x) = f(x) + g(x) for all x.","category":"page"},{"location":"internals/#Multiplication","page":"Internals","title":"Multiplication","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Multiplication of AbstractGPs is undefined since the product of two Gaussian random variables is not itself Gaussian. However, we can scale an AbstractGP by either a constant or (deterministic) function.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = c * f\nh = sin * f","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"will both work, and produce the result that h(x) = c * f(x) or h(x) = sin(x) * f(x).","category":"page"},{"location":"internals/#Composition","page":"Internals","title":"Composition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f ∘ g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for some deterministic function g is the composition of f with g. i.e. h(x) = f(g(x)).","category":"page"},{"location":"internals/#cross","page":"Internals","title":"cross","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = cross([f, g])","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for WrappedGPs and CompositeGPs f and g. Think of cross as having stacked f and g together, so that you can work with their joint.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"For example, if you wanted to sample jointly from f and g at locations x_f and x_g, you could write something like","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"fg = cross([f, g])\nx_fg = BlockData([x_f, x_g])\nrand(fg(x_fg, 1e-6))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This particular function isn't part of the user-facing API because it isn't generally needed. It is, however, used extensively in the implementation of the GaussianProcessProbabilisticProgramme.","category":"page"},{"location":"internals/#GPPP","page":"Internals","title":"GPPP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The GaussianProcessProbabilisticProgramme is another AbstractGP which enables provides a thin layer of convenience functionality on top of WrappedGPs and CompositeGPs, and is the primary way in which it is intended that users will interact with this package.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP like this","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"is equivalent to manually constructing a GPPP using WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"gpc = GPC()\nf1 = wrap(GP(SEKernel()), gpc)\nf2 = wrap(GP(SEKernel()), gpc)\nf3 = f1 + f2\nf = Stheno.GPPP((f1=f1, f2=f2, f3=f3), gpc)","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"If you take a look at the gaussian_process_probabilistic_programming.jl source, you'll see that it's essentially just the above, and an implementation of the AbstractGPs API on top of a GPPP.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP is a single GP on an extended input domain: (Image: )","category":"page"}]
}
