var documenterSearchIndex = {"docs":
[{"location":"api/#Public-API","page":"API","title":"Public API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = Stheno","category":"page"},{"location":"api/#GPPP","page":"API","title":"GPPP","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Core functionality for working with GPPPs.","category":"page"},{"location":"api/","page":"API","title":"API","text":"@gppp\nGPPPInput\nBlockData\nsplit","category":"page"},{"location":"api/#Stheno.@gppp","page":"API","title":"Stheno.@gppp","text":"@gppp(model_expression)\n\nConstruct a GaussianProcessProbabilisticProgramme (GPPP) from a code snippet.\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = GPPPInput(:f3, randn(5))\n\ny = rand(f(x, 0.1))\n\nlogpdf(f(x, 0.1), y) ≈ elbo(f(x, 0.1), y, f(x, 1e-9))\n\n# output\n\ntrue\n\n\n\n\n\n","category":"macro"},{"location":"api/#Stheno.GPPPInput","page":"API","title":"Stheno.GPPPInput","text":"GPPPInput(p, x::AbstractVector)\n\nAn collection of inputs for a GPPP. p indicates which process the vector x should be extracted from. The required type of p is determined by the type of the keys in the GPPP indexed.\n\njulia> x = [1.0, 1.5, 0.3];\n\njulia> v = GPPPInput(:a, x)\n3-element GPPPInput{Symbol, Float64, Vector{Float64}}:\n (:a, 1.0)\n (:a, 1.5)\n (:a, 0.3)\n\njulia> v isa AbstractVector{Tuple{Symbol, Float64}}\ntrue\n\njulia> v == map(x_ -> (:a, x_), x)\ntrue\n\n\n\n\n\n","category":"type"},{"location":"api/#Stheno.BlockData","page":"API","title":"Stheno.BlockData","text":"BlockData{T, TV<:AbstractVector{T}, TX<:AbstractVector{TV}} <: AbstractVector{T}\n\nA strictly ordered collection of AbstractVectors, representing a ragged array of data.\n\nVery useful when working with GPPPs. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\n# Specify a `BlockData` set that can be used to index into\n# the `f2` and `f3` processes in `f`.\nx = BlockData(\n    GPPPInput(:f2, randn(4)),\n    GPPPINput(:f3, randn(3)),\n)\n\n# Index into `f` at the input.\nf(x)\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.split","page":"API","title":"Base.split","text":"Base.split(x::BlockData, Y::AbstractVecOrMat)\n\nConvenience functionality to make working with the output of operations on GPPPs easier. Splits up the rows of Y according to the sizes of the data in x.\n\njulia> Y = vcat(randn(5, 3), randn(4, 3));\n\njulia> x = BlockData(randn(5), randn(4));\n\njulia> Y1, Y2 = split(x, Y);\n\njulia> Y1 == Y[1:5, :]\ntrue\n\njulia> Y2 == Y[6:end, :]\ntrue\n\nWorks with any BlockData, so blocks can e.g. be GPPPInputs. This is particularly helpful for working with the output from rand and marginals from a GPPP indexed at BlockData. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = BlockData(GPPPInput(:f2, randn(3)), GPPPInput(:f3, randn(4)))\ny = rand(f(x))\ny2, y3 = split(x, y)\n\nFunctionality also works with any AbstractVector.\n\n\n\n\n\n","category":"function"},{"location":"api/#Building-GPPPs","page":"API","title":"Building GPPPs","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"If in doubt about what any of these transformations can do, play around with them!","category":"page"},{"location":"api/","page":"API","title":"API","text":"+\n*\nstretch\nperiodic\nshift\nselect","category":"page"},{"location":"api/#Base.:+","page":"API","title":"Base.:+","text":"+(fa::AbstractGP, fb::AbstractGP)\n\nProduces an AbstractGP f satisfying f(x) = fa(x) + fb(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.:*","page":"API","title":"Base.:*","text":"*(f, g::AbstractGP)\n\nProduce an AbstractGP h satisfying to h(x) = f(x) * g(x), for some deterministic function f.\n\nIf f isa Real, then h(x) = f * g(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.stretch","page":"API","title":"Stheno.stretch","text":"stretch(f::AbstractGP, l::Union{AbstractVecOrMat{<:Real}, Real})\n\nThis is the primary mechanism by which to introduce length scales to your programme.\n\nIf l isa Real or l isa AbstractMatrix{<:Real}, stretch(f, l)(x) == f(l * x) for any input x. In the l isa Real case, this is equivalent to scaling the length scale by 1 / l.\n\nl isa AbstractVector{<:Real} is equivalent to stretch(f, Diagonal(l)).\n\nEquivalent to f ∘ Stretch(l).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.periodic","page":"API","title":"Stheno.periodic","text":"periodic(g::AbstractGP, f::Real)\n\nProduce an AbstractGP with period f.\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.shift","page":"API","title":"Stheno.shift","text":"shift(f::AbstractGP, a::Real)\nshift(f::AbstractGP, a::AbstractVector{<:Real})\n\nReturns the GP g given by g(x) = f(x - a)\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.select","page":"API","title":"Stheno.select","text":"select(f::AbstractGP, idx)\n\nSelect the dimensions of the input to f given by idx.\n\n\n\n\n\n","category":"function"},{"location":"input_types/#Input-Types","page":"Input Types","title":"Input Types","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Stheno enables the user to handle any type of input domain they wish and provides a common API that users must implement when considering a new way of representing input data to ensure that the package knows how to handle them appropriately.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"This interface has now been adopted throughout the JuliaGaussianProcesses ecosystem.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Discussed below is this interface's core assumptions, a detailed account of a couple of important concrete input types.","category":"page"},{"location":"input_types/#The-Central-Assumption","page":"Input Types","title":"The Central Assumption","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"The central assumption made in all user-facing and internal functions is this: when a collection of inputs are required, they subtype AbstractVector. For example, x isa AbstractVector when indexing into a GP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f(x, σ²)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"or computing the covariance matrix associated with a kernel:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"kernelmatrix(SqExponentialKernel(), x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When computing the cross-covariance matrix between two GPs","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"cov(f, g, x_f, x_g)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_f and x_g must be AbstractVectors. All other operations involving collections of inputs have the same restrictions. Always AbstractVectors.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"For example, this means that when handling multi-dimensional inputs stored in a Matrix they must be wrapped so that the package knows to treat them as a vector — more on this in below in D-dimensional Euclidean Spaces.","category":"page"},{"location":"input_types/#Dimensional-Euclidean-Space","page":"Input Types","title":"1-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When constructing a GP whose domain is the real-line, for example when using a GP to solve some kind of time-series problem, it is sufficient to work with Vector{<:Real}s of inputs. As such, the following is completely valid:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"using Stheno: GPC\nf = wrap(GP(SqExponentialKernel()), GPC())\nx = randn(10)\nf(x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"It is also possible to work with other AbstractArrays that represent a vector of 1-dimensional points, e.g.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = range(-5.0, 5.0; length=100)\nf(x)","category":"page"},{"location":"input_types/#D-Dimensional-Euclidean-Space","page":"Input Types","title":"D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Many applications of interest involve more than a single input-dimension, such as spatio-temporal modeling or Machine Learning tasks. For these cases, we provide ColVecs <: AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"X_data = randn(5, 100)\nX = ColVecs(X_data)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"tells Stheno that it should treat each column of X_data as a vector-valued input. Phrased differently, X is an AbstractVector{T} where T <: Vector{<:Real}, which stores its elements in memory as a dense matrix. This approach has the advantage of making it completely explicit how Stheno treats a matrix of data, and also simplifies quite a bit of the internal machinery, as all vectors of inputs can be assumed to be a subtype of AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If, on the other hand, each row of X_data corresponds to a vector-valued input, use RowVecs(X_data).","category":"page"},{"location":"input_types/#Structure-in-D-Dimensional-Euclidean-Space","page":"Input Types","title":"Structure in D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Consider a rectilinear grid of points in D-dimensional Euclidean space. Such grids of points can be represented in a more memory-efficient manner than can arbitrarily locate sets of points. Moreover, this structure can be exploited to accelerate inference for certain types of problems dramatically. Other such examples exist e.g., uniform grids in N-dimensions, and can be exploited to more efficiently represent input data and to accelerate inference.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Work to exploit these kinds of structures is on-going at the time of writing and will be documented before merging.","category":"page"},{"location":"input_types/#GPPPInput-and-BlockData","page":"Input Types","title":"GPPPInput and BlockData","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"A GPPPInput is a special kind of AbstractVector, specifically designed for GPPPs. Given a GPPP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"a GPPPInput like","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_ = randn(5)\nx = GPPPInput(:f3, x_)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"applied to f","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"fx = f(x, 0.1)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"constructs a FiniteGP comprising f3 at x_. GPPPInput(:f2, x_) and GPPPInput(:f1, x_) are the analogues for f1 and f2.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If you wish to refer to multiple processes in f at the same time, use a BlockData. For example","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = BlockData(GPPPInput(:f2, x_), GPPPInput(:f3, x_))","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"would pull out a 10-dimensional FiniteGP, the first 5 dimensions being f2 at x_, the last 5 dimensions being f3 at x_.","category":"page"},{"location":"kernel_design/#Kernel-Design","page":"Kernel Design","title":"Kernel Design","text":"","category":"section"},{"location":"kernel_design/","page":"Kernel Design","title":"Kernel Design","text":"Please refer to KernelFunctions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"EditURL = \"https://github.com/JuliaGaussianProcesses/Stheno.jl/blob/master/examples/getting_started/script.jl\"","category":"page"},{"location":"examples/getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Here we document how to do some basic stuff, including learning and inference in kernel parameters, with Stheno.jl. To do this, we that makes use of a variety of packages from the Julia ecosystem. In particular, we'll make use of","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl to perform Bayesian inference in our model parameters,\nOptim.jl for point-estimates of our model parameters,\nParameterHandling.jl to make it easy to work with our model's parameters, and to ensure that it plays nicely with Optim and AdvancedHMC,\nZygote.jl to compute gradients.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This guide assumes that you know roughly what's going on conceptually with GPs. If you're new to Gaussian processes, an excellent introduction can be found in either this video lecture or this one.","category":"page"},{"location":"examples/getting_started/#Exact-Inference-in-a-GP-in-2-Minutes","page":"Getting Started","title":"Exact Inference in a GP in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This is only a slightly more interesting version of the first example on the README. It's slightly more interesting in that we give the kernels some learnable parameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Import the packages we'll need for this bit of the demo.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AbstractGPs\nusing LinearAlgebra\nusing Stheno\nusing Plots","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Short length-scale and small variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l1 = 0.4\ns1 = 0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Long length-scale and larger variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l2 = 5.0\ns2 = 1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Specify a GaussianProcessProbabilisticProgramme object, which is itself a GP built from other GPs.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f = @gppp let\n    f1 = s1 * stretch(GP(Matern52Kernel()), 1 / l1)\n    f2 = s2 * stretch(GP(SEKernel()), 1 / l2)\n    f3 = f1 + f2\nend;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Generate a sample from f3, one of the processes in f, at some random input locations. Add some iid observation noise, with zero-mean and variance 0.05.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"const x = GPPPInput(:f3, collect(range(-5.0, 5.0; length=100)));\nσ²_n = 0.02;\nfx = f(x, σ²_n);\nconst y = rand(fx);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Compute the log marginal likelihood of this observation, just because we can.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"logpdf(fx, y)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"31.87733405378004","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"fx should be thought of as \"f at x\", and is just as a multivariate Normal distribution, with zero mean and covariance matrix","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"heatmap(cov(f, x) + σ²_n * I)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As such samples can be drawn from it, and the log probability any particular value under it can be computed, in the same way that you would an MvNormal from Distributions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can visualise x and y with Plots.jl","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"plt = plot();\nscatter!(plt, x.x, y; color=:red, label=\"\");\ndisplay(plt)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"It's straightforward to compute the posterior over f:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior = posterior(fx, y);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior is another GP, the posterior over f given noisy observations y at inputs x.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The plotting recipes from AbstractGPs.jl can be utilised to easily print whichever component of the GPPP is needed.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"x_plot = range(-7.0, 7.0; length=1000);\nxp = GPPPInput(:f3, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp);\n    ribbon_scale=3, label=\"\", color=:blue, fillalpha=0.2, linewidth=2,\n)\nplot!(\n    plt, x_plot, rand(f_posterior(xp, 1e-9), 10);\n    samples=10, markersize=1, alpha=0.3, label=\"\", color=:blue,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you've built a simple GP probabilistic programme, performed inference in it, and looked at the posterior. We've only looked at one component of it though – we could look at others. Consider f2:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"xp2 = GPPPInput(:f2, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp2);\n    ribbon_scale=3, label=\"\", color=:red, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior(xp2, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:red,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-NelderMead-in-2-Minutes","page":"Getting Started","title":"Fit a GP with NelderMead in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Stheno.jl is slightly unusual in that it declines to provide a fit or train function. Why is this? In short, because there's really no need – the ecosystem now contains everything that is needed to easily do this yourself. By declining to insist on an interface, Stheno.jl is able to interact with a wide array of tools, that you can use in whichever way you please.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Optim requires that you provide an objective function with a single Vector{<:Real} parameter for most of its optimisers. We'll use ParameterHandling.jl to build one of these in a way that doesn't involve manually writing code to convert between a structured, human-readable, representation of our parameters (in a NamedTuple) and a Vector{Float64}.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"First, we'll put the model from before into a function:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function build_model(θ::NamedTuple)\n    return @gppp let\n        f1 = θ.s1 * stretch(GP(SEKernel()), 1 / θ.l1)\n        f2 = θ.s2 * stretch(GP(SEKernel()), 1 / θ.l2)\n        f3 = f1 + f2\n    end\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"build_model (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've assumed that the parameters will be provided as a NamedTuple, so let's build one and check that the model can be constructed:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\n\nθ = (\n    # Short length-scale and small variance.\n    l1 = positive(0.4),\n    s1 = positive(0.2),\n\n    # Long length-scale and larger variance.\n    l2 = positive(5.0),\n    s2 = positive(1.0),\n\n    # Observation noise variance -- we'll be learning this as well.\n    s_noise = positive(0.1),\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(l1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-0.9162907691270586, Bijectors.Exp{0}(), 1.4901161193847656e-8), s1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.6094379869399091, Bijectors.Exp{0}(), 1.4901161193847656e-8), l2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(1.6094379094538682, Bijectors.Exp{0}(), 1.4901161193847656e-8), s2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.490116130486996e-8, Bijectors.Exp{0}(), 1.4901161193847656e-8), s_noise = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-2.3025852420056685, Bijectors.Exp{0}(), 1.4901161193847656e-8))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've used ParameterHandling.jls positive constraint to ensure that all of the parameters remain positive during optimisation. Note that there's no magic here, and Optim knows nothing about positive. Rather, ParameterHandling knows how to make sure that Optim will optimise the log of the parameters which we want to be positive.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can make this happen with the following:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\nusing ParameterHandling: value, flatten\n\nθ_flat_init, unflatten = flatten(θ);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Concrete types used for clarity only.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"unpack = value ∘ unflatten;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now easily define a function which accepts the flat form of the parameters, and return the negative log marginal likelihood (nlml) of the parameters θ:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function nlml(θ::NamedTuple)\n    f = build_model(θ)\n    return -logpdf(f(x, θ.s_noise + 1e-6), y)\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"nlml (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can use any gradient-free optimisation technique from Optim.jl to find the parameters whose negative log marginal likelihood is locally minimal:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Optim\nresults = Optim.optimize(\n    nlml ∘ unpack,\n    θ_flat_init + randn(length(θ_flat_init)),\n    NelderMead(),\n)\nθ_opt = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Note that we just added some noise to the initial values to make the optimisation more interesting.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now use this to construct the posterior GP and look at the posterior in comparison to the true posterior with the known hyperparameters","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_opt = build_model(θ_opt);\nf_posterior_opt = posterior(f_opt(x, θ_opt.s_noise), y);\nms_opt = marginals(f_posterior_opt(xp));\nplot!(\n    plt, x_plot, mean.(ms_opt);\n    ribbon=3std.(ms_opt), label=\"\", color=:green, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_opt(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:green,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Of course, the exact posterior has not been recovered because the exact hyperparameters cannot be expected to be recovered given a finite amount of data over a finite width window.","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-BFGS-in-2-minutes","page":"Getting Started","title":"Fit a GP with BFGS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The BFGS algorithm is generally the preferred choice when optimising the hyperparameters of fairly simple GPs. It requires access to the gradient of our nlml function, which can be straightforwardly obtained via reverse-mode algorithmic differentiation, which is provided by Zygote.jl:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Zygote: gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This will probably take a while to get going as Zygote needs to compile.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"results = Optim.optimize(\n    nlml ∘ unpack,\n    θ->gradient(nlml ∘ unpack, θ)[1],\n    θ_flat_init + 0.1 * randn(length(θ_flat_init)),\n    BFGS(),\n    Optim.Options(\n        show_trace=true,\n    );\n    inplace=false,\n)\nθ_bfgs = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Iter     Function value   Gradient norm \n     0     2.159255e+00     3.420613e+01\n * time: 0.02804398536682129\n     1    -1.645986e+01     2.750449e+01\n * time: 1.640674114227295\n     2    -2.192036e+01     2.313769e+01\n * time: 1.6535289287567139\n     3    -2.447374e+01     1.228555e+01\n * time: 1.7056829929351807\n     4    -3.239541e+01     8.631712e+00\n * time: 1.7308111190795898\n     5    -3.266994e+01     6.067521e+00\n * time: 1.7556679248809814\n     6    -3.321259e+01     8.011805e+00\n * time: 1.773064136505127\n     7    -3.374235e+01     7.146198e+00\n * time: 1.7912440299987793\n     8    -3.421005e+01     2.874087e+00\n * time: 1.8324930667877197\n     9    -3.451628e+01     9.718094e-01\n * time: 1.8512849807739258\n    10    -3.455133e+01     3.191608e-01\n * time: 1.8640100955963135\n    11    -3.455500e+01     4.014186e-02\n * time: 1.8766169548034668\n    12    -3.455510e+01     6.945460e-03\n * time: 1.895508050918579\n    13    -3.455511e+01     4.010243e-04\n * time: 1.90814208984375\n    14    -3.455511e+01     1.562298e-05\n * time: 1.9208149909973145\n    15    -3.455511e+01     6.682208e-08\n * time: 1.955277919769287\n    16    -3.455511e+01     1.268722e-10\n * time: 1.9740540981292725\n","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Once more visualising the results:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_bfgs = build_model(θ_bfgs);\nf_posterior_bfgs = posterior(f_bfgs(x, θ_bfgs.s_noise), y);\nms_bfgs = marginals(f_posterior_bfgs(xp));\nplot!(\n    plt, x_plot, mean.(ms_bfgs);\n    ribbon=3std.(ms_bfgs), label=\"\", color=:orange, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_bfgs(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:orange,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Notice that the two optimisers produce (almost) indistinguishable results.","category":"page"},{"location":"examples/getting_started/#Inference-with-NUTS-in-2-minutes","page":"Getting Started","title":"Inference with NUTS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl provides a state-of-the-art implementation of the No-U-Turns sampler, which we can use to perform approximate Bayesian inference in the hyperparameters of the GP. This is slightly longer than the previous examples, but it's all set up associated with AdvancedHMC, which is literally a copy-paste from that package's README:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AdvancedHMC, Zygote","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define the log marginal joint density function and its gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"ℓπ(θ_flat) = -nlml(unpack(θ_flat)) - 0.5 * sum(abs2, θ_flat)\nfunction ∂ℓπ∂θ(θ_flat)\n    lml, back = Zygote.pullback(ℓπ, θ_flat)\n    ∂θ_flat = first(back(1.0))\n    return lml, ∂θ_flat\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"∂ℓπ∂θ (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Sampling parameter settings","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"n_samples, n_adapts = 500, 20","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(500, 20)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perturb the initialisation a little bit.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"θ0_flat = θ_flat_init + 0.1 * randn(length(θ_flat_init))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"5-element Vector{Float64}:\n -1.0685306116614814\n -1.5294921258557408\n  1.4735735288460767\n  0.03399458805066559\n -2.328048742906722","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define metric space, Hamiltonian, sampling method and adaptor","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"metric = DiagEuclideanMetric(5)\nh = Hamiltonian(metric, ℓπ, ∂ℓπ∂θ)\nint = Leapfrog(find_good_eps(h, θ0_flat))\nprop = NUTS{MultinomialTS, GeneralisedNoUTurn}(int)\nadaptor = StanHMCAdaptor(n_adapts, Preconditioner(metric), NesterovDualAveraging(0.8, int.ϵ))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"StanHMCAdaptor(\n    pc=WelfordVar,\n    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.4),\n    init_buffer=75, term_buffer=50, window_size=25,\n    state=window(76, -30), window_splits()\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perform inference.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"samples, stats = sample(h, prop, θ0_flat, n_samples, adaptor, n_adapts; progress=true)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"([[-0.7486438501749051, -1.1922389448122634, 1.5638275170335132, -0.2977660221669783, -3.977108333774191], [-0.7486438501749051, -1.1922389448122634, 1.5638275170335132, -0.2977660221669783, -3.977108333774191], [-0.7486438501749051, -1.1922389448122634, 1.5638275170335132, -0.2977660221669783, -3.977108333774191], [-0.38486858852037337, -1.4874356778130113, 1.1422577665754665, -0.37013484904025623, -4.1054233735777546], [-1.367934720589576, -2.1944503538060247, 0.6882822252195552, -0.5989669693601032, -3.9266054482313404], [-0.2887817890340377, -0.9403763376802146, 1.40487370951847, -0.16999809802559346, -3.760904443457984], [-0.6739718202312841, -0.6484870422958358, 1.810968600169427, -0.14922591043603853, -4.154087825978613], [-0.16600950869265843, -1.030650374232259, 1.464969573840879, -0.2942200144312105, -3.992604285002768], [-0.3314321666947806, -1.0203716905924023, 1.472547196379126, -0.39790579569959916, -3.8564131035999236], [-1.0298128600353904, -1.8681928427556167, 1.530693808450482, 0.4793380606384477, -4.102988724246215], [-0.6873260400411472, -1.7188326723697192, 1.7053709608338363, -0.22168642300726343, -3.6281768136673906], [-0.9770660767559107, -1.664437472292246, 1.779154238620024, -0.5430166551457685, -4.274413670505314], [-0.5318578956972526, -1.4096128105971901, 1.6884692284472018, -0.5466204108329002, -3.7256455506075636], [-0.8390906641944849, -1.5012407995854902, 1.2801904035893905, -0.3460557794435316, -3.791257844924233], [-0.7326538795963192, -1.5774427945633023, 1.2119475648710134, -0.12435029397735456, -3.918899842721247], [-0.7301483439973575, -1.5662267334838746, 1.2136245183100538, 0.28740984785963375, -4.124052949709659], [-0.3880549856381088, -1.5267402846627876, 1.021329058395411, 0.39167462643028966, -4.0376561219223195], [-0.1469742033030648, -0.8525574319543394, 0.7717233441910506, -0.335440057757875, -4.003482841085651], [-1.0229147369937066, -1.7528899257909645, 1.035670840639097, -0.4739425166899366, -3.8665228894365167], [-1.0229147369937066, -1.7528899257909645, 1.035670840639097, -0.4739425166899366, -3.8665228894365167], [-0.6759109720201569, -1.3176566370097194, 0.8294000705522614, -0.16501745051675498, -3.9177483804214877], [-0.540335198160176, -1.0590227425079384, 1.2112213620632708, -0.26134728100580984, -3.9288645188250793], [-0.797273371805562, -1.6400932347471984, 1.5856777994245947, -1.0267968826641745, -3.9601994471021933], [-0.5419409892950569, -1.121880928111806, 1.8446933255434617, 0.9388130905096511, -3.835422065708677], [-0.4588301285803607, -1.3669545949182147, 1.9329631016841784, 0.7867778148041193, -4.051234516217558], [-0.7557731843650428, -1.7033131627289586, 2.1379332845706696, 0.3751797966873536, -3.9634506217089696], [-0.4654964027382566, -0.9845090689781903, 2.1448363823945065, -0.3779489880351182, -3.823750484687511], [-0.8137296366254378, -1.46912782427435, 1.9069215433428641, -0.20428331952958623, -3.938607273477867], [-0.5821950260934404, -1.3122846487757878, 2.049957883605038, -0.7529790100825208, -3.870047470014865], [-0.5281365753250691, -1.25567350791133, 1.7301998853984997, -0.9868913028413042, -3.902589315260707], [-0.7936014811209969, -1.4759144548049863, 2.8816482878992744, 0.04623487935081866, -3.976721186824352], [-0.4614650755917938, -0.9595069870762178, 1.8465619870816146, -0.35468802759100615, -3.7641111193654564], [-0.6540789826867633, -1.6742619857898828, 1.7764010738521505, 0.538625279584776, -4.03530800577368], [-1.267029468721086, -2.0459622094674548, 1.141462324667803, 0.9369701328665936, -3.7847245568549965], [-0.5394808914501963, -1.3354590334090461, 1.2022636974861034, -0.2819828487760209, -3.8966682919621025], [-0.8358147495235788, -1.9852310110586258, 0.6107065669460591, -0.05525037110274349, -3.694459627545388], [-0.6595508740051106, -1.8340401056441502, 0.503120140465696, -0.05743088285034814, -3.6775240261608757], [-1.123838054880633, -1.7965581616004216, 1.1292084810767855, 0.0850265421095545, -3.939232442964354], [-0.6197870126431961, -1.3662195180493744, 1.6994374700444057, -0.3511430738936906, -4.168112405001917], [-0.38348465695281964, -1.260067892626949, 1.0810944054740859, -0.45493850662281987, -3.9508261921455077], [-0.8963038218606659, -1.8007251035658447, 1.2794452498419875, -0.4000704559753844, -3.936359264656446], [-0.41498785453224973, -0.9283252287536305, 2.104843854427647, -0.44902812657573077, -3.8525793420974215], [-0.8815745078376872, -1.9462494292432195, 1.2036895216204917, 0.2806893149734275, -3.889419857210343], [-0.9503345904309015, -1.6881149798595205, 1.158332999348709, 0.1149787638522355, -3.969200155757187], [-0.27995743696932196, -1.0665077610626685, 1.509528153462531, -0.07124738263389999, -3.999795360230949], [-1.1248725868258949, -1.6437230659902302, 2.1066878185086697, 0.2411556780631948, -3.898440607307711], [-0.9824296532571326, -1.616248770473696, 0.6893445884470644, -0.29003532246186975, -3.9492802648531837], [-0.6850268135731213, -1.2233485047054793, 1.5611567166579756, -0.642300208287963, -3.6729578384215915], [-0.4856394232391697, -1.4578234083322785, 1.1241762927584822, -0.2718241868374496, -4.320061660245448], [-0.7727165804790544, -1.60898332871502, 0.8431729837485259, -0.23655781428573316, -4.198407097690505], [-0.5629177491611264, -1.6879093161477288, 1.7855085995636535, -0.12296921636522071, -4.0652142650591845], [-0.7144409676683178, -1.6227888398122687, 1.9289776503715683, 0.17395511755632587, -3.711203670284643], [-0.5344931448518375, -1.448535528537907, 1.1558585261100787, -0.4198176210646505, -3.943474739657872], [-0.7011714585679409, -1.5139213932226823, 1.6889350758489923, -0.10894210429519739, -4.099890459817763], [-0.4450081876601827, -1.4709252249351592, 1.6184144236193834, -0.06872077205304716, -3.805475646738931], [-0.7252001418837316, -1.203835145862392, 2.189585764613152, -0.3089402813615961, -4.0877402059812855], [-0.7758949283841892, -1.3824398996273732, 1.5320017113464535, 0.6895251994484445, -4.123354472377718], [-0.46635931660473534, -1.2982067178996075, 1.453747745015273, 0.3239539479831559, -3.7228698519430954], [-0.7179771856180379, -0.9344495162103208, 2.288996964927182, 0.1450937539752164, -4.072623764500206], [-1.108899853882741, -1.8655310389092632, 1.8804379656538466, 1.4958462486820006, -3.9762992743699073], [-1.1185271959271252, -2.0429255868764873, 1.9110427179720297, 1.3345025958318406, -3.902494074803923], [-0.8228457273649156, -2.057262213301305, 1.8866476116306334, 1.4450145622610524, -4.0789880038636275], [-0.3597010897246228, -1.2909557896299153, 0.8237916153157752, -0.45339191488800346, -4.211140582290807], [-1.0561806618013112, -1.8220560292402617, 1.6994186596656713, 0.01147108466739323, -3.7662092366228763], [-0.29389239112779775, -0.9896950993571899, 1.8780718485877228, -0.021861970863861505, -3.769162308186517], [-1.1798760589493467, -1.67643993864242, 1.8481468872109144, -0.809494327774172, -4.071326474129173], [-0.6112551413055178, -1.2965018693780956, 1.7677251336915707, -0.6303512336384425, -3.951298746134514], [-0.5680422362941657, -1.3297964843762973, 1.8252861170901227, -0.8035259429862118, -4.106644603545964], [-0.569681019468988, -1.102055719810472, 1.9486279416200967, -0.6634690182963028, -4.230107723380759], [-0.5855278349408569, -1.2823136723286364, 1.0053819592883604, -0.19747843913287028, -4.273956708229442], [-0.960891680518707, -1.844921588068547, 1.1746256297306417, -0.11923387635960306, -3.742529156210331], [-0.8131181732219556, -1.6426026831572915, 1.4353656122570604, -0.5103115985292004, -3.689912782447907], [-0.9990787385917984, -1.7436656152454244, 0.9744986757228105, -0.37492541404819263, -4.132147973248776], [-0.7661257591747507, -1.2018681585416797, 1.0675412201554577, 0.12347762720324768, -4.103962453763278], [-0.7654362110346685, -1.770707993316573, 2.337634713989402, 0.25879157250400875, -3.784057324659119], [-0.7740758812735291, -1.7328817106908572, 2.2828698170974224, 0.21752594109660073, -3.91938684018055], [-0.4207703970105351, -1.1744065207469216, 0.8858328530636248, -0.7114620944442596, -3.85413146443354], [-0.7198352670279148, -0.9426862955844493, 0.6713719702460526, -0.35973520473136505, -3.9365565600434764], [-0.5517222641106047, -0.9779718232604306, 0.6179473660551406, -0.3885316019262736, -4.107623794305125], [-0.895023116542556, -1.8269443734922777, 1.0183940091170274, -0.32959744506777405, -3.7905505802491937], [-1.169587300408194, -1.8672686968891137, 1.0340445258085988, -0.5471591190226971, -4.130274701235067], [-0.9581813178690093, -2.020784009934105, 0.5987160842431936, -0.5756925483235628, -3.785182043841209], [-0.9228029113881695, -1.7150131173109855, 0.6537199666619692, -0.3009080184819204, -4.00034429740443], [-0.799196135599216, -1.7517514692886305, 1.152119594360924, -0.17828777345574887, -3.94986883055196], [-0.4588182048658927, -1.2381725286672758, 1.6565258775526728, -0.31905093202731, -3.719428202208501], [-0.6968553463521195, -1.3312009617396678, 1.2167000521288183, -0.0533783236041607, -4.074260602225232], [-0.5841100607801913, -1.3862210416078946, 1.4665445545208284, -0.0485075214017346, -4.238989899932178], [-0.6303368844518937, -1.4800765994852076, 1.571674251103132, -0.15024493243691076, -4.082269891404272], [-0.6619745119125824, -1.512908378195529, 1.3226766949185853, 0.1364826167269247, -4.221626610633082], [-0.6886173452857741, -1.4953698078918658, 1.551982787684602, -0.3444916224054979, -3.815111835497234], [-0.42615868270746565, -1.402420704894413, 1.4912056990301163, -0.31678629394974267, -3.8790897416148984], [-0.511343110466798, -1.4956444839582788, 1.4680544942593852, -0.31085126469352925, -3.821514093716964], [-0.7838549700386305, -1.314838424969463, 1.4384267067827181, -0.33999735219985516, -3.7876363791030343], [-0.6146580038043995, -1.555638392189123, 1.9008464119412143, -0.5564396312424424, -4.003361880439652], [-0.602930570548699, -1.6373666567486547, 1.992072408970381, -0.5360495051286747, -3.9142298809349523], [-0.7559722396944843, -1.3477711796886445, 1.6939156759549825, -0.019175275734791553, -3.9912220349915413], [-0.6909593561842042, -1.5258485628636616, 1.5513665182105076, -0.05576386686160663, -4.028316315016466], [-0.6909593561842042, -1.5258485628636616, 1.5513665182105076, -0.05576386686160663, -4.028316315016466], [-0.7089697715712839, -1.6117860981859555, 1.630226219154326, -0.6456630317700716, -3.929179404849289], [-0.663754483153832, -1.9110757909688787, 0.8860788328463121, -0.30681550376604033, -4.122588010587874], [-0.6516214430451862, -1.2310948003595912, 1.7077161529679998, -0.28889856185264495, -4.002230990320212], [-0.8657834560683935, -1.877593286968399, 1.7341822581357564, -0.28789481225401553, -4.106837588685785], [-0.4746583283085888, -1.1123728211595056, 1.435396080395789, -0.31563587425541845, -3.825038047423697], [-0.5247672566535476, -1.080417985815344, 1.1068826474531641, -0.6409223992293652, -4.089924356438924], [-0.9170482120027733, -1.8164344845019014, 1.0555538208601742, -0.5926756614495724, -3.7794733326516967], [-0.5125623181008621, -1.0170628898455867, 1.4727294395919257, -0.1524439923256393, -4.034993634932751], [-0.5456995090156704, -1.408048614054891, 1.3708404672478502, -0.18009047212030885, -4.137840683205778], [-0.4934710047602342, -0.9362602342058015, 1.2388372019627074, -0.336103857792956, -4.252916292767487], [-0.34895596155874553, -0.9106771232249384, 1.0299342399843587, -0.27224614377184625, -4.08238210296488], [-0.5525838400442239, -1.3537529309581524, 0.8121215566633663, -0.5898279047666155, -3.8165182869484116], [-0.5431193970370359, -1.1336277361528042, 0.9084652270252593, -0.752806618104668, -3.689723724469762], [-0.9455749128585912, -1.7682612820546597, 1.3982273215559464, -0.5008434533086524, -4.108301497188887], [-0.6997648339830786, -1.0788174129880197, 1.5917425893720878, -0.7277755563065327, -3.61333665765788], [-1.16804742687362, -1.542914564138274, 1.2484781079895904, -0.04894807849278254, -3.8091869216480085], [-0.9220535227448903, -1.6716125250967273, 1.5424622740979657, -0.282900826553658, -3.897048265089204], [-0.6507924151994712, -1.3325087200735821, 1.972428856736925, 0.15946081026008924, -3.767269403178957], [-0.6398559370811682, -1.4856374784828588, 2.407340161389204, 1.5107228098915715, -4.164323519181268], [-0.6900654089221032, -1.4837722077624553, 1.7474520055317293, 0.6940094519075797, -3.7849338382623263], [-0.5700050221748488, -1.446262424933116, 2.0317524093009744, 0.31894198102602833, -3.970339404954107], [-0.6283294306650196, -1.4259481035823434, 1.391963141063006, -0.7965531029552377, -3.888651920027916], [-0.733424870252648, -1.4933135861593632, 2.1080652168012706, 0.47525095682301993, -4.084044761037045], [-0.6569853032552528, -1.5560052028213736, 1.9884192100138698, 0.7486842720479384, -4.181010854926865], [-0.3453480144091256, -1.2167602512955826, 1.6398824371636065, 0.050259023869478114, -3.859265434159079], [-0.8308709531562155, -1.5009744464607129, 1.4435572704942503, 0.3035853791141086, -4.075384962327924], [-0.6182977353422495, -1.364261883933354, 2.495948940733796, -0.04753855409297754, -3.8211692433708055], [-0.6933135020034794, -1.307778800117254, 0.8033127077908857, -0.014589010134665806, -3.7851732311440043], [-0.6276553793674341, -1.2917851114715844, 1.5816078105004816, 0.3198244930905768, -4.093898473130909], [-0.5548011782144118, -1.257856868221864, 0.8407300983552268, -0.1002027430163383, -3.8367118595977683], [-0.9097626021944581, -1.733500383756633, 0.33501332381025967, -0.5780673933378073, -4.1777165891350165], [-0.48574646184462633, -0.8688843892020873, 1.966163079853031, -0.12652128690774936, -4.231196216941071], [-0.5231145604099288, -1.097202441694359, 1.7917435968013842, 0.03704022859170289, -3.6724926737618584], [-0.5524972343498744, -1.0548406665558825, 1.9794617334926796, 0.48595202866147724, -4.241823977827913], [-0.7481310077984178, -1.7003523017342705, 2.0447183846292396, -0.36590772755551887, -3.582765493841521], [-0.7667545400472019, -1.5868930352060293, 1.3430958335901557, -0.10482685209119359, -4.287553139645631], [-0.6464417231689912, -1.8262263317225993, 0.7067311056832671, -0.4492143769520127, -3.8250475443740326], [-0.8422336616131638, -1.7141530894162935, 1.5070945846367985, -0.3788557524865683, -4.035362080469398], [-0.8303555983316178, -1.9898503724245105, 0.7899576799668867, -0.42656104097332137, -3.569255992881311], [-1.001718202667864, -1.5339007398014586, 0.5524432952540222, -0.3550981091598077, -4.215678045900383], [-0.7820510608841975, -1.408989763505137, 0.5627448131226669, -0.45344618633411454, -3.559366589607304], [-0.5512671019186239, -0.9535193434028775, 2.1889543722369695, 0.17494214947118414, -3.9738603719048187], [-0.4108166550496786, -0.9952644533869571, 1.8602476734332485, -0.09127183005327225, -3.9528024856418496], [-0.6591427489348711, -1.313227808971523, 1.4561225803868016, -0.3525137141272907, -3.9381389872021533], [-0.6675310377301527, -1.2554451660086465, 1.665776858141706, -0.03149459360377879, -4.067215787437488], [-0.5510095547903753, -1.2956045623961965, 1.7070003472960558, 0.49263980549997255, -4.254215892877496], [-0.5346830033439505, -1.5533883261939299, 2.4894070568342275, 0.10862287648372879, -3.9066292310338744], [-0.5327378183187353, -1.1933800098849627, 1.891192456496029, -0.18334740651217948, -3.8290392560787643], [-0.3885381465215206, -1.1455916621089586, 2.109803556147782, -0.03417869448400887, -4.030256314890437], [-0.8799862862258565, -1.8103521724386324, 1.3987230464708964, -0.2223871492196943, -3.8892808643917207], [-0.5307081107110437, -0.867364908589877, 1.395343915260009, -0.2515001964324598, -3.8783661752807155], [-0.6110659908580938, -1.5294455431055927, 1.1187093169088727, -0.4803475914526773, -3.994725238484973], [-0.5262535199346238, -1.5713529209540296, 1.94305275995197, 0.26863790242502095, -3.951975512772711], [-1.0565279733900153, -1.5914857842796077, 1.4836237069858842, -0.20334985163570776, -3.9556091498053596], [-0.46042195459226143, -1.4996648933252879, 2.017158151593637, -0.6896315911227981, -3.962725309879924], [-0.911407890819045, -1.5991556530413868, 0.9309482151166785, 0.0697685936839825, -4.000081680097837], [-0.8333941806711253, -1.7160202074499988, 0.8904537791940058, 0.6167428591205129, -3.886660106327565], [-1.3838625899372503, -2.1545320264863697, 0.9073020871439382, -0.49851442191646606, -3.9639532598769502], [-0.4394708427649714, -1.2126621478846091, 0.7612274770908358, -0.09030061771255038, -3.7160918520228208], [-0.33779860415786733, -0.9184136759829796, 0.6276044691539725, -0.5560577316060545, -3.975415982438852], [-0.9646645196776533, -1.850835984215667, 2.338294183946695, -0.308275189326905, -4.252251672382746], [-0.6003939466578907, -1.3558003419786868, 1.9724855370750176, -0.4557742196833092, -3.7751293349001336], [-0.3821587671797631, -1.2506463854135053, 0.9769808838065679, 0.18745278624320072, -3.72974240542434], [-0.8228698235786693, -1.1809180252787077, 0.8114811113670197, 0.33748985530342795, -4.044969737321692], [-0.5939635035565373, -1.5364593918848775, 0.8298455710744479, 0.15990924862711425, -3.9727694850804474], [-0.4496311233561717, -1.683417177685174, 0.7269393761292122, 0.04294748041491557, -4.286326029126774], [-0.9751446477672183, -1.8989109731743152, 1.833948579610258, -0.8973507805094179, -3.7185500566323197], [-0.6872048721632387, -1.54493461509682, 1.457603521763288, -0.5445090120419832, -4.061540465366978], [-0.772746421121912, -1.2788768869028613, 1.3807453443890962, -0.3267206119682675, -4.099532981105031], [-0.7653302254659942, -1.4115038556515125, 1.7242273699298452, -0.44191493584698466, -4.161725594877743], [-0.6674116312223234, -1.44742853262927, 1.4214905993336377, -0.5635045783853213, -3.794366225328524], [-0.598634490922554, -1.6040949130360256, 1.0883282013315436, -0.1142981743883148, -4.0397808917355364], [-0.5833532792266609, -1.1522725391957702, 1.2898060212572944, -0.907508250079224, -3.871895812803249], [-0.5833532792266609, -1.1522725391957702, 1.2898060212572944, -0.907508250079224, -3.871895812803249], [-0.7983989922922178, -1.4571532013789494, 1.7086544339907523, -0.6785613454329571, -4.07464556738292], [-0.5726542110486637, -1.508294294186544, 1.3447336445107327, -0.2646748720929252, -3.8908097979857534], [-0.34511143285623586, -0.7008869432957242, 1.6843663572422898, 0.24663878008810292, -4.196890960172626], [-0.36421160250040135, -1.4013143155034684, 1.4795667598866564, 0.5622428137471612, -4.085260776876913], [-0.4776626703394705, -1.6015442497143415, 1.7035617137720795, 0.2946704331196288, -3.8599432962195155], [-0.8051708876243675, -1.4521721167608799, 1.7243537919059337, 0.4598238995685108, -3.8334458876878617], [-0.4301825172923607, -1.3371514601561876, 1.7076078826552945, 0.49997870452855264, -3.894518652935118], [-0.5747269157645152, -1.2803807128867601, 1.7058259545126877, 0.48560384476464946, -3.7471041949991086], [-0.9062353017096147, -1.5043296933896886, 1.354352565988707, -0.6884394972789626, -4.155158737831518], [-0.6380549567232195, -1.6815301497553317, 1.5664140591029692, -0.7597054253733524, -3.8980960752758564], [-0.4289811639732324, -1.6849561218835072, 1.5503769774986558, -0.6779134237801869, -3.8176137246240445], [-0.8917908492859004, -1.5899222390736782, 1.327871725895877, -0.19251345916372742, -3.705135083351839], [-0.8643670260911065, -1.5536988079253078, 1.304482313471158, -0.23969735201828998, -3.898487675822559], [-0.7679767281177141, -1.2004857022927116, 1.3685428224420413, -0.6522675694762474, -4.180204827149834], [-0.7890550371133578, -1.2441992134134008, 1.4697272142232323, -0.6470290802715049, -4.291270456345585], [-0.587897368808062, -1.4928243300871185, 1.7511672200278317, -0.258367906912101, -3.8438499479625254], [-0.7557023528196173, -1.3594940408525384, 0.3903723939563558, -0.16462593257070454, -4.057133018042186], [-0.5389675666113354, -1.481719671398165, 1.4049167580755169, -0.10840233624098097, -3.7932994056732565], [-0.5433656328700187, -1.0830294598540902, 1.3890229627715525, -0.19448755561379233, -3.8794297593140716], [-0.5160253856738931, -0.9396070016599142, 1.9671399248683266, -0.10249050050050265, -3.967370376394176], [-0.7218206831730782, -1.6113120816551432, 1.7095114078416347, -0.9073597536057748, -3.6758974175294834], [-1.048635707656448, -1.8757058540049554, 1.7212299927090922, -0.2986751740738801, -4.115477132313821], [-0.8638281041585277, -1.7289575453731965, 1.8242731468158215, -0.4062404462640396, -4.104526617746915], [-0.5989910120633771, -1.3653781819600006, 1.3058253936753927, -0.5349557787059778, -3.9340541629564982], [-0.6761763170921496, -1.3085374963749952, 1.9670618273772744, -0.6923492661538669, -3.9624748954871065], [-0.542018164476664, -1.1867418992036223, 2.0761116638858144, -0.20995076516444613, -3.994368239061699], [-0.3680253272180883, -1.1519359874397617, 1.9468951764116593, -0.22078120358937894, -4.0647596730403075], [-0.7498372693437488, -1.9279555932965948, 1.146467347662657, -0.41030072254450883, -3.8973887320161262], [-0.7498372693437488, -1.9279555932965948, 1.146467347662657, -0.41030072254450883, -3.8973887320161262], [-0.6273493186598063, -1.1488666638201552, 2.111609220638772, 0.048947312223531686, -3.594009596158692], [-0.7772047539300774, -1.2625246858979045, 0.7849628042364196, -0.3496339116995117, -3.9577874577519796], [-0.6641562070473682, -1.1224847087249532, 1.9682607861069572, -0.3129421269701417, -3.8936993685386443], [-0.583881503258542, -1.156956517547424, 0.9286270795433356, -0.30372453381554376, -3.774737922578299], [-0.6473079088103786, -1.4022534632582315, 1.4272909468827089, -0.37298993732004665, -3.965537360342001], [-0.7741715481298491, -1.8391226357097115, 1.6549994546360929, 0.016468174424112025, -3.8540754040144196], [-1.0897842610703987, -1.8177897213546166, 1.677520569230647, -0.31553290874503276, -4.19017288402387], [-0.7335484714955549, -1.6162066797596122, 1.6583259388906533, -0.37651555397189723, -3.803726413704962], [-0.4624838046202299, -0.8320712253653415, 1.6130587354526946, -0.5964684117114327, -3.997540044623894], [-0.29839333096297527, -1.1518394891926258, 0.7626911929484028, -0.6379609251228637, -3.878717350437652], [-0.9377841904801939, -1.5447646095218956, 1.0824238420256587, -0.5763525288058384, -3.9774819813375264], [-0.98863440468275, -1.6119406347115321, 1.9777805329968297, 0.36385886781603344, -3.986783509504119], [-0.3482388596678361, -1.2292064634085267, 1.7751637179201896, -0.2638511567357442, -3.7992378888803615], [-0.6285495201132602, -1.1488400710940652, 1.8071559874174408, -0.09257980518817281, -4.161901269685121], [-0.8576194810097296, -1.668408453147369, 1.373094687175967, -0.38170994383620566, -4.136629321008454], [-0.6842138544052001, -1.239456938599362, 1.1079677654706386, 0.17479640805329708, -3.8577551940187265], [-0.6301462538265988, -1.399194552432904, 0.722090184899072, -0.6497354458102894, -3.882302351247122], [-0.4758277422449348, -1.245089487527509, 1.0882733701609975, -0.364531651334949, -3.86654338414177], [-0.19967577987296103, -1.3396419252421068, 0.9669168001973336, -0.22995506483461645, -3.9634207868268923], [-0.8760483780258561, -1.1246131130141988, 2.1394510748577096, 0.16976066540219134, -3.8717560668836657], [-0.5762123616598669, -1.1382939734522388, 1.8280280877687347, 0.28868411117586057, -3.991482831853477], [-0.5291844508822886, -1.6092729600629925, 1.3158921441951732, 0.06222591369788738, -3.913940890485998], [-0.6620280263957484, -1.5358351826276595, 1.0892218576851693, 0.17759841401108237, -3.856747944449824], [-0.6634950761421351, -1.259223531551373, 1.613488005444848, 0.4495044066430403, -4.071196892261521], [-1.0768859375600761, -1.7794813213715364, 0.7192905564669682, -0.6458974287948605, -4.046594774150304], [-0.9684924896368745, -1.9642245513565777, 0.751665178734229, -0.09234835967469093, -3.7635185702514438], [-1.3432572933931017, -2.1660868118668732, 0.6591007643810287, -0.6122914190606117, -4.197572485856163], [-0.5410265842123522, -1.1793360188296746, 1.0625304318980262, -0.04001012001003815, -3.9559917417713044], [-0.6658461171838398, -1.1614948720810847, 1.0156295442549694, -0.10140311627448476, -3.8681098960337534], [-0.7822126320485868, -1.6311402093678071, 0.9790086063745795, -0.07004447408265502, -4.149580768332225], [-0.7654499046350264, -1.2520769529549902, 2.3014212523597966, -0.2343244359394182, -4.200247849978108], [-0.7432309296862475, -0.9375121902355689, 2.972779452448874, -0.000935724477983374, -3.967915374803355], [-0.6848094869910544, -1.3388051601939919, 2.7665575005144136, 0.4039371386772376, -3.7463308164121867], [-1.1060234505327933, -1.521755832242745, 1.5145691227627203, 0.8570527526187693, -3.9967197193689152], [-0.9497206271505061, -1.4280784694932032, 2.202342020424943, -0.5357609967582639, -3.752040369741546], [-0.7238510157577888, -1.5083980498309368, 0.8630775578174217, -0.2442230803326519, -4.150371774688618], [-0.6818258232549858, -1.3633801870691562, 1.8180559576073079, -0.43648784200701685, -4.216705443651743], [-0.726761914074506, -1.1846272676695921, 0.7661873376145869, -0.41443830380193725, -3.680404814527222], [-0.529579977914555, -0.8563535260193718, 1.196938797304569, -0.7929317324803238, -4.041938743270115], [-0.4434488863702014, -1.2204289786339113, 1.27167958810772, -0.5506151371199379, -3.7681948397310854], [-0.5516888613742033, -1.1774921955075333, 0.9885968405413151, -0.28730918418818474, -3.841624711933676], [-0.5281176114607541, -1.633801534148927, 0.763335398565468, -0.27441939420445516, -3.8073869790555523], [-0.43693643197973175, -1.6824470948418462, 1.0536098091431132, -0.37188140786013435, -3.804593139256728], [-0.4792521071023231, -1.9146435876116317, 1.4647824878418416, -0.3307995821526828, -3.7513711466762643], [-0.4010389787134826, -1.720777310828937, 1.6596422089948863, -0.36744469480522474, -3.719170645227039], [-0.8489309076873637, -1.3181335103024283, 1.9253592993206006, -0.769280738775285, -4.071441647890381], [-0.6266917654809788, -1.810190671147427, 1.2946178164470818, -0.6416724563040445, -3.865119777824128], [-0.5605335011632817, -1.4351938150534556, 2.1103831079443314, 0.08691282212442566, -4.1613456212420905], [-0.6831962133982985, -1.4697634502592816, 1.175444696896974, -0.6917652408671747, -4.212994615261391], [-0.6999440825757507, -1.4412509379337064, 1.0806071417229384, -0.5360106393808404, -4.337457683654126], [-0.42653633948071246, -1.3961446946805254, 1.4606275100020072, 0.2899709854755842, -3.6081395900526987], [-1.0171911886882548, -1.7914936341482315, 1.19738936356999, -0.11700259210527511, -3.744491559608401], [-0.709574400584909, -1.507261169733293, 1.8011707326458652, -0.5726661029259746, -4.1074488077153095], [-0.7434276797704205, -1.5976922856584037, 1.6838080037983068, -0.5829743957833062, -3.797694707219773], [-0.7311522680734752, -1.3343076950586734, 1.9422355095640764, -0.4211684484055445, -4.055511427152616], [-0.5362043361807157, -1.3751358616781089, 0.8151778213179157, -0.361731532197927, -4.124436083072227], [-0.2488417562171205, -1.2232415959568959, 0.7237322054562626, -0.22802348191677657, -3.9777871525224393], [-0.7691832727283541, -1.2307174850444462, 0.3209631121474975, -0.4713148823697488, -3.951218602360735], [-0.39100720448831217, -1.4326015893389292, 0.6878440259445492, -0.438205701612429, -3.794641633602435], [-0.9179363648729884, -1.7154457369193252, 2.172806943088809, 0.267961531301511, -4.1541445553268135], [-0.5387473432883808, -1.2484264277984634, 2.353116960446328, 0.6989933811502181, -3.6473513839102076], [-0.6389648542532992, -1.5521315060134717, 1.5582362112050743, 0.08979395044238625, -4.006213771779134], [-0.9469085427667026, -1.725408076115993, 1.5910870350508672, -0.13353641110771453, -3.9542793346714475], [-0.5797371415373611, -1.333669209233728, 1.9097646408350746, 0.05109567656273137, -3.8653658405351665], [-0.5738808267951818, -1.3229266621459161, 1.149465336622188, -0.9145097048380584, -3.9739189637069057], [-0.7152557362717702, -1.5761981326863574, 1.0592548274361147, -0.45254625170967766, -3.834435968977807], [-1.0007088595544966, -1.7267298909006772, 1.5074100988049086, -0.013617054066713347, -4.118784736020249], [-0.3585635809164419, -1.2829822426942021, 2.1727282404348762, 0.07330080655284126, -3.6832196413104166], [-0.5386762837944874, -0.9131949806028435, 1.3425136675256026, -0.581939465924425, -4.037726911391642], [-0.942397718661972, -1.7976264278876652, 1.8694339261561626, -0.15387496698010245, -3.8046816934025376], [-0.8427817988551884, -1.642406954898769, 1.760816835648707, -0.1922156431000297, -4.1779746263464], [-0.7904322966723426, -1.5411656708328012, 1.9651744278815315, -0.16961590340854452, -4.2116722791663275], [-0.7020677682996692, -1.575642758821657, 2.079610028402256, -0.29916014261867585, -4.098995608617176], [-0.6675013464810594, -1.5419492718960115, 1.595299247057833, -0.19035631180846752, -3.8882100029461055], [-0.8047521907482462, -1.6706723695628858, 1.4949845382638276, -0.2624356040388053, -4.0698354885738], [-0.4370839894323558, -1.0937088757590705, 1.5817392199324183, -0.6662107527278123, -3.9947067290325466], [-0.5941070293652969, -1.190681706611436, 1.6009933394270444, -0.4444952494157164, -3.93862284623406], [-0.7007618280724075, -1.6454279975871726, 1.471027152117963, -0.39661915241449647, -3.8747507336432925], [-0.34623071157705265, -0.957437064428841, 1.5178529711044229, -0.6487330739658157, -3.8765447985742227], [-0.7042011790218761, -1.0317645313059316, 1.357606613753437, -0.2775810415940224, -4.088731175950761], [-0.4659785014579147, -1.416731195906097, 1.5901661906651172, 0.06579638831235247, -3.823532363624717], [-0.6874582576086097, -1.8618236171722566, 2.1096606936544933, 0.16774838988039753, -4.272083883027948], [-0.7550757545995099, -1.5863165933351528, 1.7381336785200685, 0.2852727523742159, -3.7128939202683915], [-0.5998254031063444, -1.6551963490000565, 1.602690839880702, 0.7289459225964062, -3.9200096369260233], [-0.8111942937376136, -1.3569641059656938, 0.897280609883457, -0.6649997310215627, -3.9668989764709117], [-0.8846984685709947, -1.8455992344661962, 1.470466542188169, 0.03653757648722841, -3.8686142993146753], [-0.899131396118378, -1.6823994529010091, 1.1218441371263808, 0.197746015496152, -4.037583974255956], [-0.6910979147564473, -1.5543322344875141, 1.2460114864029392, -0.28967986044218486, -3.5512178725990973], [-0.6228499940259224, -1.8540522464110565, 0.9330817171722586, -0.17970549507813321, -3.960624615911587], [-0.7332766345877249, -1.86893261979709, 0.8962750665084256, -0.11932231972606308, -3.7880300337106894], [-0.8262295621580368, -1.3848973410855658, 0.6175510634650461, -0.04391819879299477, -3.912368666429008], [-0.7210347743694827, -1.705187906184024, 0.776597375399999, -0.20594716936047014, -3.962073623043857], [-1.4337117445382241, -1.720405321381118, 0.6747734632403919, -0.24665030135407756, -4.256793918747785], [-1.3044131620871253, -2.077863988228327, 0.5897698218297275, -0.6072658704391862, -4.0885464114821035], [-1.3840717951103108, -2.2578059969735724, 0.7658434988428713, -0.1245635487135156, -3.8735831304823964], [-0.4919478062398748, -1.3180181842215084, 0.6198909325083338, -0.5335879147082832, -3.7738992188685585], [-0.6988526810622786, -1.43825509943207, 0.11841151203304698, -0.2689903126801604, -3.9870713160339384], [-0.6938643069219643, -1.6123928323996835, 0.8936884000560353, -0.05476883585226458, -3.96044860886937], [-0.49464484708865064, -1.333239902457742, 1.0794389232996555, -0.6777406965090514, -3.851071716827141], [-0.507279191325412, -0.8491657602063517, 0.7525897093988736, -0.6840963835241567, -4.117478766435072], [-1.0008337042217252, -1.762524942285629, 2.1903302796674295, 0.38569720473452146, -4.168129565492071], [-0.38184955491009126, -1.3770497925905907, 1.9585726024541148, 0.7774322907291107, -3.7312445161870573], [-0.9327526164686276, -1.6870586818570787, 1.4608650416647053, -0.8073039426333088, -3.9823786056503283], [-0.8181131612636057, -1.5340921058757915, 1.631283409781154, -0.535440448706362, -3.9664658325690545], [-0.6814430573212279, -1.5823665535530278, 1.4414197070996273, -0.08790677000683406, -3.9374628196721275], [-0.5977355346088263, -1.4944337729345432, 1.4442042857370985, -0.8841321852063939, -4.013929380044069], [-0.6664261239833144, -1.3748908105977045, 1.919856627239494, -0.33685185156659947, -3.859965361008477], [-0.378533542517365, -1.550146618427751, 1.6190580255699352, -0.5853465658279101, -3.863945253026109], [-0.7706861050306616, -1.3057871823317315, 1.442576081327055, -0.36071127368277156, -3.822671144808121], [-0.5625975011103357, -1.3085341721888115, 1.313860402083658, -0.5430352598581184, -3.944465032279452], [-0.9503006240995543, -1.635443689675039, 0.9511325768595221, -0.8010181096494763, -4.160448505186096], [-0.45641235389045665, -1.3867137493366688, 2.523997357903838, -0.28094337552627996, -3.7202398830877144], [-0.6871822675250883, -1.3362906048437753, 2.0093317299294418, -0.1442960257756025, -3.8607713439771887], [-0.644986997745573, -1.5030727933147932, 2.2386508913534344, -0.14760543580055738, -4.115315825214972], [-0.5074537263574332, -1.2157300872737062, 2.1629896317259294, -0.0945979401659774, -3.8423025171464893], [-0.5317023119535675, -1.1238658347985513, 1.6223634707971533, 0.040965318870793556, -3.6112429233392143], [-0.5894174067993478, -1.26273117942336, 1.9010482779487756, 0.1093493165578527, -4.256983382483136], [-0.31936770227743627, -1.1896931171890044, 1.7208577960115232, -0.45204243921403964, -3.3694266458009854], [-0.8446691328102668, -1.4893773608249588, 1.8873812459368629, -0.7174993417076331, -4.422949278378911], [-0.9596134461760571, -1.5652070138039025, 1.823422358962619, -0.6485019107564186, -3.91280181415918], [-0.6986817764511428, -1.7101092206935016, 1.7255816148665803, 0.11199096350396923, -3.9460868904780737], [-0.753923118794299, -1.5656843151586046, 1.6100708924340972, 0.3257946618432336, -4.006183583363827], [-0.7442333601816667, -1.3366133358895633, 1.4178505332169167, -0.3222830302559922, -3.9541262777111097], [-0.8432064319967654, -1.569202015412808, 0.9653198919578185, 0.6784410542687574, -3.9996181819389465], [-0.3421776099981342, -0.7936725650560164, 1.1384722993790346, -0.9251862610614657, -3.945783752833032], [-0.5627014710422782, -1.1652621934548784, 1.2396529754782897, -0.9427774941892735, -4.028570163992469], [-0.7527702793608416, -1.6539731305021, 1.3434049474404302, -0.815889354020657, -3.998493170747788], [-0.7435105076271222, -1.6843741070746912, 1.8629863445512382, -0.8912554209310084, -3.7946367314797684], [-0.8939095536785358, -1.576950481367208, 1.0700220780700034, -0.3212684847124022, -4.2892554934579525], [-0.49320193127780765, -1.3063466110991684, 1.8887801239203517, 0.1201396823992454, -3.853573404830243], [-0.5114681056560717, -1.3364495660849727, 1.875761293490495, -0.0470511342814804, -3.762862153773824], [-0.7493640976103468, -1.5522138912302346, 1.3788521584932176, -0.4512316030138334, -3.8130025934323517], [-0.6712133956832241, -1.6396468995108469, 2.031785117769693, -0.023383662587881604, -4.0763754540529105], [-0.7774578060969997, -1.4908903276503873, 1.9517431961325442, -0.137977833152917, -4.000269455177692], [-0.5170574639647781, -1.4688230651858245, 1.5069462956944775, -0.09423506602997189, -4.013787677629855], [-1.148926593977798, -1.3377168912450221, 1.5444885194579143, -0.358108405706853, -3.890826382506087], [-0.6919441212716182, -1.2898420291057822, 1.4413219005705917, -0.056616398174081844, -3.9095370621100867], [-0.47676114294309113, -1.2278523191082982, 1.3180772315235034, 0.06791235658696673, -4.329370447483591], [-0.6581196077486692, -1.1023228040401343, 1.3020488618906003, 0.132455409851074, -4.511949423471899], [-0.5926786043973541, -1.6305893241351785, 1.1318667140119054, 0.13178204723577058, -3.4303592477086307], [-0.8761801153680803, -1.4883733066932585, 1.175450124242418, -0.7100480279925501, -4.127273213958434], [-0.7237656105212953, -1.2581565643883845, 0.7724168779344067, 0.1043222370934046, -3.957944265704214], [-0.6862117734051956, -1.3073617141161802, 0.6198492083948268, 0.19435102880737695, -3.823087711554964], [-0.4798257186877304, -1.3825895972161975, 1.8289717668944663, -0.7448055902905881, -3.8630505013525505], [-0.7845312130294955, -1.599714628762848, 1.0073486370387839, -0.5356893579550494, -3.8916964173880335], [-0.7053316266225867, -1.525624040505011, 1.272858165408671, 0.39326405998372493, -4.024472033761354], [-0.9439087556126313, -1.9665994593780143, 0.15777721170969256, -0.6662834833275755, -4.0329411974219465], [-0.6460879042665771, -1.316106043255232, 0.8003098808845301, -0.3055004097581479, -3.9630035459899378], [-0.4682774551050449, -0.9226215782611424, 1.3116159359274966, -0.6146007067314513, -3.819855768623598], [-0.7562177844994686, -1.3703074865125169, 1.3363687532584279, -0.5595136406614528, -4.023353662655132], [-0.8988233747452172, -1.695353074063605, 1.2408697145118248, -0.6185250893156548, -4.129201901380445], [-0.6112257221626483, -1.430428577666737, 1.4662528674224866, -0.14554236089234376, -3.939322513336587], [-0.322757073021912, -1.783805564656602, 1.4627133055235313, 0.11911060625315704, -3.717757937727896], [-0.9714520061370371, -1.4436691346756503, 2.175576082213075, 0.14090884822563152, -4.03483451610522], [-0.5887247570126614, -1.4413104512641963, 1.3409201330410838, -0.11489768369397274, -3.7460301348799168], [-0.18211364814331718, -0.7818561463157719, 1.2352248546374245, -0.2085990088236533, -3.645185920760005], [-0.6026789429746391, -1.5669443045809268, 1.6349059900540814, -0.059225975841602836, -3.9728937810703986], [-0.9071788625340279, -1.5282107728770675, 1.8642875931175507, -0.32590225404079765, -3.9078793435415533], [-0.610394091838854, -1.6691560672016619, 1.7018582925672316, -0.5434141914569578, -4.079942773949814], [-0.944512121135011, -1.3870209547463366, 1.715867069141395, -0.4612490592152738, -3.793075741979581], [-0.6697596996677267, -1.5832920057877737, 1.7846603155874432, 0.09026355643988819, -3.4259341682043947], [-0.6930063867830744, -2.0716270245719945, 1.6161547892430619, -0.21648326994985437, -4.180626491092988], [-0.8506748272045049, -1.7820096707388868, 1.7841511350699872, -0.34150196997940163, -3.7933825400831043], [-0.5618680893484972, -1.2604685339847774, 1.4800075019763321, -0.9839235137764194, -4.123611635393038], [-0.47189289102808163, -1.8824705168806528, 1.5259783455095488, -0.2360545498418894, -3.9765782499156543], [-0.900531689378392, -1.3865222221036184, 1.5531032617408453, -0.02315649117677665, -3.6063140037256045], [-0.7127842048297023, -1.5498865621433109, 1.482649928644026, -0.09198304427231668, -4.147251533812746], [-0.7701502458194548, -1.4611902479912908, 0.8259436861110946, -0.5375109545585732, -3.8652499036974075], [-0.643194446446593, -1.7903527199671128, 1.1319350552280902, -0.5312082979345024, -3.700949120595062], [-0.4573514491870727, -1.3048504711529265, 2.360803798192682, 0.665232823473817, -3.772296654162417], [-0.7989161062531486, -1.7001174240951626, 1.2974347681286749, -0.6385754500937098, -3.9677118002976672], [-0.4954501641306487, -1.3750208336872694, 1.8534172633802615, -0.22946505450906296, -3.9251931186564777], [-0.8086167580934485, -1.5653366010672571, 2.377483879940634, -0.345405217167562, -3.966208860777777], [-0.4319635501265817, -1.2342569776720136, 2.119658629237854, -0.48119946016436843, -3.856611406252486], [-0.8462162046497803, -1.7102912887607757, 1.6548291845421486, 0.4857967098437822, -3.9176987230360028], [-0.2756067965867162, -1.2436928967467913, 1.2593159057631274, -0.670464219376955, -3.889059695372445], [-0.5426471943227784, -0.7638306914281496, 1.2737511693154953, -0.6047943437285304, -3.576202821231366], [-1.0654518198331029, -1.332200987808568, 2.1917888715501164, -0.4284709846906865, -3.775951882717823], [-0.9275620428767839, -1.3686875655511648, 1.863892887087173, 0.34010346560025106, -3.521888903114095], [-0.5625246014604264, -1.7171780239569843, 1.9158118248741345, 0.1112901671019769, -3.875821226723972], [-0.55511445541379, -1.2601779970210487, 0.970079442742777, -0.4546266162398196, -3.7981311030168246], [-0.8776235695313082, -1.3094859980707065, 0.44423182106525305, -0.03818143375011052, -4.086009968937062], [-0.9667838826943761, -1.5354056655185946, 0.5802457303012463, -0.05223480737679978, -4.076052727687197], [-0.7616043807660603, -1.6807695045749185, 1.2603044859060617, -0.599888474890067, -3.7642121010488774], [-0.8480702208506674, -1.6032309686666741, 2.089555065086912, 0.5682631149147954, -4.127848439868176], [-0.6644970299086566, -1.569498483012344, 1.5179704327082353, 0.1530600560564673, -3.758233667355025], [-0.45897834546419275, -1.2027832470319693, 1.2347264030424348, -0.23224673847773736, -3.7367369595779008], [-0.6253464637436237, -1.1816696645098146, 1.829244502802761, 0.11442653295840084, -4.11253542977965], [-0.6395440702334549, -1.0867012221582182, 1.7493502471491928, 0.4202565683856101, -3.900495661546584], [-0.923708347021302, -1.613344786122302, 1.223342675473742, -0.3355317681788267, -3.964056181931055], [-0.5768398635276186, -1.319354363998472, 0.7902353540594906, -0.320943465738796, -3.8939763047386102], [-0.5562383278228055, -1.1931534442186167, 1.9849155948240111, -0.00905030957242059, -3.9860756144800997], [-0.3864258575541753, -1.2610105440973205, 2.2398959646886856, -0.19134051496592064, -3.9418101071046125], [-0.6651508032830153, -1.107611212500928, 1.739573126977013, -0.42538173549075936, -4.205092467706352], [-0.4935193939261207, -1.3674586907158879, 1.2347925881506285, -1.1852956368959906, -3.854052958822752], [-1.0383843430578859, -1.501494203488305, 1.0067366602006138, -0.4788475280339504, -3.9726759592809504], [-1.0471870065023643, -1.638343540421271, 0.7026126474115305, -0.24128649762245996, -3.9052531371959365], [-0.6944707020963131, -1.4842928900726193, 1.163787257698514, -0.5738058773473868, -3.7509051766914934], [-0.663070322261155, -1.8900650027870929, 1.2468512061796029, 0.023773766780052327, -3.8144261746044337], [-0.7781016150329954, -1.177965119552888, 1.5989871030687213, -0.2432170165612783, -4.193223321541058], [-0.8025861212816152, -1.4690670339970462, 1.8933054993880167, -0.02288219508459327, -3.568285473061989], [-0.8039023049812635, -1.532062450375406, 1.6782774146188912, -0.08009870695988508, -3.73438402282593], [-0.6196074678422067, -1.5028700253688485, 1.8245139669205503, 0.032000826566620816, -3.9331156842698674], [-1.3897976635937166, -1.9330356820125976, 1.7423537075223825, -0.08085891596945533, -4.021436182058713], [-0.3476617081188469, -0.8669764326722216, 1.0752247182889936, -0.3999399619517055, -3.9851287143994107], [-0.7461347340965139, -1.5356850081012814, 1.0897770232781208, -0.6569982812533407, -3.5898951445060834], [-0.8914112861845271, -1.707262515904514, 0.5156757284292475, -0.17529613048047998, -4.2060213391116905], [-0.5369762261251925, -1.495357115420068, 0.9853175190989828, 0.12528486650318071, -3.8125323341976336], [-0.941712513693401, -1.380349644282456, 0.7579886688310515, 0.32292681751585894, -3.9562354030545843], [-0.7202476133347264, -1.2543744417392115, 1.9904014934118857, 0.13339451275070713, -3.7015169020291148], [-0.9688619436998658, -1.5946996202575168, 1.7428755239636444, -0.2598538029708528, -3.9748146698692652], [-0.5736303864085206, -1.3206435861719583, 1.3376403575833145, -0.4823930622894915, -3.6581083773516205], [-0.8534652690915693, -1.8242294924685842, 1.5928674341767595, -0.6999983036231553, -4.309501907708347], [-0.4673169185625738, -1.1295391515061797, 1.8100917273141848, -0.5601350734287844, -3.868712744668243], [-0.7794560094018229, -1.7663851045394392, 1.5314116425579383, -0.12218965945822438, -3.8629317350045227], [-0.6819264437487781, -1.7262821538429836, 1.6183993115633486, 0.061678849556479814, -3.916564315269128], [-1.020359962321578, -1.4784293038746439, 2.1901818095500345, -0.2512336235931489, -4.115959608030773], [-1.1403029009587855, -1.5609194947189673, 2.0346583132727862, -0.29382107954907677, -3.942901844951696], [-1.1246808933514978, -1.6563420319035917, 1.741682142894318, -0.1288152012867663, -3.7389502021311327], [-0.9276588493171665, -1.849453155489634, 1.06248055994441, -0.11766849209863814, -3.940431033501009], [-0.6422094919019485, -1.199316581966753, 0.8594222985429123, -0.5520891658048785, -4.1355996801481405], [-0.8291277320754689, -1.1629256526490677, 0.8018994315246708, -0.3553961891317724, -4.202387908335629], [-0.36405035537347563, -1.4355883079558232, 0.6795272242635143, -0.6771019506884555, -3.706290780595069], [-0.526362634814756, -1.1670634329155076, 0.7268750197016267, 0.03134527078255686, -4.397468028842902], [-0.9321356521334334, -1.2944109672124093, 1.0399346049598825, 0.07192030451258923, -3.842573161235926], [-1.1892028362168345, -2.0291683502092663, 0.6407078288821365, -0.49669569141474035, -3.7497803813788013], [-1.2607536796163072, -1.991516628831764, 0.6282826795853199, -0.5713696244557913, -4.062094706219348], [-1.3612016597660754, -2.031837900964352, 0.7328463644863925, -1.1217144262238654, -3.7835055459785085], [-1.2716795574895974, -2.0023791883013624, 0.5437330811053526, -0.9695650458110572, -3.814787594513736], [-0.9400534075826473, -1.9935487390179647, 0.5773390180409874, -0.850171302285012, -4.247193981984012], [-0.5783869643972381, -1.0596376472052003, 1.249505898621786, 0.5618267118763527, -3.779837267638617], [-0.5052899728866682, -1.0749183694319095, 1.3783296424428735, 0.2409697495201376, -4.112566347379993], [-0.6448466538077509, -1.2097319622068683, 1.705362320885118, 0.22548458225956966, -4.144285495000997], [-0.5654772439758448, -1.4522129529407009, 2.3222019034141512, 0.8620873710786104, -3.5436027523591833], [-0.4917494340929843, -1.6221791910675167, 0.9848448554232073, -0.6827534868230238, -3.682099676832763], [-0.30985869366635455, -1.498216382949159, 0.9471422302634782, -0.6762939216325482, -3.8928346891868375], [-0.46057545522367876, -1.7192082370061694, 2.3322577749332107, -0.10257750486225176, -3.9679463729116775], [-0.46454224022734886, -1.6094027653177028, 0.7807601657997866, -0.42299475590188046, -4.102837676340616], [-0.7115291552281867, -1.3918663566704876, 1.3157681665419287, -0.7954064037234949, -3.946499829216418], [-0.5133594928351648, -1.5877906681901, 1.5134824575337653, -0.9181209009061971, -3.749678484328147], [-0.9165827767194928, -1.272035202064941, 1.358167490825908, -0.6474873444581961, -4.289390584319817], [-0.5952701331108285, -1.7105787361916067, 1.388393524348944, -0.42615995084336744, -3.8435697612780055], [-0.8362582128952913, -1.441066056687669, 2.2761469885539944, 0.09126484817814004, -4.078654347136929], [-0.8510308341259674, -1.3905951167696584, 2.217201179395183, 1.5354014607249515, -4.088276516880589], [-0.8388894034129477, -1.6852282257098867, 1.915416794167626, 1.6429869133740527, -3.8836675935593123], [-0.6946666168273408, -1.2418550569184792, 1.829973668812407, 1.0328470532716214, -4.206562292101437], [-0.6500207635388598, -1.6122652274277187, 2.5372914314231454, 0.6036155210922175, -3.769889466426959], [-0.7993690974579942, -1.3105191169958301, 1.6976125349404105, -0.0761915226569281, -4.070089858914417], [-0.5059724065276457, -1.304762126904519, 1.0780097147410996, -0.2463215173873851, -4.016361149546273], [-0.6705051295938035, -1.1765449476227996, 1.6560367619120835, -0.31461853916149307, -3.811742601971499], [-0.7385891152380823, -1.4661177968526262, 1.3309014562530448, -0.34768479782387446, -3.8160112829831827], [-0.7489901253888493, -1.7534701435290796, 1.5563464478241666, 0.5352149702639586, -4.129615379311957], [-0.25344642848140353, -0.7368166992130497, 3.133621427359184, -0.44481334272767103, -3.800786653858862], [-0.8570121739268379, -1.6707861120596355, 2.530338394048065, -0.16785855187859852, -4.081674213837851], [-0.9032462945829622, -1.763785856634565, 2.666590679215048, -0.14980636922554003, -3.8863183226222895], [-0.6924667610293473, -1.3783626445198829, 1.1351668367772132, 0.46358460948684055, -3.9456948197940456], [-0.5350062021886443, -1.3821225506272603, 2.390859693073295, -0.36063337075104485, -4.004697408137344], [-0.5682082690047092, -1.3522486750151144, 2.510227334031602, -0.39494807290254297, -3.8273287608488724], [-0.4916276309958778, -1.1017311309554692, 2.4361662516390243, -0.7924944612950208, -4.219440572542313], [-0.42765003643196237, -0.8816729851273607, 2.7812130582508767, -0.2808922106233671, -3.5919470521526544], [-0.6186310308657857, -1.1761994532533824, 2.3241641857823616, -0.08492839062455544, -4.201696265087948], [-0.6419531921654056, -1.2609381073958714, 2.282534640190665, 0.12055728467110265, -4.225127670890224], [-0.7113104421217032, -1.3801184292610311, 2.0639098375873326, 0.06432931915442411, -4.176809298583922], [-0.18032814977372066, -0.5165408124272362, 2.5780065767792406, -0.46458502743220126, -3.7653122696800327], [-0.37224110012858336, -1.0294033604513257, 2.4336130902497355, -0.056811667686488196, -4.090394595327851], [-1.1561689368082324, -1.7555738764026478, 1.04258100411379, -0.003556020894338291, -4.15201622509306], [-1.0032668403421101, -1.8571418181554988, 0.9912612935117244, -0.07667878118016223, -3.958613310761334], [-0.7679356930304457, -1.6233798681041007, 1.439813836356036, 0.2663453236443275, -4.061470471564572], [-0.42419035590757725, -0.5911889291541546, 1.8403550616067734, -0.2409728686563931, -4.062009821897836], [-0.5593998655041611, -0.46166937949236353, 1.8742518273424686, -0.1722272444781277, -4.052075562693538], [-0.28319454182737297, -1.4296593829805901, 1.2068002452383326, 0.44529326617197096, -3.7988050978990544], [-0.3011068629556264, -1.3626529044710978, 1.240988218748299, 0.3125559745378963, -3.914567756735635], [-0.3957534725853089, -0.9929099154738158, 1.5615243154408796, -0.14056308442073978, -3.823045514407157], [-0.909577964293419, -1.5998027928812217, 1.9230468635351097, 0.008196454826346719, -3.902873325507684], [-0.45139528793824757, -0.9742966953864967, 1.1713334650360834, -0.5239265789653464, -3.9413812474284544], [-0.6007276538464871, -1.4601847966488397, 1.7670220436292714, -0.46561995955222635, -3.8280547149824296], [-0.8537629188144836, -1.4119133508589903, 0.8954124190360832, -0.26553314756702107, -4.0371731105298485], [-0.6650935016851919, -1.2135956417962857, 0.8380860482439161, -0.3248953113343861, -4.1011890600712775], [-0.737779519341063, -1.3157460215126238, 0.8236770430771806, -0.29139720447861805, -4.203925628848908], [-0.6130859730212924, -1.5917216650768498, 2.0574234680980314, 0.19593812405732408, -3.821359228858795], [-0.5637809263446033, -1.4113334080074356, 1.592960296699592, -0.3541277871694651, -4.046555204104943], [-0.486107668078692, -1.4336082702870163, 1.2821373099139506, -0.07200679724365626, -3.80345448291056], [-0.4741631683131075, -1.2850680843517008, 1.3852965714669396, 0.12536327661440408, -3.7632871359147035], [-0.49336476523092615, -1.52758351378574, 1.4038646324278732, -0.11235980768485071, -3.841608241307883], [-0.9168836441196964, -1.448138323941426, 1.5409757673654625, -0.4073958608389002, -3.8972521526992274], [-0.30703130615538443, -0.6480340993747671, 1.2569689595234956, -0.7208835829469722, -3.9363988821133895], [0.15538386401198445, -0.6553248558866551, -0.6653085274601402, -1.0691257070366516, -4.084556096645444], [0.8737035960603912, -0.6553912849360096, -0.2626398097690606, -0.5316934489704098, -3.752738523764228], [0.6093157898220092, -0.016650188196234955, -0.3253718967155046, -0.7564355822301271, -3.9404439855374522], [0.7021726383401549, -0.1344588021517108, -0.41491664856600624, -0.7401712595540891, -3.719541855846936], [1.524906703034271, 0.15875146091829412, -0.9491611025932812, -1.8196036424455506, -4.009677303409031], [1.737457826491029, -0.9408996792361757, -0.4684374672460428, -0.8437772286561559, -3.8568252449020757], [2.610501596805348, -1.201707879716082, -0.1756533306546097, -0.9342659214804044, -4.011931744762955], [1.5979724290807793, 0.43768237112203934, -0.6874417268579412, -1.484430893895382, -3.876930387925849], [2.284152583841459, 0.49523138412008344, -0.9764592560233893, -1.7107894411464688, -3.9945724236738824], [0.5120836321139614, -0.5646661910696618, -0.4546473873782663, -0.7420735342405588, -3.691718571658688], [0.31966936810979035, -0.8844738916770482, -0.33098762866668036, -0.8925957174627163, -4.0119077815441235], [1.7410402302013357, 0.11841396573394988, -0.8793112653288032, -1.9864845682029948, -3.982182786409053], [1.5853309455105413, 0.09971973067887546, -0.3281039061650304, -0.9789118160935613, -3.94361450316934]], NamedTuple[(n_steps = 7, is_accept = true, acceptance_rate = 0.5085941122259936, log_density = 22.238821874351885, hamiltonian_energy = -20.48456853758569, hamiltonian_energy_error = -33.46511012705573, max_hamiltonian_energy_error = 156.74256609188313, tree_depth = 2, numerical_error = false, step_size = 0.4, nom_step_size = 0.4, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = 22.238821874351885, hamiltonian_energy = -20.53741646483989, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 9.808367746255763e6, tree_depth = 0, numerical_error = true, step_size = 2.3548227853577646, nom_step_size = 2.3548227853577646, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.0033556939704750704, log_density = 22.238821874351885, hamiltonian_energy = -17.819974014061913, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 14.321765892348873, tree_depth = 2, numerical_error = false, step_size = 0.30538744823988645, nom_step_size = 0.30538744823988645, is_adapt = true), (n_steps = 47, is_accept = true, acceptance_rate = 0.9929990910278336, log_density = 20.01981626644413, hamiltonian_energy = -18.09202119497088, hamiltonian_energy_error = 0.021477715069302405, max_hamiltonian_energy_error = 0.021477715069302405, tree_depth = 5, numerical_error = false, step_size = 0.026127135965751128, nom_step_size = 0.026127135965751128, is_adapt = true), (n_steps = 95, is_accept = true, acceptance_rate = 0.9997965143345247, log_density = 19.013695765974603, hamiltonian_energy = -15.821114936932407, hamiltonian_energy_error = -0.01699079086239408, max_hamiltonian_energy_error = -0.05135031825800951, tree_depth = 6, numerical_error = false, step_size = 0.031533374387382344, nom_step_size = 0.031533374387382344, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.999244896031723, log_density = 20.772847399395058, hamiltonian_energy = -17.35282955900549, hamiltonian_energy_error = -0.008879048697526315, max_hamiltonian_energy_error = -0.03405174278783818, tree_depth = 5, numerical_error = false, step_size = 0.046342606692159255, nom_step_size = 0.046342606692159255, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9571839840837881, log_density = 16.75066143450332, hamiltonian_energy = -14.197710973925872, hamiltonian_energy_error = 0.11555116666835907, max_hamiltonian_energy_error = -0.2498751515042681, tree_depth = 5, numerical_error = false, step_size = 0.07562951219589531, nom_step_size = 0.07562951219589531, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9910682023529636, log_density = 19.055340913068278, hamiltonian_energy = -14.433686969148404, hamiltonian_energy_error = -0.5817787293937506, max_hamiltonian_energy_error = -1.3881167517558275, tree_depth = 3, numerical_error = false, step_size = 0.11550171657952685, nom_step_size = 0.11550171657952685, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.7467814494620854, log_density = 21.586249880723873, hamiltonian_energy = -19.84306320777043, hamiltonian_energy_error = -1.3017765877593668, max_hamiltonian_energy_error = 1.4256825990178328, tree_depth = 2, numerical_error = false, step_size = 0.20347337356866366, nom_step_size = 0.20347337356866366, is_adapt = true), (n_steps = 23, is_accept = true, acceptance_rate = 0.9742791150396706, log_density = 20.053848891040445, hamiltonian_energy = -17.918291559760707, hamiltonian_energy_error = -0.03401332366034282, max_hamiltonian_energy_error = -0.37634902914127366, tree_depth = 4, numerical_error = false, step_size = 0.16953724200707573, nom_step_size = 0.16953724200707573, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.22547069509573076, log_density = 21.15234453305908, hamiltonian_energy = -17.399004939688467, hamiltonian_energy_error = 0.39531434320374004, max_hamiltonian_energy_error = 10.744340353135971, tree_depth = 3, numerical_error = false, step_size = 0.2928921259360874, nom_step_size = 0.2928921259360874, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9988291154832182, log_density = 20.312526510007622, hamiltonian_energy = -19.268282236035365, hamiltonian_energy_error = 0.004335679937174319, max_hamiltonian_energy_error = -0.022485330935289483, tree_depth = 4, numerical_error = false, step_size = 0.047847071792121235, nom_step_size = 0.047847071792121235, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9991447874513086, log_density = 22.13957507938442, hamiltonian_energy = -19.452298518335084, hamiltonian_energy_error = -0.12494321651205098, max_hamiltonian_energy_error = -0.1332778236477239, tree_depth = 3, numerical_error = false, step_size = 0.09069304671963205, nom_step_size = 0.09069304671963205, is_adapt = true), (n_steps = 11, is_accept = true, acceptance_rate = 0.844544408369554, log_density = 22.266675831190632, hamiltonian_energy = -20.47113347432147, hamiltonian_energy_error = -0.05612524516166317, max_hamiltonian_energy_error = 0.5838946910908724, tree_depth = 3, numerical_error = false, step_size = 0.1721886559604375, nom_step_size = 0.1721886559604375, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.9289512957071268, log_density = 23.04341402880864, hamiltonian_energy = -22.065896351811823, hamiltonian_energy_error = -0.4171299785282656, max_hamiltonian_energy_error = -0.4171299785282656, tree_depth = 2, numerical_error = false, step_size = 0.20129116680254122, nom_step_size = 0.20129116680254122, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.39290703837987895, log_density = 21.680285121646133, hamiltonian_energy = -21.221039675744287, hamiltonian_energy_error = 0.5311599233693549, max_hamiltonian_energy_error = 7.631720545277201, tree_depth = 2, numerical_error = false, step_size = 0.3058646621532533, nom_step_size = 0.3058646621532533, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.8613786519127914, log_density = 18.582089302597694, hamiltonian_energy = -17.01503681590137, hamiltonian_energy_error = 0.2760446684802531, max_hamiltonian_energy_error = 0.2760446684802531, tree_depth = 4, numerical_error = false, step_size = 0.0889752783813773, nom_step_size = 0.0889752783813773, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9944667360043427, log_density = 18.11422332266129, hamiltonian_energy = -15.67774246058191, hamiltonian_energy_error = -0.190362243609, max_hamiltonian_energy_error = -0.6598159474226737, tree_depth = 4, numerical_error = false, step_size = 0.11038589019390269, nom_step_size = 0.11038589019390269, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9615287112308862, log_density = 21.763804249724, hamiltonian_energy = -16.760262793765783, hamiltonian_energy_error = -1.2305063784394932, max_hamiltonian_energy_error = -1.6759400845035373, tree_depth = 3, numerical_error = false, step_size = 0.2046206821045772, nom_step_size = 0.2046206821045772, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 1.4956412354888882e-16, log_density = 21.763804249724, hamiltonian_energy = -19.36496718870809, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 36.43880645296254, tree_depth = 1, numerical_error = false, step_size = 0.3405608602634495, nom_step_size = 0.3405608602634495, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9947983849638439, log_density = 22.311850669915522, hamiltonian_energy = -20.934480469110234, hamiltonian_energy_error = -0.02311878775977405, max_hamiltonian_energy_error = -0.07934120998911709, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9810358713983693, log_density = 22.47231078573298, hamiltonian_energy = -21.106176122016993, hamiltonian_energy_error = -0.06950669210152682, max_hamiltonian_energy_error = 0.08361692393216558, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9662497087585491, log_density = 20.71077959671768, hamiltonian_energy = -19.689042535469767, hamiltonian_energy_error = 0.055851583772206226, max_hamiltonian_energy_error = 0.08178073568348765, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9497687260910103, log_density = 19.904033486311974, hamiltonian_energy = -18.47580676161179, hamiltonian_energy_error = 0.07672714023260951, max_hamiltonian_energy_error = 0.15328131157230374, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8300542119385638, log_density = 20.28491741577081, hamiltonian_energy = -18.77039715733596, hamiltonian_energy_error = 0.20610469157579558, max_hamiltonian_energy_error = 0.2538976817005292, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9287731111464147, log_density = 21.892104806828787, hamiltonian_energy = -18.11327069726706, hamiltonian_energy_error = -0.11762661863980028, max_hamiltonian_energy_error = 0.1817853585058451, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.947851120506653, log_density = 21.133003040795465, hamiltonian_energy = -19.741840690872493, hamiltonian_energy_error = 0.08237286536772359, max_hamiltonian_energy_error = 0.09727155613540361, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7957695649460332, log_density = 22.76666585089014, hamiltonian_energy = -19.550049826254295, hamiltonian_energy_error = 0.2564296310186087, max_hamiltonian_energy_error = 0.41347247806013243, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9332753940947273, log_density = 21.497209665080348, hamiltonian_energy = -18.44391169484467, hamiltonian_energy_error = 0.0018376714968368901, max_hamiltonian_energy_error = 0.19349125569376469, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9399778736932852, log_density = 21.111375464456117, hamiltonian_energy = -19.435214151779093, hamiltonian_energy_error = -0.0011328621478874368, max_hamiltonian_energy_error = 0.1575146719561218, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8843197001761147, log_density = 18.92451413066103, hamiltonian_energy = -14.367420583363273, hamiltonian_energy_error = 0.14534311559337, max_hamiltonian_energy_error = 0.2298004867339909, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9738915401439859, log_density = 21.324825201830834, hamiltonian_energy = -17.587886544133063, hamiltonian_energy_error = -0.03317594839407434, max_hamiltonian_energy_error = 0.06600089554427058, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6934676274871017, log_density = 21.4960070755955, hamiltonian_energy = -17.07471761716301, hamiltonian_energy_error = -0.13627085835739194, max_hamiltonian_energy_error = 0.7400586218669503, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7902040917059573, log_density = 16.528210162801905, hamiltonian_energy = -13.766326086533576, hamiltonian_energy_error = 0.15935852130976436, max_hamiltonian_energy_error = 0.3782183000288164, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9767370085578936, log_density = 23.026827584566135, hamiltonian_energy = -15.8026768762161, hamiltonian_energy_error = -0.28082635999527383, max_hamiltonian_energy_error = -0.28082635999527383, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.4550223383495891, log_density = 19.77973874014091, hamiltonian_energy = -17.747405961124308, hamiltonian_energy_error = 0.8277969873216691, max_hamiltonian_energy_error = 0.9951615324598428, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9871017400401259, log_density = 19.305416747597572, hamiltonian_energy = -17.44733934799959, hamiltonian_energy_error = 0.026879032652125545, max_hamiltonian_energy_error = -0.18694190968595237, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9498883054391757, log_density = 21.177419632397523, hamiltonian_energy = -15.649960702766013, hamiltonian_energy_error = -0.15955829273709554, max_hamiltonian_energy_error = -0.2511063504917619, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9457912652092663, log_density = 22.57103509375785, hamiltonian_energy = -19.708064943170186, hamiltonian_energy_error = -0.14176531909362922, max_hamiltonian_energy_error = 0.3364245582142402, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8288420166137193, log_density = 21.69302940420817, hamiltonian_energy = -19.14026243023287, hamiltonian_energy_error = 0.22964236051280906, max_hamiltonian_energy_error = 0.4552424631768943, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 22.33492734546971, hamiltonian_energy = -21.274424613869503, hamiltonian_energy_error = -0.12324182841464904, max_hamiltonian_energy_error = -0.2345402170521389, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9805757775441988, log_density = 20.974749255097123, hamiltonian_energy = -20.280369156041683, hamiltonian_energy_error = -0.050150548789257954, max_hamiltonian_energy_error = -0.09161855534454233, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.962633111663429, log_density = 20.86097453885958, hamiltonian_energy = -20.053941038745208, hamiltonian_energy_error = 0.06620173966823373, max_hamiltonian_energy_error = 0.11774260843604623, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 22.000603232275964, hamiltonian_energy = -20.72716792204268, hamiltonian_energy_error = -0.04975536201880004, max_hamiltonian_energy_error = -0.04975536201880004, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8862232614635189, log_density = 20.615281944029327, hamiltonian_energy = -19.01774622016756, hamiltonian_energy_error = 0.2918425196387133, max_hamiltonian_energy_error = -0.36810321743977426, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8944579691710697, log_density = 20.116312197565797, hamiltonian_energy = -18.221505007198168, hamiltonian_energy_error = -0.04106986538274171, max_hamiltonian_energy_error = -0.6565358370743404, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.927735616143815, log_density = 21.654857663699435, hamiltonian_energy = -17.48980607530183, hamiltonian_energy_error = -0.22083623256114038, max_hamiltonian_energy_error = -0.5468510440779184, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9090597427272059, log_density = 20.890072835160936, hamiltonian_energy = -18.825998634723742, hamiltonian_energy_error = 0.18523375736759462, max_hamiltonian_energy_error = 0.3174879504586059, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9040043893290053, log_density = 18.947684610512727, hamiltonian_energy = -15.643642449878435, hamiltonian_energy_error = 0.5347632932928796, max_hamiltonian_energy_error = -0.5364351542081103, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9820887355996275, log_density = 21.7208939599823, hamiltonian_energy = -18.062707179469825, hamiltonian_energy_error = -0.5997966147999172, max_hamiltonian_energy_error = -0.9285872178425159, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9304182913764762, log_density = 21.823395100634535, hamiltonian_energy = -19.878065342916507, hamiltonian_energy_error = 0.1567884795741925, max_hamiltonian_energy_error = 0.21094488598772188, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9969896810820831, log_density = 21.695049276826918, hamiltonian_energy = -20.040691320142027, hamiltonian_energy_error = -0.15272672316720914, max_hamiltonian_energy_error = -0.3579429339604232, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8821073906174085, log_density = 22.84035076784362, hamiltonian_energy = -19.14615380492747, hamiltonian_energy_error = -0.32644252256965345, max_hamiltonian_energy_error = 0.38511530358989177, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9578772249510923, log_density = 23.070811724653773, hamiltonian_energy = -21.911078599361062, hamiltonian_energy_error = -0.04946781087196328, max_hamiltonian_energy_error = 0.1544111669037953, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8127617558809809, log_density = 22.048146896227113, hamiltonian_energy = -21.13905510890772, hamiltonian_energy_error = 0.18325229513004615, max_hamiltonian_energy_error = 0.2595966380268706, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9492713821812175, log_density = 21.123724453709745, hamiltonian_energy = -19.955669409791266, hamiltonian_energy_error = 0.009533268718335819, max_hamiltonian_energy_error = -0.23903099739824896, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 20.49149344734863, hamiltonian_energy = -19.35078428201478, hamiltonian_energy_error = -0.05444077610547993, max_hamiltonian_energy_error = -0.21409957921401812, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9657708137859463, log_density = 21.10235762344338, hamiltonian_energy = -19.039396903598835, hamiltonian_energy_error = 0.03375977497969984, max_hamiltonian_energy_error = -0.14397770671329013, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8722299054688912, log_density = 18.840546994004885, hamiltonian_energy = -17.39255082049474, hamiltonian_energy_error = 0.3644144935489919, max_hamiltonian_energy_error = 0.3644144935489919, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9108242790884215, log_density = 16.210917324354337, hamiltonian_energy = -14.120383514885045, hamiltonian_energy_error = -0.031028060535742696, max_hamiltonian_energy_error = -0.45008214629589993, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9663529067928501, log_density = 15.565740762775903, hamiltonian_energy = -14.452288767122988, hamiltonian_energy_error = 0.13258584715030253, max_hamiltonian_energy_error = 0.13258584715030253, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8980658745514479, log_density = 15.159896850678875, hamiltonian_energy = -13.062719014388282, hamiltonian_energy_error = 0.14149824055980886, max_hamiltonian_energy_error = 0.1909899137452662, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9240667663371241, log_density = 18.620227371485896, hamiltonian_energy = -11.984411217060448, hamiltonian_energy_error = -0.17976811603173104, max_hamiltonian_energy_error = -1.0481077844731548, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9906057349957966, log_density = 20.58159378552653, hamiltonian_energy = -15.748763650135507, hamiltonian_energy_error = -0.3033415536235804, max_hamiltonian_energy_error = -1.0048215101314213, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9978411219137964, log_density = 20.64429545938644, hamiltonian_energy = -19.51104624457774, hamiltonian_energy_error = -0.06051736457388657, max_hamiltonian_energy_error = -0.32625259746702895, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8959529884949079, log_density = 18.816981471426388, hamiltonian_energy = -16.133795919896773, hamiltonian_energy_error = 0.15388961122929956, max_hamiltonian_energy_error = -0.35822244106875445, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8574056995534739, log_density = 22.772119241274652, hamiltonian_energy = -17.125411409595312, hamiltonian_energy_error = -0.4782604702026241, max_hamiltonian_energy_error = -0.4782604702026241, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8863935840238003, log_density = 21.604859689520385, hamiltonian_energy = -20.61967011279088, hamiltonian_energy_error = 0.0908248647338823, max_hamiltonian_energy_error = 0.20218451378006463, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8965629994261836, log_density = 20.281633864971592, hamiltonian_energy = -17.959488642450655, hamiltonian_energy_error = 0.19322000923532556, max_hamiltonian_energy_error = 0.2642065610090931, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.942022475643402, log_density = 20.7630732939105, hamiltonian_energy = -14.09512667079689, hamiltonian_energy_error = 0.07755220941827368, max_hamiltonian_energy_error = -0.2842705626674107, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 21.17282890960724, hamiltonian_energy = -19.356927986004997, hamiltonian_energy_error = -0.12759543069227064, max_hamiltonian_energy_error = -0.27271049297679184, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9578624088958879, log_density = 21.622633301015405, hamiltonian_energy = -18.378147840518487, hamiltonian_energy_error = 0.006279289461751603, max_hamiltonian_energy_error = -0.1841098382143329, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8839451686505772, log_density = 21.918133534063813, hamiltonian_energy = -18.367028139356417, hamiltonian_energy_error = -0.16710189284688326, max_hamiltonian_energy_error = 0.30529827500496864, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8259671236945187, log_density = 20.879802853651263, hamiltonian_energy = -18.085862041969925, hamiltonian_energy_error = 0.06136835703765087, max_hamiltonian_energy_error = 0.40888076901340753, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 20.38408000649643, hamiltonian_energy = -18.589019347936695, hamiltonian_energy_error = -0.11939589993845345, max_hamiltonian_energy_error = -0.2701733887740012, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.99470496600392, log_density = 21.344697491682233, hamiltonian_energy = -20.126865255530955, hamiltonian_energy_error = -0.09515337053446515, max_hamiltonian_energy_error = -0.14245330276161283, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9881242190528052, log_density = 21.219603855653787, hamiltonian_energy = -20.09109428584654, hamiltonian_energy_error = 0.0548900529432359, max_hamiltonian_energy_error = 0.08018438637264325, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7777682150136292, log_density = 19.442621670956733, hamiltonian_energy = -18.596647906206616, hamiltonian_energy_error = 0.3957266295808566, max_hamiltonian_energy_error = 0.3979122363809253, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9609183720223412, log_density = 20.67027470035994, hamiltonian_energy = -18.47114419353628, hamiltonian_energy_error = -0.4956473220601545, max_hamiltonian_energy_error = -0.6326443774665336, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 21.906169908216118, hamiltonian_energy = -20.129734312104844, hamiltonian_energy_error = -0.06087239675179035, max_hamiltonian_energy_error = -0.09442972042881337, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9725214491779609, log_density = 20.61893689495523, hamiltonian_energy = -20.149943001917723, hamiltonian_energy_error = 0.04872468605043778, max_hamiltonian_energy_error = 0.15432961779669796, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9292269647134669, log_density = 20.27543517535079, hamiltonian_energy = -17.629402997386602, hamiltonian_energy_error = 0.025560032134681165, max_hamiltonian_energy_error = 0.1427640168371731, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9971305684916363, log_density = 22.009244397969177, hamiltonian_energy = -19.677290095323787, hamiltonian_energy_error = -0.10910576896715085, max_hamiltonian_energy_error = -0.10910576896715085, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9998619833755785, log_density = 22.69582171174562, hamiltonian_energy = -21.751348791180835, hamiltonian_energy_error = 0.000966583362174589, max_hamiltonian_energy_error = -0.0350642485447743, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9272027636173235, log_density = 22.048626977896845, hamiltonian_energy = -21.292801519310853, hamiltonian_energy_error = 0.12863107503473614, max_hamiltonian_energy_error = 0.15477146158042743, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9776505052270967, log_density = 22.613860708514714, hamiltonian_energy = -21.140902866991112, hamiltonian_energy_error = -0.06664714739714839, max_hamiltonian_energy_error = 0.11563616068041682, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8714769807731455, log_density = 21.568027811503313, hamiltonian_energy = -20.47309629741899, hamiltonian_energy_error = 0.23791548037801036, max_hamiltonian_energy_error = 0.2561227776265049, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 23.135558504333236, hamiltonian_energy = -20.89130450492152, hamiltonian_energy_error = -0.28021383687814705, max_hamiltonian_energy_error = -0.28021383687814705, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7179812786403666, log_density = 21.384633189313867, hamiltonian_energy = -19.3774505031211, hamiltonian_energy_error = 0.19248443684567818, max_hamiltonian_energy_error = 0.7022507994961487, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9997161177418147, log_density = 23.110229143313127, hamiltonian_energy = -21.297291925147416, hamiltonian_energy_error = -0.17576418721321474, max_hamiltonian_energy_error = -0.24807378029224836, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9334264868610949, log_density = 22.33113584733219, hamiltonian_energy = -21.169648336777925, hamiltonian_energy_error = 0.09519618098616434, max_hamiltonian_energy_error = 0.1497309024043858, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 22.6643568067628, hamiltonian_energy = -21.874740313792774, hamiltonian_energy_error = -0.09796030457145477, max_hamiltonian_energy_error = -0.25038754287506393, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9088275121534566, log_density = 22.012271088129236, hamiltonian_energy = -21.582869444169372, hamiltonian_energy_error = 0.17030321366153345, max_hamiltonian_energy_error = 0.3014315440844513, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9865920096819744, log_density = 22.49815959848316, hamiltonian_energy = -20.04963928401306, hamiltonian_energy_error = -0.2764788995451539, max_hamiltonian_energy_error = -0.2764788995451539, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8639195326870793, log_density = 21.893077509650468, hamiltonian_energy = -21.09244309496162, hamiltonian_energy_error = 0.07955547038648447, max_hamiltonian_energy_error = 0.3093983499856243, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.971442744530511, log_density = 22.837724969439805, hamiltonian_energy = -20.76539884965558, hamiltonian_energy_error = -0.04440330189444808, max_hamiltonian_energy_error = -0.11390268883359767, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9665453208408624, log_density = 23.25961551112314, hamiltonian_energy = -21.463003181780508, hamiltonian_energy_error = -0.09129803678984771, max_hamiltonian_energy_error = 0.1080378686228336, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5221978635005027, log_density = 23.25961551112314, hamiltonian_energy = -17.604669852780937, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 1.0545576993443682, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9549082368292332, log_density = 22.830424803099994, hamiltonian_energy = -22.21593628055056, hamiltonian_energy_error = 0.014705792244363636, max_hamiltonian_energy_error = 0.09335773712302853, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.6408449463052259, log_density = 20.48011953032143, hamiltonian_energy = -17.827311325134126, hamiltonian_energy_error = 0.4978463132979769, max_hamiltonian_energy_error = 0.9618754188100027, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9424962766356018, log_density = 22.98214566560693, hamiltonian_energy = -18.26566205498694, hamiltonian_energy_error = -0.436129433651935, max_hamiltonian_energy_error = -0.436129433651935, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8297557735502037, log_density = 21.4920655984285, hamiltonian_energy = -19.225321682440487, hamiltonian_energy_error = 0.04170175566123646, max_hamiltonian_energy_error = 0.34318260930728073, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9994572860245189, log_density = 22.515361124245707, hamiltonian_energy = -20.997770477978037, hamiltonian_energy_error = -0.10556254892987482, max_hamiltonian_energy_error = -0.12419640655874176, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7222010398611746, log_density = 21.818886137213447, hamiltonian_energy = -19.697080760700658, hamiltonian_energy_error = -0.0289905177431784, max_hamiltonian_energy_error = 0.779210386535496, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8797954127010925, log_density = 21.350839068791366, hamiltonian_energy = -19.614080557355496, hamiltonian_energy_error = 0.1494835124519014, max_hamiltonian_energy_error = 0.21928397814719958, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8845910161636144, log_density = 22.329165067006606, hamiltonian_energy = -19.270645444059028, hamiltonian_energy_error = -0.30927323838181664, max_hamiltonian_energy_error = 0.31194589353907176, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7313699874793379, log_density = 22.39789765925159, hamiltonian_energy = -20.02251588829666, hamiltonian_energy_error = 0.14538695115394518, max_hamiltonian_energy_error = 0.5776649457379008, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8007464835746522, log_density = 20.274511528021478, hamiltonian_energy = -18.12511306502631, hamiltonian_energy_error = 0.14832805185382014, max_hamiltonian_energy_error = 0.4033764585878359, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9413829483680516, log_density = 20.76277837636197, hamiltonian_energy = -17.805368447174573, hamiltonian_energy_error = 0.03896188371054876, max_hamiltonian_energy_error = -0.2900201018009838, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.999438933529741, log_density = 21.89873791750847, hamiltonian_energy = -19.70140535746823, hamiltonian_energy_error = -0.1748120789304224, max_hamiltonian_energy_error = -0.23803354407050037, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8921077729946478, log_density = 20.356044404274456, hamiltonian_energy = -18.19006896837389, hamiltonian_energy_error = 0.17256391035569507, max_hamiltonian_energy_error = 0.19942257702382093, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9076557392787331, log_density = 21.873056977296258, hamiltonian_energy = -17.32442638504081, hamiltonian_energy_error = -0.23889577679375762, max_hamiltonian_energy_error = -0.273666763952054, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7450778569384362, log_density = 18.92529337955319, hamiltonian_energy = -17.187426639452823, hamiltonian_energy_error = 0.5603976238471411, max_hamiltonian_energy_error = 0.6026959032199812, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 19.55147540209677, hamiltonian_energy = -17.04057993891363, hamiltonian_energy_error = -0.09591440434762788, max_hamiltonian_energy_error = -0.5744429728470699, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9779104049991881, log_density = 22.568984311779346, hamiltonian_energy = -18.784515155793002, hamiltonian_energy_error = -0.37535362384844717, max_hamiltonian_energy_error = -0.5216301538835921, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8972874511364793, log_density = 22.040416611279216, hamiltonian_energy = -20.453199640190437, hamiltonian_energy_error = -0.02767028281390793, max_hamiltonian_energy_error = -0.3798558607174023, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9302627325092152, log_density = 17.89123532828063, hamiltonian_energy = -16.36409415761599, hamiltonian_energy_error = -0.015689648700288217, max_hamiltonian_energy_error = 0.27086577385219, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9920816018238625, log_density = 21.024670805919133, hamiltonian_energy = -17.04471100084143, hamiltonian_energy_error = -0.03981770129444229, max_hamiltonian_energy_error = -0.17570739225219256, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9881582465999715, log_density = 22.408115769167487, hamiltonian_energy = -20.35889660753738, hamiltonian_energy_error = -0.09001710477411251, max_hamiltonian_energy_error = -0.09001710477411251, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9931116236519789, log_density = 22.453527086314892, hamiltonian_energy = -21.51249877725519, hamiltonian_energy_error = -0.023889560885251626, max_hamiltonian_energy_error = -0.046426870385879226, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9727226527208791, log_density = 21.879280214692187, hamiltonian_energy = -20.80705540673119, hamiltonian_energy_error = 0.04774008329070867, max_hamiltonian_energy_error = 0.05740998067318159, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7935731960405683, log_density = 20.48258418918942, hamiltonian_energy = -18.959181616986687, hamiltonian_energy_error = 0.1067578866637291, max_hamiltonian_energy_error = 0.3701763830707847, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8828611888994693, log_density = 21.501282842703752, hamiltonian_energy = -18.2738744660486, hamiltonian_energy_error = 0.07928833791993029, max_hamiltonian_energy_error = 0.4762423838620222, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9998735428037985, log_density = 21.9318723899445, hamiltonian_energy = -20.797870249263138, hamiltonian_energy_error = -0.10075915642768152, max_hamiltonian_energy_error = -0.210656041224059, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9934309594144151, log_density = 21.020496366843393, hamiltonian_energy = -19.984541898398355, hamiltonian_energy_error = -0.018638194974535338, max_hamiltonian_energy_error = -0.11390264432115771, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.917064345398849, log_density = 21.26540790457458, hamiltonian_energy = -19.013163672895473, hamiltonian_energy_error = 0.16163507172949565, max_hamiltonian_energy_error = 0.22995431397060528, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9985539496302749, log_density = 22.12748697431251, hamiltonian_energy = -19.759411882548466, hamiltonian_energy_error = -0.11894842200285893, max_hamiltonian_energy_error = -0.1675044869273563, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9914249603187538, log_density = 21.991524843452225, hamiltonian_energy = -19.353886406976297, hamiltonian_energy_error = -0.028455449867092142, max_hamiltonian_energy_error = -0.0801889680138359, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6987873293483798, log_density = 19.489316928689743, hamiltonian_energy = -15.917253104689483, hamiltonian_energy_error = 0.21996884910688763, max_hamiltonian_energy_error = 0.4807067753757188, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9544857943182123, log_density = 19.782848866295634, hamiltonian_energy = -15.715020033472154, hamiltonian_energy_error = 0.14612818555818308, max_hamiltonian_energy_error = -0.23628848268536373, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.598771582461666, log_density = 21.071186672795307, hamiltonian_energy = -16.717601670394654, hamiltonian_energy_error = 0.5475360551547759, max_hamiltonian_energy_error = 0.8523666165603032, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9754082146987008, log_density = 19.71713448186067, hamiltonian_energy = -18.682392838377094, hamiltonian_energy_error = 0.006910262662405131, max_hamiltonian_energy_error = -0.26084211588453954, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8869674920017784, log_density = 19.78483573416679, hamiltonian_energy = -16.758742084995404, hamiltonian_energy_error = 0.15510569539594954, max_hamiltonian_energy_error = 0.37374738236508165, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8275272373241592, log_density = 21.08448447752844, hamiltonian_energy = -15.91617482675331, hamiltonian_energy_error = -0.24529861578656842, max_hamiltonian_energy_error = 1.0750388016881942, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 21.218348968345506, hamiltonian_energy = -19.92866283871395, hamiltonian_energy_error = -0.16838660490877544, max_hamiltonian_energy_error = -0.2638220709479313, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.901151118329826, log_density = 22.79949042828448, hamiltonian_energy = -18.771431153123892, hamiltonian_energy_error = -0.12804182072374815, max_hamiltonian_energy_error = 0.2936220946422381, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7477073661488601, log_density = 19.313570706319382, hamiltonian_energy = -17.00960182498431, hamiltonian_energy_error = 0.34455905175767043, max_hamiltonian_energy_error = 0.5126150392900044, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 19.8671840488332, hamiltonian_energy = -18.070068480224382, hamiltonian_energy_error = -0.08493346124048884, max_hamiltonian_energy_error = -0.21123463281998411, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7466095035638768, log_density = 18.63331493427329, hamiltonian_energy = -15.83872349754979, hamiltonian_energy_error = 0.3233076560854542, max_hamiltonian_energy_error = 0.5056273192669174, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9826858442417996, log_density = 20.913296474512478, hamiltonian_energy = -18.05818669832221, hamiltonian_energy_error = -1.0999174417452444, max_hamiltonian_energy_error = -1.0999174417452444, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9970383045373894, log_density = 21.920699698359062, hamiltonian_energy = -20.242529770425275, hamiltonian_energy_error = -0.09397183310946033, max_hamiltonian_energy_error = -0.14609456211985972, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9829382833608804, log_density = 23.285601823366317, hamiltonian_energy = -21.42742935793425, hamiltonian_energy_error = -0.029845802588194914, max_hamiltonian_energy_error = -0.06759217464612277, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6676682997071669, log_density = 22.748191494929806, hamiltonian_energy = -20.134656825543875, hamiltonian_energy_error = 0.07127981648372739, max_hamiltonian_energy_error = 0.5869097135767518, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8377534322001948, log_density = 20.162618350687495, hamiltonian_energy = -18.17574177398957, hamiltonian_energy_error = 0.29195214420260385, max_hamiltonian_energy_error = 0.3124632538246388, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 20.634925882670473, hamiltonian_energy = -18.880902221249915, hamiltonian_energy_error = -0.16284516559141693, max_hamiltonian_energy_error = -0.3191688493407163, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.90827024189751, log_density = 22.55800430848415, hamiltonian_energy = -19.311700576467253, hamiltonian_energy_error = -0.17280153364892215, max_hamiltonian_energy_error = 0.18968372134339617, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.854287838561087, log_density = 21.317733098915554, hamiltonian_energy = -18.473480587117653, hamiltonian_energy_error = 0.14659089506037049, max_hamiltonian_energy_error = 0.27541076294825473, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9961996781712947, log_density = 22.264763744208153, hamiltonian_energy = -20.68998633088833, hamiltonian_energy_error = -0.04729647790068725, max_hamiltonian_energy_error = -0.21670383668258353, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9606603506356326, log_density = 21.383380178941763, hamiltonian_energy = -19.899395789161346, hamiltonian_energy_error = 0.04047217734399666, max_hamiltonian_energy_error = 0.20305270897799588, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 22.90401815846213, hamiltonian_energy = -20.832820953126166, hamiltonian_energy_error = -0.1577664654167208, max_hamiltonian_energy_error = -0.1577664654167208, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7911671451516716, log_density = 21.949048063886135, hamiltonian_energy = -20.6891668401752, hamiltonian_energy_error = 0.18509710441195537, max_hamiltonian_energy_error = 0.4732128142854499, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9497384055780951, log_density = 21.665207342273565, hamiltonian_energy = -19.708380136396613, hamiltonian_energy_error = 0.06116934681692854, max_hamiltonian_energy_error = 0.21256960070272868, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9988418566658643, log_density = 20.840762612225927, hamiltonian_energy = -19.95237629090913, hamiltonian_energy_error = 0.008140043784351292, max_hamiltonian_energy_error = -0.29088634382509326, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9840017335964407, log_density = 21.94831837894651, hamiltonian_energy = -18.30608069035569, hamiltonian_energy_error = -0.15343442415920805, max_hamiltonian_energy_error = -0.2998180890402722, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9659290504283237, log_density = 19.796916745940518, hamiltonian_energy = -18.243988707766476, hamiltonian_energy_error = 0.05308016614700506, max_hamiltonian_energy_error = 0.09827743233158515, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9716526904236182, log_density = 19.30880742190788, hamiltonian_energy = -16.15948649642059, hamiltonian_energy_error = -0.038863310108872895, max_hamiltonian_energy_error = -0.4126954549288726, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9754726101993136, log_density = 20.68836357224756, hamiltonian_energy = -18.132409529151694, hamiltonian_energy_error = 0.06303421782179086, max_hamiltonian_energy_error = -0.2601482201102776, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9551416248311969, log_density = 20.260428557484012, hamiltonian_energy = -17.26922022177147, hamiltonian_energy_error = 0.005439932845916928, max_hamiltonian_energy_error = -0.26401769673643116, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9633104401076806, log_density = 17.229975850510172, hamiltonian_energy = -15.554588843681744, hamiltonian_energy_error = 0.2725377551420891, max_hamiltonian_energy_error = 0.2725377551420891, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8492577527607401, log_density = 22.189980288246712, hamiltonian_energy = -13.870549472496567, hamiltonian_energy_error = -0.29875200791729206, max_hamiltonian_energy_error = 0.601893839916066, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7544772091424304, log_density = 20.166464558610404, hamiltonian_energy = -17.865502615584763, hamiltonian_energy_error = 0.3600135123938095, max_hamiltonian_energy_error = 0.46428328631868254, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.966438851603858, log_density = 19.04032432318629, hamiltonian_energy = -17.615989253922994, hamiltonian_energy_error = 0.030604918381257562, max_hamiltonian_energy_error = -0.3525709747115968, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8940898323410463, log_density = 21.525997846349114, hamiltonian_energy = -15.456260019462361, hamiltonian_energy_error = -0.4491852038613384, max_hamiltonian_energy_error = -0.6712692422221309, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.48396727126353567, log_density = 16.011329077233242, hamiltonian_energy = -14.239553969250998, hamiltonian_energy_error = 1.4922680823870724, max_hamiltonian_energy_error = 1.4922680823870724, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 18.01956149735915, hamiltonian_energy = -11.385677258121277, hamiltonian_energy_error = -0.8771241765030471, max_hamiltonian_energy_error = -1.5431690840630896, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 23.05634401194014, hamiltonian_energy = -18.163585413609177, hamiltonian_energy_error = -0.3711082040493636, max_hamiltonian_energy_error = -0.3711082040493636, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7200803187777453, log_density = 22.28339609002858, hamiltonian_energy = -19.85952159482528, hamiltonian_energy_error = 0.1728446550485252, max_hamiltonian_energy_error = 0.48140719992085934, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9931570333218227, log_density = 22.363717413690985, hamiltonian_energy = -17.88094091231685, hamiltonian_energy_error = -0.0996808361166508, max_hamiltonian_energy_error = -0.16574379682160156, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9786332388155163, log_density = 22.75419160044195, hamiltonian_energy = -20.93793793601747, hamiltonian_energy_error = -0.0470664126552407, max_hamiltonian_energy_error = -0.14484158723876916, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9604828871099561, log_density = 22.333607308861694, hamiltonian_energy = -21.450121721270477, hamiltonian_energy_error = 0.07265658512327278, max_hamiltonian_energy_error = 0.1030250526860641, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.992589696550678, log_density = 21.32896000255692, hamiltonian_energy = -20.12746150426401, hamiltonian_energy_error = -0.04592956424546202, max_hamiltonian_energy_error = -0.13420457155446286, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.5585846513743481, log_density = 21.32896000255692, hamiltonian_energy = -18.229959637665203, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 0.8415690593860958, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6297606832976901, log_density = 22.292832688335665, hamiltonian_energy = -17.648980368575423, hamiltonian_energy_error = 0.15012731412430824, max_hamiltonian_energy_error = 0.928577123722242, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.997902586233072, log_density = 23.080310782501165, hamiltonian_energy = -22.111540581289173, hamiltonian_energy_error = -0.04957785255943037, max_hamiltonian_energy_error = -0.10165177064018494, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7774007887210471, log_density = 18.681759754586274, hamiltonian_energy = -17.85025426466846, hamiltonian_energy_error = 0.2927576105143608, max_hamiltonian_energy_error = 0.30918322661625197, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9926999214888795, log_density = 18.83937530750228, hamiltonian_energy = -15.18500539625371, hamiltonian_energy_error = 0.11597349873146179, max_hamiltonian_energy_error = -0.5593952420275983, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 21.312728215930925, hamiltonian_energy = -13.87921072376054, hamiltonian_energy_error = -0.5316390392272616, max_hamiltonian_energy_error = -1.0059047328311976, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8175548616629191, log_density = 21.541282879617146, hamiltonian_energy = -18.01324574841795, hamiltonian_energy_error = 0.04883886295512596, max_hamiltonian_energy_error = 0.44764546711148867, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9969252956015582, log_density = 21.212399568027543, hamiltonian_energy = -20.513714256287297, hamiltonian_energy_error = -0.036225398985191504, max_hamiltonian_energy_error = -0.28117903802497324, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 21.26616185110257, hamiltonian_energy = -20.681614695546486, hamiltonian_energy_error = -0.07141821468364995, max_hamiltonian_energy_error = -0.2226418502439138, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9872407612268599, log_density = 21.493667414034952, hamiltonian_energy = -20.438019345661115, hamiltonian_energy_error = 0.03654370444455424, max_hamiltonian_energy_error = -0.13892154955541614, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8838084008129504, log_density = 21.990364688387864, hamiltonian_energy = -19.449488477345678, hamiltonian_energy_error = -0.08696882465899947, max_hamiltonian_energy_error = 0.3831656004438102, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.797379501929789, log_density = 20.372841630219614, hamiltonian_energy = -19.389869492614004, hamiltonian_energy_error = 0.38969612641504625, max_hamiltonian_energy_error = 0.38969612641504625, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9593463109966187, log_density = 21.426535245824027, hamiltonian_energy = -17.67145567750359, hamiltonian_energy_error = -0.017344009704384433, max_hamiltonian_energy_error = -0.5573793597896035, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 22.73506165716676, hamiltonian_energy = -21.023478948683806, hamiltonian_energy_error = -0.18037286140603115, max_hamiltonian_energy_error = -0.23852064599716272, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9278201598249899, log_density = 20.928975714324856, hamiltonian_energy = -20.595956083435865, hamiltonian_energy_error = 0.20371384840848705, max_hamiltonian_energy_error = 0.20371384840848705, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9637188483902289, log_density = 19.94511615318587, hamiltonian_energy = -19.30938606880356, hamiltonian_energy_error = 0.16668407486953285, max_hamiltonian_energy_error = -0.3305884586761749, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.96238170109244, log_density = 23.096463660776514, hamiltonian_energy = -18.562949002233367, hamiltonian_energy_error = -0.3806084867186854, max_hamiltonian_energy_error = -0.5053931579328435, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9333986489505469, log_density = 20.390962775072538, hamiltonian_energy = -18.51086307000577, hamiltonian_energy_error = 0.10179578845406922, max_hamiltonian_energy_error = 0.14656584706925457, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9050025839179426, log_density = 22.566803699195802, hamiltonian_energy = -16.80993321369251, hamiltonian_energy_error = -0.1357140674841233, max_hamiltonian_energy_error = 0.25986477405980324, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9647843965684674, log_density = 22.552340197753622, hamiltonian_energy = -21.233609693173996, hamiltonian_energy_error = -0.053524245258966374, max_hamiltonian_energy_error = 0.14506600173769257, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9447362978668034, log_density = 21.61379098392655, hamiltonian_energy = -19.18012270704066, hamiltonian_energy_error = 0.03339862078318134, max_hamiltonian_energy_error = 0.11494148189925113, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8964300596301454, log_density = 20.173009299261363, hamiltonian_energy = -18.234031605867546, hamiltonian_energy_error = 0.17688773995933005, max_hamiltonian_energy_error = 0.20464249210786534, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9847666743115523, log_density = 20.90936068192545, hamiltonian_energy = -17.5813667173684, hamiltonian_energy_error = -0.0926414999577716, max_hamiltonian_energy_error = -0.19831031956055512, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9961607593349457, log_density = 22.154846296784115, hamiltonian_energy = -19.33210942324945, hamiltonian_energy_error = -0.07897727627250362, max_hamiltonian_energy_error = -0.15056456050328393, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9856834723269748, log_density = 23.18482896082031, hamiltonian_energy = -20.946550992296665, hamiltonian_energy_error = -0.06575502308215064, max_hamiltonian_energy_error = -0.06575502308215064, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9567823107834845, log_density = 21.948630365088, hamiltonian_energy = -21.39538424283759, hamiltonian_energy_error = 0.07961965383902836, max_hamiltonian_energy_error = 0.07961965383902836, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9721085424496719, log_density = 22.433919031058632, hamiltonian_energy = -20.53140003392653, hamiltonian_energy_error = -0.10571395689564156, max_hamiltonian_energy_error = -0.10571395689564156, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.5495215877173317, log_density = 21.217048427099186, hamiltonian_energy = -19.684025786422712, hamiltonian_energy_error = 0.4352166458458022, max_hamiltonian_energy_error = 0.8933056809379032, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8662619127699843, log_density = 21.50930269424023, hamiltonian_energy = -18.901489723710583, hamiltonian_energy_error = 0.09185199945825318, max_hamiltonian_energy_error = 0.2587872427451998, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.5312047648282877, log_density = 21.50930269424023, hamiltonian_energy = -14.2882258124393, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 0.7922081416566975, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.941243552999514, log_density = 19.572049174417586, hamiltonian_energy = -18.596904593188235, hamiltonian_energy_error = -0.016446856370627927, max_hamiltonian_energy_error = -0.48309107888576364, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9949532040327271, log_density = 21.622977776723175, hamiltonian_energy = -17.52159206968384, hamiltonian_energy_error = -0.39570084144864737, max_hamiltonian_energy_error = -0.5087651517424767, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9933722209062412, log_density = 21.79634690964926, hamiltonian_energy = -21.010422922374154, hamiltonian_energy_error = 0.02241720839675665, max_hamiltonian_energy_error = -0.18584209873157675, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9726210839082107, log_density = 21.77063592461358, hamiltonian_energy = -20.861098798114085, hamiltonian_energy_error = -0.029789434502898615, max_hamiltonian_energy_error = -0.2144367331924748, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9704849596392762, log_density = 23.465767238996758, hamiltonian_energy = -20.49830852736072, hamiltonian_energy_error = -0.15224531922750373, max_hamiltonian_energy_error = -0.15224531922750373, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8718992432823828, log_density = 21.936795792283768, hamiltonian_energy = -20.830213339244963, hamiltonian_energy_error = 0.14511466441652487, max_hamiltonian_energy_error = 0.20888683940412633, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9180082060347807, log_density = 20.551753342749397, hamiltonian_energy = -18.96906029538433, hamiltonian_energy_error = 0.11470188872833731, max_hamiltonian_energy_error = 0.1421062118036609, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9918126171109084, log_density = 22.839820066552466, hamiltonian_energy = -19.37172348041444, hamiltonian_energy_error = -0.27836269933976965, max_hamiltonian_energy_error = -0.27836269933976965, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9545146051774431, log_density = 21.21717626642868, hamiltonian_energy = -20.586345848310774, hamiltonian_energy_error = 0.013503511941479474, max_hamiltonian_energy_error = 0.12318921369148583, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6775158815765973, log_density = 19.986372231341896, hamiltonian_energy = -16.896787078123005, hamiltonian_energy_error = 0.40871919096492704, max_hamiltonian_energy_error = 0.707037116591799, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.995251736157053, log_density = 22.02942751938196, hamiltonian_energy = -19.03413613857805, hamiltonian_energy_error = -0.11404627165325465, max_hamiltonian_energy_error = -0.3236637399154958, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9900101129615869, log_density = 21.402351383199157, hamiltonian_energy = -19.59966335297916, hamiltonian_energy_error = -0.054900357561052715, max_hamiltonian_energy_error = -0.25404743058097523, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9114934539107072, log_density = 21.591664169849174, hamiltonian_energy = -18.057796842337027, hamiltonian_energy_error = 0.04826835631646276, max_hamiltonian_energy_error = 0.3131134833654201, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9428457548394501, log_density = 21.841923751720472, hamiltonian_energy = -20.21583512113614, hamiltonian_energy_error = -0.05080410429800608, max_hamiltonian_energy_error = -0.192764801958063, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9967524431875626, log_density = 22.417567576408118, hamiltonian_energy = -20.556740360875466, hamiltonian_energy_error = -0.10783228898689501, max_hamiltonian_energy_error = -0.18224149990284033, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9522491234684322, log_density = 21.563227411714273, hamiltonian_energy = -20.25621448653672, hamiltonian_energy_error = 0.03773979736384803, max_hamiltonian_energy_error = 0.09551591158722061, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9057715798199858, log_density = 21.851876832426342, hamiltonian_energy = -18.185547961899825, hamiltonian_energy_error = -0.07712891618328399, max_hamiltonian_energy_error = 0.3494863595704736, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9652260230498096, log_density = 22.53790768429174, hamiltonian_energy = -20.19757567975191, hamiltonian_energy_error = 0.037002904147186655, max_hamiltonian_energy_error = 0.0672195519401555, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.3927547223871849, log_density = 18.363092624417604, hamiltonian_energy = -16.822260651605895, hamiltonian_energy_error = 1.088749534025979, max_hamiltonian_energy_error = 1.409168892656787, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9883199797918195, log_density = 19.106396191354534, hamiltonian_energy = -15.500633368776084, hamiltonian_energy_error = -0.3536234647212897, max_hamiltonian_energy_error = -1.1301827664603508, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.842064096665686, log_density = 22.13435790729193, hamiltonian_energy = -15.267109626440355, hamiltonian_energy_error = -0.8179531790042596, max_hamiltonian_energy_error = -0.8179531790042596, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8421326584587937, log_density = 21.947157149565466, hamiltonian_energy = -19.885774995688113, hamiltonian_energy_error = 0.18546858256149434, max_hamiltonian_energy_error = 0.29621547922452507, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9993443072277486, log_density = 22.093964663651228, hamiltonian_energy = -20.963767861853864, hamiltonian_energy_error = -0.17393758257511394, max_hamiltonian_energy_error = -0.23186352698215984, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9855142051385555, log_density = 21.704967821782454, hamiltonian_energy = -20.422178695135496, hamiltonian_energy_error = 0.034444723247545994, max_hamiltonian_energy_error = 0.04760051647299335, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9383140688838114, log_density = 21.03961111976274, hamiltonian_energy = -19.091884644768392, hamiltonian_energy_error = 0.010608045638871744, max_hamiltonian_energy_error = 0.1838762651129926, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9566384332728848, log_density = 20.901329641216236, hamiltonian_energy = -19.12204872511689, hamiltonian_energy_error = 0.06545168668499457, max_hamiltonian_energy_error = 0.09913146145400731, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8550391598757442, log_density = 18.336288143162633, hamiltonian_energy = -15.832335285168682, hamiltonian_energy_error = 0.1750591911582191, max_hamiltonian_energy_error = 0.2327904275299577, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 22.420999884397293, hamiltonian_energy = -17.274488802190028, hamiltonian_energy_error = -0.2114674086986028, max_hamiltonian_energy_error = -0.2114674086986028, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8583457292455561, log_density = 21.820894074140714, hamiltonian_energy = -21.3348266321922, hamiltonian_energy_error = 0.20291485216611704, max_hamiltonian_energy_error = 0.2587006757077326, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9122551871052929, log_density = 22.088324046424265, hamiltonian_energy = -19.39791828094862, hamiltonian_energy_error = -0.04100562759990112, max_hamiltonian_energy_error = 0.28413893914931876, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8051899950206762, log_density = 20.0392000234801, hamiltonian_energy = -18.617326901664196, hamiltonian_energy_error = 0.31755265986438275, max_hamiltonian_energy_error = 0.5194740525487269, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9709132909282024, log_density = 16.52344201677054, hamiltonian_energy = -13.872742893350924, hamiltonian_energy_error = -0.10398644293397297, max_hamiltonian_energy_error = -0.7192698245297215, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 19.136254108963705, hamiltonian_energy = -16.205349173416685, hamiltonian_energy_error = -0.38943820163038545, max_hamiltonian_energy_error = -0.5700702151810777, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8946741824121813, log_density = 18.232058733635945, hamiltonian_energy = -15.769931716691962, hamiltonian_energy_error = 0.2137340645025123, max_hamiltonian_energy_error = 0.4666466574416859, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9011425686415813, log_density = 19.01132317666077, hamiltonian_energy = -15.00249544201266, hamiltonian_energy_error = 0.20447156503035124, max_hamiltonian_energy_error = 0.6002665173035542, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9880820965788928, log_density = 22.161379778050975, hamiltonian_energy = -17.641876827240182, hamiltonian_energy_error = -0.5264267129077105, max_hamiltonian_energy_error = -0.5264267129077105, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.95016008499348, log_density = 21.8652700781397, hamiltonian_energy = -20.085508846254, hamiltonian_energy_error = 0.07796861168743874, max_hamiltonian_energy_error = 0.17983619441819343, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8128589806198254, log_density = 19.952199663242368, hamiltonian_energy = -16.453589424027587, hamiltonian_energy_error = 0.24781003528287116, max_hamiltonian_energy_error = 0.4980421728109157, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9792662953871553, log_density = 20.504649337377245, hamiltonian_energy = -17.044041077587416, hamiltonian_energy_error = -1.0499985813662143, max_hamiltonian_energy_error = -1.0499985813662143, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9920948656278991, log_density = 22.00331373400536, hamiltonian_energy = -20.146186000676668, hamiltonian_energy_error = -0.04691658176725966, max_hamiltonian_energy_error = -0.12766052409599382, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9598963143399455, log_density = 22.359881843300293, hamiltonian_energy = -20.440333865780392, hamiltonian_energy_error = -0.09349418605869175, max_hamiltonian_energy_error = -0.16572506978029722, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8632570257440761, log_density = 21.338200072900527, hamiltonian_energy = -19.687709317902005, hamiltonian_energy_error = 0.19747876065184045, max_hamiltonian_energy_error = 0.19747876065184045, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9060728243184901, log_density = 20.629420747672334, hamiltonian_energy = -17.630588801090894, hamiltonian_energy_error = 0.24180298894013674, max_hamiltonian_energy_error = 0.24180298894013674, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 13, is_accept = true, acceptance_rate = 0.8411607901498876, log_density = 19.390226687719768, hamiltonian_energy = -15.553047056799395, hamiltonian_energy_error = 0.20266475892512226, max_hamiltonian_energy_error = 0.4497312271759295, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9130114199830219, log_density = 20.074236899964774, hamiltonian_energy = -17.019930689973837, hamiltonian_energy_error = -0.0700630917623215, max_hamiltonian_energy_error = 0.6379697147933427, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9466547059464289, log_density = 20.525519800984377, hamiltonian_energy = -16.73769996432782, hamiltonian_energy_error = -0.22725022672530315, max_hamiltonian_energy_error = -0.264622117786832, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9905429248901773, log_density = 21.34205202489494, hamiltonian_energy = -18.730457903344224, hamiltonian_energy_error = -0.029686621300768934, max_hamiltonian_energy_error = -0.3485215644654147, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9194665779736506, log_density = 21.59243273841506, hamiltonian_energy = -18.088752490947197, hamiltonian_energy_error = -0.25431054788929686, max_hamiltonian_energy_error = -0.3527534195633919, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9798691844215571, log_density = 21.47978154229946, hamiltonian_energy = -19.667244268865915, hamiltonian_energy_error = 0.015988139976663263, max_hamiltonian_energy_error = -0.18345531932712333, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9050281039857108, log_density = 20.129581415385026, hamiltonian_energy = -18.986258227759112, hamiltonian_energy_error = 0.30277785005654323, max_hamiltonian_energy_error = 0.30277785005654323, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8965645876347901, log_density = 19.948560504053642, hamiltonian_energy = -16.994280989790575, hamiltonian_energy_error = 0.03752714959104608, max_hamiltonian_energy_error = -0.48255627359775133, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9126234731314241, log_density = 21.018286167033672, hamiltonian_energy = -14.546770623813265, hamiltonian_energy_error = 0.01174963957906705, max_hamiltonian_energy_error = -0.8453779283338942, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.946421192467279, log_density = 22.563947366567167, hamiltonian_energy = -18.70906174859834, hamiltonian_energy_error = -0.1774303213910109, max_hamiltonian_energy_error = 0.25128656677130934, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8754837710732559, log_density = 22.481718947051125, hamiltonian_energy = -20.46151898916326, hamiltonian_energy_error = 0.052703295902933434, max_hamiltonian_energy_error = 0.2582574976705949, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9456158682959774, log_density = 22.419233978807952, hamiltonian_energy = -20.879984164916326, hamiltonian_energy_error = -0.008939213222330267, max_hamiltonian_energy_error = 0.16082636912906167, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9797267783775543, log_density = 21.751591878583326, hamiltonian_energy = -19.519153441384294, hamiltonian_energy_error = 0.06404518906655099, max_hamiltonian_energy_error = -0.13274020745777548, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5004474329263084, log_density = 19.003156401282794, hamiltonian_energy = -15.472344594678958, hamiltonian_energy_error = 0.8776787769001331, max_hamiltonian_energy_error = 0.8776787769001331, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.954600236570527, log_density = 19.675477871837863, hamiltonian_energy = -17.480969748069892, hamiltonian_energy_error = -0.15638107983748029, max_hamiltonian_energy_error = -0.5739188219493343, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9622403627812951, log_density = 20.455315301353757, hamiltonian_energy = -18.171629716271816, hamiltonian_energy_error = 0.06470579891482231, max_hamiltonian_energy_error = -0.25579809226144334, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9969781071898677, log_density = 20.921419278026796, hamiltonian_energy = -19.35048265004972, hamiltonian_energy_error = -0.15959993872763079, max_hamiltonian_energy_error = -0.32721293881885316, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9370857962897711, log_density = 19.331727894654545, hamiltonian_energy = -17.47922563481411, hamiltonian_energy_error = 0.03379576189634648, max_hamiltonian_energy_error = -0.19406350237143144, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9874832896639496, log_density = 22.946282678757434, hamiltonian_energy = -16.642655204672494, hamiltonian_energy_error = -0.25328795511555313, max_hamiltonian_energy_error = -0.25328795511555313, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9717752989265183, log_density = 22.422921828522654, hamiltonian_energy = -21.933013720072037, hamiltonian_energy_error = 0.049914958556833255, max_hamiltonian_energy_error = 0.059759611217003794, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9819097383369804, log_density = 22.845058764154448, hamiltonian_energy = -21.74456439559003, hamiltonian_energy_error = -0.016415056714269127, max_hamiltonian_energy_error = -0.11638477914125644, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.967086847092741, log_density = 21.573853908436337, hamiltonian_energy = -19.782677787157024, hamiltonian_energy_error = 0.013765527529404409, max_hamiltonian_energy_error = 0.07574369772428824, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9872569520969223, log_density = 22.729613253934833, hamiltonian_energy = -20.77756501761662, hamiltonian_energy_error = -0.017832263309628615, max_hamiltonian_energy_error = -0.048195809107109966, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9137390909455637, log_density = 21.694370895383045, hamiltonian_energy = -20.25944793629498, hamiltonian_energy_error = 0.11097815724460958, max_hamiltonian_energy_error = 0.1779485664474123, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8652646421090296, log_density = 20.278284419237004, hamiltonian_energy = -17.617245239538068, hamiltonian_energy_error = 0.15711737966008954, max_hamiltonian_energy_error = 0.27687713961339, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8660354651714165, log_density = 21.47107145673265, hamiltonian_energy = -17.30892669408047, hamiltonian_energy_error = -0.48370941872774864, max_hamiltonian_energy_error = 0.8308594578247792, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8841307613840216, log_density = 21.534655214936397, hamiltonian_energy = -19.057162548784554, hamiltonian_energy_error = 0.08195501775420411, max_hamiltonian_energy_error = 0.2816056682091421, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8072770574139991, log_density = 22.21237385695853, hamiltonian_energy = -17.577980124451976, hamiltonian_energy_error = -0.16443311548173156, max_hamiltonian_energy_error = 0.5034440736158743, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9712950078707393, log_density = 21.777193421495724, hamiltonian_energy = -20.199852468213827, hamiltonian_energy_error = 0.06772910995216108, max_hamiltonian_energy_error = 0.08792864273788936, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9967039258723124, log_density = 22.172995709317398, hamiltonian_energy = -20.57512049482599, hamiltonian_energy_error = -0.108915380228634, max_hamiltonian_energy_error = -0.12150270979871891, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.999628115383568, log_density = 23.352044872293376, hamiltonian_energy = -21.48653947778609, hamiltonian_energy_error = -0.06460298214339488, max_hamiltonian_energy_error = -0.06460298214339488, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9503335902322628, log_density = 22.918598322228803, hamiltonian_energy = -22.579864414720284, hamiltonian_energy_error = 0.04692768409399406, max_hamiltonian_energy_error = 0.08028470831207812, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9007765888587577, log_density = 22.05312175075995, hamiltonian_energy = -18.181805415621916, hamiltonian_energy_error = 0.08108975991026668, max_hamiltonian_energy_error = 0.1801880966180569, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 22.987582939567112, hamiltonian_energy = -21.916680821883432, hamiltonian_energy_error = -0.046838090888215334, max_hamiltonian_energy_error = -0.09545531713208177, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9035137793079071, log_density = 23.06551416557511, hamiltonian_energy = -21.746862995097587, hamiltonian_energy_error = 0.00607064218149489, max_hamiltonian_energy_error = 0.25286843523025127, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9300305390125797, log_density = 21.26772829242212, hamiltonian_energy = -20.626896292424593, hamiltonian_energy_error = 0.125794634187109, max_hamiltonian_energy_error = 0.16322063444084023, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9258808373313364, log_density = 21.146068799899048, hamiltonian_energy = -19.532122274294647, hamiltonian_energy_error = 0.14908363261158186, max_hamiltonian_energy_error = -0.33588608467486125, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9844406420208567, log_density = 22.22610600154364, hamiltonian_energy = -19.975391666336733, hamiltonian_energy_error = -0.2669434185901238, max_hamiltonian_energy_error = -0.48899738271713744, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.3410926964348368, log_density = 18.55107534567002, hamiltonian_energy = -13.681963289464974, hamiltonian_energy_error = 1.0729479776342465, max_hamiltonian_energy_error = 1.2600052727174784, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 21.531720080589423, hamiltonian_energy = -17.391138976550373, hamiltonian_energy_error = -0.4460000335984553, max_hamiltonian_energy_error = -0.6996420923061955, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9658402422525286, log_density = 20.5874313572456, hamiltonian_energy = -18.865912523786168, hamiltonian_energy_error = -0.02753523595102081, max_hamiltonian_energy_error = -0.1463818888302626, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9779509555890319, log_density = 21.616585416531223, hamiltonian_energy = -19.135768723035454, hamiltonian_energy_error = 0.03614797591602681, max_hamiltonian_energy_error = -0.14147850594128286, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.7547046459641344, log_density = 21.752229825398384, hamiltonian_energy = -15.521703022419413, hamiltonian_energy_error = -0.036738372128738206, max_hamiltonian_energy_error = 0.8104089654818996, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9763975595848363, log_density = 21.91087975932463, hamiltonian_energy = -20.06208507467519, hamiltonian_energy_error = -0.03826398145755405, max_hamiltonian_energy_error = 0.09878750699574468, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7639865407285773, log_density = 20.49157354215226, hamiltonian_energy = -17.33358091692866, hamiltonian_energy_error = 0.3497839291212159, max_hamiltonian_energy_error = 0.5197263398526886, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9755611938483203, log_density = 21.323198749241197, hamiltonian_energy = -18.212758487727275, hamiltonian_energy_error = -0.09558529504077029, max_hamiltonian_energy_error = -0.22512265557817912, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9897252590802573, log_density = 21.51492887077837, hamiltonian_energy = -20.307826749760242, hamiltonian_energy_error = -0.10803926259054109, max_hamiltonian_energy_error = -0.11228668964435684, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8963033878555965, log_density = 20.865596970116, hamiltonian_energy = -18.953417994694014, hamiltonian_energy_error = 0.10041975322350538, max_hamiltonian_energy_error = -0.5176618309634549, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9832009312073041, log_density = 22.398442282836193, hamiltonian_energy = -19.993410878619574, hamiltonian_energy_error = -0.18553304309377694, max_hamiltonian_energy_error = -0.18553304309377694, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5372263609738493, log_density = 17.439314969297296, hamiltonian_energy = -15.4326876070925, hamiltonian_energy_error = 0.6705108267127962, max_hamiltonian_energy_error = 0.9541297095695747, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 19.35791372964148, hamiltonian_energy = -15.946845383458975, hamiltonian_energy_error = -0.3354636821657344, max_hamiltonian_energy_error = -0.4384179688263785, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9930249592467385, log_density = 19.139430485403707, hamiltonian_energy = -17.506819791492777, hamiltonian_energy_error = 0.007558203165579869, max_hamiltonian_energy_error = -0.15682434077823615, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9766560257521767, log_density = 21.031348778557334, hamiltonian_energy = -16.490495480778048, hamiltonian_energy_error = -0.031245891680288906, max_hamiltonian_energy_error = 0.08507594285617515, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9672735024551683, log_density = 19.256211438709812, hamiltonian_energy = -17.904391754516556, hamiltonian_energy_error = -0.00687112769929854, max_hamiltonian_energy_error = 0.10913219607424551, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 22.515445149192153, hamiltonian_energy = -18.383464081529226, hamiltonian_energy_error = -0.10992124519248847, max_hamiltonian_energy_error = -0.13920159231935259, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.954885061848368, log_density = 22.081507269938676, hamiltonian_energy = -20.967632014869658, hamiltonian_energy_error = 0.07712692496511053, max_hamiltonian_energy_error = 0.08907998214507629, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7424131266508545, log_density = 19.977622373469263, hamiltonian_energy = -18.308197564991968, hamiltonian_energy_error = -0.011567556081608643, max_hamiltonian_energy_error = 0.7722302688476894, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9455807120102843, log_density = 20.182588984550552, hamiltonian_energy = -18.240499723240763, hamiltonian_energy_error = -0.03348755300931927, max_hamiltonian_energy_error = 0.2471298667834425, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9897456597718904, log_density = 19.437348106895755, hamiltonian_energy = -18.83650825432297, hamiltonian_energy_error = 0.059815836103663145, max_hamiltonian_energy_error = -0.2400567613893685, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8792136633620622, log_density = 21.523386739866815, hamiltonian_energy = -14.300473454022441, hamiltonian_energy_error = -0.39094823701338655, max_hamiltonian_energy_error = -0.508376809758941, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.99668069680862, log_density = 22.951657251381945, hamiltonian_energy = -21.03522298001937, hamiltonian_energy_error = -0.04710329491725318, max_hamiltonian_energy_error = -0.13639013412192824, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9792942917389633, log_density = 23.20287763909326, hamiltonian_energy = -21.376899107041783, hamiltonian_energy_error = -0.020100843079696062, max_hamiltonian_energy_error = 0.056225965698086355, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9299787493844068, log_density = 21.90120353313941, hamiltonian_energy = -20.127977683888382, hamiltonian_energy_error = 0.050864532684791186, max_hamiltonian_energy_error = 0.115874141104932, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8902903930374734, log_density = 22.843532744564833, hamiltonian_energy = -19.48160044359119, hamiltonian_energy_error = -0.02276242138258766, max_hamiltonian_energy_error = 0.29667821510315306, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8202310797046766, log_density = 20.836412896697773, hamiltonian_energy = -19.634628687426055, hamiltonian_energy_error = 0.41660581100292404, max_hamiltonian_energy_error = 0.41660581100292404, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9802305170865899, log_density = 22.271386950833655, hamiltonian_energy = -20.272588283116463, hamiltonian_energy_error = -0.1511141652777681, max_hamiltonian_energy_error = -0.4369925070061065, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9878146101447509, log_density = 23.09386303697682, hamiltonian_energy = -21.877203781611104, hamiltonian_energy_error = -0.28840837904678907, max_hamiltonian_energy_error = -0.28840837904678907, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7455606591579884, log_density = 20.56603089957737, hamiltonian_energy = -18.920883525091618, hamiltonian_energy_error = 0.3026936936274218, max_hamiltonian_energy_error = 0.4256439916519241, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9810654142891503, log_density = 19.711805147253074, hamiltonian_energy = -18.104137770138625, hamiltonian_energy_error = 0.05789875684245871, max_hamiltonian_energy_error = -0.18987597292989733, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9187413299288476, log_density = 22.56183864421972, hamiltonian_energy = -18.32335972111706, hamiltonian_energy_error = -0.1330642137431326, max_hamiltonian_energy_error = 0.31805781396522903, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9279105721794313, log_density = 21.717543437603958, hamiltonian_energy = -20.991981006499742, hamiltonian_energy_error = -0.02255394339100647, max_hamiltonian_energy_error = 0.2436885154879178, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8033279411005745, log_density = 22.050716000163618, hamiltonian_energy = -17.18031416154775, hamiltonian_energy_error = 0.04186413310402415, max_hamiltonian_energy_error = 0.37497775625685037, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8503343878414479, log_density = 20.576121055323668, hamiltonian_energy = -17.959573946579404, hamiltonian_energy_error = 0.2842181304662006, max_hamiltonian_energy_error = 0.2842181304662006, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9972771575040414, log_density = 21.030238558021342, hamiltonian_energy = -19.799219292630166, hamiltonian_energy_error = -0.08637223942007566, max_hamiltonian_energy_error = -0.2844803651950727, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5545858056735985, log_density = 17.216239338584106, hamiltonian_energy = -13.575572398277242, hamiltonian_energy_error = 0.7826553654111414, max_hamiltonian_energy_error = 1.3620355919097733, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9855677882505312, log_density = 17.61236749277053, hamiltonian_energy = -15.161555431905978, hamiltonian_energy_error = -0.06819463196131892, max_hamiltonian_energy_error = -0.7407254566305195, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 21.420184300259848, hamiltonian_energy = -17.51421044461247, hamiltonian_energy_error = -0.5634283346226496, max_hamiltonian_energy_error = -0.5634283346226496, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9363242033286262, log_density = 22.611877951215867, hamiltonian_energy = -19.33906988417402, hamiltonian_energy_error = -0.11657604979031788, max_hamiltonian_energy_error = 0.16878405852797584, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9672776235755716, log_density = 22.48665047880849, hamiltonian_energy = -21.291128122830653, hamiltonian_energy_error = -0.030729559088158, max_hamiltonian_energy_error = 0.07052769851539509, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9514867648902293, log_density = 23.00126179373209, hamiltonian_energy = -19.831643464107874, hamiltonian_energy_error = 0.047421304311516366, max_hamiltonian_energy_error = 0.12021372010778464, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9546780775023603, log_density = 19.774303087341433, hamiltonian_energy = -19.005905636290866, hamiltonian_energy_error = 0.05609723207582107, max_hamiltonian_energy_error = 0.10328540018122467, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9753588668415342, log_density = 19.862846808265004, hamiltonian_energy = -17.35655665037215, hamiltonian_energy_error = -0.4030589650710432, max_hamiltonian_energy_error = -0.46024702751692814, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9917185266350962, log_density = 21.229160019689886, hamiltonian_energy = -19.02621884436245, hamiltonian_energy_error = -0.04946415899871326, max_hamiltonian_energy_error = -0.10725097621072166, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9690900971658165, log_density = 22.027844570320873, hamiltonian_energy = -19.68496726751655, hamiltonian_energy_error = -0.04023465332113929, max_hamiltonian_energy_error = 0.09876777671712844, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9618997456353892, log_density = 20.431323801554704, hamiltonian_energy = -18.725655927530525, hamiltonian_energy_error = 0.09819002389711784, max_hamiltonian_energy_error = 0.13058116047176682, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9095889190100731, log_density = 20.842062976911176, hamiltonian_energy = -16.575435925392657, hamiltonian_energy_error = 0.12358988890333222, max_hamiltonian_energy_error = 0.2316356113950242, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9821651907014972, log_density = 22.471305548271538, hamiltonian_energy = -19.20517880916804, hamiltonian_energy_error = -0.22447831641634153, max_hamiltonian_energy_error = -0.3257338908671663, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9835609474389414, log_density = 22.33386771769909, hamiltonian_energy = -21.253366400102927, hamiltonian_energy_error = 0.0323620308516972, max_hamiltonian_energy_error = -0.06755559419762491, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9634096818272856, log_density = 22.83977192980842, hamiltonian_energy = -20.00305000567068, hamiltonian_energy_error = -0.0526641605313678, max_hamiltonian_energy_error = -0.18250254130853705, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9182027682609627, log_density = 22.327416169856427, hamiltonian_energy = -20.197975549412703, hamiltonian_energy_error = -0.010283439703243857, max_hamiltonian_energy_error = 0.21316658409643097, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 22.91238434004454, hamiltonian_energy = -22.22195556243934, hamiltonian_energy_error = -0.06908726616233096, max_hamiltonian_energy_error = -0.0888445995985343, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9218362024809371, log_density = 22.718261640775147, hamiltonian_energy = -21.491689192225884, hamiltonian_energy_error = -0.019084750325401245, max_hamiltonian_energy_error = 0.24066645005828136, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.4527751388630231, log_density = 18.822590731549653, hamiltonian_energy = -17.63211017294422, hamiltonian_energy_error = 1.2138805390050607, max_hamiltonian_energy_error = 1.2226223513160086, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9608119134151265, log_density = 22.830229923908455, hamiltonian_energy = -17.435215116871024, hamiltonian_energy_error = -0.6962875343604829, max_hamiltonian_energy_error = -0.6962875343604829, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8184429741072409, log_density = 19.177070767299494, hamiltonian_energy = -19.047491831493325, hamiltonian_energy_error = 0.6167055540223956, max_hamiltonian_energy_error = 0.6167055540223956, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8293692476117472, log_density = 15.32392116464124, hamiltonian_energy = -14.311317844033747, hamiltonian_energy_error = 0.7172191129998549, max_hamiltonian_energy_error = 0.7172191129998549, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 17.895351412766637, hamiltonian_energy = -14.961333065669193, hamiltonian_energy_error = -0.47341241361263897, max_hamiltonian_energy_error = -1.2671332826809394, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9593831140636786, log_density = 21.569474482095135, hamiltonian_energy = -15.415877595932972, hamiltonian_energy_error = -0.5978028917667064, max_hamiltonian_energy_error = -0.6366430906142266, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9914738670359469, log_density = 21.098310369641254, hamiltonian_energy = -19.6231401972321, hamiltonian_energy_error = -0.04363170732966992, max_hamiltonian_energy_error = -0.13813997744607676, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9268319869879397, log_density = 20.11453589183182, hamiltonian_energy = -19.362407032716618, hamiltonian_energy_error = 0.03539487268729857, max_hamiltonian_energy_error = 0.2165433402725796, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9963581553442141, log_density = 21.75740343977548, hamiltonian_energy = -17.36852160901462, hamiltonian_energy_error = -0.07927089445817259, max_hamiltonian_energy_error = -0.18220408037080205, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9671566733903726, log_density = 22.659565501767585, hamiltonian_energy = -19.49316318717992, hamiltonian_energy_error = -0.06998648652636419, max_hamiltonian_energy_error = 0.1076544160381907, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9222559613461944, log_density = 21.861787394733376, hamiltonian_energy = -20.057859638129273, hamiltonian_energy_error = 0.039665421758584785, max_hamiltonian_energy_error = 0.16325417143801246, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9339830174435029, log_density = 18.043761978128423, hamiltonian_energy = -15.404135094175821, hamiltonian_energy_error = 0.005152802297452297, max_hamiltonian_energy_error = 0.20933101706439672, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8144925710439515, log_density = 22.502733963971515, hamiltonian_energy = -15.011179362617048, hamiltonian_energy_error = -0.3784383058512901, max_hamiltonian_energy_error = 0.4333583712411606, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9642114422576751, log_density = 21.431449226418263, hamiltonian_energy = -20.488457324110968, hamiltonian_energy_error = 0.06695723406430076, max_hamiltonian_energy_error = 0.08370679112383073, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9560228421724529, log_density = 22.780870305140276, hamiltonian_energy = -20.867931251771044, hamiltonian_energy_error = 0.049966063550684225, max_hamiltonian_energy_error = 0.13324290492898783, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.966947546722132, log_density = 21.857682856068045, hamiltonian_energy = -20.99639765894876, hamiltonian_energy_error = 0.016605091959050355, max_hamiltonian_energy_error = -0.13553965726744366, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9642297529929383, log_density = 23.387172693473282, hamiltonian_energy = -20.72316492767268, hamiltonian_energy_error = -0.08475065110394198, max_hamiltonian_energy_error = 0.09169626599155123, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.3959336740594319, log_density = 18.306566983655244, hamiltonian_energy = -17.483169610945676, hamiltonian_energy_error = 0.9303831830944844, max_hamiltonian_energy_error = 0.9928294926907206, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.976697372270165, log_density = 20.761670181785576, hamiltonian_energy = -16.204451756727018, hamiltonian_energy_error = -0.27026327489577184, max_hamiltonian_energy_error = -0.7611335558838483, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8791399698501114, log_density = 22.448684523196995, hamiltonian_energy = -17.872294472987463, hamiltonian_energy_error = -0.14068886043908435, max_hamiltonian_energy_error = 0.314532334682589, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8610492407556263, log_density = 18.982439581392846, hamiltonian_energy = -15.529854003853336, hamiltonian_energy_error = 0.22507152961547305, max_hamiltonian_energy_error = 0.5082171202006531, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 23.072793295959144, hamiltonian_energy = -18.6947728488839, hamiltonian_energy_error = -0.3083155452108137, max_hamiltonian_energy_error = -0.3083155452108137, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9151217668951122, log_density = 22.288627804610485, hamiltonian_energy = -21.785131674741027, hamiltonian_energy_error = 0.11395161925348063, max_hamiltonian_energy_error = 0.21468416116385214, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9668314168115539, log_density = 22.071309734754124, hamiltonian_energy = -21.19906039514227, hamiltonian_energy_error = 0.024558303949099525, max_hamiltonian_energy_error = -0.20430589629918217, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8383731868890697, log_density = 20.9156344394352, hamiltonian_energy = -20.338900526055397, hamiltonian_energy_error = 0.2874758926153689, max_hamiltonian_energy_error = 0.43295923870902797, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9189531914396214, log_density = 18.54799535462163, hamiltonian_energy = -17.345945849727315, hamiltonian_energy_error = 0.23012130157078303, max_hamiltonian_energy_error = 0.5448798004572879, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8609670765209853, log_density = 17.76667798459521, hamiltonian_energy = -13.047032980032785, hamiltonian_energy_error = 0.07409695261883442, max_hamiltonian_energy_error = -1.2143044952847113, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 1.0, log_density = 21.928650064806973, hamiltonian_energy = -17.591388478528472, hamiltonian_energy_error = -0.7703567259744943, max_hamiltonian_energy_error = -1.1569477225833644, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9975679638842737, log_density = 20.871207836354312, hamiltonian_energy = -19.57110773995908, hamiltonian_energy_error = 0.029881516068890335, max_hamiltonian_energy_error = -0.09816602098954164, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.4642849911949237, log_density = 19.392828379688954, hamiltonian_energy = -16.613520347072424, hamiltonian_energy_error = 0.9570313500910821, max_hamiltonian_energy_error = 1.755724408073993, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 19.569105435666422, hamiltonian_energy = -17.887031566516313, hamiltonian_energy_error = -0.32849638043159146, max_hamiltonian_energy_error = -0.9263801804214857, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 22.66652256241934, hamiltonian_energy = -19.594921918297885, hamiltonian_energy_error = -0.645013167089779, max_hamiltonian_energy_error = -0.645013167089779, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8456006491092102, log_density = 22.174030754789506, hamiltonian_energy = -19.72996570465522, hamiltonian_energy_error = 0.04575271567905759, max_hamiltonian_energy_error = 0.36451854051205146, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9015709435476638, log_density = 20.987915337321034, hamiltonian_energy = -19.710215310210614, hamiltonian_energy_error = 0.15649495034355354, max_hamiltonian_energy_error = 0.23559885432709748, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9912282578794565, log_density = 20.20759726611154, hamiltonian_energy = -18.71243757529129, hamiltonian_energy_error = -0.0777662200500302, max_hamiltonian_energy_error = -0.2691096759522864, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9975383154011506, log_density = 22.50608525274037, hamiltonian_energy = -19.20687809221784, hamiltonian_energy_error = -0.12776329665621589, max_hamiltonian_energy_error = -0.153175315529559, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9559273920673413, log_density = 22.84996324237879, hamiltonian_energy = -20.220948396214737, hamiltonian_energy_error = -0.02789957237532903, max_hamiltonian_energy_error = 0.12295538615881085, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.942520045240048, log_density = 20.72341463257654, hamiltonian_energy = -19.651515729298964, hamiltonian_energy_error = 0.029951778566768894, max_hamiltonian_energy_error = 0.10863694129502477, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8867487441051443, log_density = 21.546775624668385, hamiltonian_energy = -17.79046543017937, hamiltonian_energy_error = 0.028615284938620533, max_hamiltonian_energy_error = 0.28973871933248674, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.965316054140716, log_density = 21.58819768323688, hamiltonian_energy = -16.91775877111041, hamiltonian_energy_error = -0.03188668740619249, max_hamiltonian_energy_error = -0.10723056979087531, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7879516966041791, log_density = 20.257636414929806, hamiltonian_energy = -17.961308262779585, hamiltonian_energy_error = 0.2202120114401822, max_hamiltonian_energy_error = 0.5509589540564548, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8369686743525643, log_density = 17.746370480604103, hamiltonian_energy = -16.766022599921804, hamiltonian_energy_error = 0.31644461191514495, max_hamiltonian_energy_error = 0.31644461191514495, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9077664843842955, log_density = 17.63348078207041, hamiltonian_energy = -13.345626166291058, hamiltonian_energy_error = 0.3744550899756476, max_hamiltonian_energy_error = 0.6513914639056733, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9347133646704963, log_density = 17.473264490296152, hamiltonian_energy = -13.572127015418651, hamiltonian_energy_error = -0.014583839158598622, max_hamiltonian_energy_error = -0.9271107918135773, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 21.712097254000792, hamiltonian_energy = -17.450945461993303, hamiltonian_energy_error = -0.7688563548710121, max_hamiltonian_energy_error = -0.7688563548710121, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9656821738068968, log_density = 22.269793299670482, hamiltonian_energy = -19.031370805293516, hamiltonian_energy_error = -0.3101744281209555, max_hamiltonian_energy_error = -0.3101744281209555, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7751617620757251, log_density = 19.197556446546805, hamiltonian_energy = -18.347874222616504, hamiltonian_energy_error = 0.38453784182023654, max_hamiltonian_energy_error = 0.38453784182023654, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9568680736995819, log_density = 20.504292282116133, hamiltonian_energy = -18.022371605024418, hamiltonian_energy_error = -0.12788783636828072, max_hamiltonian_energy_error = -0.44754562359996797, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9593486829100402, log_density = 21.998074397371358, hamiltonian_energy = -18.678128167925976, hamiltonian_energy_error = -0.060286322458150465, max_hamiltonian_energy_error = -0.13216767478900593, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9798441012349992, log_density = 21.214737847459883, hamiltonian_energy = -19.646103739000985, hamiltonian_energy_error = -0.04426324136413484, max_hamiltonian_energy_error = -0.12488708608034926, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9670930228554868, log_density = 22.156962294865778, hamiltonian_energy = -19.89938283568087, hamiltonian_energy_error = 0.0303431181140148, max_hamiltonian_energy_error = 0.12783796674638026, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9617565899317196, log_density = 21.964342159837486, hamiltonian_energy = -20.518292202387777, hamiltonian_energy_error = 0.029438811703819567, max_hamiltonian_energy_error = 0.13158396914302983, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9735699817109794, log_density = 22.10323986473913, hamiltonian_energy = -20.144577187589523, hamiltonian_energy_error = -0.05040259853546658, max_hamiltonian_energy_error = -0.14950123843779295, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7528487227516981, log_density = 21.173912304328134, hamiltonian_energy = -18.531741054448794, hamiltonian_energy_error = 0.12693266654005697, max_hamiltonian_energy_error = 0.6550765347658256, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9903795420476997, log_density = 22.594020135467318, hamiltonian_energy = -19.517433540864467, hamiltonian_energy_error = -0.14335978014426587, max_hamiltonian_energy_error = -0.21987750633249803, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9471781321651727, log_density = 22.42019066097471, hamiltonian_energy = -21.180550412323896, hamiltonian_energy_error = -0.1272395944671807, max_hamiltonian_energy_error = 0.14335021444675888, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9915411318566488, log_density = 22.624169706660602, hamiltonian_energy = -21.8338989590897, hamiltonian_energy_error = -0.025101236956253103, max_hamiltonian_energy_error = 0.030402046607513, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8385065320061182, log_density = 21.14035189648341, hamiltonian_energy = -20.61015825511538, hamiltonian_energy_error = 0.2615986882032715, max_hamiltonian_energy_error = 0.2626563206610726, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8765145667029113, log_density = 21.061988767693627, hamiltonian_energy = -17.555343781358207, hamiltonian_energy_error = 0.20321499860129677, max_hamiltonian_energy_error = 0.27922768457466773, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9650149911557507, log_density = 19.077920345227703, hamiltonian_energy = -16.166918027623858, hamiltonian_energy_error = -0.0828091933545565, max_hamiltonian_energy_error = -0.30199987925182015, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5656398071809251, log_density = 21.216143044733613, hamiltonian_energy = -15.20667467744035, hamiltonian_energy_error = 0.4177260733545083, max_hamiltonian_energy_error = 0.7924031109947691, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9631438378669234, log_density = 21.22945334946655, hamiltonian_energy = -19.659385574262426, hamiltonian_energy_error = -0.04310880496803904, max_hamiltonian_energy_error = -0.21108456914502938, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9772455929780044, log_density = 22.20304440104713, hamiltonian_energy = -20.210405370330193, hamiltonian_energy_error = -0.07674711156908387, max_hamiltonian_energy_error = -0.25878073143348246, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9445187457540307, log_density = 20.96355097637613, hamiltonian_energy = -19.88601868766905, hamiltonian_energy_error = 0.15052523308171928, max_hamiltonian_energy_error = 0.16531831189084656, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.99052864753958, log_density = 21.03329329568542, hamiltonian_energy = -19.119770002877896, hamiltonian_energy_error = 0.07560667497914153, max_hamiltonian_energy_error = -0.3557948367711532, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9460422011674807, log_density = 20.055065727957704, hamiltonian_energy = -14.710681326192066, hamiltonian_energy_error = 0.11173753857788071, max_hamiltonian_energy_error = -0.2821830961487173, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 22.1199920809941, hamiltonian_energy = -18.72301935016244, hamiltonian_energy_error = -0.24344327504108065, max_hamiltonian_energy_error = -0.49463543151242106, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 23.142864185572513, hamiltonian_energy = -21.9168688446512, hamiltonian_energy_error = -0.20802496417945093, max_hamiltonian_energy_error = -0.20802496417945093, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.692790037150061, log_density = 17.919891261702137, hamiltonian_energy = -15.956054316849574, hamiltonian_energy_error = 0.3773112557864309, max_hamiltonian_energy_error = 0.6414823150135796, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.945649298632903, log_density = 21.172462408610393, hamiltonian_energy = -16.608296294778604, hamiltonian_energy_error = -0.5854437440822231, max_hamiltonian_energy_error = -0.5854437440822231, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.2889672074762854, log_density = 20.236919993832878, hamiltonian_energy = -16.268862352872414, hamiltonian_energy_error = 0.5024040146064443, max_hamiltonian_energy_error = 2.1711393603266202, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9946515042395833, log_density = 20.391471151633915, hamiltonian_energy = -18.79732453486714, hamiltonian_energy_error = -0.22982349065611984, max_hamiltonian_energy_error = -0.35256777528861605, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9988303019270566, log_density = 21.508436761551472, hamiltonian_energy = -17.87488021591593, hamiltonian_energy_error = -0.003442853806905788, max_hamiltonian_energy_error = -0.13597651783154419, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8258350282226761, log_density = 19.259889042150718, hamiltonian_energy = -16.38018329055482, hamiltonian_energy_error = 0.3132389772490676, max_hamiltonian_energy_error = 0.4709666604250593, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9949024548342718, log_density = 20.84272601077486, hamiltonian_energy = -18.653856132684794, hamiltonian_energy_error = 0.013804029923623062, max_hamiltonian_energy_error = -0.3866060731730663, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9596953849443249, log_density = 22.345680899929047, hamiltonian_energy = -17.635983002044416, hamiltonian_energy_error = -0.42820615883637814, max_hamiltonian_energy_error = -0.42820615883637814, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9629186581761886, log_density = 21.701467187873167, hamiltonian_energy = -21.14325844094733, hamiltonian_energy_error = 0.06923363368220237, max_hamiltonian_energy_error = 0.23479360373666935, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6830111746210161, log_density = 19.18215217705159, hamiltonian_energy = -17.33969671970738, hamiltonian_energy_error = 0.45218079314001614, max_hamiltonian_energy_error = 0.5984251554267637, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9805845620548431, log_density = 22.221822648544293, hamiltonian_energy = -15.25914722944388, hamiltonian_energy_error = -0.2785042857760107, max_hamiltonian_energy_error = -0.3004738594298537, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8849756112921414, log_density = 22.51910174862214, hamiltonian_energy = -21.422732792947517, hamiltonian_energy_error = 0.08091683913578862, max_hamiltonian_energy_error = 0.20571879167739482, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9863849112934256, log_density = 22.517861845621916, hamiltonian_energy = -21.76830582628905, hamiltonian_energy_error = 0.011570177096384526, max_hamiltonian_energy_error = -0.07154246869478342, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8608075385712236, log_density = 19.978764527208572, hamiltonian_energy = -19.163337360405485, hamiltonian_energy_error = 0.268947977935742, max_hamiltonian_energy_error = 0.268947977935742, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9559189590928985, log_density = 19.926117867116684, hamiltonian_energy = -17.616791522156028, hamiltonian_energy_error = 0.02700847521484917, max_hamiltonian_energy_error = -0.5943911445578891, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9825494068113317, log_density = 20.0640477493393, hamiltonian_energy = -17.6195741719351, hamiltonian_energy_error = -0.010929468147207189, max_hamiltonian_energy_error = -0.5712660928064928, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9261455922967385, log_density = 22.23674216073862, hamiltonian_energy = -17.318751191739175, hamiltonian_energy_error = -0.3702955781730992, max_hamiltonian_energy_error = -0.7271016081013606, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9297223413107039, log_density = 21.556000164871676, hamiltonian_energy = -20.137820763413742, hamiltonian_energy_error = 0.06331605174510457, max_hamiltonian_energy_error = 0.1772732217184796, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7993717480729885, log_density = 19.67045257548714, hamiltonian_energy = -18.022027421400075, hamiltonian_energy_error = 0.3825620389952462, max_hamiltonian_energy_error = 0.4147916691242237, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 19.21753085883312, hamiltonian_energy = -18.526190399525763, hamiltonian_energy_error = -0.07481092822098034, max_hamiltonian_energy_error = -0.4553341277823151, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9093831022389619, log_density = 17.20003748313313, hamiltonian_energy = -14.980077723248243, hamiltonian_energy_error = 0.30639863519626154, max_hamiltonian_energy_error = -0.3166624649226808, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8508440865129127, log_density = 19.983068586858693, hamiltonian_energy = -15.005953917839335, hamiltonian_energy_error = 0.11265469988320476, max_hamiltonian_energy_error = -1.0753085313178232, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9997886924264267, log_density = 19.75305059545124, hamiltonian_energy = -17.119523362301674, hamiltonian_energy_error = -0.23138195257216765, max_hamiltonian_energy_error = -0.3748709357554283, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9079011529184632, log_density = 20.08963749476137, hamiltonian_energy = -17.30371384796738, hamiltonian_energy_error = -0.1383101123626318, max_hamiltonian_energy_error = 0.2777317526076466, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.826150150975299, log_density = 13.975156486254146, hamiltonian_energy = -13.402452975503625, hamiltonian_energy_error = 0.5392809034357207, max_hamiltonian_energy_error = 0.5392809034357207, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 16.25266742158903, hamiltonian_energy = -12.82076515512253, hamiltonian_energy_error = -0.19724257930569955, max_hamiltonian_energy_error = -0.5049834696558033, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9923976523551149, log_density = 17.557948387048505, hamiltonian_energy = -13.716388483367592, hamiltonian_energy_error = -0.04281313419172328, max_hamiltonian_energy_error = -0.272716505850628, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9593525054829508, log_density = 19.764906908886765, hamiltonian_energy = -13.944301618465916, hamiltonian_energy_error = -0.09138675851274236, max_hamiltonian_energy_error = 0.40345131623868014, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9812565312502598, log_density = 21.41671686952256, hamiltonian_energy = -19.0084200529287, hamiltonian_energy_error = -0.17568150352548528, max_hamiltonian_energy_error = -0.2176633966591659, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9354580930541013, log_density = 21.799220914340815, hamiltonian_energy = -19.755312506472333, hamiltonian_energy_error = 0.05620128630595289, max_hamiltonian_energy_error = 0.18575468429241226, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8099343837335625, log_density = 18.06046292263776, hamiltonian_energy = -16.486292533799983, hamiltonian_energy_error = 0.337966250300461, max_hamiltonian_energy_error = 0.5011311105856997, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9473005425407115, log_density = 20.229753618172076, hamiltonian_energy = -13.199079872173595, hamiltonian_energy_error = -0.10387427424816664, max_hamiltonian_energy_error = -0.45123335504253426, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8289771838275722, log_density = 19.203780862641857, hamiltonian_energy = -17.489820786094118, hamiltonian_energy_error = 0.3467051945340138, max_hamiltonian_energy_error = -0.7649085983842276, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9611769247694381, log_density = 19.138502207708218, hamiltonian_energy = -16.678180531408717, hamiltonian_energy_error = 0.23721683287631734, max_hamiltonian_energy_error = -0.512316548801877, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9842704864773271, log_density = 20.01253588831393, hamiltonian_energy = -17.126075754931673, hamiltonian_energy_error = 0.09771125258514601, max_hamiltonian_energy_error = -0.48382731760061404, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9873312351373844, log_density = 22.329163415492516, hamiltonian_energy = -16.72204305399589, hamiltonian_energy_error = -0.46357517395808046, max_hamiltonian_energy_error = -0.5292401620900478, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7585491094997376, log_density = 20.435081836835064, hamiltonian_energy = -18.785594718110566, hamiltonian_energy_error = 0.2512143056537077, max_hamiltonian_energy_error = 0.45817169482231535, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9241108951332367, log_density = 19.142025582339233, hamiltonian_energy = -17.781552345219225, hamiltonian_energy_error = 0.21638482810062598, max_hamiltonian_energy_error = -0.2969989421175221, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9909697702940109, log_density = 22.24076274950654, hamiltonian_energy = -18.31907071329925, hamiltonian_energy_error = -0.3099200009268017, max_hamiltonian_energy_error = -0.5129899547194334, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9419870525567152, log_density = 21.30381672594477, hamiltonian_energy = -19.673117132103197, hamiltonian_energy_error = 0.017595345232987114, max_hamiltonian_energy_error = 0.1581578799017933, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.928928110657734, log_density = 17.586517985471353, hamiltonian_energy = -16.183904921515374, hamiltonian_energy_error = 0.0727270116427654, max_hamiltonian_energy_error = -0.25708345908600094, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9010073498047355, log_density = 17.15540201117881, hamiltonian_energy = -15.019471393337893, hamiltonian_energy_error = -0.09066548112938655, max_hamiltonian_energy_error = -0.2956819129301884, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9236079435901176, log_density = 18.77177820846165, hamiltonian_energy = -13.945446754267977, hamiltonian_energy_error = 0.13732984452629005, max_hamiltonian_energy_error = 0.17288114147450884, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 19.864971659022345, hamiltonian_energy = -18.08344954474022, hamiltonian_energy_error = -0.12426901011502167, max_hamiltonian_energy_error = -0.3029390219301469, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9253865901660673, log_density = 22.30672540617219, hamiltonian_energy = -17.538820092147382, hamiltonian_energy_error = 0.00017983553588862833, max_hamiltonian_energy_error = 0.19650268053140962, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9380712729160873, log_density = 22.625258073965856, hamiltonian_energy = -19.579398622108886, hamiltonian_energy_error = -0.24407799167734723, max_hamiltonian_energy_error = -0.24407799167734723, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 13, is_accept = true, acceptance_rate = 0.8297235825954895, log_density = 22.18522789492487, hamiltonian_energy = -20.50700271820327, hamiltonian_energy_error = 0.1916440588932069, max_hamiltonian_energy_error = 0.30721960706579665, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9773603817495761, log_density = 22.864620727483185, hamiltonian_energy = -21.306130602754823, hamiltonian_energy_error = -0.09399415999358496, max_hamiltonian_energy_error = -0.2993011589980803, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9324185098427601, log_density = 20.681864694641018, hamiltonian_energy = -18.51981370762806, hamiltonian_energy_error = 0.11759938455958974, max_hamiltonian_energy_error = 0.22014767702092541, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9858299544934697, log_density = 16.323826517567497, hamiltonian_energy = -13.921524414437997, hamiltonian_energy_error = 0.06505430332307505, max_hamiltonian_energy_error = -0.40771599195458563, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9786935801590417, log_density = 19.327893521695703, hamiltonian_energy = -14.304424424440914, hamiltonian_energy_error = 0.12423490208497867, max_hamiltonian_energy_error = -0.2814754231298586, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8853298505626136, log_density = 17.59882908075511, hamiltonian_energy = -16.464462238704144, hamiltonian_energy_error = 0.1654096014590678, max_hamiltonian_energy_error = 0.16596840509845734, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 21.26223862283127, hamiltonian_energy = -16.35229074801566, hamiltonian_energy_error = -0.12837574280478492, max_hamiltonian_energy_error = -0.3280779392917381, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.997655448530883, log_density = 21.229421392913757, hamiltonian_energy = -20.18082273073509, hamiltonian_energy_error = 0.007035975757965218, max_hamiltonian_energy_error = -0.07500673889214937, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9806026374913647, log_density = 20.58896914730523, hamiltonian_energy = -20.310871756417626, hamiltonian_energy_error = -0.0077518662205982025, max_hamiltonian_energy_error = 0.03661243207835341, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8628042946059363, log_density = 18.322304318523408, hamiltonian_energy = -15.73644804659048, hamiltonian_energy_error = 0.21258769269148559, max_hamiltonian_energy_error = 0.29335649579667056, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9040519908139183, log_density = 17.000853255230652, hamiltonian_energy = -15.073364211890013, hamiltonian_energy_error = 0.18777896417649842, max_hamiltonian_energy_error = 0.28445192234383043, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9969287043075624, log_density = 20.49357817087139, hamiltonian_energy = -16.758766725679152, hamiltonian_energy_error = -0.11263013271800659, max_hamiltonian_energy_error = -0.34742432186994066, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9922592527841044, log_density = 20.570714632431354, hamiltonian_energy = -18.716519694059354, hamiltonian_energy_error = 0.020622406073002253, max_hamiltonian_energy_error = -0.21658602717550934, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 21.81436671581457, hamiltonian_energy = -18.915435740994944, hamiltonian_energy_error = -0.123315930310131, max_hamiltonian_energy_error = -0.2849654575002205, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9096168631578152, log_density = 16.63871676208342, hamiltonian_energy = -15.317146256850076, hamiltonian_energy_error = 0.08829481358922564, max_hamiltonian_energy_error = 0.1929357616226106, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8045897958457701, log_density = 19.932691686838986, hamiltonian_energy = -14.937642224370363, hamiltonian_energy_error = 0.05840209683222142, max_hamiltonian_energy_error = 0.5869045067436982, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 20.809410148280193, hamiltonian_energy = -18.891420222931284, hamiltonian_energy_error = -0.085803754923095, max_hamiltonian_energy_error = -0.25444267737097803, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 22.059599120376543, hamiltonian_energy = -20.85324546216827, hamiltonian_energy_error = -0.12270930921151901, max_hamiltonian_energy_error = -0.15065167549079916, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9792100946669406, log_density = 22.237614623141106, hamiltonian_energy = -20.30954654617281, hamiltonian_energy_error = 0.018740680972737067, max_hamiltonian_energy_error = 0.057087709553780286, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8864751471297827, log_density = 19.476869088724712, hamiltonian_energy = -18.296928711102428, hamiltonian_energy_error = 0.18746898521868616, max_hamiltonian_energy_error = 0.21757627730218232, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.5992961816967185, log_density = 16.546758804661813, hamiltonian_energy = -16.34192806391846, hamiltonian_energy_error = 0.8111044096568065, max_hamiltonian_energy_error = 0.8711237420325588, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 18.52082952234821, hamiltonian_energy = -12.866143476761074, hamiltonian_energy_error = -0.08047578482644013, max_hamiltonian_energy_error = -1.0522958374077476, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9844205437248881, log_density = 19.435858466048998, hamiltonian_energy = -17.462990566735638, hamiltonian_energy_error = 0.11547392187932815, max_hamiltonian_energy_error = -0.8342662874471181, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9912501168533462, log_density = 21.8452983635843, hamiltonian_energy = -17.776400923161788, hamiltonian_energy_error = -0.3493283057370782, max_hamiltonian_energy_error = -0.3770300770952062, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9758351522558911, log_density = 22.294912653707232, hamiltonian_energy = -20.867408730754214, hamiltonian_energy_error = 0.004760004318917765, max_hamiltonian_energy_error = -0.10101129925905994, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9432964087916508, log_density = 22.03019720889555, hamiltonian_energy = -19.8617674045781, hamiltonian_energy_error = -0.0624696862398757, max_hamiltonian_energy_error = 0.17389366295781983, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9331789898733229, log_density = 22.92438150146637, hamiltonian_energy = -19.48105440771441, hamiltonian_energy_error = -0.014686014996865282, max_hamiltonian_energy_error = 0.13814245277670523, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8741444806789135, log_density = 22.069678643905466, hamiltonian_energy = -20.408816074039883, hamiltonian_energy_error = 0.12268757793315288, max_hamiltonian_energy_error = 0.22418038055299405, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9787457933688576, log_density = 21.873060876240423, hamiltonian_energy = -19.3757840630683, hamiltonian_energy_error = -0.02267529283383496, max_hamiltonian_energy_error = -0.12369272543534393, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8986253283862572, log_density = 21.22486320099209, hamiltonian_energy = -20.22831821232624, hamiltonian_energy_error = 0.11998179569100742, max_hamiltonian_energy_error = 0.2585558696125396, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9927244970771905, log_density = 22.130416779918857, hamiltonian_energy = -20.376629985263065, hamiltonian_energy_error = -0.1517905152178507, max_hamiltonian_energy_error = -0.23670629614457894, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9330083487478003, log_density = 23.176158340621537, hamiltonian_energy = -20.77260709803026, hamiltonian_energy_error = -0.07300806039015484, max_hamiltonian_energy_error = 0.16065806877425715, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9465424452653052, log_density = 22.218737209940514, hamiltonian_energy = -21.89495384160773, hamiltonian_energy_error = 0.11122481098405146, max_hamiltonian_energy_error = 0.11365013317720596, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9902505492158296, log_density = 21.84248355716987, hamiltonian_energy = -20.846804212661475, hamiltonian_energy_error = -0.0271098373931693, max_hamiltonian_energy_error = -0.16885352024185352, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9401849106630752, log_density = 22.31011976586376, hamiltonian_energy = -20.513679211022627, hamiltonian_energy_error = 0.06569624316940192, max_hamiltonian_energy_error = 0.13297342081400387, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9015592469031752, log_density = 22.164384459743065, hamiltonian_energy = -20.647413435940734, hamiltonian_energy_error = 0.10743679767869452, max_hamiltonian_energy_error = 0.2554913900081388, tree_depth = 2, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8390075072909673, log_density = 19.876127685306706, hamiltonian_energy = -16.873930983519564, hamiltonian_energy_error = -0.2871621485535947, max_hamiltonian_energy_error = 0.4069143646798352, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.7658394566555143, log_density = 18.116398622463713, hamiltonian_energy = -13.263533884172169, hamiltonian_energy_error = -0.05667091801740831, max_hamiltonian_energy_error = 1.0273194667756602, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.858794301726342, log_density = 18.661427812693713, hamiltonian_energy = -13.268925788517413, hamiltonian_energy_error = -0.49784288877644833, max_hamiltonian_energy_error = 0.6243981889290637, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6636301540883562, log_density = 19.594944022608768, hamiltonian_energy = -15.68773272801159, hamiltonian_energy_error = -0.1577110359324756, max_hamiltonian_energy_error = 0.7821666249444235, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.834077190988059, log_density = 19.343998578886822, hamiltonian_energy = -17.549747707047985, hamiltonian_energy_error = 0.14318068645640736, max_hamiltonian_energy_error = 0.29856758967638797, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9990344447740915, log_density = 21.651930161650725, hamiltonian_energy = -17.82829656852676, hamiltonian_energy_error = -0.19775122924041355, max_hamiltonian_energy_error = -0.19775122924041355, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9783054888418, log_density = 19.89370623628893, hamiltonian_energy = -16.89106468986635, hamiltonian_energy_error = -0.12265166190522336, max_hamiltonian_energy_error = 0.16471142314743403, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5579282744842142, log_density = 14.303933450001916, hamiltonian_energy = -12.451835811132376, hamiltonian_energy_error = 0.5414569895393271, max_hamiltonian_energy_error = 0.871678930086869, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9928037106549615, log_density = 22.14087903303818, hamiltonian_energy = -11.94005319065876, hamiltonian_energy_error = -0.5075235617244189, max_hamiltonian_energy_error = -0.7464777824503148, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8513374027904731, log_density = 20.6210121275167, hamiltonian_energy = -18.68517417811104, hamiltonian_energy_error = 0.06860494591991895, max_hamiltonian_energy_error = 0.27122092361558003, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8420898641871494, log_density = 18.581262135857735, hamiltonian_energy = -15.765139643803142, hamiltonian_energy_error = 0.053289525857902476, max_hamiltonian_energy_error = 0.40724031458759846, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9935694864307822, log_density = 18.05274127943199, hamiltonian_energy = -16.950723461831686, hamiltonian_energy_error = -0.029764456892934277, max_hamiltonian_energy_error = -0.27644793722411265, tree_depth = 4, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9357555682899327, log_density = 20.655052584227974, hamiltonian_energy = -16.303281032417125, hamiltonian_energy_error = 0.021602112329890844, max_hamiltonian_energy_error = 0.3556973058388113, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9943972083455191, log_density = 21.138024581951814, hamiltonian_energy = -20.110060976801456, hamiltonian_energy_error = 0.032645627423566026, max_hamiltonian_energy_error = -0.20587831733340067, tree_depth = 3, numerical_error = false, step_size = 0.1282129690761319, nom_step_size = 0.1282129690761319, is_adapt = false)])","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Inspect posterior distribution over hyperparameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"hypers = map(unpack, samples);\nh_l1 = histogram(getindex.(hypers, :l1); label=\"l1\");\nh_l2 = histogram(getindex.(hypers, :l2); label=\"l2\");\nh_s1 = histogram(getindex.(hypers, :s1); label=\"s1\");\nh_s2 = histogram(getindex.(hypers, :s2); label=\"s2\");\nplot(h_l1, h_l2, h_s1, h_s2; layout=(2, 2))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As expected, the sampler converges to the posterior distribution quickly. One could combine this code with that from the previous sections to make predictions under the posterior over the hyperparameters.","category":"page"},{"location":"examples/getting_started/#Conclusion","page":"Getting Started","title":"Conclusion","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you now know how to fit GPs using Stheno.jl, and to investigate their posterior distributions. It's also straightforward to utilise Stheno.jl inside probabilistic programming frameworks like Soss.jl and Turing.jl (see examples folder).","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Stheno.jl","page":"Home","title":"Stheno.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Stheno.jl is a package for probabilistic programming with Gaussian processes.","category":"page"},{"location":"internals/#Interfaces","page":"Internals","title":"Interfaces","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The primary objects in Stheno are some special subtypes of AbstractGP. There are three primary concrete subtypes of AbstractGP:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP: an atomic Gaussian process given by wrapping an AbstractGP.\nCompositeGP: a Gaussian process composed of other WrappedGPs and CompositeGPs, whose properties are determined recursively from the GPs of which it is composed.\nGaussianProcessProbabilisticProgramme / GPPP: a Gaussian process comprising WrappedGPs and CompositeGPs. This is the primary piece of functionality that users should interact with.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This documentation provides the information necessary to understand the internals of Stheno, and to extend it with custom functionality.","category":"page"},{"location":"internals/#AbstractGP","page":"Internals","title":"AbstractGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP and CompositeGP implement the AbstractGPs.jl API. Please refer to the AbstractGPs.jl docs for more info on this.","category":"page"},{"location":"internals/#diag-methods","page":"Internals","title":"diag methods","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It is crucial for pseudo-point methods, and for the computation of marginal statistics at a reasonable scale, to be able to compute the diagonal of a given covariance matrix in linear time in the size of its inputs. This, in turn, necessitates that the diagonal of a given cross-covariance matrix can also be computed efficiently as the evaluation of covariance matrices often rely on the evaluation of cross-covariance matrices. As such, we have the following functions in addition to the AbstractGPs API implemented for WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Function Brief description\nvar(f, x) diag(cov(f, x))\nvar(f, x, x′) diag(cov(f, x, x′))\nvar(f, f′, x, x′) diag(cov(f, f′, x, x′))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The second and third rows of the table only make sense when length(x) == length(x′), of course.","category":"page"},{"location":"internals/#WrappedGP","page":"Internals","title":"WrappedGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"We can construct a WrappedGP in the following manner:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = wrap(GP(m, k), gpc)\n","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"where m is its MeanFunction, k its Kernel. gpc is a GPC object that handles some book-keeping, and is discussed in more depth below.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The AbstractGP interface is implemented for WrappedGPs in terms of the AbstractGP that they wrap. So if you want a particular behaviour, just make sure that the AbstractGP that you wrap has the functionality you want.","category":"page"},{"location":"internals/#Aside:-Example-Kernel-implementation","page":"Internals","title":"Aside: Example Kernel implementation","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It's straightforward to implement a new kernel yourself: simply following the instructions in KernelFunctions.jl and it'll work fine with GPs in Stheno.jl.","category":"page"},{"location":"internals/#GPC","page":"Internals","title":"GPC","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"This book-keeping object doesn't matter from a user's perspective but, unfortunately, we currently expose it to users. Fortunately, it's straightforward to work with. Say you wish to construct a collection of processes:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS WON'T WORK\nf = GP(mf, kf)\ng = GP(mg, kg)\nh = f + g\n# THIS WON'T WORK","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"You should write","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS GOOD. PLEASE DO THIS\ngpc = GPC()\nf = wrap(GP(mf, kf), gpc)\ng = wrap(GP(mg, kg), gpc)\nh = f + g\n# THIS IS GOOD. PLEASE DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The rule is simple: when constructing GPs that you plan to make interact later in your program, construct them using the same gpc object. For example, DON'T do the following:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS BAD. PLEASE DON'T DO THIS\nf = wrap(GP(mf, kf), GPC())\ng = wrap(GP(mg, kg), GPC())\nh = f + g\n# THIS IS BAD. PLEASE DON'T DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The mistake here is to construct a separate GPC object for each GP. Hopefully, the code errors, but might yield incorrect results.","category":"page"},{"location":"internals/#CompositeGP","page":"Internals","title":"CompositeGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"CompositeGPs are constructed as affine transformations of CompositeGPs and GPs. We describe the implemented transformations below.","category":"page"},{"location":"internals/#Addition","page":"Internals","title":"Addition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Given AbstractGPs f and g, we define","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f + g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"to be the CompositeGP sastisfying h(x) = f(x) + g(x) for all x.","category":"page"},{"location":"internals/#Multiplication","page":"Internals","title":"Multiplication","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Multiplication of AbstractGPs is undefined since the product of two Gaussian random variables is not itself Gaussian. However, we can scale an AbstractGP by either a constant or (deterministic) function.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = c * f\nh = sin * f","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"will both work, and produce the result that h(x) = c * f(x) or h(x) = sin(x) * f(x).","category":"page"},{"location":"internals/#Composition","page":"Internals","title":"Composition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f ∘ g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for some deterministic function g is the composition of f with g. i.e. h(x) = f(g(x)).","category":"page"},{"location":"internals/#cross","page":"Internals","title":"cross","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = cross([f, g])","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for WrappedGPs and CompositeGPs f and g. Think of cross as having stacked f and g together, so that you can work with their joint.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"For example, if you wanted to sample jointly from f and g at locations x_f and x_g, you could write something like","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"fg = cross([f, g])\nx_fg = BlockData([x_f, x_g])\nrand(fg(x_fg, 1e-6))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This particular function isn't part of the user-facing API because it isn't generally needed. It is, however, used extensively in the implementation of the GaussianProcessProbabilisticProgramme.","category":"page"},{"location":"internals/#GPPP","page":"Internals","title":"GPPP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The GaussianProcessProbabilisticProgramme is another AbstractGP which enables provides a thin layer of convenience functionality on top of WrappedGPs and CompositeGPs, and is the primary way in which it is intended that users will interact with this package.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP like this","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"is equivalent to manually constructing a GPPP using WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"gpc = GPC()\nf1 = wrap(GP(SEKernel()), gpc)\nf2 = wrap(GP(SEKernel()), gpc)\nf3 = f1 + f2\nf = Stheno.GPPP((f1=f1, f2=f2, f3=f3), gpc)","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"If you take a look at the gaussian_process_probabilistic_programming.jl source, you'll see that it's essentially just the above, and an implementation of the AbstractGPs API on top of a GPPP.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP is a single GP on an extended input domain: (Image: )","category":"page"}]
}
