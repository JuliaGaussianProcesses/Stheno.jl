var documenterSearchIndex = {"docs":
[{"location":"api/#Public-API","page":"API","title":"Public API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = Stheno","category":"page"},{"location":"api/#GPPP","page":"API","title":"GPPP","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Core functionality for working with GPPPs.","category":"page"},{"location":"api/","page":"API","title":"API","text":"@gppp\nGPPPInput\nBlockData\nsplit","category":"page"},{"location":"api/#Stheno.@gppp","page":"API","title":"Stheno.@gppp","text":"@gppp(model_expression)\n\nConstruct a GaussianProcessProbabilisticProgramme (GPPP) from a code snippet.\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = GPPPInput(:f3, randn(5))\n\ny = rand(f(x, 0.1))\n\nlogpdf(f(x, 0.1), y) ≈ elbo(f(x, 0.1), y, f(x, 1e-9))\n\n# output\n\ntrue\n\n\n\n\n\n","category":"macro"},{"location":"api/#Stheno.GPPPInput","page":"API","title":"Stheno.GPPPInput","text":"GPPPInput(p, x::AbstractVector)\n\nAn collection of inputs for a GPPP. p indicates which process the vector x should be extracted from. The required type of p is determined by the type of the keys in the GPPP indexed.\n\njulia> x = [1.0, 1.5, 0.3];\n\njulia> v = GPPPInput(:a, x)\n3-element GPPPInput{Symbol, Float64, Vector{Float64}}:\n (:a, 1.0)\n (:a, 1.5)\n (:a, 0.3)\n\njulia> v isa AbstractVector{Tuple{Symbol, Float64}}\ntrue\n\njulia> v == map(x_ -> (:a, x_), x)\ntrue\n\n\n\n\n\n","category":"type"},{"location":"api/#Stheno.BlockData","page":"API","title":"Stheno.BlockData","text":"BlockData{T, TV<:AbstractVector{T}, TX<:AbstractVector{TV}} <: AbstractVector{T}\n\nA strictly ordered collection of AbstractVectors, representing a ragged array of data.\n\nVery useful when working with GPPPs. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\n# Specify a `BlockData` set that can be used to index into\n# the `f2` and `f3` processes in `f`.\nx = BlockData(\n    GPPPInput(:f2, randn(4)),\n    GPPPINput(:f3, randn(3)),\n)\n\n# Index into `f` at the input.\nf(x)\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.split","page":"API","title":"Base.split","text":"Base.split(x::BlockData, Y::AbstractVecOrMat)\n\nConvenience functionality to make working with the output of operations on GPPPs easier. Splits up the rows of Y according to the sizes of the data in x.\n\njulia> Y = vcat(randn(5, 3), randn(4, 3));\n\njulia> x = BlockData(randn(5), randn(4));\n\njulia> Y1, Y2 = split(x, Y);\n\njulia> Y1 == Y[1:5, :]\ntrue\n\njulia> Y2 == Y[6:end, :]\ntrue\n\nWorks with any BlockData, so blocks can e.g. be GPPPInputs. This is particularly helpful for working with the output from rand and marginals from a GPPP indexed at BlockData. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = BlockData(GPPPInput(:f2, randn(3)), GPPPInput(:f3, randn(4)))\ny = rand(f(x))\ny2, y3 = split(x, y)\n\nFunctionality also works with any AbstractVector.\n\n\n\n\n\n","category":"function"},{"location":"api/#Building-GPPPs","page":"API","title":"Building GPPPs","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"If in doubt about what any of these transformations can do, play around with them!","category":"page"},{"location":"api/","page":"API","title":"API","text":"+\n*\nstretch\nperiodic\nshift\nselect","category":"page"},{"location":"api/#Base.:+","page":"API","title":"Base.:+","text":"+(fa::AbstractGP, fb::AbstractGP)\n\nProduces an AbstractGP f satisfying f(x) = fa(x) + fb(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.:*","page":"API","title":"Base.:*","text":"*(f, g::AbstractGP)\n\nProduce an AbstractGP h satisfying to h(x) = f(x) * g(x), for some deterministic function f.\n\nIf f isa Real, then h(x) = f * g(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.stretch","page":"API","title":"Stheno.stretch","text":"stretch(f::AbstractGP, l::Union{AbstractVecOrMat{<:Real}, Real})\n\nThis is the primary mechanism by which to introduce length scales to your programme.\n\nIf l isa Real or l isa AbstractMatrix{<:Real}, stretch(f, l)(x) == f(l * x) for any input x. In the l isa Real case, this is equivalent to scaling the length scale by 1 / l.\n\nl isa AbstractVector{<:Real} is equivalent to stretch(f, Diagonal(l)).\n\nEquivalent to f ∘ Stretch(l).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.periodic","page":"API","title":"Stheno.periodic","text":"periodic(g::AbstractGP, f::Real)\n\nProduce an AbstractGP with period f.\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.shift","page":"API","title":"Stheno.shift","text":"shift(f::AbstractGP, a::Real)\nshift(f::AbstractGP, a::AbstractVector{<:Real})\n\nReturns the GP g given by g(x) = f(x - a)\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.select","page":"API","title":"Stheno.select","text":"select(f::AbstractGP, idx)\n\nSelect the dimensions of the input to f given by idx.\n\n\n\n\n\n","category":"function"},{"location":"input_types/#Input-Types","page":"Input Types","title":"Input Types","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Stheno enables the user to handle any type of input domain they wish and provides a common API that users must implement when considering a new way of representing input data to ensure that the package knows how to handle them appropriately.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"This interface has now been adopted throughout the JuliaGaussianProcesses ecosystem.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Discussed below is this interface's core assumptions, a detailed account of a couple of important concrete input types.","category":"page"},{"location":"input_types/#The-Central-Assumption","page":"Input Types","title":"The Central Assumption","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"The central assumption made in all user-facing and internal functions is this: when a collection of inputs are required, they subtype AbstractVector. For example, x isa AbstractVector when indexing into a GP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f(x, σ²)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"or computing the covariance matrix associated with a kernel:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"kernelmatrix(SqExponentialKernel(), x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When computing the cross-covariance matrix between two GPs","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"cov(f, g, x_f, x_g)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_f and x_g must be AbstractVectors. All other operations involving collections of inputs have the same restrictions. Always AbstractVectors.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"For example, this means that when handling multi-dimensional inputs stored in a Matrix they must be wrapped so that the package knows to treat them as a vector — more on this in below in D-dimensional Euclidean Spaces.","category":"page"},{"location":"input_types/#Dimensional-Euclidean-Space","page":"Input Types","title":"1-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When constructing a GP whose domain is the real-line, for example when using a GP to solve some kind of time-series problem, it is sufficient to work with Vector{<:Real}s of inputs. As such, the following is completely valid:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"using Stheno: GPC\nf = wrap(GP(SqExponentialKernel()), GPC())\nx = randn(10)\nf(x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"It is also possible to work with other AbstractArrays that represent a vector of 1-dimensional points, e.g.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = range(-5.0, 5.0; length=100)\nf(x)","category":"page"},{"location":"input_types/#D-Dimensional-Euclidean-Space","page":"Input Types","title":"D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Many applications of interest involve more than a single input-dimension, such as spatio-temporal modeling or Machine Learning tasks. For these cases, we provide ColVecs <: AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"X_data = randn(5, 100)\nX = ColVecs(X_data)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"tells Stheno that it should treat each column of X_data as a vector-valued input. Phrased differently, X is an AbstractVector{T} where T <: Vector{<:Real}, which stores its elements in memory as a dense matrix. This approach has the advantage of making it completely explicit how Stheno treats a matrix of data, and also simplifies quite a bit of the internal machinery, as all vectors of inputs can be assumed to be a subtype of AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If, on the other hand, each row of X_data corresponds to a vector-valued input, use RowVecs(X_data).","category":"page"},{"location":"input_types/#Structure-in-D-Dimensional-Euclidean-Space","page":"Input Types","title":"Structure in D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Consider a rectilinear grid of points in D-dimensional Euclidean space. Such grids of points can be represented in a more memory-efficient manner than can arbitrarily locate sets of points. Moreover, this structure can be exploited to accelerate inference for certain types of problems dramatically. Other such examples exist e.g., uniform grids in N-dimensions, and can be exploited to more efficiently represent input data and to accelerate inference.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Work to exploit these kinds of structures is on-going at the time of writing and will be documented before merging.","category":"page"},{"location":"input_types/#GPPPInput-and-BlockData","page":"Input Types","title":"GPPPInput and BlockData","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"A GPPPInput is a special kind of AbstractVector, specifically designed for GPPPs. Given a GPPP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"a GPPPInput like","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_ = randn(5)\nx = GPPPInput(:f3, x_)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"applied to f","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"fx = f(x, 0.1)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"constructs a FiniteGP comprising f3 at x_. GPPPInput(:f2, x_) and GPPPInput(:f1, x_) are the analogues for f1 and f2.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If you wish to refer to multiple processes in f at the same time, use a BlockData. For example","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = BlockData(GPPPInput(:f2, x_), GPPPInput(:f3, x_))","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"would pull out a 10-dimensional FiniteGP, the first 5 dimensions being f2 at x_, the last 5 dimensions being f3 at x_.","category":"page"},{"location":"kernel_design/#Kernel-Design","page":"Kernel Design","title":"Kernel Design","text":"","category":"section"},{"location":"kernel_design/","page":"Kernel Design","title":"Kernel Design","text":"Please refer to KernelFunctions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"EditURL = \"https://github.com/JuliaGaussianProcesses/Stheno.jl/blob/master/examples/getting_started/script.jl\"","category":"page"},{"location":"examples/getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Here we document how to do some basic stuff, including learning and inference in kernel parameters, with Stheno.jl. To do this, we that makes use of a variety of packages from the Julia ecosystem. In particular, we'll make use of","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl to perform Bayesian inference in our model parameters,\nOptim.jl for point-estimates of our model parameters,\nParameterHandling.jl to make it easy to work with our model's parameters, and to ensure that it plays nicely with Optim and AdvancedHMC,\nZygote.jl to compute gradients.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This guide assumes that you know roughly what's going on conceptually with GPs. If you're new to Gaussian processes, an excellent introduction can be found in either this video lecture or this one.","category":"page"},{"location":"examples/getting_started/#Exact-Inference-in-a-GP-in-2-Minutes","page":"Getting Started","title":"Exact Inference in a GP in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This is only a slightly more interesting version of the first example on the README. It's slightly more interesting in that we give the kernels some learnable parameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Import the packages we'll need for this bit of the demo.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AbstractGPs\nusing LinearAlgebra\nusing Stheno\nusing Plots","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Short length-scale and small variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l1 = 0.4\ns1 = 0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Long length-scale and larger variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l2 = 5.0\ns2 = 1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Specify a GaussianProcessProbabilisticProgramme object, which is itself a GP built from other GPs.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f = @gppp let\n    f1 = s1 * stretch(GP(Matern52Kernel()), 1 / l1)\n    f2 = s2 * stretch(GP(SEKernel()), 1 / l2)\n    f3 = f1 + f2\nend;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Generate a sample from f3, one of the processes in f, at some random input locations. Add some iid observation noise, with zero-mean and variance 0.05.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"const x = GPPPInput(:f3, collect(range(-5.0, 5.0; length=100)));\nσ²_n = 0.02;\nfx = f(x, σ²_n);\nconst y = rand(fx);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Compute the log marginal likelihood of this observation, just because we can.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"logpdf(fx, y)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"24.98568588686205","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"fx should be thought of as \"f at x\", and is just as a multivariate Normal distribution, with zero mean and covariance matrix","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"heatmap(cov(f, x) + σ²_n * I)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As such samples can be drawn from it, and the log probability any particular value under it can be computed, in the same way that you would an MvNormal from Distributions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can visualise x and y with Plots.jl","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"plt = plot();\nscatter!(plt, x.x, y; color=:red, label=\"\");\ndisplay(plt)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"It's straightforward to compute the posterior over f:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior = posterior(fx, y);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior is another GP, the posterior over f given noisy observations y at inputs x.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The plotting recipes from AbstractGPs.jl can be utilised to easily print whichever component of the GPPP is needed.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"x_plot = range(-7.0, 7.0; length=1000);\nxp = GPPPInput(:f3, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp);\n    ribbon_scale=3, label=\"\", color=:blue, fillalpha=0.2, linewidth=2,\n)\nplot!(\n    plt, x_plot, rand(f_posterior(xp, 1e-9), 10);\n    samples=10, markersize=1, alpha=0.3, label=\"\", color=:blue,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you've built a simple GP probabilistic programme, performed inference in it, and looked at the posterior. We've only looked at one component of it though – we could look at others. Consider f2:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"xp2 = GPPPInput(:f2, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp2);\n    ribbon_scale=3, label=\"\", color=:red, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior(xp2, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:red,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-NelderMead-in-2-Minutes","page":"Getting Started","title":"Fit a GP with NelderMead in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Stheno.jl is slightly unusual in that it declines to provide a fit or train function. Why is this? In short, because there's really no need – the ecosystem now contains everything that is needed to easily do this yourself. By declining to insist on an interface, Stheno.jl is able to interact with a wide array of tools, that you can use in whichever way you please.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Optim requires that you provide an objective function with a single Vector{<:Real} parameter for most of its optimisers. We'll use ParameterHandling.jl to build one of these in a way that doesn't involve manually writing code to convert between a structured, human-readable, representation of our parameters (in a NamedTuple) and a Vector{Float64}.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"First, we'll put the model from before into a function:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function build_model(θ::NamedTuple)\n    return @gppp let\n        f1 = θ.s1 * stretch(GP(SEKernel()), 1 / θ.l1)\n        f2 = θ.s2 * stretch(GP(SEKernel()), 1 / θ.l2)\n        f3 = f1 + f2\n    end\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"build_model (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've assumed that the parameters will be provided as a NamedTuple, so let's build one and check that the model can be constructed:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\n\nθ = (\n    # Short length-scale and small variance.\n    l1 = positive(0.4),\n    s1 = positive(0.2),\n\n    # Long length-scale and larger variance.\n    l2 = positive(5.0),\n    s2 = positive(1.0),\n\n    # Observation noise variance -- we'll be learning this as well.\n    s_noise = positive(0.1),\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(l1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-0.9162907691270586, Bijectors.Exp{0}(), 1.4901161193847656e-8), s1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.6094379869399091, Bijectors.Exp{0}(), 1.4901161193847656e-8), l2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(1.6094379094538682, Bijectors.Exp{0}(), 1.4901161193847656e-8), s2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.490116130486996e-8, Bijectors.Exp{0}(), 1.4901161193847656e-8), s_noise = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-2.3025852420056685, Bijectors.Exp{0}(), 1.4901161193847656e-8))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've used ParameterHandling.jls positive constraint to ensure that all of the parameters remain positive during optimisation. Note that there's no magic here, and Optim knows nothing about positive. Rather, ParameterHandling knows how to make sure that Optim will optimise the log of the parameters which we want to be positive.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can make this happen with the following:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\nusing ParameterHandling: value, flatten\n\nθ_flat_init, unflatten = flatten(θ);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Concrete types used for clarity only.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"unpack = value ∘ unflatten;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now easily define a function which accepts the flat form of the parameters, and return the negative log marginal likelihood (nlml) of the parameters θ:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function nlml(θ::NamedTuple)\n    f = build_model(θ)\n    return -logpdf(f(x, θ.s_noise + 1e-6), y)\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"nlml (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can use any gradient-free optimisation technique from Optim.jl to find the parameters whose negative log marginal likelihood is locally minimal:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Optim\nresults = Optim.optimize(\n    nlml ∘ unpack,\n    θ_flat_init + randn(length(θ_flat_init)),\n    NelderMead(),\n)\nθ_opt = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Note that we just added some noise to the initial values to make the optimisation more interesting.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now use this to construct the posterior GP and look at the posterior in comparison to the true posterior with the known hyperparameters","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_opt = build_model(θ_opt);\nf_posterior_opt = posterior(f_opt(x, θ_opt.s_noise), y);\nms_opt = marginals(f_posterior_opt(xp));\nplot!(\n    plt, x_plot, mean.(ms_opt);\n    ribbon=3std.(ms_opt), label=\"\", color=:green, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_opt(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:green,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Of course, the exact posterior has not been recovered because the exact hyperparameters cannot be expected to be recovered given a finite amount of data over a finite width window.","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-BFGS-in-2-minutes","page":"Getting Started","title":"Fit a GP with BFGS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The BFGS algorithm is generally the preferred choice when optimising the hyperparameters of fairly simple GPs. It requires access to the gradient of our nlml function, which can be straightforwardly obtained via reverse-mode algorithmic differentiation, which is provided by Zygote.jl:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Zygote: gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This will probably take a while to get going as Zygote needs to compile.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"results = Optim.optimize(\n    nlml ∘ unpack,\n    θ->gradient(nlml ∘ unpack, θ)[1],\n    θ_flat_init + 0.1 * randn(length(θ_flat_init)),\n    BFGS(),\n    Optim.Options(\n        show_trace=true,\n    );\n    inplace=false,\n)\nθ_bfgs = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Iter     Function value   Gradient norm \n     0     2.896102e+00     3.106731e+01\n * time: 0.026983022689819336\n     1    -1.301585e+01     2.305545e+01\n * time: 1.5229148864746094\n     2    -1.568284e+01     2.032513e+01\n * time: 1.543431043624878\n     3    -2.101874e+01     1.507057e+01\n * time: 1.5569279193878174\n     4    -2.280106e+01     1.077180e+01\n * time: 1.6034040451049805\n     5    -2.356724e+01     8.471907e+00\n * time: 1.6167199611663818\n     6    -2.452669e+01     6.231467e+00\n * time: 1.630328893661499\n     7    -2.510284e+01     4.252583e+00\n * time: 1.6434409618377686\n     8    -2.545312e+01     7.161908e-01\n * time: 1.6566569805145264\n     9    -2.546878e+01     8.446357e-02\n * time: 1.6698379516601562\n    10    -2.546956e+01     7.006439e-03\n * time: 1.6828088760375977\n    11    -2.546956e+01     1.227515e-04\n * time: 1.6960480213165283\n    12    -2.546956e+01     1.419906e-05\n * time: 1.708961009979248\n    13    -2.546956e+01     5.812115e-07\n * time: 1.7386150360107422\n    14    -2.546956e+01     2.296570e-09\n * time: 1.7522058486938477\n","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Once more visualising the results:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_bfgs = build_model(θ_bfgs);\nf_posterior_bfgs = posterior(f_bfgs(x, θ_bfgs.s_noise), y);\nms_bfgs = marginals(f_posterior_bfgs(xp));\nplot!(\n    plt, x_plot, mean.(ms_bfgs);\n    ribbon=3std.(ms_bfgs), label=\"\", color=:orange, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_bfgs(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:orange,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Notice that the two optimisers produce (almost) indistinguishable results.","category":"page"},{"location":"examples/getting_started/#Inference-with-NUTS-in-2-minutes","page":"Getting Started","title":"Inference with NUTS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl provides a state-of-the-art implementation of the No-U-Turns sampler, which we can use to perform approximate Bayesian inference in the hyperparameters of the GP. This is slightly longer than the previous examples, but it's all set up associated with AdvancedHMC, which is literally a copy-paste from that package's README:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AdvancedHMC, Zygote","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define the log marginal joint density function and its gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"ℓπ(θ_flat) = -nlml(unpack(θ_flat)) - 0.5 * sum(abs2, θ_flat)\nfunction ∂ℓπ∂θ(θ_flat)\n    lml, back = Zygote.pullback(ℓπ, θ_flat)\n    ∂θ_flat = first(back(1.0))\n    return lml, ∂θ_flat\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"∂ℓπ∂θ (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Sampling parameter settings","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"n_samples, n_adapts = 500, 20","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(500, 20)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perturb the initialisation a little bit.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"θ0_flat = θ_flat_init + 0.1 * randn(length(θ_flat_init))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"5-element Vector{Float64}:\n -0.8805940470775909\n -1.61001139954649\n  1.7674176620042892\n  0.06137545187452812\n -2.082355604029961","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define metric space, Hamiltonian, sampling method and adaptor","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"metric = DiagEuclideanMetric(5)\nh = Hamiltonian(metric, ℓπ, ∂ℓπ∂θ)\nint = Leapfrog(find_good_eps(h, θ0_flat))\nprop = NUTS{MultinomialTS, GeneralisedNoUTurn}(int)\nadaptor = StanHMCAdaptor(n_adapts, Preconditioner(metric), NesterovDualAveraging(0.8, int.ϵ))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"StanHMCAdaptor(\n    pc=WelfordVar,\n    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.4),\n    init_buffer=75, term_buffer=50, window_size=25,\n    state=window(76, -30), window_splits()\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perform inference.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"samples, stats = sample(h, prop, θ0_flat, n_samples, adaptor, n_adapts; progress=true)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"([[-0.8805940470775909, -1.61001139954649, 1.7674176620042892, 0.06137545187452812, -2.082355604029961], [-0.8805940470775909, -1.61001139954649, 1.7674176620042892, 0.06137545187452812, -2.082355604029961], [-0.8466211908600421, -1.4772278915862729, 1.8305746589772198, 0.08347686302817703, -2.4880772442988253], [-0.8027166823114761, -1.4448225355093118, 1.8296774422862592, 0.1710160164034398, -2.564993694668727], [-1.1232311807021726, -2.0372327196777382, 1.1536309804039178, 0.3826701464304667, -3.9812905135270165], [-0.6808597422501436, -1.4852504599213792, 1.8588495554190616, 0.008283268071059807, -3.279255373171408], [-0.8063499673943958, -1.2174298333722098, 1.8345084566098397, -0.21686565555450052, -3.9841110030796307], [-0.7483283979473049, -1.2753122170542002, 0.7198464835959695, -0.5938353210154295, -3.6199178714955247], [-0.7483283979473049, -1.2753122170542002, 0.7198464835959695, -0.5938353210154295, -3.6199178714955247], [-0.9890772415218503, -1.4429400758386528, 2.2214874320779905, 0.48770729952574526, -3.735632213608602], [-1.1872748862173874, -1.6046551387032615, 1.2856262600917985, -0.1771562357001644, -4.097223945128712], [-1.0790763377149453, -1.5035994977334501, 1.2458830265757657, -0.046426600859330674, -3.672362583293058], [-1.1434206943402974, -1.5363954770854775, 1.7117248327925385, 0.065214059919566, -3.9739606853640983], [-0.9279306419339194, -1.3723508548179932, 0.8484347439428859, -0.49841968730346364, -3.8146395380698466], [-0.9758370279899772, -1.437301327277433, 1.4012854298978636, -0.14748854609597292, -3.8331594814331686], [-0.9758370279899772, -1.437301327277433, 1.4012854298978636, -0.14748854609597292, -3.8331594814331686], [-0.8948300756856138, -1.2048270852290544, 1.3050895320921014, -0.09138264046179767, -3.943786652678008], [-1.1715036175637723, -1.7766360601813758, 1.0920319049961913, -0.0013639497045947538, -3.8135221481129564], [-0.9757342832888546, -1.3032214192915623, 1.387428001447253, -0.705412847932425, -3.9083269406177714], [-1.0155043107663595, -1.4166186164609396, 1.607210082494308, 0.91306866832602, -3.9822541521191765], [-1.216982199108795, -1.6146130839805897, 1.649982848645929, 0.32008527257476893, -3.8992921659301523], [-0.8719288828115388, -1.5093789675356644, 0.9601206773119917, -0.6044088293973002, -3.932724293168555], [-1.152604003473007, -1.5800551173358646, 1.8167015562158761, 0.1449388518202136, -3.874495716371007], [-1.3686909227427213, -1.558704788309106, 1.9550438939503125, 0.10360138206756939, -4.009089413861825], [-0.9478781052931091, -1.570019943862611, 2.241840743816764, 0.3333194546739077, -3.608266732019122], [-0.7682750050609136, -1.1166740142147993, 0.8281485153067246, 0.6008528453985269, -3.887685385836751], [-0.9882918868547196, -1.2796351102344408, 1.4935407150555522, 0.073483774278011, -4.0145751666736365], [-1.0020025595149131, -1.3095494642954664, 2.0379939505428473, -0.037104161774532525, -4.017296100748943], [-0.8775357131097744, -1.7001867566909232, 0.9306856170402837, -0.3482556465017471, -3.6966217212128054], [-0.9510806516647937, -1.5334970546866207, 1.1198625578000299, -0.1825751758881177, -3.8520540110406034], [-1.544877967352739, -1.5569865459876824, 1.6263840098029356, -0.3608189684191766, -3.9832147236763915], [-0.6684102713947045, -1.5044622384559994, 1.0852188301035572, 0.2669842605481276, -3.7372086028130767], [-1.3019680555269821, -1.5495644297147584, 0.9143592020765424, -0.6196068279814666, -4.159745343275264], [-1.3584927290949806, -1.458596350768893, 0.9474306227544752, -0.5925519714500125, -4.293028618046833], [-1.1938162656089373, -1.4986206356671945, 1.0156067343484245, -0.5332339891360495, -4.375271904524548], [-0.8543387181912893, -1.7022424673152128, 1.614195597174017, 0.12234668891571276, -3.4254578984156714], [-1.133762104866182, -1.4910560002593167, 0.8677666541878745, -0.14961104265834035, -4.2501026450414665], [-1.0504692639262634, -1.6157561307190724, 0.902053117911217, -0.14581805487338648, -4.276509913596661], [-1.0531568129044648, -1.5953405542950025, 1.6044123904150536, 0.27103797192479073, -3.572438681272861], [-1.226808590543736, -1.6834404478297325, 1.4822506023354933, 0.19406328260156405, -4.1816785945722375], [-1.364927967016958, -1.6516108735593982, 1.314545978274083, -0.4401036095455183, -3.7374193348818943], [-1.1853603692575465, -1.7340526381813661, 1.197769158981507, -0.5739476286523562, -4.077524215811457], [-0.9434580823214422, -1.7774849516318154, 1.273898413456076, -0.42877224228985356, -3.696786062300112], [-0.9617770249667046, -1.4114007443393743, 1.4833593785136594, 0.0035955974777679145, -3.944657726802942], [-1.0406481755803525, -1.701277928477452, 1.7395771311007453, -0.3568871916076255, -3.8712806731584384], [-1.1956810729939555, -1.5209222328033347, 1.3819341493339923, 0.0848529075954356, -3.840850558261461], [-0.9586403094085363, -1.297684598185836, 1.4543631871474318, -0.1386257101867304, -3.7876022117845545], [-0.8737023948863143, -1.3769123622713788, 1.5512042068439973, 0.07661789059326962, -3.79232809216378], [-0.644094855323042, -0.9788581245862746, 1.769120481764056, 0.48227401565414346, -3.9319666059151066], [-1.0008867105426231, -1.5789813524251515, 2.2873251446739737, 0.7763650698781839, -3.7595614205314085], [-0.9931437361438139, -1.5825122053753176, 1.2823371905169036, 1.6395450901326136, -3.9583086986862246], [-1.1047030752952207, -1.8562945950905545, 1.580708334538997, 1.546313276264721, -3.9203905548501856], [-1.2468825983351695, -1.4243129382053032, 1.8477799463511504, 0.25888919708037783, -3.933005251522212], [-0.9084343694391107, -1.6128201309787762, 1.3677578639817716, 0.21256890238301487, -3.7921875953059727], [-0.7629448210488526, -1.1832150663692842, 1.1876877881532433, -0.28795075226253936, -3.590435999203411], [-0.7708699524417312, -1.0019894387602557, 0.7835694537585308, -0.7588920539212571, -3.905800303831829], [-0.9451766426486452, -1.4496770185338281, 1.4395425240079365, 0.1752192111743699, -4.034286602520124], [-0.6426881340759761, -1.3246350024463789, 1.0305981976964627, -0.2916931495090907, -3.779856282801856], [-1.083938857022685, -1.4987029906995162, 0.5776898541128085, -0.3108982696202044, -3.7721773551810025], [-0.9831936307189152, -1.7739504025450177, 0.2934427427547881, -0.03470416469172493, -3.9998667925041698], [-0.9052826212482878, -1.7820876412829758, 0.24339977419347567, 0.02885965528360817, -3.758293908563429], [-1.0618848898697801, -1.5670093826774791, 1.4263630497933277, -0.3858946120382525, -4.09057445293838], [-0.8637762983295927, -1.5279578760414547, 1.312563660360373, 0.18051678311360192, -3.897494892419164], [-1.1761994223685646, -1.5786328502325877, 1.2900433242631693, 0.21415363610881807, -3.860392825702841], [-0.9775769198844576, -1.7117971431495613, 1.439479456353473, -0.3755337647698673, -3.8666957539138656], [-1.319386556363057, -1.5608570531307175, 1.5297621439322886, -0.3826967196062115, -3.9554975839229387], [-0.7320732023540782, -1.428755832392496, 1.7360803873192654, -0.15062204361000953, -3.684894774329993], [-1.0093331351519834, -1.4464690216497347, 1.4386620329135889, -0.33678061056776165, -3.8686715909830927], [-1.0286376726624757, -1.565112202737415, 1.1649929235403629, 0.08055628288315916, -3.783146072933275], [-1.5979552640923977, -1.9754454304064666, 0.9984826605241963, -0.06065216483337551, -3.9333669185473825], [-0.6727522810263867, -1.2654029312405195, 1.6123638519192194, -0.21078899759732378, -3.7772556078841286], [-0.8772943251628393, -1.1469193591100095, 1.9641916582633772, -0.2674287727999159, -3.880118264121564], [-0.69478819469271, -1.3233693000639828, 2.054321900623948, -0.2991522124403334, -4.055873914939078], [-0.9568732412343848, -1.4936318076536037, 0.7889303350370088, 0.18486996211295117, -3.948156501969653], [-1.0191402991190894, -1.4284915499037647, 0.6665125822560956, 0.03159810999299659, -3.84985268247275], [-1.1112682041712219, -1.489765754797161, 0.708919951539985, 0.0737016349040058, -3.717119781157174], [-0.7511397578835256, -1.521951272604032, 1.8574150017192157, 0.5874542693590848, -3.753433999689567], [-0.9467985980316815, -1.3881577749082223, 1.8017057249136292, 0.6057858399807842, -3.8512279048971507], [-1.1636083072772896, -1.431034377665342, 1.0025698128538907, -0.5161987214907199, -3.887233326828446], [-0.9867783450937069, -1.3620577573087422, 1.5531442368940336, 0.11774790744633193, -3.9120047652906895], [-1.1313522420759992, -1.0808103543267351, 1.4411916484072758, 0.20902433413011104, -3.8658597890190998], [-0.7125670327034445, -1.4509885177837976, 1.5017571093232138, 0.0013443223717502922, -4.045898629668396], [-0.9312905595453943, -1.469011895626556, 1.514502873933802, 0.1319920922128005, -4.001878253995914], [-1.238144463534159, -1.4172704869928263, 2.192182647121772, 0.46237661815402703, -4.013044175333359], [-0.6825248899573043, -0.9835318696199815, 1.9020883419256336, 0.5565471731447527, -3.625541509334125], [-1.2603255073260082, -1.687703446362891, 1.4257823089709112, 0.8132571738315181, -3.8157230536284796], [-0.5390757848463245, -0.9138145272485216, 2.204258208723291, -0.676680931774899, -3.6931688783116616], [-0.9030185435516287, -1.2881358921930128, 1.6945900371787996, 0.3054435601871964, -3.9286670795811314], [-0.8027206385027024, -1.4079665184262495, 1.7466689899671621, 0.1358417569401498, -3.891236667814485], [-1.2046696318115488, -1.7120562469427405, 0.867235507302207, -0.3136607436602921, -3.797302270397709], [-0.7498216204859075, -1.1938542173663955, 1.0207339162453948, -0.23476323649681874, -3.8001707206352418], [-1.1684628637493344, -1.5811880266647904, 1.2947666207353412, -0.39536951160108086, -3.752792546303111], [-1.2964733979443852, -1.6064991509200288, 1.4994164129414824, -0.4464120344961186, -3.927236740356421], [-0.6943167985677967, -1.3986438305474256, 1.2967589811012212, 0.20336619381320606, -3.8232435142551133], [-1.2852541946756952, -1.8012831353405172, 1.2284252877061506, -0.5593765016605403, -4.057463866732906], [-0.892817003388497, -1.3644054009132804, 0.6506980776358554, -0.18316194687657267, -3.6728892297729985], [-0.7264093916108783, -1.3509137481984337, 1.3669684048059607, -0.626374231243872, -3.9506164555845076], [-1.1577675641740646, -1.4490151014675678, 1.6896224098592816, -0.4463666290444568, -3.8339800177716388], [-0.9305632471857455, -1.7792924948775273, 1.5985862846832746, -0.40846400918095804, -4.1959059317651555], [-1.1521068849116132, -1.2545143857611887, 1.4816752740710555, 0.35747055716854537, -3.5446442243393665], [-0.7886763175473087, -1.5430933585007844, 1.6406357807922873, 0.33045837882472084, -3.8175654481770778], [-1.069810702771881, -1.6491620462419565, 1.3726641779094402, 0.30864964071237183, -3.8616528420921843], [-1.4612037657202321, -1.8305636456286758, 1.7254649420588353, -0.06039233341102827, -3.8946671890948306], [-1.0449630092642468, -1.4577878471705437, 1.0462184937259857, 0.294620657041989, -3.9998969185145223], [-1.1999679238215777, -1.377173196666635, 0.9509184190523712, 0.3620635405925905, -4.065737291568494], [-0.9793717858662119, -1.3551039982699262, 1.5088557613327063, -0.5387738690414658, -3.780046583897545], [-0.8667996157949702, -1.607991200448539, 1.6280246573962247, -0.41150047461008554, -3.781702104467048], [-1.126087683522832, -1.5130515591279627, 1.1179093469356651, -0.24031927055121655, -4.0552460762587454], [-1.0527219458670751, -1.9930586823829395, 1.1794387372613424, 0.051590158059142105, -3.903424130206423], [-0.8998309111499145, -1.0177721172578882, 1.6139215226309513, -0.41470365040965806, -3.781147952513073], [-0.8848102364350382, -1.0939821591187129, 1.3809205376884297, 0.07054944610255634, -3.8894833108200566], [-1.2128803020502499, -1.4303663720579856, 1.6826943694758765, 0.0061347331048565365, -4.157724466869527], [-1.1220843646863137, -1.3805726678347086, 1.4711955487191921, -0.0857705194343805, -4.2259524973846405], [-0.9040761026077373, -1.648745918944197, 1.4770699360617694, -0.2364212579006298, -3.521650003320758], [-0.8723748760642046, -1.2187065039731515, 1.3958492231841144, -0.18565431289427378, -4.081228766516872], [-0.9346765199391831, -1.2555630318352131, 0.9143414495148875, -0.6082651916358668, -3.5776124181267557], [-1.5072245733925533, -1.464512296548374, 1.6777415294680158, 0.20252448701652465, -3.8215113224744264], [-1.2384150647997205, -1.4264852044869938, 1.2950406488820256, -0.6506382034757301, -3.782138972499705], [-1.009822915724204, -1.8840703843914206, 1.2223948220060463, -0.5009002807874168, -3.966925041177749], [-0.745677808448193, -1.1472169449971386, 0.9764165141639074, -0.008484219722190933, -3.9468225517581783], [-0.7711872628649653, -1.0375600230770172, 1.4972098851791826, -1.0151978828213648, -3.7495600510881495], [-1.5664834574759245, -1.5634566188489332, 1.2780239196646659, 0.9148922437514015, -4.161687590511825], [-0.6167827313791188, -1.5226295337909463, 1.4706301757040061, -0.977457896428964, -3.4667126808118556], [-0.9520144500760485, -0.9701669485605362, 1.6315265536075068, 0.06250710099987511, -4.138763786575297], [-0.5035050491824663, -1.300340062477835, 1.6694670759369137, -0.04071743511495169, -3.3753242499400957], [-0.7315870383670593, -1.3122524835895795, 1.5125368792324267, -0.11483941222999422, -3.2717307310469623], [-1.1638068692920749, -1.5958575180235466, 1.4145222158647675, 0.4266449053032889, -4.105449416019583], [-0.693260939512819, -1.117977190291616, 0.7930872932561036, 0.615807064298881, -3.5764253008569837], [-1.1244634550809147, -1.710216483257058, 1.8728181775359451, 0.24013441482039738, -4.214970645805479], [-0.4624780879935865, -1.6022210682790763, 0.8171167025495373, 0.07779121606611233, -3.6743192299899143], [-1.0609212941652664, -1.4455543049421857, 1.740396209942869, -0.2738886633783402, -4.305674798579293], [-0.6962752806779973, -1.5050518833467637, 1.2739779837135854, 0.7612560558999035, -3.800226174499292], [-1.0308243944580933, -1.6798877351012336, 1.938664993172235, 0.6839699062265178, -4.139156820198492], [-1.3068540545534721, -1.705313101398308, 1.941499305700676, 0.6313947878560093, -3.9528175171949154], [-1.0545025173602818, -1.8443771155732258, 1.8829259326030123, 0.4845159519496377, -4.048888736154559], [-0.7073549377165474, -1.2903030800267434, 0.4883804297031781, -0.7738882353354876, -3.914558109177552], [-0.9531631614602724, -1.2321527960317933, 0.8679700121455614, -0.6261453411159775, -4.188387982848196], [-1.0954555139482862, -1.146275776545741, 1.0404218844484934, -0.6487426940064784, -4.03936180998886], [-1.0240470916733269, -1.7023609001174091, 1.7193155140092606, 0.5245253044006385, -3.670391491699293], [-0.9712645416715104, -1.8582013698143978, 1.6389843064715839, 0.6820129229832146, -3.810719046370487], [-1.0127300657589189, -1.5227562052188808, 1.8304858625482865, 0.8622667160266022, -3.753531610416749], [-1.2220907239771321, -1.414830157624647, 1.1722272397165854, -0.9147228892369929, -3.775336474285314], [-1.2165143707401456, -1.3900553199653825, 1.1598821920937583, -0.9502105091390693, -3.7851157114426313], [-0.9420728051745443, -1.760732683631017, 1.380313013297932, -0.33985206615568814, -3.724646148503425], [-1.0465004547524788, -1.2814186019783136, 1.394475170000596, 0.19123868158697174, -3.990105139726964], [-0.9791041308550764, -1.5638401848614067, 1.1252427912408705, -0.5803745769548061, -3.991340623812805], [-0.9420477316633481, -1.3534082698653835, 1.132025327029058, -0.11777096929000319, -3.803968988249633], [-1.0842797043444967, -1.6290097353266653, 1.2566321474834863, -0.43688837515730317, -3.706595443160124], [-1.0345807721633908, -1.6949801631749015, 1.2435908376441316, -0.4577691490693147, -3.683862081745028], [-1.2716081769720773, -1.2561076773823838, 1.887749797250014, -0.0232749605738526, -3.9864414676316167], [-0.6738363881810218, -1.4865944129296218, 1.5295183425830179, 0.34512961237466877, -3.66154143197473], [-0.972437240106556, -1.396026342114208, 1.4721146785941073, 0.8880503483583365, -3.7776378601036327], [-1.1107906344364762, -1.6030916419315604, 1.8860184024270858, 0.7643030289356454, -3.938102071648765], [-0.8162556438584132, -1.7098392836452612, 1.8224196956230378, 0.7817277546156491, -3.7940894814763793], [-0.8229995494997908, -1.7040216531582792, 1.279636678572784, -0.4051283060170912, -3.85165455763593], [-1.211229515886019, -1.6195643218632225, 1.5951286592237575, -0.27966284121083784, -3.6094336785490313], [-1.1434969912500685, -1.6475325829008034, 1.4655718700320668, -0.24392023524875445, -3.688270060024519], [-1.0446492510970204, -1.7719325478661307, 1.5503269078565223, -0.34669443351423573, -3.634322814699287], [-1.0374333838158158, -1.7051472249958737, 1.0099919390125314, 0.0005623704944222319, -3.7592038707479425], [-1.1031076758670886, -1.5442002005611548, 1.1557260053434286, -0.18996422518073536, -3.695058744287912], [-0.9419645982151137, -1.6836789618701784, 1.2723904550457712, -0.17299716100295678, -3.7465773473659936], [-0.788583764608374, -1.4255249323800847, 1.637873011635467, 0.3896940927647623, -3.756001220718177], [-1.1296375022507479, -1.338600210457211, 1.4080088175990508, -0.0565903823702365, -3.8147306905519787], [-1.1121764863314427, -1.320832006188386, 1.1834919837077464, -0.1575191022607024, -3.9206130471247906], [-1.1234642643617552, -1.4916513528773523, 1.2875157965253596, -0.3169857647842094, -3.7468790581499722], [-1.0268533555528656, -1.8112883766398749, 1.3468239924391796, -0.16627584790055724, -3.9519556067583244], [-1.2623143651273225, -1.627316686526702, 1.5434509833612378, 0.14739868166383013, -3.8073496324436014], [-0.9558632397093245, -1.6061182349284102, 1.4597780579462811, 0.41182560344394636, -4.106214244245108], [-1.3294338911605563, -1.5672668539864143, 1.6833567111105219, 0.2617178435257541, -3.8962526150816865], [-1.004540679557845, -1.6547952963448413, 1.786681855061336, 0.29523856934087017, -3.9873386405624704], [-1.111029748554483, -1.629056628794616, 1.2671120688052113, 0.3871485314150088, -3.946253372761961], [-0.7610651468063482, -1.4941204804370667, 1.923338192931369, 0.34740900231275196, -3.7228100883449353], [-1.1626665181039746, -1.360767172551853, 1.2219205477402963, -0.12707341075475023, -3.9260421668140064], [-0.890768112001605, -1.4233331256929591, 1.312210525548267, -0.2369702322386853, -4.046108309595699], [-1.0619300864987977, -1.4152116896866291, 1.402237681761218, -0.18822233036697167, -3.712860145576831], [-0.5467777879621069, -1.2981164381083188, 1.3140480957252978, -0.5698732227669462, -3.7317632595369226], [-1.4208412938592168, -1.7583685672142066, 1.287593835983251, -0.1005504862432734, -3.9749537817155542], [-1.2169416366410624, -1.561755242629901, 1.3244592858603474, -0.23234222221420836, -3.907450985168019], [-0.908919163756557, -1.382523014893913, 1.25642761056523, -0.268641342563228, -4.028948450356299], [-1.10856656393792, -1.1843959433184301, 1.4225699669568714, -0.21829239043066603, -3.987120326899514], [-1.2060344688501536, -1.5948580505900618, 1.6833899553870784, 0.9049581062839599, -3.680197007168335], [-0.7822040770339205, -1.502877391577385, 1.5156801135056708, 0.8710823810395687, -4.136589325762501], [-1.164768919418065, -1.1615154377472727, 0.5795694049096245, -0.49004494810994714, -3.7455538871660323], [-1.0801835082212161, -1.6980765954778134, 0.8326413995739741, -0.12277579091423191, -3.748557504083813], [-0.85971508959248, -1.3725450765467129, 1.9620845323885385, 0.14038622171054593, -3.7542409402674677], [-1.1684957615992788, -1.56337835729593, 1.88405735272284, 0.07316206256821461, -3.937166225928485], [-1.2196417838278688, -1.7405288143699138, 1.1461390082815983, 0.09340330202050734, -3.9765051085075744], [-0.6734578326483608, -1.1837344604625983, 1.2459626679990006, -0.365272403919661, -3.727992382422374], [-1.3967013374236605, -1.791830237943849, 1.225860159077816, -0.3946174674316437, -3.9304187994624256], [-0.6233252559618886, -1.2140488967967034, 1.5201575658692184, 0.3733622485002643, -3.679212448238167], [-1.3647446539462418, -1.7364994947834254, 1.4611370503949013, 0.12841899868509632, -4.01262517851753], [-0.8936118466551956, -1.3169255526427457, 1.6530114890167908, -0.2067010142918187, -3.961905031231267], [-0.9680147502761753, -1.206459605401191, 1.5802190678389056, -0.29432122330912225, -3.93521312893662], [-0.802707835927875, -1.7155073831072507, 0.9484235406679106, -0.39205536634846105, -3.851582379296826], [-0.926358301972836, -1.011821996908629, 0.6429763623243941, 0.03950707449382673, -3.875162677020929], [-1.2141377605712367, -1.50697712643097, 1.8971077542790593, -0.053906536661537885, -3.799776770384453], [-1.0463769121617008, -1.7555811333636622, 0.8147109525298181, 0.2607053048248509, -4.016123513930769], [-0.7865890515684774, -1.5667811858695824, 1.6374893885894022, 0.2636143382798794, -3.8113433539682786], [-1.1678732835680756, -1.7643731176073074, 1.5641921891132358, 0.6883842190428099, -4.072791090336839], [-0.7408531161507839, -1.3054482701560497, 2.0849183759811374, 0.1803652226032764, -3.6999321112427284], [-0.8678056227807797, -1.2833086928201878, 1.7266297967880881, 0.6434550376520378, -3.973160602768877], [-0.8457335281857973, -1.3711295866977744, 1.4422719605315808, -0.7477699125844008, -4.029664215196146], [-1.0221293332564438, -1.6112653479989607, 1.4232303409756424, 0.8289093081188135, -3.8956958348129933], [-0.7836100475240007, -1.7296727163875911, 1.4652066180622951, 0.8334260932831571, -3.7372295693124884], [-1.4007383958715935, -1.467639000913669, 1.7816395378986034, -0.08021163346245813, -3.9629878480430123], [-0.8409430008471699, -1.4727639117168987, 1.120173630317183, 0.248526646427922, -3.5109451899718334], [-0.9040225601086848, -1.4428070290229624, 1.8093053607618264, 0.13333633535877362, -4.052862052887157], [-1.3711485931506062, -1.705793652350788, 1.2130097449281572, 0.29029446887092175, -3.811078639694738], [-0.7225270696233006, -1.290003952751633, 1.8934710225080367, 0.3097489081265347, -4.025950711496084], [-0.9996298636064326, -1.579508925292041, 1.6945124657259838, 0.7055471886433141, -3.9761251635941606], [-0.8341258659026173, -1.1196209341377754, 0.8992240403321313, -0.3320763900904579, -3.678993828977939], [-0.9641275120772079, -1.1651341906864465, 0.7942624775509962, -0.5603122989929192, -3.7355461259786455], [-0.710488475984681, -0.885963816947762, 1.3659125338568239, 0.7989648934736104, -3.7830647877866297], [-0.9291439966244077, -1.1837162459423365, 1.5905604807385947, -0.32021685652519377, -3.758232353341764], [-1.032343197197701, -1.2476372482893368, 1.4666269421075702, -0.17238175726778068, -3.504696614954644], [-0.7268334462177481, -1.3727301873387874, 1.3403847272488039, -0.49289341599039393, -3.854592235932667], [-1.0971182521557599, -1.5058296602641017, 1.1152887523605504, -0.040173494597736836, -3.932700950461946], [-0.8724504854463626, -1.323595933168443, 1.2205692165563355, -0.0506978993447047, -3.62504401468307], [-1.1861106611596284, -1.4487698047263553, 1.434741992646605, -0.4628179996655198, -4.082540154233175], [-1.0890488718978666, -1.8539610405642095, 1.0533806890830686, -0.6543700516369608, -3.677255985292847], [-1.4453682047833651, -1.6774160418964574, 1.973484911664334, 0.8268518102610783, -3.610501879452051], [-0.7927699475936686, -1.1926814797428573, 0.847542232523911, -0.3535739807764602, -3.730359408425124], [-1.3686963973680897, -1.4792797613308502, 1.5031847936285347, -0.2212342975634981, -4.095699904781389], [-0.9215760605208574, -1.5639604155914297, 1.3807102879929272, -0.2929020244561246, -3.6636481355594817], [-0.7625109909019147, -1.2630270462703408, 1.149776863029342, -0.2809923328749562, -3.7689916617577963], [-1.1609883236291656, -1.684834853120443, 1.6700244358435279, 0.20021209489062994, -4.122816202890394], [-0.8395512413546342, -1.3773360265374521, 1.4362483065029121, 0.5284719201360386, -4.087967722742969], [-0.8391319873340229, -1.379820200912982, 0.9637584075544648, -0.14493249854562087, -3.685797687233344], [-1.2697630266668707, -1.6651758824690193, 1.5381818822516424, -0.33028750239399723, -3.8137275632227086], [-0.8588117232882905, -1.4357671116082333, 1.416142531422296, 0.08505054733034406, -3.9301454878771644], [-1.147822034112236, -1.5683126281772743, 1.3567356149096668, 0.5927516844311499, -3.683278024860118], [-1.0382813173988406, -1.3655523753632277, 1.4106599306877847, 0.5000532721088872, -3.899248697811854], [-1.059298615011054, -1.744263510429332, 1.6179066942025828, 0.02698167360787712, -3.599494466431045], [-0.9274843070525479, -1.323005066422082, 1.0012768252850306, -0.38158452473013, -3.8980302645112648], [-1.0624175242564926, -1.271261882095148, 1.1782825034821514, -0.1364318969400165, -4.06406658684358], [-0.8476874569974954, -1.1868579889818298, 1.1401162370742706, -0.32360677909813945, -4.132773761315838], [-1.1591878768732613, -1.5928755316439733, 1.029354485479806, -0.9463000431430562, -3.9297923601178004], [-0.6777945782621928, -1.4349912920816525, 1.4082280551451667, -0.0426265328721826, -3.7107787009316073], [-1.2795801296704967, -1.9027346704131702, 1.1882748993072045, 0.2146300784905717, -4.166114687219093], [-1.5202014940240758, -1.8791809994057898, 1.3801834445389967, 0.09048419923099353, -3.8143094699199147], [-1.508486977131491, -1.7698786429107414, 1.3732598002888674, 0.013510306323078994, -3.7495443560288853], [-0.8991389488015311, -1.5630531203995326, 1.2503159298257631, -0.001058223392079928, -4.134924883870818], [-0.9381392084624476, -1.580931402990656, 1.1508204983792065, 0.08769161231125797, -4.0047376606570335], [-1.0620649475436386, -1.343224890450172, 1.6108073592118033, -0.3969893817956408, -3.989748555868126], [-1.0241995463940263, -1.3798218570197498, 0.960381525947204, 0.0006947255269856567, -4.0075894043648566], [-1.0854178814741602, -1.3818297790273493, 1.1175103141879612, -0.33944455382683547, -3.984795664765094], [-1.1843275475000226, -1.7170076415923616, 1.3836708222391474, -0.3666309282202951, -3.7700425108450264], [-1.3159353468318644, -1.9287370914483215, 1.1084151219889926, -0.39079448756730983, -3.5859947029309005], [-0.4612415457297971, -1.1826833734117357, 1.296705815962333, -0.06045430464788587, -3.434220201366981], [-0.8908830232439737, -1.7082875979310947, 1.2434115838322106, 0.2503894227722633, -3.8773664767356495], [-1.2453214734258506, -1.449606819663998, 1.3362553222020428, 0.0003477462223428762, -3.9487156318235535], [-0.813135855513274, -1.1732583156578833, 1.6269819510972023, -0.2728021655040329, -3.7067680607312807], [-0.9057080906943589, -1.5315571276613025, 1.3090072015314973, -0.1744760542868672, -3.7836169749452755], [-0.8595952332380705, -1.4226380276184596, 1.490496888765, 0.11762362627236858, -3.865061113305115], [-0.903612767417056, -1.5423701693668486, 0.8351651573143533, -0.12805390628864255, -3.709727638367645], [-1.2037415939462395, -1.469660144397102, 1.4152173353136188, -0.5440764585249719, -3.931569974994826], [-0.7998507235180782, -1.463674189410938, 0.9399724424295056, -0.5328221390444073, -3.8077748053201192], [-1.094342230540513, -1.5621870898250212, 1.5610374512454048, -0.12589656370728242, -4.036924579827857], [-0.8338323884473547, -1.3099027464399358, 1.4365767247660242, -0.31823531719292325, -3.960921434956968], [-1.12825060184807, -1.223295900070424, 0.811188883476302, -0.6004098911317308, -3.7030798954002235], [-0.7294802242479985, -1.3325545993070333, 0.4522497408025317, -0.04882295150244681, -3.852807106384725], [-0.8425996751272696, -1.6563841962746633, 0.535626143871294, -0.03472705977557061, -3.7318736756473037], [-0.9601488601344973, -1.2375135493695142, 0.6672151227201163, -0.565101233347092, -3.992751481654253], [-0.6736794581360046, -1.4018195453122573, 1.3792236871141017, -0.45590206438424513, -3.641413943916087], [-1.268680723935367, -1.6400981936092578, 0.933538602231539, -0.12671402107597965, -4.120729549097199], [-0.6813212704758814, -1.094643559713723, 1.4431563585704543, -0.05278101976140953, -3.924322279123867], [-0.6444250821608267, -1.6985690098951758, 0.788898689029909, -0.4076536418624271, -3.8071410035290736], [-1.1150349434778457, -1.1308971758200106, 0.7989092000772368, -0.337886997599276, -3.915207854766377], [-0.9736141002066605, -1.2825388339981685, 0.867944628928766, -0.2543427768475138, -4.021816780519741], [-0.9984884558768188, -1.5137537278825626, 1.5251309879324264, -0.38624841088204753, -3.67567967563121], [-0.9370520850011455, -1.5422096055252434, 1.64591985582358, -0.41646207692923926, -3.734825852468158], [-1.03925863119306, -1.4425969745666587, 1.3291820659226348, 0.1632202688319317, -3.964872331368504], [-1.144325668323553, -1.3607273914891345, 1.3242105843613192, 0.04269083872250223, -3.6428956636589196], [-1.2292107020938017, -1.465264562192255, 1.2336992950712773, -0.47314653103671905, -3.866668907026891], [-0.9513131785467895, -1.6994971264952388, 0.8606910946363326, -0.20336958399391772, -3.6081231106470737], [-1.282194914900588, -1.6619174719240548, 1.4387285534542533, -0.32393041209685425, -3.8410863576686145], [-0.8936490540410698, -1.5255747449161596, 1.3216853006993747, -0.16056554230578568, -3.902713286177115], [-0.9472031750853438, -1.12114579297658, 1.3898491414760115, -0.03456761069263019, -3.788979033100354], [-0.5709400846500524, -0.9624477994483744, 1.6845226130870312, 0.2559184550728495, -3.960879870744724], [-1.1755718962999389, -2.041459945646635, 1.3319801493978494, 0.010732058251580356, -3.7594169328180156], [-1.2351347611379597, -1.5978354352613746, 1.5998760552782056, 0.01752454591313975, -3.914729918762563], [-1.1026735887315273, -1.2915632053891835, 1.5510503122444042, -0.09385447440102354, -4.115285122082752], [-1.3907384340814142, -1.3462234811381297, 1.2276785757607027, -0.2112389793494529, -3.7303980643971344], [-0.7511126827910047, -1.6922639026854565, 0.8701909867050699, -0.4770863106765698, -4.086786879680073], [-1.1279826982237267, -1.6416653874073448, 0.7884922849218301, -0.7575799535533008, -3.8297478978146784], [-0.5733439786286323, -1.0604481474295462, 1.4337980060610962, 0.11742024343956792, -3.7161398202999565], [-0.836056447095652, -1.436253148231006, 2.087981147490374, 0.038058068795032596, -4.092204208347104], [-0.7255381855502072, -1.6591713064509068, 1.0808883149634285, -0.20056871022719522, -3.865723818422373], [-1.2411871001426888, -1.4779340228434168, 1.3484907834565605, -0.05472146015266746, -3.7217839716763326], [-0.8399050426637136, -1.7440014226113927, 1.7500770135167945, 0.25167398140733466, -3.9769583554199905], [-0.7809849112049528, -1.1483547270396215, 1.8033675970447707, 0.3821329220340067, -3.8182353283274266], [-0.9653668745434449, -1.5383529842788255, 1.3884152014976807, 0.20979566942721029, -3.7945606112214887], [-1.1387962340133062, -1.5728493950351812, 1.6993776160484277, 0.4255242982740635, -3.853233955365552], [-0.8424459928149419, -1.1341895882810542, 1.0355665178503721, -0.5574020114182363, -3.6125428596584097], [-1.2222924540515019, -1.706123506615235, 1.5438139530213904, 0.20309991941032474, -4.104997372832042], [-1.0997795650925133, -1.4625524653593485, 1.2120977602654268, -0.7583873929734508, -3.8602602286172143], [-1.0425263440235082, -1.6027069756213475, 1.2528647976760465, 1.0331353956344838, -3.9401812893826054], [-1.0770834332006194, -1.6051591290235008, 1.923037051397074, 0.6867614529160334, -3.8411183327003062], [-0.8306785629977019, -1.3724839101363038, 0.9556829749361834, -0.527854435004687, -3.771157054911655], [-0.6877309659944905, -1.518415638662526, 1.2867800289556195, -0.3589154651498257, -3.753611264434026], [-1.280445299580511, -1.6654144479121238, 1.1693235891900606, -0.3634711939373961, -4.099747666116144], [-1.3283106299187883, -1.5402255106369611, 1.526972142419346, 0.21961131051953595, -3.7237096691151232], [-0.9481691886173804, -1.7124872525605617, 0.8433917630713187, 0.03953605276087263, -4.070972625413471], [-0.8848634384322237, -0.9996813119850576, 1.5318625280816265, 0.3309621271552595, -3.5832489396416625], [-0.6064526477644732, -1.5219478883379949, 1.4873688013871869, 0.35269462717600797, -3.8388178624303597], [-0.573685143325945, -1.6629298313817407, 1.5574275512071905, 0.2693160219416013, -3.8630119445435165], [-0.9623168111570112, -1.4615832129114104, 1.3414685963732589, 0.17475843063042718, -3.645887572997922], [-1.1286800537743633, -1.3220114811110946, 1.2123095293819615, -0.3126398704698291, -4.1118776319343], [-1.2474317542571967, -1.928187979880726, 1.4326374852810524, -0.475343329932746, -3.8339897227592936], [-1.0107530255069008, -1.6031093777674301, 1.4180937898083132, -0.38054287412193977, -3.6401423467645797], [-1.031745815417401, -1.5330480305642844, 1.3819086279163422, -0.22267040432663882, -3.71186309543583], [-1.1102419802982366, -1.367805348838957, 1.583765670988126, 0.5255752887373596, -3.875400949265306], [-0.6298280647951364, -1.367009548810227, 1.605064604776477, 0.015459782449498277, -3.6543724228640007], [-0.8144383773964179, -1.7782068312399562, 1.5583592583366923, 0.44679341078437906, -3.5958932204605496], [-0.8716090981543465, -1.4299345493742783, 1.436986281863405, -0.011368318500423358, -3.9862908206346357], [-1.001421546257007, -1.260358047884138, 1.5003939204874268, -0.01768243024894503, -3.7837472958065694], [-0.7196123593241598, -1.0597116580982728, 1.3357296164696737, -0.3592521385865366, -3.875080392431754], [-1.3652303829153811, -1.7425928115651765, 1.1564366644540414, -0.23416402670956282, -3.7496758013568146], [-1.4077500358553232, -1.5160904428896977, 1.3861498851882978, 0.1472114061449142, -3.9441630855334173], [-1.5308819139969807, -1.7046156502403544, 1.5997747881214412, 0.1507240033916093, -4.158011926338432], [-1.3609201688327786, -1.3283994437879314, 1.2358110644670337, 0.4468929192780902, -3.9747039618046527], [-0.9403519453947726, -1.9705944859904942, 1.669935897968633, 0.7920317488831297, -3.7896450553945673], [-1.3727968478595503, -1.3135125388959639, 1.922302188505929, 0.506552233244183, -4.0610186196187055], [-0.8675286215542382, -1.6321209890612223, 2.09052153963075, 0.5790412680352189, -3.8663178216325496], [-1.1542347622996114, -1.4680099270984035, 1.213891087065184, 0.09033066050334831, -3.9813285425948037], [-1.2664266450924362, -1.914773685317382, 1.1453277372638013, 0.41382345281512023, -3.8872781997826964], [-0.7823275959925589, -1.2665210311302868, 1.844686900623451, 0.4414805305622986, -3.792069390169301], [-0.7801369820524994, -1.1698546440964273, 1.5972843271269521, 0.14866670610614535, -3.6367614499620866], [-1.0806985931833006, -1.7346138162584657, 1.2980440544911684, -0.2763326590758347, -3.908840252203277], [-1.0712431902582351, -1.267610647271794, 1.6387754547135578, -0.3065295592909665, -3.9420649860930115], [-0.8479404894992866, -1.5907312056565084, 0.9837369057129142, 0.3782929302788495, -3.641133287272606], [-1.0653662061057714, -1.5469510597176686, 1.060572857572388, 0.2813623090231999, -3.968226202852598], [-1.5466143286651632, -1.813826587895864, 1.1926517051528502, -0.5346439883887608, -3.982327917278358], [-1.07573466064706, -1.5848477611812413, 1.242085941041303, -0.14155723344168236, -4.006173395392677], [-0.9206554043755648, -1.5460852052625293, 1.408695485532569, -0.6771004419134681, -3.9335467141643123], [-1.208539144050039, -1.686258445156816, 1.0229380404298918, 0.05364652376406076, -3.808704914532803], [-1.135324297293915, -1.4903637943509453, 1.1633131330961888, -0.1808079076737087, -4.097741236959638], [-0.7600085724932615, -1.4059944578781969, 1.2005026662537313, -0.2587812161455598, -3.859779848887433], [-1.0682310381805231, -1.6024633108179474, 1.1665808640305402, -0.508653478106775, -4.00654902287305], [-1.1009188656203956, -1.4406424327717788, 1.233682027822075, -0.16776545543667246, -3.7865918630266675], [-1.1369756368728026, -1.5047992344907828, 1.5471230728014678, 0.0382487031794784, -3.8336600371352145], [-0.6586747548139171, -1.4283937764583865, 0.9830670675761837, 0.2153528049465297, -3.759883129886101], [-0.803227747418049, -1.1531287982714507, 1.5599822312846123, 0.40223852290891576, -3.8924665321360434], [-0.7783599761555355, -1.56978018387522, 1.8398362636476062, 0.6297933621279767, -3.8662528871272386], [-0.9525083350867978, -1.1765566027540404, 1.845929029772142, 0.7070713280521537, -3.878756103702749], [-1.294821039305741, -1.3576142548474022, 1.4273450851715423, 0.6810533032919048, -3.9452738686946804], [-1.3175367255266035, -1.8634439689122684, 1.4738386935463712, 0.9249510631954108, -4.217379486147883], [-0.7753703722689569, -1.6022116055340097, 1.6651702185597055, 0.13279214241615955, -3.841893590208291], [-1.0895643827770782, -1.6853705257272746, 1.0321030591328766, -0.42497481002849036, -4.020423174409886], [-1.4172512478851929, -1.6580029108615235, 1.0001762617244638, -0.2315205040610035, -3.91637753634351], [-0.8066781864733943, -0.7828193356193756, 1.5165863259104102, 0.6944347865050163, -4.015305629680193], [-0.7625967104964886, -1.008979774628445, 1.486615149426627, 0.47284801712958957, -3.888749093583339], [-1.155383760521305, -1.5790874075983579, 1.9200979286558106, 0.2957962671816271, -3.8204170453534454], [-1.0084208672618336, -1.584456372132909, 2.015875128471059, 0.4033604067999959, -3.9771839818324604], [-1.186544827215795, -1.3669669976849121, 1.3743450253971035, 0.3076830378123421, -4.033022950035883], [-0.7612036609570658, -1.579584453971847, 1.6699200526396842, 0.5779559817372907, -4.102146633063415], [-1.2051733939448765, -1.3831984546551033, 1.7311852787618205, 0.6461786813145878, -3.9815747420541356], [-0.952054783267803, -1.8224689016383357, 1.4909874222534543, 0.5457889135197587, -3.7727283102351556], [-1.5543762332694626, -1.661434405303674, 1.71642706591246, 0.1885907250305694, -3.7630834697265287], [-0.6585605612495479, -1.3979516726398118, 1.4543946955108225, 0.4876576026910904, -3.94176009008926], [-1.2738418404051237, -1.5408560016998418, 1.354236872166732, 0.4124426908663666, -3.8602072072678966], [-1.1062676909187739, -1.8325426851642759, 1.2314845888286725, 0.44606617119705183, -4.1444763758308865], [-1.2858774764493934, -1.6040506556859697, 1.4332490673710727, 0.4429776925015744, -3.6435876963249147], [-1.2084136056216583, -1.7858080523631326, 1.6148900057127968, 0.3895835558476455, -3.90532867684318], [-0.8010639560536307, -1.1704210879008925, 1.6090626857691552, 0.7975919513017983, -3.9882146322854966], [-1.3401509966454905, -1.6158753916332624, 1.6759261639139742, 0.5811546195708759, -4.149682346311441], [-1.3794340655007884, -1.7501712556573703, 1.4442029196777857, 0.4484039776695651, -4.233301335130399], [-1.5170487922065015, -1.6882224378424677, 1.5894099890483722, 0.6412005438699818, -4.237507209915347], [-0.590074365539313, -1.46418800687165, 1.6147761626306887, 0.7389513282808778, -3.5722368008903818], [-1.0281163070292103, -1.5040093741870146, 1.844949108028408, 0.942972519970036, -3.321649807510476], [-0.8739942210170845, -1.7988693988608864, 1.249185931144092, 0.9502489816337247, -4.136544061818055], [-0.6930974543363562, -1.3512888836085502, 1.5238290699646049, -0.8260568097567702, -4.039501484954017], [-0.8843382839450362, -1.816601840892234, 1.1631095980608788, 0.6521657989593861, -3.8516610500868382], [-1.2798639327944699, -1.5100131354106978, 1.844165159030267, -0.03797558457551001, -3.976657853214865], [-1.0166132946989888, -1.6070190203718004, 1.3830809007534646, 0.033170560325450286, -3.966816559143824], [-0.7992380080998372, -1.1630064057529816, 1.5168788574561385, -0.2121242853669674, -3.61781428266629], [-0.9759625873740716, -1.6310036430290924, 0.8637167945623596, -0.08705333927958821, -4.123875928954476], [-1.3696409139024426, -1.7076389426257412, 0.9311352013424139, -0.3913764896013145, -3.7718008651990296], [-1.3165704711403496, -1.7409913491444136, 1.3223527740870815, -0.5844580504341964, -3.9250439227079683], [-0.8100556295691447, -1.1545969359086605, 1.3867471801821207, -0.38885385428355973, -3.7664578739338985], [-1.4142153067546244, -1.8404645299861013, 1.3991814882326052, 0.20038391557936147, -3.7927028489644696], [-1.1028243273700906, -1.609297580397151, 1.2765646967364341, 0.09418431866427336, -3.8649935845343233], [-1.0912002900313893, -1.7156276683751273, 1.4859580915255048, 0.11483770233763992, -3.9966947199724987], [-1.2219313099849671, -1.6893106546891357, 1.2661285578002408, -0.01911347858865596, -4.101124062037762], [-0.7315506022331476, -1.4038476778925468, 1.264354487702235, -0.42681055825970293, -3.959373732332421], [-0.972382560784172, -1.3083093347077237, 1.5436666014456728, -0.18415761619536195, -3.6084091614982317], [-0.9355383465794902, -1.462207691893013, 0.8656554146243394, -0.6270220081629856, -4.099284586758135], [-0.9531035818282705, -1.4948529756627957, 0.9670185957330205, -0.6228274440023335, -3.856871925590598], [-1.128580420833719, -1.4542467425002925, 1.6793554150626735, 0.30620659909301284, -3.91038004933423], [-1.0036872744666294, -1.402278258149642, 0.8188664904480449, -0.5472903885853732, -3.9444324312968773], [-0.9100073089737252, -1.3392845009859637, 0.7755612386307509, -0.48666010871713233, -4.025917235425878], [-1.2396699561778926, -1.7167244054349866, 1.097310915184246, -0.08341644002033094, -3.7592165790829375], [-0.8214408257813929, -1.3944756971582208, 1.5294426685261717, -0.5934524567423201, -3.77641940275821], [-0.6829736365328227, -1.7056429737317265, 1.5927784596666639, -0.5782247910761569, -3.567299039963062], [-0.7517571008388205, -1.6853790084712637, 1.3201049967172156, -0.6429162812872599, -3.3822934260766595], [-1.148765430646148, -1.5268590960829747, 1.1954585381582168, 0.19432323611838442, -3.937741668427588], [-0.8894409746339574, -1.5539133351287686, 1.0807639423932345, 0.16802485554395608, -3.793547496615436], [-1.078591929508431, -1.489449787058627, 1.0195474349524871, 0.31952294423887884, -3.6895210718259586], [-1.1125777068044984, -1.413759011732664, 1.068867818725019, 0.344575821382659, -3.631898928098073], [-0.7211816294372332, -1.3850984571249525, 1.4137825907902315, 0.5387505265090434, -3.9223262056720856], [-1.4155265623406046, -1.8737385876063646, 1.3050395643459087, -0.14362322551089018, -3.7752019141722846], [-1.0713716672142013, -1.5586815553118858, 1.382588981226742, -0.25540022908763615, -3.774089146290706], [-0.731544870883698, -1.294249415399067, 1.5961838543568228, 0.6196147796420494, -3.569635711934124], [-1.208099735222418, -1.6152718991680064, 1.1444633985289223, -0.17497427239172553, -4.167825082217987], [-1.0559201482595189, -1.7410992924746893, 1.2975494335778355, -0.020751384613725526, -4.1206907515700015], [-0.8154762042607201, -1.2928288201172675, 1.5815854380944627, 0.12402368483583383, -3.7090278947420336], [-1.112030805140268, -1.3275630546176838, 1.2360309833390668, -0.6738609396048828, -3.9793240532416183], [-0.892884609937917, -1.55994895785591, 1.1706874283614646, 0.08835477988504675, -3.8293038023938784], [-1.0065732510707521, -1.4389572803421555, 1.4077660960058649, -0.20100262255598486, -4.1035292522851075], [-1.111746579878975, -1.8643289230175681, 1.3699888527383817, 0.3244947483973161, -3.7436291750523525], [-0.9497274565982383, -1.531953751418695, 1.5255480185954826, 0.40958192531398524, -3.8554041108657198], [-1.2995980122394173, -1.5887743985026546, 1.7403383683083593, 0.7961003170356445, -3.8003491145661474], [-0.8166210163926166, -1.3117225141907638, 1.6602937188163835, 0.623552849430211, -3.9016095242114655], [-1.2034831293775472, -1.5682405759714286, 1.3349645573970783, 0.29334259954963354, -3.9121176272052085], [-1.3380721078299944, -1.5824456112404828, 1.2949997527737152, 0.2862141733256309, -4.105309593541216], [-0.8997570306749632, -1.1006451255091572, 1.8597728463791652, 0.3204205264795025, -3.962273113616282], [-0.9749829161877572, -1.0733255977125395, 1.5283098804381599, 0.6208394760667947, -3.9819344389467], [-0.5842751985588178, -1.188385983689931, 1.8270099023845228, 0.588660212641341, -3.739839197287223], [-0.8240253993282726, -1.2999887098923617, 1.5633833861309494, 0.6027966075142493, -3.616251540245601], [-1.1936721439646287, -1.6165343214247183, 1.5717324365576217, 0.058156207088243345, -4.200462797969306], [-0.9808283422642632, -1.4633007466527632, 1.2843578080164302, -0.505529872128529, -3.7280181292181007], [-0.8671423626933001, -1.4987628729143663, 1.4600541227191852, 0.12079653420473696, -3.909989779993864], [-1.0338281806412084, -1.6975855449253952, 1.3130568282234425, -0.36156300112321155, -3.9993072980877122], [-1.0485812840802056, -1.2277000534439635, 1.0075551957732007, -0.23205603996524576, -3.8873157792816944], [-1.1361027684271074, -1.3134895650704927, 1.3996841447055948, -0.5700099766346767, -3.959750337926081], [-0.9608386671444211, -1.5881810328720884, 1.412798508325076, -0.6328873535022501, -3.934796092247867], [-0.9149470318335016, -1.1257071449733937, 1.9857807707911828, -0.20159982644558472, -3.880396870263591], [-0.8357675846868806, -1.3906502168424675, 1.7616184333792253, -0.16953206325311795, -3.770421481989107], [-0.8015876762080298, -1.5938469704751042, 1.1618769357544867, -0.01554512056931151, -3.736708382274492], [-1.2387986998003586, -1.2062276223294033, 0.8802321453401473, 0.035142068760798756, -3.824771157819514], [-0.9314528459659632, -1.2756832393554263, 0.960977030174635, -0.1957186563322697, -3.63252847098174], [-0.7912931168643487, -1.4238502029554374, 1.0889234268489802, -0.030704174145455673, -4.037608104512489], [-1.098982276262656, -1.4804455840681863, 1.4544824849129065, -0.36135069152233656, -4.274426303257177], [-1.0144123529335498, -1.3894349120348557, 1.2728341510061454, -0.3578224316036547, -4.362541996188536], [-1.024998030583863, -1.432888158236654, 1.391953234985341, -0.2576282754737211, -3.841529228330705], [-0.928169846807054, -1.3088021441920639, 1.6260755492489638, 0.8254944608132593, -3.7821807080428895], [-1.2516831957602852, -1.8459723211559924, 1.4410226552454009, -0.048886008481221405, -3.651341954243889], [-0.6251501823689809, -1.3721817769986884, 1.1082216152504285, -0.5544725793201153, -3.679204943935172], [-0.8437499127503364, -1.398260866427319, 1.1152370568504466, -0.5025262735212103, -3.567361292089365], [-1.2298024465350297, -1.6962395361866358, 1.1060045176864417, -0.14500493843844747, -4.250087635426643], [-0.6007321801871013, -1.2327529286160626, 1.347149773226769, -0.23799869731725867, -3.6483792736670018], [-1.1344457271769075, -1.3857320361876608, 1.2648870344014778, -0.37320577753844425, -4.024252681234594], [-0.8791761640800001, -1.614084787401239, 1.2687166383272253, -0.040355098476049706, -3.893481496239908], [-1.2936696486726067, -1.6578710008750923, 1.4255865828892, -0.4781655126875404, -3.938961150923791], [-1.0245911512996462, -1.5245617852787954, 1.3121824895010787, 0.1280851212576714, -3.9332732597955284], [-1.3109876416874053, -1.609439689736284, 1.5471934029518173, -0.03133758840951577, -3.8254316393158763], [-1.0741136049629794, -1.5038204857360649, 1.490352738587151, -0.02455326376680226, -3.965784042945876], [-1.163980886414896, -1.7872319550891447, 1.363835338576132, -0.19680949833326636, -3.923075336159108], [-1.0312791519514632, -1.4730842284797265, 1.298997208276205, 0.4152778257451484, -3.9547422369256524], [-1.048624806628721, -1.5057578781941627, 1.2280514202612463, -0.5946266067214258, -3.9135925476369002], [-0.9681139991306259, -1.3088584452974426, 2.0397069788803375, 1.2203784438277787, -3.72122135310357], [-1.2271047616877868, -1.534282907851282, 0.9179898020959554, -0.7281100832790548, -3.7006311081991408], [-1.0281886949903112, -1.5323447816015943, 1.356284106567176, -0.42291765832259753, -4.2409042174865], [-0.9696244029265799, -1.4049784411214536, 1.5108788222319556, -0.2664490265725069, -3.7500361977971157], [-0.8497364778978064, -1.425030173392748, 0.9863861435598656, 0.7758337658445111, -3.8098136198378367], [-0.7183984491179912, -1.513873905155233, 0.9840985720555838, 0.9304656008850408, -3.4628552469586165], [-1.028178677130305, -1.2989460120098202, 0.980182727364244, 0.7653664657926689, -3.420308553787735], [-0.9133323221312649, -1.4854394250474525, 1.0429322473452447, 0.6941053725240931, -3.5149396800264876], [-0.7610879483197875, -1.114319489294517, 1.9024543899455377, 0.28018862960920965, -4.0926884357752575], [-0.9422675284400568, -1.5782483934774945, 1.278065681045675, 0.7905262842328153, -3.5515197704339654], [-1.390762850284568, -1.5000333552505332, 2.0972338025429322, 0.7014774733621674, -4.138731922341809], [-0.8454308366021386, -1.5745338440859178, 1.3353341254118072, 0.2896257430799122, -3.754736150716199], [-0.7672267397837487, -1.1830386383565452, 1.5563687096835646, 0.36263910992424936, -4.037734687055813], [-1.1314367119718558, -1.67429176656894, 1.611822499602206, 0.20723448516285614, -3.492551719049664], [-1.0392101775841993, -1.6782813067250046, 1.6493650443459476, 0.26025897029802036, -3.559406463673234], [-1.0701565889593976, -1.1176067780707306, 1.1545873522350552, 0.29588619284219436, -3.9403768646863035], [-1.1372432120233233, -1.2286087530639092, 1.3354122537080662, 0.06750171885096656, -3.9158521233208083], [-1.0386510713441859, -1.5245981082801927, 1.392422349804769, -0.28389837541619645, -3.517214478274836], [-1.013902765402961, -1.2386368906405192, 1.3683326397855153, -0.4870127458337794, -3.8806936474282914], [-1.099260062639035, -1.4294964636472993, 0.9779828737217044, 0.22041016367611937, -3.7539914012467372], [-1.0421185748082806, -1.5239975628016207, 1.0862666725529748, 0.2622473905454507, -3.6249042099043782], [-0.9973640783775549, -1.5008654065164855, 1.381508534258406, 0.6405255754553232, -3.8570690293464462], [-1.0853394188074155, -1.5607217370802364, 1.4546325803255091, 0.5419588577236583, -3.9409097489158578], [-0.9020963131756679, -1.4651948767592229, 1.7885656851080105, 0.5778905106396125, -3.872111179742648], [-0.5536729604595707, -1.0449715472270749, 1.2513296231636553, 0.37930887691421716, -3.7993750151344132], [-0.8702325175232498, -0.971446476740727, 1.2980798099337219, 0.1450844966368636, -3.8186943316249033], [-0.7971757766081864, -1.75054165946239, 1.7750647784382463, 0.11875182093598129, -3.779698920578709], [-1.0216665422968476, -1.774431329042776, 1.4108158802987099, 0.7100263413045718, -4.153836258585228], [-1.1051307718504546, -1.5566341888930566, 0.6443126924669752, -0.35845971675179683, -4.133968047318092], [-1.3274963552888082, -1.833679475974226, 0.40646409846680365, -0.026071851994288645, -3.8814723899436347], [-1.742437922338394, -1.9692060966830423, 0.4407639882702907, -0.08270171551568503, -3.8411005088643657], [-0.5068613530208086, -0.6373232656274999, 0.7422670421518456, -0.35184975921756206, -3.708225036573484], [-0.9177407967322522, -1.3280795040447213, 1.1519533738953507, -0.2517309063506549, -3.984730134440551], [-0.964132293361758, -1.2598927863179643, 1.2933662579812786, 0.005268510928400499, -4.113306911572142], [-1.220019276260591, -1.5870078957416143, 1.7003462169007073, 0.5053384558291758, -3.5552902553079777], [-1.0607035945446441, -1.3137854782665148, 1.19021595059994, 0.01798233688075801, -3.7382048223583073], [-0.8737819691308956, -1.5813908163272754, 1.1022128938723175, 0.04945798078559243, -3.7439244378771206], [-0.8987472124807373, -1.7195590966837562, 1.1666513021926859, 0.03992600236528845, -3.598598341634368], [-0.8866603543667861, -1.8375512559821456, 1.230210773624002, -0.009019165697363427, -3.546759447477132], [-1.0002758893847983, -1.6862645452315341, 0.8974138755797101, -0.04005872133485967, -3.687096796138097], [-1.2112506971269772, -1.5101203329976278, 0.9870888115528165, -0.09387269641277936, -3.972099951340262], [-1.2112506971269772, -1.5101203329976278, 0.9870888115528165, -0.09387269641277936, -3.972099951340262], [-1.3122051137746074, -1.6325799802313605, 1.6466778190826399, 0.4953146155011484, -4.003807402259281], [-0.5624684936665599, -1.0890449947640926, 1.4436520931368344, 0.36818490952940236, -3.7170882377638494], [-1.1121492551687624, -1.770697876270452, 1.3244243631797767, -0.4278017633439277, -4.011618692152318], [-0.6987907119296806, -1.4090903865978768, 1.1740687210014014, 0.13475892137184142, -3.84541523167005], [-1.2648490375860901, -1.5989775499228422, 1.667371160970951, 0.2831557147386713, -4.158332905165879], [-0.7482899245331605, -1.5531572373308946, 1.5907029290238384, 0.4614731491788114, -3.601238400990266], [-1.225420719550396, -1.5178533377915944, 1.8565777901784557, 0.54961645152356, -3.9912109832426657], [-0.7822664260121863, -1.3595094513932122, 1.591449090856719, 0.45966272106662187, -3.762715136249511]], NamedTuple[(n_steps = 1, is_accept = true, acceptance_rate = 1.3009030280627938e-157, log_density = -21.560525847581648, hamiltonian_energy = 23.2741427054062, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 361.2428009397749, tree_depth = 1, numerical_error = false, step_size = 0.4, nom_step_size = 0.4, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = -21.560525847581648, hamiltonian_energy = 23.656093682374593, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 1.8084234433721115e10, tree_depth = 0, numerical_error = true, step_size = 0.9340259163636535, nom_step_size = 0.9340259163636535, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = -9.369559774814604, hamiltonian_energy = 22.20217828247015, hamiltonian_energy_error = -0.2922406233105619, max_hamiltonian_energy_error = -0.2922406233105619, tree_depth = 2, numerical_error = false, step_size = 0.09209433883419865, nom_step_size = 0.09209433883419865, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = -7.101908959109071, hamiltonian_energy = 10.007801606989922, hamiltonian_energy_error = -0.07014241040702629, max_hamiltonian_energy_error = -0.42524771994519384, tree_depth = 2, numerical_error = false, step_size = 0.09591656221537206, nom_step_size = 0.09591656221537206, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.084451758714978, hamiltonian_energy = 9.170149305829879, hamiltonian_energy_error = -2.2640654245607426, max_hamiltonian_energy_error = -2.51480419971117, tree_depth = 3, numerical_error = false, step_size = 0.12973296357918182, nom_step_size = 0.12973296357918182, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.5800030330655677, log_density = 8.226057199009707, hamiltonian_energy = -2.656627161649813, hamiltonian_energy_error = 0.11647338679906127, max_hamiltonian_energy_error = 56.34351627067985, tree_depth = 2, numerical_error = false, step_size = 0.20288223145965867, nom_step_size = 0.20288223145965867, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.969021040979858, log_density = 12.345612831765866, hamiltonian_energy = -4.754267493505894, hamiltonian_energy_error = -0.36710662607181366, max_hamiltonian_energy_error = -0.38653765878292123, tree_depth = 3, numerical_error = false, step_size = 0.09544852235138794, nom_step_size = 0.09544852235138794, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9751643928910176, log_density = 11.345778718136396, hamiltonian_energy = -8.917871620854143, hamiltonian_energy_error = 0.04600287475869891, max_hamiltonian_energy_error = -0.24595560169934672, tree_depth = 3, numerical_error = false, step_size = 0.15182535716051462, nom_step_size = 0.15182535716051462, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.058407086482034694, log_density = 11.345778718136396, hamiltonian_energy = -8.833257045913934, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 8.691137064831633, tree_depth = 3, numerical_error = false, step_size = 0.2550958949571188, nom_step_size = 0.2550958949571188, is_adapt = true), (n_steps = 63, is_accept = true, acceptance_rate = 0.9985311269625575, log_density = 10.897729982673962, hamiltonian_energy = -7.986007063697192, hamiltonian_energy_error = 0.002124300154816794, max_hamiltonian_energy_error = 0.0059676943182287445, tree_depth = 6, numerical_error = false, step_size = 0.02420251736009961, nom_step_size = 0.02420251736009961, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.993097164692299, log_density = 13.976006837948752, hamiltonian_energy = -8.235952596391073, hamiltonian_energy_error = -0.019720229371129605, max_hamiltonian_energy_error = 0.02255803998312267, tree_depth = 5, numerical_error = false, step_size = 0.04502321469509114, nom_step_size = 0.04502321469509114, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9735191621770664, log_density = 13.77598563622514, hamiltonian_energy = -13.030454181865212, hamiltonian_energy_error = 0.035517204365326904, max_hamiltonian_energy_error = 0.060428845131863085, tree_depth = 3, numerical_error = false, step_size = 0.08327949982410458, nom_step_size = 0.08327949982410458, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9391293537013145, log_density = 13.700914346597681, hamiltonian_energy = -11.993317872447404, hamiltonian_energy_error = -0.13941949826148026, max_hamiltonian_energy_error = -0.18083850551261627, tree_depth = 3, numerical_error = false, step_size = 0.14551795854830352, nom_step_size = 0.14551795854830352, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.7535408319199632, log_density = 13.11616251495939, hamiltonian_energy = -11.532827242343462, hamiltonian_energy_error = 0.2661271312642306, max_hamiltonian_energy_error = 0.5278930139794902, tree_depth = 2, numerical_error = false, step_size = 0.22841297210530018, nom_step_size = 0.22841297210530018, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 14.638137428729834, hamiltonian_energy = -12.991687486547503, hamiltonian_energy_error = -0.12529265483778396, max_hamiltonian_energy_error = -0.12529265483778396, tree_depth = 2, numerical_error = false, step_size = 0.2007403106315292, nom_step_size = 0.2007403106315292, is_adapt = true), (n_steps = 6, is_accept = true, acceptance_rate = 0.0002660481135998309, log_density = 14.638137428729834, hamiltonian_energy = -12.290572071078277, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 5.744321843890111e8, tree_depth = 2, numerical_error = true, step_size = 0.3801462309158648, nom_step_size = 0.3801462309158648, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9976683203098493, log_density = 13.742882708406686, hamiltonian_energy = -12.496216958167807, hamiltonian_energy_error = 0.00337497894593497, max_hamiltonian_energy_error = 0.006459198969851698, tree_depth = 5, numerical_error = false, step_size = 0.03298785991323603, nom_step_size = 0.03298785991323603, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9970300106363617, log_density = 13.259838967519398, hamiltonian_energy = -12.408162069908808, hamiltonian_energy_error = 0.005505435664433733, max_hamiltonian_energy_error = -0.01653668034224509, tree_depth = 4, numerical_error = false, step_size = 0.06251182206125772, nom_step_size = 0.06251182206125772, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9898934758891031, log_density = 12.499154933576214, hamiltonian_energy = -11.608245831415816, hamiltonian_energy_error = 0.033144133181126634, max_hamiltonian_energy_error = -0.06371663823181706, tree_depth = 3, numerical_error = false, step_size = 0.11729717978703036, nom_step_size = 0.11729717978703036, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9591200667607075, log_density = 11.962318710400108, hamiltonian_energy = -8.264665423891625, hamiltonian_energy_error = -0.17153120939231137, max_hamiltonian_energy_error = -0.40696718516949737, tree_depth = 3, numerical_error = false, step_size = 0.21355206661254983, nom_step_size = 0.21355206661254983, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9899619960919867, log_density = 13.622443549163464, hamiltonian_energy = -9.945624555663965, hamiltonian_energy_error = -0.05570078809583734, max_hamiltonian_energy_error = -0.10416978358749596, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9195348650165995, log_density = 12.897944199073525, hamiltonian_energy = -10.865160187864834, hamiltonian_energy_error = 0.046112350478617614, max_hamiltonian_energy_error = 0.16229015104366873, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9810465667762092, log_density = 13.146425632558572, hamiltonian_energy = -11.094479634383424, hamiltonian_energy_error = -0.01184774279088785, max_hamiltonian_energy_error = -0.12138972536570947, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.825266800365509, log_density = 10.679206136688768, hamiltonian_energy = -9.637715242294444, hamiltonian_energy_error = 0.2666196950092843, max_hamiltonian_energy_error = 0.34272120184918364, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9972879003787144, log_density = 9.581149976020889, hamiltonian_energy = -7.5791163469632785, hamiltonian_energy_error = 0.04153213652733445, max_hamiltonian_energy_error = -0.24070049529507465, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9941025964413371, log_density = 10.029553519921208, hamiltonian_energy = -7.781163159424691, hamiltonian_energy_error = -0.043803022431285754, max_hamiltonian_energy_error = -0.2204215878448661, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9454243550568947, log_density = 13.636426339856744, hamiltonian_energy = -6.446504687472148, hamiltonian_energy_error = -0.1809360890150149, max_hamiltonian_energy_error = -0.36411912186534945, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9054428178071458, log_density = 11.567089274562882, hamiltonian_energy = -10.20345542880104, hamiltonian_energy_error = 0.08645277152438524, max_hamiltonian_energy_error = 0.195593477428476, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9544423520141196, log_density = 12.759081045314637, hamiltonian_energy = -9.601972532574688, hamiltonian_energy_error = 0.03137350634787239, max_hamiltonian_energy_error = 0.14904346692524761, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9839159720571864, log_density = 14.420220185001604, hamiltonian_energy = -11.507909243491012, hamiltonian_energy_error = -0.130804034767392, max_hamiltonian_energy_error = -0.130804034767392, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8131399094536731, log_density = 10.411209513027972, hamiltonian_energy = -5.291532379096801, hamiltonian_energy_error = 0.0903264262418686, max_hamiltonian_energy_error = 0.584205768152156, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.989354563580432, log_density = 11.956817381410824, hamiltonian_energy = -10.072199133640927, hamiltonian_energy_error = -0.21331835058747473, max_hamiltonian_energy_error = -0.4619897967166935, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9742431003397994, log_density = 11.310428577930006, hamiltonian_energy = -9.012450666581417, hamiltonian_energy_error = -0.07153279121184042, max_hamiltonian_energy_error = -0.1853178723106339, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8959873925818226, log_density = 9.514830831413805, hamiltonian_energy = -9.204784460641122, hamiltonian_energy_error = 0.2946364309054612, max_hamiltonian_energy_error = 0.2946364309054612, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9692302610438334, log_density = 9.56671976790315, hamiltonian_energy = -8.05161804098827, hamiltonian_energy_error = 0.09685150559221789, max_hamiltonian_energy_error = -0.2694408645624069, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 11.024351863186345, hamiltonian_energy = -8.803433622851223, hamiltonian_energy_error = -0.17928491726631357, max_hamiltonian_energy_error = -0.5564159066049807, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9231226608324575, log_density = 11.320783505284616, hamiltonian_energy = -8.413513948126795, hamiltonian_energy_error = -0.10928552346185683, max_hamiltonian_energy_error = 0.41244317070305936, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9094482221847043, log_density = 10.483174704181389, hamiltonian_energy = -9.738363315948035, hamiltonian_energy_error = 0.3705799215960077, max_hamiltonian_energy_error = 0.3705799215960077, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9968001732568101, log_density = 12.624741308311478, hamiltonian_energy = -8.31128889930628, hamiltonian_energy_error = -0.3919182308947473, max_hamiltonian_energy_error = -0.6179976996429328, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9995206846874998, log_density = 12.728429813678181, hamiltonian_energy = -11.933682959629937, hamiltonian_energy_error = -0.028520883546748976, max_hamiltonian_energy_error = -0.20390197150508982, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.882907469588662, log_density = 12.670247543007916, hamiltonian_energy = -8.768286867558814, hamiltonian_energy_error = 0.05208925748129367, max_hamiltonian_energy_error = 0.26726967975949734, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9904073712770626, log_density = 12.886073492462863, hamiltonian_energy = -11.831790585516405, hamiltonian_energy_error = -0.12055862395764194, max_hamiltonian_energy_error = -0.20439228923537023, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.93013291712198, log_density = 13.185259554939831, hamiltonian_energy = -11.286875862062663, hamiltonian_energy_error = 0.018765839277369523, max_hamiltonian_energy_error = 0.21553976975236644, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7646596221753512, log_density = 14.402108512151404, hamiltonian_energy = -9.906227890381425, hamiltonian_energy_error = -0.22185107375730162, max_hamiltonian_energy_error = 0.5847937824130334, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.900614447286024, log_density = 12.289201220176727, hamiltonian_energy = -11.516595439683227, hamiltonian_energy_error = 0.18811263743570095, max_hamiltonian_energy_error = 0.18811263743570095, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9911585250592463, log_density = 14.136605281553408, hamiltonian_energy = -11.258414982519856, hamiltonian_energy_error = -0.13857551599181228, max_hamiltonian_energy_error = -0.21368875142036536, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9111045327406162, log_density = 14.03289094132095, hamiltonian_energy = -12.70793678674405, hamiltonian_energy_error = 0.035424244159360185, max_hamiltonian_energy_error = 0.3141562927758361, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9912253071631326, log_density = 14.190974203695276, hamiltonian_energy = -12.330301593636932, hamiltonian_energy_error = -0.06420261668375105, max_hamiltonian_energy_error = -0.09454120287783496, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9265267985889611, log_density = 11.50894378717171, hamiltonian_energy = -11.057368053317603, hamiltonian_energy_error = 0.08527653112183131, max_hamiltonian_energy_error = 0.11989908305615238, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9833095748580388, log_density = 9.986142629758977, hamiltonian_energy = -8.53126101233205, hamiltonian_energy_error = -0.02589990219725813, max_hamiltonian_energy_error = -0.1974923232977801, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9352935236651805, log_density = 6.336104979491715, hamiltonian_energy = -5.2557754894630335, hamiltonian_energy_error = 0.115775560835778, max_hamiltonian_energy_error = 0.14815650745182474, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8939743321351136, log_density = 7.489814012893877, hamiltonian_energy = -4.207508332988581, hamiltonian_energy_error = 0.025859230078861373, max_hamiltonian_energy_error = -0.32220283894827517, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 12.213274264117093, hamiltonian_energy = -5.847988858662182, hamiltonian_energy_error = -0.08666722132397986, max_hamiltonian_energy_error = -0.5002157110055396, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 13.952974036479077, hamiltonian_energy = -12.132733699907183, hamiltonian_energy_error = -0.15026189575721283, max_hamiltonian_energy_error = -0.21037315852471572, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.781711179703424, log_density = 12.807138638535255, hamiltonian_energy = -10.42778578972414, hamiltonian_energy_error = 0.16423769416484113, max_hamiltonian_energy_error = 0.3867904848430559, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8609280063351906, log_density = 10.242660815522482, hamiltonian_energy = -8.1321663674982, hamiltonian_energy_error = 0.12963730364997872, max_hamiltonian_energy_error = 0.34723576395602596, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.814293983749526, hamiltonian_energy = -7.970710961593463, hamiltonian_energy_error = -0.32747134151744994, max_hamiltonian_energy_error = -0.32747134151744994, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9632057840188983, log_density = 13.087328773624757, hamiltonian_energy = -11.94521471237311, hamiltonian_energy_error = 0.07218688167433207, max_hamiltonian_energy_error = 0.0762167790279431, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9890838403663297, log_density = 12.268528218485223, hamiltonian_energy = -11.129099872362461, hamiltonian_energy_error = -0.0034581095529730987, max_hamiltonian_energy_error = -0.06751154608529752, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.82249652366366, log_density = 10.35208914960984, hamiltonian_energy = -7.131529070516651, hamiltonian_energy_error = -0.06804400678527855, max_hamiltonian_energy_error = 0.5565320032693304, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9026363156975007, log_density = 9.836059958681645, hamiltonian_energy = -7.90806926416094, hamiltonian_energy_error = -0.020927641428957422, max_hamiltonian_energy_error = 0.3454397993604035, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9922770126409594, log_density = 13.627783981563987, hamiltonian_energy = -7.088468499502146, hamiltonian_energy_error = -0.2083318176689657, max_hamiltonian_energy_error = -0.2083318176689657, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9584630597755759, log_density = 13.943827547017293, hamiltonian_energy = -11.68005705231975, hamiltonian_energy_error = -0.04922486652690772, max_hamiltonian_energy_error = 0.12820372097609578, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9177932690831121, log_density = 13.932666871904441, hamiltonian_energy = -12.815868015564268, hamiltonian_energy_error = -0.014758796959814191, max_hamiltonian_energy_error = 0.19515458382866413, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8767296150060859, log_density = 13.822746485372896, hamiltonian_energy = -11.788675569987968, hamiltonian_energy_error = 0.027996928565100276, max_hamiltonian_energy_error = 0.3197422853359626, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8641903354919347, log_density = 13.043427442331742, hamiltonian_energy = -10.984006734945519, hamiltonian_energy_error = 0.03478122012604423, max_hamiltonian_energy_error = 0.26245840358525463, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8712701046687082, log_density = 12.84066306757748, hamiltonian_energy = -10.249509191940561, hamiltonian_energy_error = -0.14178582242018578, max_hamiltonian_energy_error = 0.34410459788283987, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 14.404818551741348, hamiltonian_energy = -12.121566193852564, hamiltonian_energy_error = -0.10779483159159042, max_hamiltonian_energy_error = -0.11305938630713541, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9521480216901735, log_density = 14.045207889361816, hamiltonian_energy = -12.376539635020832, hamiltonian_energy_error = 0.023640151315566627, max_hamiltonian_energy_error = 0.10395060874240336, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7949851749559964, log_density = 9.038033002064653, hamiltonian_energy = -7.737426946036604, hamiltonian_energy_error = 0.3429045984094463, max_hamiltonian_energy_error = 0.3429045984094463, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9603587891172671, log_density = 13.272985372868236, hamiltonian_energy = -7.836878712496242, hamiltonian_energy_error = -0.506931232670988, max_hamiltonian_energy_error = -0.6265238201841026, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.901581221981188, log_density = 11.53599427023962, hamiltonian_energy = -11.004899813546484, hamiltonian_energy_error = 0.09923024102408995, max_hamiltonian_energy_error = 0.1653337484567423, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8583171874324497, log_density = 9.551075098558536, hamiltonian_energy = -9.010871737713398, hamiltonian_energy_error = 0.3770268692663272, max_hamiltonian_energy_error = 0.3770268692663272, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 1.0, log_density = 12.250688344305644, hamiltonian_energy = -9.330740453792234, hamiltonian_energy_error = -0.25518649720986986, max_hamiltonian_energy_error = -0.4716161275370556, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9879360121585431, log_density = 12.385468515343323, hamiltonian_energy = -10.622484599116492, hamiltonian_energy_error = -0.048618667383125924, max_hamiltonian_energy_error = -0.14531039814756141, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9743545333262001, log_density = 11.796600604170443, hamiltonian_energy = -11.292261262106788, hamiltonian_energy_error = 0.07830299537832985, max_hamiltonian_energy_error = -0.13919182411716235, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9837591770461882, log_density = 12.03465522899058, hamiltonian_energy = -10.009247059470413, hamiltonian_energy_error = -0.07622311702280982, max_hamiltonian_energy_error = -0.22426744199946214, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 12.919177520572596, hamiltonian_energy = -12.03492806887423, hamiltonian_energy_error = -0.11052059283345095, max_hamiltonian_energy_error = -0.11052059283345095, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8631808451161836, log_density = 13.253836048358231, hamiltonian_energy = -10.880350078420886, hamiltonian_energy_error = 0.07933060917381951, max_hamiltonian_energy_error = 0.26926846810996885, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9830142204079703, log_density = 14.143448533195553, hamiltonian_energy = -11.61748931663902, hamiltonian_energy_error = -0.05722916174332937, max_hamiltonian_energy_error = -0.09595748757290146, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.655795730825189, log_density = 11.050395524558475, hamiltonian_energy = -10.308166316634233, hamiltonian_energy_error = 0.5138731670149088, max_hamiltonian_energy_error = 0.5265528765532537, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 12.337429313374415, hamiltonian_energy = -9.707585481427447, hamiltonian_energy_error = -0.03789439826420704, max_hamiltonian_energy_error = -0.2286774209378546, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 14.000419931152058, hamiltonian_energy = -11.630358549618679, hamiltonian_energy_error = -0.33324235494101195, max_hamiltonian_energy_error = -0.4053330457242552, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8629879454030822, log_density = 10.071163733023411, hamiltonian_energy = -8.34260168214928, hamiltonian_energy_error = 0.12363799356418603, max_hamiltonian_energy_error = 0.3315607781151009, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.806760447741171, hamiltonian_energy = -8.600180988043771, hamiltonian_energy_error = -0.18194339030420714, max_hamiltonian_energy_error = -0.21746908426770872, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9566709995385532, log_density = 11.478473982280045, hamiltonian_energy = -8.03480475704047, hamiltonian_energy_error = -0.027223268427849945, max_hamiltonian_energy_error = 0.16480454019584378, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8212794779937018, log_density = 7.789768989558368, hamiltonian_energy = -5.230552501526279, hamiltonian_energy_error = 0.10490237089424337, max_hamiltonian_energy_error = 0.3375624917258353, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9940645583546955, log_density = 13.393268657478453, hamiltonian_energy = -7.271940157095321, hamiltonian_energy_error = -0.14608013955653387, max_hamiltonian_energy_error = -0.23434111025614257, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9917881266064671, log_density = 13.46599318628381, hamiltonian_energy = -12.910840276863626, hamiltonian_energy_error = 0.020346431250766628, max_hamiltonian_energy_error = 0.020346431250766628, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.6065595378619306, log_density = 12.879808820473627, hamiltonian_energy = -9.603603646393067, hamiltonian_energy_error = 0.23262480967825638, max_hamiltonian_energy_error = 1.3614843920757256, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9992245929860244, log_density = 13.522127849067369, hamiltonian_energy = -11.800457857204208, hamiltonian_energy_error = -0.07698834738059901, max_hamiltonian_energy_error = -0.07698834738059901, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8907908806089887, log_density = 13.967982679030154, hamiltonian_energy = -10.912711250627913, hamiltonian_energy_error = 0.017381695863994295, max_hamiltonian_energy_error = 0.2645065963365738, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9411886684685048, log_density = 13.185535694294817, hamiltonian_energy = -12.509381592907058, hamiltonian_energy_error = 0.053405662530233045, max_hamiltonian_energy_error = 0.10520538880071939, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9623642923549066, log_density = 13.269275951381013, hamiltonian_energy = -11.888735720370597, hamiltonian_energy_error = 0.011914233426049137, max_hamiltonian_energy_error = 0.13294074369759556, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9714577764000818, log_density = 12.568026245062157, hamiltonian_energy = -11.816026527485995, hamiltonian_energy_error = 0.06879913430597995, max_hamiltonian_energy_error = 0.0864652900954912, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9037448100339437, log_density = 12.16851343515905, hamiltonian_energy = -9.91024535113143, hamiltonian_energy_error = 0.12325563926906824, max_hamiltonian_energy_error = 0.2337084932353335, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.956687460586655, log_density = 12.463722092555383, hamiltonian_energy = -10.21559491352797, hamiltonian_energy_error = 0.026678967873168702, max_hamiltonian_energy_error = 0.13171700770421246, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9874218173202848, log_density = 12.438250397234201, hamiltonian_energy = -10.335556613385386, hamiltonian_energy_error = 0.01371201761893559, max_hamiltonian_energy_error = -0.1665204356309058, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.43030715798457936, log_density = 9.41819536983068, hamiltonian_energy = -5.202314944496794, hamiltonian_energy_error = 0.48203252718076595, max_hamiltonian_energy_error = 1.1317701947008274, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 1.0, log_density = 10.191537992674911, hamiltonian_energy = -8.062146596134626, hamiltonian_energy_error = -0.23389484068198207, max_hamiltonian_energy_error = -0.9698538190565671, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 13.296300094854347, hamiltonian_energy = -10.531186238874612, hamiltonian_energy_error = -0.7327083174014692, max_hamiltonian_energy_error = -0.7327083174014692, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9199954978747509, log_density = 13.922332074750637, hamiltonian_energy = -11.843226177697195, hamiltonian_energy_error = -0.0428983386165509, max_hamiltonian_energy_error = 0.23147443555613734, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8643722967170214, log_density = 10.952851452571833, hamiltonian_energy = -9.283807288683857, hamiltonian_energy_error = 0.14477477680424755, max_hamiltonian_energy_error = 0.390806884168871, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.861937968797859, hamiltonian_energy = -8.9789956169189, hamiltonian_energy_error = -0.21686075238874203, max_hamiltonian_energy_error = -0.3098401548579002, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8989465687285279, log_density = 11.18087308915478, hamiltonian_energy = -10.750914089093548, hamiltonian_energy_error = 0.14497852871554429, max_hamiltonian_energy_error = 0.18416464655800802, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9655516465532822, log_density = 13.132467141556635, hamiltonian_energy = -9.958880423883912, hamiltonian_energy_error = -0.1026285821689541, max_hamiltonian_energy_error = 0.16596719625841772, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.908731033055903, log_density = 12.946014436684553, hamiltonian_energy = -10.628874669460668, hamiltonian_energy_error = 0.011234334840079185, max_hamiltonian_energy_error = 0.27025763529924873, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9754796789211647, log_density = 14.005190977575841, hamiltonian_energy = -12.130153801112119, hamiltonian_energy_error = -0.11540767081966763, max_hamiltonian_energy_error = -0.11540767081966763, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6445414120110821, log_density = 11.192991757910807, hamiltonian_energy = -9.627396383781392, hamiltonian_energy_error = 0.47691534989076345, max_hamiltonian_energy_error = 0.7783640639965572, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9382310151438674, log_density = 11.487087895673513, hamiltonian_energy = -9.42492252998034, hamiltonian_energy_error = -0.025963517976407502, max_hamiltonian_energy_error = -0.3805123382708473, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9227880775915188, log_density = 13.027062372563886, hamiltonian_energy = -9.335640006562118, hamiltonian_energy_error = -0.16271929766542925, max_hamiltonian_energy_error = -0.35029697990554887, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9813179723638316, log_density = 12.410344186536388, hamiltonian_energy = -9.658276210859517, hamiltonian_energy_error = -0.12221712529227169, max_hamiltonian_energy_error = -0.3694740069457083, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.96206640249038, log_density = 12.421637844879543, hamiltonian_energy = -10.42503397182159, hamiltonian_energy_error = 0.06440904687909033, max_hamiltonian_energy_error = -0.17631266194459272, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.587270633038017, hamiltonian_energy = -11.852948029975892, hamiltonian_energy_error = -0.05639858891231597, max_hamiltonian_energy_error = -0.2755850747255906, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9913503402544365, log_density = 13.008948573328983, hamiltonian_energy = -11.5571950789722, hamiltonian_energy_error = -0.04252213978589303, max_hamiltonian_energy_error = -0.23899547651832798, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7262532270253661, log_density = 11.153819353706881, hamiltonian_energy = -7.320620918299094, hamiltonian_energy_error = -0.06131868980824429, max_hamiltonian_energy_error = 1.0502706724074624, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9285882846358209, log_density = 10.32539235326365, hamiltonian_energy = -9.172241621651587, hamiltonian_energy_error = 0.186007352129252, max_hamiltonian_energy_error = -0.4449107473539904, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9993478010841708, log_density = 12.121529282776333, hamiltonian_energy = -9.666272033290747, hamiltonian_energy_error = -0.22446644498985258, max_hamiltonian_energy_error = -0.5879477538118927, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.989757995480792, log_density = 12.139579316247755, hamiltonian_energy = -10.86462983039025, hamiltonian_energy_error = 0.04078454572660206, max_hamiltonian_energy_error = -0.24279121810963922, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9672680371576867, log_density = 12.784479076964969, hamiltonian_energy = -11.086086181162727, hamiltonian_energy_error = -0.2806574631003915, max_hamiltonian_energy_error = -0.3216119194410272, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8429676343669203, log_density = 8.60273775397447, hamiltonian_energy = -6.458210770925976, hamiltonian_energy_error = 0.21335376686276586, max_hamiltonian_energy_error = 0.4320479865985334, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9232013679212362, log_density = 7.305194919297271, hamiltonian_energy = -4.877662151977867, hamiltonian_energy_error = 0.15036918993852222, max_hamiltonian_energy_error = 0.30312246041834623, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9828466748651447, log_density = 6.778049904584011, hamiltonian_energy = -4.575822526028154, hamiltonian_energy_error = 0.08685134938239525, max_hamiltonian_energy_error = -0.4965078080033152, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9996859425301056, log_density = 10.354658221066057, hamiltonian_energy = -4.437442669369509, hamiltonian_energy_error = -0.18930209717497348, max_hamiltonian_energy_error = -0.5164087670396666, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8798264170660209, log_density = 9.475032859449826, hamiltonian_energy = -7.664821902879625, hamiltonian_energy_error = 0.07668306777094536, max_hamiltonian_energy_error = -0.7749898196783853, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8793652200872492, log_density = 9.437265161885005, hamiltonian_energy = -6.895232346937466, hamiltonian_energy_error = 0.1459966672431774, max_hamiltonian_energy_error = 0.25626728869756477, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9073090888214687, log_density = 12.958755655049297, hamiltonian_energy = -7.436037444709492, hamiltonian_energy_error = -0.5095855892741206, max_hamiltonian_energy_error = -0.5095855892741206, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7864336403405484, log_density = 8.884049757535395, hamiltonian_energy = -6.774856766128732, hamiltonian_energy_error = 0.20025900637126792, max_hamiltonian_energy_error = 0.48421791291580973, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9192594450530633, log_density = 10.36083423311634, hamiltonian_energy = -5.805319957549608, hamiltonian_energy_error = 0.06355257247604129, max_hamiltonian_energy_error = 0.2970230668727343, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8558179417112725, log_density = 8.163463903848479, hamiltonian_energy = -6.00308972435955, hamiltonian_energy_error = 0.3955821507878312, max_hamiltonian_energy_error = 0.4562638796788372, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8635804301314826, log_density = 10.062561529775135, hamiltonian_energy = -5.875855782044651, hamiltonian_energy_error = -0.38101220249583356, max_hamiltonian_energy_error = 0.8959742451661992, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.791460370041355, hamiltonian_energy = -8.333828457245776, hamiltonian_energy_error = -0.2698351636526901, max_hamiltonian_energy_error = -0.4942274493820662, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9395145407433401, log_density = 10.435516208711533, hamiltonian_energy = -8.671861982048844, hamiltonian_energy_error = 0.13434372654803006, max_hamiltonian_energy_error = 0.30176126936311753, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9211390557928982, log_density = 11.20000149443078, hamiltonian_energy = -8.463085904365089, hamiltonian_energy_error = -0.1252747961841596, max_hamiltonian_energy_error = -0.3804418345355174, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.666960763893139, log_density = 10.431738173174947, hamiltonian_energy = -8.090251354222191, hamiltonian_energy_error = 0.3445374814453981, max_hamiltonian_energy_error = 0.5825427378587156, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8804150618984217, log_density = 9.229284506394674, hamiltonian_energy = -5.916872299921701, hamiltonian_energy_error = -0.4691118325670569, max_hamiltonian_energy_error = 0.6473532773277437, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8690485279509853, log_density = 10.399603521827402, hamiltonian_energy = -5.877299331532988, hamiltonian_energy_error = 0.0622372123694257, max_hamiltonian_energy_error = 0.4332505414411658, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9745634284478171, log_density = 10.97814010527258, hamiltonian_energy = -8.65863416726988, hamiltonian_energy_error = -0.08120646575080137, max_hamiltonian_energy_error = -0.322378473411014, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9725901535064011, log_density = 12.453200338126827, hamiltonian_energy = -8.94285928975831, hamiltonian_energy_error = -0.18899854923345316, max_hamiltonian_energy_error = -0.3510323494777907, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9449926987860192, log_density = 11.523162507325386, hamiltonian_energy = -10.923825745726518, hamiltonian_energy_error = 0.09680340008828914, max_hamiltonian_energy_error = 0.09680340008828914, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.087978994015296, hamiltonian_energy = -10.577760733057403, hamiltonian_energy_error = -0.15609371267267136, max_hamiltonian_energy_error = -0.23717785999595975, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8699472360999607, log_density = 9.938157409812568, hamiltonian_energy = -9.2398597853257, hamiltonian_energy_error = 0.3314040255094266, max_hamiltonian_energy_error = 0.3314040255094266, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 1, is_accept = true, acceptance_rate = 0.9387359544580285, log_density = 9.448163849304748, hamiltonian_energy = -9.016877170793135, hamiltonian_energy_error = 0.06322103797787726, max_hamiltonian_energy_error = 0.06322103797787726, tree_depth = 1, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9424273098342437, log_density = 13.496864946971304, hamiltonian_energy = -7.425399425479021, hamiltonian_energy_error = -0.3943485914305054, max_hamiltonian_energy_error = -0.5421751119563831, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9933681997656439, log_density = 13.471229617354558, hamiltonian_energy = -12.458798914191513, hamiltonian_energy_error = -0.007203847973336508, max_hamiltonian_energy_error = -0.11442217365464202, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8892859150134643, log_density = 13.445099519124916, hamiltonian_energy = -11.076571220046588, hamiltonian_energy_error = -0.012266487327503128, max_hamiltonian_energy_error = 0.2881879690887903, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9778174928618437, log_density = 14.156871446936973, hamiltonian_energy = -11.801188161581061, hamiltonian_energy_error = -0.0636736235387172, max_hamiltonian_energy_error = -0.0839231578203723, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.970247075186781, log_density = 13.845062889307908, hamiltonian_energy = -11.994867054556511, hamiltonian_energy_error = 0.023779171821168177, max_hamiltonian_energy_error = 0.0764783523338437, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9938688444922694, log_density = 13.553428091127609, hamiltonian_energy = -13.418667613652703, hamiltonian_energy_error = 0.018564729661367352, max_hamiltonian_energy_error = -0.06577064180063097, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8084789837885822, log_density = 10.38932292818356, hamiltonian_energy = -9.077746593840452, hamiltonian_energy_error = 0.4903186357721765, max_hamiltonian_energy_error = 0.4903186357721765, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9988278124931192, log_density = 12.50921651169737, hamiltonian_energy = -8.9885796623211, hamiltonian_energy_error = -0.40813083889412916, max_hamiltonian_energy_error = -0.5349223613885989, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9677131240222462, log_density = 11.784622906559095, hamiltonian_energy = -9.738894607420276, hamiltonian_energy_error = -0.010069600046756833, max_hamiltonian_energy_error = 0.15839505562916756, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9366664361594285, log_density = 12.244936655487553, hamiltonian_energy = -10.732846694150535, hamiltonian_energy_error = -0.10363346789144501, max_hamiltonian_energy_error = 0.16464243665885014, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8663616672295035, log_density = 11.206126461603617, hamiltonian_energy = -10.431859943758585, hamiltonian_energy_error = 0.20540004511086885, max_hamiltonian_energy_error = 0.28448622463164064, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9858617775757454, log_density = 13.240456543061947, hamiltonian_energy = -10.084312884711592, hamiltonian_energy_error = -0.041422453681636995, max_hamiltonian_energy_error = -0.2108856171869764, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9047411013726243, log_density = 12.216675610343714, hamiltonian_energy = -10.92368905795926, hamiltonian_energy_error = 0.16657404625018124, max_hamiltonian_energy_error = 0.3590684714789276, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 13.707754334293048, hamiltonian_energy = -12.19237262756515, hamiltonian_energy_error = -0.19681624410502963, max_hamiltonian_energy_error = -0.3215068469828246, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9210352687261946, log_density = 12.502441685086392, hamiltonian_energy = -11.866278202274335, hamiltonian_energy_error = 0.1242774813298837, max_hamiltonian_energy_error = 0.1278662667057997, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9419395286834055, log_density = 13.228880459573116, hamiltonian_energy = -10.153124714621189, hamiltonian_energy_error = 0.013398167407874695, max_hamiltonian_energy_error = 0.16798863306683387, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9160168883020761, log_density = 13.85596697544549, hamiltonian_energy = -11.336128142322213, hamiltonian_energy_error = -0.01096629979236674, max_hamiltonian_energy_error = 0.22086234674949878, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9939714829767989, log_density = 14.124749897956619, hamiltonian_energy = -13.46391197034983, hamiltonian_energy_error = -0.058589746825441935, max_hamiltonian_energy_error = -0.10000116309083396, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9552090343327534, log_density = 13.386750685474977, hamiltonian_energy = -12.082041707992786, hamiltonian_energy_error = -0.016568107250870767, max_hamiltonian_energy_error = 0.12046779714036226, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8617227740846867, log_density = 13.697856875542653, hamiltonian_energy = -10.997477387740156, hamiltonian_energy_error = 0.18372088099308748, max_hamiltonian_energy_error = 0.2993899379394236, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9863376296628921, log_density = 13.784454709417204, hamiltonian_energy = -12.973867292460517, hamiltonian_energy_error = -0.09609322538260479, max_hamiltonian_energy_error = -0.18186733652486353, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9768154120008666, log_density = 14.083913836705428, hamiltonian_energy = -12.208694612063884, hamiltonian_energy_error = -0.03725431910633503, max_hamiltonian_energy_error = -0.11834890147405197, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9058742665758999, log_density = 13.53251340726838, hamiltonian_energy = -11.687121175321074, hamiltonian_energy_error = 0.04787304619599908, max_hamiltonian_energy_error = 0.2859957626930658, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8031041490985537, log_density = 13.675327280437228, hamiltonian_energy = -10.772762353931638, hamiltonian_energy_error = -0.07416438832113492, max_hamiltonian_energy_error = 0.5341214086565174, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9334491901526543, log_density = 12.4198128483253, hamiltonian_energy = -11.776355406329012, hamiltonian_energy_error = 0.19035762492093333, max_hamiltonian_energy_error = 0.20425162792233742, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 12.857632004033778, hamiltonian_energy = -11.581165170538213, hamiltonian_energy_error = -0.14232267139981758, max_hamiltonian_energy_error = -0.33182461456323153, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9926337019846095, log_density = 12.880756387499543, hamiltonian_energy = -12.082923414768146, hamiltonian_energy_error = 0.0037948954443169924, max_hamiltonian_energy_error = -0.1315438226238772, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9865879295820577, log_density = 13.376408028033042, hamiltonian_energy = -11.076312140282841, hamiltonian_energy_error = -0.14576375602056224, max_hamiltonian_energy_error = -0.14576375602056224, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8952223246092404, log_density = 12.181109726358521, hamiltonian_energy = -11.137367640115453, hamiltonian_energy_error = 0.05386726691654786, max_hamiltonian_energy_error = 0.2814861926457741, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9675488148153492, log_density = 13.797460285218202, hamiltonian_energy = -11.337930013489355, hamiltonian_energy_error = 0.026660963355748635, max_hamiltonian_energy_error = 0.14854668110787017, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7567414490584983, log_density = 13.823838500293228, hamiltonian_energy = -11.016101936467082, hamiltonian_energy_error = 0.19986248156316044, max_hamiltonian_energy_error = 0.550784447126901, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7001268977526162, log_density = 13.937190979566353, hamiltonian_energy = -10.885555520421795, hamiltonian_energy_error = 0.1692020544337769, max_hamiltonian_energy_error = 0.8245724511934984, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8603681299486095, log_density = 11.622295376252612, hamiltonian_energy = -10.179361003733485, hamiltonian_energy_error = 0.08764207771729282, max_hamiltonian_energy_error = 0.3860784894978817, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9380946092156979, log_density = 13.065066438977878, hamiltonian_energy = -10.210648792111096, hamiltonian_energy_error = -0.14323089388788013, max_hamiltonian_energy_error = 0.2005269873940918, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 14.407432853441954, hamiltonian_energy = -12.87215521695864, hamiltonian_energy_error = -0.08787216911845164, max_hamiltonian_energy_error = -0.08787216911845164, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8598418370303497, log_density = 13.931791173765271, hamiltonian_energy = -10.648260447249756, hamiltonian_energy_error = 0.11810487909317402, max_hamiltonian_energy_error = 0.29596285518571186, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9386649158263837, log_density = 12.697275787574455, hamiltonian_energy = -12.249536178480778, hamiltonian_energy_error = 0.1722231892820254, max_hamiltonian_energy_error = 0.1722231892820254, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9457325189688822, log_density = 11.184180216107041, hamiltonian_energy = -9.60398940959874, hamiltonian_energy_error = -0.011726598020992185, max_hamiltonian_energy_error = 0.2264458778749603, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8482847624499028, log_density = 9.443989657129807, hamiltonian_energy = -7.859488790398565, hamiltonian_energy_error = 0.36510957257672594, max_hamiltonian_energy_error = 0.39768213223153737, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9366998782163305, log_density = 9.20987063105817, hamiltonian_energy = -7.35458392580818, hamiltonian_energy_error = 0.17224020628336056, max_hamiltonian_energy_error = -0.5245404334837893, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.740350073199854, hamiltonian_energy = -8.101659312026921, hamiltonian_energy_error = -0.4279832377561199, max_hamiltonian_energy_error = -0.4284061894397819, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9953112393239844, log_density = 12.617880004974937, hamiltonian_energy = -10.747917438435168, hamiltonian_energy_error = -0.0801967890124331, max_hamiltonian_energy_error = -0.17512984031925072, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9809469540890353, log_density = 12.61732996323081, hamiltonian_energy = -11.1444897791385, hamiltonian_energy_error = 0.05367809787064459, max_hamiltonian_energy_error = -0.06037418376121906, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8725187696224417, log_density = 13.322293607175464, hamiltonian_energy = -9.852076423040137, hamiltonian_energy_error = 0.03892414624274387, max_hamiltonian_energy_error = 0.2653625415408243, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.993142710569468, log_density = 13.365563875489872, hamiltonian_energy = -12.290054495078456, hamiltonian_energy_error = -0.008980561293020273, max_hamiltonian_energy_error = -0.046746253802680826, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.970215567338864, log_density = 12.92311596447021, hamiltonian_energy = -11.241472863892639, hamiltonian_energy_error = 0.02798810497274573, max_hamiltonian_energy_error = 0.06229082439048739, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9848324875563771, log_density = 12.436471419780577, hamiltonian_energy = -11.46633801452243, hamiltonian_energy_error = 0.03617692905934433, max_hamiltonian_energy_error = -0.05903811101410206, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.234404964089478, hamiltonian_energy = -11.727067763118141, hamiltonian_energy_error = -0.044559512979589044, max_hamiltonian_energy_error = -0.13864246957072623, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9051855447080762, log_density = 13.549352785896346, hamiltonian_energy = -11.260615776339492, hamiltonian_energy_error = 0.11309982073418112, max_hamiltonian_energy_error = 0.15615427384749658, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9656398192584353, log_density = 13.163338290504988, hamiltonian_energy = -12.751845955984138, hamiltonian_energy_error = 0.05405601906722701, max_hamiltonian_energy_error = 0.05405601906722701, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8863842671033747, log_density = 12.320362372223427, hamiltonian_energy = -11.093987216712824, hamiltonian_energy_error = 0.17802851747706505, max_hamiltonian_energy_error = 0.2807081173445596, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.98448738996194, log_density = 10.51993046601548, hamiltonian_energy = -9.960935957704203, hamiltonian_energy_error = -0.02061814992704747, max_hamiltonian_energy_error = -0.22087432266650708, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9966123893931937, log_density = 11.860267299882821, hamiltonian_energy = -8.890465006089965, hamiltonian_energy_error = -0.356030668197036, max_hamiltonian_energy_error = -0.356030668197036, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9845192788879829, log_density = 10.94847809129614, hamiltonian_energy = -9.295244511376078, hamiltonian_energy_error = 0.06835301004706551, max_hamiltonian_energy_error = -0.19440518509482096, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.6900293622740911, log_density = 13.304601447171734, hamiltonian_energy = -7.629615223069281, hamiltonian_energy_error = -0.14567398449539226, max_hamiltonian_energy_error = 1.019433766818941, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9264744216494714, log_density = 11.85842684011991, hamiltonian_energy = -11.159095301592075, hamiltonian_energy_error = 0.12833966735898983, max_hamiltonian_energy_error = 0.1550789848740841, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7459637851952359, log_density = 11.72480129324786, hamiltonian_energy = -8.00904119867652, hamiltonian_energy_error = -0.06460202476331567, max_hamiltonian_energy_error = 0.7566444250044597, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.426959585307866, hamiltonian_energy = -11.118466849347564, hamiltonian_energy_error = -0.034176937478795466, max_hamiltonian_energy_error = -0.08762780073790921, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9755359550202233, log_density = 11.584324796367502, hamiltonian_energy = -10.167989237999457, hamiltonian_energy_error = 0.10113638482478748, max_hamiltonian_energy_error = -0.1649866689907018, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9929101743651766, log_density = 12.076691839746864, hamiltonian_energy = -10.332830533105906, hamiltonian_energy_error = -0.11190129729614995, max_hamiltonian_energy_error = -0.1925914622587488, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8803303040885508, log_density = 10.595960534432868, hamiltonian_energy = -8.887070189591117, hamiltonian_energy_error = 0.16079055688652488, max_hamiltonian_energy_error = 0.3301608801529863, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9696723975401375, log_density = 11.16514330009416, hamiltonian_energy = -6.390010370154638, hamiltonian_energy_error = -0.07795317592201023, max_hamiltonian_energy_error = -0.4951105546162138, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9994062679366161, log_density = 11.757358112927559, hamiltonian_energy = -10.463315209512428, hamiltonian_energy_error = -0.11291787520862862, max_hamiltonian_energy_error = -0.3168673627181313, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9948655065730492, log_density = 12.72225906520303, hamiltonian_energy = -10.571199228570409, hamiltonian_energy_error = -0.08720918624731588, max_hamiltonian_energy_error = -0.22540342919890755, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.183769800744425, hamiltonian_energy = -10.997038575643764, hamiltonian_energy_error = -0.033250332724373166, max_hamiltonian_energy_error = -0.22929496275643757, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9767761712357672, log_density = 11.785506443677255, hamiltonian_energy = -8.324992545630128, hamiltonian_energy_error = 0.0016164592127001498, max_hamiltonian_energy_error = -0.15011249055586617, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9815256459051895, log_density = 12.733309697850515, hamiltonian_energy = -9.031097888142135, hamiltonian_energy_error = -0.15678273702295442, max_hamiltonian_energy_error = -0.3004232153365294, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7862583089639025, log_density = 12.29482313600027, hamiltonian_energy = -7.6404179405936095, hamiltonian_energy_error = 0.19799111702527572, max_hamiltonian_energy_error = 0.6512548788193309, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9561800167311562, log_density = 11.392038654584496, hamiltonian_energy = -9.407969077551058, hamiltonian_energy_error = 0.049195752709728424, max_hamiltonian_energy_error = -0.23935641496360738, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9249065800581195, log_density = 9.970077714564361, hamiltonian_energy = -5.830356248399517, hamiltonian_energy_error = 0.011951535298600824, max_hamiltonian_energy_error = -0.2755891598021183, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9691990793245815, log_density = 12.843736545321267, hamiltonian_energy = -8.120029801772318, hamiltonian_energy_error = -0.027816313125068604, max_hamiltonian_energy_error = 0.39129191603243374, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.699333283807522, log_density = 11.214539418980465, hamiltonian_energy = -8.84247627928347, hamiltonian_energy_error = 0.375794431552837, max_hamiltonian_energy_error = 0.8885385117419098, tree_depth = 1, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7299364090779054, log_density = 13.442966490050106, hamiltonian_energy = -5.3296852365453695, hamiltonian_energy_error = -1.01077322543052, max_hamiltonian_energy_error = 1.5534481795011916, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9494713201878116, log_density = 14.228283055219144, hamiltonian_energy = -12.687403226453206, hamiltonian_energy_error = -0.05553621768243211, max_hamiltonian_energy_error = 0.11353319533235329, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8425499779252718, log_density = 13.414010361642731, hamiltonian_energy = -12.093271298631178, hamiltonian_energy_error = 0.15346905855141024, max_hamiltonian_energy_error = 0.31074938546118425, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9436923994765277, log_density = 13.17420044669312, hamiltonian_energy = -10.427526638870885, hamiltonian_energy_error = -0.14513447285354708, max_hamiltonian_energy_error = 0.15757956410225304, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9687290107647184, log_density = 11.54283146620341, hamiltonian_energy = -10.731366609759432, hamiltonian_energy_error = 0.10626323430518347, max_hamiltonian_energy_error = 0.10626323430518347, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5321313806105061, log_density = 8.206356835964758, hamiltonian_energy = -3.975720960804898, hamiltonian_energy_error = 1.1920485225286823, max_hamiltonian_energy_error = 1.373464069398136, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9666264003191436, log_density = 12.815793760537568, hamiltonian_energy = -6.483999838741816, hamiltonian_energy_error = -0.5052355597776348, max_hamiltonian_energy_error = -0.5554082922402204, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9597828311649337, log_density = 12.442486225290681, hamiltonian_energy = -10.183161553947222, hamiltonian_energy_error = 0.07191907895621696, max_hamiltonian_energy_error = -0.2294414217166434, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8950004208361744, log_density = 13.963528264519972, hamiltonian_energy = -9.375456043349661, hamiltonian_energy_error = -0.11269726847347883, max_hamiltonian_energy_error = 0.2510512371415423, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9277417844265055, log_density = 13.893434250824821, hamiltonian_energy = -12.408422711377646, hamiltonian_energy_error = -0.06431496417522808, max_hamiltonian_energy_error = 0.17684905986008204, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6956408973322075, log_density = 12.807500509500898, hamiltonian_energy = -9.632158609091634, hamiltonian_energy_error = 0.1998011694303905, max_hamiltonian_energy_error = 0.6150772477064272, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6252475560499965, log_density = 11.94984905716558, hamiltonian_energy = -8.088636491366474, hamiltonian_energy_error = 0.192025531734334, max_hamiltonian_energy_error = 0.8414544176189986, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9822949534391036, log_density = 13.417520442924122, hamiltonian_energy = -9.966968667152454, hamiltonian_energy_error = -0.20387911947563175, max_hamiltonian_energy_error = -0.2538716528596865, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9735360981528787, log_density = 13.327416254584223, hamiltonian_energy = -12.811480188165504, hamiltonian_energy_error = 0.03881862635633837, max_hamiltonian_energy_error = 0.08044471353677274, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.879024178874427, log_density = 14.205116590418978, hamiltonian_energy = -10.98604408190199, hamiltonian_energy_error = 0.03278536395200149, max_hamiltonian_energy_error = 0.26868070444176695, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8383806009562633, log_density = 12.10347022018092, hamiltonian_energy = -11.32334611852676, hamiltonian_energy_error = 0.20369021614540017, max_hamiltonian_energy_error = 0.28056270323400234, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9443051660668986, log_density = 13.196436984647246, hamiltonian_energy = -10.062223982087485, hamiltonian_energy_error = -0.1441801087026775, max_hamiltonian_energy_error = 0.19026143766223136, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9298249989106908, log_density = 12.629187762128995, hamiltonian_energy = -11.704512460801727, hamiltonian_energy_error = 0.1507310785960705, max_hamiltonian_energy_error = 0.16269624851283915, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9855390422041668, log_density = 13.75648979941045, hamiltonian_energy = -11.886821736222059, hamiltonian_energy_error = -0.14169830425844943, max_hamiltonian_energy_error = -0.1613861074689673, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9354661430113201, log_density = 13.284053485253825, hamiltonian_energy = -12.255661350393735, hamiltonian_energy_error = 0.1171599352913173, max_hamiltonian_energy_error = 0.14864043215354172, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8899843454397998, log_density = 12.106307858054402, hamiltonian_energy = -10.774731310447667, hamiltonian_energy_error = 0.14795542337433254, max_hamiltonian_energy_error = 0.3015267316894974, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9823095161446064, log_density = 10.461628358265454, hamiltonian_energy = -6.933411157680897, hamiltonian_energy_error = -0.1617383014754017, max_hamiltonian_energy_error = -0.21604629734966085, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9568236071828284, log_density = 13.462370981336864, hamiltonian_energy = -7.634323808104529, hamiltonian_energy_error = 0.005722570429736784, max_hamiltonian_energy_error = 0.17296470140924392, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.4679451710195479, log_density = 10.500652434562316, hamiltonian_energy = -7.666906518178019, hamiltonian_energy_error = 0.7938975649389324, max_hamiltonian_energy_error = 1.4370813876329445, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9757163353274446, log_density = 11.376129433991611, hamiltonian_energy = -8.257738090532298, hamiltonian_energy_error = -0.23979174783734436, max_hamiltonian_energy_error = -0.37338149512610386, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 11.765420778407474, hamiltonian_energy = -10.849151234033192, hamiltonian_energy_error = -0.020740933081530244, max_hamiltonian_energy_error = -0.10357427090776739, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.892495410430656, log_density = 12.56698183349063, hamiltonian_energy = -8.382944565105612, hamiltonian_energy_error = 0.20168020364823036, max_hamiltonian_energy_error = 0.20168020364823036, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.487232125865638, hamiltonian_energy = -12.081616834780824, hamiltonian_energy_error = -0.2982469924166651, max_hamiltonian_energy_error = -0.3823415916096806, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9347814280594656, log_density = 13.119672393137018, hamiltonian_energy = -10.359835345966829, hamiltonian_energy_error = -0.06761693757562526, max_hamiltonian_energy_error = 0.168052143585804, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8691624690568326, log_density = 13.286860734827519, hamiltonian_energy = -10.536768590920309, hamiltonian_energy_error = 0.04668038434942012, max_hamiltonian_energy_error = 0.36931753752092433, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9824328562438368, log_density = 13.952022540451186, hamiltonian_energy = -12.423428374746873, hamiltonian_energy_error = -0.0323757453332334, max_hamiltonian_energy_error = -0.09850536912796848, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9534405810340782, log_density = 13.840651152388658, hamiltonian_energy = -12.608155830127979, hamiltonian_energy_error = -0.016163904119416372, max_hamiltonian_energy_error = 0.09855249003622824, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7462275305394418, log_density = 10.743614324440378, hamiltonian_energy = -7.89358871141174, hamiltonian_energy_error = 0.34936235012097505, max_hamiltonian_energy_error = 0.5551009211906779, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9719354038785982, log_density = 10.221597241369157, hamiltonian_energy = -8.180804431569946, hamiltonian_energy_error = 0.05578386135701052, max_hamiltonian_energy_error = -0.33286138490253414, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9742799797482882, log_density = 12.987733182292429, hamiltonian_energy = -6.5457068026896525, hamiltonian_energy_error = -0.23822689854084356, max_hamiltonian_energy_error = -0.2738599052165194, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8963225708162444, log_density = 13.783226081698313, hamiltonian_energy = -10.373620521860209, hamiltonian_energy_error = -0.13429911748329104, max_hamiltonian_energy_error = 0.3003537754558696, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9616049486211191, log_density = 12.941384000277036, hamiltonian_energy = -11.357736224408383, hamiltonian_energy_error = -0.029677100912143928, max_hamiltonian_energy_error = 0.21712723563936187, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9886958873289794, log_density = 14.557613389432113, hamiltonian_energy = -11.99786641326117, hamiltonian_energy_error = -0.1465161248011242, max_hamiltonian_energy_error = -0.1465161248011242, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.985323915074736, log_density = 14.282078806971994, hamiltonian_energy = -13.486052195739555, hamiltonian_energy_error = 0.00816819686416359, max_hamiltonian_energy_error = 0.03579011607231841, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8175825235199334, log_density = 13.000617308774398, hamiltonian_energy = -8.368215469047076, hamiltonian_energy_error = 0.13370408817111823, max_hamiltonian_energy_error = 0.30582246735739105, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9914838985655902, log_density = 13.279060031622526, hamiltonian_energy = -12.193529273596987, hamiltonian_energy_error = 0.012899059818678893, max_hamiltonian_energy_error = -0.04641069229018058, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9663970164165404, log_density = 13.150656717535336, hamiltonian_energy = -10.460107289102229, hamiltonian_energy_error = -0.05961363969221445, max_hamiltonian_energy_error = 0.10866325812741273, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.98687932974624, log_density = 14.055370826344392, hamiltonian_energy = -12.328742683052901, hamiltonian_energy_error = -0.003254983841767256, max_hamiltonian_energy_error = -0.060671808444366704, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8404879288383345, log_density = 13.830241862645996, hamiltonian_energy = -8.861493689768434, hamiltonian_energy_error = 0.14244539018656432, max_hamiltonian_energy_error = 0.24836662015864164, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5524788563716366, log_density = 10.382662734865187, hamiltonian_energy = -5.52768807802959, hamiltonian_energy_error = 0.7798616750628034, max_hamiltonian_energy_error = 2.8076587037816325, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9710497076487462, log_density = 11.314464070802101, hamiltonian_energy = -8.83604871383813, hamiltonian_energy_error = -0.5676073575889706, max_hamiltonian_energy_error = -0.6096511702195446, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.927254087392992, log_density = 11.456933441905125, hamiltonian_energy = -9.92122561325197, hamiltonian_energy_error = 0.01930876538323467, max_hamiltonian_energy_error = 0.1562684709357569, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9893181729273907, log_density = 11.467082720446387, hamiltonian_energy = -10.254212368472597, hamiltonian_energy_error = 0.028332981274775904, max_hamiltonian_energy_error = -0.17469336916451894, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9971160550099138, log_density = 12.824934163709607, hamiltonian_energy = -9.775881410730989, hamiltonian_energy_error = -0.010617941927737462, max_hamiltonian_energy_error = -0.09210774293610768, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9920122356777775, log_density = 12.498567435157236, hamiltonian_energy = -11.128935621935277, hamiltonian_energy_error = 0.01446160243146899, max_hamiltonian_energy_error = -0.08032148115358062, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.986374498833514, log_density = 13.146999098337316, hamiltonian_energy = -10.404557402972415, hamiltonian_energy_error = -0.08681955710440015, max_hamiltonian_energy_error = -0.1891060635874755, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.48348515670215514, log_density = 10.178778345194921, hamiltonian_energy = -8.073051470206371, hamiltonian_energy_error = 0.8055859906847278, max_hamiltonian_energy_error = 1.164198602318927, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 11.151121709524608, hamiltonian_energy = -8.922534025269155, hamiltonian_energy_error = -0.5488206451691102, max_hamiltonian_energy_error = -0.7056497984304695, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 12.907738133614904, hamiltonian_energy = -10.75758993738277, hamiltonian_energy_error = -0.3058757862276238, max_hamiltonian_energy_error = -0.3058757862276238, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9873518982882672, log_density = 13.44738359944511, hamiltonian_energy = -11.642109876211693, hamiltonian_energy_error = 0.007488478273582899, max_hamiltonian_energy_error = -0.09021979864644258, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9983798705887063, log_density = 13.062336084744963, hamiltonian_energy = -12.587604633149562, hamiltonian_energy_error = 0.00487223833375694, max_hamiltonian_energy_error = -0.06530346840002821, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7138988087533266, log_density = 14.191253025104913, hamiltonian_energy = -9.394027568185095, hamiltonian_energy_error = -0.12221288008861464, max_hamiltonian_energy_error = 0.7094723272906638, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7668327932910495, log_density = 12.59628088378128, hamiltonian_energy = -11.994553281756353, hamiltonian_energy_error = 0.3851079943973108, max_hamiltonian_energy_error = 0.503986926364199, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9509466496719031, log_density = 13.526789458920012, hamiltonian_energy = -10.644169032971222, hamiltonian_energy_error = -0.25598446383132156, max_hamiltonian_energy_error = -0.36771449325136807, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.894116872953709, log_density = 12.16412043988643, hamiltonian_energy = -10.309409716719756, hamiltonian_energy_error = 0.1295215505261389, max_hamiltonian_energy_error = 0.2359431714952045, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.756222280327627, hamiltonian_energy = -9.90538835552875, hamiltonian_energy_error = -0.29596841623542147, max_hamiltonian_energy_error = -0.29596841623542147, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9900215350695262, log_density = 14.51027115894721, hamiltonian_energy = -13.087505405135808, hamiltonian_energy_error = -0.04914286093193887, max_hamiltonian_energy_error = -0.10252551144338717, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8781779349062989, log_density = 12.955585548145942, hamiltonian_energy = -12.588064834793617, hamiltonian_energy_error = 0.21026423788638127, max_hamiltonian_energy_error = 0.21026423788638127, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9708062756924978, log_density = 11.359677836984254, hamiltonian_energy = -9.907402769265214, hamiltonian_energy_error = -0.22402281980746253, max_hamiltonian_energy_error = -0.2566046180759187, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.983341974425828, log_density = 11.312426273208601, hamiltonian_energy = -10.469123043886276, hamiltonian_energy_error = 0.10237396341820748, max_hamiltonian_energy_error = -0.19635124431804307, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.930280035979518, hamiltonian_energy = -10.961664969714938, hamiltonian_energy_error = -0.33316330807385164, max_hamiltonian_energy_error = -0.33316330807385164, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8813727915455954, log_density = 12.862896779851694, hamiltonian_energy = -11.844987334249506, hamiltonian_energy_error = 0.14266035177443115, max_hamiltonian_energy_error = 0.2070822830278125, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.33430699772416006, log_density = 10.759726023808467, hamiltonian_energy = -3.0893457327197957, hamiltonian_energy_error = 0.9642014399922161, max_hamiltonian_energy_error = 1.6092916016282057, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9661093730027512, log_density = 9.585682484469737, hamiltonian_energy = -7.43025854354467, hamiltonian_energy_error = -0.26517158547352704, max_hamiltonian_energy_error = -1.022372143225585, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6791041229286886, log_density = 11.283286769802297, hamiltonian_energy = -4.648083186499068, hamiltonian_energy_error = -0.3370061129382371, max_hamiltonian_energy_error = 0.6694677951332064, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9744273744228007, log_density = 12.50342860080183, hamiltonian_energy = -9.113833791417168, hamiltonian_energy_error = -0.00731295020922218, max_hamiltonian_energy_error = 0.08166103373383393, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8908758719235689, log_density = 10.400825494444858, hamiltonian_energy = -9.233887819686148, hamiltonian_energy_error = 0.29029995099470973, max_hamiltonian_energy_error = 0.29029995099470973, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8800761085806175, log_density = 12.446251505755985, hamiltonian_energy = -7.913180738162151, hamiltonian_energy_error = -0.04813154825780064, max_hamiltonian_energy_error = 0.40724548440806174, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7480544174372765, log_density = 13.290438458514792, hamiltonian_energy = -9.319773406334185, hamiltonian_energy_error = 0.0489271451279123, max_hamiltonian_energy_error = 1.2313003259818167, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8779864789536188, log_density = 11.515187281338598, hamiltonian_energy = -10.4152931257339, hamiltonian_energy_error = 0.16207754146985742, max_hamiltonian_energy_error = -0.25253721460999934, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9802691132921372, log_density = 12.670011676732692, hamiltonian_energy = -10.029546968877288, hamiltonian_energy_error = -0.4361532862127646, max_hamiltonian_energy_error = -0.4361532862127646, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9801546181692685, log_density = 14.232238008121598, hamiltonian_energy = -12.220850881455405, hamiltonian_energy_error = -0.015084966574757885, max_hamiltonian_energy_error = 0.052858323620737835, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9620055946044835, log_density = 13.512887051964448, hamiltonian_energy = -12.888780431861539, hamiltonian_energy_error = 0.015568088367849953, max_hamiltonian_energy_error = 0.061982527138354726, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.8135755726107439, log_density = 11.672577946222674, hamiltonian_energy = -9.983193017340279, hamiltonian_energy_error = 0.3148430703016043, max_hamiltonian_energy_error = 0.3553158842226356, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.933066893067332, log_density = 13.216538558548745, hamiltonian_energy = -7.5904290975930975, hamiltonian_energy_error = -0.4615471153503554, max_hamiltonian_energy_error = -0.4615471153503554, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9807800707990945, log_density = 12.60732333841263, hamiltonian_energy = -9.651681609961837, hamiltonian_energy_error = -0.08757719809300823, max_hamiltonian_energy_error = -0.1379780374309263, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7682428921271441, log_density = 10.190895213381417, hamiltonian_energy = -6.576299111521488, hamiltonian_energy_error = 0.35432125297845474, max_hamiltonian_energy_error = 0.5554995745612166, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9655440492015173, log_density = 12.236392679092484, hamiltonian_energy = -9.112763420473117, hamiltonian_energy_error = -0.07316894050624789, max_hamiltonian_energy_error = -0.07316894050624789, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9984166969945195, log_density = 13.283624814038077, hamiltonian_energy = -11.811400402189768, hamiltonian_energy_error = -0.056384957678293546, max_hamiltonian_energy_error = -0.07753490559437815, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9144967028481062, log_density = 13.237845980570317, hamiltonian_energy = -11.630674131740978, hamiltonian_energy_error = 0.13504964004205533, max_hamiltonian_energy_error = 0.1791623848106898, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9611067864689955, log_density = 13.370503549580773, hamiltonian_energy = -10.552216693923011, hamiltonian_energy_error = -0.14911615537387668, max_hamiltonian_energy_error = -0.14911615537387668, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8223936270820233, log_density = 12.496807469179972, hamiltonian_energy = -7.603127594019841, hamiltonian_energy_error = 0.26997653384768583, max_hamiltonian_energy_error = 0.4588120128207622, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9246632472521327, log_density = 11.2111308035297, hamiltonian_energy = -9.447225281969114, hamiltonian_energy_error = 0.17849048527628497, max_hamiltonian_energy_error = 0.3253257880351068, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8605315522769733, log_density = 10.427012574554652, hamiltonian_energy = -8.051350627914344, hamiltonian_energy_error = 0.19006806912273966, max_hamiltonian_energy_error = 0.4430965458986682, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9950850077263632, log_density = 11.482830678759774, hamiltonian_energy = -9.729137306854199, hamiltonian_energy_error = 0.014854764539823151, max_hamiltonian_energy_error = -0.3928851573206771, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8225382861790665, log_density = 9.871390445438628, hamiltonian_energy = -8.816860720836248, hamiltonian_energy_error = 0.4449706338646653, max_hamiltonian_energy_error = 0.45383615702250246, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 13.535712150219027, hamiltonian_energy = -9.968238031508191, hamiltonian_energy_error = -0.6252700242623099, max_hamiltonian_energy_error = -0.6430630778379172, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8946641040001622, log_density = 13.090543918473504, hamiltonian_energy = -9.244650463065984, hamiltonian_energy_error = -0.07764409139259953, max_hamiltonian_energy_error = 0.2992032740970796, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9954814753713668, log_density = 12.00688205977555, hamiltonian_energy = -11.080752953058374, hamiltonian_energy_error = 0.032140695032476074, max_hamiltonian_energy_error = -0.19056175053933266, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9932114919977831, log_density = 13.521745041157837, hamiltonian_energy = -11.018940066529112, hamiltonian_energy_error = -0.10015427488524686, max_hamiltonian_energy_error = -0.15263475583722297, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9848494995630311, log_density = 14.278649548659208, hamiltonian_energy = -13.180437409907748, hamiltonian_energy_error = -0.06919970791739871, max_hamiltonian_energy_error = -0.15676730416883622, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9895782020311344, log_density = 13.007148624100942, hamiltonian_energy = -12.8539981949872, hamiltonian_energy_error = 0.055785615710121306, max_hamiltonian_energy_error = 0.055785615710121306, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9254733343571989, log_density = 12.694749698889707, hamiltonian_energy = -10.626996508800458, hamiltonian_energy_error = -0.019412579505518224, max_hamiltonian_energy_error = 0.28850581172413925, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9589500515045604, log_density = 11.521839420677907, hamiltonian_energy = -9.772769583723186, hamiltonian_energy_error = 0.05761331668826486, max_hamiltonian_energy_error = -0.1811935837734584, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9609352653568176, log_density = 14.092922704406673, hamiltonian_energy = -9.932926094491645, hamiltonian_energy_error = -0.22990507854373732, max_hamiltonian_energy_error = -0.22990507854373732, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9630522585230815, log_density = 13.610419865623888, hamiltonian_energy = -13.43644225339828, hamiltonian_energy_error = 0.07547478131515106, max_hamiltonian_energy_error = 0.08095586532702548, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7832909476560728, log_density = 13.091211169361653, hamiltonian_energy = -10.074431994775093, hamiltonian_energy_error = -0.2106025916809049, max_hamiltonian_energy_error = 1.0501854963153114, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8089512105468746, log_density = 12.79160283312767, hamiltonian_energy = -11.533570939099972, hamiltonian_energy_error = 0.231144746018634, max_hamiltonian_energy_error = 0.4450480745496268, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.8860121480184274, log_density = 12.593762587163035, hamiltonian_energy = -10.702636416315366, hamiltonian_energy_error = 0.22463647574301682, max_hamiltonian_energy_error = 0.4527582937344139, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9925387809016103, log_density = 11.211871383484011, hamiltonian_energy = -10.266698311883593, hamiltonian_energy_error = -0.05144935156079633, max_hamiltonian_energy_error = -0.30318745162781013, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6995114820902355, log_density = 10.306018132518023, hamiltonian_energy = -6.676476083549373, hamiltonian_energy_error = 0.549407783706533, max_hamiltonian_energy_error = 0.6028116835565234, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.828794257986182, hamiltonian_energy = -8.087163498508795, hamiltonian_energy_error = -0.13755947609932306, max_hamiltonian_energy_error = -0.39090103242530283, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9654397146628655, log_density = 9.353351090904022, hamiltonian_energy = -7.5523887689414115, hamiltonian_energy_error = 0.10488744331836397, max_hamiltonian_energy_error = -0.35401821086303364, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9536978580611049, log_density = 10.919838445617252, hamiltonian_energy = -7.512964499900868, hamiltonian_energy_error = -0.3253134635667152, max_hamiltonian_energy_error = -0.498056762385934, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9833672082033098, log_density = 13.942975238434498, hamiltonian_energy = -9.659655157314017, hamiltonian_energy_error = -0.22336074464274702, max_hamiltonian_energy_error = -0.22336074464274702, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8643509568205112, log_density = 10.808218951277887, hamiltonian_energy = -10.180310344172685, hamiltonian_energy_error = 0.2341562160154993, max_hamiltonian_energy_error = 0.2341562160154993, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9937904471121243, log_density = 12.802444282185645, hamiltonian_energy = -9.081211217727693, hamiltonian_energy_error = -0.10313096884952166, max_hamiltonian_energy_error = -0.33893220337396457, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9142766101526926, log_density = 12.788564991014443, hamiltonian_energy = -7.9306538852731085, hamiltonian_energy_error = 0.12253004727787431, max_hamiltonian_energy_error = 0.24653638750330398, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.949215845756144, log_density = 14.253187494815414, hamiltonian_energy = -11.709220041229807, hamiltonian_energy_error = -0.1186594785010957, max_hamiltonian_energy_error = 0.17803724738154614, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8717567244467448, log_density = 12.926417084214556, hamiltonian_energy = -11.729779989989108, hamiltonian_energy_error = 0.20256922323428306, max_hamiltonian_energy_error = 0.20256922323428306, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9337815391522805, log_density = 11.457718316670405, hamiltonian_energy = -10.472868431998002, hamiltonian_energy_error = 0.08791363067237867, max_hamiltonian_energy_error = 0.16100141512288957, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9838498362269805, log_density = 13.069391233262056, hamiltonian_energy = -10.389074793968163, hamiltonian_energy_error = -0.1376300597094815, max_hamiltonian_energy_error = -0.1376300597094815, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9229045515147031, log_density = 11.24010853184548, hamiltonian_energy = -8.778024931354595, hamiltonian_energy_error = 0.06258269101452107, max_hamiltonian_energy_error = 0.12342194273628948, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9652143579158219, log_density = 14.434365348335067, hamiltonian_energy = -10.38692050339285, hamiltonian_energy_error = -0.1270844654383172, max_hamiltonian_energy_error = -0.1270844654383172, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8720612260445997, log_density = 12.813142146961809, hamiltonian_energy = -11.241246397495122, hamiltonian_energy_error = 0.0895068489523041, max_hamiltonian_energy_error = 0.21520537866839362, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9989184667504082, log_density = 13.107226236645722, hamiltonian_energy = -11.401028999534317, hamiltonian_energy_error = -0.023818430108731192, max_hamiltonian_energy_error = -0.07943138035357222, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.98956713690127, log_density = 13.806620950051698, hamiltonian_energy = -12.26222307414154, hamiltonian_energy_error = -0.05676452915107433, max_hamiltonian_energy_error = -0.05676452915107433, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9148824550135259, log_density = 14.051495355698934, hamiltonian_energy = -12.415438455671325, hamiltonian_energy_error = 0.009549411027874655, max_hamiltonian_energy_error = 0.17497405691826096, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9610311735232006, log_density = 13.847552605244589, hamiltonian_energy = -12.101831483480716, hamiltonian_energy_error = -0.01358820447841147, max_hamiltonian_energy_error = 0.11176583485366187, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8902167745348055, log_density = 14.226385620516165, hamiltonian_energy = -12.836198620703591, hamiltonian_energy_error = 0.04233449842372039, max_hamiltonian_energy_error = 0.2319191274976422, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9962769016585028, log_density = 14.233782924349088, hamiltonian_energy = -13.845335020479114, hamiltonian_energy_error = -0.03394647200900103, max_hamiltonian_energy_error = -0.09253563639769524, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8633617453476921, log_density = 11.97189381234427, hamiltonian_energy = -11.27835170507816, hamiltonian_energy_error = 0.2388650976535711, max_hamiltonian_energy_error = 0.2388650976535711, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9930835858491464, log_density = 12.895630583469217, hamiltonian_energy = -10.318368644535333, hamiltonian_energy_error = -0.2185832328477133, max_hamiltonian_energy_error = -0.26679825946935765, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8243581586017459, log_density = 11.922596559463189, hamiltonian_energy = -10.45330920195423, hamiltonian_energy_error = 0.12353012753064263, max_hamiltonian_energy_error = 0.3352045916486528, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7773810475378876, log_density = 11.67290315026256, hamiltonian_energy = -7.821284303163717, hamiltonian_energy_error = 0.04748239154457057, max_hamiltonian_energy_error = 0.6486960954547598, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7719341448698529, log_density = 10.925189889679459, hamiltonian_energy = -4.952503732361381, hamiltonian_energy_error = 0.08026278873175663, max_hamiltonian_energy_error = 0.5094682018001055, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8495645633063678, log_density = 8.40560770894433, hamiltonian_energy = -5.144461255253434, hamiltonian_energy_error = 0.09389505767511608, max_hamiltonian_energy_error = 0.35186364247311275, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7182287808538642, log_density = 13.04735279356445, hamiltonian_energy = -5.107181040784294, hamiltonian_energy_error = -0.6629588025979292, max_hamiltonian_energy_error = 1.587005601766558, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 13.445524061202802, hamiltonian_energy = -12.39975515928774, hamiltonian_energy_error = -0.09721264076368819, max_hamiltonian_energy_error = -0.2191214916915456, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9523374230674495, log_density = 12.494896622722141, hamiltonian_energy = -11.647367219683945, hamiltonian_energy_error = 0.06515691441233784, max_hamiltonian_energy_error = 0.06515691441233784, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7324883245862056, log_density = 8.668565617079778, hamiltonian_energy = -4.952615762697462, hamiltonian_energy_error = 0.13949849442779172, max_hamiltonian_energy_error = 0.7674424366492687, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 11.951807570895665, hamiltonian_energy = -8.534613776400747, hamiltonian_energy_error = -0.3334507541817704, max_hamiltonian_energy_error = -0.43571170047820296, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9930333077858204, log_density = 12.397224166364683, hamiltonian_energy = -10.549637731116471, hamiltonian_energy_error = 0.0031894993443710717, max_hamiltonian_energy_error = -0.07466352095680939, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9920390168894055, log_density = 11.864703777611842, hamiltonian_energy = -11.232571032232421, hamiltonian_energy_error = 0.023646935175191786, max_hamiltonian_energy_error = -0.08936678346942983, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9539361495417776, log_density = 12.94449098366632, hamiltonian_energy = -10.01012338182214, hamiltonian_energy_error = -0.0031249015723169293, max_hamiltonian_energy_error = 0.11976512986369059, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7653223603983139, log_density = 10.390109984057078, hamiltonian_energy = -8.303632613622224, hamiltonian_energy_error = 0.5884832447426618, max_hamiltonian_energy_error = 0.6489247828026841, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7470925121507052, log_density = 12.093185368297181, hamiltonian_energy = -6.750041648484409, hamiltonian_energy_error = -0.37945936097922583, max_hamiltonian_energy_error = 1.3215544524093632, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9941895657219442, log_density = 12.096491721628329, hamiltonian_energy = -11.160115392084831, hamiltonian_energy_error = 0.023339933143690317, max_hamiltonian_energy_error = -0.16654937482620014, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8489821542129842, log_density = 10.36934595770597, hamiltonian_energy = -8.357186109030138, hamiltonian_energy_error = 0.2873994088690264, max_hamiltonian_energy_error = 0.3506638278275105, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 11.814788521856448, hamiltonian_energy = -9.762338387128125, hamiltonian_energy_error = -0.2519198021200868, max_hamiltonian_energy_error = -0.5407006656924143, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9681546147771682, log_density = 12.89433296600233, hamiltonian_energy = -10.361724246212107, hamiltonian_energy_error = 0.003018300869591428, max_hamiltonian_energy_error = -0.2254765885289789, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8906371569031782, log_density = 10.478522783623012, hamiltonian_energy = -10.30262124432136, hamiltonian_energy_error = 0.38968056737959067, max_hamiltonian_energy_error = 0.38968056737959067, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9112667903967524, log_density = 11.826929108396753, hamiltonian_energy = -8.121685469536587, hamiltonian_energy_error = -0.15590560647623697, max_hamiltonian_energy_error = 0.30951826121445336, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8926087730213884, log_density = 13.115994127116503, hamiltonian_energy = -9.606973736553115, hamiltonian_energy_error = -0.34854055006980644, max_hamiltonian_energy_error = -0.34854055006980644, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9461324978748549, log_density = 11.403264819092252, hamiltonian_energy = -10.532988284884897, hamiltonian_energy_error = 0.11030076130775157, max_hamiltonian_energy_error = 0.13853137752698963, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.8271897149686392, log_density = 11.672310669407345, hamiltonian_energy = -7.528935940631711, hamiltonian_energy_error = 0.05449887223434491, max_hamiltonian_energy_error = 0.4959620231685644, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8707384706564105, log_density = 10.838874700814547, hamiltonian_energy = -9.197107710417932, hamiltonian_energy_error = 0.15745990454168535, max_hamiltonian_energy_error = 0.2771980951634525, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.706858146137225, hamiltonian_energy = -7.86105203708814, hamiltonian_energy_error = -0.036171875657705854, max_hamiltonian_energy_error = -0.2899837724733043, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9944270016615185, log_density = 10.259979622088178, hamiltonian_energy = -8.490259298876786, hamiltonian_energy_error = 0.026014534551261903, max_hamiltonian_energy_error = -0.2814232575458746, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7129928758603505, log_density = 7.434928327059749, hamiltonian_energy = -5.606182177476775, hamiltonian_energy_error = 0.4915360547418919, max_hamiltonian_energy_error = 0.5360943307694273, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8995152590962129, log_density = 6.660679277625338, hamiltonian_energy = -2.9714220659747816, hamiltonian_energy_error = 0.0909617248542327, max_hamiltonian_energy_error = -1.012959546856064, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.58286600862592, hamiltonian_energy = -5.576096201352875, hamiltonian_energy_error = -1.0408399214402388, max_hamiltonian_energy_error = -1.0935445985268215, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.07494116863474, hamiltonian_energy = -8.327659247483528, hamiltonian_energy_error = -0.09268118710580886, max_hamiltonian_energy_error = -0.34221914908066076, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9300065196793224, log_density = 12.064232808534026, hamiltonian_energy = -8.44536271315513, hamiltonian_energy_error = -0.15571331015286205, max_hamiltonian_energy_error = -0.40682293189334295, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 14.406228949486174, hamiltonian_energy = -11.89561466276891, hamiltonian_energy_error = -0.17017985660034718, max_hamiltonian_energy_error = -0.1942926413236865, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7889136038465064, log_density = 12.756264500525477, hamiltonian_energy = -11.600428760071695, hamiltonian_energy_error = 0.22455700205035178, max_hamiltonian_energy_error = 0.4523459249741464, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9343177788142303, log_density = 11.762945331553716, hamiltonian_energy = -10.624091225813912, hamiltonian_energy_error = 0.20023838760713808, max_hamiltonian_energy_error = 0.20023838760713808, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9986920031571592, log_density = 12.079048774083146, hamiltonian_energy = -10.121405736459456, hamiltonian_energy_error = -0.10938300279723201, max_hamiltonian_energy_error = -0.3190685055064595, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9151291097540731, log_density = 12.89112795226063, hamiltonian_energy = -7.380821128277951, hamiltonian_energy_error = -0.45342474799643906, max_hamiltonian_energy_error = -0.45342474799643906, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7865722003763741, log_density = 13.333497983313855, hamiltonian_energy = -8.740522357139941, hamiltonian_energy_error = 0.12573437692416256, max_hamiltonian_energy_error = 0.43783971691008006, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.97087169777686, log_density = 12.139320990471797, hamiltonian_energy = -11.497792536430808, hamiltonian_energy_error = 0.07602840255811572, max_hamiltonian_energy_error = 0.09720796989783764, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 14.3579697859029, hamiltonian_energy = -11.957013161844104, hamiltonian_energy_error = -0.19732491546214703, max_hamiltonian_energy_error = -0.19732491546214703, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8272657585807631, log_density = 13.914904954855384, hamiltonian_energy = -10.404170255102375, hamiltonian_energy_error = 0.10422829688896762, max_hamiltonian_energy_error = 0.39873740820320513, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9637013739800999, log_density = 13.558541266550785, hamiltonian_energy = -11.251696362970286, hamiltonian_energy_error = 0.02951432144154964, max_hamiltonian_energy_error = 0.08178171225055131, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9568047429495531, log_density = 13.239223870392927, hamiltonian_energy = -12.210947310102268, hamiltonian_energy_error = 0.10005356607733518, max_hamiltonian_energy_error = 0.11124732600140597, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8835081550150204, log_density = 12.793730645883416, hamiltonian_energy = -10.802980977672451, hamiltonian_energy_error = 0.17817296709595176, max_hamiltonian_energy_error = 0.2819201253320909, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9507687205988427, log_density = 11.666026292898824, hamiltonian_energy = -9.022114059578012, hamiltonian_energy_error = -0.056062056920232806, max_hamiltonian_energy_error = 0.27794838269482547, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9857867282861662, log_density = 13.187338339099288, hamiltonian_energy = -10.943910502281602, hamiltonian_energy_error = -0.2160328893846355, max_hamiltonian_energy_error = -0.2160328893846355, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9563686679904223, log_density = 13.649440330422646, hamiltonian_energy = -12.284519714759869, hamiltonian_energy_error = 0.006897200138597626, max_hamiltonian_energy_error = 0.11889035983713647, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9509116846055813, log_density = 12.822881541980003, hamiltonian_energy = -11.376389928847951, hamiltonian_energy_error = 0.06592209752093048, max_hamiltonian_energy_error = 0.13109174961652847, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9816424546454595, log_density = 12.328722346665531, hamiltonian_energy = -11.861874171567045, hamiltonian_energy_error = 0.06904092547772933, max_hamiltonian_energy_error = -0.08997473316583182, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9917153402322019, log_density = 13.296069351918863, hamiltonian_energy = -11.24728768548595, hamiltonian_energy_error = -0.014206302968759132, max_hamiltonian_energy_error = -0.11825056561779768, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9300957858489929, log_density = 12.90160400004769, hamiltonian_energy = -10.595420385927842, hamiltonian_energy_error = -0.04600073668494886, max_hamiltonian_energy_error = 0.2350681861296131, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6297153041125163, log_density = 9.789710260696676, hamiltonian_energy = -7.147036511080921, hamiltonian_energy_error = 0.6129986079784828, max_hamiltonian_energy_error = 0.758816608686689, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9725761724836802, log_density = 9.57359388836382, hamiltonian_energy = -7.046437942060468, hamiltonian_energy_error = -0.08285038414480006, max_hamiltonian_energy_error = -0.3341867439299575, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9954951288282983, log_density = 13.815166603860579, hamiltonian_energy = -9.689908231839995, hamiltonian_energy_error = -0.45556971905436505, max_hamiltonian_energy_error = -0.4634614647252704, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.982968802513766, log_density = 13.42619435921068, hamiltonian_energy = -12.807818784019224, hamiltonian_energy_error = 0.03648768196133467, max_hamiltonian_energy_error = 0.05379992978778958, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9164987885568671, log_density = 12.142288777901259, hamiltonian_energy = -11.900316395420699, hamiltonian_energy_error = 0.1347909641848446, max_hamiltonian_energy_error = 0.1347909641848446, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9588253292102449, log_density = 11.461792811611343, hamiltonian_energy = -11.189537255826647, hamiltonian_energy_error = 0.13184597073971815, max_hamiltonian_energy_error = -0.14795449562323348, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7753634508110858, log_density = 12.364522718780574, hamiltonian_energy = -8.069161838838589, hamiltonian_energy_error = -0.6722283936816753, max_hamiltonian_energy_error = 1.120580781312455, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9917679587476906, log_density = 12.260897544077633, hamiltonian_energy = -9.137256414809437, hamiltonian_energy_error = -0.02882336646081818, max_hamiltonian_energy_error = -0.27092224737750215, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9984532998726406, log_density = 14.484923592429404, hamiltonian_energy = -11.79578088533201, hamiltonian_energy_error = -0.15983991042332946, max_hamiltonian_energy_error = -0.15983991042332946, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8956235558604855, log_density = 11.660561645466336, hamiltonian_energy = -10.99132438872718, hamiltonian_energy_error = 0.17605619405789774, max_hamiltonian_energy_error = 0.1921532384605591, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9802945217948319, log_density = 13.123291903209402, hamiltonian_energy = -10.09206718620075, hamiltonian_energy_error = -0.05753168871231473, max_hamiltonian_energy_error = -0.16974254100089503, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.712858533190795, log_density = 12.873774918346143, hamiltonian_energy = -9.901117622509659, hamiltonian_energy_error = 0.16668751960132333, max_hamiltonian_energy_error = 0.9593753857415113, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 1.0, log_density = 13.642414735774212, hamiltonian_energy = -12.375033377014176, hamiltonian_energy_error = -0.26426630446003685, max_hamiltonian_energy_error = -0.31699960318508325, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9126613043693474, log_density = 12.53296714591503, hamiltonian_energy = -10.230858747703302, hamiltonian_energy_error = 0.10023811287204865, max_hamiltonian_energy_error = 0.20516720275816347, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9956050809917186, log_density = 13.96181429010733, hamiltonian_energy = -11.623582958792266, hamiltonian_energy_error = -0.08073223282384667, max_hamiltonian_energy_error = -0.13833427650374297, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9512715292740206, log_density = 13.739171719405649, hamiltonian_energy = -12.605457269802264, hamiltonian_energy_error = 0.0658920368954341, max_hamiltonian_energy_error = 0.09711216352122598, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8204195995216537, log_density = 12.481950115014774, hamiltonian_energy = -10.904733821626738, hamiltonian_energy_error = 0.19469492811756695, max_hamiltonian_energy_error = 0.44503558547834743, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9500149126843732, log_density = 13.856909298554294, hamiltonian_energy = -11.28312536724551, hamiltonian_energy_error = -0.16701925197956768, max_hamiltonian_energy_error = -0.16701925197956768, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.903107249734862, log_density = 11.629681592663779, hamiltonian_energy = -10.669952919407475, hamiltonian_energy_error = 0.15054703787902923, max_hamiltonian_energy_error = 0.24782548038445107, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9601671324899321, log_density = 12.775283230654912, hamiltonian_energy = -10.039577534549316, hamiltonian_energy_error = -0.10965095827969584, max_hamiltonian_energy_error = 0.20673122436894964, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9566404311561926, log_density = 13.749647242792959, hamiltonian_energy = -11.637435801875752, hamiltonian_energy_error = -0.001639454031014509, max_hamiltonian_energy_error = 0.10084237072904578, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8792682363555068, log_density = 12.49084841351297, hamiltonian_energy = -11.663370586839575, hamiltonian_energy_error = 0.1329902364316613, max_hamiltonian_energy_error = 0.20904972020921164, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9976196515764998, log_density = 11.92312267882916, hamiltonian_energy = -10.815799320287876, hamiltonian_energy_error = 0.00064454368023803, max_hamiltonian_energy_error = -0.15831062282907382, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9282489212356982, log_density = 11.095322816441161, hamiltonian_energy = -9.136676351850902, hamiltonian_energy_error = 0.06430663259929048, max_hamiltonian_energy_error = -0.20296726347788052, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 11.423138123792349, hamiltonian_energy = -9.789249446317507, hamiltonian_energy_error = -0.18488647798602464, max_hamiltonian_energy_error = -0.2612003548668991, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8747384768590476, log_density = 12.100367533065855, hamiltonian_energy = -8.032313555868459, hamiltonian_energy_error = 0.10008708864159033, max_hamiltonian_energy_error = 0.323371444514275, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9786896959170794, log_density = 12.720654986914129, hamiltonian_energy = -10.445279744067193, hamiltonian_energy_error = 0.04426771867912649, max_hamiltonian_energy_error = -0.11056215274309089, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9909983895903665, log_density = 13.815366027331937, hamiltonian_energy = -9.50994385159037, hamiltonian_energy_error = -0.17783383472985648, max_hamiltonian_energy_error = -0.23718124833669663, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9795653932601512, log_density = 14.192930305826573, hamiltonian_energy = -12.71987799284122, hamiltonian_energy_error = -0.02137461898115589, max_hamiltonian_energy_error = 0.07020302537815404, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.937539358611494, log_density = 13.91953772712593, hamiltonian_energy = -13.293609443056562, hamiltonian_energy_error = 0.0768237027063865, max_hamiltonian_energy_error = 0.16531590146151487, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9234294072433389, log_density = 13.1033618710585, hamiltonian_energy = -12.178703354728228, hamiltonian_energy_error = 0.09237056809452682, max_hamiltonian_energy_error = 0.2211850565164344, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8200136563655952, log_density = 12.708374760474626, hamiltonian_energy = -9.897530208218507, hamiltonian_energy_error = -0.007958610254808818, max_hamiltonian_energy_error = 0.46494076698818887, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8969285787713916, log_density = 13.103683705295303, hamiltonian_energy = -10.411625444953636, hamiltonian_energy_error = -0.023612400244608978, max_hamiltonian_energy_error = 0.31359242183285296, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.881442918990723, log_density = 11.358095361558618, hamiltonian_energy = -8.837169231607177, hamiltonian_energy_error = 0.1590547971252736, max_hamiltonian_energy_error = 0.28335823738076193, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9166789537410095, log_density = 13.324668773763404, hamiltonian_energy = -8.93374819980532, hamiltonian_energy_error = -0.15003948523940558, max_hamiltonian_energy_error = -0.15003948523940558, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9273018312771549, log_density = 13.573888742014416, hamiltonian_energy = -10.814057297267297, hamiltonian_energy_error = 0.03910096882615122, max_hamiltonian_energy_error = 0.14184412221541365, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7595032822422699, log_density = 10.327288776396374, hamiltonian_energy = -9.555997694554632, hamiltonian_energy_error = 0.6282409929744173, max_hamiltonian_energy_error = 0.6533527517740048, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9895268477011782, log_density = 12.649223267675215, hamiltonian_energy = -8.835964799982829, hamiltonian_energy_error = -0.2679489506493393, max_hamiltonian_energy_error = -0.8664320666967473, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9765430885909238, log_density = 12.894010681738868, hamiltonian_energy = -11.851611473523343, hamiltonian_energy_error = -0.028251649168289816, max_hamiltonian_energy_error = -0.24084248226467864, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9580386826112722, log_density = 11.723826192698255, hamiltonian_energy = -10.30985055433859, hamiltonian_energy_error = 0.17041878037905533, max_hamiltonian_energy_error = -0.1949797834740572, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8580250591157449, log_density = 9.969000843596664, hamiltonian_energy = -8.618994416334223, hamiltonian_energy_error = 0.4848979745442765, max_hamiltonian_energy_error = 0.4848979745442765, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 14.533739781873766, hamiltonian_energy = -10.279045317680627, hamiltonian_energy_error = -0.7414637848259868, max_hamiltonian_energy_error = -0.7414637848259868, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.917841533306442, log_density = 12.077660860117234, hamiltonian_energy = -11.013349964538689, hamiltonian_energy_error = 0.08711997832123153, max_hamiltonian_energy_error = 0.16757007613639452, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8631510041690745, log_density = 12.573588050420096, hamiltonian_energy = -8.107163601308418, hamiltonian_energy_error = 0.09810513461142989, max_hamiltonian_energy_error = 0.41075365154288956, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8125576024968221, log_density = 12.308220214325523, hamiltonian_energy = -8.50851177847979, hamiltonian_energy_error = 0.18580764153686147, max_hamiltonian_energy_error = 0.3117837707160156, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 12.672620459533702, hamiltonian_energy = -11.609427021622766, hamiltonian_energy_error = -0.008107028703532748, max_hamiltonian_energy_error = -0.16885535620680514, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9289709187786875, log_density = 11.813280049182147, hamiltonian_energy = -10.391466710781733, hamiltonian_energy_error = 0.15170280343213527, max_hamiltonian_energy_error = 0.20220573240709072, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7700426614019487, log_density = 12.859978573931658, hamiltonian_energy = -7.720054359774929, hamiltonian_energy_error = -0.24776987836225128, max_hamiltonian_energy_error = 0.5847346853255511, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.877478648686121, log_density = 13.810083762746682, hamiltonian_energy = -11.28587721432537, hamiltonian_energy_error = -0.09458818230620558, max_hamiltonian_energy_error = 0.37114324349529326, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7475099410905442, log_density = 14.098090902425286, hamiltonian_energy = -10.906288047764026, hamiltonian_energy_error = 0.17104540960463588, max_hamiltonian_energy_error = 0.45257217988323184, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.925504452653403, log_density = 13.382266040854216, hamiltonian_energy = -12.479590236392676, hamiltonian_energy_error = 0.0156046411304267, max_hamiltonian_energy_error = 0.184144051661713, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9426134037129669, log_density = 14.38526572988683, hamiltonian_energy = -11.189657719185888, hamiltonian_energy_error = -0.003783569177716828, max_hamiltonian_energy_error = 0.11547179157546594, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8832372747671883, log_density = 13.50155695274072, hamiltonian_energy = -12.730392452349957, hamiltonian_energy_error = 0.15253207020311166, max_hamiltonian_energy_error = 0.2389989941606654, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9970337700421373, log_density = 14.520784296065422, hamiltonian_energy = -13.388849256227305, hamiltonian_energy_error = -0.15970535409464404, max_hamiltonian_energy_error = -0.15970535409464404, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8879169323329591, log_density = 14.027233904105305, hamiltonian_energy = -12.763709574951436, hamiltonian_energy_error = 0.08600365978061042, max_hamiltonian_energy_error = 0.19553934628942926, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9404249753329814, log_density = 13.454951612536242, hamiltonian_energy = -11.943852244353765, hamiltonian_energy_error = 0.0013792105956067502, max_hamiltonian_energy_error = 0.13042812025890882, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9967772001353106, log_density = 13.82088084738562, hamiltonian_energy = -12.993329781406448, hamiltonian_energy_error = -0.039363577327593546, max_hamiltonian_energy_error = -0.05684796809773651, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.769180768446179, log_density = 9.982129382390772, hamiltonian_energy = -8.206955271737609, hamiltonian_energy_error = 0.3256677338018612, max_hamiltonian_energy_error = 0.4733266702019385, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9567527666485649, log_density = 11.07991969082091, hamiltonian_energy = -8.427057297771457, hamiltonian_energy_error = -0.009031834378967929, max_hamiltonian_energy_error = -0.24374007217164007, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9831620246805878, log_density = 11.93181180232073, hamiltonian_energy = -9.306707153582085, hamiltonian_energy_error = 0.12541111122960125, max_hamiltonian_energy_error = -0.23222826063265067, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 14.041355875213863, hamiltonian_energy = -11.48131643814785, hamiltonian_energy_error = -0.3773091020777404, max_hamiltonian_energy_error = -0.44485059041353203, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8022927229268743, log_density = 10.329252466166105, hamiltonian_energy = -7.889981680795007, hamiltonian_energy_error = 0.1884004850005887, max_hamiltonian_energy_error = 0.39015470066173563, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7935941555020695, log_density = 6.893643418158245, hamiltonian_energy = -6.510766662499753, hamiltonian_energy_error = 0.31825025013496866, max_hamiltonian_energy_error = 0.31825025013496866, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7572851181492021, log_density = 6.65215116424014, hamiltonian_energy = -2.5148786914152828, hamiltonian_energy_error = 0.3953592060108808, max_hamiltonian_energy_error = 0.9229438320743326, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 9.412395305114508, hamiltonian_energy = -6.297924222880502, hamiltonian_energy_error = -0.34079048585660754, max_hamiltonian_energy_error = -0.5586675872958491, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9858611287722986, log_density = 11.119804840214034, hamiltonian_energy = -8.05480972242141, hamiltonian_energy_error = -0.14185276583188777, max_hamiltonian_energy_error = -0.3174614242519871, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9454832972200212, log_density = 10.297796155793295, hamiltonian_energy = -7.876126535235399, hamiltonian_energy_error = 0.05597672214564131, max_hamiltonian_energy_error = -0.27109496373792297, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9628579152916519, log_density = 8.879011075970162, hamiltonian_energy = -7.2131790858239615, hamiltonian_energy_error = -0.012997987505237951, max_hamiltonian_energy_error = -0.22387779288080623, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.535987430389826, hamiltonian_energy = -8.219409665580821, hamiltonian_energy_error = -0.29757175046054396, max_hamiltonian_energy_error = -0.3908203015827185, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8800759412935023, log_density = 12.34275308038492, hamiltonian_energy = -10.9391293145556, hamiltonian_energy_error = 0.0959127729205953, max_hamiltonian_energy_error = 0.19702273487502886, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8016471224325518, log_density = 11.570395646555843, hamiltonian_energy = -9.485781636286337, hamiltonian_energy_error = 0.3729621069726896, max_hamiltonian_energy_error = 0.3729621069726896, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 12.306964381153897, hamiltonian_energy = -11.317213983055057, hamiltonian_energy_error = -0.11274434713074832, max_hamiltonian_energy_error = -0.3269578332501055, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9190373203025108, log_density = 11.462666548444082, hamiltonian_energy = -9.508326346905987, hamiltonian_energy_error = -0.10454141144175821, max_hamiltonian_energy_error = 0.4810731208554522, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9707600191641915, log_density = 12.857507236334435, hamiltonian_energy = -9.173936501757618, hamiltonian_energy_error = -0.06890272354583438, max_hamiltonian_energy_error = -0.4461738025132149, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9655546448008109, log_density = 12.583269713368031, hamiltonian_energy = -10.245942518619678, hamiltonian_energy_error = 0.07168665118137874, max_hamiltonian_energy_error = -0.17549816748466007, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8014619377137712, log_density = 13.19445897431848, hamiltonian_energy = -6.921084701858654, hamiltonian_energy_error = -0.21222703572305868, max_hamiltonian_energy_error = 0.6832189268411186, tree_depth = 1, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9542727075296096, log_density = 12.497282068439315, hamiltonian_energy = -11.165936346950865, hamiltonian_energy_error = 0.07448412649894998, max_hamiltonian_energy_error = 0.10809978287722544, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9356066360924405, log_density = 12.326507101772615, hamiltonian_energy = -11.133982626709916, hamiltonian_energy_error = 0.043328937966368386, max_hamiltonian_energy_error = -0.1642310047241402, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 12.904344516112213, hamiltonian_energy = -10.405471967234682, hamiltonian_energy_error = -0.17918371731856375, max_hamiltonian_energy_error = -0.25171087093179345, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.402044556123633, hamiltonian_energy = -12.772685111195972, hamiltonian_energy_error = -0.019032588797056604, max_hamiltonian_energy_error = -0.04662037304549571, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9867922833171232, log_density = 13.037085236466769, hamiltonian_energy = -11.89075897981639, hamiltonian_energy_error = 0.00027439860221178947, max_hamiltonian_energy_error = 0.034661860760307306, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8682116525587235, log_density = 11.607425846286986, hamiltonian_energy = -10.458151338020613, hamiltonian_energy_error = 0.2227201634748166, max_hamiltonian_energy_error = 0.2227201634748166, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.815215604987452, log_density = 11.872748133138328, hamiltonian_energy = -10.299584426235482, hamiltonian_energy_error = 0.2528867462481035, max_hamiltonian_energy_error = 0.39368374067006684, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.988620056942554, log_density = 11.675078935828573, hamiltonian_energy = -10.340636454576215, hamiltonian_energy_error = -0.006466329501272128, max_hamiltonian_energy_error = -0.2618211134803019, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8059441579769179, log_density = 9.996072826439075, hamiltonian_energy = -7.2328000261103, hamiltonian_energy_error = 0.48267955758848213, max_hamiltonian_energy_error = 0.48267955758848213, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9906367067965872, log_density = 11.705420469785778, hamiltonian_energy = -7.555037550548163, hamiltonian_energy_error = -0.2961727360999511, max_hamiltonian_energy_error = -0.48918163331602216, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8941044227009799, log_density = 11.784708348070986, hamiltonian_energy = -9.141030380410921, hamiltonian_energy_error = -0.07682394741202181, max_hamiltonian_energy_error = 0.21453344510392114, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9346156306890568, log_density = 9.995989082794036, hamiltonian_energy = -6.903135209434057, hamiltonian_energy_error = 0.05808883661381703, max_hamiltonian_energy_error = 0.14195049683607408, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.44282267960207733, log_density = 10.028755528026625, hamiltonian_energy = -5.858803487783182, hamiltonian_energy_error = 0.8205124417301173, max_hamiltonian_energy_error = 1.079986504410865, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8871683917315585, log_density = 13.965111129587104, hamiltonian_energy = -8.338988834362157, hamiltonian_energy_error = 0.006157465229305714, max_hamiltonian_energy_error = 0.24361178555899166, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9072853711535712, log_density = 12.961287514113375, hamiltonian_energy = -9.881143344428354, hamiltonian_energy_error = 0.13047990860694547, max_hamiltonian_energy_error = 0.2690313077824378, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8549140432793488, log_density = 11.12234053199314, hamiltonian_energy = -8.196451728036985, hamiltonian_energy_error = 0.10793394109377452, max_hamiltonian_energy_error = 0.4516576867018447, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.309934742230812, hamiltonian_energy = -10.066539453866993, hamiltonian_energy_error = -0.12989113642136552, max_hamiltonian_energy_error = -0.31689576427559274, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9921850138582631, log_density = 13.61507220796755, hamiltonian_energy = -12.74733785156705, hamiltonian_energy_error = -0.13111844365032965, max_hamiltonian_energy_error = -0.14647719731416942, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9369825499273358, log_density = 12.655971596744656, hamiltonian_energy = -11.88771707198291, hamiltonian_energy_error = 0.11961974441036816, max_hamiltonian_energy_error = 0.1460273474103566, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9727323333704013, log_density = 11.78596284019591, hamiltonian_energy = -11.376448799197556, hamiltonian_energy_error = 0.0853433143132758, max_hamiltonian_energy_error = -0.17821240470428634, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9729056354644631, log_density = 12.623648280845762, hamiltonian_energy = -10.268151758469854, hamiltonian_energy_error = -0.12229487698605013, max_hamiltonian_energy_error = -0.2422039632102777, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9721092462519966, log_density = 13.47118378529241, hamiltonian_energy = -10.292487641559443, hamiltonian_energy_error = -0.11631810180650604, max_hamiltonian_energy_error = -0.1275201054366626, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.46187601579716836, log_density = 13.47118378529241, hamiltonian_energy = -6.594675310227439, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 1.1317865736307589, tree_depth = 2, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5919630992572055, log_density = 12.773060943785627, hamiltonian_energy = -7.382952518649143, hamiltonian_energy_error = 0.03270858855201819, max_hamiltonian_energy_error = 0.9939463431147342, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8786626918316573, log_density = 11.954028566985887, hamiltonian_energy = -10.068182509462787, hamiltonian_energy_error = 0.16737930979130766, max_hamiltonian_energy_error = 0.21823376689704688, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8076991129112939, log_density = 13.482574464048614, hamiltonian_energy = -10.090028614281447, hamiltonian_energy_error = 0.023341629561615562, max_hamiltonian_energy_error = 0.5331136502229832, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9868059411976715, log_density = 13.16222040275321, hamiltonian_energy = -12.458930458045407, hamiltonian_energy_error = 0.033986948742297685, max_hamiltonian_energy_error = -0.10756698396617104, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9938099647363171, log_density = 12.506592653161732, hamiltonian_energy = -11.083293122014897, hamiltonian_energy_error = -0.0402537158191727, max_hamiltonian_energy_error = -0.12107466962813618, tree_depth = 4, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9408173621882311, log_density = 12.219367123797374, hamiltonian_energy = -10.927616514036156, hamiltonian_energy_error = 0.004881825780572058, max_hamiltonian_energy_error = 0.19582097965886014, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.976998968763388, log_density = 12.316733423432812, hamiltonian_energy = -10.963835365963424, hamiltonian_energy_error = -0.0628962179961281, max_hamiltonian_energy_error = -0.11228988307312449, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9062747576570247, log_density = 13.264256864003569, hamiltonian_energy = -11.239806308592831, hamiltonian_energy_error = -0.11051753352033877, max_hamiltonian_energy_error = 0.24500477656884456, tree_depth = 3, numerical_error = false, step_size = 0.13315222432580334, nom_step_size = 0.13315222432580334, is_adapt = false)])","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Inspect posterior distribution over hyperparameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"hypers = map(unpack, samples);\nh_l1 = histogram(getindex.(hypers, :l1); label=\"l1\");\nh_l2 = histogram(getindex.(hypers, :l2); label=\"l2\");\nh_s1 = histogram(getindex.(hypers, :s1); label=\"s1\");\nh_s2 = histogram(getindex.(hypers, :s2); label=\"s2\");\nplot(h_l1, h_l2, h_s1, h_s2; layout=(2, 2))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As expected, the sampler converges to the posterior distribution quickly. One could combine this code with that from the previous sections to make predictions under the posterior over the hyperparameters.","category":"page"},{"location":"examples/getting_started/#Conclusion","page":"Getting Started","title":"Conclusion","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you now know how to fit GPs using Stheno.jl, and to investigate their posterior distributions. It's also straightforward to utilise Stheno.jl inside probabilistic programming frameworks like Soss.jl and Turing.jl (see examples folder).","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Stheno.jl","page":"Home","title":"Stheno.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Stheno.jl is a package for probabilistic programming with Gaussian processes.","category":"page"},{"location":"internals/#Interfaces","page":"Internals","title":"Interfaces","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The primary objects in Stheno are some special subtypes of AbstractGP. There are three primary concrete subtypes of AbstractGP:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP: an atomic Gaussian process given by wrapping an AbstractGP.\nCompositeGP: a Gaussian process composed of other WrappedGPs and CompositeGPs, whose properties are determined recursively from the GPs of which it is composed.\nGaussianProcessProbabilisticProgramme / GPPP: a Gaussian process comprising WrappedGPs and CompositeGPs. This is the primary piece of functionality that users should interact with.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This documentation provides the information necessary to understand the internals of Stheno, and to extend it with custom functionality.","category":"page"},{"location":"internals/#AbstractGP","page":"Internals","title":"AbstractGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP and CompositeGP implement the AbstractGPs.jl API. Please refer to the AbstractGPs.jl docs for more info on this.","category":"page"},{"location":"internals/#diag-methods","page":"Internals","title":"diag methods","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It is crucial for pseudo-point methods, and for the computation of marginal statistics at a reasonable scale, to be able to compute the diagonal of a given covariance matrix in linear time in the size of its inputs. This, in turn, necessitates that the diagonal of a given cross-covariance matrix can also be computed efficiently as the evaluation of covariance matrices often rely on the evaluation of cross-covariance matrices. As such, we have the following functions in addition to the AbstractGPs API implemented for WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Function Brief description\nvar(f, x) diag(cov(f, x))\nvar(f, x, x′) diag(cov(f, x, x′))\nvar(f, f′, x, x′) diag(cov(f, f′, x, x′))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The second and third rows of the table only make sense when length(x) == length(x′), of course.","category":"page"},{"location":"internals/#WrappedGP","page":"Internals","title":"WrappedGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"We can construct a WrappedGP in the following manner:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = wrap(GP(m, k), gpc)\n","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"where m is its MeanFunction, k its Kernel. gpc is a GPC object that handles some book-keeping, and is discussed in more depth below.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The AbstractGP interface is implemented for WrappedGPs in terms of the AbstractGP that they wrap. So if you want a particular behaviour, just make sure that the AbstractGP that you wrap has the functionality you want.","category":"page"},{"location":"internals/#Aside:-Example-Kernel-implementation","page":"Internals","title":"Aside: Example Kernel implementation","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It's straightforward to implement a new kernel yourself: simply following the instructions in KernelFunctions.jl and it'll work fine with GPs in Stheno.jl.","category":"page"},{"location":"internals/#GPC","page":"Internals","title":"GPC","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"This book-keeping object doesn't matter from a user's perspective but, unfortunately, we currently expose it to users. Fortunately, it's straightforward to work with. Say you wish to construct a collection of processes:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS WON'T WORK\nf = GP(mf, kf)\ng = GP(mg, kg)\nh = f + g\n# THIS WON'T WORK","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"You should write","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS GOOD. PLEASE DO THIS\ngpc = GPC()\nf = wrap(GP(mf, kf), gpc)\ng = wrap(GP(mg, kg), gpc)\nh = f + g\n# THIS IS GOOD. PLEASE DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The rule is simple: when constructing GPs that you plan to make interact later in your program, construct them using the same gpc object. For example, DON'T do the following:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS BAD. PLEASE DON'T DO THIS\nf = wrap(GP(mf, kf), GPC())\ng = wrap(GP(mg, kg), GPC())\nh = f + g\n# THIS IS BAD. PLEASE DON'T DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The mistake here is to construct a separate GPC object for each GP. Hopefully, the code errors, but might yield incorrect results.","category":"page"},{"location":"internals/#CompositeGP","page":"Internals","title":"CompositeGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"CompositeGPs are constructed as affine transformations of CompositeGPs and GPs. We describe the implemented transformations below.","category":"page"},{"location":"internals/#Addition","page":"Internals","title":"Addition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Given AbstractGPs f and g, we define","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f + g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"to be the CompositeGP sastisfying h(x) = f(x) + g(x) for all x.","category":"page"},{"location":"internals/#Multiplication","page":"Internals","title":"Multiplication","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Multiplication of AbstractGPs is undefined since the product of two Gaussian random variables is not itself Gaussian. However, we can scale an AbstractGP by either a constant or (deterministic) function.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = c * f\nh = sin * f","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"will both work, and produce the result that h(x) = c * f(x) or h(x) = sin(x) * f(x).","category":"page"},{"location":"internals/#Composition","page":"Internals","title":"Composition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f ∘ g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for some deterministic function g is the composition of f with g. i.e. h(x) = f(g(x)).","category":"page"},{"location":"internals/#cross","page":"Internals","title":"cross","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = cross([f, g])","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for WrappedGPs and CompositeGPs f and g. Think of cross as having stacked f and g together, so that you can work with their joint.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"For example, if you wanted to sample jointly from f and g at locations x_f and x_g, you could write something like","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"fg = cross([f, g])\nx_fg = BlockData([x_f, x_g])\nrand(fg(x_fg, 1e-6))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This particular function isn't part of the user-facing API because it isn't generally needed. It is, however, used extensively in the implementation of the GaussianProcessProbabilisticProgramme.","category":"page"},{"location":"internals/#GPPP","page":"Internals","title":"GPPP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The GaussianProcessProbabilisticProgramme is another AbstractGP which enables provides a thin layer of convenience functionality on top of WrappedGPs and CompositeGPs, and is the primary way in which it is intended that users will interact with this package.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP like this","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"is equivalent to manually constructing a GPPP using WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"gpc = GPC()\nf1 = wrap(GP(SEKernel()), gpc)\nf2 = wrap(GP(SEKernel()), gpc)\nf3 = f1 + f2\nf = Stheno.GPPP((f1=f1, f2=f2, f3=f3), gpc)","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"If you take a look at the gaussian_process_probabilistic_programming.jl source, you'll see that it's essentially just the above, and an implementation of the AbstractGPs API on top of a GPPP.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP is a single GP on an extended input domain: (Image: )","category":"page"}]
}
