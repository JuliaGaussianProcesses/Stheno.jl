var documenterSearchIndex = {"docs":
[{"location":"api/#Public-API","page":"API","title":"Public API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = Stheno","category":"page"},{"location":"api/#GPPP","page":"API","title":"GPPP","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Core functionality for working with GPPPs.","category":"page"},{"location":"api/","page":"API","title":"API","text":"@gppp\nGPPPInput\nBlockData\nsplit","category":"page"},{"location":"api/#Stheno.@gppp","page":"API","title":"Stheno.@gppp","text":"@gppp(model_expression)\n\nConstruct a GaussianProcessProbabilisticProgramme (GPPP) from a code snippet.\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = GPPPInput(:f3, randn(5))\n\ny = rand(f(x, 0.1))\n\nlogpdf(f(x, 0.1), y) ≈ elbo(f(x, 0.1), y, f(x, 1e-9))\n\n# output\n\ntrue\n\n\n\n\n\n","category":"macro"},{"location":"api/#Stheno.GPPPInput","page":"API","title":"Stheno.GPPPInput","text":"GPPPInput(p, x::AbstractVector)\n\nAn collection of inputs for a GPPP. p indicates which process the vector x should be extracted from. The required type of p is determined by the type of the keys in the GPPP indexed.\n\njulia> x = [1.0, 1.5, 0.3];\n\njulia> v = GPPPInput(:a, x)\n3-element GPPPInput{Symbol, Float64, Vector{Float64}}:\n (:a, 1.0)\n (:a, 1.5)\n (:a, 0.3)\n\njulia> v isa AbstractVector{Tuple{Symbol, Float64}}\ntrue\n\njulia> v == map(x_ -> (:a, x_), x)\ntrue\n\n\n\n\n\n","category":"type"},{"location":"api/#Stheno.BlockData","page":"API","title":"Stheno.BlockData","text":"BlockData{T, TV<:AbstractVector{T}, TX<:AbstractVector{TV}} <: AbstractVector{T}\n\nA strictly ordered collection of AbstractVectors, representing a ragged array of data.\n\nVery useful when working with GPPPs. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\n# Specify a `BlockData` set that can be used to index into\n# the `f2` and `f3` processes in `f`.\nx = BlockData(\n    GPPPInput(:f2, randn(4)),\n    GPPPINput(:f3, randn(3)),\n)\n\n# Index into `f` at the input.\nf(x)\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.split","page":"API","title":"Base.split","text":"Base.split(x::BlockData, Y::AbstractVecOrMat)\n\nConvenience functionality to make working with the output of operations on GPPPs easier. Splits up the rows of Y according to the sizes of the data in x.\n\njulia> Y = vcat(randn(5, 3), randn(4, 3));\n\njulia> x = BlockData(randn(5), randn(4));\n\njulia> Y1, Y2 = split(x, Y);\n\njulia> Y1 == Y[1:5, :]\ntrue\n\njulia> Y2 == Y[6:end, :]\ntrue\n\nWorks with any BlockData, so blocks can e.g. be GPPPInputs. This is particularly helpful for working with the output from rand and marginals from a GPPP indexed at BlockData. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = BlockData(GPPPInput(:f2, randn(3)), GPPPInput(:f3, randn(4)))\ny = rand(f(x))\ny2, y3 = split(x, y)\n\nFunctionality also works with any AbstractVector.\n\n\n\n\n\n","category":"function"},{"location":"api/#Building-GPPPs","page":"API","title":"Building GPPPs","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"If in doubt about what any of these transformations can do, play around with them!","category":"page"},{"location":"api/","page":"API","title":"API","text":"+\n*\nstretch\nperiodic\nshift\nselect","category":"page"},{"location":"api/#Base.:+","page":"API","title":"Base.:+","text":"+(fa::AbstractGP, fb::AbstractGP)\n\nProduces an AbstractGP f satisfying f(x) = fa(x) + fb(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.:*","page":"API","title":"Base.:*","text":"*(f, g::AbstractGP)\n\nProduce an AbstractGP h satisfying to h(x) = f(x) * g(x), for some deterministic function f.\n\nIf f isa Real, then h(x) = f * g(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.stretch","page":"API","title":"Stheno.stretch","text":"stretch(f::AbstractGP, l::Union{AbstractVecOrMat{<:Real}, Real})\n\nThis is the primary mechanism by which to introduce length scales to your programme.\n\nIf l isa Real or l isa AbstractMatrix{<:Real}, stretch(f, l)(x) == f(l * x) for any input x. In the l isa Real case, this is equivalent to scaling the length scale by 1 / l.\n\nl isa AbstractVector{<:Real} is equivalent to stretch(f, Diagonal(l)).\n\nEquivalent to f ∘ Stretch(l).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.periodic","page":"API","title":"Stheno.periodic","text":"periodic(g::AbstractGP, f::Real)\n\nProduce an AbstractGP with period f.\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.shift","page":"API","title":"Stheno.shift","text":"shift(f::AbstractGP, a::Real)\nshift(f::AbstractGP, a::AbstractVector{<:Real})\n\nReturns the GP g given by g(x) = f(x - a)\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.select","page":"API","title":"Stheno.select","text":"select(f::AbstractGP, idx)\n\nSelect the dimensions of the input to f given by idx.\n\n\n\n\n\n","category":"function"},{"location":"input_types/#Input-Types","page":"Input Types","title":"Input Types","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Stheno enables the user to handle any type of input domain they wish and provides a common API that users must implement when considering a new way of representing input data to ensure that the package knows how to handle them appropriately.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"This interface has now been adopted throughout the JuliaGaussianProcesses ecosystem.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Discussed below is this interface's core assumptions, a detailed account of a couple of important concrete input types.","category":"page"},{"location":"input_types/#The-Central-Assumption","page":"Input Types","title":"The Central Assumption","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"The central assumption made in all user-facing and internal functions is this: when a collection of inputs are required, they subtype AbstractVector. For example, x isa AbstractVector when indexing into a GP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f(x, σ²)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"or computing the covariance matrix associated with a kernel:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"kernelmatrix(SqExponentialKernel(), x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When computing the cross-covariance matrix between two GPs","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"cov(f, g, x_f, x_g)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_f and x_g must be AbstractVectors. All other operations involving collections of inputs have the same restrictions. Always AbstractVectors.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"For example, this means that when handling multi-dimensional inputs stored in a Matrix they must be wrapped so that the package knows to treat them as a vector — more on this in below in D-dimensional Euclidean Spaces.","category":"page"},{"location":"input_types/#Dimensional-Euclidean-Space","page":"Input Types","title":"1-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When constructing a GP whose domain is the real-line, for example when using a GP to solve some kind of time-series problem, it is sufficient to work with Vector{<:Real}s of inputs. As such, the following is completely valid:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"using Stheno: GPC\nf = wrap(GP(SqExponentialKernel()), GPC())\nx = randn(10)\nf(x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"It is also possible to work with other AbstractArrays that represent a vector of 1-dimensional points, e.g.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = range(-5.0, 5.0; length=100)\nf(x)","category":"page"},{"location":"input_types/#D-Dimensional-Euclidean-Space","page":"Input Types","title":"D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Many applications of interest involve more than a single input-dimension, such as spatio-temporal modeling or Machine Learning tasks. For these cases, we provide ColVecs <: AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"X_data = randn(5, 100)\nX = ColVecs(X_data)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"tells Stheno that it should treat each column of X_data as a vector-valued input. Phrased differently, X is an AbstractVector{T} where T <: Vector{<:Real}, which stores its elements in memory as a dense matrix. This approach has the advantage of making it completely explicit how Stheno treats a matrix of data, and also simplifies quite a bit of the internal machinery, as all vectors of inputs can be assumed to be a subtype of AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If, on the other hand, each row of X_data corresponds to a vector-valued input, use RowVecs(X_data).","category":"page"},{"location":"input_types/#Structure-in-D-Dimensional-Euclidean-Space","page":"Input Types","title":"Structure in D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Consider a rectilinear grid of points in D-dimensional Euclidean space. Such grids of points can be represented in a more memory-efficient manner than can arbitrarily locate sets of points. Moreover, this structure can be exploited to accelerate inference for certain types of problems dramatically. Other such examples exist e.g., uniform grids in N-dimensions, and can be exploited to more efficiently represent input data and to accelerate inference.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Work to exploit these kinds of structures is on-going at the time of writing and will be documented before merging.","category":"page"},{"location":"input_types/#GPPPInput-and-BlockData","page":"Input Types","title":"GPPPInput and BlockData","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"A GPPPInput is a special kind of AbstractVector, specifically designed for GPPPs. Given a GPPP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"a GPPPInput like","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_ = randn(5)\nx = GPPPInput(:f3, x_)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"applied to f","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"fx = f(x, 0.1)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"constructs a FiniteGP comprising f3 at x_. GPPPInput(:f2, x_) and GPPPInput(:f1, x_) are the analogues for f1 and f2.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If you wish to refer to multiple processes in f at the same time, use a BlockData. For example","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = BlockData(GPPPInput(:f2, x_), GPPPInput(:f3, x_))","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"would pull out a 10-dimensional FiniteGP, the first 5 dimensions being f2 at x_, the last 5 dimensions being f3 at x_.","category":"page"},{"location":"kernel_design/#Kernel-Design","page":"Kernel Design","title":"Kernel Design","text":"","category":"section"},{"location":"kernel_design/","page":"Kernel Design","title":"Kernel Design","text":"Please refer to KernelFunctions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"EditURL = \"https://github.com/JuliaGaussianProcesses/Stheno.jl/blob/master/examples/getting_started/script.jl\"","category":"page"},{"location":"examples/getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Here we document how to do some basic stuff, including learning and inference in kernel parameters, with Stheno.jl. To do this, we that makes use of a variety of packages from the Julia ecosystem. In particular, we'll make use of","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl to perform Bayesian inference in our model parameters,\nOptim.jl for point-estimates of our model parameters,\nParameterHandling.jl to make it easy to work with our model's parameters, and to ensure that it plays nicely with Optim and AdvancedHMC,\nZygote.jl to compute gradients.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This guide assumes that you know roughly what's going on conceptually with GPs. If you're new to Gaussian processes, an excellent introduction can be found in either this video lecture or this one.","category":"page"},{"location":"examples/getting_started/#Exact-Inference-in-a-GP-in-2-Minutes","page":"Getting Started","title":"Exact Inference in a GP in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This is only a slightly more interesting version of the first example on the README. It's slightly more interesting in that we give the kernels some learnable parameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Import the packages we'll need for this bit of the demo.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AbstractGPs\nusing LinearAlgebra\nusing Stheno\nusing Plots","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Short length-scale and small variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l1 = 0.4\ns1 = 0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Long length-scale and larger variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l2 = 5.0\ns2 = 1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Specify a GaussianProcessProbabilisticProgramme object, which is itself a GP built from other GPs.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f = @gppp let\n    f1 = s1 * stretch(GP(Matern52Kernel()), 1 / l1)\n    f2 = s2 * stretch(GP(SEKernel()), 1 / l2)\n    f3 = f1 + f2\nend;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Generate a sample from f3, one of the processes in f, at some random input locations. Add some iid observation noise, with zero-mean and variance 0.05.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"const x = GPPPInput(:f3, collect(range(-5.0, 5.0; length=100)));\nσ²_n = 0.02;\nfx = f(x, σ²_n);\nconst y = rand(fx);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Compute the log marginal likelihood of this observation, just because we can.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"logpdf(fx, y)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"26.393104819879888","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"fx should be thought of as \"f at x\", and is just as a multivariate Normal distribution, with zero mean and covariance matrix","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"heatmap(cov(f, x) + σ²_n * I)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As such samples can be drawn from it, and the log probability any particular value under it can be computed, in the same way that you would an MvNormal from Distributions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can visualise x and y with Plots.jl","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"plt = plot();\nscatter!(plt, x.x, y; color=:red, label=\"\");\ndisplay(plt)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"It's straightforward to compute the posterior over f:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior = posterior(fx, y);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior is another GP, the posterior over f given noisy observations y at inputs x.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The plotting recipes from AbstractGPs.jl can be utilised to easily print whichever component of the GPPP is needed.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"x_plot = range(-7.0, 7.0; length=1000);\nxp = GPPPInput(:f3, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp);\n    ribbon_scale=3, label=\"\", color=:blue, fillalpha=0.2, linewidth=2,\n)\nplot!(\n    plt, x_plot, rand(f_posterior(xp, 1e-9), 10);\n    samples=10, markersize=1, alpha=0.3, label=\"\", color=:blue,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you've built a simple GP probabilistic programme, performed inference in it, and looked at the posterior. We've only looked at one component of it though – we could look at others. Consider f2:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"xp2 = GPPPInput(:f2, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp2);\n    ribbon_scale=3, label=\"\", color=:red, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior(xp2, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:red,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-NelderMead-in-2-Minutes","page":"Getting Started","title":"Fit a GP with NelderMead in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Stheno.jl is slightly unusual in that it declines to provide a fit or train function. Why is this? In short, because there's really no need – the ecosystem now contains everything that is needed to easily do this yourself. By declining to insist on an interface, Stheno.jl is able to interact with a wide array of tools, that you can use in whichever way you please.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Optim requires that you provide an objective function with a single Vector{<:Real} parameter for most of its optimisers. We'll use ParameterHandling.jl to build one of these in a way that doesn't involve manually writing code to convert between a structured, human-readable, representation of our parameters (in a NamedTuple) and a Vector{Float64}.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"First, we'll put the model from before into a function:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function build_model(θ::NamedTuple)\n    return @gppp let\n        f1 = θ.s1 * stretch(GP(SEKernel()), 1 / θ.l1)\n        f2 = θ.s2 * stretch(GP(SEKernel()), 1 / θ.l2)\n        f3 = f1 + f2\n    end\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"build_model (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've assumed that the parameters will be provided as a NamedTuple, so let's build one and check that the model can be constructed:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\n\nθ = (\n    # Short length-scale and small variance.\n    l1 = positive(0.4),\n    s1 = positive(0.2),\n\n    # Long length-scale and larger variance.\n    l2 = positive(5.0),\n    s2 = positive(1.0),\n\n    # Observation noise variance -- we'll be learning this as well.\n    s_noise = positive(0.1),\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(l1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-0.9162907691270586, Bijectors.Exp{0}(), 1.4901161193847656e-8), s1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.6094379869399091, Bijectors.Exp{0}(), 1.4901161193847656e-8), l2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(1.6094379094538682, Bijectors.Exp{0}(), 1.4901161193847656e-8), s2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.490116130486996e-8, Bijectors.Exp{0}(), 1.4901161193847656e-8), s_noise = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-2.3025852420056685, Bijectors.Exp{0}(), 1.4901161193847656e-8))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've used ParameterHandling.jls positive constraint to ensure that all of the parameters remain positive during optimisation. Note that there's no magic here, and Optim knows nothing about positive. Rather, ParameterHandling knows how to make sure that Optim will optimise the log of the parameters which we want to be positive.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can make this happen with the following:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\nusing ParameterHandling: value, flatten\n\nθ_flat_init, unflatten = flatten(θ);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Concrete types used for clarity only.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"unpack = value ∘ unflatten;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now easily define a function which accepts the flat form of the parameters, and return the negative log marginal likelihood (nlml) of the parameters θ:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function nlml(θ::NamedTuple)\n    f = build_model(θ)\n    return -logpdf(f(x, θ.s_noise + 1e-6), y)\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"nlml (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can use any gradient-free optimisation technique from Optim.jl to find the parameters whose negative log marginal likelihood is locally minimal:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Optim\nresults = Optim.optimize(\n    nlml ∘ unpack,\n    θ_flat_init + randn(length(θ_flat_init)),\n    NelderMead(),\n)\nθ_opt = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Note that we just added some noise to the initial values to make the optimisation more interesting.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now use this to construct the posterior GP and look at the posterior in comparison to the true posterior with the known hyperparameters","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_opt = build_model(θ_opt);\nf_posterior_opt = posterior(f_opt(x, θ_opt.s_noise), y);\nms_opt = marginals(f_posterior_opt(xp));\nplot!(\n    plt, x_plot, mean.(ms_opt);\n    ribbon=3std.(ms_opt), label=\"\", color=:green, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_opt(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:green,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Of course, the exact posterior has not been recovered because the exact hyperparameters cannot be expected to be recovered given a finite amount of data over a finite width window.","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-BFGS-in-2-minutes","page":"Getting Started","title":"Fit a GP with BFGS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The BFGS algorithm is generally the preferred choice when optimising the hyperparameters of fairly simple GPs. It requires access to the gradient of our nlml function, which can be straightforwardly obtained via reverse-mode algorithmic differentiation, which is provided by Zygote.jl:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Zygote: gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This will probably take a while to get going as Zygote needs to compile.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"results = Optim.optimize(\n    nlml ∘ unpack,\n    θ->gradient(nlml ∘ unpack, θ)[1],\n    θ_flat_init + 0.1 * randn(length(θ_flat_init)),\n    BFGS(),\n    Optim.Options(\n        show_trace=true,\n    );\n    inplace=false,\n)\nθ_bfgs = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Iter     Function value   Gradient norm \n     0     5.359142e+00     3.308649e+01\n * time: 0.025166034698486328\n     1    -1.495823e+01     2.320195e+01\n * time: 1.4442999362945557\n     2    -1.940714e+01     1.507321e+01\n * time: 1.4564659595489502\n     3    -2.259041e+01     6.009287e+00\n * time: 1.480254888534546\n     4    -2.345121e+01     3.159821e+00\n * time: 1.504180908203125\n     5    -2.370719e+01     2.414946e+00\n * time: 1.5339720249176025\n     6    -2.379292e+01     8.194542e-01\n * time: 1.545300006866455\n     7    -2.380063e+01     7.103705e-02\n * time: 1.5562129020690918\n     8    -2.380089e+01     4.039593e-03\n * time: 1.5729410648345947\n     9    -2.380094e+01     5.763094e-02\n * time: 1.595763921737671\n    10    -2.409231e+01     1.676382e+00\n * time: 1.644927978515625\n    11    -2.421629e+01     1.627575e+00\n * time: 1.6781129837036133\n    12    -2.460696e+01     7.897551e-01\n * time: 1.6945750713348389\n    13    -2.464135e+01     3.026734e-01\n * time: 1.7061200141906738\n    14    -2.464259e+01     6.942965e-02\n * time: 1.7253050804138184\n    15    -2.464272e+01     1.326635e-02\n * time: 1.741760015487671\n    16    -2.477666e+01     1.948873e+00\n * time: 1.77315092086792\n    17    -2.489946e+01     1.642224e+00\n * time: 1.8134129047393799\n    18    -2.527294e+01     1.394717e+00\n * time: 1.8297970294952393\n    19    -2.536891e+01     1.334985e+00\n * time: 1.8398239612579346\n    20    -2.542642e+01     7.033321e-01\n * time: 1.8507940769195557\n    21    -2.543882e+01     4.087718e-01\n * time: 1.8617630004882812\n    22    -2.544351e+01     1.834271e-01\n * time: 1.8727848529815674\n    23    -2.544434e+01     1.198902e-02\n * time: 1.8965740203857422\n    24    -2.544435e+01     1.598499e-03\n * time: 1.9090230464935303\n    25    -2.544435e+01     1.884419e-04\n * time: 1.91982102394104\n    26    -2.544435e+01     1.651882e-06\n * time: 1.9313020706176758\n    27    -2.544435e+01     1.842620e-08\n * time: 1.948246955871582\n    28    -2.544435e+01     3.423290e-12\n * time: 1.9582970142364502\n","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Once more visualising the results:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_bfgs = build_model(θ_bfgs);\nf_posterior_bfgs = posterior(f_bfgs(x, θ_bfgs.s_noise), y);\nms_bfgs = marginals(f_posterior_bfgs(xp));\nplot!(\n    plt, x_plot, mean.(ms_bfgs);\n    ribbon=3std.(ms_bfgs), label=\"\", color=:orange, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_bfgs(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:orange,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Notice that the two optimisers produce (almost) indistinguishable results.","category":"page"},{"location":"examples/getting_started/#Inference-with-NUTS-in-2-minutes","page":"Getting Started","title":"Inference with NUTS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl provides a state-of-the-art implementation of the No-U-Turns sampler, which we can use to perform approximate Bayesian inference in the hyperparameters of the GP. This is slightly longer than the previous examples, but it's all set up associated with AdvancedHMC, which is literally a copy-paste from that package's README:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AdvancedHMC, Zygote","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define the log marginal joint density function and its gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"ℓπ(θ_flat) = -nlml(unpack(θ_flat)) - 0.5 * sum(abs2, θ_flat)\nfunction ∂ℓπ∂θ(θ_flat)\n    lml, back = Zygote.pullback(ℓπ, θ_flat)\n    ∂θ_flat = first(back(1.0))\n    return lml, ∂θ_flat\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"∂ℓπ∂θ (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Sampling parameter settings","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"n_samples, n_adapts = 500, 20","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(500, 20)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perturb the initialisation a little bit.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"θ0_flat = θ_flat_init + 0.1 * randn(length(θ_flat_init))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"5-element Vector{Float64}:\n -0.7884512247981861\n -1.7578806471142945\n  1.601047375887629\n -0.08351231127951705\n -2.246683325639423","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define metric space, Hamiltonian, sampling method and adaptor","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"metric = DiagEuclideanMetric(5)\nh = Hamiltonian(metric, ℓπ, ∂ℓπ∂θ)\nint = Leapfrog(find_good_eps(h, θ0_flat))\nprop = NUTS{MultinomialTS, GeneralisedNoUTurn}(int)\nadaptor = StanHMCAdaptor(n_adapts, Preconditioner(metric), NesterovDualAveraging(0.8, int.ϵ))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"StanHMCAdaptor(\n    pc=WelfordVar,\n    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.4),\n    init_buffer=75, term_buffer=50, window_size=25,\n    state=window(76, -30), window_splits()\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perform inference.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"samples, stats = sample(h, prop, θ0_flat, n_samples, adaptor, n_adapts; progress=true)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"([[-0.7884512247981861, -1.7578806471142945, 1.601047375887629, -0.08351231127951705, -2.246683325639423], [-0.7884512247981861, -1.7578806471142945, 1.601047375887629, -0.08351231127951705, -2.246683325639423], [-0.7737223209921616, -1.9756592734677665, 1.5369405481136675, -0.014621709261598649, -2.5608709104055793], [-0.9852233701067443, -1.7951422667090409, 1.539026683564271, -0.0217681303003767, -3.4436339195725667], [-1.4288407236665357, -1.8409646877505192, 1.2414673800511251, -0.05537591747240043, -4.255298384113064], [-1.4734279140437492, -2.0107781657510806, 0.6772305586820331, 0.03426198485747869, -3.5939637146564962], [0.5700968555775555, -1.060281110132228, 1.879569458863043, -0.026408026162819648, -3.6793921918253516], [0.7413291655867438, -1.1933798764148746, 1.623985363237593, 0.36127200234634316, -3.3721772965502965], [0.8956886500853934, -0.38555931445352437, 1.7116674864286687, 0.29714755410190774, -3.393928232129362], [0.6684694149006614, -0.7714332847278389, 2.004249053157272, -0.3051360712379903, -3.485840147401458], [0.6332719345991804, -0.9908854610482813, 1.840042872132329, 0.189047336508099, -3.521746508710695], [0.6332719345991804, -0.9908854610482813, 1.840042872132329, 0.189047336508099, -3.521746508710695], [0.29706823046387293, -1.7948939360112115, 1.2203320491712437, 1.0402198609304754, -3.524410418694969], [-0.46095169855883683, -1.4564310414323827, 2.319681006722425, 1.6710409988056365, -3.6642460235455596], [0.15768153152338538, -1.5664883889288492, 1.516969895902564, -0.49296951616165796, -3.5789147615097234], [0.2803676582028658, -0.8880503046878663, 1.391916557330024, 0.38189086899002245, -3.4602781353719068], [0.5559460850332343, -0.41129926503238345, 1.612739273354146, -0.833776097443166, -3.6977779480944615], [0.9568934045740469, -0.5675897601975305, 1.111098951741678, -0.49040021345579027, -3.5159880721300025], [0.9730756409041041, -0.3729211000325797, 0.5944787162232384, -0.5586938782575901, -3.5625139035142253], [1.3929461027508507, -0.0039904264483063695, 0.5751633235518498, -0.9861806609167253, -3.4591826266784382], [0.9006254790447356, 0.07618158898403077, 1.2308198250576936, 0.046195919133263624, -3.490585063926061], [1.0595871715728191, 0.42640207677176417, 0.9312017305996132, -0.31111033704116586, -3.6326048039415917], [1.447448743550657, -0.9083047242765474, 0.9462559480786146, -0.0245952952999237, -3.571270391482572], [1.3466126987469578, -0.6943707167170896, 0.8395169671941832, 0.10843579877478822, -3.470280168682024], [-2.4801593258667824, -2.173004185013772, 1.044403471600818, 0.18087338860391083, -4.190101462564195], [-2.1801097355316825, -2.2059633520809707, 0.9615302498665675, -0.07069313430849891, -4.079114972272027], [-2.0009975244328126, -2.0666551813871235, 1.0304465696918963, -0.0160259283795024, -4.04884327438293], [-2.0951844179983525, -1.9307755040143575, 1.0859008419429481, 0.17977790057036913, -3.8948152286050286], [-1.386418859643567, -2.311430563269877, 0.7457568385825748, -0.30098340390145684, -3.754953066063698], [-1.872973560291623, -2.389008456940457, 1.1798737821599743, -0.0931489494035074, -3.8377417390104287], [-1.0462074607580631, -1.6623329172500938, 0.7289200254959016, -0.6111106678730953, -3.967514208966333], [-1.2952340863764737, -1.403911053055741, 1.153666471666122, -0.4220028997005941, -3.72363064560984], [-0.7926919640346796, -2.841141041312942, 0.9134711386395243, 0.028248054770843634, -3.789106366980469], [-0.19872345392436697, -0.9342131833957638, 1.8662909076100274, -0.20869162321572482, -3.5699118785490165], [-0.22358956501032395, -1.7854052524600028, 1.7284414239174808, -0.11542889673962489, -3.612295094106055], [-0.5833383556162877, -1.8245922776558772, 1.6143766821675616, 0.17655800826811027, -3.6319016087092826], [-0.3465194020690813, -1.621091389908409, 1.7426562743044463, 0.17694995839634212, -3.597561617769608], [0.09628550005344286, -1.5425039212543281, 1.0131779343352263, 0.6230104663580526, -3.4707195128251964], [-0.5090663317748974, -1.3940842116209713, 2.062058315657118, 0.3121294262999721, -3.8008693686573753], [0.6309846637925951, -1.427930698706731, 0.7011525187716038, -0.2859397124094787, -3.6069862628976823], [0.3185686073940906, -1.2252109328844236, 1.4560315491240876, -0.029544453538512747, -3.826880896109351], [0.6337566253269128, -0.4374768716738298, 1.0386708639256597, -0.21472439967160153, -3.6972839534835487], [0.7182317737370434, -1.81714479030786, 0.9697227221942089, -0.07235322495575283, -3.6506389496998377], [0.5792957201955881, -0.7038493947875976, 1.7555126904172802, -0.102094783398545, -3.6611251350708423], [-0.3920615605340064, -1.8642058300708773, 1.0264580671216774, -0.17488811169141028, -3.3715058912925118], [0.5268079994835958, -1.3065550410676887, 1.2791792471121244, -0.01931243657068591, -3.299969270516398], [1.0245752946508784, 0.36305774322752105, 1.0184735280557364, -0.13269206307365794, -3.5071057007202904], [1.8113112415115613, -0.5609962139921125, 0.607816297308981, -1.1372144600955445, -3.5496423999688402], [2.1083007438334938, -0.05787986493050906, 0.2688773253661274, -1.2126612312820693, -3.9916863170287007], [0.8406092344582577, -0.007143320731896108, 1.1416997789244696, -0.13211517215857213, -3.231982563453421], [0.7058630685257696, -0.07936167845264283, 0.6409990262142937, 0.04462868101538643, -3.8888053737338226], [1.2850211829702778, -0.9071248211273812, 1.009748601461978, -0.6172983764511955, -3.2148397634220567], [1.4028347823335618, -0.14253512192231976, 0.36434110438106576, -0.8619583598671642, -3.6169677874041435], [0.5656558821315514, -0.5595762978190578, 1.3382564721783479, -0.058765453276036134, -3.754367914336954], [-0.6176933670839542, -1.9323785130741933, 1.3622149869634632, 0.13372355969151134, -3.5803734095971005], [-0.757672130804654, -2.3592541696561558, 1.0024084321185203, 0.02392623920859971, -3.8286333421220964], [-0.17092952884523022, -1.381727532307105, 1.3692536015228993, -0.23178087032926706, -3.8908338729944134], [-0.1883295820525171, -1.5539862494598524, 1.1190458733324185, -0.4930255008174079, -3.603074408342005], [0.07574579651430009, -1.1665324953994307, 0.70305443737173, 0.1341027258816108, -3.4177766540445935], [-0.10037542028877955, -1.0177640180381267, 2.0499126546874242, -0.600451398773229, -3.4961967132859377], [0.06580327510452688, -0.7775273642202682, 1.6955860263379787, -0.2493237903239541, -3.622774340295402], [-0.037255657163982034, -1.0630502426699517, 1.2143354047522772, -0.1494714690577234, -3.632267497330058], [-0.0028481523261721375, -0.8579841646576916, 1.0308105327080617, -0.3119198053501976, -3.653316499966871], [1.3755542781981318, -0.8755273821644234, 1.1431918942651267, 0.431977233362227, -3.578757020381828], [1.2416020272950086, -0.7355146614726212, 0.8039944877975194, 0.19527865769117178, -3.5544350747221696], [0.8796718493042881, -1.1884994252458452, 2.0580687312076553, 0.9414124737563898, -3.3839334355199258], [-0.16266830948773559, -1.1211893163751496, 1.766580803955284, -0.10196217645189892, -3.482563769482141], [0.3816999704012723, -1.094976033465735, 1.0684246078653032, -0.0001454042618882559, -3.4614374315249705], [0.7332613528123102, -0.34488398462701597, 1.6319212290530536, -0.32794343050681407, -3.588994530007173], [1.4651578191108177, 0.7283780646222929, -0.2650462280987246, -1.2886206307056571, -3.8547873870199556], [2.041063639586497, 0.21214707772016828, 0.9346430341965057, -0.8557258929595002, -3.5263187420138444], [1.9139890019350803, 0.37089521163831846, 0.6010827970653878, -0.795719370105788, -3.6639696590466433], [0.8893113360022149, -0.5578839742381054, 0.7243626802317857, -1.0967224001464473, -3.4464607286180042], [1.005158118258521, -0.33183086547276197, 0.7443536030052359, -0.31219823664764, -3.546729638985695], [1.1498653256153313, -0.06000873722054778, 0.4363343385345172, -1.854083787892775, -3.506293728323379], [1.0594118477478363, -0.2995191708705779, 0.3987897284379673, -0.8746957873261941, -3.4016413973188735], [1.2375848214745584, -0.008805574131077853, 0.10889370972429943, -2.08859144350366, -3.4484347325781304], [1.075934185754875, 0.5490798723155179, 0.20389961500735582, -2.0899055657206844, -3.7706477530818763], [0.8783789238016729, 0.4791069203814501, 0.020840626874120027, -1.8857978950742547, -3.7075361785733247], [1.4540051660362083, -0.09906780875779361, 0.3252701848980965, -2.4060025536044893, -3.4273003330093723], [1.035023830517242, -0.13921762741448324, -0.6993363414883783, -1.049460133578578, -3.786202093986582], [0.7367159285739702, 0.18407565363009254, -0.34348428445792073, -2.0219178753878913, -3.798021036919369], [1.1012212100876733, -0.1362554614836693, -0.6219674317648969, -1.431618356078615, -3.1485388515808124], [0.7355230483125275, 0.48341013595293825, -0.28787415033057795, -1.401627428634106, -3.7307769894179494], [1.3162845227605449, 0.2066917282760022, 0.5255847550117617, -1.7920422370329296, -3.4183627385624646], [1.218310321351759, 0.4139884591363763, -0.020392406768101556, -1.9811518730000919, -3.911521138206774], [0.8973304155299695, -0.3155466476670223, 1.1428966930813595, 0.594810786791029, -3.7848491346615876], [0.7458143557308555, -0.6500239461459266, 2.0847742846529838, 0.4305475053411393, -3.5768622283835403], [0.7816814989196549, -0.8256903942065328, 1.6443956842471912, 0.9307948349967662, -3.4252283110522543], [1.0788077001263392, 0.006556379667441027, 1.3755897563253445, -1.2151237443978602, -3.549275278005311], [0.3377217394201003, -1.6723370288143382, 2.0505671516851374, 0.2879156673442776, -3.6067186341192237], [1.8274786470900486, 0.4667273733187287, 0.18055995075809786, -1.1934539323055855, -3.7277955634756417], [1.8216365151658531, 0.2363771134417677, 0.7902549858214638, -1.151904861434827, -3.6072469934659974], [2.129297810994057, -0.1073479744705552, 0.2505068419235775, -0.9272014749556438, -3.392378863386107], [1.3690076209843243, -0.4651946851124984, 0.4788610696408955, -0.4646629232611428, -3.3198748289244504], [1.5449003979713303, -0.35840132736032115, 0.748461473908221, -0.7572206218897433, -3.7816624181423952], [1.3441778352982892, -0.07145390063195524, 0.6609482531527846, -0.7492294182013134, -3.3315992283393627], [0.856147072928555, -0.19640266466057033, 1.3649354164401477, -0.5686491338982338, -3.470974038136496], [0.9145710756125325, -0.11708034995010108, 1.4055865862673607, -1.1641641163570942, -3.4992720169931735], [1.4471880031599225, -0.27115754514988244, 0.22848455794732636, -0.8375695086113236, -3.6093456514197815], [1.4460410032332225, 0.45089137779834076, 0.33457840407895767, -1.0205312541405123, -3.5655832138017782], [0.44012652648541867, -1.4162453697543353, 1.1034519677509032, 0.2362043293449745, -3.618019988168429], [0.42700748615791406, -1.1853033211412332, 1.1376738021461914, 0.4290011155756181, -3.534377144098703], [0.8574743250575331, -0.5250691047102329, 1.6229135876982803, -0.43246139152066065, -3.5921990062449747], [0.7029327216192673, -0.7161162409848839, 0.756706833560892, -0.6501817362874036, -3.746550104775153], [0.7198033816772018, -0.32179195225880186, 1.3247066868225126, -0.8351583200212428, -3.61317540265946], [1.054509397052108, -0.8320146438409591, 0.8303907810388619, -0.029934035101238626, -3.746912969088311], [1.7655852564990093, -1.5988223535377788, 0.8156867198751637, -0.1746768645732244, -3.5487555288465513], [1.6153511827310134, -0.38952029048116504, 1.099065724064428, 0.29391921003655047, -3.457931397641309], [1.8111584314142999, -0.25966495541885926, 1.009812122012971, 0.07511916879636585, -3.295504743871923], [-0.21993545036123907, -3.509229578920429, 0.8457659579013496, 0.10777157723383382, -3.2627168306252026], [-0.6904224280591162, -2.920032020662977, 0.7889046088463769, -0.030274207945255954, -3.8228131630129405], [-1.0768973445539531, -2.9044711798132865, 1.2222468252585805, -0.04821494809435629, -3.3607290608030715], [-1.0430337978636917, -2.9639782433314004, 0.9478073950053536, -0.14286191755529282, -3.3205567474008775], [-1.0097669324034282, -3.066577112177543, 0.6341531749236937, -0.11268403028566228, -3.463235930689742], [-0.8475824439086352, -3.1163142994100426, 1.2721652101877206, -0.009966151268966071, -3.911564912307645], [0.6878084103704039, -3.2307374719814725, 0.6520861238819421, 0.014078794456381077, -3.9302797792804887], [0.6573134483134614, -2.9706629544762655, 1.1194729494467095, -0.3922559658141458, -3.56685398810485], [0.9761731761362473, -0.8548063483185524, 0.5843966212329382, -0.0737483370987525, -3.4330028110844104], [0.08858481712377261, -1.2164707368992322, 1.6532134770566493, -0.1971528015393828, -3.5059603624359843], [1.0571059861508239, -0.18840746554242754, 2.5571024479965514, -0.3290136489602187, -3.5577449627885334], [0.825070202416741, -0.815831987527359, 1.8436852703979754, 0.2582588901815893, -3.4957218295114045], [0.4486395728024868, -1.0963565750752529, 1.6194420801969642, 0.22120510041536467, -3.6219851125048423], [0.9932998085783714, 0.05127871718759813, 1.598659788938991, 0.1912884130792376, -3.5345504326847426], [1.2632796333325027, 0.10738547849988272, -1.2872788846906627, -2.2768954571173934, -3.592557352290967], [1.2747908585984542, 0.01501976801212046, -1.8195618527833295, -2.144276208931438, -3.8298686146989205], [0.7514047885098444, -0.312910574934129, -1.3348893084838802, -2.2029349558266094, -3.8483556938172416], [1.566142648795741, 0.25274668123561683, -1.6199281364941887, -1.9275459056478994, -3.768412482983322], [0.6916288602121697, -0.553501798783769, 2.3646366920319606, 0.6826688432712201, -3.5581948158079344], [1.2754334254514252, -0.5057501256949345, 0.4021891153365643, -1.263512958880982, -3.554699419591077], [0.9849571494259899, 0.2301359483449108, 0.15712551803959485, -2.2377517490170726, -3.5530626725257615], [1.3100380402705165, 0.29755599686443024, 0.1714609326422952, -2.1384920821763473, -3.648662347047923], [1.1136969306041866, 0.29745119786244373, 0.5291634312305941, -1.9987179299794797, -3.6138025435034393], [1.3168251033532377, 0.0764915201675097, 0.3202552955806259, -1.6492251772839501, -3.711078001325539], [0.9535356570812921, -0.35197828243540474, -0.07120475689962633, -1.5269842477546864, -3.7884180009826225], [1.2191114456571208, -0.12734156647843045, -0.2417700053518292, -1.7074935236301623, -3.3970968831875803], [1.7965389644501362, 0.8175125548207288, -0.8745049699852817, -1.8105890188915186, -3.5082610425193947], [0.782053569837644, -0.5838052401580286, 0.059918860124776, -1.7565190566111215, -3.354440049392166], [0.6657987784910692, -0.5814496442610965, 0.04637878022807408, -1.8585726312302375, -3.320842211759554], [1.60588653062944, 0.7060919605064644, -0.35104181249197647, -2.5687462598986457, -3.7357555178686717], [1.6305796423864722, 0.5911583302068321, 0.9752708161678467, -0.2666503045240378, -3.6700610528452446], [2.238251208742946, -0.08657168670023593, 0.6561202605792009, -1.0774033202115276, -3.5925501121769474], [0.2883557098190605, 0.1611934480401906, 0.36113689187413994, -1.2371807594166557, -3.6847242328056904], [0.9759285142728997, -0.25953959598709875, 0.34794689025886466, -0.9135632988878271, -3.5978571902165553], [1.608457272644255, -0.22729291402321639, 0.9917918146427345, 0.19877286345091583, -3.6166141540311347], [0.940715137051455, -0.8103001130180187, 1.1319882386184978, 0.438976657330781, -3.4909019205173326], [0.4990084844458451, -0.8124812372651528, 1.342427425796775, -0.252120582948833, -3.4049454011181974], [0.41546205723510393, -0.843664187231968, 1.3362102248188659, -0.4112549589538947, -3.6025929470498474], [1.1505370927641045, -0.30713487403974465, 1.0935871336251617, -0.16903969741509417, -3.5508256071796565], [1.7183348342762421, -0.2625314561343805, -0.27671273236761473, -1.6215051792562127, -3.9993238506951854], [1.5347801862357646, -0.3942738553076706, -0.14604137402035314, -1.2854165892697762, -3.343848829543247], [1.4359490438535687, 0.0800434855779677, 0.8365314200607086, -1.1777156552543548, -3.701248656608658], [2.004201478471196, 0.2122547924285862, -0.0701887077996994, -1.3038709240945519, -3.7945855319710593], [1.9034814748196598, 0.15732827260513188, 0.19911585121788877, -2.447810496553677, -3.321253686519097], [1.7797848825385312, 0.2568121212804363, 0.017117895942404038, -2.185518188681031, -3.3665451068316865], [1.620992379276585, -0.008956781413234936, -0.477541456090568, -2.0900320327175104, -3.7721434741864823], [1.4342691142028319, 0.9122750026210298, -0.5868632072014299, -1.42383461922451, -3.5984075006475833], [1.5728260716127493, -0.8861391103786991, 0.734214921793024, -0.6496894901755575, -3.461483756336954], [1.5987173863467115, -1.0515992277935968, 0.9285334655547041, -0.7487215578516577, -3.4753547042720183], [1.8960653982535447, -0.9890197135232656, 0.7103965862828368, -0.8047175102184392, -3.4430377462379655], [2.0442728522468516, -0.6817490943436317, 0.9008294695338828, -0.25173476556087276, -3.817302615776885], [0.8674581649010953, -0.5884264803084696, 1.7423903061160035, -0.37061598618275626, -3.538872743505534], [0.8660011467395045, -0.4261841331797959, 1.6638401658863882, 0.30734976150852017, -3.508199213522034], [-0.8563213462792288, -2.1243404769783747, 1.3117622529977608, -0.42519430766457134, -3.8121080276903485], [-1.7694994861874151, -2.2975411174182687, 0.9696145466155701, 0.40375234807612687, -3.740442243252564], [-1.1822123695054576, -1.9501717578645321, 0.9543945393150559, -0.3899135639377857, -3.7093513781571326], [-1.1607611833855018, -2.3239154993411115, 1.0710468412308258, 0.014526644142181577, -3.7915837515399096], [-1.4218732207551337, -1.8415176749977984, 1.5286934761194995, -0.04793744878110037, -3.8053712302565077], [-1.333508211540323, -2.0135287698811384, 1.510216258252572, 0.05446737983112393, -3.8315629536104643], [-1.333508211540323, -2.0135287698811384, 1.510216258252572, 0.05446737983112393, -3.8315629536104643], [-1.5754063935756824, -2.2560409660988268, 1.1345480064705864, 0.08872066147502825, -3.711705960667023], [-1.3698456684146652, -1.811841514144826, 1.3044625336068285, 0.05084140551500907, -3.8020716017072242], [-1.877563330564982, -2.684153964004722, 0.6936435997079395, -0.3843613557763564, -4.015360242686884], [0.4419675643592589, -1.2441467741067034, 2.0055589872305615, 0.49887338811172455, -3.599754531162362], [0.637187692492726, -0.7532035696100624, 1.5154982163192772, 0.32342951583789337, -3.494677225969979], [1.4161401526076793, -0.2182972052842943, -0.5383846664985851, -1.5744124143321843, -3.8228972947058604], [0.8993291847059055, 0.23511405092274038, -1.002091408022432, -2.470487520647427, -3.8046261803592354], [0.7179790964549507, 0.17283563017915232, -1.5227071810331472, -2.311579801817331, -3.9213976463007643], [1.0463288857149085, 0.17953700730049546, -1.5920798687190243, -2.151312392802454, -3.808907631314834], [1.1470429370719701, -0.21521198113715878, -0.9703163135670849, -2.2748452265822214, -3.8720710972683974], [0.9422412203001254, -0.23235097631658275, -1.3614207469965474, -2.1100479463480637, -3.8068334916994395], [1.284820840131618, -0.0449656438223751, -1.303044904011771, -2.0429480770277446, -4.035132913316163], [0.9417801397528035, -0.25681254498956246, -1.4753453682743753, -1.8567391476063488, -3.7609747623421894], [1.447080030806096, 0.2772804651294614, -1.21244171540714, -2.1021358242155337, -3.8365231617820084], [1.2786508866142952, -0.44710141905560075, -0.4607580067100014, -2.1545793552725683, -3.5343121694315847], [1.0216886491552486, 0.4870045486774741, -1.1221805758350543, -1.7495906111723933, -3.9435895688316602], [0.8786457885041483, 0.3294744031760022, -0.8794856729944188, -1.5631970982292265, -3.8976359831614547], [1.2327666687653542, -0.44783033011103435, -1.0510051120792463, -1.866415182233108, -3.835855347868859], [0.9754176581276064, -0.22473407222607633, -1.3172255798904522, -1.839240485112291, -3.7894142695312225], [0.9135108884227966, -0.10283230003812877, -1.4237963667848332, -2.4931957124870032, -3.9972226248927116], [1.3526086099665904, -0.14327016007462695, -0.968701569014124, -1.8622852334195437, -3.931107871986776], [1.6611052556441763, 0.464512538001559, -0.4195146593839593, -1.9353525431024377, -3.685201403544231], [1.195036342592892, -0.4396515492293779, -0.07802946604430092, -1.6562764528687324, -3.616448104133495], [1.6413826435490917, 0.24389080077343142, 0.9829968486556604, -0.573914508933987, -3.4581909088609266], [0.9870451779457656, -0.1874727023427767, 2.538207707933274, 0.018855074343754274, -3.6074707173000995], [0.7584286095857475, -0.23128405762685608, 2.493855236409348, -0.2546899512330112, -3.589758386463103], [0.7598020139486806, -0.884235229722495, 1.6400251351591506, 0.4430613172674061, -3.5399527200276464], [0.3651170417984925, -1.2497146546334903, 1.084734064156677, -0.020847923629256054, -3.592175344648718], [0.8942199761211067, -0.7899330108825748, 1.896032731928438, -0.30307516623721353, -3.509341632363113], [1.3531229548708654, 0.2320019874233534, 0.68788915509088, -0.733006679180932, -3.172195467630544], [1.471648179359598, -0.032451660524251455, 0.7969311042362264, -0.43549042499773316, -3.4591462497386285], [-0.6657431334058488, -1.5699532254383337, 1.6079595092597954, 0.08878702895704588, -3.7232676827865725], [-0.3791410064157384, -1.7578461314810663, 1.769826560524154, 0.8339002316631797, -3.6128235856548407], [-0.09113177364180294, -0.9826430559213791, 1.9114358539607694, 0.3377784848668006, -3.5052325538826383], [0.19751739555572922, -0.930345654606072, 0.5786131564474682, -0.3095476467504217, -3.8279370879722707], [1.1266363920935283, -1.5066398596429262, 1.2146036249040504, -0.33035920717296013, -3.46682149492906], [-0.24243570474580903, -1.9885128200204527, 1.2510796864848526, -0.15901978180046977, -3.727359638557923], [-0.5076071549046728, -2.3411821103720962, 1.2565836248912738, 0.07570059351510254, -3.537725763250371], [0.6494324673488571, -1.4967282330629994, 1.3778550355875878, -0.16222518887980167, -3.4239799040213157], [-0.354443627630561, -1.6539904984845377, 1.932884039575204, 0.04186032157367889, -3.3351555995604665], [-0.38122539056563876, -1.5295174252120924, 2.059398655629558, -0.13748549886327402, -3.6512707826710056], [-0.24725258030660463, -1.7769610356516887, 0.6113358924315859, 0.0059520206923615315, -3.569681891827577], [-0.7257831601069116, -1.9062749774838141, 1.2576723239031775, -0.6413913026671595, -3.6568472686657323], [-0.5496852199305364, -2.1740074462401413, 1.0846345470972107, 0.5707522432681784, -3.8472432027774883], [-0.239226257097999, -2.2078051603810636, 1.350675748614427, 0.5221126212863305, -3.72010650125371], [-0.13681671358345854, -1.4386224660760916, 2.2113455123437236, 0.5287144954993013, -3.8257271618135826], [1.0775594759098692, -0.7982572356739752, 0.630540573700568, -0.26221201507545533, -3.7173711924187414], [1.113090964174176, -0.8731406140603759, 0.9689037600993785, -0.11732331616325853, -3.592947686041126], [0.6240137866345238, 0.05365975299049333, 1.545444082408038, 0.7974958754189068, -3.6655519486563244], [-1.33763927284101, -1.7839198907171292, 1.1302515754427258, -0.31503701239024007, -4.022264948049459], [-1.447407949817632, -2.4885946451371, 0.8829140340414475, -0.06706995440307018, -3.9236760311716847], [-0.9189566111468286, -1.5446474711212996, 1.405542078185654, -0.10941915785922646, -3.960116875924245], [0.16090083585325227, -2.008488130270565, 0.8412543216686367, -0.2081982437275454, -3.3536021899825195], [-1.068435619557309, -1.7193116268427373, 1.4864021748485672, -0.05492489711453531, -3.824914857660806], [-1.9517558832100712, -2.3581097593328813, 0.8286904341921151, -0.04643710885384923, -3.8700109060528627], [0.5034676820705388, -1.3640588425457632, 1.5684483029202925, 0.2608285782374527, -3.4606598610064285], [-0.037947968010604405, -1.770147872424986, 1.0992217445070287, 0.1441697996985744, -3.6786741401176974], [-0.19573101488542152, -1.0239640661125529, 1.8149970615574933, -0.42333874380804665, -3.5662205427612776], [-0.16248330623148785, -1.1516713975524067, 1.7900023645393985, -0.6435887778601335, -3.597068605447228], [-0.25289355401468044, -1.197378551879749, 1.5586080732837713, -0.5841092206735986, -3.68856547792401], [-0.23675997505765975, -1.3940372153573646, 1.5330762153483584, -0.6668464451623128, -3.7218121066379943], [-0.5597098339624305, -1.259843237677247, 1.912705389640904, -0.5038291810013039, -3.650738314668481], [0.6946640601772518, -1.9591170526019643, 0.9105540898593556, 0.2357279080622594, -3.392300126276992], [0.8951942134796719, -1.754918495475198, 1.3273772122120322, -0.1352631815453363, -3.391142617725569], [1.047801568686594, -1.3087539082381636, 0.5189106270912676, -0.09050424214686381, -3.6820417019264546], [0.8743487222436546, -1.3278416927739367, 1.1447378118812421, 0.01737123433724891, -3.3855423944920475], [0.7720486138265057, -1.4637280913405581, 2.0198044980454464, -0.35915790748047227, -3.432489928018476], [0.39054506613443357, -0.5633361399750633, 0.44280025276318885, -0.1654098509942821, -3.56401774085196], [2.5792134115293037, -0.41821501357824065, 0.6653068720227575, 0.26926278893146005, -3.680279928211121], [1.0395121907291132, -1.7293841694131682, 0.8998016298720467, -0.21948712903247508, -3.5182347109011958], [1.2259317734372712, -1.6854760941008549, 0.9464595063329393, -0.32639235295115065, -3.642708248851176], [0.8822668065248163, 0.4364755048818638, 0.7222547891538774, -0.6786640154878741, -3.7787558096777962], [1.3691005328235661, -0.5451879376126201, 0.7784906488823163, -0.9445119478004772, -3.2776169076934174], [1.170353847407536, -0.42304464298204303, 0.47870949517146544, -0.8404625986519556, -3.669776293879803], [1.281311936967175, 0.2924158768126469, 0.9159785721738515, -0.554395440106126, -3.3932129398086155], [1.6987958314561202, -0.5996188669180373, 1.1340578945872686, -0.01642440570483092, -3.45536010774733], [1.3518454678116816, -0.8351630406589297, 0.5062713249836227, -0.6250421672737034, -3.5684538585708223], [1.2664372931609917, 0.30536087338733386, 0.760803154251521, -0.8033092694168501, -3.4745625241351386], [1.3774217100058777, -0.6009669361492459, 1.1642079932775393, -0.39147231882111294, -3.501090782838994], [1.5373967856487751, -0.20304210091100006, 0.35513271877528474, -0.2875137919455052, -3.5338176731832154], [1.384168936417035, 0.04210862856624925, 0.4015203490799895, -1.4359626171165036, -3.460000402668854], [1.037526888688106, 0.304131220410275, 0.7764050171476271, -0.8209055430190147, -3.7922895761315485], [1.4907243513980162, -0.3056256132445646, 0.2783223775322833, -1.2469267618011075, -3.2677226031561233], [1.389275415083113, -0.12153879605460763, 0.4288415974137751, -1.278844249843943, -3.4541472169231984], [1.1499313252560475, -0.7072574372842513, 0.5512589602911582, -1.4335603854033983, -3.586647897738072], [1.2069672484568286, 0.26457585637975567, 0.363157829316361, -1.6506904312481818, -3.5037714094415304], [1.9375005502908504, -0.16380692028218893, 0.8740818773823888, 0.12120722900597777, -3.628358153562491], [1.814872179789663, -0.2918356393656171, 0.9339755860517182, -0.21457874516703945, -3.7778350162341234], [1.5839957443570898, 0.6616436363481757, 0.19331519289589308, -1.7780133602900055, -3.467180794297996], [1.870618737100271, -0.4566580857983943, 1.016917630249727, -0.234899756364907, -3.5798007726610432], [0.388469845240287, -0.9023954849720446, 1.251411026915823, -0.4204765060399157, -3.676368538140495], [0.7384661054164712, -0.8750088261021981, 1.2235359971364592, -0.5337681322975988, -3.693795270450954], [0.486619981824041, -0.7379127142533657, 1.358906665579772, -0.3788221416334358, -3.504619208276564], [2.315146241944863, 0.8677141055807539, 0.4233375616078563, -1.3694643087772722, -3.588198218511435], [1.9261960853379843, 0.7800413203449206, -1.1049788672172767, -1.8905864810810344, -3.7205248710773033], [1.0410670736499181, -0.12121215290463444, -1.4357802623311418, -2.0935606111980625, -3.8200188914301414], [1.1738854336327122, -0.13994265167948403, -1.681825872553639, -1.9233157306587694, -3.785734588079115], [1.0837390087952115, -0.02291292149116228, -1.9330152628523998, -1.8875883331177654, -3.7001067252508353], [0.7941855487472802, -0.26068110016622015, -1.6778743670816705, -2.4884888331639656, -3.907336317258584], [1.3624790533850026, 0.19679977923936814, -2.28772077516237, -2.00297311840185, -4.18760170905753], [1.0007103281535545, 0.31228357784041183, -2.393138560374341, -2.0115405843599286, -4.056380964406894], [0.7439833207267205, 0.571324829648616, -2.2495307019268043, -2.2212897725688223, -4.393923595473608], [1.4057158763818218, 0.19444337722045585, -2.177652258186027, -1.9675949499468917, -3.6657537262887274], [0.8133750244353226, -0.21439882557050188, 0.47517309694954096, -1.4257155238011157, -3.3108434673389096], [1.1976233471335682, -0.2774147372472722, 0.15928053335001574, -1.0982297739314324, -3.9771223184777265], [1.118801739827296, 0.46048569716240517, 2.1350260841713493, -0.20124301640436582, -3.1711760386694823], [1.0194429431823255, 0.4108087274242432, 2.093534641980754, -0.029623138346918654, -3.217463854757432], [0.9660947715328453, -0.23486088773420918, 3.074255670364072, -0.1377718183454491, -3.8360623505860376], [0.9660947715328453, -0.23486088773420918, 3.074255670364072, -0.1377718183454491, -3.8360623505860376], [1.195760041428709, -0.681505940202904, 1.1640861455483618, 1.0855928584488845, -3.6862611447429123], [1.0427544931993005, -0.5764055675277485, 1.820922446003688, 0.6620360289985647, -3.26290026941592], [0.2733965596411239, -0.6049602782742823, 1.1223454976438731, 0.7002517062877874, -3.709255533778238], [0.6886463003040999, -0.4951719693914525, 1.5779663125326717, 1.0609854792862294, -3.3756157219277103], [0.6369262571102018, -0.6668686365668076, 2.517454757033504, 0.7360090131845275, -3.3322436761619927], [0.586629037893511, -0.8706301937509632, 1.9938816898655312, -0.32172811136583046, -3.435323417877696], [1.9838067012976033, 0.33738083987261536, 0.5794855252033382, -1.4481589085780027, -3.390482800798262], [1.4623188101885967, 0.07856469136341859, -0.525783279894976, -1.981938845015306, -3.7026734511705417], [0.8353225731968011, -0.12618766012769772, -1.298708564846822, -2.025504350037512, -3.863525836360267], [1.6529051307426554, 0.24844615366542727, -1.3767866185617645, -1.859702179430373, -3.6972414903119777], [1.6053476203943093, 0.2519897596856237, -0.9601891009176555, -1.8281812825697352, -3.7120203441474486], [1.2467998055074485, 0.10546805612486304, -1.3189120414080178, -2.2904238479229613, -3.7072283197851075], [0.6841196094464853, -0.7691480343928376, -1.332145591122361, -1.955100751495216, -3.9369230086690354], [2.1575180622189354, 1.4795485705910072, -1.176301475841967, -2.0183962743262063, -3.713257516419714], [1.8402587004305357, 0.9590928804598611, -1.5454493500372424, -1.7222058224019146, -3.7678797534250577], [2.1857659866714725, 1.2008817359984596, -0.8587791221648295, -1.8719086131018778, -3.4759549800022973], [1.0726935864961284, 0.02932730938047723, -1.5962524609595536, -2.6210881826290504, -3.8778765040748007], [1.1638728135029743, 0.165867086431847, -1.0015944599680988, -1.5377206141462962, -3.909676231124048], [1.4081418915573884, -0.22714563620550768, 0.10083067192555348, -2.2680560834599683, -3.6368943161187457], [1.57789188806201, 0.15165056979219194, -0.21870348590608973, -0.9324406114728881, -3.404859959593905], [1.2539929727412051, -0.4903308530724395, 0.5884193953341649, -1.5663943327923704, -3.2504388576243883], [1.3856983579336266, -0.039672118869009954, 0.5149435684187801, -1.4216450870281414, -3.4959452262443467], [1.8949207442488023, -0.6685604526493006, 0.6334598486124596, -0.7255092241149922, -3.7656130705396724], [0.6910448370726914, 0.24925323623474585, 0.8739592315076191, -1.093616147399608, -3.5479860638075533], [0.7986329505043277, 0.006422141922916125, 0.7862480524894407, -0.6494850622013849, -3.496253659374098], [1.1138179920292535, 0.3136415936345312, 1.0804920411736239, -1.066697829720751, -3.5385817563358493], [2.027316111251018, -0.18470043868546632, -0.1756893016910145, -1.4253524768556576, -3.529896426937517], [0.6055451759734531, 0.07466222893320502, -0.7130495780936174, -2.1087678723838046, -3.6496494885286075], [1.6581964580293596, 0.4045175114341424, -1.1299322034975392, -1.853132118104976, -3.798513082200546], [2.3210645183749548, 0.596754481543588, -1.3540309313663468, -1.7870719016570438, -3.909827101252964], [2.310811885431048, 1.528598992998396, -0.9807831131398723, -1.6709484848944596, -3.8164334554807406], [2.5977446580905412, 1.7652597900708034, -0.7766386422806533, -2.0734275947567724, -3.76345547962323], [2.19695142268443, 2.072596493942975, -0.3625493296662362, -1.9028080847010085, -3.5692720139651333], [3.0713359737379093, 1.2964672724666977, 0.7496413143885032, -0.8142471047016289, -3.446965817434804], [-0.060575475940622514, -1.5314845188737707, 1.4421215871980504, -0.1714690860867836, -3.6588206051699053], [0.7664103297784091, -1.1254919948611637, 1.80974586695962, 0.059211875853961954, -3.656980085344883], [-1.7981605739930004, -2.1878106376963844, 1.029087071585929, 0.12307078220309924, -3.7534922453255763], [-1.4095868052107394, -2.522966786772068, 1.0083874738886425, -0.2518629392364347, -3.8718277401713443], [-1.2505228467552991, -1.644179577648456, 1.38384048258364, 0.07946045817746794, -4.188772997116682], [-1.3409168312269764, -1.8687876876444487, 1.4056209209704251, -0.2417083059202929, -3.866194551584547], [-1.3185515767857157, -2.02510560233225, 0.9109023185344998, 0.23504470675307843, -3.8179566760016823], [-0.5922596446149484, -1.9250439168623212, 2.163379036823545, 0.25044422925124155, -3.64010924866595], [-0.5549055727481598, -2.023975923826475, 1.9599185090688631, 0.4120602727865974, -3.3830876609064773], [0.011875213187807876, -1.5575193335208561, 1.7974210447008832, 0.017313653925802003, -3.810989584229874], [-0.516009251034663, -1.4437033151624854, 2.2192304525893056, 0.12602173322288351, -3.8827348068036733], [0.8660655572217757, -0.4048395877334362, 0.3821115242780225, -0.2602096369966347, -3.4148554115236114], [0.9738039279288566, -0.15450328596472288, 1.4805045617143013, 0.4621299646174653, -3.308927524925376], [2.4374635387911057, 1.005138397335201, 0.5305347404890015, -0.4698705265266753, -3.661922006304709], [-0.7590237617943709, -1.3468283293019039, 2.1046711279502683, 0.5587202758121631, -3.8237164293029577], [-1.2708564432249039, -2.049351589638409, 2.0209434159459843, 0.2710255091085185, -3.8703305505588466], [-0.6754210491712115, -2.3484182341503264, 1.1453428810398665, 0.10200040270310395, -3.7693481445852433], [-0.39123510462592437, -2.2839909384899717, 0.9814594171900917, -0.12672124723463452, -3.6542701627340657], [0.2848918429546539, -1.7096019613918354, 1.749873001123259, 0.22867289521076778, -3.4504213849851326], [0.19769161565633941, -1.3819263580143535, 1.4805998534877485, 0.0025920050939774036, -3.5912955660784696], [0.20438500541097168, -1.4424159954274856, 1.4442317795240396, 0.0792059173550594, -3.680125009517126], [2.381541644645965, 0.6408343564341334, 0.3865191670558881, -1.2652767359263726, -3.478138156687066], [1.8206087787582246, 0.8079506655095405, 0.4034846653136904, -1.2378981316276332, -3.603472554334774], [0.9237438324754221, -0.7571354647443331, 0.7672175290577319, -0.49087094891771216, -3.791296042821248], [-1.2613035168166737, -2.427677599483282, 1.7681747713320677, 0.7931275553085047, -4.034180587420619], [-1.5102343409018801, -1.921193321480883, 1.7861916493403263, 0.7722069640818153, -3.8789926270511215], [-1.6857427774229947, -1.9694140467541241, 1.7850866351428978, 0.8236938563831746, -4.289655911895106], [2.180391288926686, -0.8374821004833846, 0.6895383028570934, -0.5481539415504526, -3.682454462374883], [2.0799114111686525, -0.5839386149823842, 0.710874879375786, -0.7821869332542025, -3.574142745055401], [2.005870051247067, -0.5892315647795697, 0.8739922595019143, -0.15490037973454143, -3.771252521724132], [2.084799392165618, -0.6434512021180965, 0.7191554746300954, -0.11891936568032274, -3.3947036235048373], [2.061664209470505, -0.5485175943124129, 0.7968048720461979, -0.20150987461455233, -3.7846037711078604], [2.493235776366739, -0.7253575373784851, 0.8450443332559003, -0.5109776248965654, -3.447402568614782], [1.8468055178375438, 0.09540202007999524, 0.6308614815558281, -0.823255497251693, -3.4933448706565797], [1.2128023057297037, -0.44323202755220054, -0.5720153283194808, -1.7806079641795989, -3.6532104075853464], [1.4864469824394795, 0.251770372191686, -0.1732509436184665, -1.9089836071599935, -3.610687454855001], [1.4195154425713103, -0.7498281266542947, 0.8897609717579845, 0.008943502089548028, -3.3167677022368354], [1.3360435612204369, -1.0449882129885155, 1.14805443809983, 0.32775720056649843, -3.6491317055023966], [1.085473741197472, -1.1854833315729558, 0.96099998311836, 0.27277152130157983, -3.611404815119966], [0.32868791657611873, -0.8880685413870417, 1.5537098557569937, 0.43907437708341984, -3.7110742328748536], [0.6667612406770216, 0.25671260932124795, 1.5051519374162345, -0.3823055360434837, -3.5781842877883805], [0.8149870777942358, -0.12411449851811603, 1.7413272086883134, -1.196416527959999, -3.206755366462456], [1.159146002522183, -0.18906438470824832, 1.8139856916144628, -1.2202849840265628, -3.7937609667537115], [1.058338024828987, -0.12936524056883195, 1.6617449003310014, -1.0284231971509605, -3.6487519819523455], [0.5618453993554459, -1.178091457196487, 0.8993674608837123, -0.3673900784627765, -3.6842627539439072], [0.6933133413903415, -0.7647743811554022, 1.5664022025474071, 0.30606189610511747, -3.4981358201362123], [1.0495327616917567, -0.6892563252099828, 0.7070784773970844, -0.10149528872576602, -3.5957359369910824], [0.4793866466473249, -0.6503530661822895, 1.0059138692911582, 0.10791055230050947, -3.476916868540981], [0.7152716763746252, -0.7345309820392394, 0.9120937411367993, 0.0843151280488813, -3.6529625382436346], [0.5659729121210256, -0.7619424517975587, 1.89279892426355, 0.10217404335896618, -3.409191771261409], [-0.02110384112108904, -1.6532813865856795, 1.043776000072833, -0.25175754275111983, -3.3099906468287483], [0.24683432042220765, -1.5312745508397774, 0.8185597760724337, -0.3515627826452624, -3.330981712283117], [0.9395340376082368, -1.765186066980533, 1.025068297444722, -0.15836998865740376, -3.6964728483812594], [0.6375865361361354, -1.1680155427709085, 1.2315207111965543, -0.26394885620075037, -3.6201173545808727], [0.9623208756014343, -0.187397010575855, 1.1909970152867766, -0.17302101108680035, -3.5749700346343105], [0.8357544904519232, -0.5785176932897492, 0.9153797861712587, -0.2854308520376859, -3.6773004335207125], [0.8231959964052086, -0.36351497796002813, 1.2922782213496835, -0.5927769067796645, -3.4314575781540864], [0.7741880951175545, 0.14999243411643437, 1.0486515226016746, -0.677256490633202, -3.6346698008383145], [0.8802836299777343, -0.02992301864551504, 1.8358510192066135, -1.2496724058521524, -3.4874246620978306], [0.9908408954641819, -0.09215435862900576, 1.872362821277299, -0.7497920681482155, -3.5680561040682686], [0.4895638864482496, -1.202051692646048, 1.3382867194587063, -0.4068778107142291, -3.5298672644852647], [0.4243506817944459, -1.45203437854885, 1.3944145272905957, -0.8297535319479081, -3.515699085084671], [0.7814517022818221, -0.8946111475490732, 1.9274871954379948, 1.0619953250286553, -3.4690649875774504], [0.580146703682636, -0.8957233457608224, 2.0518213263566754, 0.6058855505001388, -3.550021835993857], [0.7519469850635803, -0.8001838638673973, 2.1998588339584586, 0.9191000243665743, -3.5548568564462952], [-0.8350008761045425, -1.8991001956877118, 0.9146794929625568, -0.4770146410863683, -3.654201785460937], [-0.6711122358377102, -2.297463293123705, 0.9259947150386661, 0.14946054856345817, -3.691006134057319], [-0.9464973660842164, -2.1308640110386827, 1.3400721673040543, 0.01191968323971361, -3.7024716814427308], [-1.3450265829165922, -2.347350113221588, 0.793956370813311, 0.052877476237691665, -3.7435499163119306], [-1.3428894488499574, -1.8727923487665443, 1.0287441057070141, -0.05772857676394756, -3.9839232389497976], [-1.1574807011700623, -2.0686618005694517, 0.9424270090959977, -0.17549093834127966, -3.945363089765613], [-1.148169203969441, -1.9980214451098313, 1.1506834627837927, -0.0020925977108582072, -3.4312073250558477], [-1.2724927940061503, -1.755877092951315, 1.3677549093269468, -0.10713981766877939, -4.102160417989252], [-0.9454529170179583, -1.3406115255762037, 1.6463918450667134, -0.04507055760771526, -3.6842404328636373], [-1.2397208774879005, -2.054139445745679, 1.3811706137380106, 0.442148972351434, -3.885561011424771], [-1.112924009319298, -1.873777344037997, 1.4213022357787894, -0.038960761945295866, -4.10593309355551], [-0.5241858871737874, -2.2778904564402755, 1.1333827588491912, 0.5542519804143408, -3.565133013715166], [0.26599443513330395, -0.894758623994585, 2.125385971579047, -0.618258089511864, -3.4697127360883737], [0.27228558235047984, -0.8717917495287102, 0.7984065007551644, -0.33935786205687996, -3.459078455358249], [0.1500752795908224, -0.8190220361485354, 0.5332023387574778, -0.09971953385743021, -3.7732358740520535], [1.2739567539675758, 0.5267834073351644, 0.3947677402177726, -0.9455939887233245, -3.5353531569314516], [1.8462466575039156, -0.5936312444111993, 0.9220110379015825, -0.7039951509283647, -3.341627499628166], [1.58552546763393, 0.663041280892033, 0.12811920627625956, -1.1419484440612762, -3.3728879830793925], [1.2546471183961656, -0.013328823973073417, 1.0066722769333432, -0.4498071438859622, -3.294753219227404], [0.8301153804418224, -0.9942953861521006, 1.3901289872471525, -0.05038908891381738, -3.6237169818957495], [-1.0982778328673035, -1.8600034590815693, 1.4775302950677442, 0.32183267975840324, -3.4430487703417216], [0.7337523173153594, -1.0453548743652488, 1.4055316068183168, -0.2561917052995803, -3.4070235587368196], [0.685819592660036, -0.9099112625116722, 1.7311644086749145, 0.03844586554641752, -3.8462252384945494], [0.6639470588857673, -0.8646676427109986, 1.8020083914539233, -0.6916194979182516, -3.618401072210843], [0.7214442481966242, -0.6170367965941025, 1.5331724703406906, -0.034952632626669256, -3.5571671893300056], [0.7163610065045254, -1.2656367770057857, 1.2614853108159025, -0.42645824160514983, -3.5152311132901626], [0.6946109054276786, -1.10539307381814, 1.1932288688512664, -0.40165106781961457, -3.5113149701778936], [0.41121314696025685, -0.9004590891895143, 1.5334533616100607, 0.2564585935824258, -3.56889007150017], [1.495338246241629, 0.06002067035851677, 0.3865778629656499, -1.1664828883345453, -3.284546983530404], [1.5990509422757948, -0.011901137902193382, 0.19754163660992244, -1.0807035883633997, -3.82927514957439], [1.71280143578867, 0.14019458350105618, 0.7117313909343558, -1.4640504972855473, -3.328531535599896], [1.1241560249387308, -0.21582362062427257, -0.19167905047364212, -1.3060253681025802, -3.6666154697258477], [1.3436718858177559, 0.1792497633399122, 0.42975489286310875, -2.0740503811563644, -3.547653978526518], [1.3322589257209767, -0.09007018404965242, 0.3035592898844548, -2.1958076271830733, -3.507615930311086], [0.8121415056651293, -0.04178263349434023, 0.06921584585838368, -1.481942047880763, -3.639277686696246], [1.8946425228305874, -0.23909161656422034, 0.008645061078998963, -1.418751684756594, -3.6855095633460806], [1.6122498638800553, 0.9537043145484786, -0.5005052720104907, -1.63720937917988, -3.8128546552619964], [2.0645418847978894, 0.21937217008856963, -0.22752346597576573, -1.6650928215488492, -3.5674629368499806], [1.3002295598114475, -0.0810022135497452, -0.49390112335385467, -1.6078709357811776, -3.56812661899404], [1.1936315902730683, -0.5781400301895939, -0.4506702823949969, -2.232874449577768, -3.7523322757917574], [1.8009484302465588, -0.3154737128095457, -0.3249383964936462, -1.6910812774179476, -3.5338113588249738], [2.077196075643722, -0.2994128543772007, -0.42779462472321095, -2.0342405618987294, -3.6806180763906586], [1.4178468245699838, 0.885711016903826, -0.5944511288521585, -1.5506334601320395, -3.764050775412797], [1.608414572401739, 0.40233334213760874, -0.9486351386443278, -1.9906374448937683, -3.5490379743754015], [0.2542198480054999, -1.3790247281522148, 2.661403681295114, 0.5847598303208449, -3.4394245595427146], [0.1955729377711879, -1.6736665301573317, 1.81583269257328, 1.1045907566501132, -3.6922324520583194], [1.4870681281720182, 0.4774941321360977, 0.22527482366892254, -0.6588605848697656, -3.6176775345971426], [0.1027804331579242, -2.125215687777793, 1.8049678000259106, 0.3572364236199479, -3.4980290960971514], [1.623342965742804, 0.3081907996199112, 0.4195697610221747, -0.7899844303430852, -3.5396534071760444], [1.3996622402025045, -0.30476449672295003, 0.9318319882360626, -0.6917749280234312, -3.603486724807112], [1.4191097730966151, 0.1691456465289815, 0.6185917005911628, -0.3721298683009463, -3.479904020914322], [1.4412331261637419, -0.4601761790860001, 0.9528731648880364, -0.4919032655213881, -3.6213510708034433], [0.8731122298578651, -0.3404328928127905, 0.9639855519111549, -1.3665702312373282, -3.5242120669719714], [0.8695122269530626, -0.20668776694895685, 1.2812607833793834, -0.02367597219299314, -3.5534960541913576], [0.12679371223606073, -1.2321326285578267, 1.3938614913906962, -0.13477554446089343, -3.5301126691917006], [0.8671162064186323, -0.9647246633657368, 1.4657232249574939, -0.32252386256886734, -3.6536201215210142], [-0.5214721659888303, -2.3863269463001178, 1.4368365145399111, 0.55648356818121, -3.486910559678886], [-0.37883627686564586, -1.292954857454214, 0.8596570285717763, -0.5984303120828747, -3.8636162069879023], [2.2259057688723076, -1.3896415472464216, 1.229871245959813, 0.13565584976001377, -3.499892474700762], [1.6479836319756824, 1.0087689301736726, 0.18964090064030992, -1.483906994009783, -3.6141457222595545], [2.084868131689537, 0.5120951666934875, 0.9249682093174539, -0.3826489252838095, -3.271160796271628], [0.966739276878652, -0.5455910130861903, 0.9992829114073147, -0.7361875361550556, -3.661919331529472], [0.8961435936850628, -0.5945470982307339, 1.3996498921019234, -0.885435032098357, -3.0793430049722095], [0.9425273219640942, -0.5331309166287372, 1.5648463036335514, -0.8577747496429919, -3.695250479437717], [-0.08234528377006403, -0.6678595339171527, 1.2620111183254272, 0.8216667603914609, -3.8079200273947285], [0.35213838147698706, -1.0547721437954092, 1.3541197032048835, -0.3081013885105024, -3.5726798864468408], [0.43635919977740295, -1.4779094915972668, 1.7906234386917934, -0.2399226975722806, -3.6922525963315946], [0.557137535598844, -1.1466702551285894, 1.2875326140237573, 0.2717586253261521, -3.568368665572175], [0.8198052051717317, -1.0032598045336296, 1.3480272059611966, 0.40779244633894707, -3.655449572633802], [2.0800822381972432, -0.8065721395435126, 0.7197983554831331, -0.6983629426934526, -3.7336205786607466], [0.16507764348733134, -1.9462841317233632, 1.943837149404564, 0.13185073413239617, -3.6911137491009476], [0.4108740354413562, -1.0932586985047346, 1.9309491080542334, 1.1160600333587194, -3.3591806340794195], [0.434278575811572, -1.2319918699978893, 2.157223706895467, 1.0824931902717987, -3.4144328572757967], [0.3212254998561984, -1.5225150732570734, 1.4261282747837567, 0.44241475006916847, -3.6399229567034235], [-0.5796927236357721, -1.3827225888329404, 1.9045750703983888, -0.2583738764379742, -3.733934288614801], [-0.19114699907509594, -1.4714685578025501, 1.8928118907909492, -0.29262603250659464, -3.8250584680507957], [-0.19076484204836158, -1.5344063722062917, 2.1067936270034604, -0.13718183086957625, -3.53039435991608], [-0.420689823785788, -1.4010328608835616, 2.1002235671306093, 0.11927102593562695, -3.5096497714046917], [-1.3110396878494321, -2.556430859256249, 1.205196634163203, -0.5346562962744752, -3.746096925669809], [-1.1179788690536452, -2.318180350570868, 0.8582846828830449, -0.17311973492447252, -3.8876107452136095], [-1.7694730390473823, -2.2348611685249558, 1.0066969855734662, 0.015402898391012776, -3.9684812658359716], [-1.6612063219811788, -2.1198190184174868, 1.0003967329208154, -0.3765314281505327, -3.888764756641716], [-1.348171191089995, -2.3500032738897643, 0.9821388105988913, -0.02736103115975319, -3.7859344606674212], [-1.4337408416672488, -2.4037281438396434, 0.704389747276517, -0.43194829470242224, -3.6963967656919747], [-1.4197594149258634, -1.9930604573291533, 0.7232845202775411, -0.5319822371698947, -3.8363658017922546], [-1.3954551255457084, -2.082262962667756, 1.8112335581275243, 0.6155069857013502, -3.7606639546902327], [-1.5353143204111266, -1.770618866135985, 2.1028141988618008, 1.2932345687407623, -4.087657965358226], [-2.148816756664392, -2.1989821757459067, 1.2954874194213493, 1.0231673996646455, -4.2463146687409905], [-0.9594147768108884, -2.1364947109691, 1.2233295940992703, -0.3559412548602254, -3.693914998795956], [-1.020701495289618, -2.08157710372219, 1.2793514095528509, -0.19095595414907718, -3.875515279344444], [-1.2010879047560032, -1.5751407360080723, 0.721141000787395, 0.021396652521350465, -3.734727055337367], [-1.1145116740273533, -2.410179984011988, 1.3018381447684004, -0.42318073619420893, -3.527255436652015], [-0.9896751032918653, -2.5592388464147424, 1.060791338535401, -0.3161788066672064, -3.9083237714079466], [-1.4115938162716775, -2.429262416993427, 1.2070026794724542, -0.2683314338559639, -3.7704997605340465], [-1.7895370928012473, -2.3553602256722144, 1.1264221160946433, -0.3223960306172, -3.919514561368347], [-1.9121708227462686, -2.4987718139569837, 0.6847619932578557, -0.06876753784366638, -3.702048686583903], [-0.8871913942037666, -1.7518486308757786, 0.9854144991073064, 0.11162510937335185, -3.7517978173876965], [-0.18833160498603918, -1.5279888397408, 1.7783025958838579, -0.015159416087283259, -3.5867961442192886], [1.2129503657226417, -1.0620512158025512, 0.9301808692937003, -0.053904631635261505, -3.5566538444921925], [0.5325927244025301, -0.5173066760839647, 1.0014761001598909, -0.5794539527843323, -3.8125530403748007], [0.8556171571189413, -0.4021871918618959, 1.621791282723433, -0.08562028690801007, -3.485807636835073], [-0.4771766516542101, -1.817600367526714, 1.416582080699409, -0.01840773714607924, -3.6970429625215524], [-0.8849393859609864, -2.1683119477040345, 1.00138043691185, -0.06311750641630307, -3.806383287876892], [-0.3812573115365292, -1.6975952994239338, 1.3410696504891242, 0.478917737587399, -3.7825293517887295], [0.25871628123298035, -1.388792191570951, 1.7220674827574833, -0.4505162373330896, -3.6474105119874225], [-0.10185272504060651, -1.8275227878722007, 1.3831836046762676, 0.33912145359039014, -3.732482149561024], [0.6265226027421218, -0.37857550972098564, 1.5306821077861512, 0.4604352892553308, -3.702344402946807], [0.5557602230954573, -0.44971677118315884, 1.5143070095483524, -0.1921339526711045, -3.622453836185295], [0.6388225677585402, -0.502147345936176, 1.0735346536161623, 0.11237690257315144, -3.371874068212698], [-0.022492989309951625, -1.5582018471028147, 1.8831541722378708, -0.14970831956177036, -3.9029442512854864], [-0.26248496118569914, -1.8850521581990902, 1.1747086089068453, 0.13715362403726156, -3.6482371541985223], [-0.38648881267143753, -2.084547565004976, 1.2394098890207896, 0.3406881516560136, -3.4212456006641494], [-0.5904266110319849, -2.2448488160704114, 1.2383626022526764, 0.045150398533502833, -3.4565960083303597], [-0.4898251588755528, -2.372011603366266, 1.4952976005261596, -0.13805268233943851, -3.5582540056119827], [-1.0742367572401672, -2.0922838489180924, 0.9664268613007841, -0.3017520579632732, -3.708542336612403], [0.5599742502534939, -1.736659169062786, 1.3058333141083989, 0.32578387705708856, -3.3094971150155224], [-0.25266415246069546, -1.3900388143645654, 1.1959893355258058, 0.24789876338493685, -3.752715853001987], [-0.5246927549344221, -2.147861143861193, 1.337943753340749, -0.4197527774197452, -3.3913012081889544], [-0.34375647311396057, -2.3268806786780716, 1.479506702527157, -0.43628089681427257, -3.758749910419076], [0.5325644088689052, -1.227901129807208, 1.96783297874161, 0.026598732980527867, -3.7740695904644435], [1.3129787090099516, -0.8818500650078727, 0.9646493339049933, 0.017586046966768427, -3.3369487525158052], [0.8981662377324462, -0.08467751294840842, 0.8876908393002504, -0.3821763579374704, -3.700501334389368]], NamedTuple[(n_steps = 1, is_accept = true, acceptance_rate = 1.6705667491330245e-111, log_density = -12.960027837504247, hamiltonian_energy = 14.21394239176508, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 255.0737823827453, tree_depth = 1, numerical_error = false, step_size = 0.4, nom_step_size = 0.4, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = -12.960027837504247, hamiltonian_energy = 16.08941187707963, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 2.7811752801300673e9, tree_depth = 0, numerical_error = true, step_size = 0.9340259163636535, nom_step_size = 0.9340259163636535, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.8855810197603484, log_density = -3.0608094687009606, hamiltonian_energy = 14.11404346581449, hamiltonian_energy_error = -0.287050114520639, max_hamiltonian_energy_error = -2.1834643002743217, tree_depth = 2, numerical_error = false, step_size = 0.09209433883419865, nom_step_size = 0.09209433883419865, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9972696281186317, log_density = 13.594577829054474, hamiltonian_energy = 5.121339355678645, hamiltonian_energy_error = -0.5285366660915036, max_hamiltonian_energy_error = -0.7382109044847605, tree_depth = 3, numerical_error = false, step_size = 0.07071001030126159, nom_step_size = 0.07071001030126159, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9945900489514073, log_density = 13.699951519941347, hamiltonian_energy = -11.343431269670813, hamiltonian_energy_error = 0.019259336979610353, max_hamiltonian_energy_error = -0.14866839052037228, tree_depth = 3, numerical_error = false, step_size = 0.09282962064979847, nom_step_size = 0.09282962064979847, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9958274207994958, log_density = 13.40447823212085, hamiltonian_energy = -11.5669937284703, hamiltonian_energy_error = 0.029643101830290064, max_hamiltonian_energy_error = -0.2394288028556062, tree_depth = 3, numerical_error = false, step_size = 0.14078366563596945, nom_step_size = 0.14078366563596945, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.5408530652500102, log_density = 16.00626271780882, hamiltonian_energy = -11.080103494513573, hamiltonian_energy_error = -1.060616953131042, max_hamiltonian_energy_error = 4.01192488293028, tree_depth = 3, numerical_error = false, step_size = 0.23428172399338615, nom_step_size = 0.23428172399338615, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9297527915660765, log_density = 14.852494587305225, hamiltonian_energy = -13.161863209614928, hamiltonian_energy_error = 0.05598777964038959, max_hamiltonian_energy_error = 0.129581205267435, tree_depth = 3, numerical_error = false, step_size = 0.09976581591479917, nom_step_size = 0.09976581591479917, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9985932474732392, log_density = 15.250046347160048, hamiltonian_energy = -13.76094792189728, hamiltonian_energy_error = -0.16097619976129174, max_hamiltonian_energy_error = -0.24930236786968685, tree_depth = 4, numerical_error = false, step_size = 0.14474386811082324, nom_step_size = 0.14474386811082324, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.6667076302012658, log_density = 15.755005220116175, hamiltonian_energy = -14.82984303975188, hamiltonian_energy_error = -0.18618760545045632, max_hamiltonian_energy_error = 1.0658874863611043, tree_depth = 3, numerical_error = false, step_size = 0.26668052156825345, nom_step_size = 0.26668052156825345, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9652356271928756, log_density = 16.29876874159762, hamiltonian_energy = -14.580540685988911, hamiltonian_energy_error = -0.0655313725262836, max_hamiltonian_energy_error = 0.1296513922773581, tree_depth = 3, numerical_error = false, step_size = 0.17430129981286366, nom_step_size = 0.17430129981286366, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.018145257120238085, log_density = 16.29876874159762, hamiltonian_energy = -9.836476072690093, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 15.985649340212872, tree_depth = 2, numerical_error = false, step_size = 0.29479141802220976, nom_step_size = 0.29479141802220976, is_adapt = true), (n_steps = 63, is_accept = true, acceptance_rate = 0.9933695753360735, log_density = 12.107213044869894, hamiltonian_energy = -9.463448044769642, hamiltonian_energy_error = 0.0053656570989772945, max_hamiltonian_energy_error = 0.011451812460913757, tree_depth = 6, numerical_error = false, step_size = 0.025328064033763732, nom_step_size = 0.025328064033763732, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9932225738210126, log_density = 10.956070913444057, hamiltonian_energy = -6.051288680112885, hamiltonian_energy_error = -0.004186039367416683, max_hamiltonian_energy_error = 0.02993326164617205, tree_depth = 5, numerical_error = false, step_size = 0.04749170361751846, nom_step_size = 0.04749170361751846, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9927562451120828, log_density = 15.131661155880625, hamiltonian_energy = -9.285129703051986, hamiltonian_energy_error = -0.08685612911784091, max_hamiltonian_energy_error = -0.08685612911784091, tree_depth = 4, numerical_error = false, step_size = 0.08888775228031463, nom_step_size = 0.08888775228031463, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.8261593359436961, log_density = 14.653557310846487, hamiltonian_energy = -12.251051997057694, hamiltonian_energy_error = 0.08108879342134756, max_hamiltonian_energy_error = 0.40399154506637913, tree_depth = 3, numerical_error = false, step_size = 0.16544041437935672, nom_step_size = 0.16544041437935672, is_adapt = true), (n_steps = 19, is_accept = true, acceptance_rate = 0.9602141550333616, log_density = 14.185653536973897, hamiltonian_energy = -13.25126540159657, hamiltonian_energy_error = -0.02538713337174414, max_hamiltonian_energy_error = -0.3808351565446024, tree_depth = 4, numerical_error = false, step_size = 0.18330803681227417, nom_step_size = 0.18330803681227417, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.5090094629579507, log_density = 15.918661174305857, hamiltonian_energy = -13.030191247766648, hamiltonian_energy_error = -0.37065863356010453, max_hamiltonian_energy_error = 11.611286587899624, tree_depth = 1, numerical_error = false, step_size = 0.3059131657243779, nom_step_size = 0.3059131657243779, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.954906045909809, hamiltonian_energy = -15.445296686207657, hamiltonian_energy_error = -0.030039514778517074, max_hamiltonian_energy_error = -0.05801457941053201, tree_depth = 3, numerical_error = false, step_size = 0.12920640171530734, nom_step_size = 0.12920640171530734, is_adapt = true), (n_steps = 9, is_accept = true, acceptance_rate = 0.9776173970342155, log_density = 16.471114453042862, hamiltonian_energy = -15.770980443307492, hamiltonian_energy_error = -0.058133004035932245, max_hamiltonian_energy_error = -0.1157235032587991, tree_depth = 3, numerical_error = false, step_size = 0.24230242742471894, nom_step_size = 0.24230242742471894, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.8868876834413293, log_density = 15.43329597549657, hamiltonian_energy = -12.758964419403537, hamiltonian_energy_error = 0.04954274553950455, max_hamiltonian_energy_error = 0.22805100971602066, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8585222490164803, log_density = 14.871369028172252, hamiltonian_energy = -12.918238515904228, hamiltonian_energy_error = 0.16490253278799116, max_hamiltonian_energy_error = 0.33621214801925703, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9617679300361844, log_density = 15.50605772823224, hamiltonian_energy = -13.89046464305224, hamiltonian_energy_error = -0.059544132745909195, max_hamiltonian_energy_error = 0.14031003276272358, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8732108033845153, log_density = 15.108520690173126, hamiltonian_energy = -13.657744643547174, hamiltonian_energy_error = 0.1603440239789773, max_hamiltonian_energy_error = 0.2211974887432575, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9843862496648957, log_density = 12.754840194690079, hamiltonian_energy = -12.043422389166334, hamiltonian_energy_error = 0.0033019257472162167, max_hamiltonian_energy_error = -0.18639861275376646, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9769772996939216, log_density = 14.589544384338229, hamiltonian_energy = -12.443619010558068, hamiltonian_energy_error = -0.054358198388340995, max_hamiltonian_energy_error = -0.054358198388340995, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9694462887572416, log_density = 15.220517427883133, hamiltonian_energy = -14.07221698375277, hamiltonian_energy_error = 0.003497740819000228, max_hamiltonian_energy_error = 0.06733625504864271, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7334405097117038, log_density = 13.57093012169125, hamiltonian_energy = -12.505548802315076, hamiltonian_energy_error = 0.3287668295464563, max_hamiltonian_energy_error = 0.5675241089593097, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.148667641693674, hamiltonian_energy = -12.69541751345126, hamiltonian_energy_error = -0.1806265538507894, max_hamiltonian_energy_error = -0.2998427518855653, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9022607086762674, log_density = 14.809913069750325, hamiltonian_energy = -13.245958302342606, hamiltonian_energy_error = 0.11118761529727905, max_hamiltonian_energy_error = 0.2418512047674728, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8406461226154193, log_density = 11.57443408217446, hamiltonian_energy = -9.272205787031552, hamiltonian_energy_error = 0.23069079738103326, max_hamiltonian_energy_error = 0.31291698197287765, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9144993495007488, log_density = 11.646321466723338, hamiltonian_energy = -8.354880111071072, hamiltonian_energy_error = 0.14390612535260416, max_hamiltonian_energy_error = 0.14390612535260416, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9673335888127204, log_density = 13.074093966471443, hamiltonian_energy = -9.586532404538575, hamiltonian_energy_error = -0.14338930401925687, max_hamiltonian_energy_error = -0.42748728297731375, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9548620967469524, log_density = 13.923408301017133, hamiltonian_energy = -11.774025783753524, hamiltonian_energy_error = 0.011378686567887542, max_hamiltonian_energy_error = -0.3888216564847493, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8804566536583383, log_density = 15.594875094986637, hamiltonian_energy = -12.41351270576792, hamiltonian_energy_error = -0.15423313645193382, max_hamiltonian_energy_error = 0.3254371551474904, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8848550915736766, log_density = 15.788118645812732, hamiltonian_energy = -14.530687581191668, hamiltonian_energy_error = 0.00961437378425778, max_hamiltonian_energy_error = 0.21931886928225097, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9942680711802975, log_density = 15.86098402324092, hamiltonian_energy = -15.298620080944278, hamiltonian_energy_error = 0.0012000283422182179, max_hamiltonian_energy_error = 0.02389370407588487, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.885158464277655, log_density = 13.189573393744094, hamiltonian_energy = -12.573362076879715, hamiltonian_energy_error = 0.22454562821634738, max_hamiltonian_energy_error = 0.22454562821634738, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8424033391879944, log_density = 14.243608568723813, hamiltonian_energy = -9.737310042956388, hamiltonian_energy_error = -0.21756119680376962, max_hamiltonian_energy_error = 0.4707029521830872, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 39, is_accept = true, acceptance_rate = 0.8253928873336502, log_density = 14.743496190120307, hamiltonian_energy = -12.647258834142171, hamiltonian_energy_error = -0.004760541796114737, max_hamiltonian_energy_error = 0.5113581916238417, tree_depth = 5, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7934407832930536, log_density = 14.784127272685623, hamiltonian_energy = -12.556744754492577, hamiltonian_energy_error = 0.3896211280724273, max_hamiltonian_energy_error = 0.5638065557227971, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9579139178539596, log_density = 15.604985807514119, hamiltonian_energy = -13.828540569132231, hamiltonian_energy_error = -0.2885678758666561, max_hamiltonian_energy_error = -0.40430712126880763, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9904062770331036, log_density = 14.794052886986597, hamiltonian_energy = -13.968674089521734, hamiltonian_energy_error = -0.043343466489236704, max_hamiltonian_energy_error = -0.20215352626611427, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9233814116318318, log_density = 16.01199864506961, hamiltonian_energy = -13.220184069005509, hamiltonian_energy_error = 0.06444693266741908, max_hamiltonian_energy_error = 0.13958805956521658, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.831818100122164, log_density = 14.325476565136041, hamiltonian_energy = -13.441112307762303, hamiltonian_energy_error = 0.3166278729073504, max_hamiltonian_energy_error = 0.405502305711396, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9445937042809742, log_density = 15.090972771041436, hamiltonian_energy = -12.582105041280093, hamiltonian_energy_error = -0.07177675806348383, max_hamiltonian_energy_error = -0.5247673529558394, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 0.7353463981829088, log_density = 15.011172724861384, hamiltonian_energy = -10.455486362286724, hamiltonian_energy_error = -0.39004562292548073, max_hamiltonian_energy_error = 1.1397294557642432, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.99661242072065, log_density = 15.35909407785445, hamiltonian_energy = -14.754856882687458, hamiltonian_energy_error = -0.003013151955588711, max_hamiltonian_energy_error = -0.052203715837196185, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.47063755211791947, log_density = 10.576226688541688, hamiltonian_energy = -7.87325795281367, hamiltonian_energy_error = 1.3330370912387473, max_hamiltonian_energy_error = 1.8935603641825622, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9798711849375465, log_density = 13.731447461215037, hamiltonian_energy = -9.250901453609833, hamiltonian_energy_error = -0.7385830588379232, max_hamiltonian_energy_error = -1.452956397502911, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8278168341595595, log_density = 11.520357658377817, hamiltonian_energy = -10.021509699184294, hamiltonian_energy_error = 0.44408765854515586, max_hamiltonian_energy_error = -1.0480477138307585, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 12.529187347232167, hamiltonian_energy = -9.841290007707228, hamiltonian_energy_error = -0.3529430450676596, max_hamiltonian_energy_error = -0.9210504843910776, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.995362754795052, log_density = 15.891721943526946, hamiltonian_energy = -12.423567512109578, hamiltonian_energy_error = -0.6372015277693492, max_hamiltonian_energy_error = -0.6743479749081303, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7997034576203117, log_density = 15.287300477131248, hamiltonian_energy = -13.125122168227882, hamiltonian_energy_error = 0.06743475621561501, max_hamiltonian_energy_error = 0.43294957698083714, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9987432515515426, log_density = 15.737128829285451, hamiltonian_energy = -14.081251309777535, hamiltonian_energy_error = -0.2588666253846412, max_hamiltonian_energy_error = -0.28049520320520926, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9674295853651562, log_density = 14.860649066150861, hamiltonian_energy = -13.61446813381331, hamiltonian_energy_error = 0.07222077524543025, max_hamiltonian_energy_error = -0.1360347734750853, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8793886196379865, log_density = 14.282911753111101, hamiltonian_energy = -11.936943874846314, hamiltonian_energy_error = 0.287400616466849, max_hamiltonian_energy_error = 0.3146730273835505, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9650235942040205, log_density = 14.779943820482089, hamiltonian_energy = -10.982608510356286, hamiltonian_energy_error = -0.3757195250403633, max_hamiltonian_energy_error = -0.40167277557723935, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6165157803309785, log_density = 12.935071150779907, hamiltonian_energy = -9.72368307413769, hamiltonian_energy_error = 0.26945287118900474, max_hamiltonian_energy_error = 1.1069745893840608, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9590194317522026, log_density = 12.486292373893184, hamiltonian_energy = -10.34916739036801, hamiltonian_energy_error = 0.037399054177203794, max_hamiltonian_energy_error = 0.1725047202569776, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9955155219079027, log_density = 13.930867613665567, hamiltonian_energy = -11.318464278914114, hamiltonian_energy_error = -0.16028671745823964, max_hamiltonian_energy_error = -0.4264918283650818, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9860372775051472, log_density = 14.906362049740798, hamiltonian_energy = -12.791594640084465, hamiltonian_energy_error = -0.07859359880301575, max_hamiltonian_energy_error = -0.33458761661432845, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8915019774826937, log_density = 13.859210084653109, hamiltonian_energy = -13.213819023121642, hamiltonian_energy_error = 0.027514583071109655, max_hamiltonian_energy_error = 0.2661779276709417, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.974127874696903, log_density = 14.22408588340512, hamiltonian_energy = -12.568783390738776, hamiltonian_energy_error = -0.3650555998460465, max_hamiltonian_energy_error = -0.3650555998460465, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8818690628336606, log_density = 14.829387051818347, hamiltonian_energy = -13.460461050257548, hamiltonian_energy_error = 0.11903217976936453, max_hamiltonian_energy_error = 0.1836755701429258, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9311544934416282, log_density = 12.161560785318313, hamiltonian_energy = -11.718814329351755, hamiltonian_energy_error = 0.232222949818091, max_hamiltonian_energy_error = 0.3987409759314158, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9471400805942185, log_density = 14.58333249284586, hamiltonian_energy = -10.589167028687912, hamiltonian_energy_error = -0.23546334073406072, max_hamiltonian_energy_error = -0.362440887807038, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9782532681074262, log_density = 15.819375626417296, hamiltonian_energy = -14.050955599800696, hamiltonian_energy_error = -0.13256860340242227, max_hamiltonian_energy_error = -0.20993394808136046, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 1.0, log_density = 15.995876854433885, hamiltonian_energy = -15.560377002232824, hamiltonian_energy_error = -0.08693466329742172, max_hamiltonian_energy_error = -0.0962766673764417, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.876811555541035, log_density = 13.24890177078438, hamiltonian_energy = -9.037876282727094, hamiltonian_energy_error = -0.034130719218278927, max_hamiltonian_energy_error = 0.7241028163060914, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8136915079846225, log_density = 14.398269967656137, hamiltonian_energy = -10.118932406433302, hamiltonian_energy_error = -0.6116213267697717, max_hamiltonian_energy_error = 0.8549655672922363, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.5823583620403502, log_density = 15.617793099006004, hamiltonian_energy = -12.027590126092417, hamiltonian_energy_error = 0.15831837483049327, max_hamiltonian_energy_error = 1.0385389471346151, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9843157653335777, log_density = 15.032046429328354, hamiltonian_energy = -13.417563147143035, hamiltonian_energy_error = -0.01880260595635974, max_hamiltonian_energy_error = -0.11047492719168162, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9969377046138687, log_density = 16.15296815550848, hamiltonian_energy = -14.414971581133837, hamiltonian_energy_error = -0.09162125880792082, max_hamiltonian_energy_error = -0.1233121862856894, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8948446048799382, log_density = 15.422232003863884, hamiltonian_energy = -9.017401091538503, hamiltonian_energy_error = -0.06455977003210123, max_hamiltonian_energy_error = 0.44962686260493, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8334119338557062, log_density = 15.221009442806274, hamiltonian_energy = -13.255632601954332, hamiltonian_energy_error = 0.20812258139246964, max_hamiltonian_energy_error = 0.4723350194097975, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.963188989168555, log_density = 14.842437207685027, hamiltonian_energy = -11.988931668426474, hamiltonian_energy_error = -0.11283571893871525, max_hamiltonian_energy_error = -0.3473332106677276, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8957484160944608, log_density = 12.634720592269035, hamiltonian_energy = -11.870846124939684, hamiltonian_energy_error = 0.2960996817168997, max_hamiltonian_energy_error = 0.2960996817168997, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9580783956203106, log_density = 12.790176576352374, hamiltonian_energy = -10.225272895693603, hamiltonian_energy_error = 0.030981407229786484, max_hamiltonian_energy_error = 0.16597834495813046, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9992625864288678, log_density = 12.30950494310431, hamiltonian_energy = -11.115806710922573, hamiltonian_energy_error = 0.005175263602643199, max_hamiltonian_energy_error = -0.35238218678224165, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9885653438133982, log_density = 11.122381405096348, hamiltonian_energy = -9.411369993935057, hamiltonian_energy_error = 0.05473419104326638, max_hamiltonian_energy_error = -0.35987343099138513, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9797842840658618, log_density = 13.206571211642228, hamiltonian_energy = -6.903236578352036, hamiltonian_energy_error = -0.03970676288926889, max_hamiltonian_energy_error = -0.6153145395251141, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5266557186555689, log_density = 9.55249792142871, hamiltonian_energy = -6.822884059775341, hamiltonian_energy_error = 1.2559242348520732, max_hamiltonian_energy_error = 2.157446708414425, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9516977223281774, log_density = 12.468618631962043, hamiltonian_energy = -6.831374329563182, hamiltonian_energy_error = -1.3998785092576007, max_hamiltonian_energy_error = -1.3998785092576007, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.838949240803699, log_density = 14.620666036676951, hamiltonian_energy = -10.077529027573558, hamiltonian_energy_error = 0.038686139289719534, max_hamiltonian_energy_error = 0.5037030011524575, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6598578237587119, log_density = 11.973754086916966, hamiltonian_energy = -9.32724314444651, hamiltonian_energy_error = 0.7206474725901124, max_hamiltonian_energy_error = 1.0422349442163092, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.987700796487514, log_density = 13.241995230441356, hamiltonian_energy = -9.380164231428136, hamiltonian_energy_error = -0.6545213019510747, max_hamiltonian_energy_error = -0.7670872022495718, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9987302790007173, log_density = 15.43239076471888, hamiltonian_energy = -12.487510008542458, hamiltonian_energy_error = -0.5061196866083595, max_hamiltonian_energy_error = -0.5061196866083595, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6605195388303703, log_density = 13.827101325188835, hamiltonian_energy = -11.588691622027124, hamiltonian_energy_error = 0.2317497209523438, max_hamiltonian_energy_error = 0.7737785542538624, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9986304122191559, log_density = 14.876411045892898, hamiltonian_energy = -12.38354854373848, hamiltonian_energy_error = -0.073380405841446, max_hamiltonian_energy_error = -0.12611186078834535, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7299307190475378, log_density = 15.012832601607666, hamiltonian_energy = -9.330156698347592, hamiltonian_energy_error = -0.20721337077313784, max_hamiltonian_energy_error = 0.7202009716767694, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6387159855354961, log_density = 14.544244299679463, hamiltonian_energy = -10.382851617785741, hamiltonian_energy_error = -0.02572821383613899, max_hamiltonian_energy_error = 1.1279884210816462, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9928714680338935, log_density = 15.207564668726096, hamiltonian_energy = -14.004626548821326, hamiltonian_energy_error = -0.018677433827472, max_hamiltonian_energy_error = -0.15428785740059325, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.919988725966349, log_density = 13.73636331751848, hamiltonian_energy = -13.480084008863276, hamiltonian_energy_error = 0.21372596281546308, max_hamiltonian_energy_error = 0.21372596281546308, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9953104020917912, log_density = 13.931145887570032, hamiltonian_energy = -12.000475632534954, hamiltonian_energy_error = -0.050013575640543095, max_hamiltonian_energy_error = -0.8378223722831404, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 15.221632580413216, hamiltonian_energy = -13.362661079060077, hamiltonian_energy_error = -0.30761751311484, max_hamiltonian_energy_error = -0.30761751311484, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.631961549210022, hamiltonian_energy = -15.076738867933777, hamiltonian_energy_error = -0.09477516833882405, max_hamiltonian_energy_error = -0.3924085452534314, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9456074322318713, log_density = 15.949473240401566, hamiltonian_energy = -13.756506117966259, hamiltonian_energy_error = -0.24315346571365204, max_hamiltonian_energy_error = -0.27455738993143086, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9495577322203114, log_density = 15.31882435374185, hamiltonian_energy = -14.584666318908063, hamiltonian_energy_error = -0.027681909487244027, max_hamiltonian_energy_error = 0.11557119958736983, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9175038825086721, log_density = 14.945810014263914, hamiltonian_energy = -12.828350532613864, hamiltonian_energy_error = 0.0031739092993188223, max_hamiltonian_energy_error = -0.26300845154951347, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9747601899044095, log_density = 15.333045377305751, hamiltonian_energy = -13.046565565214529, hamiltonian_energy_error = -0.13858743378531813, max_hamiltonian_energy_error = -0.24738885363963448, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8769576145449913, log_density = 15.678465032631529, hamiltonian_energy = -12.618617396179122, hamiltonian_energy_error = -0.11856689795819264, max_hamiltonian_energy_error = 0.43008399778843653, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9689297647817922, log_density = 15.291474387194162, hamiltonian_energy = -13.695198864684551, hamiltonian_energy_error = 0.018416492336703172, max_hamiltonian_energy_error = 0.09021586303302165, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9176803474409768, log_density = 16.113257518512253, hamiltonian_energy = -13.898625855262683, hamiltonian_energy_error = 0.00859974892511417, max_hamiltonian_energy_error = 0.16254101434781987, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8509366974013443, log_density = 14.55647290298807, hamiltonian_energy = -13.743318912833061, hamiltonian_energy_error = 0.25794739535176703, max_hamiltonian_energy_error = 0.2608523411915833, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5850642478352918, log_density = 15.515616461875524, hamiltonian_energy = -10.290906764749796, hamiltonian_energy_error = -0.06588860461940449, max_hamiltonian_energy_error = 1.2245108158509268, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8337584561734162, log_density = 14.85486056105476, hamiltonian_energy = -12.303322766989226, hamiltonian_energy_error = 0.2374221799305758, max_hamiltonian_energy_error = 0.3821224927068503, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9977983486032637, log_density = 13.981123528489217, hamiltonian_energy = -12.856064505399315, hamiltonian_energy_error = -0.2457318330020133, max_hamiltonian_energy_error = -0.288613150494772, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8113556664235309, log_density = 14.5528513578998, hamiltonian_energy = -9.59142908161807, hamiltonian_energy_error = 0.0696103455506023, max_hamiltonian_energy_error = 0.5042172003241934, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.804879312076413, log_density = 13.895217123206518, hamiltonian_energy = -12.339126177283411, hamiltonian_energy_error = 0.27148651626899145, max_hamiltonian_energy_error = 0.5843137345119604, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8801078572819331, log_density = 8.583378586052207, hamiltonian_energy = -6.09280653819757, hamiltonian_energy_error = 0.287680257500603, max_hamiltonian_energy_error = 0.5357767884876186, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8608568924502672, log_density = 11.815713903664339, hamiltonian_energy = -4.616984618727099, hamiltonian_energy_error = -0.23769174513988567, max_hamiltonian_energy_error = 0.5048452456959804, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9459947518653765, log_density = 11.355270418879226, hamiltonian_energy = -9.828526130995247, hamiltonian_energy_error = 0.0596936678745319, max_hamiltonian_energy_error = -0.46736681291475257, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9571286594974945, log_density = 11.460584107163356, hamiltonian_energy = -9.80946766979609, hamiltonian_energy_error = -0.11017037477793146, max_hamiltonian_energy_error = 0.35681693047196994, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8487671173006985, log_density = 10.694726292174163, hamiltonian_energy = -8.841538391438167, hamiltonian_energy_error = 0.06434065108933495, max_hamiltonian_energy_error = 0.3519934953020094, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8521320585368204, log_density = 8.584398506794702, hamiltonian_energy = -7.294065537941545, hamiltonian_energy_error = 0.8561054779900061, max_hamiltonian_energy_error = 0.8561054779900061, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 6.703596483910516, hamiltonian_energy = -4.192560004541485, hamiltonian_energy_error = -1.377732830339398, max_hamiltonian_energy_error = -2.1546423390303158, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9046862105777158, log_density = 10.437980151326965, hamiltonian_energy = -4.557663760247865, hamiltonian_energy_error = -0.6268724131308545, max_hamiltonian_energy_error = -0.7465719909509252, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7741513288297024, log_density = 14.066397534652603, hamiltonian_energy = -4.050484353161126, hamiltonian_energy_error = 0.16546679112292217, max_hamiltonian_energy_error = 0.5735692395026315, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9994779267872175, log_density = 15.302081531889169, hamiltonian_energy = -13.580393097899307, hamiltonian_energy_error = -0.1654906602472348, max_hamiltonian_energy_error = -0.3973166398386372, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9356537102481266, log_density = 13.432845223570597, hamiltonian_energy = -10.75670251539521, hamiltonian_energy_error = -0.31348537657378905, max_hamiltonian_energy_error = -0.4614276063312026, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9754374285432725, log_density = 15.733582923279467, hamiltonian_energy = -12.51251810428897, hamiltonian_energy_error = -0.08838017587868663, max_hamiltonian_energy_error = -0.14140259873974692, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8719952389917938, log_density = 16.28111521880214, hamiltonian_energy = -14.515348225636759, hamiltonian_energy_error = -0.09008223411283822, max_hamiltonian_energy_error = 0.35931648191645493, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9844328063026541, log_density = 15.198416351386177, hamiltonian_energy = -13.734845603374152, hamiltonian_energy_error = -0.04613000648350152, max_hamiltonian_energy_error = 0.0462818990190339, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.711563722487924, log_density = 15.219101337395486, hamiltonian_energy = -9.458067105721247, hamiltonian_energy_error = 0.09302713059271817, max_hamiltonian_energy_error = 1.2024671632853803, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9597513163692079, log_density = 15.136860088350423, hamiltonian_energy = -13.235245187740105, hamiltonian_energy_error = -0.03496573015991622, max_hamiltonian_energy_error = -0.14968657727324164, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9970701242341926, log_density = 15.353122133256347, hamiltonian_energy = -14.394975872025473, hamiltonian_energy_error = -0.05996055159943481, max_hamiltonian_energy_error = -0.20048026452962198, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 5, is_accept = true, acceptance_rate = 0.5500326023991882, log_density = 14.330982140692067, hamiltonian_energy = -10.63735895593591, hamiltonian_energy_error = 0.36188530255607176, max_hamiltonian_energy_error = 1.1425204218457647, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9889914819384272, log_density = 14.25966544393297, hamiltonian_energy = -11.410294097182826, hamiltonian_energy_error = -0.1568116647979494, max_hamiltonian_energy_error = -0.1933153301041326, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9751843009728817, log_density = 15.742438813023778, hamiltonian_energy = -13.478442009025372, hamiltonian_energy_error = -0.0007698140889171867, max_hamiltonian_energy_error = 0.07894792493949687, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9529947689152749, log_density = 14.233920191806742, hamiltonian_energy = -12.843446925444173, hamiltonian_energy_error = 0.06366810994160232, max_hamiltonian_energy_error = 0.16754492551736, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9794744021474103, log_density = 14.322331719276812, hamiltonian_energy = -13.50386478219893, hamiltonian_energy_error = 0.06392871353491358, max_hamiltonian_energy_error = 0.06392871353491358, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8368554924086359, log_density = 14.276614821698695, hamiltonian_energy = -12.478089423029758, hamiltonian_energy_error = -0.009877563989938665, max_hamiltonian_energy_error = 0.42669553493032986, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6886122172813617, log_density = 15.48686664518134, hamiltonian_energy = -11.595875505589035, hamiltonian_energy_error = -0.0024854350679497372, max_hamiltonian_energy_error = 0.7597558863586364, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9474841248487296, log_density = 14.169270247872465, hamiltonian_energy = -13.029515816724189, hamiltonian_energy_error = 0.11319464722235928, max_hamiltonian_energy_error = -0.11396424407412553, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9770343620126658, log_density = 14.825577573614204, hamiltonian_energy = -13.534474621487478, hamiltonian_energy_error = 0.037462809389840146, max_hamiltonian_energy_error = -0.2029666520731599, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9751499658524715, log_density = 13.103267147652408, hamiltonian_energy = -10.78717757837521, hamiltonian_energy_error = -0.019097106117978768, max_hamiltonian_energy_error = 0.19110026397389746, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9803609566162801, log_density = 12.243318682624663, hamiltonian_energy = -10.608276346085383, hamiltonian_energy_error = 0.1452391228790173, max_hamiltonian_energy_error = -0.3487442672947072, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9633693010102231, log_density = 11.138588737232768, hamiltonian_energy = -10.600900994918389, hamiltonian_energy_error = 0.16353785371061136, max_hamiltonian_energy_error = -0.4288788631346687, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9671495065261264, log_density = 11.120443407364222, hamiltonian_energy = -8.068178561713424, hamiltonian_energy_error = -0.2134956819580669, max_hamiltonian_energy_error = -0.5573994651372427, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9831696180422517, log_density = 14.31727077761648, hamiltonian_energy = -7.097177230619864, hamiltonian_energy_error = -0.11603088676776974, max_hamiltonian_energy_error = -0.44374268696910946, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9900222811258307, log_density = 15.073626042631142, hamiltonian_energy = -13.311019033973423, hamiltonian_energy_error = -0.17364162889317214, max_hamiltonian_energy_error = -0.2294353532864566, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8851116072750311, log_density = 9.424056423759822, hamiltonian_energy = -8.570183830401048, hamiltonian_energy_error = 0.43216448847719313, max_hamiltonian_energy_error = 0.4456354482086997, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9315253717391209, log_density = 15.512034388458822, hamiltonian_energy = -8.727461505910407, hamiltonian_energy_error = -0.46703921262542636, max_hamiltonian_energy_error = -0.46703921262542636, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.83534104988388, log_density = 15.000786068181986, hamiltonian_energy = -11.855236188539905, hamiltonian_energy_error = -0.7382432456195112, max_hamiltonian_energy_error = -0.7382432456195112, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8539547607602166, log_density = 14.915006684051404, hamiltonian_energy = -11.699066090285854, hamiltonian_energy_error = 0.17195501374287758, max_hamiltonian_energy_error = 0.49056239454081485, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8447619366098564, log_density = 15.819742704750965, hamiltonian_energy = -13.444150711870385, hamiltonian_energy_error = 0.1183037260507156, max_hamiltonian_energy_error = 0.4596244638520499, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.984764730869954, log_density = 15.806079996180468, hamiltonian_energy = -15.084535251917831, hamiltonian_energy_error = -0.10793157703128209, max_hamiltonian_energy_error = -0.10793157703128209, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9815872076874738, log_density = 15.649183770747381, hamiltonian_energy = -14.585998144845131, hamiltonian_energy_error = 0.05846491334264847, max_hamiltonian_energy_error = -0.08780139767594797, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5652623236400259, log_density = 12.899463368145287, hamiltonian_energy = -10.873969716616614, hamiltonian_energy_error = 0.9093573330771001, max_hamiltonian_energy_error = 1.382515458887914, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 13.592480178193577, hamiltonian_energy = -11.923342732867678, hamiltonian_energy_error = -0.35598894562826366, max_hamiltonian_energy_error = -0.8458487351460935, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9945997821129539, log_density = 14.489486272260258, hamiltonian_energy = -12.736239974996906, hamiltonian_energy_error = -0.07927476163292368, max_hamiltonian_energy_error = -0.42397116670580814, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 1.0, log_density = 14.321956316183144, hamiltonian_energy = -13.512337312601726, hamiltonian_energy_error = -0.132445572508038, max_hamiltonian_energy_error = -0.5645040743206025, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8992882272632083, log_density = 10.33471274420835, hamiltonian_energy = -7.979048874018449, hamiltonian_energy_error = 0.20762175783007564, max_hamiltonian_energy_error = 0.3751534612109335, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 13.062855454977715, hamiltonian_energy = -9.375266269731048, hamiltonian_energy_error = -0.19861390944614676, max_hamiltonian_energy_error = -0.19861390944614676, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9828696185751739, log_density = 14.936898575225563, hamiltonian_energy = -11.621909401899051, hamiltonian_energy_error = -0.2324078868108952, max_hamiltonian_energy_error = -0.2914029985412885, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9238855543595881, log_density = 12.536674149529329, hamiltonian_energy = -11.761412231614212, hamiltonian_energy_error = 0.1532914900205249, max_hamiltonian_energy_error = 0.20172397890246607, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9700994227068477, log_density = 15.050247934401987, hamiltonian_energy = -6.973975390273663, hamiltonian_energy_error = -0.41264542158300266, max_hamiltonian_energy_error = -0.416222437417602, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.839907457847902, log_density = 13.617180074450202, hamiltonian_energy = -12.963194332970463, hamiltonian_energy_error = 0.16989391806099974, max_hamiltonian_energy_error = 0.26616234888237855, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7857110970205685, log_density = 13.77928477101865, hamiltonian_energy = -11.222660221930807, hamiltonian_energy_error = -0.0334313148051848, max_hamiltonian_energy_error = 0.5731682094065853, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7861581632866551, log_density = 13.320208173193224, hamiltonian_energy = -10.421922196571023, hamiltonian_energy_error = 0.3264515562629775, max_hamiltonian_energy_error = 0.5654945596695775, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7592588472755846, log_density = 16.0076524415208, hamiltonian_energy = -12.000501530989787, hamiltonian_energy_error = -0.4489161590818931, max_hamiltonian_energy_error = 1.5995914087129783, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8860575369457349, log_density = 15.808279989694245, hamiltonian_energy = -13.310883428008315, hamiltonian_energy_error = 0.0028314051007019003, max_hamiltonian_energy_error = 0.1967052936803153, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.41600841415427314, log_density = 14.342539590048137, hamiltonian_energy = -10.700862403546752, hamiltonian_energy_error = 0.663006998308477, max_hamiltonian_energy_error = 1.671613325043543, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9749652449938672, log_density = 14.46920818544403, hamiltonian_energy = -11.254068057977534, hamiltonian_energy_error = -0.09130212042238206, max_hamiltonian_energy_error = -0.26967362828746566, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.821280616512061, log_density = 15.368430368633529, hamiltonian_energy = -12.266035653312077, hamiltonian_energy_error = -0.07834975431831204, max_hamiltonian_energy_error = 0.42906026181521817, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9912670440647086, log_density = 15.954014153854096, hamiltonian_energy = -14.472555640351109, hamiltonian_energy_error = -0.03217499973148641, max_hamiltonian_energy_error = 0.05115472080536776, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7769310507139896, log_density = 15.08878894273129, hamiltonian_energy = -13.715656679667767, hamiltonian_energy_error = 0.16879988426346948, max_hamiltonian_energy_error = 0.4152477777870711, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9998924150774405, log_density = 15.615281930795256, hamiltonian_energy = -14.86611557370891, hamiltonian_energy_error = -0.07712669463331245, max_hamiltonian_energy_error = -0.07712669463331245, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5563376956184282, log_density = 15.615281930795256, hamiltonian_energy = -11.922915119148074, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 0.9998458554798741, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9363123528654748, log_density = 15.922182045016163, hamiltonian_energy = -14.218790621573804, hamiltonian_energy_error = -0.07329622832474847, max_hamiltonian_energy_error = 0.1924744009564403, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9357510765713263, log_density = 15.739239388849853, hamiltonian_energy = -13.326537150192244, hamiltonian_energy_error = 0.03863254552454265, max_hamiltonian_energy_error = 0.2286954531870098, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8909416745695535, log_density = 11.644817642505403, hamiltonian_energy = -11.49975596735112, hamiltonian_energy_error = 0.3881081590660891, max_hamiltonian_energy_error = 0.3881081590660891, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7515615487663587, log_density = 15.544366546662825, hamiltonian_energy = -8.248011895491281, hamiltonian_energy_error = -0.684574741807058, max_hamiltonian_energy_error = 1.6084117543729555, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.956988815187837, log_density = 16.09434777658217, hamiltonian_energy = -13.226564743272121, hamiltonian_energy_error = 0.047165658129443955, max_hamiltonian_energy_error = 0.10319749787354837, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8296576966840236, log_density = 15.260679720020672, hamiltonian_energy = -12.389929789590322, hamiltonian_energy_error = -0.040389261881704996, max_hamiltonian_energy_error = 0.5236911485905438, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.992975020190862, log_density = 14.19748663421004, hamiltonian_energy = -13.901701114499817, hamiltonian_energy_error = 0.05042510154864033, max_hamiltonian_energy_error = -0.1139528492231392, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7826921666089675, log_density = 14.348311504055735, hamiltonian_energy = -10.731196125885571, hamiltonian_energy_error = 0.040842491556752236, max_hamiltonian_energy_error = 0.6398449234844197, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.913094028090718, log_density = 16.150751061877074, hamiltonian_energy = -13.195074960300726, hamiltonian_energy_error = -0.32761977686422306, max_hamiltonian_energy_error = -0.32761977686422306, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8641832026530248, log_density = 15.07441680100695, hamiltonian_energy = -14.091862284427965, hamiltonian_energy_error = 0.20357768012794608, max_hamiltonian_energy_error = 0.2754800259435868, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9916363893244141, log_density = 16.374347587990396, hamiltonian_energy = -14.556160020151363, hamiltonian_energy_error = -0.25373568277666614, max_hamiltonian_energy_error = -0.25795663574016814, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8640012287855922, log_density = 15.602214562500409, hamiltonian_energy = -14.842495933292982, hamiltonian_energy_error = 0.21150636806659584, max_hamiltonian_energy_error = 0.24518907159394843, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9788357155127697, log_density = 15.32823119715025, hamiltonian_energy = -14.547441901982952, hamiltonian_energy_error = 0.026707602416356835, max_hamiltonian_energy_error = -0.15493065922136928, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9876684572139381, log_density = 15.582201471303804, hamiltonian_energy = -14.636969680149896, hamiltonian_energy_error = -0.12581919531185193, max_hamiltonian_energy_error = -0.12581919531185193, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8840708576620311, log_density = 14.266919391646887, hamiltonian_energy = -13.69155435589568, hamiltonian_energy_error = 0.1949088476604537, max_hamiltonian_energy_error = 0.22060852763370242, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7344195731150543, log_density = 13.93311642046245, hamiltonian_energy = -8.20249739437035, hamiltonian_energy_error = 0.18474297416330643, max_hamiltonian_energy_error = 0.5827408369220741, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.698677832740262, log_density = 12.603292816628063, hamiltonian_energy = -10.00493141713578, hamiltonian_energy_error = 0.13483228083297227, max_hamiltonian_energy_error = 0.9807292123637268, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9927116346507407, log_density = 14.774865090584193, hamiltonian_energy = -10.752543491513881, hamiltonian_energy_error = -0.37555299678651366, max_hamiltonian_energy_error = -0.37555299678651366, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9278346811143746, log_density = 15.808439963693761, hamiltonian_energy = -13.626608674985249, hamiltonian_energy_error = -0.01912409005356608, max_hamiltonian_energy_error = 0.22447128559308638, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8103198657360658, log_density = 14.707459477592145, hamiltonian_energy = -13.129650670141475, hamiltonian_energy_error = 0.22435898166109958, max_hamiltonian_energy_error = 0.3968326865906029, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9908723868890742, log_density = 14.977869690375208, hamiltonian_energy = -12.977579264065358, hamiltonian_energy_error = -0.03212725889076751, max_hamiltonian_energy_error = -0.35610790848328655, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9979821444057168, log_density = 15.26172453610279, hamiltonian_energy = -14.09233167770562, hamiltonian_energy_error = -0.20814602323203601, max_hamiltonian_energy_error = -0.328144530738669, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9915766597486744, log_density = 15.001397553585193, hamiltonian_energy = -14.722164621842207, hamiltonian_energy_error = 0.02481790940195161, max_hamiltonian_energy_error = -0.04858423672541434, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9383989590399495, log_density = 15.083004191429966, hamiltonian_energy = -11.262838963478398, hamiltonian_energy_error = -1.163092042543374, max_hamiltonian_energy_error = -1.163092042543374, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 0.6392065838289832, log_density = 13.85549864261468, hamiltonian_energy = -11.908381460159086, hamiltonian_energy_error = 0.39809955058829694, max_hamiltonian_energy_error = 0.934877302102219, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9975736257331431, log_density = 14.17138488206345, hamiltonian_energy = -13.266593692769385, hamiltonian_energy_error = -0.03044073308312001, max_hamiltonian_energy_error = -0.09036678987584779, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8419429992516623, log_density = 15.769017166874812, hamiltonian_energy = -10.98850756645285, hamiltonian_energy_error = -0.14449254444881987, max_hamiltonian_energy_error = 0.3893152865241074, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9237794832420491, log_density = 16.140861224610877, hamiltonian_energy = -14.60310752374279, hamiltonian_energy_error = 0.015216238918798197, max_hamiltonian_energy_error = 0.18312457600013232, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9004244696273604, log_density = 15.258583835304625, hamiltonian_energy = -14.38100568349166, hamiltonian_energy_error = -0.006492073768230355, max_hamiltonian_energy_error = 0.26428669041225206, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.6404532379098621, log_density = 13.446065780170443, hamiltonian_energy = -10.486576801002377, hamiltonian_energy_error = 0.36667697862835524, max_hamiltonian_energy_error = 0.8433680486801745, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 13, is_accept = true, acceptance_rate = 0.9023866031141026, log_density = 16.243765701913595, hamiltonian_energy = -12.229064970440373, hamiltonian_energy_error = -0.7258699199723466, max_hamiltonian_energy_error = -0.8524013665116179, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.7640514452193518, log_density = 15.252808795106334, hamiltonian_energy = -12.614744079693127, hamiltonian_energy_error = 0.07121730185924768, max_hamiltonian_energy_error = 0.7821738645145722, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9235939117528087, log_density = 14.459453815173532, hamiltonian_energy = -12.394779780373792, hamiltonian_energy_error = 0.006202308504263954, max_hamiltonian_energy_error = 0.1611482467667269, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8807539363801354, log_density = 13.926023733727751, hamiltonian_energy = -11.933171885243658, hamiltonian_energy_error = 0.14054137152418456, max_hamiltonian_energy_error = 0.26299351212332667, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8629289782641941, log_density = 11.809379113489534, hamiltonian_energy = -9.198990655296825, hamiltonian_energy_error = 0.3519766595421796, max_hamiltonian_energy_error = 0.3527757332254424, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9558295455324992, log_density = 12.610464924805935, hamiltonian_energy = -10.25892666983917, hamiltonian_energy_error = -0.15860612730576307, max_hamiltonian_energy_error = -0.8228288405234387, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.987763490596526, log_density = 15.279677838110388, hamiltonian_energy = -8.176405801842025, hamiltonian_energy_error = -0.908632216861176, max_hamiltonian_energy_error = -1.3581313061226554, tree_depth = 5, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9925832002385147, log_density = 14.872432005552284, hamiltonian_energy = -13.784148696102015, hamiltonian_energy_error = -0.011662154336807617, max_hamiltonian_energy_error = -0.1439581453772707, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 0.9251646827351085, log_density = 15.248702347072037, hamiltonian_energy = -12.809428755006735, hamiltonian_energy_error = 0.07903640587222682, max_hamiltonian_energy_error = 0.29859703049413966, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.8491697723203278, log_density = 13.629698488985964, hamiltonian_energy = -11.670047799363147, hamiltonian_energy_error = 0.2585335102320734, max_hamiltonian_energy_error = 0.4461726103586763, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9628942398772473, log_density = 14.809609058594404, hamiltonian_energy = -11.952561891511653, hamiltonian_energy_error = -0.4245191588478008, max_hamiltonian_energy_error = -0.4245191588478008, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9801030249465646, log_density = 13.435429191685959, hamiltonian_energy = -12.617694638863655, hamiltonian_energy_error = 0.08171519325392929, max_hamiltonian_energy_error = 0.08171519325392929, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8093267321906614, log_density = 13.541818031923395, hamiltonian_energy = -9.855808172331287, hamiltonian_energy_error = 0.06405446698185102, max_hamiltonian_energy_error = 0.4358655819249968, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8757125355308953, log_density = 13.330504925394408, hamiltonian_energy = -11.935083685648719, hamiltonian_energy_error = 0.07564318999722808, max_hamiltonian_energy_error = 0.33301080642612746, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9673843348989146, log_density = 13.713815015335594, hamiltonian_energy = -10.087129536773997, hamiltonian_energy_error = 0.013566073959225378, max_hamiltonian_energy_error = -0.6040265446051336, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9485940491735733, log_density = 13.490836623314404, hamiltonian_energy = -10.804766250234046, hamiltonian_energy_error = 0.022035720616278454, max_hamiltonian_energy_error = -0.20513338400674463, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 1.0, log_density = 14.680484881194799, hamiltonian_energy = -11.34457333414021, hamiltonian_energy_error = -0.057652508626100385, max_hamiltonian_energy_error = -0.6800290205530448, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9911458725852638, log_density = 15.862072274058889, hamiltonian_energy = -13.0418110680298, hamiltonian_energy_error = -0.4638269521953031, max_hamiltonian_energy_error = -0.4638269521953031, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9208317487079837, log_density = 12.378403034716648, hamiltonian_energy = -11.283454173016326, hamiltonian_energy_error = 0.15580695071201234, max_hamiltonian_energy_error = 0.24373820566209048, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.9992067289591847, log_density = 15.206590128597252, hamiltonian_energy = -11.710680056846579, hamiltonian_energy_error = -0.3628328102394658, max_hamiltonian_energy_error = -0.42798787417749296, tree_depth = 5, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6892722827804086, log_density = 15.128508372183997, hamiltonian_energy = -11.750339307420923, hamiltonian_energy_error = 0.20887062585024907, max_hamiltonian_energy_error = 0.7010221440834172, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9576052840166622, log_density = 13.805912933431724, hamiltonian_energy = -12.95190406634892, hamiltonian_energy_error = 0.15945005930303857, max_hamiltonian_energy_error = -0.16519423540156097, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 13.797603780960069, hamiltonian_energy = -11.542992529455812, hamiltonian_energy_error = -0.05434704113601896, max_hamiltonian_energy_error = -0.46012056226724063, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9071169685123909, log_density = 15.281272270498276, hamiltonian_energy = -11.734103464629811, hamiltonian_energy_error = -0.2991520524377602, max_hamiltonian_energy_error = 0.4490751085626705, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9532987692040765, log_density = 14.827072131547279, hamiltonian_energy = -12.34376961214174, hamiltonian_energy_error = -0.07268278707510767, max_hamiltonian_energy_error = -0.25717940407246687, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9524827020730346, log_density = 15.956325987518898, hamiltonian_energy = -12.19610425903565, hamiltonian_energy_error = -0.09732687697259124, max_hamiltonian_energy_error = 0.2243108254745163, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.769658145232617, log_density = 15.129595995287678, hamiltonian_energy = -12.585804486869023, hamiltonian_energy_error = 0.034793963002499595, max_hamiltonian_energy_error = 0.816351823536472, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7851131279591125, log_density = 13.909266825768906, hamiltonian_energy = -11.070672799281564, hamiltonian_energy_error = 0.10097862458561124, max_hamiltonian_energy_error = 0.5371105164444572, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.995953365107507, log_density = 13.522965977445471, hamiltonian_energy = -12.5014194974164, hamiltonian_energy_error = -0.028238784333769473, max_hamiltonian_energy_error = -0.10954125819385574, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9982385098224805, log_density = 14.164500357711745, hamiltonian_energy = -12.459279645771705, hamiltonian_energy_error = -0.033229258144352514, max_hamiltonian_energy_error = -0.12117140821463579, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9827133296183029, log_density = 13.983748861909604, hamiltonian_energy = -13.145658370244144, hamiltonian_energy_error = 0.04486640111347029, max_hamiltonian_energy_error = -0.1490876189544732, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7349108164032673, log_density = 12.661028473986944, hamiltonian_energy = -8.467099634827598, hamiltonian_energy_error = 0.21963781329733223, max_hamiltonian_energy_error = 0.565102184002189, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.89277532217182, log_density = 13.588036509169456, hamiltonian_energy = -6.896151270884899, hamiltonian_energy_error = -0.03165440812795417, max_hamiltonian_energy_error = 0.35385521106063766, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5665641500179391, log_density = 12.440962475830242, hamiltonian_energy = -6.808438800553104, hamiltonian_energy_error = 0.6182560350075468, max_hamiltonian_energy_error = 1.1381824836111356, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8883315387062645, log_density = 12.987919636467948, hamiltonian_energy = -9.58792191217692, hamiltonian_energy_error = -0.5564506810364485, max_hamiltonian_energy_error = -1.063854237504911, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8667797903343374, log_density = 14.83118114109367, hamiltonian_energy = -11.05503356929458, hamiltonian_energy_error = 0.024733272932184747, max_hamiltonian_energy_error = 0.4703728450372555, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.29788033766190886, log_density = 12.44212308757989, hamiltonian_energy = -6.528146624259594, hamiltonian_energy_error = 0.6529248907622067, max_hamiltonian_energy_error = 1.920231888063804, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.88131721883022, hamiltonian_energy = -10.88439582633519, hamiltonian_energy_error = -0.4327226375885278, max_hamiltonian_energy_error = -0.5049689936202615, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.815329130836728, log_density = 10.886099911129573, hamiltonian_energy = -8.77070357387932, hamiltonian_energy_error = 0.30589855939462396, max_hamiltonian_energy_error = 0.5803330343328952, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9504350419886766, log_density = 14.807586490094664, hamiltonian_energy = -9.195410535233318, hamiltonian_energy_error = -0.5568766915247032, max_hamiltonian_energy_error = -0.5568766915247032, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9297150246257746, log_density = 14.216336909749726, hamiltonian_energy = -13.394864152847171, hamiltonian_energy_error = 0.11142228658744813, max_hamiltonian_energy_error = 0.18980044950793662, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7574052442103316, log_density = 13.252613779327797, hamiltonian_energy = -8.03704398011217, hamiltonian_energy_error = 0.25485660453902703, max_hamiltonian_energy_error = 0.5591432320437573, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9829832678491196, log_density = 14.319257163413281, hamiltonian_energy = -11.760060288494575, hamiltonian_energy_error = -0.086730869839581, max_hamiltonian_energy_error = -0.37626730458924484, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9861264375113056, log_density = 15.74796641751878, hamiltonian_energy = -13.869770328460877, hamiltonian_energy_error = -0.3701441018924232, max_hamiltonian_energy_error = -0.3761387571800068, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5038406142007353, log_density = 15.16214321357472, hamiltonian_energy = -10.896169107589607, hamiltonian_energy_error = 0.2551667818239718, max_hamiltonian_energy_error = 1.170350323716102, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9775571409168777, log_density = 14.481670614216668, hamiltonian_energy = -13.685678921367343, hamiltonian_energy_error = 0.02088320939407673, max_hamiltonian_energy_error = -0.3147445809732172, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9573851532359323, log_density = 14.731446191797966, hamiltonian_energy = -12.63175093796308, hamiltonian_energy_error = -0.019946634872463065, max_hamiltonian_energy_error = 0.19445178523979934, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 15.813358309882496, hamiltonian_energy = -14.535107247799333, hamiltonian_energy_error = -0.0873653662558862, max_hamiltonian_energy_error = -0.14354034910627433, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7190081330532991, log_density = 13.898241352746968, hamiltonian_energy = -12.403272910672506, hamiltonian_energy_error = 0.5901219505939093, max_hamiltonian_energy_error = 0.6191703187597248, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9964869649789939, log_density = 13.465284393249252, hamiltonian_energy = -11.945789208194933, hamiltonian_energy_error = -0.3463687209846462, max_hamiltonian_energy_error = -0.8674821286967695, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9761701904741718, log_density = 16.126370182982434, hamiltonian_energy = -13.108051850048055, hamiltonian_energy_error = -0.22286411246578375, max_hamiltonian_energy_error = -0.5986160474661553, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8132810574611551, log_density = 14.146126666954538, hamiltonian_energy = -11.074369751310916, hamiltonian_energy_error = 0.3866402356545837, max_hamiltonian_energy_error = 0.7142297094027175, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9526529548845465, log_density = 14.23604231437759, hamiltonian_energy = -12.142620283936171, hamiltonian_energy_error = 0.06636661767751306, max_hamiltonian_energy_error = -0.39254482335611485, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9826511185737348, log_density = 16.30113491260108, hamiltonian_energy = -13.759023753045359, hamiltonian_energy_error = -0.44051329142788376, max_hamiltonian_energy_error = -0.5163970479103615, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9233102813186534, log_density = 14.157161024745925, hamiltonian_energy = -13.335688641172483, hamiltonian_energy_error = 0.0644030492265788, max_hamiltonian_energy_error = 0.183557724010452, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6757375540604296, log_density = 15.494399337638482, hamiltonian_energy = -10.837938675110927, hamiltonian_energy_error = -0.04311026072179125, max_hamiltonian_energy_error = 0.9174864692378808, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9613035247487617, log_density = 14.53272365006415, hamiltonian_energy = -12.678966150362484, hamiltonian_energy_error = 0.04686483363605731, max_hamiltonian_energy_error = 0.1180279078330333, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7842457707545217, log_density = 14.391019551441802, hamiltonian_energy = -12.015926646802503, hamiltonian_energy_error = 0.24583151737629727, max_hamiltonian_energy_error = 0.5529063926033615, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9935644998054864, log_density = 14.250428199128578, hamiltonian_energy = -11.886268764797757, hamiltonian_energy_error = -0.278018344800568, max_hamiltonian_energy_error = -0.34436484868700745, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9909347014555328, log_density = 15.119884788785434, hamiltonian_energy = -12.935000474182601, hamiltonian_energy_error = -0.05893073204651422, max_hamiltonian_energy_error = -0.1280031144012863, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9383252421960491, log_density = 15.49686211409244, hamiltonian_energy = -13.868280597009761, hamiltonian_energy_error = 0.02970698552962503, max_hamiltonian_energy_error = 0.2271827686125949, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.6149057482238642, log_density = 15.576849885721668, hamiltonian_energy = -12.63291092635942, hamiltonian_energy_error = -0.06236194009760787, max_hamiltonian_energy_error = 1.2219499342474798, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8470389061871166, log_density = 15.93758800482771, hamiltonian_energy = -13.568269134777132, hamiltonian_energy_error = 0.05938699702785932, max_hamiltonian_energy_error = 0.48493394204768236, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9884399407263958, log_density = 14.035230430987049, hamiltonian_energy = -11.618440229586952, hamiltonian_energy_error = -0.2748168529857793, max_hamiltonian_energy_error = -0.2748168529857793, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7802114692004842, log_density = 13.92761362917096, hamiltonian_energy = -9.771972809616857, hamiltonian_energy_error = 0.20852568511314118, max_hamiltonian_energy_error = 0.6993111536985435, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9849243418358801, log_density = 16.625082504066235, hamiltonian_energy = -13.756225388964324, hamiltonian_energy_error = -0.124231749995106, max_hamiltonian_energy_error = -0.13629186330552834, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8361992816315927, log_density = 15.208554270503962, hamiltonian_energy = -14.872704601842106, hamiltonian_energy_error = 0.26260668239559415, max_hamiltonian_energy_error = 0.26260668239559415, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7077739403212083, log_density = 13.252065779806188, hamiltonian_energy = -10.926282574135238, hamiltonian_energy_error = 0.3547932559739575, max_hamiltonian_energy_error = 0.8627419096509481, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9950060945065545, log_density = 14.743869385248228, hamiltonian_energy = -12.413908660568437, hamiltonian_energy_error = -0.41031681530667896, max_hamiltonian_energy_error = -0.4538495094711674, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.851071804066671, log_density = 12.256739925091086, hamiltonian_energy = -10.198259996215235, hamiltonian_energy_error = -0.1222286291571244, max_hamiltonian_energy_error = 0.554948548853007, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.711852980884435, log_density = 12.468769138597375, hamiltonian_energy = -10.208899257208365, hamiltonian_energy_error = 0.017729864277370666, max_hamiltonian_energy_error = 0.5810706212181014, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7820794023216499, log_density = 8.821901364357332, hamiltonian_energy = -8.201002054124611, hamiltonian_energy_error = 0.6058956618956834, max_hamiltonian_energy_error = 0.6058956618956834, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6696487566857104, log_density = 10.84936212994802, hamiltonian_energy = -5.6685392134073105, hamiltonian_energy_error = 0.42030188151622205, max_hamiltonian_energy_error = 1.043846384576086, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9919425310375078, log_density = 14.137865639398896, hamiltonian_energy = -9.980883123743197, hamiltonian_energy_error = -0.8044911026477468, max_hamiltonian_energy_error = -1.264075060441419, tree_depth = 5, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.810626879829414, log_density = 11.383763413638116, hamiltonian_energy = -10.00511331745622, hamiltonian_energy_error = 0.7688522912134488, max_hamiltonian_energy_error = 0.9596033005716365, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9435123254236367, log_density = 10.695077789116283, hamiltonian_energy = -6.2506564048325615, hamiltonian_energy_error = -0.45374783537450014, max_hamiltonian_energy_error = -1.4034037395117158, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.978772194885049, log_density = 11.470527628214535, hamiltonian_energy = -9.73001771446035, hamiltonian_energy_error = -0.0720209297868557, max_hamiltonian_energy_error = -0.7283289967626541, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6923015867262495, log_density = 10.515486562684538, hamiltonian_energy = -5.417480485014949, hamiltonian_energy_error = -0.4319586445006829, max_hamiltonian_energy_error = 0.7933275685319856, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.06504137314319293, log_density = 10.515486562684538, hamiltonian_energy = -3.3571008086267877, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 5.110644819216845, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5171447792260653, log_density = 11.403368667937311, hamiltonian_energy = -6.460422550439585, hamiltonian_energy_error = -0.7369525053755002, max_hamiltonian_energy_error = 2.3692238117502153, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.36292927190605384, log_density = 12.306784751862953, hamiltonian_energy = -7.28983128474319, hamiltonian_energy_error = 0.6995563577361974, max_hamiltonian_energy_error = 1.5512804979189347, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.97944581569934, log_density = 12.027524542747656, hamiltonian_energy = -10.101611149316387, hamiltonian_energy_error = 0.0038976999109507915, max_hamiltonian_energy_error = -0.609422757142644, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9808893440594727, log_density = 12.898542360543257, hamiltonian_energy = -9.289477297600381, hamiltonian_energy_error = -0.13166897277224976, max_hamiltonian_energy_error = -0.37196870326758, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.979495155992118, log_density = 12.80427943865324, hamiltonian_energy = -11.193475712749464, hamiltonian_energy_error = 0.06897509750022657, max_hamiltonian_energy_error = -0.24536513839046492, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9611367623628269, log_density = 15.44997211113858, hamiltonian_energy = -11.86090160106194, hamiltonian_energy_error = -0.22912414103596745, max_hamiltonian_energy_error = -0.39355775996655673, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.950509769862251, log_density = 14.772677417020562, hamiltonian_energy = -13.150760552111196, hamiltonian_energy_error = -0.06824027246283038, max_hamiltonian_energy_error = 0.18790946876540993, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.986452433651198, log_density = 15.848504657716669, hamiltonian_energy = -12.629323813367463, hamiltonian_energy_error = -0.20156054586437655, max_hamiltonian_energy_error = -0.20156054586437655, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.944413347143858, log_density = 15.96448633124744, hamiltonian_energy = -11.853564302042653, hamiltonian_energy_error = -0.06857046158532754, max_hamiltonian_energy_error = 0.26882466584000575, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8848597446930686, log_density = 14.644956134277184, hamiltonian_energy = -14.130314072319457, hamiltonian_energy_error = 0.16647149544411732, max_hamiltonian_energy_error = 0.2291456510103984, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9963329594566184, log_density = 15.213584914118746, hamiltonian_energy = -14.142424260268509, hamiltonian_energy_error = -0.1551022038631853, max_hamiltonian_energy_error = -0.21553366385812822, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8650229282035768, log_density = 15.771316155095015, hamiltonian_energy = -12.911963877218806, hamiltonian_energy_error = 0.006472383053173658, max_hamiltonian_energy_error = 0.33710090865226405, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8911706419480162, log_density = 11.18859949127344, hamiltonian_energy = -10.139238414975859, hamiltonian_energy_error = 0.25546698015248026, max_hamiltonian_energy_error = -0.26619714719125476, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8184883096012214, log_density = 11.458242622746644, hamiltonian_energy = -8.320454978200296, hamiltonian_energy_error = 0.20222530351720636, max_hamiltonian_energy_error = 0.31137160135767417, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8621179462754969, log_density = 11.960071096235975, hamiltonian_energy = -9.53125198249121, hamiltonian_energy_error = 0.3117218521794882, max_hamiltonian_energy_error = 0.3117218521794882, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9851746591507058, log_density = 11.413583030380485, hamiltonian_energy = -9.254481834484508, hamiltonian_energy_error = -0.1222718461656438, max_hamiltonian_energy_error = -0.4772150128835637, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.991233779700029, log_density = 14.639916481457007, hamiltonian_energy = -10.055812982841886, hamiltonian_energy_error = -0.46593752588302983, max_hamiltonian_energy_error = -0.5090101952704114, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.822080300184611, log_density = 14.105995201192268, hamiltonian_energy = -9.885934827113125, hamiltonian_energy_error = 0.15829525360300423, max_hamiltonian_energy_error = 0.40418717145916716, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 1.0, log_density = 13.700400342039341, hamiltonian_energy = -12.742488680246385, hamiltonian_energy_error = -0.0624391460806244, max_hamiltonian_energy_error = -0.3838519850084907, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9083610438732704, log_density = 13.036054909437759, hamiltonian_energy = -11.53981039706437, hamiltonian_energy_error = 0.25249435741677395, max_hamiltonian_energy_error = 0.2657719553087734, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8695063057620649, log_density = 13.109224435294541, hamiltonian_energy = -10.518933867098076, hamiltonian_energy_error = 0.3125966327684697, max_hamiltonian_energy_error = 0.4629616161201344, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9652162310078279, log_density = 16.241459098287354, hamiltonian_energy = -12.413736083086523, hamiltonian_energy_error = -0.5533389384219607, max_hamiltonian_energy_error = -0.5533389384219607, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8633942629804178, log_density = 14.255191758295043, hamiltonian_energy = -13.185123584933056, hamiltonian_energy_error = 0.301409224894595, max_hamiltonian_energy_error = 0.301409224894595, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8519888004287581, log_density = 13.825683337646065, hamiltonian_energy = -11.217649986039946, hamiltonian_energy_error = -0.01172858601865201, max_hamiltonian_energy_error = 0.771379715826841, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9810102086882427, log_density = 15.52568092914038, hamiltonian_energy = -12.599245618895644, hamiltonian_energy_error = -0.18017917731643251, max_hamiltonian_energy_error = -0.33395662403783, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8458604332238139, log_density = 14.881971360880417, hamiltonian_energy = -13.075670868051532, hamiltonian_energy_error = -0.08424542866793416, max_hamiltonian_energy_error = 0.29609763374277165, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9434744998724681, log_density = 14.58862333344102, hamiltonian_energy = -11.874225428036294, hamiltonian_energy_error = -0.004212217146323027, max_hamiltonian_energy_error = 0.2203026661507348, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9953434013260881, log_density = 13.26101348347181, hamiltonian_energy = -12.107430486807287, hamiltonian_energy_error = 0.015506755019227825, max_hamiltonian_energy_error = -0.14497817701223248, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.962172831529539, log_density = 15.164278749821053, hamiltonian_energy = -10.828597791524071, hamiltonian_energy_error = -0.1344362916032278, max_hamiltonian_energy_error = 0.17734490870618913, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7937893130758082, log_density = 12.23675175072128, hamiltonian_energy = -10.9882908518916, hamiltonian_energy_error = 0.10965328845180089, max_hamiltonian_energy_error = 0.34740673802949473, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9986241605871253, log_density = 10.857311560957042, hamiltonian_energy = -8.80308881181219, hamiltonian_energy_error = -0.0063338333368268, max_hamiltonian_energy_error = -0.09577575851879594, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9298737677997453, log_density = 9.391016297190333, hamiltonian_energy = -8.330094663118485, hamiltonian_energy_error = 0.053914224049529835, max_hamiltonian_energy_error = 0.12990801080416858, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.125844304757855, hamiltonian_energy = -7.738144232041594, hamiltonian_energy_error = -0.0055022153500798865, max_hamiltonian_energy_error = -0.06479938773773952, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8529637982753537, log_density = 10.745040010682562, hamiltonian_energy = -4.164417521179129, hamiltonian_energy_error = -0.7983327519354466, max_hamiltonian_energy_error = 1.5382325001214228, tree_depth = 5, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7028380705932359, log_density = 15.690782508404377, hamiltonian_energy = -6.989059656088553, hamiltonian_energy_error = 0.969860470505445, max_hamiltonian_energy_error = 0.969860470505445, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9779095794245305, log_density = 15.426601074273012, hamiltonian_energy = -14.575952920443926, hamiltonian_energy_error = 0.1031471072092156, max_hamiltonian_energy_error = -0.16682991747669718, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9857317892196639, log_density = 15.491679155997044, hamiltonian_energy = -14.253011974956156, hamiltonian_energy_error = -0.026697632278530392, max_hamiltonian_energy_error = -0.3207858949320279, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9626988402922835, log_density = 15.1729842116447, hamiltonian_energy = -13.828649199920187, hamiltonian_energy_error = 0.046162724798874066, max_hamiltonian_energy_error = 0.0914427849593693, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8301366688380203, log_density = 13.411976392001264, hamiltonian_energy = -12.24495488483379, hamiltonian_energy_error = 0.342197902950371, max_hamiltonian_energy_error = 0.45399520094062673, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.946964170361496, log_density = 15.411025841696492, hamiltonian_energy = -10.718874948676767, hamiltonian_energy_error = -0.4076410648147917, max_hamiltonian_energy_error = -0.4076410648147917, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9485586692928659, log_density = 15.618772387724455, hamiltonian_energy = -13.890996785063178, hamiltonian_energy_error = -0.04366954492438424, max_hamiltonian_energy_error = -0.20124459798849337, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9779650764850217, log_density = 13.95155078230437, hamiltonian_energy = -13.093796374186585, hamiltonian_energy_error = 0.07183696357870062, max_hamiltonian_energy_error = 0.14820949000151096, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7518941692343372, log_density = 13.167941399770527, hamiltonian_energy = -11.627741144950031, hamiltonian_energy_error = 0.2785822416892554, max_hamiltonian_energy_error = 0.37032428247141347, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.998316918949979, log_density = 14.483970161036197, hamiltonian_energy = -10.540933052602748, hamiltonian_energy_error = -0.03820059499397743, max_hamiltonian_energy_error = -0.39336105651328346, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8157033567126888, log_density = 13.18881187385247, hamiltonian_energy = -9.928366638861966, hamiltonian_energy_error = -0.2839786010300216, max_hamiltonian_energy_error = 0.5477825436013468, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9786902475156359, log_density = 13.131446824565296, hamiltonian_energy = -10.97390913219327, hamiltonian_energy_error = 0.06794820258211942, max_hamiltonian_energy_error = -0.3633491769877022, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9252784068586218, log_density = 13.979255620454696, hamiltonian_energy = -10.443655807833863, hamiltonian_energy_error = -0.6614376034145746, max_hamiltonian_energy_error = -0.6614376034145746, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.65825858739062, log_density = 12.28491587974004, hamiltonian_energy = -6.412056215652541, hamiltonian_energy_error = 0.055613126511506294, max_hamiltonian_energy_error = 1.506692509139537, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9794865811887776, log_density = 12.310106945805224, hamiltonian_energy = -8.775599341653752, hamiltonian_energy_error = -0.46514971465263955, max_hamiltonian_energy_error = -0.8495104229825845, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8749301715500557, log_density = 13.308302096733861, hamiltonian_energy = -9.271775284995307, hamiltonian_energy_error = -0.34811579452405184, max_hamiltonian_energy_error = -0.8104482871559817, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9695738654480234, log_density = 15.10150986645938, hamiltonian_energy = -11.910209587305886, hamiltonian_energy_error = 0.01705272767485333, max_hamiltonian_energy_error = 0.12534820479876707, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.9992578854573729, log_density = 15.175838879991186, hamiltonian_energy = -14.59723452788031, hamiltonian_energy_error = -0.03378536080670358, max_hamiltonian_energy_error = -0.13618201689323683, tree_depth = 5, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8011457092490885, log_density = 15.381158538707915, hamiltonian_energy = -13.531054366378223, hamiltonian_energy_error = 0.038860203611218225, max_hamiltonian_energy_error = 0.5272046515654214, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9423744676398902, log_density = 16.076843059959053, hamiltonian_energy = -14.849090760733127, hamiltonian_energy_error = -0.0805477503759402, max_hamiltonian_energy_error = 0.15811526031145462, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9296093176540959, log_density = 15.787637349783452, hamiltonian_energy = -15.432955088673708, hamiltonian_energy_error = 0.060750537133849036, max_hamiltonian_energy_error = 0.15472114225632438, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9708908025004223, log_density = 13.975476871722936, hamiltonian_energy = -12.051958262497749, hamiltonian_energy_error = 0.017078663254130433, max_hamiltonian_energy_error = 0.12638578844533832, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9773902522035592, log_density = 14.8591720289889, hamiltonian_energy = -12.96967047742143, hamiltonian_energy_error = -0.0559099567175636, max_hamiltonian_energy_error = 0.06666478463075443, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6898410852538175, log_density = 14.53220940944665, hamiltonian_energy = -10.562763687784035, hamiltonian_energy_error = 0.3812820958182339, max_hamiltonian_energy_error = 0.8174956689526685, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 0.7104002706479223, log_density = 10.26706779016207, hamiltonian_energy = -5.954129350689057, hamiltonian_energy_error = 0.19673631990479645, max_hamiltonian_energy_error = 1.3282153772954182, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8526194247626395, log_density = 13.832911884571574, hamiltonian_energy = -9.24971489795286, hamiltonian_energy_error = -0.7831875995034299, max_hamiltonian_energy_error = -0.7831875995034299, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7760546432295389, log_density = 10.909730205973947, hamiltonian_energy = -10.567483025538667, hamiltonian_energy_error = 0.4191193421295196, max_hamiltonian_energy_error = 0.4191193421295196, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.7937025873826565, log_density = 14.00685880038018, hamiltonian_energy = -7.879904508768367, hamiltonian_energy_error = -0.22822047686666735, max_hamiltonian_energy_error = 1.1020652434637022, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9584840542003478, log_density = 15.133375816268485, hamiltonian_energy = -13.313203231030275, hamiltonian_energy_error = -0.1127899050713097, max_hamiltonian_energy_error = -0.17575747352849191, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.821918382574249, log_density = 13.983747402690547, hamiltonian_energy = -13.013507286187945, hamiltonian_energy_error = 0.32896159917933865, max_hamiltonian_energy_error = 0.4058430192027167, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9987731729416419, log_density = 13.763048885139305, hamiltonian_energy = -13.217466626266118, hamiltonian_energy_error = 0.003687270810450727, max_hamiltonian_energy_error = -0.1634107275226846, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8775266456461291, log_density = 13.752737476060345, hamiltonian_energy = -11.90366334682317, hamiltonian_energy_error = -0.06941482111898623, max_hamiltonian_energy_error = 0.4579486838547737, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9956479513997208, log_density = 13.792138125101793, hamiltonian_energy = -11.972060204201068, hamiltonian_energy_error = -0.3037409187329665, max_hamiltonian_energy_error = -0.3812425940164026, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8390706325637132, log_density = 16.247186034628058, hamiltonian_energy = -12.167458421241715, hamiltonian_energy_error = -0.003963094940244716, max_hamiltonian_energy_error = 0.5064877683822555, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9637027686124355, log_density = 15.138492136613438, hamiltonian_energy = -14.085758456482761, hamiltonian_energy_error = 0.006794724053380108, max_hamiltonian_energy_error = 0.08347032591476378, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9558759269027782, log_density = 15.311278978027966, hamiltonian_energy = -13.96131895763164, hamiltonian_energy_error = 0.020348013613874727, max_hamiltonian_energy_error = 0.12489338489804602, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.810283029248265, log_density = 14.476323958297204, hamiltonian_energy = -11.329810310534121, hamiltonian_energy_error = 0.12569436491411068, max_hamiltonian_energy_error = 0.5313068248635098, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9943157995459078, log_density = 14.0422171642718, hamiltonian_energy = -12.933675556804369, hamiltonian_energy_error = -0.14826159001591854, max_hamiltonian_energy_error = -0.3455482321088166, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9963611918890979, log_density = 14.873129599343102, hamiltonian_energy = -12.440917536735288, hamiltonian_energy_error = -0.14280553281781394, max_hamiltonian_energy_error = -0.23829203451169434, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.20166001316666238, log_density = 14.674110127623793, hamiltonian_energy = -7.335358410481871, hamiltonian_energy_error = 1.1305584968829328, max_hamiltonian_energy_error = 2.7144576245445, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8216152673766779, log_density = 13.404723124987434, hamiltonian_energy = -10.61758205517106, hamiltonian_energy_error = 0.024269535557600364, max_hamiltonian_energy_error = 0.5410111241229743, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8101676914460747, log_density = 12.288140743637488, hamiltonian_energy = -10.399064100262686, hamiltonian_energy_error = 0.3566049539479703, max_hamiltonian_energy_error = 0.5617757145367648, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8890419702238231, log_density = 11.171264406159262, hamiltonian_energy = -10.249991692515218, hamiltonian_energy_error = 0.4047764792602404, max_hamiltonian_energy_error = -0.7383031675078655, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 14.43977854424622, hamiltonian_energy = -11.2839686122471, hamiltonian_energy_error = -1.3089816761730706, max_hamiltonian_energy_error = -1.3089816761730706, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5881087786485867, log_density = 15.425714133765991, hamiltonian_energy = -10.329302445909233, hamiltonian_energy_error = 0.14900738430258542, max_hamiltonian_energy_error = 1.1976574948881993, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 16.18591216356127, hamiltonian_energy = -14.806579306275655, hamiltonian_energy_error = -0.09396914233053622, max_hamiltonian_energy_error = -0.11347690593877857, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7526821004919856, log_density = 15.407779739866978, hamiltonian_energy = -12.610189178023656, hamiltonian_energy_error = 0.12928165213461185, max_hamiltonian_energy_error = 0.5293497930482332, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9896430555656618, log_density = 15.320084562782728, hamiltonian_energy = -13.289007756728434, hamiltonian_energy_error = -0.15020329530128862, max_hamiltonian_energy_error = -0.20991108921476354, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.991502500531254, log_density = 15.605074146345544, hamiltonian_energy = -14.578436663357088, hamiltonian_energy_error = -0.03783744970482594, max_hamiltonian_energy_error = -0.14046474632786143, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9576653141665525, log_density = 15.567217425469432, hamiltonian_energy = -14.424861407090443, hamiltonian_energy_error = 0.09406252225282863, max_hamiltonian_energy_error = 0.13337839019737174, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8008395414586187, log_density = 13.841239975350119, hamiltonian_energy = -11.421884039239622, hamiltonian_energy_error = 0.2746184348068983, max_hamiltonian_energy_error = 0.6827021317659092, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9877389073138942, log_density = 13.800898521647804, hamiltonian_energy = -10.81014038957948, hamiltonian_energy_error = -0.11637534478443712, max_hamiltonian_energy_error = -0.4008993543137951, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9428550809237182, log_density = 14.115132826238746, hamiltonian_energy = -11.620236289944858, hamiltonian_energy_error = -0.1616713052446439, max_hamiltonian_energy_error = 0.2901953954733134, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8243669298488709, log_density = 16.263799700696502, hamiltonian_energy = -12.625119051861702, hamiltonian_energy_error = 0.15873932030073057, max_hamiltonian_energy_error = 0.30557426140022415, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9996486383462116, log_density = 16.071566718817397, hamiltonian_energy = -15.614373477489657, hamiltonian_energy_error = -0.03242907134432471, max_hamiltonian_energy_error = -0.05723670428969996, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7957411567382776, log_density = 15.915792438688285, hamiltonian_energy = -13.979774658036362, hamiltonian_energy_error = 0.06645734442713547, max_hamiltonian_energy_error = 0.4308185004674634, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9862655836038224, log_density = 15.922415043018663, hamiltonian_energy = -15.264854921720941, hamiltonian_energy_error = -0.010467672280034535, max_hamiltonian_energy_error = -0.09267916088028372, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9183041115792784, log_density = 14.877180422356075, hamiltonian_energy = -14.257691907792665, hamiltonian_energy_error = 0.15532869844368236, max_hamiltonian_energy_error = 0.19370122228346176, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9474960634922863, log_density = 14.378427000826171, hamiltonian_energy = -9.650775621725813, hamiltonian_energy_error = -0.13345553317743253, max_hamiltonian_energy_error = -0.4916537577117275, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7785069075205511, log_density = 15.027152034687147, hamiltonian_energy = -12.450219286834038, hamiltonian_energy_error = -0.06826918180399844, max_hamiltonian_energy_error = 0.473629674673953, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8995734371504287, log_density = 16.21572172592039, hamiltonian_energy = -13.704675112475794, hamiltonian_energy_error = -0.10121249692740619, max_hamiltonian_energy_error = 0.2434216502792914, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7898269407911056, log_density = 13.442818439114175, hamiltonian_energy = -10.646975604223687, hamiltonian_energy_error = 0.1043971953431111, max_hamiltonian_energy_error = 0.46100722169759756, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9980165947111643, log_density = 13.640445615737267, hamiltonian_energy = -12.58760757539532, hamiltonian_energy_error = -0.002684985599859857, max_hamiltonian_energy_error = -0.1497070866784913, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.30035000297115, hamiltonian_energy = -13.223051238714245, hamiltonian_energy_error = -0.11069857680103112, max_hamiltonian_energy_error = -0.11069857680103112, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8986709326881472, log_density = 14.190450212132863, hamiltonian_energy = -13.516557545334997, hamiltonian_energy_error = -0.011782195732783052, max_hamiltonian_energy_error = 0.1796648503887628, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8948681513410659, log_density = 14.359466217851933, hamiltonian_energy = -12.015961747582937, hamiltonian_energy_error = 0.11882996947445967, max_hamiltonian_energy_error = 0.21167763367570558, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8050658456221381, log_density = 14.944269920860553, hamiltonian_energy = -12.154483174621568, hamiltonian_energy_error = -0.06446739912061972, max_hamiltonian_energy_error = 0.3248174322600281, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9827414522762403, log_density = 15.652269366480336, hamiltonian_energy = -14.19131712459699, hamiltonian_energy_error = -0.008733600001523456, max_hamiltonian_energy_error = -0.06729603553481844, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9982124399785126, log_density = 15.1633958440701, hamiltonian_energy = -13.397372489373202, hamiltonian_energy_error = -0.06116398522823907, max_hamiltonian_energy_error = -0.26631186792321593, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9684794833677092, log_density = 16.061224927453097, hamiltonian_energy = -13.790324400829931, hamiltonian_energy_error = -0.21121347825861747, max_hamiltonian_energy_error = -0.21686423017986733, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7001274278038557, log_density = 15.693180792015866, hamiltonian_energy = -14.046219714398768, hamiltonian_energy_error = 0.09129428936971173, max_hamiltonian_energy_error = 0.7055750683617692, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8422869736838071, log_density = 14.116872282549048, hamiltonian_energy = -13.684127203681053, hamiltonian_energy_error = 0.3607499804346741, max_hamiltonian_energy_error = 0.3607499804346741, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9570982062015074, log_density = 14.658928962989979, hamiltonian_energy = -12.881037529021068, hamiltonian_energy_error = -0.27909119521137704, max_hamiltonian_energy_error = -0.41777283777178376, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9631145495215344, log_density = 12.971933101339678, hamiltonian_energy = -11.269849015486509, hamiltonian_energy_error = 0.06318827256797377, max_hamiltonian_energy_error = -0.24220838768672337, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8826656374615539, log_density = 15.486606597724402, hamiltonian_energy = -10.155481182531851, hamiltonian_energy_error = -0.19623004284277634, max_hamiltonian_energy_error = 0.5021570027441538, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8107200733195825, log_density = 14.017911767132988, hamiltonian_energy = -13.278315364648083, hamiltonian_energy_error = 0.4849102014782716, max_hamiltonian_energy_error = 0.4849102014782716, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.969824832128378, hamiltonian_energy = -11.602644716130223, hamiltonian_energy_error = -0.5230276209534654, max_hamiltonian_energy_error = -0.5723607562041817, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.759856482000606, log_density = 13.082237633613934, hamiltonian_energy = -10.473999395142783, hamiltonian_energy_error = 0.17891973367084546, max_hamiltonian_energy_error = 0.7067841054784125, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8149876550105367, log_density = 14.23709344373317, hamiltonian_energy = -7.52981975767191, hamiltonian_energy_error = -0.19343027138417224, max_hamiltonian_energy_error = 0.9742272688207922, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9478081525531131, log_density = 11.806724961113773, hamiltonian_energy = -11.573781538550325, hamiltonian_energy_error = 0.19960767365434684, max_hamiltonian_energy_error = 0.4210799595817374, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.858211730139571, log_density = 14.9712333205317, hamiltonian_energy = -9.630440325054268, hamiltonian_energy_error = -0.24192343869590438, max_hamiltonian_energy_error = 0.8970483869885548, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7945250586423174, log_density = 14.133813027659201, hamiltonian_energy = -11.760893657248939, hamiltonian_energy_error = 0.15995191993198787, max_hamiltonian_energy_error = 0.5649904880857637, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9452035901010976, log_density = 13.345174258128996, hamiltonian_energy = -11.524973864682089, hamiltonian_energy_error = 0.1339195271114395, max_hamiltonian_energy_error = -0.2963111632419615, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9994290629113766, log_density = 14.60359207135351, hamiltonian_energy = -12.942906176391558, hamiltonian_energy_error = -0.04812551026607359, max_hamiltonian_energy_error = -0.40057246048565887, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 1.0, log_density = 15.746478559970443, hamiltonian_energy = -12.618651261745391, hamiltonian_energy_error = -0.2641837142681531, max_hamiltonian_energy_error = -0.558931286902844, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.7978423021142775, log_density = 13.442651504693636, hamiltonian_energy = -11.196074356338276, hamiltonian_energy_error = 0.4415367969629145, max_hamiltonian_energy_error = 0.47721386430028545, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9906317574583099, log_density = 15.906613662445455, hamiltonian_energy = -12.51764944590886, hamiltonian_energy_error = -0.41175935652130313, max_hamiltonian_energy_error = -0.6239668269494221, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.6751030125440699, log_density = 14.461909955059134, hamiltonian_energy = -11.520364123840109, hamiltonian_energy_error = 0.1749338292959859, max_hamiltonian_energy_error = 0.9757836619224847, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9397484715149245, log_density = 15.22194482872786, hamiltonian_energy = -13.079271629589474, hamiltonian_energy_error = -0.5455470498885333, max_hamiltonian_energy_error = -0.5455470498885333, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9545654835207189, log_density = 16.579770682413958, hamiltonian_energy = -13.107794914009611, hamiltonian_energy_error = -0.03629745991723787, max_hamiltonian_energy_error = 0.11383481316100408, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9187429943997426, log_density = 15.497412812064605, hamiltonian_energy = -14.67183297407727, hamiltonian_energy_error = 0.09376061709240702, max_hamiltonian_energy_error = 0.16479120798221913, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9597046444324064, log_density = 16.031871583947172, hamiltonian_energy = -13.122576472864438, hamiltonian_energy_error = -0.14738117777118198, max_hamiltonian_energy_error = -0.17620886899637433, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9456158081702388, log_density = 15.926901625208314, hamiltonian_energy = -14.694330377371404, hamiltonian_energy_error = 0.030356169548051426, max_hamiltonian_energy_error = 0.1568151341653845, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.6989880034240151, log_density = 14.861818845805722, hamiltonian_energy = -12.283557861412433, hamiltonian_energy_error = 0.44974540701264054, max_hamiltonian_energy_error = 0.9337000330843974, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9768008018570544, log_density = 14.116413095206084, hamiltonian_energy = -13.703928980003292, hamiltonian_energy_error = 0.0482920271167373, max_hamiltonian_energy_error = -0.3596450549414314, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9935718412247277, log_density = 14.121264743467936, hamiltonian_energy = -12.654051579428184, hamiltonian_energy_error = -0.2479777102004821, max_hamiltonian_energy_error = -0.7298578352084206, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9958054687339455, log_density = 15.317709716723902, hamiltonian_energy = -13.66885746125374, hamiltonian_energy_error = -0.3713541658422326, max_hamiltonian_energy_error = -0.4331900645136759, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9434431357936203, log_density = 14.259471901007124, hamiltonian_energy = -13.938673113403716, hamiltonian_energy_error = 0.08656788707465601, max_hamiltonian_energy_error = 0.09279928166827922, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9827455046529233, log_density = 14.216207987325713, hamiltonian_energy = -12.318679146945803, hamiltonian_energy_error = -0.025326924702618214, max_hamiltonian_energy_error = -0.2215186618070053, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9454582731578062, log_density = 14.640250199917215, hamiltonian_energy = -12.940086451361006, hamiltonian_energy_error = 0.06423176116084939, max_hamiltonian_energy_error = 0.15512439946910384, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9957291980642266, log_density = 14.824800911464223, hamiltonian_energy = -14.106034490519566, hamiltonian_energy_error = 0.014168891955904428, max_hamiltonian_energy_error = -0.04556921723737872, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9466334072697375, log_density = 13.47485882141221, hamiltonian_energy = -12.562453982327257, hamiltonian_energy_error = 0.08098731281682525, max_hamiltonian_energy_error = -0.26201847004128, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 14.960512542338831, hamiltonian_energy = -13.35790296333578, hamiltonian_energy_error = -0.1027157046268492, max_hamiltonian_energy_error = -0.16455603057335821, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.956815459481107, log_density = 15.678156719945292, hamiltonian_energy = -13.870349631879614, hamiltonian_energy_error = 0.04565314228964823, max_hamiltonian_energy_error = 0.08316484045082007, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.941091822797745, log_density = 13.248630331432775, hamiltonian_energy = -12.543419463938207, hamiltonian_energy_error = 0.1995279125680689, max_hamiltonian_energy_error = 0.1995279125680689, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.00425863345642, hamiltonian_energy = -10.291458329895654, hamiltonian_energy_error = -0.28546813613663247, max_hamiltonian_energy_error = -0.45552662810174205, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8241009726643563, log_density = 12.339796169062911, hamiltonian_energy = -10.03078497796826, hamiltonian_energy_error = 0.21955371871966278, max_hamiltonian_energy_error = 0.4061881279878836, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.999882646461257, log_density = 13.17933489039557, hamiltonian_energy = -10.566420912754666, hamiltonian_energy_error = -0.09793851196650749, max_hamiltonian_energy_error = -0.29782071982608116, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.6027365764988027, log_density = 14.478175705453673, hamiltonian_energy = -8.897558725283618, hamiltonian_energy_error = 0.12873901656057818, max_hamiltonian_energy_error = 1.27277992059485, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8768617699045173, log_density = 12.082894564670754, hamiltonian_energy = -8.224399121827657, hamiltonian_energy_error = 0.13065336153683482, max_hamiltonian_energy_error = 0.43181964354793934, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9881480511354768, log_density = 12.88116365634884, hamiltonian_energy = -10.537860967984239, hamiltonian_energy_error = -0.049029666688586104, max_hamiltonian_energy_error = -0.14305845314873622, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9789841412905743, log_density = 13.521207401143673, hamiltonian_energy = -11.443089782735882, hamiltonian_energy_error = 0.22258328977130049, max_hamiltonian_energy_error = -0.24236425414146368, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9764107628897015, log_density = 13.898037060400988, hamiltonian_energy = -9.345080599112784, hamiltonian_energy_error = -0.06541095060119417, max_hamiltonian_energy_error = -0.3100850373818371, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8736021888904959, log_density = 15.599203390467371, hamiltonian_energy = -12.049253985940856, hamiltonian_energy_error = -0.15979145357667512, max_hamiltonian_energy_error = 0.9941095612328841, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9921122059665064, log_density = 15.69689222075367, hamiltonian_energy = -14.980138939604606, hamiltonian_energy_error = 0.06369160981329713, max_hamiltonian_energy_error = -0.09997511295575023, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9992258709102407, log_density = 15.500727100322894, hamiltonian_energy = -14.219970968260231, hamiltonian_energy_error = -0.019353291327131927, max_hamiltonian_energy_error = -0.21766219355628458, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6648860233221675, log_density = 15.705375047956887, hamiltonian_energy = -12.784520135661438, hamiltonian_energy_error = -0.21740026799845324, max_hamiltonian_energy_error = 1.0082624209835647, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6872166445585457, log_density = 15.27325344643445, hamiltonian_energy = -9.812904071763835, hamiltonian_energy_error = 0.007985720232209559, max_hamiltonian_energy_error = 1.1991330299809988, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9389001446557987, log_density = 16.136038224885667, hamiltonian_energy = -13.313612295058133, hamiltonian_energy_error = 0.03659168979303473, max_hamiltonian_energy_error = 0.09690466552981647, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8876368258572617, log_density = 15.620751377491535, hamiltonian_energy = -14.205620854693183, hamiltonian_energy_error = 0.1930766974916196, max_hamiltonian_energy_error = 0.2822730613509581, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9709899720492589, log_density = 15.235013417310299, hamiltonian_energy = -14.633575919598252, hamiltonian_energy_error = 0.13706671269456372, max_hamiltonian_energy_error = 0.13706671269456372, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.49649004405881986, log_density = 13.287362554765485, hamiltonian_energy = -11.135659394006614, hamiltonian_energy_error = 0.7702679845127403, max_hamiltonian_energy_error = 1.198768406701065, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7114749867915988, log_density = 12.05956698859552, hamiltonian_energy = -7.573310855893017, hamiltonian_energy_error = 0.052759729044744574, max_hamiltonian_energy_error = 0.7642064982342118, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.6829731367233116, log_density = 11.855396627012983, hamiltonian_energy = -7.814424934888001, hamiltonian_energy_error = 0.029164330572729824, max_hamiltonian_energy_error = 1.0704051350459372, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 13.460402899356662, hamiltonian_energy = -9.282897091714823, hamiltonian_energy_error = -0.19144323847347522, max_hamiltonian_energy_error = -0.3916835670109329, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7296529257523353, log_density = 13.27866878846469, hamiltonian_energy = -5.8819039224530325, hamiltonian_energy_error = 0.10410349615421755, max_hamiltonian_energy_error = 1.0570857906123914, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9608198092433142, log_density = 15.334690248364335, hamiltonian_energy = -12.281252982720709, hamiltonian_energy_error = -0.0958657142114756, max_hamiltonian_energy_error = -0.37888741378410096, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5504200331554087, log_density = 11.186843233847213, hamiltonian_energy = -9.992235855219956, hamiltonian_energy_error = 0.9608529270421293, max_hamiltonian_energy_error = 1.1834194254782116, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9140285072391863, log_density = 14.513241993759452, hamiltonian_energy = -10.981016270215225, hamiltonian_energy_error = -0.9156928152037853, max_hamiltonian_energy_error = -0.9156928152037853, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.13250390601818857, log_density = 10.908061661120483, hamiltonian_energy = -6.991176026964883, hamiltonian_energy_error = 1.8981439448193491, max_hamiltonian_energy_error = 2.6788811550437543, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9560981867812569, log_density = 16.0921995150674, hamiltonian_energy = -10.399155274517721, hamiltonian_energy_error = -0.4032793079336461, max_hamiltonian_energy_error = -0.580350677273314, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8807413793667581, log_density = 15.480782743665603, hamiltonian_energy = -13.802067114449276, hamiltonian_energy_error = 0.065432947413397, max_hamiltonian_energy_error = 0.2121777117423047, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7032911928824139, log_density = 16.107183161193408, hamiltonian_energy = -13.194873847818963, hamiltonian_energy_error = -0.029843012777378775, max_hamiltonian_energy_error = 0.807929448791036, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8069955406598904, log_density = 14.840225857190157, hamiltonian_energy = -14.012184922759683, hamiltonian_energy_error = 0.2036199874691782, max_hamiltonian_energy_error = 0.37305734395040524, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.789498509676032, log_density = 13.871396475165726, hamiltonian_energy = -10.6547118225624, hamiltonian_energy_error = 0.17087581182234324, max_hamiltonian_energy_error = 0.46653110092733563, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8220179657044115, log_density = 14.181119643754222, hamiltonian_energy = -11.812471329220548, hamiltonian_energy_error = 0.2554179140586097, max_hamiltonian_energy_error = 0.41253908614142887, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.47814659160885953, log_density = 12.908333411190405, hamiltonian_energy = -8.338514744967233, hamiltonian_energy_error = 0.4353609939771488, max_hamiltonian_energy_error = 1.9005994298625843, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9871611029298936, log_density = 13.469085635209725, hamiltonian_energy = -11.753261979864318, hamiltonian_energy_error = -0.1448420086763349, max_hamiltonian_energy_error = -0.2767980115337245, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9776115549742138, log_density = 15.331819242461222, hamiltonian_energy = -12.135803412465702, hamiltonian_energy_error = -0.08687277409987892, max_hamiltonian_energy_error = -0.11525414648685128, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8773256994126014, log_density = 14.059836076377168, hamiltonian_energy = -12.944707176472738, hamiltonian_energy_error = 0.1271774157665284, max_hamiltonian_energy_error = 0.24932502615553354, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9304767512943078, log_density = 14.36259040611931, hamiltonian_energy = -12.711153351293035, hamiltonian_energy_error = 0.07224318967464782, max_hamiltonian_energy_error = 0.1495148780394171, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 14.27644831942104, hamiltonian_energy = -13.322821615639402, hamiltonian_energy_error = -0.10081358475111557, max_hamiltonian_energy_error = -0.23349246118067235, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 0.895740970483196, log_density = 14.173930071990343, hamiltonian_energy = -12.61963179348967, hamiltonian_energy_error = 0.07332966481732228, max_hamiltonian_energy_error = 0.33928618808883293, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9530505381168373, log_density = 12.483289728955064, hamiltonian_energy = -10.735992568878057, hamiltonian_energy_error = 0.10038717309212508, max_hamiltonian_energy_error = -0.4593180744683245, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 15.105477280454673, hamiltonian_energy = -11.779612401179905, hamiltonian_energy_error = -0.29071493424660844, max_hamiltonian_energy_error = -0.3505329813786222, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9530119989690987, log_density = 16.02566078378951, hamiltonian_energy = -12.980009930186004, hamiltonian_energy_error = -0.22046675202077637, max_hamiltonian_energy_error = -0.22046675202077637, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9857457699313105, log_density = 15.81281742774064, hamiltonian_energy = -15.202612621676735, hamiltonian_energy_error = 0.014564689945812503, max_hamiltonian_energy_error = 0.03750986022837566, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9559745320525751, log_density = 16.138033960212486, hamiltonian_energy = -14.598251986059484, hamiltonian_energy_error = 0.023660370748245896, max_hamiltonian_energy_error = 0.08468389988332703, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9051015199561645, log_density = 14.076187699362546, hamiltonian_energy = -13.655354469969799, hamiltonian_energy_error = 0.19762219594587016, max_hamiltonian_energy_error = 0.19762219594587016, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8986661922891586, log_density = 14.144207576775395, hamiltonian_energy = -11.699480072639219, hamiltonian_energy_error = -0.02132974689488165, max_hamiltonian_energy_error = 0.312723195989955, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9638506289055502, log_density = 13.999832714746155, hamiltonian_energy = -12.308643508981433, hamiltonian_energy_error = 0.0552030982170475, max_hamiltonian_energy_error = -0.25377935356354087, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9739307711401339, log_density = 10.950547674671704, hamiltonian_energy = -10.29736026475209, hamiltonian_energy_error = 0.0997559083212316, max_hamiltonian_energy_error = 0.0997559083212316, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5720140251724953, log_density = 10.455201696888285, hamiltonian_energy = -2.480257368762869, hamiltonian_energy_error = 0.27944450206244476, max_hamiltonian_energy_error = 1.2024226509786695, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9508903437367263, log_density = 15.14613139550161, hamiltonian_energy = -8.824167268736407, hamiltonian_energy_error = 0.19558557461411397, max_hamiltonian_energy_error = -0.24748808325051108, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9536348408997064, log_density = 15.370127798392836, hamiltonian_energy = -14.082100126675286, hamiltonian_energy_error = 0.06072605312512991, max_hamiltonian_energy_error = 0.1414953764071072, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8126174329206575, log_density = 13.067690064403411, hamiltonian_energy = -12.443716035200206, hamiltonian_energy_error = 0.2941726507730831, max_hamiltonian_energy_error = 0.3466339809649508, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9554057125718357, log_density = 12.847401080155297, hamiltonian_energy = -10.644388338079594, hamiltonian_energy_error = 0.11405666974667383, max_hamiltonian_energy_error = -0.17721417590743016, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8844248661016707, log_density = 13.54917097148113, hamiltonian_energy = -10.067642860919443, hamiltonian_energy_error = -0.4175080342208144, max_hamiltonian_energy_error = -0.5045750356572221, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6903464190955756, log_density = 14.901356357350249, hamiltonian_energy = -10.17210559551657, hamiltonian_energy_error = -0.1065100636020837, max_hamiltonian_energy_error = 1.126821243526397, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9376223285390398, log_density = 14.858711850897004, hamiltonian_energy = -11.43937843424786, hamiltonian_energy_error = 0.004746103181922479, max_hamiltonian_energy_error = 0.19702627782933213, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7713244575551835, log_density = 13.236681643240209, hamiltonian_energy = -11.892377661921381, hamiltonian_energy_error = 0.29399157793929476, max_hamiltonian_energy_error = 0.5720218568959723, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8667128510461186, log_density = 14.931345929928165, hamiltonian_energy = -11.065245598088435, hamiltonian_energy_error = 0.3719377750190809, max_hamiltonian_energy_error = 0.3719377750190809, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9342019443853217, log_density = 15.758096873600572, hamiltonian_energy = -12.239507210559811, hamiltonian_energy_error = -0.06657531971368158, max_hamiltonian_energy_error = 0.22000460649018905, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 0.9922803641456405, log_density = 15.646335459660435, hamiltonian_energy = -14.955286948727446, hamiltonian_energy_error = 0.00394876908600672, max_hamiltonian_energy_error = -0.05430797513472818, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7570759551491316, log_density = 13.945340500241123, hamiltonian_energy = -12.976663781522953, hamiltonian_energy_error = 0.42561411619335665, max_hamiltonian_energy_error = 0.49812216631960915, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9871276178220143, log_density = 16.19555240952989, hamiltonian_energy = -12.994439443227439, hamiltonian_energy_error = -0.6170539047894383, max_hamiltonian_energy_error = -0.6170539047894383, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.7115601932556226, log_density = 16.108975123342795, hamiltonian_energy = -13.41397812677738, hamiltonian_energy_error = 0.2936802172092676, max_hamiltonian_energy_error = 0.4987672009517343, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.7377296636058307, log_density = 15.592257479485834, hamiltonian_energy = -13.662819118770303, hamiltonian_energy_error = 0.0857021600742609, max_hamiltonian_energy_error = 0.6613599172642441, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.800976003710632, log_density = 14.923998230807936, hamiltonian_energy = -12.337312428415283, hamiltonian_energy_error = 0.10640696154747786, max_hamiltonian_energy_error = 0.4033792597223034, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9661402324055367, log_density = 15.229073470218431, hamiltonian_energy = -13.217244723718125, hamiltonian_energy_error = -0.08644406620928002, max_hamiltonian_energy_error = 0.08677636893223806, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9388985544970821, log_density = 14.731384108799533, hamiltonian_energy = -12.59332208009514, hamiltonian_energy_error = 0.0979844529584799, max_hamiltonian_energy_error = 0.21741514069338486, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9772979595143784, log_density = 14.671638822768259, hamiltonian_energy = -12.855628104189218, hamiltonian_energy_error = -0.06303725484543143, max_hamiltonian_energy_error = -0.32272755166061273, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8442428153847332, log_density = 15.649641211613268, hamiltonian_energy = -11.74690386824408, hamiltonian_energy_error = -0.08152039346084017, max_hamiltonian_energy_error = 0.49647969551500637, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9077190255394891, log_density = 15.168786166850538, hamiltonian_energy = -13.43480051090552, hamiltonian_energy_error = 0.09098200694085357, max_hamiltonian_energy_error = 0.1863565418655977, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.6166820367784052, log_density = 13.033638506551705, hamiltonian_energy = -8.639024660143859, hamiltonian_energy_error = 0.06872329580015624, max_hamiltonian_energy_error = 1.9245079773931728, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 1.0, log_density = 15.604046192804585, hamiltonian_energy = -13.261347982386265, hamiltonian_energy_error = -0.7114246318605097, max_hamiltonian_energy_error = -0.7255551878189195, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8281362915850682, log_density = 14.26618461724155, hamiltonian_energy = -12.379953676505004, hamiltonian_energy_error = 0.2566377766770742, max_hamiltonian_energy_error = 0.38243747500439085, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9684488312309647, log_density = 14.763704967388426, hamiltonian_energy = -11.579375599018574, hamiltonian_energy_error = -0.07317746428735639, max_hamiltonian_energy_error = -0.3095066640263795, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9418931269742874, log_density = 13.819099695156645, hamiltonian_energy = -12.88121543194203, hamiltonian_energy_error = 0.015429678021051885, max_hamiltonian_energy_error = -0.19327341325941738, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8356130693216526, log_density = 15.70040036370133, hamiltonian_energy = -10.668471212306027, hamiltonian_energy_error = -0.21342964607600123, max_hamiltonian_energy_error = 0.445247988265125, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8863858279961954, log_density = 13.652635432020139, hamiltonian_energy = -10.326594741077669, hamiltonian_energy_error = 0.0962741496736097, max_hamiltonian_energy_error = 0.3147739314715814, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9656607304966078, log_density = 15.06294436517346, hamiltonian_energy = -12.713858847655315, hamiltonian_energy_error = -0.34103689713285057, max_hamiltonian_energy_error = -0.34103689713285057, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.8397269788312011, log_density = 13.29900359037046, hamiltonian_energy = -12.779131922883009, hamiltonian_energy_error = 0.36042894306527984, max_hamiltonian_energy_error = 0.36042894306527984, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8848362180959057, log_density = 12.407897420971713, hamiltonian_energy = -10.122592999584242, hamiltonian_energy_error = -0.14950123339531451, max_hamiltonian_energy_error = 0.7439841315757576, tree_depth = 2, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 51, is_accept = true, acceptance_rate = 0.9720490700104975, log_density = 14.940478895483455, hamiltonian_energy = -9.800588900176107, hamiltonian_energy_error = -0.10700974009572306, max_hamiltonian_energy_error = -0.6297758756170939, tree_depth = 5, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.7584674294799709, log_density = 14.756813750343891, hamiltonian_energy = -11.839837955304933, hamiltonian_energy_error = 0.0318478048441726, max_hamiltonian_energy_error = 0.9591107846351861, tree_depth = 4, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9830120395887083, log_density = 15.55860748927628, hamiltonian_energy = -13.135015772898655, hamiltonian_energy_error = -0.11563412596297873, max_hamiltonian_energy_error = -0.18926554128040252, tree_depth = 3, numerical_error = false, step_size = 0.1615425230116121, nom_step_size = 0.1615425230116121, is_adapt = false)])","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Inspect posterior distribution over hyperparameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"hypers = map(unpack, samples);\nh_l1 = histogram(getindex.(hypers, :l1); label=\"l1\");\nh_l2 = histogram(getindex.(hypers, :l2); label=\"l2\");\nh_s1 = histogram(getindex.(hypers, :s1); label=\"s1\");\nh_s2 = histogram(getindex.(hypers, :s2); label=\"s2\");\nplot(h_l1, h_l2, h_s1, h_s2; layout=(2, 2))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As expected, the sampler converges to the posterior distribution quickly. One could combine this code with that from the previous sections to make predictions under the posterior over the hyperparameters.","category":"page"},{"location":"examples/getting_started/#Conclusion","page":"Getting Started","title":"Conclusion","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you now know how to fit GPs using Stheno.jl, and to investigate their posterior distributions. It's also straightforward to utilise Stheno.jl inside probabilistic programming frameworks like Soss.jl and Turing.jl (see examples folder).","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Stheno.jl","page":"Home","title":"Stheno.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Stheno.jl is a package for probabilistic programming with Gaussian processes.","category":"page"},{"location":"internals/#Interfaces","page":"Internals","title":"Interfaces","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The primary objects in Stheno are some special subtypes of AbstractGP. There are three primary concrete subtypes of AbstractGP:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP: an atomic Gaussian process given by wrapping an AbstractGP.\nCompositeGP: a Gaussian process composed of other WrappedGPs and CompositeGPs, whose properties are determined recursively from the GPs of which it is composed.\nGaussianProcessProbabilisticProgramme / GPPP: a Gaussian process comprising WrappedGPs and CompositeGPs. This is the primary piece of functionality that users should interact with.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This documentation provides the information necessary to understand the internals of Stheno, and to extend it with custom functionality.","category":"page"},{"location":"internals/#AbstractGP","page":"Internals","title":"AbstractGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP and CompositeGP implement the AbstractGPs.jl API. Please refer to the AbstractGPs.jl docs for more info on this.","category":"page"},{"location":"internals/#diag-methods","page":"Internals","title":"diag methods","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It is crucial for pseudo-point methods, and for the computation of marginal statistics at a reasonable scale, to be able to compute the diagonal of a given covariance matrix in linear time in the size of its inputs. This, in turn, necessitates that the diagonal of a given cross-covariance matrix can also be computed efficiently as the evaluation of covariance matrices often rely on the evaluation of cross-covariance matrices. As such, we have the following functions in addition to the AbstractGPs API implemented for WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Function Brief description\nvar(f, x) diag(cov(f, x))\nvar(f, x, x′) diag(cov(f, x, x′))\nvar(f, f′, x, x′) diag(cov(f, f′, x, x′))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The second and third rows of the table only make sense when length(x) == length(x′), of course.","category":"page"},{"location":"internals/#WrappedGP","page":"Internals","title":"WrappedGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"We can construct a WrappedGP in the following manner:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = wrap(GP(m, k), gpc)\n","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"where m is its MeanFunction, k its Kernel. gpc is a GPC object that handles some book-keeping, and is discussed in more depth below.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The AbstractGP interface is implemented for WrappedGPs in terms of the AbstractGP that they wrap. So if you want a particular behaviour, just make sure that the AbstractGP that you wrap has the functionality you want.","category":"page"},{"location":"internals/#Aside:-Example-Kernel-implementation","page":"Internals","title":"Aside: Example Kernel implementation","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It's straightforward to implement a new kernel yourself: simply following the instructions in KernelFunctions.jl and it'll work fine with GPs in Stheno.jl.","category":"page"},{"location":"internals/#GPC","page":"Internals","title":"GPC","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"This book-keeping object doesn't matter from a user's perspective but, unfortunately, we currently expose it to users. Fortunately, it's straightforward to work with. Say you wish to construct a collection of processes:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS WON'T WORK\nf = GP(mf, kf)\ng = GP(mg, kg)\nh = f + g\n# THIS WON'T WORK","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"You should write","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS GOOD. PLEASE DO THIS\ngpc = GPC()\nf = wrap(GP(mf, kf), gpc)\ng = wrap(GP(mg, kg), gpc)\nh = f + g\n# THIS IS GOOD. PLEASE DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The rule is simple: when constructing GPs that you plan to make interact later in your program, construct them using the same gpc object. For example, DON'T do the following:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS BAD. PLEASE DON'T DO THIS\nf = wrap(GP(mf, kf), GPC())\ng = wrap(GP(mg, kg), GPC())\nh = f + g\n# THIS IS BAD. PLEASE DON'T DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The mistake here is to construct a separate GPC object for each GP. Hopefully, the code errors, but might yield incorrect results.","category":"page"},{"location":"internals/#CompositeGP","page":"Internals","title":"CompositeGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"CompositeGPs are constructed as affine transformations of CompositeGPs and GPs. We describe the implemented transformations below.","category":"page"},{"location":"internals/#Addition","page":"Internals","title":"Addition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Given AbstractGPs f and g, we define","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f + g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"to be the CompositeGP sastisfying h(x) = f(x) + g(x) for all x.","category":"page"},{"location":"internals/#Multiplication","page":"Internals","title":"Multiplication","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Multiplication of AbstractGPs is undefined since the product of two Gaussian random variables is not itself Gaussian. However, we can scale an AbstractGP by either a constant or (deterministic) function.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = c * f\nh = sin * f","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"will both work, and produce the result that h(x) = c * f(x) or h(x) = sin(x) * f(x).","category":"page"},{"location":"internals/#Composition","page":"Internals","title":"Composition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f ∘ g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for some deterministic function g is the composition of f with g. i.e. h(x) = f(g(x)).","category":"page"},{"location":"internals/#cross","page":"Internals","title":"cross","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = cross([f, g])","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for WrappedGPs and CompositeGPs f and g. Think of cross as having stacked f and g together, so that you can work with their joint.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"For example, if you wanted to sample jointly from f and g at locations x_f and x_g, you could write something like","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"fg = cross([f, g])\nx_fg = BlockData([x_f, x_g])\nrand(fg(x_fg, 1e-6))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This particular function isn't part of the user-facing API because it isn't generally needed. It is, however, used extensively in the implementation of the GaussianProcessProbabilisticProgramme.","category":"page"},{"location":"internals/#GPPP","page":"Internals","title":"GPPP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The GaussianProcessProbabilisticProgramme is another AbstractGP which enables provides a thin layer of convenience functionality on top of WrappedGPs and CompositeGPs, and is the primary way in which it is intended that users will interact with this package.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP like this","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"is equivalent to manually constructing a GPPP using WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"gpc = GPC()\nf1 = wrap(GP(SEKernel()), gpc)\nf2 = wrap(GP(SEKernel()), gpc)\nf3 = f1 + f2\nf = Stheno.GPPP((f1=f1, f2=f2, f3=f3), gpc)","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"If you take a look at the gaussian_process_probabilistic_programming.jl source, you'll see that it's essentially just the above, and an implementation of the AbstractGPs API on top of a GPPP.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP is a single GP on an extended input domain: (Image: )","category":"page"}]
}
