var documenterSearchIndex = {"docs":
[{"location":"api/#Public-API","page":"API","title":"Public API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = Stheno","category":"page"},{"location":"api/#GPPP","page":"API","title":"GPPP","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Core functionality for working with GPPPs.","category":"page"},{"location":"api/","page":"API","title":"API","text":"@gppp\nGPPPInput\nBlockData\nsplit","category":"page"},{"location":"api/#Stheno.@gppp","page":"API","title":"Stheno.@gppp","text":"@gppp(model_expression)\n\nConstruct a GaussianProcessProbabilisticProgramme (GPPP) from a code snippet.\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx_local = randn(5)\n\nx = BlockData(GPPPInput(:f1, x_local), GPPPInput(:f2, x_local), GPPPInput(:f3, x_local))\n\ny = rand(f(x, 1e-12))\n\nf1, f2, f3 = split(x, y)\n\nisapprox(f1 + f2, f3; rtol=1e-4)\n\n# output\n\ntrue\n\n\n\n\n\n","category":"macro"},{"location":"api/#Stheno.GPPPInput","page":"API","title":"Stheno.GPPPInput","text":"GPPPInput(p, x::AbstractVector)\n\nAn collection of inputs for a GPPP. p indicates which process the vector x should be extracted from. The required type of p is determined by the type of the keys in the GPPP indexed.\n\njulia> x = [1.0, 1.5, 0.3];\n\njulia> v = GPPPInput(:a, x)\n3-element GPPPInput{Symbol, Float64, Vector{Float64}}:\n (:a, 1.0)\n (:a, 1.5)\n (:a, 0.3)\n\njulia> v isa AbstractVector{Tuple{Symbol, Float64}}\ntrue\n\njulia> v == map(x_ -> (:a, x_), x)\ntrue\n\n\n\n\n\n","category":"type"},{"location":"api/#Stheno.BlockData","page":"API","title":"Stheno.BlockData","text":"BlockData{T, TV<:AbstractVector{T}, TX<:AbstractVector{TV}} <: AbstractVector{T}\n\nA strictly ordered collection of AbstractVectors, representing a ragged array of data.\n\nVery useful when working with GPPPs. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\n# Specify a `BlockData` set that can be used to index into\n# the `f2` and `f3` processes in `f`.\nx = BlockData(\n    GPPPInput(:f2, randn(4)),\n    GPPPINput(:f3, randn(3)),\n)\n\n# Index into `f` at the input.\nf(x)\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.split","page":"API","title":"Base.split","text":"Base.split(x::BlockData, Y::AbstractVecOrMat)\n\nConvenience functionality to make working with the output of operations on GPPPs easier. Splits up the rows of Y according to the sizes of the data in x.\n\njulia> Y = vcat(randn(5, 3), randn(4, 3));\n\njulia> x = BlockData(randn(5), randn(4));\n\njulia> Y1, Y2 = split(x, Y);\n\njulia> Y1 == Y[1:5, :]\ntrue\n\njulia> Y2 == Y[6:end, :]\ntrue\n\nWorks with any BlockData, so blocks can e.g. be GPPPInputs. This is particularly helpful for working with the output from rand and marginals from a GPPP indexed at BlockData. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = BlockData(GPPPInput(:f2, randn(3)), GPPPInput(:f3, randn(4)))\ny = rand(f(x))\ny2, y3 = split(x, y)\n\nFunctionality also works with any AbstractVector.\n\n\n\n\n\n","category":"function"},{"location":"api/#Building-GPPPs","page":"API","title":"Building GPPPs","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"If in doubt about what any of these transformations can do, play around with them!","category":"page"},{"location":"api/","page":"API","title":"API","text":"+\n*\nstretch\nperiodic\nshift\nselect","category":"page"},{"location":"api/#Base.:+","page":"API","title":"Base.:+","text":"+(fa::AbstractGP, fb::AbstractGP)\n\nProduces an AbstractGP f satisfying f(x) = fa(x) + fb(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.:*","page":"API","title":"Base.:*","text":"*(f, g::AbstractGP)\n\nProduce an AbstractGP h satisfying to h(x) = f(x) * g(x), for some deterministic function f.\n\nIf f isa Real, then h(x) = f * g(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.stretch","page":"API","title":"Stheno.stretch","text":"stretch(f::AbstractGP, l::Union{AbstractVecOrMat{<:Real}, Real})\n\nThis is the primary mechanism by which to introduce length scales to your programme.\n\nIf l isa Real or l isa AbstractMatrix{<:Real}, stretch(f, l)(x) == f(l * x) for any input x. In the l isa Real case, this is equivalent to scaling the length scale by 1 / l.\n\nl isa AbstractVector{<:Real} is equivalent to stretch(f, Diagonal(l)).\n\nEquivalent to f ∘ Stretch(l).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.periodic","page":"API","title":"Stheno.periodic","text":"periodic(g::AbstractGP, f::Real)\n\nProduce an AbstractGP with period f.\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.shift","page":"API","title":"Stheno.shift","text":"shift(f::AbstractGP, a::Real)\nshift(f::AbstractGP, a::AbstractVector{<:Real})\n\nReturns the GP g given by g(x) = f(x - a)\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.select","page":"API","title":"Stheno.select","text":"select(f::AbstractGP, idx)\n\nSelect the dimensions of the input to f given by idx.\n\n\n\n\n\n","category":"function"},{"location":"input_types/#Input-Types","page":"Input Types","title":"Input Types","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Stheno enables the user to handle any type of input domain they wish and provides a common API that users must implement when considering a new way of representing input data to ensure that the package knows how to handle them appropriately.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"This interface has now been adopted throughout the JuliaGaussianProcesses ecosystem.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Discussed below is this interface's core assumptions, a detailed account of a couple of important concrete input types.","category":"page"},{"location":"input_types/#The-Central-Assumption","page":"Input Types","title":"The Central Assumption","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"The central assumption made in all user-facing and internal functions is this: when a collection of inputs are required, they subtype AbstractVector. For example, x isa AbstractVector when indexing into a GP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f(x, σ²)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"or computing the covariance matrix associated with a kernel:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"kernelmatrix(SqExponentialKernel(), x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When computing the cross-covariance matrix between two GPs","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"cov(f, g, x_f, x_g)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_f and x_g must be AbstractVectors. All other operations involving collections of inputs have the same restrictions. Always AbstractVectors.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"For example, this means that when handling multi-dimensional inputs stored in a Matrix they must be wrapped so that the package knows to treat them as a vector — more on this in below in D-dimensional Euclidean Spaces.","category":"page"},{"location":"input_types/#Dimensional-Euclidean-Space","page":"Input Types","title":"1-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When constructing a GP whose domain is the real-line, for example when using a GP to solve some kind of time-series problem, it is sufficient to work with Vector{<:Real}s of inputs. As such, the following is completely valid:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"using Stheno: GPC\nf = wrap(GP(SqExponentialKernel()), GPC())\nx = randn(10)\nf(x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"It is also possible to work with other AbstractArrays that represent a vector of 1-dimensional points, e.g.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = range(-5.0, 5.0; length=100)\nf(x)","category":"page"},{"location":"input_types/#D-Dimensional-Euclidean-Space","page":"Input Types","title":"D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Many applications of interest involve more than a single input-dimension, such as spatio-temporal modeling or Machine Learning tasks. For these cases, we provide ColVecs <: AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"X_data = randn(5, 100)\nX = ColVecs(X_data)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"tells Stheno that it should treat each column of X_data as a vector-valued input. Phrased differently, X is an AbstractVector{T} where T <: Vector{<:Real}, which stores its elements in memory as a dense matrix. This approach has the advantage of making it completely explicit how Stheno treats a matrix of data, and also simplifies quite a bit of the internal machinery, as all vectors of inputs can be assumed to be a subtype of AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If, on the other hand, each row of X_data corresponds to a vector-valued input, use RowVecs(X_data).","category":"page"},{"location":"input_types/#Structure-in-D-Dimensional-Euclidean-Space","page":"Input Types","title":"Structure in D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Consider a rectilinear grid of points in D-dimensional Euclidean space. Such grids of points can be represented in a more memory-efficient manner than can arbitrarily locate sets of points. Moreover, this structure can be exploited to accelerate inference for certain types of problems dramatically. Other such examples exist e.g., uniform grids in N-dimensions, and can be exploited to more efficiently represent input data and to accelerate inference.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Work to exploit these kinds of structures is on-going at the time of writing and will be documented before merging.","category":"page"},{"location":"input_types/#GPPPInput-and-BlockData","page":"Input Types","title":"GPPPInput and BlockData","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"A GPPPInput is a special kind of AbstractVector, specifically designed for GPPPs. Given a GPPP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"a GPPPInput like","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_ = randn(5)\nx = GPPPInput(:f3, x_)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"applied to f","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"fx = f(x, 0.1)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"constructs a FiniteGP comprising f3 at x_. GPPPInput(:f2, x_) and GPPPInput(:f1, x_) are the analogues for f1 and f2.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If you wish to refer to multiple processes in f at the same time, use a BlockData. For example","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = BlockData(GPPPInput(:f2, x_), GPPPInput(:f3, x_))","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"would pull out a 10-dimensional FiniteGP, the first 5 dimensions being f2 at x_, the last 5 dimensions being f3 at x_.","category":"page"},{"location":"kernel_design/#Kernel-Design","page":"Kernel Design","title":"Kernel Design","text":"","category":"section"},{"location":"kernel_design/","page":"Kernel Design","title":"Kernel Design","text":"Please refer to KernelFunctions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"EditURL = \"https://github.com/JuliaGaussianProcesses/Stheno.jl/blob/master/examples/getting_started/script.jl\"","category":"page"},{"location":"examples/getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Here we document how to do some basic stuff, including learning and inference in kernel parameters, with Stheno.jl. To do this, we that makes use of a variety of packages from the Julia ecosystem. In particular, we'll make use of","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl to perform Bayesian inference in our model parameters,\nOptim.jl for point-estimates of our model parameters,\nParameterHandling.jl to make it easy to work with our model's parameters, and to ensure that it plays nicely with Optim and AdvancedHMC,\nZygote.jl to compute gradients.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This guide assumes that you know roughly what's going on conceptually with GPs. If you're new to Gaussian processes, an excellent introduction can be found in either this video lecture or this one.","category":"page"},{"location":"examples/getting_started/#Exact-Inference-in-a-GP-in-2-Minutes","page":"Getting Started","title":"Exact Inference in a GP in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This is only a slightly more interesting version of the first example on the README. It's slightly more interesting in that we give the kernels some learnable parameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Import the packages we'll need for this bit of the demo.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AbstractGPs\nusing LinearAlgebra\nusing Stheno\nusing Plots","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"WARNING: could not import AbstractGPs.approx_posterior into Stheno\n","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Short length-scale and small variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l1 = 0.4\ns1 = 0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Long length-scale and larger variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l2 = 5.0\ns2 = 1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Specify a GaussianProcessProbabilisticProgramme object, which is itself a GP built from other GPs.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f = @gppp let\n    f1 = s1 * stretch(GP(Matern52Kernel()), 1 / l1)\n    f2 = s2 * stretch(GP(SEKernel()), 1 / l2)\n    f3 = f1 + f2\nend;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Generate a sample from f3, one of the processes in f, at some random input locations. Add some iid observation noise, with zero-mean and variance 0.02.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"const x = GPPPInput(:f3, collect(range(-5.0, 5.0; length=100)));\nσ²_n = 0.02;\nfx = f(x, σ²_n);\nconst y = rand(fx);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Compute the log marginal likelihood of this observation, just because we can.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"logpdf(fx, y)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"9.545723797938699","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"fx should be thought of as \"f at x\", and is just as a multivariate Normal distribution, with zero mean and covariance matrix","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"heatmap(cov(f, x) + σ²_n * I)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As such samples can be drawn from it, and the log probability any particular value under it can be computed, in the same way that you would an MvNormal from Distributions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can visualise x and y with Plots.jl","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"plt = plot();\nscatter!(plt, x.x, y; color=:red, label=\"\");\ndisplay(plt)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"It's straightforward to compute the posterior over f:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior = posterior(fx, y);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior is another GP, the posterior over f given noisy observations y at inputs x.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The plotting recipes from AbstractGPs.jl can be utilised to easily print whichever component of the GPPP is needed.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"x_plot = range(-7.0, 7.0; length=1000);\nxp = GPPPInput(:f3, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp);\n    ribbon_scale=3, label=\"\", color=:blue, fillalpha=0.2, linewidth=2,\n)\nplot!(\n    plt, x_plot, rand(f_posterior(xp, 1e-9), 10);\n    samples=10, markersize=1, alpha=0.3, label=\"\", color=:blue,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you've built a simple GP probabilistic programme, performed inference in it, and looked at the posterior. We've only looked at one component of it though – we could look at others. Consider f2:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"xp2 = GPPPInput(:f2, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp2);\n    ribbon_scale=3, label=\"\", color=:red, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior(xp2, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:red,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-NelderMead-in-2-Minutes","page":"Getting Started","title":"Fit a GP with NelderMead in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Stheno.jl is slightly unusual in that it declines to provide a fit or train function. Why is this? In short, because there's really no need – the ecosystem now contains everything that is needed to easily do this yourself. By declining to insist on an interface, Stheno.jl is able to interact with a wide array of tools, that you can use in whichever way you please.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Optim requires that you provide an objective function with a single Vector{<:Real} parameter for most of its optimisers. We'll use ParameterHandling.jl to build one of these in a way that doesn't involve manually writing code to convert between a structured, human-readable, representation of our parameters (in a NamedTuple) and a Vector{Float64}.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"First, we'll put the model from before into a function:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function build_model(θ::NamedTuple)\n    return @gppp let\n        f1 = θ.s1 * stretch(GP(SEKernel()), 1 / θ.l1)\n        f2 = θ.s2 * stretch(GP(SEKernel()), 1 / θ.l2)\n        f3 = f1 + f2\n    end\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"build_model (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've assumed that the parameters will be provided as a NamedTuple, so let's build one and check that the model can be constructed:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\n\nθ = (\n    # Short length-scale and small variance.\n    l1 = positive(0.4),\n    s1 = positive(0.2),\n\n    # Long length-scale and larger variance.\n    l2 = positive(5.0),\n    s2 = positive(1.0),\n\n    # Observation noise variance -- we'll be learning this as well.\n    s_noise = positive(0.1),\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(l1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-0.9162907691270586, Bijectors.Exp{0}(), 1.4901161193847656e-8), s1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.6094379869399091, Bijectors.Exp{0}(), 1.4901161193847656e-8), l2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(1.6094379094538682, Bijectors.Exp{0}(), 1.4901161193847656e-8), s2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.490116130486996e-8, Bijectors.Exp{0}(), 1.4901161193847656e-8), s_noise = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-2.3025852420056685, Bijectors.Exp{0}(), 1.4901161193847656e-8))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've used ParameterHandling.jls positive constraint to ensure that all of the parameters remain positive during optimisation. Note that there's no magic here, and Optim knows nothing about positive. Rather, ParameterHandling knows how to make sure that Optim will optimise the log of the parameters which we want to be positive.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can make this happen with the following:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\nusing ParameterHandling: value, flatten\n\nθ_flat_init, unflatten = flatten(θ);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Concrete types used for clarity only.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"unpack = value ∘ unflatten;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now easily define a function which accepts the flat form of the parameters, and return the negative log marginal likelihood (nlml) of the parameters θ:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function nlml(θ::NamedTuple)\n    f = build_model(θ)\n    return -logpdf(f(x, θ.s_noise + 1e-6), y)\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"nlml (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can use any gradient-free optimisation technique from Optim.jl to find the parameters whose negative log marginal likelihood is locally minimal:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Optim\nresults = Optim.optimize(\n    nlml ∘ unpack,\n    θ_flat_init + randn(length(θ_flat_init)),\n    NelderMead(),\n)\nθ_opt = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Note that we just added some noise to the initial values to make the optimisation more interesting.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now use this to construct the posterior GP and look at the posterior in comparison to the true posterior with the known hyperparameters","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_opt = build_model(θ_opt);\nf_posterior_opt = posterior(f_opt(x, θ_opt.s_noise), y);\nms_opt = marginals(f_posterior_opt(xp));\nplot!(\n    plt, x_plot, mean.(ms_opt);\n    ribbon=3std.(ms_opt), label=\"\", color=:green, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_opt(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:green,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Of course, the exact posterior has not been recovered because the exact hyperparameters cannot be expected to be recovered given a finite amount of data over a finite width window.","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-BFGS-in-2-minutes","page":"Getting Started","title":"Fit a GP with BFGS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The BFGS algorithm is generally the preferred choice when optimising the hyperparameters of fairly simple GPs. It requires access to the gradient of our nlml function, which can be straightforwardly obtained via reverse-mode algorithmic differentiation, which is provided by Zygote.jl:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Zygote: gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This will probably take a while to get going as Zygote needs to compile.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"results = Optim.optimize(\n    nlml ∘ unpack,\n    θ->gradient(nlml ∘ unpack, θ)[1],\n    θ_flat_init + 0.1 * randn(length(θ_flat_init)),\n    BFGS(),\n    Optim.Options(\n        show_trace=true,\n    );\n    inplace=false,\n)\nθ_bfgs = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Iter     Function value   Gradient norm \n     0     7.345494e+00     2.885875e+01\n * time: 0.03309988975524902\n     1    -8.786931e+00     1.479122e+01\n * time: 1.8962287902832031\n     2    -1.056155e+01     1.097189e+01\n * time: 1.917104959487915\n     3    -1.188594e+01     9.286619e+00\n * time: 1.9309089183807373\n     4    -1.439245e+01     3.548052e+00\n * time: 1.9448878765106201\n     5    -1.479388e+01     2.617606e+00\n * time: 1.9816207885742188\n     6    -1.497266e+01     9.895551e-01\n * time: 1.9948389530181885\n     7    -1.503889e+01     2.836196e-01\n * time: 2.0078048706054688\n     8    -1.504296e+01     2.384880e-02\n * time: 2.0215678215026855\n     9    -1.504303e+01     4.257969e-03\n * time: 2.035214900970459\n    10    -1.504303e+01     2.848143e-04\n * time: 2.0483238697052\n    11    -1.504303e+01     9.176041e-06\n * time: 2.0614089965820312\n    12    -1.504303e+01     2.246388e-08\n * time: 2.074448823928833\n    13    -1.504303e+01     1.703442e-10\n * time: 2.1054489612579346\n","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Once more visualising the results:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_bfgs = build_model(θ_bfgs);\nf_posterior_bfgs = posterior(f_bfgs(x, θ_bfgs.s_noise), y);\nms_bfgs = marginals(f_posterior_bfgs(xp));\nplot!(\n    plt, x_plot, mean.(ms_bfgs);\n    ribbon=3std.(ms_bfgs), label=\"\", color=:orange, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_bfgs(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:orange,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Notice that the two optimisers produce (almost) indistinguishable results.","category":"page"},{"location":"examples/getting_started/#Inference-with-NUTS-in-2-minutes","page":"Getting Started","title":"Inference with NUTS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl provides a state-of-the-art implementation of the No-U-Turns sampler, which we can use to perform approximate Bayesian inference in the hyperparameters of the GP. This is slightly longer than the previous examples, but it's all set up associated with AdvancedHMC, which is literally a copy-paste from that package's README:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AdvancedHMC, Zygote","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define the log marginal joint density function and its gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"ℓπ(θ_flat) = -nlml(unpack(θ_flat)) - 0.5 * sum(abs2, θ_flat)\nfunction ∂ℓπ∂θ(θ_flat)\n    lml, back = Zygote.pullback(ℓπ, θ_flat)\n    ∂θ_flat = first(back(1.0))\n    return lml, ∂θ_flat\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"∂ℓπ∂θ (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Sampling parameter settings","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"n_samples, n_adapts = 500, 20","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(500, 20)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perturb the initialisation a little bit.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"θ0_flat = θ_flat_init + 0.1 * randn(length(θ_flat_init))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"5-element Vector{Float64}:\n -0.9431379961535058\n -1.5547074136377645\n  1.6622545742166326\n -0.00493466215954037\n -2.4052428039940836","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define metric space, Hamiltonian, sampling method and adaptor","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"metric = DiagEuclideanMetric(5)\nh = Hamiltonian(metric, ℓπ, ∂ℓπ∂θ)\nint = Leapfrog(find_good_eps(h, θ0_flat))\nprop = NUTS{MultinomialTS, GeneralisedNoUTurn}(int)\nadaptor = StanHMCAdaptor(n_adapts, Preconditioner(metric), NesterovDualAveraging(0.8, int.ϵ))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"StanHMCAdaptor(\n    pc=WelfordVar,\n    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.4),\n    init_buffer=75, term_buffer=50, window_size=25,\n    state=window(76, -30), window_splits()\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perform inference.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"samples, stats = sample(h, prop, θ0_flat, n_samples, adaptor, n_adapts; progress=true)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"([[-0.9431379961535058, -1.5547074136377645, 1.6622545742166326, -0.00493466215954037, -2.4052428039940836], [-0.9431379961535058, -1.5547074136377645, 1.6622545742166326, -0.00493466215954037, -2.4052428039940836], [-0.9133828473150718, -1.641403686758521, 1.778923487653042, -0.02613928698096452, -2.5301305443838076], [-0.6772656672450903, -1.631079262008984, 1.9770141010940863, -0.027517075410348105, -3.141711011912041], [-0.7186258151383487, -1.4378450865226662, 2.0060264751982784, 0.1963834571721943, -3.2621396257695743], [-1.2462982641446532, -1.7970355498633732, 0.6655133078210869, -1.8238319735086461, -3.531612683659433], [-1.2462982641446532, -1.7970355498633732, 0.6655133078210869, -1.8238319735086461, -3.531612683659433], [-1.28605501621181, -1.76254676193623, 0.6575278348446568, -1.8043555245877556, -3.5553068516242843], [-1.4878421688909744, -1.744197489005254, 0.4327826807224497, -1.4109986147825777, -3.6184282164216275], [-0.2895215752038113, -1.7136708996930006, 1.5366469029504937, -0.8656192298334007, -3.195329345839567], [-0.2895215752038113, -1.7136708996930006, 1.5366469029504937, -0.8656192298334007, -3.195329345839567], [-0.7014712426626083, -1.9294602848653253, 0.8835404622263923, -0.7201978505017363, -3.2805931324311595], [-0.2833282636428526, -0.7894983341289019, 0.1480811000388656, -0.8405100917932828, -3.496541180158505], [-0.24309667228927823, -0.7111310214877459, -0.08989690416884949, -1.095772828740108, -3.375648708739526], [-0.9726018827012775, -2.4582259003887943, -0.040297546650469245, -1.0981703266002945, -3.286788945540361], [-1.0378870353597671, -1.998742872947349, -0.3073285162801285, -1.555528577426299, -3.4963928783099076], [-1.0378870353597671, -1.998742872947349, -0.3073285162801285, -1.555528577426299, -3.4963928783099076], [-0.6487300030132159, -1.3037106422624916, 1.0505869798999043, -1.2485674571280163, -3.2644564236639555], [-0.5086910041819547, -1.2986395294322644, 0.39598827849956864, -1.1891854451734296, -3.567438249417793], [-0.7741536998896251, -1.286954276645902, 0.6671352334470757, -0.9684167105342596, -3.4628652672210105], [-0.8086406048348941, -1.8984139751981728, 0.30113217159693556, -0.5255015408034831, -3.3281016465310223], [-0.8326030244395264, -1.4620487526728707, -0.2290598429400287, -1.7514174114680228, -3.576293106278608], [0.4185088171183168, -1.115434384190031, -0.6734360839906365, -1.138266450741866, -3.527077082299403], [0.7960291004318361, -0.7746782668756722, -0.7747057419356908, -1.4834338922449655, -3.4631144622411196], [0.7178836662770547, -0.6550784029108911, -0.6672932800388214, -1.564325471155394, -3.301737229390059], [0.5836541901269532, -1.3183620421673976, -0.6047114039810383, -1.7205170323208319, -3.6084478461873033], [0.9581785676321752, -1.6570273006600234, -0.4127408576181336, -1.203750197776054, -3.6835163237097808], [0.48003218927521935, -1.1638938103455927, -1.1431301527285609, -2.2085668795554847, -3.565232906495381], [0.5421552178262297, -1.00378592230679, -1.103217214137386, -1.5147815844151382, -3.238648202713368], [0.6681643474645135, -1.1907789539635898, -0.8616732195293851, -1.8597043740394992, -3.5499680869092725], [0.37999407851648814, -1.3936563230378856, -1.0844789038750493, -2.2243505406366486, -3.1599525683508474], [0.5141589674977559, -1.4589291912760844, -0.07935984514830863, -1.0895933837606386, -3.244904719924293], [0.40450362076638596, -1.3710217257366282, -0.5828640195731386, -1.6749505962601556, -3.34111343846215], [1.2739850476193035, -0.42440485624108715, -1.0439139436565474, -1.5916026352134682, -3.2002474915869454], [0.5559478709193555, -1.3284159331391256, -0.5527372191221311, -1.3878063131680136, -3.3166526188583654], [0.10251739999206895, -1.3539102172645374, -1.0602586075714675, -1.7780440233180967, -3.576699376409458], [0.7531704063785644, -1.3778872466814893, -0.6250677889941207, -1.2236512922496887, -3.2921459151021097], [0.655331163430424, -1.3228014964806611, -0.6792958311196574, -0.9462031131616571, -3.602227636263313], [0.4659535990716157, -1.925530663274114, -0.7380385581387992, -2.1228540525084756, -3.199221235350142], [1.8569816127334762, 0.1059910523793967, -0.9163163954732648, -1.432735078058771, -3.3575455305616724], [0.9377553710602602, -1.74991151231642, -0.6245338772043285, -1.7283156606492378, -3.2268542033683247], [0.028300273461169062, -1.4064356071222854, -0.5444029459269376, -1.446580344890788, -3.1862009954340342], [1.1307807734833544, -1.2886088101528423, -0.47605353336686956, -1.5717650510971792, -3.132235666340338], [0.9158023600477277, -1.4889296533243894, -0.9135248679565535, -1.1806984598554475, -3.464981244942366], [0.863959467322668, -1.3284787813085017, -0.7822826983415156, -1.5348134604199661, -3.3371175389333385], [1.4022286341965873, -0.9971500781062865, -0.5783969233484234, -1.4680448120589866, -3.539877830741166], [1.440219655687539, -1.1929871610605163, -0.5803754131659296, -1.4473053314464506, -3.3760909501701337], [0.9882719978947895, -1.5268454146581558, -0.8795365144644679, -1.4652550413517387, -3.2131882084048007], [0.8258059122776883, -1.5021837926464814, -0.9012574409275576, -1.365534132035809, -3.1320685817629013], [0.7032127812521858, -1.5330832863596517, -0.547600101055969, -1.4191696650739252, -3.7999911246764335], [0.29698339007555397, -0.765129526309494, -0.6053652281180071, -1.5559137305052457, -3.2419941269033776], [0.7555240844130883, -1.330043757716036, -0.528480118068794, -1.085282535100574, -3.5910615216626742], [0.7097863723984867, -1.2443424041191147, -1.2243797092668653, -1.8165368864153875, -3.5015444949219594], [0.8869710950314614, -0.9361635156856846, -0.6600869557939573, -1.724573018647414, -3.4152120734851805], [0.6531034113383708, -1.3159945694632338, -0.45146604069987234, -1.1029279505062901, -3.2460137677415655], [0.4721082096785176, -1.4736544353561707, -0.8457754153134714, -1.9451201552769022, -3.44297033902989], [0.834141934540459, -1.0766174438057965, -0.9132162743285882, -1.5473009530195825, -3.255871223126145], [0.9228368268871836, -0.9985989573819334, -0.7348797875669112, -1.645277924739233, -3.4694770361937723], [0.13890996736941935, -0.9989801595661214, -0.23538861697651742, -1.1575863977137602, -3.255755361803972], [0.7567287517396865, -1.2800995800388197, -0.8506921808961048, -1.3390360181096344, -3.646619293935256], [0.6368803890443919, -1.1947587489438196, -0.9156779502530327, -1.2107064726807053, -3.6806708675272652], [0.7159296957529215, -1.1641991717972733, -0.8500778668505251, -1.2292774657609171, -3.629188482258695], [0.7687940149747721, -1.2281873778092454, -1.001659317396335, -1.3596519522043715, -3.311069486544374], [0.8771415870400043, -1.246698305779663, -0.4948036190239039, -1.5106880699289822, -3.543861888123766], [0.7867212727743347, -0.27258711480103776, -1.044214729916201, -1.7697973471670605, -3.485783468911146], [1.2297913154999809, -1.541750428883485, -0.304626889749759, -1.4222180054676077, -3.287580002144487], [1.1155574008978102, -1.7278843365505494, -0.7041743752522533, -1.1871398518742915, -3.540515550382191], [1.0966537681876034, -1.3602851546355468, -0.5525357606002657, -1.6848898209121432, -3.3708518114178267], [0.5263374670849744, -1.286123262739296, -1.4753826489514723, -1.8546057712580806, -3.4087946171672168], [0.34515609830071015, -1.3302911355553342, -0.1563970641602576, -0.9071847856606158, -3.204997905576582], [0.23691656919042947, -1.527200863242571, -0.9242463872315387, -2.190234000034784, -3.291252855713729], [0.9725449934948618, -0.9204739994022055, -1.0252166728755927, -1.4191625026598922, -3.532054291286558], [0.9114065464327935, -0.8636595588622381, -1.0574226194901275, -1.388910972388787, -3.5432564549200216], [1.2160743738580975, -0.9697943313513939, -0.7898560628417515, -1.987741792789147, -3.0618285390363624], [0.5374101511770932, -0.977774447224486, -0.49488487463675673, -2.176023133920155, -3.380014410490127], [0.772940023569077, -0.9786263881082276, -1.5829025521340583, -1.733606455858206, -3.636575585862349], [1.5152760383134551, -0.5485208595818085, -0.455381946962854, -1.5895351356926979, -3.4398289476913795], [1.2363479601686478, 0.3482542492735897, -0.9479806442165374, -1.5131975887064508, -3.4224277507991543], [1.626740257305654, 0.438955299905877, -1.11620491857748, -1.124227158274336, -3.5513319504591148], [1.9209524866057808, 0.3470259455992305, -0.2746523570433824, -1.480685016970373, -3.32248577796228], [-0.3836650663117612, -2.0130299683802706, -0.6275240032408451, -1.1658845339142447, -3.302422191627948], [-0.2140124739454768, -1.5814810207349643, -0.6775757754685807, -1.369638486013995, -3.73140951558669], [-0.5917908745973699, -1.529545300153269, 0.017598348939301095, -1.291077393365211, -3.1224422037539186], [-1.0904409049085093, -1.7223204264564007, 1.3866202880335419, -1.6703484379469176, -3.5934928318506927], [-0.3296942511527483, -1.450602634465994, 0.9372593519585424, -0.6476047226038596, -3.4041600586130305], [-0.9881230746339461, -1.504935795394583, 0.931703886998812, -0.9912583293550981, -3.4518025869288276], [-0.7175744614582517, -1.824024707991402, 0.6890579676616245, -0.9269006929155514, -3.260824747719774], [-0.6410150662471757, -1.2269236043067804, 0.7491665105888707, -0.8669353171153252, -3.5902541241037706], [-0.8630916839715103, -2.0912015995334228, 0.6788960975528886, -0.8651152876675131, -3.2244862354998105], [-0.9476268479658522, -1.9920786616648503, 0.6005716887450606, -0.8576624776096978, -3.2596077091618687], [-0.9124368903699311, -2.0581518261197362, 0.5911535150319308, -0.9588530090567056, -3.1623138321385817], [-0.9777907989735297, -1.5506818604802959, 0.6495782418124916, -1.0110365447224883, -2.9418802476529415], [-0.6765004097938156, -1.8520664655654613, 0.8418426779606992, -1.742781765473485, -2.818097397687066], [-0.17848458220928834, -1.5419248567739714, 0.5615129087264831, -1.4177856204806214, -3.4847362871650747], [-1.2758002798755514, -1.9579050553470994, 1.9076759152148073, -0.22410370911439842, -3.7472082936129363], [-0.16758793595526872, -0.45555563421327744, 0.7901449273646621, -0.6412557087256823, -3.5572130340359367], [0.09862617573897527, -1.0634734522480966, 0.2247159894505119, -0.4147338870694723, -3.3841662030921977], [-0.06023570986712302, -1.1586821330044499, -0.13566920900469664, -0.5766923115705458, -3.053999434540898], [-1.2081352123409688, -1.908048827603692, 1.1603547847699913, -1.8261739166011635, -3.332599599818775], [-0.6699232846898343, -1.3526804110536284, 0.6881772209715185, -0.46987424243832165, -3.2880044648169453], [-0.5432869066224654, -1.1500298159307927, 0.9563226459695631, -0.6685877632433062, -3.2457955259521136], [-0.9657708916113967, -1.4660132349444652, 1.5542086919354636, -0.9660156363935304, -3.514374009237539], [-1.1001772258452238, -1.4732864512781516, 0.43381361732505636, -1.0477439103439135, -3.6457040412046875], [-0.841236102460394, -1.44493051585091, 0.33449053258366723, -1.185616292231138, -3.698063112759571], [-0.4717783039513159, -1.638302942427887, 1.3207036183868808, -0.6439377280367539, -3.020310836275611], [-0.818554342464576, -1.558372967000009, 1.3600168374015795, -0.58749089843353, -3.6580395367378515], [-0.645228856435512, -1.833648011242261, 1.505161558906438, -1.1996032998280697, -3.1018432934999605], [-0.27153703675068375, -1.9788059222827152, -0.17414591193084214, -1.773653839064205, -3.286633018258799], [-0.5145078626607072, -1.81074847584242, 0.0030792511094652752, -1.671774118818336, -3.3285969551814505], [-0.6956816895832246, -1.4799595577657756, -0.4592415441056066, -1.4144005241390292, -3.40690089154058], [-0.6554829732238131, -1.6125175449689781, 0.15410255189913766, -1.8240533292906176, -3.5073705424759165], [-0.47269573541271726, -1.6388038705637151, 0.2532074136580968, -1.7552940778647756, -3.5106931583999708], [-0.45180893055449306, -1.638287445897508, 0.2677847267146987, -1.8834839798681617, -3.4091508595344733], [-0.741466627842198, -1.6742072074746945, 2.1902260016334227, -1.3726766596733766, -3.6412511270617918], [-0.32099358958536395, -1.0898605630391283, 2.5632113617911165, -2.3646981499126043, -3.505641842790996], [-0.836420963489522, -1.59619114166249, 0.9195404266551099, -2.0018210163117547, -3.577800837536579], [-0.7236265875028516, -1.8375704128319597, 1.0195773591234136, -1.7498148173151113, -3.1802290590860824], [-1.3470238140100477, -1.69124721523041, 0.9762586798266578, -0.20541267616516937, -3.453378973327748], [-0.6932490791122701, -1.2232759111968197, 1.8133981478311685, -0.14089303223009175, -3.2960581835465246], [-0.4469495434830264, -1.0686014315367882, 1.4851034765828266, -0.23226049017538788, -3.5423621784860373], [-0.8131551985883043, -1.5861205438261008, 1.8830789285568785, -0.8474396375838963, -3.588035678519038], [-1.0291932387972627, -1.9071324393046878, 0.5025120676400157, -0.6021605637275208, -3.510464271844547], [-0.9373839901196409, -1.4380645784811037, 0.8468262195997718, -1.0716952751693323, -3.5405060452104484], [-1.0626460814535077, -1.6035340880332714, 0.6257845018249011, -1.5170034854838796, -3.555101618643826], [-0.8783834403795521, -1.8392870389966665, 1.2721212608647232, -0.8965960007308922, -3.179300284440705], [-0.33338549873163426, -1.291090005229962, -0.13376368192301902, -1.6322360681241745, -3.4421775247858006], [-0.09306354949318654, -1.3755448368114669, -0.7861157944149493, -1.2269499980798715, -3.650906429341323], [0.8912511194714563, -1.2791109087140644, -0.38453497579843987, -1.2318724698859465, -3.5329501490388195], [0.6620854881382425, -1.4596733861831674, -0.7594101408697896, -1.5172863327330333, -3.3238792911259205], [0.7117781806175721, -2.366169004378886, -0.38124243184026296, -1.0630485422885807, -3.480779117569442], [-0.579293279973411, -0.9044067489543853, -0.41597695211257557, -1.3629358703819587, -3.431670255645989], [-0.8310961610313974, -1.7434137721477396, -0.16868211198507274, -1.4788825279138749, -3.212889083025457], [-1.0011769442274885, -1.9877611058066296, -0.04206355466008922, -1.6893721014835057, -3.6030653067015073], [-0.8420011827143961, -1.6330185514155113, 0.8533843357850017, -1.2063399961746726, -3.3855486077013293], [-0.30317971305123614, -1.1093342189580355, 0.6189787701152882, -1.0355959731501563, -3.4006642762866917], [-1.2701114408244678, -1.9717382797245435, 1.7326324635811658, -0.33903068757038207, -3.6134989347004263], [-0.7330172169305565, -1.707894817918071, 0.2951957332398105, -1.4009636318304115, -3.2409532287003486], [-0.567620581815916, -1.0810419196166183, 0.20573220909593007, -2.090577661452808, -3.314563217274147], [-1.4818790145444594, -1.9801553334040665, 1.3941252736935104, -0.3215628205494427, -3.5887547192926865], [-0.4975242707048837, -1.4743353529367538, 0.8832877456005936, -0.9861740136796591, -3.316018001185362], [-0.641998600018096, -1.704891134739508, 0.8240910589403762, -0.8068243207788636, -3.2855708687342418], [-0.6662962090407024, -1.3124092510693928, 1.2897349677661833, -0.7159117253431901, -3.49795834825616], [-0.5195221185085538, -1.5728483696836173, 0.7040979771203447, -1.7936092542262685, -3.3155993168945077], [-1.217245523936782, -1.8545819770354548, 0.9666776036484569, -0.6327357216375606, -3.416301187845681], [-0.8193202395247514, -1.8189277887983857, 0.9579841630176696, -1.0307220943361837, -3.4413890204840545], [-0.7590838129906702, -1.9581720844236397, 0.9213998601210763, -1.0558873436549534, -3.3712319005835085], [-1.0301202134069547, -1.9688849664088643, 0.7087330778130331, -1.0467140710473886, -3.370795813126885], [-0.8423283821411798, -1.6844640939167859, 1.411181889177366, -1.2855047538400588, -3.487300467060998], [-0.8008887670915057, -1.5123053621794453, 1.3560919471259079, -1.2160885508437833, -3.6947555586371794], [-0.9154771939421606, -1.4512922684962717, 1.1177826246201437, -1.2453935535359382, -3.4427647312962364], [-0.8134300459440009, -1.6995313784349282, 1.05703864370716, -1.1950923093469608, -3.5216584313891204], [-0.6611275254875965, -1.4964854531588805, 0.7219689958697788, -1.1583077646212399, -3.5313326470075332], [-0.8554636069841367, -1.7158444885204558, 1.0204012447019708, -1.3552252551338935, -3.489830303281555], [-0.7218901129256345, -1.6836526150244335, 0.6445954642618629, -1.1027517515280467, -3.279252784872784], [-1.2628729142105635, -1.9729052718321753, 1.6519919489395074, -1.2771020984159518, -3.580949726967029], [-0.5353607634754423, -1.3386114944101388, 1.3618542540057401, -0.8498372539262077, -3.2999418262543543], [-1.0423805808947593, -1.9450326633521138, 0.8427031369672979, -1.6240648204021808, -3.545969030788456], [-0.6928877448763272, -1.751368981836425, 0.9062881641049665, -0.6941227709066611, -3.4816496512944908], [-1.2172453293612577, -1.9419652204504219, 0.46126771405434075, -0.9129824879705684, -3.4653766303417357], [-0.2820578999170137, -1.79959106884273, -0.9517500647585246, -1.7384782184394094, -3.7847163438266724], [-0.7490421483719967, -0.980321205667367, -0.60337034242325, -2.6378639316288277, -3.1794304507960467], [-0.5956682449790148, -1.7166134742828674, -0.3588861740297867, -1.7379415772456488, -3.7041188086319488], [0.09163438626505152, -2.274063843587663, -0.38160566364871423, -0.6932095406278262, -3.3190695160366355], [0.27236420485768376, -2.4813137917054324, -0.4838905212309553, -1.4735733208516018, -3.408901902998151], [-0.04514127853997576, -1.4935220304940682, -0.5853620017756582, -1.296402181639105, -3.2736332584855363], [-0.7609536752774815, -1.3784575321948174, 0.37009470658794497, -2.195171103011443, -3.4344591307683583], [-0.5437531540773204, -0.9262829521689749, 0.7482288883360183, -1.6853279806225938, -3.2460538378762944], [-0.9359998926847654, -1.7553380135463963, 0.7602128800951937, -1.707522685500494, -3.475034743786522], [-1.3482637893724931, -1.6829119956559453, 0.6749285577673781, -1.8583017047712798, -3.4420497499281395], [-0.8912658129445981, -2.039388279675311, 0.7379364462262656, -1.6334426427945876, -3.3698348858223097], [-0.552296268242237, -1.3373412260210917, 1.0041125584757382, -0.6367206790689763, -3.561345165051419], [-1.0275613831720292, -1.761801752943004, 1.1573317927822262, -1.2237020452184075, -3.4010027460428067], [-1.008416506491598, -1.6997531735475124, 1.445581772181835, -1.6504078774803665, -3.5890360449400283], [-0.9994048845378589, -1.7281608436589553, 0.7303534942903107, -0.5779031037926821, -3.562357102634745], [-0.5063079307073809, -1.1886417781104606, 0.9528111656286395, -1.8931510949064474, -3.4059083450883123], [-0.5586323051715376, -1.4467666053251687, 0.3809782902146661, -2.136857391452738, -3.385354163331618], [-0.53429248052569, -1.2284697611331523, 0.660140991384371, -0.9111501465274058, -3.482095525258846], [-0.38869099196962287, -1.0261975653395305, -1.4506723353118989, -2.4234289962745224, -3.3497495824970813], [1.387364914904156, -1.5726396756220806, -0.11401069859846619, -1.031641451815794, -3.251173956731987], [1.8168713156900702, -1.5668629031600492, -0.3322917822480569, -1.1209706223088614, -3.285769887185746], [2.057203487373908, -1.085089992029581, -0.8530597300880689, -1.6069377649387526, -3.4688092124749623], [1.2477973321080476, -1.0465566152822194, -0.5330815533604514, -1.3777248485849771, -3.594072153551087], [1.4722593119604053, -1.252019676703436, -0.7036157041200956, -1.6653965545103457, -3.3607726302116103], [0.20844475632877096, -1.3359319888534125, -0.701138894309888, -1.5471138989683284, -3.3245912203257157], [0.131968441315382, -0.9799098706949829, -0.6389266510044354, -1.5913418040222957, -3.414065763507898], [-0.0033471031331918366, -0.7583161286521206, -0.7335303181762334, -1.6301362817065808, -3.567194361193546], [-0.08121353825808289, -0.8250886675446051, -0.9605034462119131, -1.7967268104867966, -3.8381729755454934], [0.9940766083253059, -1.3098215142220184, -0.705063835998686, -1.4958888858464898, -2.9546701835229143], [2.1946431485278857, -1.382719075548348, -1.0467290587848195, -1.1325271997353905, -3.229554856360349], [1.7392194827696643, -1.432020582663517, -0.6016710620826409, -1.2610005347018298, -3.582503259491471], [0.2709247903478372, -2.321505157921209, -0.5564884545629063, -1.5448264431021594, -3.413436633755782], [-0.6738380723964601, -1.5267828157800913, -0.6323455508253776, -1.4541772593415705, -3.3170839736962994], [2.1683272035368004, -0.5619446822366668, -0.4026137843949075, -0.8571154034197488, -3.3930831849121486], [0.25197437783705, -1.7148733805311112, -1.1543757042996134, -1.8145324096820112, -3.494267965869791], [0.5292200102006251, -1.2973138930575925, -1.6209856166239067, -1.9103334615389946, -3.502344258178959], [0.9695631635918631, -1.3601382791281764, -1.6096669706811464, -1.962256861440761, -3.6021702849669452], [0.8133017497801757, -1.2030900493078538, -1.8218739323457793, -2.047118134115571, -3.26968213172296], [1.2088832770948879, -0.9788490450279161, -0.4757336167181496, -1.7008730012783315, -3.3944865989349737], [0.9802399531321532, -1.5047358285190588, -0.5651946256795397, -1.4828578402161985, -3.4493827338754808], [1.052734713585234, -0.784625685957902, -0.9100956932817463, -1.8387881600687748, -3.366283243947045], [0.9199980256802154, -0.7950401218372589, -0.9829189460257599, -1.8246261389170046, -3.5034323694811516], [0.9762585289618924, -0.3784321160086755, -0.389334047401602, -1.3573528858595727, -3.28974135887873], [0.6785814935245096, -1.917984137469821, -1.280122329368719, -1.9711055490545157, -3.3299208209492432], [1.0662159109430382, -0.5802960511765407, -0.9269852504490216, -1.7691084844802745, -3.3834271498352155], [1.8570764591071036, -0.6795359746159435, -0.7188219407463836, -1.2948816202130211, -3.520028759304798], [-0.303791178395628, -1.6061975531799988, -0.9316187151371854, -1.936089094211592, -3.2508617980676777], [0.46274983142819304, -0.8031712071153193, -1.1469197205984518, -1.843596684334436, -3.2629991915969963], [0.45062034329536343, -0.8044792542176973, -0.9728052063951896, -1.8981731015849848, -3.1886659879638564], [0.2055934368724195, -1.270329701214847, -0.8508003266402355, -1.9739612627813712, -3.061504666210727], [0.12217204849638517, -1.3667104901900484, -0.9954803012259082, -2.084620590381997, -3.486436929872843], [0.22188158954996734, -1.6146723362904172, -0.9623727636489173, -1.5688090203006324, -3.31983226497365], [0.3190682028400644, -1.5057154911031976, -0.673428987056613, -1.98309760877927, -3.5957047918438465], [0.003911400058703607, -1.3380589607042186, -0.7453312059969497, -1.5932030996711295, -3.4639145039583346], [1.7257876334236963, -0.6003563439313715, -0.4912178995797785, -1.5375779426111105, -3.4078719522106944], [2.061572394241949, -0.9033659103761557, -0.6505248543536318, -1.1207156257190327, -3.430015299415601], [1.0635542005088137, -0.559798482315909, -0.3675467828095539, -1.1521131778002989, -3.2626411953497394], [1.0292651111111504, -1.2942932307600465, -0.5529781498354477, -1.5998527991443052, -3.7170724553431165], [0.40938196947243993, -1.3081387711531853, -0.8749629252380935, -1.7091497717897266, -3.256796817187776], [-0.6698890728106877, -1.647616247926234, -0.002891597886485908, -1.167270572794506, -3.5814942087239556], [-0.304166334533283, -1.6082194952874354, -0.12444828578745412, -1.322022862722015, -2.833559864888794], [-1.293001807700873, -1.4196761828267077, 0.49252011145843944, -1.0523836865844487, -3.5779505315672195], [-0.30476251779121055, -2.0335565427513402, -0.2838046453413463, -1.601953146628765, -3.3944009339850334], [0.7026557663638225, -1.0650448282534237, -0.8564037479718596, -1.7085320245115683, -3.1032417747151686], [0.5374815881458912, -1.0970789201703117, -0.6867392069389461, -1.8043049363369201, -3.5286438968955283], [0.06667965012375134, -1.311261184590128, -0.408623489155208, -1.1169615310202485, -3.1789387648879086], [0.024969561520063507, -1.060942227393518, -0.4604187894008672, -0.7254014579719715, -3.351319817948351], [0.12552663164148253, -1.581686304718419, -0.33307643384711305, -1.2077733419196002, -3.4462448788149587], [-0.03945877050083782, -1.0847538183026102, -0.5727559900263115, -1.6464400723961403, -3.3853142274455155], [0.6833438589608725, -1.653857909880534, -0.8106332027286342, -1.6455879014665689, -3.631747922683621], [1.346631658669847, -0.3502313446989644, -0.9016255454446569, -1.5210080016877476, -3.5967963423370897], [0.9503219886669108, -1.678528271793973, -0.5112837137653972, -1.1752014160904865, -3.424575218147995], [1.1397126819975363, -2.471162932741364, -0.5920854733521311, -1.1273728586335623, -3.391625436978199], [1.3275096800933492, -2.6144740412397063, -0.5354080083105717, -1.09522727016602, -3.5469204433374166], [1.4410368257683566, -2.655310345169619, 0.4770846423237121, -0.7868117402213333, -2.8651942282541145], [1.1588784243575412, -1.2202563319167168, 1.517773367543047, -0.7064948988225324, -3.123639135001378], [0.40327973248716176, -0.8097339790027662, 1.3264386007938331, 0.021384246235549464, -3.002564635942571], [0.06339692432722574, -2.0275917845778664, 1.7254382935481845, -0.9697759748910691, -3.012455577817067], [-0.5082060572396966, -1.0086719974751357, -1.6413400847402548, -2.1777944970535095, -3.744688390563731], [-0.3474742148605933, -1.3499846315755923, -1.1565356023546005, -2.2305475518487867, -3.431614383402333], [0.5698987783082057, -0.7759958358701868, -0.5927250188226587, -1.5167472872220238, -3.398552108042986], [0.5595441656072263, -1.3512650319261015, -1.555726126797856, -2.287329471756365, -3.389530522216716], [0.7339437860731657, -1.2430262196101658, -1.4811532307239055, -2.295352168580116, -3.4659461493914416], [0.1605345655336615, -1.09103996545757, -0.6209734995196107, -1.4941726889955902, -3.3746673136952534], [1.484962567961468, -0.9341052241687415, -0.9750350802364642, -1.7660268486891706, -3.472751072577638], [0.9139931738957181, -1.7332708911125476, -0.7410781925393805, -1.1999046795096917, -3.297768755930629], [1.3064851358665652, -0.9629256006403049, -1.1426676014678727, -1.572620954330162, -3.2644547285306955], [0.5792456247384822, -1.405554575908655, -0.7794182676379574, -1.8388788235012188, -3.4088052104430533], [2.707530704070866, -0.4009509306898906, -0.7239456228532062, -1.2609563207118881, -3.362676149494123], [1.541398589919532, -0.5943324445706653, -0.760006743898015, -1.6541632634365244, -3.5694945309535018], [-0.1262493323102083, -1.0737886333980249, -0.3586600510639693, -1.2672291980595867, -3.411821404393347], [0.5909384485902173, -1.9193198166485945, -0.35044248390688176, -0.7362770786885011, -3.4640748257845644], [0.3414576132051749, -0.7620297239335901, -0.60991106739364, -1.8784080832136993, -3.2283233981812796], [0.7973907006515589, -1.1274177045186689, -0.6663155516658961, -1.3024422250227274, -3.4312472656652844], [0.7563600786010246, -1.1088846838565567, -0.6643299277367976, -1.3256555609407177, -3.3788544844437642], [2.8001401030449986, -1.4652291783632685, -0.6374032662492296, -1.22458050915943, -3.4267197890263392], [2.7882848528018758, -1.6232408779611842, -0.5160182508356308, -1.4386914793313765, -3.477859390431356], [1.5148111217222318, -0.5700965757045027, -0.781791227651382, -1.3976111215574079, -3.396553306063738], [1.0022595000441856, -0.6455422297198414, -1.0714761711476113, -1.2770972236493205, -3.3133905660870684], [0.5676877304056508, -0.7703487364073637, -0.7885052329417097, -1.690053798340999, -3.806017928869672], [0.36746198329856283, -1.8338014518667745, -1.259434409480813, -2.1480627023288092, -3.5994520118244937], [1.2025489749090728, -1.2969868999201992, -0.7215695699918444, -1.4635957627543315, -3.2733672048898903], [1.4458353942484483, -1.2532475726235586, -0.930365798982714, -1.8196065979212357, -3.840761610941921], [1.5000599375446757, -0.9903237308070174, -0.9222744853821948, -1.3373899251716213, -3.2866917402131826], [1.6426957625826086, -0.936311844074629, -0.6472654030635849, -1.4139910191652252, -3.2782009670184387], [1.2199002151297809, -1.6958012571534193, -0.5896628535758279, -1.4312413609089536, -3.609050062123687], [1.386407131356786, -1.3856889409581559, -0.49803084901755584, -1.52002772013915, -3.404879677288889], [0.9092584909139795, -0.6642572863775916, -0.7661577747388274, -1.4082611405984353, -3.5513769581150196], [0.8482632851647588, -0.6478538445138814, -0.6526385669521386, -1.0532051964192357, -3.677108572485608], [1.150942822256964, -1.2508349984830278, -0.9668354046476896, -2.3688663554389886, -3.204448490319953], [0.7991690714298693, -0.5829665562957734, -1.043094092166964, -1.362067017527378, -3.653086563005825], [0.9440672284029777, -0.6483068921875158, -0.5831374440944448, -1.5636452084708021, -3.4580556400068296], [1.0398249649407925, -0.46099761310025594, -0.5014456868835131, -1.1897201168188205, -3.2561988210381303], [0.9311403933132182, -1.716517507026397, -1.448316093541085, -1.7385936007874088, -3.299741223174332], [0.7701322596734417, -0.8794673164583638, -0.46588242570804067, -1.8535570242755282, -3.6736262585099375], [0.8529934674078893, -0.7316682591501349, -0.9386910461870701, -1.6152731872659316, -3.0941612445525846], [2.2514583558357124, -1.501812594080221, -0.7528959353059409, -1.5217362786073183, -3.6734840436629153], [-0.893920074075903, -1.2522195787900672, -1.2615414563477394, -1.841903819095094, -3.6280548695877695], [-0.7487628304131526, -1.2055450736455569, -1.090713663547012, -1.9447024602302763, -3.637220844366647], [1.5146460868199891, -1.3829213206033433, -0.2719240273063635, -1.0980246207224937, -3.4348022875972077], [0.048638831579660285, -1.18859379122449, -0.8912544184970597, -1.6480631907012082, -3.407508613376599], [-0.1774054300410502, -1.6859835167716688, -0.6503405230088058, -1.991229782282741, -3.123141487576034], [-0.15689342262383132, -1.617863670963759, -0.8544937180373748, -1.988295816163975, -3.3040752650176977], [-0.2602366847489306, -1.1260135897884493, -0.811200885398969, -1.565653629417382, -3.6173497801162444], [1.8169146305328856, -1.504298220043421, -0.6676738635481734, -1.2436862583399106, -3.3818276973869397], [0.9371900097484174, -0.8461143141533143, -0.42694343665462914, -1.3190813519064295, -3.4728516777804463], [0.21311564842371952, -1.8686021255952925, -0.7071516830187677, -1.5492891310751298, -3.4445893516639274], [1.6039725235169975, -0.30321250258580607, -0.6280753466322603, -1.59591278042302, -3.4197330783750335], [0.5938659472047617, -1.6848511112849742, -0.7296317691972929, -1.5632538759495973, -3.448182099439821], [0.3013182876212574, -1.0434278925675498, -0.6730292282979613, -1.7834994053107094, -3.3318136281026627], [1.877197543970684, -0.8240464969622072, -0.8579383455387823, -1.6964986103236919, -3.5814885369401157], [0.41338854001015823, -1.4268724437239158, -0.5392507882243379, -1.4757736725808481, -3.4087249221136564], [0.7660945656474721, -1.2348367870786352, -0.972231953070336, -1.1358361724981112, -3.237593456449263], [-0.33716614843993564, -2.0853421558417167, -0.09712546839127773, -1.431548714738853, -3.56910708678682], [-0.1497171591516906, -2.1932981380229286, -0.35393023131062995, -1.3213961228839377, -3.127934775981852], [0.862860604943457, -0.8586241290579968, -0.7424151936555939, -1.7225161110928566, -3.09184723719835], [1.1695361614215065, -0.8824372238136462, -0.7058908021575491, -1.8668868551294509, -3.6353717797311162], [1.2097734497631751, -1.4648603743298814, -0.47078068270541396, -1.0506759398559022, -3.4915693832461994], [1.1813140631314003, -0.8948502037558579, -0.5749207475656865, -1.2846191495476387, -3.240508753438653], [1.1983285371846857, -0.9630349866062332, -0.4106463383384411, -1.173277902915238, -3.2962253051507244], [1.769706445709699, -0.40050718938634644, -0.429049714635359, -1.237601587424671, -3.259928582121615], [1.1513779135428592, -1.2033148330169152, -0.9204123871753453, -1.7379514836339487, -3.604993512319224], [0.482953778688998, -0.7282073189596707, -0.451244124967556, -1.239179131489956, -3.274677470279528], [0.44069619010838035, -0.6290170987728715, -0.27148207170080985, -1.1773990012809576, -3.394075890495629], [0.647408025242042, -0.9021633342153039, -0.5356521488992313, -0.8764283612793404, -3.4547282666853216], [-0.7583391475218341, -1.1610998718814538, 1.246158402874556, -1.2172812366865258, -3.5715546454446003], [-0.4247754092614165, -1.7338594637978988, 0.8149954328383139, -1.4944641119261906, -3.2039990328973658], [-1.1435284930794998, -1.556846699014368, 0.49134524344944486, -1.6481922576012744, -3.649140899469251], [-0.4086218866667678, -1.81741459872923, 1.0714868870440821, -1.2511952625483578, -3.088647053162954], [-0.6904416286740443, -1.8175304283483842, 1.0558666098402072, -1.0798958565008625, -3.3287385446238145], [-1.0129135353613736, -1.66164560522065, 1.3450479641139235, -1.1695865635522031, -3.3941641657335375], [-0.6269261014054126, -1.4078451966659633, 0.6187453253385785, -2.039558106736161, -3.1750190002748644], [-0.5272835658224234, -1.5802789860325188, 0.9878237428354044, -0.0776182407635588, -3.6276074700444774], [-0.9837931144049252, -2.2484658775140836, 1.2457465631255091, -0.4444012254815478, -2.9944148223078115], [-0.7217821472935544, -1.2030369974682953, 0.9020874529074804, -1.0678334621546213, -3.3496278851784735], [-0.4344725380081541, -1.360208220000121, 0.546019495344913, -1.3046207143460569, -3.4680203227677096], [-0.7397318965539087, -1.3114844051577415, 0.7264050148528429, -0.9472711310919805, -3.4128093772259294], [-0.6750297860710385, -1.495532766395341, 0.8758227203093291, -1.1339546342554405, -3.425644126807399], [-0.62427728565866, -1.5523891450618335, 0.9108109332916162, -1.0932159916845965, -3.376591473179212], [-1.0740048017172228, -1.7768143834989787, 0.8502641754831181, -1.2812890428100254, -3.4062839920540884], [-0.1845800986856824, -0.9871681592661825, -0.6812524545886041, -1.8725966401437868, -3.42814084779476], [-0.02388843464115515, -1.3318792711517244, -0.8984484104423752, -1.810053190682332, -3.536357900889702], [0.16902588233260846, -0.95490764917595, -0.8161455436555014, -2.3977344530430282, -3.1829816761764422], [-0.39642564963997, -1.211022039623054, -0.31721274639733343, -1.055599142547208, -3.226154289995482], [1.0247422932972305, -1.6481040421977196, -0.9355841938542411, -1.8558384574303781, -3.235353650159461], [-0.023448298763162914, -0.9671681519545849, -0.6044741572349769, -1.21963551564183, -3.1985468447828795], [1.35483868176488, -1.8363721370865738, -0.8479684827615958, -1.734873281803007, -3.200713714582108], [1.455253409928259, -0.20982884998349577, -0.8749361781343824, -1.6391466586853085, -3.7673193391512245], [1.568953515735944, -0.40988826767839237, -0.9583923934808145, -1.3967202394305434, -3.795689969068317], [2.747352256862975, -0.08131746871195963, -1.0146305962382325, -1.1362555717129401, -3.5235650001877508], [2.7043709442008437, -0.03985587451723444, -0.4547801243783092, -1.3022597975803933, -3.499998872355196], [1.8774676423612693, -1.1636589734264156, -0.6326672551824297, -1.580718725200408, -3.534181750968335], [0.4826454833516768, -0.8652846779400646, -0.7122611733161887, -1.5295460721764935, -3.2663363233693055], [0.7008972551027927, -1.0570545474479827, -1.0156638962943982, -1.929633720231719, -3.748078418689201], [0.12634605435796556, -1.5686722524886298, -0.6668276438708595, -1.6029351418264388, -3.3199830683125215], [0.7243967084841616, -0.7482963125076265, -0.6266358579105424, -1.352015491805811, -3.529127988911636], [0.36359892951504164, -1.7797276894491103, -0.6558600936143758, -1.742554512807152, -3.4565807658792638], [1.499735630797038, -0.16562136389330062, -0.5644026540653068, -1.7056826866047852, -3.3744726851478997], [0.6865422971070256, -0.5257515629926042, -0.5558626376926201, -0.7959418599658549, -3.538244910510996], [1.7126881703716075, -0.46425600473010226, -0.30895739977368103, -1.3978949224091657, -3.309518043818497], [0.49707918766924813, -1.748735803327799, -0.9608690514390834, -2.0191981225147644, -3.378051206170745], [0.9095359374608845, -1.1072021722204783, -1.1575759472828104, -1.7289578086560708, -3.644292401059926], [0.9865826678847757, -0.29687954628161306, -0.49580541267464223, -1.5162720145649953, -3.265372093675771], [1.109632133655403, -0.44957114475308957, -0.7255650766763668, -1.4476019696234408, -3.3248449235748545], [1.1323909034687225, -1.1227432985706625, -1.1452830125116478, -1.6359334205115685, -3.3723655022539987], [0.9735564826455663, -0.9816231440512206, -0.9045482832924159, -1.397106142646502, -3.022941701618368], [1.0270860613835477, -1.1152116182942033, -0.612599206311862, -1.82000932350464, -3.7150845613151664], [0.3624999388306857, -1.6907706358224375, -0.6956984508513901, -1.0075979442546528, -3.187428639595477], [1.0906031486055356, -0.9817602565254177, -1.1113304395542931, -2.2314631364031667, -3.7066282589236326], [1.0908305444442672, -0.9541171885249036, -1.2872359484449845, -2.016603059461608, -3.595305341200684], [1.3182977607898494, -1.1585515745841166, -1.392951336513763, -1.8795384904006411, -3.344388555058702], [1.317484110928929, -1.0519854628004404, -1.2590519814191556, -1.94041447165933, -3.567311284011482], [1.440203182298808, -0.9070214575278017, -1.089999526661289, -1.5699068834297887, -3.4106030035979833], [0.2713321241077593, -1.3637619121325022, -0.45207296080607123, -1.3861014294238791, -3.4794450433765283], [1.00034044554265, -0.637596680225245, -0.8029049231678139, -1.4692899285285737, -3.3892818854671587], [1.2116919834010627, -0.35227906244777624, -0.7479116231689148, -1.3994006440269744, -3.5575873219381275], [1.2869322987513792, -0.43213218439009854, -0.7872523339342448, -1.6156567539659883, -3.40968498635902], [1.703381938148018, -0.7368898702130475, -0.6312004256659465, -1.4574452563745952, -3.469900289917088], [0.4878486272626322, -1.318258001178339, -0.803594935582985, -1.8409472245802503, -3.601208747407293], [0.6405719277857722, -1.424064366532085, -0.4427275080287527, -1.4685470768060886, -3.247127174408672], [0.13470181509053164, -1.6351963854701341, -0.6889987791623026, -1.22939047762076, -3.6108638975536502], [0.5535855988982907, -1.2517335925013617, -1.1199587015627237, -1.6944306969006862, -3.6292621909664033], [-0.1467164571969623, -1.6693539002706435, -0.5284281580830156, -2.024904378684632, -3.069289493016785], [-0.6139590164058355, -1.4698146839362876, -0.6739193842329547, -1.6425967973298825, -3.692809598109976], [-0.1387532665572985, -1.3015950289579483, -0.538778454076122, -1.3799719824389112, -3.507392353945507], [-0.10763010276053345, -1.6039549087281846, -0.529380710470936, -1.5737913088364939, -3.691611841962818], [0.9512087671642426, -1.1222767662149167, -0.5847304647115619, -1.0248134981618737, -3.5221641342548584], [-0.00032934381136470736, -2.0533386730230214, -0.9189152244140699, -1.9532644034332183, -3.338617699666091], [-0.38724404470587703, -0.8347379754655062, 0.02204761789757173, -1.038541453031433, -3.4314759307577947], [-0.45972513980323465, -1.1835895281007462, 1.284294453226521, -1.5498687261950275, -3.088586764166111], [-0.9253992087019876, -1.6465606731402183, 1.3595541541764893, -1.7176390914236672, -3.244836285302546], [-0.6652263191979615, -1.325489260229614, 0.6785635378171768, -1.0612451189748902, -3.6750395974932246], [-0.800064406668016, -2.056497678633272, 0.5300287422412021, -1.420050537933134, -3.419294969859567], [-0.8383001736302989, -1.5870002270318473, 0.38350673567121374, -1.1307750434526282, -3.36977578175358], [-0.9348428228381586, -1.4233029492510896, 1.4672436225715166, -1.0292209081862884, -3.3625647371465397], [-0.4728901872273317, -1.1670158033350646, 1.6620728686456725, -1.1272152986767727, -3.2968818742260955], [-0.8043942727352985, -1.5859668255313744, 0.47624806452890367, -0.8260407558993388, -3.5733647813964535], [-0.6567853182639436, -1.4526065515250908, 0.33720440292681897, -0.8877902178506353, -3.3071934046606413], [-0.913144484174774, -1.7894917089021278, 1.1746157810412126, -1.6354904243305601, -3.4784871245732574], [-0.7370247874378721, -1.4961606533416245, 1.01479518278909, -1.6823321279897778, -3.236159048849657], [-0.40543808674202, -1.4612940544727586, -0.39275401021939277, -0.9584300275425948, -3.544630999808647], [-1.4703424316286675, -1.8867957708133287, 1.5728641345998589, -1.4933659219991868, -3.2712386970669156], [-0.3755751227121881, -1.3266562319112296, 0.16251754039764907, -1.1352837302017722, -3.426466060549564], [-0.6970584589383689, -1.6069451891973656, 0.10596590892802289, -1.2103570770602805, -3.6318830339452455], [-0.8583793227748866, -1.7020969597301119, 1.3123054853941978, -1.4286015323041998, -3.542429633681691], [-1.2611742522787754, -1.8704669025453124, 1.2344455091385511, -1.3485719772230658, -3.38494763237564], [-0.592143430967188, -1.6062929182915577, 0.7481280378525016, -1.2493465876271315, -3.4950734310998346], [-1.0150310944490932, -1.3917696726088935, 0.4892965176578074, -1.1534395283251442, -3.1803028089075265], [-0.5028868061734311, -1.892462517375857, 1.2566837555186559, -1.1005816958285761, -3.74661565462187], [-1.3884149477366583, -2.420083584028837, 0.07210243472723621, -0.7402945688421427, -3.3894333253432025], [-1.117762335663067, -1.8206723202964457, 0.25009483362752194, -1.5979729347358214, -3.1998072105005986], [-0.6077365760332791, -1.6560342043730745, 0.957452505363388, -1.412382677822718, -3.4211677380423406], [-0.5553569573468354, -1.7233210487082224, 0.4186903520965954, -1.3302167352332883, -3.5444039093337563], [-0.6299641942570904, -1.5040391429368514, 0.39873469991782556, -1.2638777338382898, -3.6194238269833305], [-0.7455300216423421, -1.3897994961103715, 2.129759568805506, -0.2957647286840916, -3.6996313291248986], [-0.5222056024514288, -2.494288564696039, -0.2708042304190708, -1.1244344619591358, -3.726301490049446], [-0.5019267190952169, -2.4366911048125623, -0.3153926151077407, -1.1102018034777827, -3.6831711954953863], [-1.711257984885217, -2.183302019561713, -0.2671183582090568, -1.5425836467980008, -3.2721976595711983], [-1.7060586366215276, -2.6655296908635733, -0.282985482862734, -0.6116177188068708, -3.528524988401267], [-1.6007715447905349, -3.2411070812869798, -0.5572495834764342, -1.4541032051605192, -3.326753202160191], [-1.6991680697066762, -3.2603382351221106, -0.31783577160793547, -1.1972443086502829, -3.5054413764818233], [-1.6943599433701035, -3.41621178373607, -0.7161563090335801, -0.9649326374539391, -3.5179049618307205], [-1.6271599687420975, -2.5654577073857965, -0.2712629873950926, -0.9563332553885266, -3.3737470760086277], [-1.662735364635788, -2.347455863793069, -0.5330636865330558, -1.0820529282935016, -3.4284870183916327], [-1.1371092589847005, -2.2789095995052167, -0.49186582096002873, -1.3176024248457907, -3.4296310013541165], [-0.16445873720188747, -0.2913741690057119, 2.097112549220223, -0.49815419528462657, -3.5912244707800567], [0.14899100098901205, -0.7109056826916982, 1.2239177018726513, -0.4594240152770358, -2.881990029264545], [-1.9945309296238, -2.0426416315188103, 1.0083173405727726, -1.4527640806182924, -3.236382916377406], [0.63101849311314, -0.7275321110100748, 0.787455120860834, -0.7575040851397344, -3.207481267030431], [-0.9009047935983944, -1.9702269590567583, 1.1630551930409883, -1.4222966384097444, -3.5967330415807597], [-0.917415416527389, -1.7656716396143193, 0.8806087676602322, -1.5938725488653553, -3.4450684679619714], [-1.1843989337262555, -2.2447154156507136, 0.7822771450994963, -1.7344912507411832, -3.551634879115113], [-0.7325724581015006, -1.302030369518717, 0.38403817692404674, -0.7540375838666673, -3.1148901447008543], [-0.740902420784958, -1.2691985825767633, 0.2652013698707832, -0.5602423633562905, -3.3209610133328322], [-1.3002024093405045, -2.265103639034196, 0.9574486909980391, -1.6586620563761465, -3.313984777955688], [-0.4411068751713395, -1.028595291804693, 0.8463153079629561, -0.9217554474899645, -3.461733287858846], [-0.629036071869602, -1.3577098046710645, 0.811544407759915, -0.5390452490745078, -3.299536949055041], [-1.4297151141003739, -1.9126608088436439, 1.183296295929857, -1.6163621006061017, -3.1271614073244516], [-1.3326592425550818, -1.4876831675483608, 0.8768692781550512, -1.5677577403211254, -3.6559342500929755], [-0.6164356256592529, -2.287355489717185, 0.3152590082300904, -1.345068860935513, -3.3186710467144063], [1.2534208894357421, -1.6081371526766386, -0.8379163784276407, -1.2651856620763273, -3.5149905380040383], [0.5871481783395598, -1.3349688821065675, -0.8506404443937686, -1.9893278581163, -3.323217006407031], [0.5578863823854723, -1.2821456180668622, -0.8394655473272522, -1.9960159141916372, -3.185806981885755], [0.6264399439203507, -1.269628257760735, -0.8218726290439541, -1.9465720689326462, -3.21653401245922], [0.5332368558263821, -1.3094949596497047, -1.1380350417375857, -2.0150772854633945, -3.2468905943622213], [1.2016809479644786, -1.0064481174364701, -0.3947223071419489, -0.7425446088398814, -3.362307862413099], [0.729824119108814, -1.2432971871529186, -1.6813893386439078, -2.1031410260575356, -3.50289935209532], [-0.14622773875932776, -1.4699835509543617, -0.041486377526188875, -0.8637572395435291, -3.3882969792325976], [-0.34765308094682057, -1.217114133917769, 0.3392865218257517, -0.6111048237246673, -3.2860528080165663], [-0.7890008428334111, -1.5333543862454895, 1.919661023381346, -1.8755662262630743, -3.2506185663605818], [-0.8973206736471326, -1.5202782839348634, 0.8859686953714138, -1.2719290565173305, -3.6236779765047626], [-0.8657246986499025, -1.6651747520192934, 1.946896986955297, -1.085254218690749, -3.2995160720349515], [-0.2619585048306625, -1.385907922955508, 2.6131635332009995, -0.019203795780634664, -3.601266099309691], [-0.7810816497811615, -1.2772207347218074, 3.0788101891365343, -0.12646647910768305, -3.443876413321299], [-0.4699088559685116, -1.524520111701314, 3.2684506835783544, 0.9831713946951364, -3.3219084578214524], [-0.5155546182696316, -1.475714776838447, 2.607333296814216, -0.3481884651433672, -3.239055128599332], [-1.0956603871896484, -1.7052338022925135, 0.8464032268399183, -0.6386851988138025, -3.4796379392581955], [-1.7234498945102479, -2.2428586424215435, 1.093652759161604, -1.2388156747250207, -3.4026185278274297], [-1.5839609653553726, -2.288853879458809, 1.2721668304735547, -1.1417267469226977, -3.450548187084216], [-0.19032033693955874, -1.217977015621117, 0.8886969725077491, -0.7373956059302393, -3.4390266953642077], [-0.8820294867450054, -1.7558552000300052, 0.3928788831803748, -1.3524814622922308, -3.243285403907955], [-0.543636652423612, -1.2749444398120027, -0.011019942395250282, -1.349351687970858, -3.4609239624648236], [-0.5403903967764353, -1.5611989167612492, 0.5485061841624629, -1.3474427097846082, -3.6177909761832288], [-1.169554918916293, -1.7359944517155665, 0.5467421907409574, -0.9470543425521211, -3.1948068633543727], [-0.7572233615345259, -1.7417909007935268, 1.1549966663933942, -1.0963812111037257, -3.494423363861505], [-0.9302779451653607, -1.987370066819544, 0.6178368171222951, -1.3775280231127485, -3.2881884467285225], [-0.6641948809685623, -1.3916544695033077, 0.4974622740290169, -1.5746725730948865, -3.4643015645906856], [-0.9369437354202017, -1.695774171503573, 1.098586660480081, -0.7517438025089443, -3.327411667317397], [-0.8385793331234997, -1.4288714443269526, 1.240107899594486, -0.9424604824463354, -3.501056855146455], [-0.40824165016424113, -1.3280135683238163, 0.8711966492838021, -0.9640698745112696, -3.293001366996754], [-0.7896903939442776, -1.2324067152728078, 0.4000582560528716, -1.468570879430884, -3.4368527488429104], [-0.5969748704428263, -1.386619893926207, 0.42806959603759837, -1.3213043762888848, -3.4242891364949375], [-1.2523247496090542, -1.789389004843829, 1.5172837051665797, -0.7550494411464314, -3.4310516973959237], [-0.9149698075221573, -1.942445047592166, 1.0663057873231883, -0.6935319183387856, -3.601239763040091], [-0.6488435160695388, -1.6899269455752248, 0.5155406620770391, -1.77414499791033, -3.4045829245494477], [-0.6754456885088046, -1.265375222518335, 1.304776282320807, -0.4457236849004253, -3.33264506187081], [-0.6474101012198464, -1.449751618789949, 1.914637448817534, -1.943514403794374, -3.3119415277373294], [-0.45596204660217754, -1.2802849025544536, 2.138043300572301, -1.6962931336186233, -3.4754600275739933], [-0.6468558660395058, -1.1234511846768762, 2.1119407841576527, -1.9337305846028205, -3.3941187585801473], [-0.655297910247151, -1.3376590089658358, 1.9003156530745116, -1.1689957753722884, -3.515723989885611], [-0.6936783215065288, -1.3624799688289575, 1.949856360481669, -1.1763183825020667, -3.6183184890163256], [-0.9718053342937101, -1.89790351529936, 1.9332436859568376, -0.8789985841193695, -3.2321945010032076], [-0.42372824809272036, -0.7027334234603412, 1.151255377016387, -0.9645598195884608, -3.436730308268863], [-0.796841749267878, -1.7876545468872829, 1.9981850599809057, -1.6082837185708174, -3.423532271597461], [-0.3350945779667178, -0.729574755984686, 1.6575663887864163, -0.2878168416024858, -3.447755676849726], [-0.2701831897518102, -0.5487874543140157, 1.688419486685496, -0.2257110622128936, -3.4369479448244626], [-0.5059341888488152, -0.9087238215710127, 1.9461939605611513, -0.5340834985848945, -3.369126090976723], [-0.26960501419569616, -0.8691643900727704, 2.665422321805917, -0.7356020291949459, -3.3425237247264428], [-0.42794877976682344, -1.0456647463804285, 0.5083274707662725, -1.8210066743280686, -3.592099412283599], [-0.4607816110685424, -1.096201004456552, 0.20111665810368687, -0.5055764521345201, -3.24224398512513], [-0.033344072145638726, -1.7669950915957855, -0.30176708122894447, -1.2368664565716831, -3.337690475053786], [-0.9465037289694052, -2.0442145236627196, -0.6649631774233367, -1.247879836281548, -3.499254945083186], [-1.37804128579171, -1.8796840939056618, 0.9731167837808781, -1.042919746354841, -3.599517608571995], [-0.6659938091560358, -2.1150638066135516, 0.7946786624856751, -1.1294314613167369, -3.4740921219840026], [-0.979622275223624, -1.4118528880525996, 0.41919353422418565, -1.6390523521335538, -3.306948508937998], [-0.5613139990697337, -1.7515329525664969, -0.04952626402652882, -1.644783447538931, -3.558753657479572], [-0.9135726499815885, -1.6916433873192345, -0.13411492298066632, -1.5228593895394222, -3.443390134000669], [-0.9801833239491922, -1.503815192620162, -0.3082803740636586, -1.4100590983312122, -3.4601104956595674], [0.9235485976121836, -1.6147236890370427, -0.6988882484035841, -1.346383883468274, -3.393840930195172], [0.832821930793513, -1.4251061735262807, -0.671058575437355, -1.8361629668128603, -3.637367327836959], [1.095066347353336, -1.4186635448246838, -0.8762432200069927, -1.4092907251604638, -3.389507714991894], [0.7656364624159446, -1.0140058732532975, -1.077623523608446, -1.888225221093108, -3.4719505206448487], [0.6865808497465221, -1.2099294651179702, -0.9906086857107961, -1.6602224674594208, -3.4325902544568785], [0.7442144137668372, -1.4839071794636751, -0.6356666239434323, -1.8113097525586679, -3.4810005798851447], [0.38921397115404677, -1.528538728514584, -0.9913863392508984, -2.1585026508102616, -3.428457826698303], [0.4595556770886393, -1.5267390040593345, -0.5804339999035706, -1.4732827005737197, -3.4727159065227884], [0.23474988246742898, -1.0059192737035803, -0.73327936099917, -1.365978128977443, -3.3583852086047528], [0.27032386767695665, -1.3518524083278787, -0.6596389152054389, -1.464544267854511, -3.466503221456828], [1.1891487967376835, -1.1552293347176785, -0.888793656702313, -1.6853824601307739, -3.471480673269898], [1.3393250278406266, -1.1510811395106886, -1.0771270141635072, -1.5868300274394271, -3.368977404507061], [1.1305653723634612, -1.5607026942892035, -0.3859774706029266, -1.3150692061838207, -3.5154656736842864], [0.6991017818426196, -0.6747244043110515, -0.8645901957389519, -1.8733954679831752, -3.15026024875413], [0.5182510233745596, -1.3731916553230312, -0.8317205114906122, -1.0928751345709604, -3.4972324261059597], [1.0625396428422338, -0.8736495620758233, -0.6759160887854854, -2.0293862435568353, -3.305454697463342], [0.5946567930625292, -1.3627386186827612, -1.1842684973946564, -1.3701245663331714, -3.364139594082998], [1.1695892901744602, -1.1769882521126955, -0.4524525313129908, -2.0151637825640685, -3.4770414973547243], [0.1622923410701787, -1.5245790092939777, -1.0956669587337806, -1.746470063312818, -3.528155894553081], [1.4863157864984786, -0.7517111332425851, -0.4933141100169643, -1.1169660377390764, -3.4008662630481665], [1.4580300217040154, -1.2753755893553451, -0.6219777982534799, -1.157028215728298, -3.5607236137088587], [-0.10227958684048355, -1.0610285436127747, -0.904438100983356, -2.166537351612613, -3.301607787343965], [-0.503440998412611, -1.1936195099843434, -1.4253920805134181, -2.15444356517583, -3.584771055997824]], NamedTuple[(n_steps = 1, is_accept = true, acceptance_rate = 7.933200142060471e-48, log_density = -12.701326950428452, hamiltonian_energy = 13.204877284142999, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 108.45302796066171, tree_depth = 1, numerical_error = false, step_size = 0.4, nom_step_size = 0.4, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = -12.701326950428452, hamiltonian_energy = 14.419682465367739, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 2.2628429853816708e10, tree_depth = 0, numerical_error = true, step_size = 0.9340259163636535, nom_step_size = 0.9340259163636535, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = -9.364917442600166, hamiltonian_energy = 13.777324966614174, hamiltonian_energy_error = -0.13038572840887852, max_hamiltonian_energy_error = -0.504118523228593, tree_depth = 2, numerical_error = false, step_size = 0.09209433883419865, nom_step_size = 0.09209433883419865, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 1.3528942887817532, hamiltonian_energy = 10.41558819613148, hamiltonian_energy_error = -0.7473618258870562, max_hamiltonian_energy_error = -0.7473618258870562, tree_depth = 2, numerical_error = false, step_size = 0.09591656221537206, nom_step_size = 0.09591656221537206, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9813131886951222, log_density = 1.7087007804650245, hamiltonian_energy = 1.3953547645121782, hamiltonian_energy_error = -0.0997780886929247, max_hamiltonian_energy_error = -0.21060068947420874, tree_depth = 3, numerical_error = false, step_size = 0.12973296357918182, nom_step_size = 0.12973296357918182, is_adapt = true), (n_steps = 23, is_accept = true, acceptance_rate = 0.9672987363158946, log_density = 3.399955059177021, hamiltonian_energy = -0.33472071011135673, hamiltonian_energy_error = -0.05708713490173034, max_hamiltonian_energy_error = -0.3599261454064129, tree_depth = 4, numerical_error = false, step_size = 0.1918880948820608, nom_step_size = 0.1918880948820608, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.3896362526624668, log_density = 3.399955059177021, hamiltonian_energy = -0.583870487040759, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 21.62407846077176, tree_depth = 2, numerical_error = false, step_size = 0.2950712032265661, nom_step_size = 0.2950712032265661, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.997099219819023, log_density = 3.180980214117266, hamiltonian_energy = -2.958960073412495, hamiltonian_energy_error = 0.008476547446015559, max_hamiltonian_energy_error = -0.02025733137327279, tree_depth = 3, numerical_error = false, step_size = 0.07878003447940538, nom_step_size = 0.07878003447940538, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9526923776191583, log_density = 2.364660548546718, hamiltonian_energy = -0.4649556055052, hamiltonian_energy_error = 0.08951186787928744, max_hamiltonian_energy_error = 0.1516293127975885, tree_depth = 3, numerical_error = false, step_size = 0.140916752395458, nom_step_size = 0.140916752395458, is_adapt = true), (n_steps = 9, is_accept = true, acceptance_rate = 0.9114589442505979, log_density = 1.7001893068986256, hamiltonian_energy = -0.1463002315793096, hamiltonian_energy_error = 0.2361715091076222, max_hamiltonian_energy_error = 0.5094504665019117, tree_depth = 3, numerical_error = false, step_size = 0.22456725647366968, nom_step_size = 0.22456725647366968, is_adapt = true), (n_steps = 11, is_accept = true, acceptance_rate = 0.00265493143175871, log_density = 1.7001893068986256, hamiltonian_energy = 1.4118966110153028, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 644.509422879353, tree_depth = 3, numerical_error = false, step_size = 0.3181879746541949, nom_step_size = 0.3181879746541949, is_adapt = true), (n_steps = 127, is_accept = true, acceptance_rate = 0.9996442426066616, log_density = 4.0668794184661525, hamiltonian_energy = 1.6876979432708241, hamiltonian_energy_error = -0.008317646785432231, max_hamiltonian_energy_error = -0.02614706216782192, tree_depth = 6, numerical_error = false, step_size = 0.025711745567717024, nom_step_size = 0.025711745567717024, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9963886622569065, log_density = 2.7441244782891276, hamiltonian_energy = -0.211888255503899, hamiltonian_energy_error = -0.018898318078234944, max_hamiltonian_energy_error = -0.018898318078234944, tree_depth = 5, numerical_error = false, step_size = 0.04895272002585627, nom_step_size = 0.04895272002585627, is_adapt = true), (n_steps = 23, is_accept = true, acceptance_rate = 0.971115699438519, log_density = 2.709548730464318, hamiltonian_energy = -1.446941255193213, hamiltonian_energy_error = -0.0005633183257163221, max_hamiltonian_energy_error = 0.0938373644094812, tree_depth = 4, numerical_error = false, step_size = 0.09239285442621246, nom_step_size = 0.09239285442621246, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.8984940741803332, log_density = 1.3848711617788823, hamiltonian_energy = 1.3713405028162722, hamiltonian_energy_error = 0.10760439352178341, max_hamiltonian_energy_error = -0.24358592861805484, tree_depth = 3, numerical_error = false, step_size = 0.16081984786804238, nom_step_size = 0.16081984786804238, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.9970163584347222, log_density = 2.951338101137946, hamiltonian_energy = -0.9202369804055515, hamiltonian_energy_error = -0.11912141861287284, max_hamiltonian_energy_error = -0.11912141861287284, tree_depth = 2, numerical_error = false, step_size = 0.22267698119181717, nom_step_size = 0.22267698119181717, is_adapt = true), (n_steps = 4, is_accept = true, acceptance_rate = 9.28058127337321e-5, log_density = 2.951338101137946, hamiltonian_energy = 0.7734892481081941, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 1489.2062702254327, tree_depth = 2, numerical_error = true, step_size = 0.41652014719725977, nom_step_size = 0.41652014719725977, is_adapt = true), (n_steps = 47, is_accept = true, acceptance_rate = 0.9967263097623449, log_density = 4.62966898909527, hamiltonian_energy = -0.9869777696234401, hamiltonian_energy_error = 0.0058168718979692, max_hamiltonian_energy_error = 0.00955095869295386, tree_depth = 5, numerical_error = false, step_size = 0.03680512857759094, nom_step_size = 0.03680512857759094, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9980718179204576, log_density = 4.626980636427813, hamiltonian_energy = -2.689664410884535, hamiltonian_energy_error = -0.012676553653396372, max_hamiltonian_energy_error = -0.04808088589364745, tree_depth = 4, numerical_error = false, step_size = 0.0692817498598541, nom_step_size = 0.0692817498598541, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9710627434503111, log_density = 4.677605290741747, hamiltonian_energy = -3.2062919203285336, hamiltonian_energy_error = 0.034117574377884985, max_hamiltonian_energy_error = 0.10197011019366897, tree_depth = 3, numerical_error = false, step_size = 0.1298217393914792, nom_step_size = 0.1298217393914792, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.968919482793054, log_density = 2.0820254266307323, hamiltonian_energy = -1.2722803943436758, hamiltonian_energy_error = 0.06703448673062473, max_hamiltonian_energy_error = 0.06703448673062473, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 1.0, log_density = 3.396008042991916, hamiltonian_energy = -0.3882153045731336, hamiltonian_energy_error = -0.04439219145661233, max_hamiltonian_energy_error = -0.18849575895108717, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9968745564627632, log_density = 4.185713741570393, hamiltonian_energy = -2.100703884454278, hamiltonian_energy_error = -0.06245063994829536, max_hamiltonian_energy_error = -0.12088934674582585, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9978141993446693, log_density = 5.128269606285407, hamiltonian_energy = -2.5728811132333647, hamiltonian_energy_error = -0.11023126008014561, max_hamiltonian_energy_error = -0.12024976260494835, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9536325304760702, log_density = 4.493246189575771, hamiltonian_energy = -4.152468585677735, hamiltonian_energy_error = 0.04621999097213436, max_hamiltonian_energy_error = 0.0821688167913921, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7404052133239782, log_density = 4.248102923291457, hamiltonian_energy = 0.8308237617605068, hamiltonian_energy_error = 0.11109786878987382, max_hamiltonian_energy_error = 0.5353350278546665, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9845428873344015, log_density = 2.8221504150830476, hamiltonian_energy = -2.351568496576558, hamiltonian_energy_error = 0.08100227180397335, max_hamiltonian_energy_error = -0.23537595484377993, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9927131493869943, log_density = 2.943105986015322, hamiltonian_energy = -1.4897792216303443, hamiltonian_energy_error = -0.11963135590356622, max_hamiltonian_energy_error = -0.2897249080286639, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8546998058318558, log_density = 3.124360905731937, hamiltonian_energy = 0.6227938241889821, hamiltonian_energy_error = 0.15262707292609434, max_hamiltonian_energy_error = 0.7824289454709317, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9979597996976634, log_density = 5.130142822275957, hamiltonian_energy = -3.1814239390147208, hamiltonian_energy_error = -0.25374662157090944, max_hamiltonian_energy_error = -0.28914144756725246, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9412465109728826, log_density = 2.38754307040716, hamiltonian_energy = -2.033509106878432, hamiltonian_energy_error = 0.14650859927303506, max_hamiltonian_energy_error = 0.14650859927303506, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8366611344264555, log_density = 1.5810452841659322, hamiltonian_energy = 1.3710229813852117, hamiltonian_energy_error = 0.09173546188506654, max_hamiltonian_energy_error = 0.43264016223145063, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8641942974037927, log_density = 4.924755267349575, hamiltonian_energy = 0.3917969250757025, hamiltonian_energy_error = 0.03236799932521839, max_hamiltonian_energy_error = 0.42373695269776845, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7617952081704973, log_density = 2.7743480064151544, hamiltonian_energy = 2.151528980648245, hamiltonian_energy_error = 0.19869039980611625, max_hamiltonian_energy_error = 0.5119984807012679, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9734574584711756, log_density = 5.197869964862453, hamiltonian_energy = -0.7998763238857789, hamiltonian_energy_error = -0.2958330015588446, max_hamiltonian_energy_error = -0.2958330015588446, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9661227497194965, log_density = 4.125124946943735, hamiltonian_energy = -3.379947372654329, hamiltonian_energy_error = 0.0424897394506667, max_hamiltonian_energy_error = 0.06903858261891171, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.895922923783827, log_density = 4.622669879625304, hamiltonian_energy = -1.9537979318649037, hamiltonian_energy_error = 0.01534149322781353, max_hamiltonian_energy_error = 0.24415453389113306, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8829155406928182, log_density = 2.618786368451568, hamiltonian_energy = -1.8862817554784108, hamiltonian_energy_error = 0.17370226649441323, max_hamiltonian_energy_error = 0.17370226649441323, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9866303946644376, log_density = 1.4839647371101385, hamiltonian_energy = 0.6441001451552628, hamiltonian_energy_error = -0.025343863196724215, max_hamiltonian_energy_error = -0.2139823007005477, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9861403143249753, log_density = 1.887032899704927, hamiltonian_energy = 0.6325426645727541, hamiltonian_energy_error = -0.029923457236670892, max_hamiltonian_energy_error = -0.38284577789083984, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9589658753749232, log_density = 3.986918814899049, hamiltonian_energy = 0.38210568656146027, hamiltonian_energy_error = -0.029822809689170615, max_hamiltonian_energy_error = 0.1709492504860961, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8981270100930246, log_density = 3.7850345734797823, hamiltonian_energy = -0.6730751428098838, hamiltonian_energy_error = 0.046912758856550774, max_hamiltonian_energy_error = 0.2686223310273046, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9404279973216827, log_density = 3.6265862672558633, hamiltonian_energy = -1.0147630656667088, hamiltonian_energy_error = 0.019099014676920767, max_hamiltonian_energy_error = 0.18344728920365672, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.960771635608319, log_density = 3.1637351069413597, hamiltonian_energy = -2.067887470726947, hamiltonian_energy_error = 0.09012367247923292, max_hamiltonian_energy_error = 0.11537178650409752, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 5.469081444480986, hamiltonian_energy = -2.8052825450414063, hamiltonian_energy_error = -0.20848928211098627, max_hamiltonian_energy_error = -0.20848928211098627, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9878207015484419, log_density = 4.652150879773966, hamiltonian_energy = -4.32665203014849, hamiltonian_energy_error = 0.02321533526868169, max_hamiltonian_energy_error = -0.04711110023112397, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9823187486458228, log_density = 4.876341081226283, hamiltonian_energy = -4.009546406196584, hamiltonian_energy_error = -0.05675887417935144, max_hamiltonian_energy_error = -0.05675887417935144, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7518257554113593, log_density = 3.9001479315430743, hamiltonian_energy = -0.9231060666041055, hamiltonian_energy_error = 0.3723023949639388, max_hamiltonian_energy_error = 0.6031382435061625, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9458196886943883, log_density = 2.660908714628208, hamiltonian_energy = -1.6544073741669905, hamiltonian_energy_error = 0.16514817195453424, max_hamiltonian_energy_error = -0.270885185763893, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8808353920847617, log_density = 2.0908938870923794, hamiltonian_energy = -0.11743527675839727, hamiltonian_energy_error = -0.12043096331989012, max_hamiltonian_energy_error = -0.4746523263972642, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9935737069876563, log_density = 3.4541469415111177, hamiltonian_energy = -0.3902343446959269, hamiltonian_energy_error = -0.36724628648651647, max_hamiltonian_energy_error = -0.5194227274984247, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9299418058271081, log_density = 4.1846925350873025, hamiltonian_energy = -0.5723240304501811, hamiltonian_energy_error = -0.05007469970378331, max_hamiltonian_energy_error = 0.17422654810828764, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9998566070723537, log_density = 4.824111068112822, hamiltonian_energy = -3.615811696406038, hamiltonian_energy_error = -0.07350407639426892, max_hamiltonian_energy_error = -0.08335719985689627, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 5.3151187972478695, hamiltonian_energy = -4.525194827987212, hamiltonian_energy_error = -0.01829993671975405, max_hamiltonian_energy_error = -0.042795365753941716, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9609578077150758, log_density = 4.193620471547362, hamiltonian_energy = -2.276196306368909, hamiltonian_energy_error = 0.08221450529953556, max_hamiltonian_energy_error = 0.08221450529953556, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9991994543640282, log_density = 4.787635365952223, hamiltonian_energy = -3.3164813687613144, hamiltonian_energy_error = -0.04390237483775694, max_hamiltonian_energy_error = -0.0913775623282822, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9209942883224659, log_density = 4.699273530826035, hamiltonian_energy = -2.9033236974748675, hamiltonian_energy_error = 0.08755287540779699, max_hamiltonian_energy_error = 0.1781671135633287, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8968512031359762, log_density = 5.639725204785117, hamiltonian_energy = -2.7898691396940927, hamiltonian_energy_error = -0.2180561634393885, max_hamiltonian_energy_error = -0.2180561634393885, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.8136851390849106, log_density = 2.5932354530520154, hamiltonian_energy = 0.031270888389165474, hamiltonian_energy_error = 0.3017409308902832, max_hamiltonian_energy_error = 0.4101972471157618, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 1.0, log_density = 4.19781682300594, hamiltonian_energy = -1.1468152188973608, hamiltonian_energy_error = -0.11700845219523859, max_hamiltonian_energy_error = -0.2986528174500058, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8855598223987323, log_density = 2.787996378310032, hamiltonian_energy = -1.8209017557419709, hamiltonian_energy_error = 0.12979320958108742, max_hamiltonian_energy_error = 0.2505116189044774, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 3.6580545958356225, hamiltonian_energy = -2.599272336808505, hamiltonian_energy_error = -0.10170461172869993, max_hamiltonian_energy_error = -0.29322127973066126, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7713912912089788, log_density = 3.6921162138959724, hamiltonian_energy = 0.2836012096677596, hamiltonian_energy_error = 0.1611513809549594, max_hamiltonian_energy_error = 0.5598957654394053, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9883264661500701, log_density = 4.7490801424070135, hamiltonian_energy = -3.530933407629737, hamiltonian_energy_error = -0.22253259707727047, max_hamiltonian_energy_error = -0.26414160064698944, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9686545666528902, log_density = 3.0412948242626623, hamiltonian_energy = -1.7843917411628132, hamiltonian_energy_error = -0.03492650979208811, max_hamiltonian_energy_error = 0.14919310564030863, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9639083133845604, log_density = 3.24571701002354, hamiltonian_energy = -1.2540934204253742, hamiltonian_energy_error = 0.09395187706577013, max_hamiltonian_energy_error = 0.09395187706577013, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8885624186077772, log_density = 3.7674690657792276, hamiltonian_energy = -1.3605637378335618, hamiltonian_energy_error = 0.023325235710787373, max_hamiltonian_energy_error = 0.3044059455803565, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9593647672383808, log_density = 4.864778057889225, hamiltonian_energy = -2.782651165528287, hamiltonian_energy_error = -0.012118930941310335, max_hamiltonian_energy_error = 0.12307405068766242, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9855375859438474, log_density = 3.200762538070709, hamiltonian_energy = -2.6890320165174466, hamiltonian_energy_error = 0.06458720754098879, max_hamiltonian_energy_error = 0.06458720754098879, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9753617921829684, log_density = 2.0729496007052433, hamiltonian_energy = 0.8174057748777899, hamiltonian_energy_error = -0.1269824665993542, max_hamiltonian_energy_error = -0.18498266478028036, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9981975479570526, log_density = 2.9356373266089832, hamiltonian_energy = -1.0912758544457892, hamiltonian_energy_error = -0.10669300583766783, max_hamiltonian_energy_error = -0.22111093161173723, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9996543268369782, log_density = 4.2029982092334315, hamiltonian_energy = -1.2863034396170825, hamiltonian_energy_error = -0.0017955633705459828, max_hamiltonian_energy_error = -0.09651248795586098, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9336353126891545, log_density = 3.7092444006201912, hamiltonian_energy = -2.9051792463162753, hamiltonian_energy_error = 0.04950234316882085, max_hamiltonian_energy_error = 0.1634570047242705, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9672921504930038, log_density = 2.5409613114141063, hamiltonian_energy = -1.9631287111354219, hamiltonian_energy_error = 0.13272708063836358, max_hamiltonian_energy_error = 0.13272708063836358, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.961511234413772, log_density = 1.4035601082311935, hamiltonian_energy = 1.0105377676082412, hamiltonian_energy_error = 0.02618016970044934, max_hamiltonian_energy_error = -0.297514293539459, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9905362130227667, log_density = 1.6745289854221888, hamiltonian_energy = 1.2933628576640657, hamiltonian_energy_error = -0.06972954457295888, max_hamiltonian_energy_error = -0.20601696731872066, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9716129150974444, log_density = 3.4664317958427855, hamiltonian_energy = 1.275916258008663, hamiltonian_energy_error = -0.13258347623658873, max_hamiltonian_energy_error = -0.3344455519317022, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9961957750828943, log_density = 1.593664850997472, hamiltonian_energy = -0.54932877367903, hamiltonian_energy_error = -0.04739648092822546, max_hamiltonian_energy_error = -0.13496831344980675, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7987482984015346, log_density = -2.7958148706959918, hamiltonian_energy = 4.4393344440024, hamiltonian_energy_error = 0.4930290758774829, max_hamiltonian_energy_error = 0.4930290758774829, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -0.15320394780896507, hamiltonian_energy = 3.7943897998315324, hamiltonian_energy_error = -0.15047098560487004, max_hamiltonian_energy_error = -0.6325013605652003, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.986578256453695, log_density = 2.9781342033365306, hamiltonian_energy = 2.3038258287559525, hamiltonian_energy_error = -0.06345278235150476, max_hamiltonian_energy_error = -0.13470610286366824, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9198412233287077, log_density = 2.5589677964576403, hamiltonian_energy = -0.4875886051930083, hamiltonian_energy_error = 0.14054245036464685, max_hamiltonian_energy_error = -0.24908890310664278, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9684351015299538, log_density = 3.157180586753917, hamiltonian_energy = -0.24656285355000573, hamiltonian_energy_error = -0.08183056002591771, max_hamiltonian_energy_error = -0.3349807421772497, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9603319317020201, log_density = 3.0899099768853837, hamiltonian_energy = 1.0320390611384322, hamiltonian_energy_error = -0.1065061939938019, max_hamiltonian_energy_error = 0.21616273154317978, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9295868583514629, log_density = 3.3039163360527493, hamiltonian_energy = -0.46183977104128404, hamiltonian_energy_error = 0.1410842558647576, max_hamiltonian_energy_error = 0.17652406521415154, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9526575758724539, log_density = 4.961320135191661, hamiltonian_energy = -2.4815334575877204, hamiltonian_energy_error = -0.07373062039857681, max_hamiltonian_energy_error = 0.2117641461343518, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9672170260264854, log_density = 4.584705388377523, hamiltonian_energy = -3.0237147966500393, hamiltonian_energy_error = 0.014427733045701885, max_hamiltonian_energy_error = 0.12012732299181472, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9974818855793056, log_density = 4.3438038145113715, hamiltonian_energy = -3.711539358357836, hamiltonian_energy_error = 0.0004570127573026994, max_hamiltonian_energy_error = -0.0919641577345005, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9580097678262522, log_density = 3.3749464633205726, hamiltonian_energy = -1.3797978572890288, hamiltonian_energy_error = 0.05643646522824386, max_hamiltonian_energy_error = 0.10378030878110667, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9890408567241952, log_density = 3.8281720977661937, hamiltonian_energy = -2.8820428486681213, hamiltonian_energy_error = -0.025615174110226846, max_hamiltonian_energy_error = -0.12652389564087985, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9838397209054989, log_density = 3.171520943139857, hamiltonian_energy = -2.603411150420629, hamiltonian_energy_error = 0.06886220398465115, max_hamiltonian_energy_error = -0.09489049365267421, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7666081248565915, log_density = 0.6081861451311656, hamiltonian_energy = 1.7281214488412608, hamiltonian_energy_error = 0.4199861152748099, max_hamiltonian_energy_error = 0.7026952903926507, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.968617199077021, log_density = -1.0438169999874187, hamiltonian_energy = 2.1316760428901116, hamiltonian_energy_error = 0.0931528810609259, max_hamiltonian_energy_error = -0.66546457906191, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 0.9854049681542847, hamiltonian_energy = 3.3873688195604625, hamiltonian_energy_error = -0.19642892081314578, max_hamiltonian_energy_error = -0.7209078315143413, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = -1.1055380050697075, hamiltonian_energy = 3.1909099655095026, hamiltonian_energy_error = -0.04477510714871924, max_hamiltonian_energy_error = -0.5807389050644742, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9880321482376657, log_density = 0.9331544311441577, hamiltonian_energy = 4.5229921043780745, hamiltonian_energy_error = -0.31139201560969276, max_hamiltonian_energy_error = -0.36943572943599445, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.2788014052546662, log_density = -2.20674580275569, hamiltonian_energy = 5.618724452926079, hamiltonian_energy_error = 2.1133772855157043, max_hamiltonian_energy_error = 2.1133772855157043, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9780475728239529, log_density = -0.27612770396971253, hamiltonian_energy = 2.778309658611494, hamiltonian_energy_error = 0.011740520089825957, max_hamiltonian_energy_error = -0.2886120389142417, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7889183650423348, log_density = 2.3887588224070875, hamiltonian_energy = 6.270553860290015, hamiltonian_energy_error = -0.04558538024857839, max_hamiltonian_energy_error = 0.5796196869749579, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9832017568266743, log_density = 3.5520141827334726, hamiltonian_energy = -0.49376094718579155, hamiltonian_energy_error = 0.040865777922591384, max_hamiltonian_energy_error = -0.06807459723965037, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.984597183124297, log_density = 3.744366887003685, hamiltonian_energy = -2.0473179833626105, hamiltonian_energy_error = 0.01995912334139316, max_hamiltonian_energy_error = -0.1334453610535995, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9631742533421693, log_density = 3.9254229798158917, hamiltonian_energy = -1.7278736644280466, hamiltonian_energy_error = -0.007796134820649225, max_hamiltonian_energy_error = -0.1288998673963775, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9424926482838889, log_density = 3.31263775094669, hamiltonian_energy = -1.7092029195879763, hamiltonian_energy_error = 0.10848290522600035, max_hamiltonian_energy_error = 0.1385824217789371, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.972267857589172, log_density = 3.769039998660208, hamiltonian_energy = -0.5188245599775985, hamiltonian_energy_error = 0.015443395229717272, max_hamiltonian_energy_error = 0.21340968013367623, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9639591665110053, log_density = 1.823498214249506, hamiltonian_energy = 0.7526085284626203, hamiltonian_energy_error = 0.11240914356022502, max_hamiltonian_energy_error = 0.18992527562747363, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9675362111079714, log_density = 3.8606275145231805, hamiltonian_energy = -0.22291636720871422, hamiltonian_energy_error = -0.29165626967980574, max_hamiltonian_energy_error = -0.3360421225184522, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9682043331399991, log_density = 2.4253138878441156, hamiltonian_energy = -1.4155564543339934, hamiltonian_energy_error = 0.12459604280380021, max_hamiltonian_energy_error = 0.13287202600387515, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9812342814040654, log_density = 0.5738336311605927, hamiltonian_energy = 0.40735036394356494, hamiltonian_energy_error = -0.006021941814652321, max_hamiltonian_energy_error = -0.3127947402755118, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9961644869276687, log_density = 3.0599465945218363, hamiltonian_energy = -0.1258741934155565, hamiltonian_energy_error = -0.13556738361140075, max_hamiltonian_energy_error = -0.3109107874281526, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 1.0, log_density = 4.001375288397302, hamiltonian_energy = -2.1817431657905844, hamiltonian_energy_error = -0.1316155379303754, max_hamiltonian_energy_error = -0.17229572411435878, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9639399029042892, log_density = 4.1068745457234, hamiltonian_energy = -2.6550320332720334, hamiltonian_energy_error = 0.04318773721128322, max_hamiltonian_energy_error = 0.07676852729095351, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9033604379442081, log_density = 3.3677820944497086, hamiltonian_energy = -2.2706827147753144, hamiltonian_energy_error = 0.17284423546526684, max_hamiltonian_energy_error = 0.185697811094097, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.904250048776048, log_density = 3.2694994355270808, hamiltonian_energy = -1.6378738048804578, hamiltonian_energy_error = -0.054872019660938465, max_hamiltonian_energy_error = 0.33862434588857826, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9870683145718627, log_density = 1.6652173050815016, hamiltonian_energy = 1.4217038058756182, hamiltonian_energy_error = 0.01786295257233883, max_hamiltonian_energy_error = -0.16671737857100855, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9991460351481455, log_density = -0.5567101564510928, hamiltonian_energy = 1.5893545355877834, hamiltonian_energy_error = -0.14719922857405332, max_hamiltonian_energy_error = -0.22134125967675722, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9719782301305635, log_density = 3.698033259474675, hamiltonian_energy = 2.2733366557402874, hamiltonian_energy_error = -0.04452444915796461, max_hamiltonian_energy_error = -0.34966606770902997, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.665008279818713, log_density = 3.3923660722726794, hamiltonian_energy = 4.679435625957479, hamiltonian_energy_error = 0.24803077012846764, max_hamiltonian_energy_error = 0.7595010636365398, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9903291783322152, log_density = 1.708309581920144, hamiltonian_energy = 0.45420889411603893, hamiltonian_energy_error = 0.0010450106399502168, max_hamiltonian_energy_error = -0.25192414557242593, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9958965689938836, log_density = 2.283504537549536, hamiltonian_energy = 1.1493878946714764, hamiltonian_energy_error = -0.08114963582588386, max_hamiltonian_energy_error = -0.17380955779167406, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.956592828317693, log_density = 2.849387008011716, hamiltonian_energy = -0.8289738493279373, hamiltonian_energy_error = -0.17896411483918007, max_hamiltonian_energy_error = 0.21719046528794572, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.990060207272696, log_density = 3.347940802179064, hamiltonian_energy = -1.54514333887152, hamiltonian_energy_error = 0.003026345711151013, max_hamiltonian_energy_error = 0.06342489450463562, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9829803586615165, log_density = 3.234959724130986, hamiltonian_energy = -0.6889566871826931, hamiltonian_energy_error = -0.0026210666600072763, max_hamiltonian_energy_error = 0.09413206290795328, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9839666996231057, log_density = 4.854061470846814, hamiltonian_energy = -1.8849381577623858, hamiltonian_energy_error = -0.008775428388262618, max_hamiltonian_energy_error = 0.07536186743745743, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9135765428266752, log_density = 4.756953373235248, hamiltonian_energy = -2.0667556023696765, hamiltonian_energy_error = -0.032528823940272567, max_hamiltonian_energy_error = 0.1894042601909156, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9490191467402054, log_density = 3.893854346444453, hamiltonian_energy = -1.7855348030095275, hamiltonian_energy_error = 0.07657667551210778, max_hamiltonian_energy_error = 0.11748240325034898, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9047148646802206, log_density = 3.6620775517070108, hamiltonian_energy = 0.5063065116641745, hamiltonian_energy_error = -0.025906474182843198, max_hamiltonian_energy_error = 0.45325345188866295, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9465327098784574, log_density = 2.9745864632917574, hamiltonian_energy = 2.1063789298811884, hamiltonian_energy_error = 0.06431972040662615, max_hamiltonian_energy_error = -0.20533222997752576, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9629563654266917, log_density = 4.314525679188961, hamiltonian_energy = 1.6501449776737873, hamiltonian_energy_error = -0.8083970185144151, max_hamiltonian_energy_error = -0.8083970185144151, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9655228498628575, log_density = 5.31891475609876, hamiltonian_energy = -3.654795020999771, hamiltonian_energy_error = -0.057468669272294104, max_hamiltonian_energy_error = -0.11180647600382754, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9502014195435637, log_density = 2.742443584655092, hamiltonian_energy = 0.12160641789620907, hamiltonian_energy_error = -0.0015333369828862686, max_hamiltonian_energy_error = 0.15100902713056819, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7949234634605058, log_density = 2.5782035420142666, hamiltonian_energy = 0.8982989422583931, hamiltonian_energy_error = 0.08272941490477415, max_hamiltonian_energy_error = 0.4142882256751612, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9566313627596483, log_density = 3.309859470399685, hamiltonian_energy = -1.4593008044039424, hamiltonian_energy_error = -0.002830971020375106, max_hamiltonian_energy_error = -0.2877020087627957, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9937000966262121, log_density = 2.4855939810109717, hamiltonian_energy = -1.9173465617365597, hamiltonian_energy_error = 0.026430239972416336, max_hamiltonian_energy_error = -0.12253711131388845, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9956386577500538, log_density = 5.703983310780869, hamiltonian_energy = -1.5357405047015993, hamiltonian_energy_error = -0.1554134608437785, max_hamiltonian_energy_error = -0.17683192270038406, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9368881024823916, log_density = 3.9982127769390665, hamiltonian_energy = -2.8184058776081558, hamiltonian_energy_error = 0.07288670671221054, max_hamiltonian_energy_error = 0.13394627625602995, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8755283027020122, log_density = 1.074902682067485, hamiltonian_energy = -0.4805970493745958, hamiltonian_energy_error = 0.21261565915701308, max_hamiltonian_energy_error = 0.27199846100932445, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9715134885052052, log_density = 4.557290754599613, hamiltonian_energy = 3.608732199573751, hamiltonian_energy_error = -0.07945585372816044, max_hamiltonian_energy_error = -0.40713798197178974, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.966634198723316, log_density = 3.205773033273534, hamiltonian_energy = -2.134217850853843, hamiltonian_energy_error = 0.009970997281648408, max_hamiltonian_energy_error = -0.14912220972096701, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9025290875301931, log_density = 1.469440039244546, hamiltonian_energy = 0.28334842529283266, hamiltonian_energy_error = 0.1012120412781905, max_hamiltonian_energy_error = 0.34918043628352835, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9809625218139713, log_density = 5.0060548773574265, hamiltonian_energy = 0.31297276206497315, hamiltonian_energy_error = -0.1280982329682625, max_hamiltonian_energy_error = -0.1280982329682625, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9477543284479649, log_density = 4.7615129110750525, hamiltonian_energy = -3.561567275630342, hamiltonian_energy_error = 0.01790732363927061, max_hamiltonian_energy_error = 0.11919817133676869, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.973985394223327, log_density = 4.618567670685522, hamiltonian_energy = -3.3953695732385034, hamiltonian_energy_error = -0.05986412668514696, max_hamiltonian_energy_error = -0.07535093727721431, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9953613102830897, log_density = 4.388341018743134, hamiltonian_energy = -3.9104702685027095, hamiltonian_energy_error = 0.005782871389421906, max_hamiltonian_energy_error = 0.033975245573322876, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9938631884744328, log_density = 4.107241947406321, hamiltonian_energy = -2.7234043238181074, hamiltonian_energy_error = -0.00486432638692591, max_hamiltonian_energy_error = -0.05810246599705815, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9999587751935307, log_density = 5.502795429677679, hamiltonian_energy = -3.771567483678597, hamiltonian_energy_error = -0.050003248302391334, max_hamiltonian_energy_error = -0.050003248302391334, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9626987903934565, log_density = 4.897131833151832, hamiltonian_energy = -4.831694165004452, hamiltonian_energy_error = 0.04604248907673103, max_hamiltonian_energy_error = 0.04604248907673103, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9967938437355064, log_density = 4.873419996716294, hamiltonian_energy = -4.088081573608603, hamiltonian_energy_error = -0.0156822189429926, max_hamiltonian_energy_error = -0.0573913694049466, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9732671976928231, log_density = 4.7457630804268724, hamiltonian_energy = -3.18540450719414, hamiltonian_energy_error = -0.00048516856964564425, max_hamiltonian_energy_error = 0.07328388349329673, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.897098430463877, log_density = 3.777605275963161, hamiltonian_energy = -3.2371073605988694, hamiltonian_energy_error = 0.17960752724260542, max_hamiltonian_energy_error = 0.18303562763367687, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9984299433373555, log_density = 4.904349910460979, hamiltonian_energy = -3.3252218129612823, hamiltonian_energy_error = -0.13197987133939515, max_hamiltonian_energy_error = -0.18305652039005738, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 5.487337408767857, hamiltonian_energy = -4.807914767158929, hamiltonian_energy_error = -0.04452462652356459, max_hamiltonian_energy_error = -0.04452462652356459, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9657810112543425, log_density = 5.475631762459763, hamiltonian_energy = -4.002493444033832, hamiltonian_energy_error = 0.022365078023389273, max_hamiltonian_energy_error = 0.07951620215515076, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9868149965746706, log_density = 5.502665482435802, hamiltonian_energy = -3.878067639658033, hamiltonian_energy_error = -0.03770265078683099, max_hamiltonian_energy_error = 0.04940892373953698, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9362751024768156, log_density = 5.180160429146307, hamiltonian_energy = -4.253673484881761, hamiltonian_energy_error = 0.06078408796062895, max_hamiltonian_energy_error = 0.1311078768987679, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9692969369017801, log_density = 0.8561794452948419, hamiltonian_energy = -0.11283938594496368, hamiltonian_energy_error = 0.1589097140401896, max_hamiltonian_energy_error = 0.1589097140401896, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 4.532491248327494, hamiltonian_energy = -0.41158717882830853, hamiltonian_energy_error = -0.17568166128197182, max_hamiltonian_energy_error = -0.22237073769837057, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9498503858052674, log_density = 4.3853224110319875, hamiltonian_energy = -2.757202946607057, hamiltonian_energy_error = 0.021114641119554634, max_hamiltonian_energy_error = 0.1342910886412385, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9875884424215381, log_density = 4.806461436281243, hamiltonian_energy = -3.5173606373654023, hamiltonian_energy_error = -0.010427319843310912, max_hamiltonian_energy_error = -0.059315726701019145, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9341397675646661, log_density = 3.8223308119918133, hamiltonian_energy = -1.647789002670895, hamiltonian_energy_error = 0.0232923082152241, max_hamiltonian_energy_error = 0.13405605193084846, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8401977754038112, log_density = 0.5867225713766722, hamiltonian_energy = 2.9936527240412483, hamiltonian_energy_error = 0.40760007390224917, max_hamiltonian_energy_error = 0.40760007390224917, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9807197897511605, log_density = -1.2389497661501867, hamiltonian_energy = 5.5047093053028044, hamiltonian_energy_error = -0.10690220284591856, max_hamiltonian_energy_error = -1.1311191533901148, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.997047334471887, log_density = 1.5784390461955695, hamiltonian_energy = 3.687430893312021, hamiltonian_energy_error = -0.08176736722548306, max_hamiltonian_energy_error = -0.4343127665057027, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9425827390438389, log_density = 1.4635644259091336, hamiltonian_energy = 2.4610992084390304, hamiltonian_energy_error = -0.3609219160637993, max_hamiltonian_energy_error = -0.5827037687179182, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9852765412345696, log_density = 2.353906392044319, hamiltonian_energy = 0.2988650278910714, hamiltonian_energy_error = -0.13397554912967746, max_hamiltonian_energy_error = -0.16100138346197546, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9963582798316016, log_density = 4.175799232820231, hamiltonian_energy = -1.6269743828501175, hamiltonian_energy_error = -0.021597426970296763, max_hamiltonian_energy_error = -0.09614415970446721, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8531176332232164, log_density = 3.3445052290639588, hamiltonian_energy = -0.37477048680704605, hamiltonian_energy_error = 0.07332172797198666, max_hamiltonian_energy_error = 0.3205839498135288, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9361306248280482, log_density = 2.683074280003784, hamiltonian_energy = -0.418014613405306, hamiltonian_energy_error = 0.16546551203382887, max_hamiltonian_energy_error = 0.16546551203382887, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9661214386458777, log_density = 4.941847526975829, hamiltonian_energy = -0.36915528444520795, hamiltonian_energy_error = -0.2258511600537143, max_hamiltonian_energy_error = -0.2258511600537143, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8686003113730033, log_density = 2.381980746686983, hamiltonian_energy = -2.062477927274771, hamiltonian_energy_error = 0.16761981159131212, max_hamiltonian_energy_error = 0.18221562320625484, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9639396568810528, log_density = 4.238011071414473, hamiltonian_energy = -0.8105222445793703, hamiltonian_energy_error = -0.06525526811256999, max_hamiltonian_energy_error = 0.1468691728610949, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9732991882666345, log_density = 4.433279876229182, hamiltonian_energy = -2.8372261917927046, hamiltonian_energy_error = -0.10586442251930883, max_hamiltonian_energy_error = -0.10586442251930883, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 5.075026946297086, hamiltonian_energy = -3.963625635395548, hamiltonian_energy_error = -0.046092309659004016, max_hamiltonian_energy_error = -0.06656360148535301, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8824343329687964, log_density = 3.313660794079329, hamiltonian_energy = -0.31151560384546784, hamiltonian_energy_error = 0.06549185699950755, max_hamiltonian_energy_error = 0.21612010681374405, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9917136019568182, log_density = 4.059214544515704, hamiltonian_energy = -2.1848670553217198, hamiltonian_energy_error = -0.05006471184318828, max_hamiltonian_energy_error = -0.15036173649175177, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8817041546458777, log_density = 4.203414981198009, hamiltonian_energy = -2.033533555782777, hamiltonian_energy_error = -0.035421094310730705, max_hamiltonian_energy_error = 0.3188111889969023, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9553233309643632, log_density = 3.7817789793465177, hamiltonian_energy = -2.230266051194344, hamiltonian_energy_error = 0.016512131295192578, max_hamiltonian_energy_error = 0.11033293473002548, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9523935697597178, log_density = 4.870253466868864, hamiltonian_energy = -1.1796494711372487, hamiltonian_energy_error = -0.012186960845602446, max_hamiltonian_energy_error = 0.12268982304144971, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9595336326679269, log_density = 1.2945031637401634, hamiltonian_energy = -0.7583402498848083, hamiltonian_energy_error = 0.06371887906778373, max_hamiltonian_energy_error = 0.06857807702638197, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9244460783152346, log_density = 1.25485024425147, hamiltonian_energy = 0.7478460857069646, hamiltonian_energy_error = 0.12672327659410176, max_hamiltonian_energy_error = 0.18681658722539285, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9987950269443456, log_density = 2.757098218578843, hamiltonian_energy = 0.2981628122550024, hamiltonian_energy_error = -0.38599361913022134, max_hamiltonian_energy_error = -0.4339784397860975, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9973837797892451, log_density = 3.1510798030693294, hamiltonian_energy = -1.8792616025312634, hamiltonian_energy_error = -0.05346846098213387, max_hamiltonian_energy_error = -0.08627221207068025, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9512914595058507, log_density = 4.441360907783952, hamiltonian_energy = -2.1459931629796487, hamiltonian_energy_error = 0.09276733222599631, max_hamiltonian_energy_error = 0.11374614574791941, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9957722349223399, log_density = 4.644736990154172, hamiltonian_energy = -2.794456120091421, hamiltonian_energy_error = -0.10589369818699312, max_hamiltonian_energy_error = -0.10589369818699312, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.984964938683738, log_density = 4.940487957338069, hamiltonian_energy = -3.0116046736698645, hamiltonian_energy_error = -0.03196394803275959, max_hamiltonian_energy_error = -0.05267875673229927, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9221997521974651, log_density = 4.3179463381761085, hamiltonian_energy = -0.3446649053857649, hamiltonian_energy_error = 0.009881902353820582, max_hamiltonian_energy_error = 0.129904721628733, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9865900115098106, log_density = 2.8831858140711386, hamiltonian_energy = 0.6529748740932799, hamiltonian_energy_error = -0.05944799979280724, max_hamiltonian_energy_error = -0.14510313934583619, tree_depth = 5, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6838624045153838, log_density = -0.1278859814179505, hamiltonian_energy = 1.760505179069326, hamiltonian_energy_error = 0.4447535075016955, max_hamiltonian_energy_error = 0.5698230155925554, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.949231538577146, log_density = 1.7427161653302345, hamiltonian_energy = 2.0092025183811435, hamiltonian_energy_error = 0.060420017773948675, max_hamiltonian_energy_error = -0.4492838776927335, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9400975208643558, log_density = -1.5233035308701144, hamiltonian_energy = 4.870919835974747, hamiltonian_energy_error = 0.043557924939102044, max_hamiltonian_energy_error = -0.8957467847580665, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.985579249483353, log_density = 3.64283373470524, hamiltonian_energy = 2.626153361855714, hamiltonian_energy_error = -0.7267511751810805, max_hamiltonian_energy_error = -0.7525397351500596, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9825076777420354, log_density = 2.768549238764912, hamiltonian_energy = -0.1784008871850249, hamiltonian_energy_error = -0.009463193124481517, max_hamiltonian_energy_error = -0.18596628128980486, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8665766444973139, log_density = 3.3418242744575473, hamiltonian_energy = 1.1170748558531, hamiltonian_energy_error = 0.010119088126821829, max_hamiltonian_energy_error = 0.27844977966923956, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9745330930106009, log_density = 1.9668314440733958, hamiltonian_energy = -0.18868291886329058, hamiltonian_energy_error = 0.0012685192365908815, max_hamiltonian_energy_error = -0.09810433300007038, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9917134982324617, log_density = 3.75623064846976, hamiltonian_energy = -1.4239076058033833, hamiltonian_energy_error = -0.005870950029419841, max_hamiltonian_energy_error = 0.052718525851886966, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7924561694109526, log_density = 2.3609487809839713, hamiltonian_energy = 1.5368719810919842, hamiltonian_energy_error = 0.10509382453847138, max_hamiltonian_energy_error = 0.4254707782187994, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.973042184796986, log_density = 2.0385293514055665, hamiltonian_energy = -0.2988863724291142, hamiltonian_energy_error = 0.017840161299532475, max_hamiltonian_energy_error = 0.20001373009775625, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9766043001152038, log_density = 0.563723628460334, hamiltonian_energy = 1.2732909158289438, hamiltonian_energy_error = 0.02746185570054771, max_hamiltonian_energy_error = -0.2508238944033385, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9870613869682738, log_density = 4.209632627105519, hamiltonian_energy = 1.5518267628136826, hamiltonian_energy_error = -0.25488963930108355, max_hamiltonian_energy_error = -0.25488963930108355, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9918532581203716, log_density = 5.235951641787219, hamiltonian_energy = -1.4769833206957257, hamiltonian_energy_error = -0.15346394233248573, max_hamiltonian_energy_error = -0.15346394233248573, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9808932322940787, log_density = 5.100127062404564, hamiltonian_energy = -3.569709055895024, hamiltonian_energy_error = 0.0035151839643998706, max_hamiltonian_energy_error = 0.05588598447489579, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9936024643222697, log_density = 5.090931684862483, hamiltonian_energy = -4.629363925498153, hamiltonian_energy_error = -0.0022000956495427104, max_hamiltonian_energy_error = 0.0187719024699895, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9423346735121774, log_density = 3.2681276910256996, hamiltonian_energy = -2.1741915966482876, hamiltonian_energy_error = 0.07199411449064463, max_hamiltonian_energy_error = 0.10754813591193813, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9988642923319375, log_density = 2.29321913469367, hamiltonian_energy = -1.5063220889662705, hamiltonian_energy_error = 0.016974956911727235, max_hamiltonian_energy_error = -0.14714543611201814, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9582518897358867, log_density = 4.828067117312745, hamiltonian_energy = 0.2631217310291225, hamiltonian_energy_error = -0.0558832862276053, max_hamiltonian_energy_error = 0.34294408523178355, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.882298548643318, log_density = 3.5064726932971553, hamiltonian_energy = -1.1075597754696034, hamiltonian_energy_error = 0.06322431648772087, max_hamiltonian_energy_error = 0.22018406132265178, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9972847916348978, log_density = 2.5562293918547905, hamiltonian_energy = -2.014581539106028, hamiltonian_energy_error = 0.027110002450935866, max_hamiltonian_energy_error = -0.07943382767740914, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9895979119438354, log_density = 3.187174281032016, hamiltonian_energy = 0.05759371080750819, hamiltonian_energy_error = -0.03186163849081591, max_hamiltonian_energy_error = -0.27679408130042926, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9768843556336149, log_density = 3.013699929596255, hamiltonian_energy = -1.8266125979473222, hamiltonian_energy_error = 0.0392699412143771, max_hamiltonian_energy_error = -0.07908396764531656, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9412860973783618, log_density = 2.1907882468051616, hamiltonian_energy = 0.8290799675239007, hamiltonian_energy_error = 0.07241752046351158, max_hamiltonian_energy_error = 0.20579214987634464, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.998312608978951, log_density = 3.563971203435372, hamiltonian_energy = -1.4121432693626401, hamiltonian_energy_error = -0.2488749714232279, max_hamiltonian_energy_error = -0.2488749714232279, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9812113355832502, log_density = 4.130642327138011, hamiltonian_energy = -2.387015550355306, hamiltonian_energy_error = 0.025446522502345914, max_hamiltonian_energy_error = 0.06576734908175963, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9083464376191276, log_density = 2.801238557144572, hamiltonian_energy = -2.108805094004959, hamiltonian_energy_error = 0.20054124789969308, max_hamiltonian_energy_error = 0.20054124789969308, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.996685196030047, log_density = 4.730955257810022, hamiltonian_energy = -1.3021955344715326, hamiltonian_energy_error = -0.33156659426561585, max_hamiltonian_energy_error = -0.33156659426561585, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9406897626467159, log_density = 3.6271471348980704, hamiltonian_energy = -1.381845796877189, hamiltonian_energy_error = 0.09250308621007886, max_hamiltonian_energy_error = 0.10692618010249011, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9988814713140229, log_density = 2.900947903546438, hamiltonian_energy = -2.564345069569034, hamiltonian_energy_error = 0.01692027416537023, max_hamiltonian_energy_error = -0.08920118863567739, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9669878314021119, log_density = 3.4942405538900285, hamiltonian_energy = 0.4471624894295072, hamiltonian_energy_error = -0.14075778188679688, max_hamiltonian_energy_error = -0.24706262412827718, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7149441667626574, log_density = 3.0636575790043867, hamiltonian_energy = -0.424826614850661, hamiltonian_energy_error = 0.45471375783770673, max_hamiltonian_energy_error = 0.5098731457101784, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9915747806376131, log_density = 4.765625205545831, hamiltonian_energy = -2.380229469755797, hamiltonian_energy_error = -0.27899007899282013, max_hamiltonian_energy_error = -0.428031532994146, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9837248965892694, log_density = 3.923147267271487, hamiltonian_energy = -2.5063699645105144, hamiltonian_energy_error = 0.060615843027887806, max_hamiltonian_energy_error = -0.1137499269233544, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6363390111412327, log_density = -1.3342054501666967, hamiltonian_energy = 1.9337305340800708, hamiltonian_energy_error = 0.6298570118186533, max_hamiltonian_energy_error = 0.6298570118186533, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9896702784207067, log_density = 1.7646823789410249, hamiltonian_energy = 1.9291215554960153, hamiltonian_energy_error = -0.30853525367919943, max_hamiltonian_energy_error = -0.7446806010737395, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 0.9933470763422265, log_density = 1.7227469147841994, hamiltonian_energy = 0.8274134354856213, hamiltonian_energy_error = 0.12932419107642934, max_hamiltonian_energy_error = -0.2683879556615767, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9697966355090348, log_density = 3.6570509247998295, hamiltonian_energy = 0.8723985583559584, hamiltonian_energy_error = -0.03444935436564878, max_hamiltonian_energy_error = -0.3500608998254182, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9880897040845048, log_density = 4.678647389990957, hamiltonian_energy = -3.026628054564432, hamiltonian_energy_error = -0.21112539888546156, max_hamiltonian_energy_error = -0.2851224648703812, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8269999936247587, log_density = 3.335364905221029, hamiltonian_energy = 0.04989521720605694, hamiltonian_energy_error = 0.10486768482588005, max_hamiltonian_energy_error = 0.34305027324259685, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9567209778467927, log_density = 2.3518872123993724, hamiltonian_energy = -0.5262715266141131, hamiltonian_energy_error = 0.03577238388916815, max_hamiltonian_energy_error = 0.20788264401397638, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9361950635359988, log_density = 3.870233110530111, hamiltonian_energy = -0.361112263158621, hamiltonian_energy_error = -0.07458040761495832, max_hamiltonian_energy_error = 0.14706221739341974, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9992013383011874, log_density = 4.0168036009498165, hamiltonian_energy = -2.842537690496396, hamiltonian_energy_error = -0.059022262200170594, max_hamiltonian_energy_error = -0.12332127980488972, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9636841452206871, log_density = 4.553107806031836, hamiltonian_energy = -3.0346231278393363, hamiltonian_energy_error = 0.06300259362934302, max_hamiltonian_energy_error = 0.1075108080297067, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.996272259380369, log_density = 3.7535651110966555, hamiltonian_energy = -2.8705289040766275, hamiltonian_energy_error = -0.0391854971418204, max_hamiltonian_energy_error = -0.10059716711023281, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9910921382672709, log_density = 4.5725801635634316, hamiltonian_energy = -1.7952153601671132, hamiltonian_energy_error = -0.07342521276959069, max_hamiltonian_energy_error = -0.09067330208709068, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9276068397197034, log_density = 2.222357005919207, hamiltonian_energy = 0.30574868014707723, hamiltonian_energy_error = 0.07713906493559941, max_hamiltonian_energy_error = 0.13688732073777699, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9725145161333343, log_density = 1.4728622136067813, hamiltonian_energy = 0.6013060821874348, hamiltonian_energy_error = -0.012648830723436255, max_hamiltonian_energy_error = 0.11923780491968672, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6134869126049531, log_density = -5.727872905283693, hamiltonian_energy = 6.8811681184280316, hamiltonian_energy_error = 0.6432571390969599, max_hamiltonian_energy_error = 0.9066351866762288, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9456800453965969, log_density = -4.392830004875041, hamiltonian_energy = 11.793950365210282, hamiltonian_energy_error = -0.035273188528428534, max_hamiltonian_energy_error = -1.4081270032721758, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.4408424507998232, log_density = -3.6706682918491724, hamiltonian_energy = 8.094070399238433, hamiltonian_energy_error = 0.06456664957970659, max_hamiltonian_energy_error = 3.8639886753100825, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8160172371456897, log_density = -2.8155925252736473, hamiltonian_energy = 5.840946297044772, hamiltonian_energy_error = 0.045419227632068626, max_hamiltonian_energy_error = 1.518725063792865, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 21, is_accept = true, acceptance_rate = 0.9562151741872992, log_density = -0.7666638984343326, hamiltonian_energy = 5.352671814351012, hamiltonian_energy_error = -0.08254732789146324, max_hamiltonian_energy_error = -0.6969948287767895, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9493271577703144, log_density = 2.7356363761352185, hamiltonian_energy = 2.0951593118167917, hamiltonian_energy_error = -0.2080802449616712, max_hamiltonian_energy_error = 0.22243100068997723, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9254288460191361, log_density = 4.737102104554646, hamiltonian_energy = 0.6305685548700586, hamiltonian_energy_error = 0.018092509524866518, max_hamiltonian_energy_error = 0.16785415272688864, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9138652353212772, log_density = 1.7081737927624872, hamiltonian_energy = 0.9026517271448813, hamiltonian_energy_error = 0.08961402268979368, max_hamiltonian_energy_error = 0.12065776216656854, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9920014525721769, log_density = 1.98041012572547, hamiltonian_energy = -0.0853405131352809, hamiltonian_energy_error = 0.049615668413457215, max_hamiltonian_energy_error = -0.09389580876095005, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9885581958779934, log_density = 4.701359880040842, hamiltonian_energy = 0.21512060985925885, hamiltonian_energy_error = -0.2737564184374235, max_hamiltonian_energy_error = -0.2737564184374235, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9878758899884271, log_density = 4.394357218320408, hamiltonian_energy = -3.241952169871304, hamiltonian_energy_error = 0.007495145190965502, max_hamiltonian_energy_error = 0.038125095405582066, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.954484908081917, log_density = 3.5148934680008654, hamiltonian_energy = -1.8441742705644772, hamiltonian_energy_error = 0.09346085119104242, max_hamiltonian_energy_error = 0.15708155522791212, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9589224063806614, log_density = 3.224271106578609, hamiltonian_energy = -1.7062302259935218, hamiltonian_energy_error = 0.08172964333326638, max_hamiltonian_energy_error = -0.24895044041670467, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9953571727124203, log_density = 5.2957858348421105, hamiltonian_energy = -2.747937837056864, hamiltonian_energy_error = -0.22047485179087234, max_hamiltonian_energy_error = -0.23904177775337798, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9429381501048477, log_density = 1.3474471444870915, hamiltonian_energy = -1.001064820146191, hamiltonian_energy_error = 0.10528022063604281, max_hamiltonian_energy_error = 0.11171641705335023, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9481582297599229, log_density = 4.065616445983068, hamiltonian_energy = 1.620113383977186, hamiltonian_energy_error = -0.017480183831480645, max_hamiltonian_energy_error = 0.21522282839617723, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9463420603610717, log_density = 3.7859485066783893, hamiltonian_energy = -0.5605889084427571, hamiltonian_energy_error = 0.025043188550735618, max_hamiltonian_energy_error = 0.14490374925338068, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9968109285872815, log_density = 2.5844867685614474, hamiltonian_energy = 0.2388238964770033, hamiltonian_energy_error = -0.2173041008828993, max_hamiltonian_energy_error = -0.26437350572575635, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7495580621269783, log_density = 2.545667709540867, hamiltonian_energy = 1.2311759823528674, hamiltonian_energy_error = 0.25432920130888004, max_hamiltonian_energy_error = 0.4909702041433157, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 5.266833797728836, hamiltonian_energy = -1.5738791541448238, hamiltonian_energy_error = -0.18317526490310354, max_hamiltonian_energy_error = -0.18317526490310354, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9984828267631871, log_density = 5.262140652213182, hamiltonian_energy = -5.0853492709775665, hamiltonian_energy_error = 0.006111492211458014, max_hamiltonian_energy_error = -0.019958135362519336, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9723088165662679, log_density = 1.5110800187592233, hamiltonian_energy = -0.2844343751097298, hamiltonian_energy_error = 0.021895580938390724, max_hamiltonian_energy_error = 0.10208327354745128, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8389776854734153, log_density = 1.3892572999588317, hamiltonian_energy = 1.6916693407827488, hamiltonian_energy_error = -0.0258914647336006, max_hamiltonian_energy_error = 0.2990154918751027, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9652768808696318, log_density = 4.1443568769490575, hamiltonian_energy = 0.16312038227980885, hamiltonian_energy_error = 0.0035906700017238613, max_hamiltonian_energy_error = 0.11296382396116256, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8488314455275652, log_density = 1.8549246398032455, hamiltonian_energy = 0.7242517694515969, hamiltonian_energy_error = 0.334339853314217, max_hamiltonian_energy_error = 0.47657437145580306, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9640273591148071, log_density = 1.8028508951838624, hamiltonian_energy = 1.3291919312731117, hamiltonian_energy_error = 0.08348295654888016, max_hamiltonian_energy_error = -0.28065140412581613, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 1.441778073565379, hamiltonian_energy = 1.3552054145607575, hamiltonian_energy_error = -0.2729600926486544, max_hamiltonian_energy_error = -0.40425285195438976, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.99433277828011, log_density = 4.798060397479688, hamiltonian_energy = 0.0914890714188159, hamiltonian_energy_error = -0.07752612960460614, max_hamiltonian_energy_error = -0.19371727178425702, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8028844669540037, log_density = 0.8063827202457823, hamiltonian_energy = 0.5134652285780066, hamiltonian_energy_error = 0.45989182252391747, max_hamiltonian_energy_error = 0.45989182252391747, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8969889061422681, log_density = 3.101499321090543, hamiltonian_energy = 1.9560321312640472, hamiltonian_energy_error = -0.19423839774716178, max_hamiltonian_energy_error = 0.6780800851819682, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9895704695614865, log_density = 4.122904374187101, hamiltonian_energy = -2.674636360042843, hamiltonian_energy_error = -0.18310675354612238, max_hamiltonian_energy_error = -0.2503322561444139, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8611887316066935, log_density = 4.029316410525553, hamiltonian_energy = -0.3933058666793974, hamiltonian_energy_error = -0.016846657229195205, max_hamiltonian_energy_error = 0.3367434293544964, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9192706522189532, log_density = 4.5170595233033985, hamiltonian_energy = 0.9787006488891787, hamiltonian_energy_error = -0.032273412231818455, max_hamiltonian_energy_error = 0.21646934356467207, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9881492660895587, log_density = 4.620309067128817, hamiltonian_energy = -3.2845804358536785, hamiltonian_energy_error = -0.023180403712946163, max_hamiltonian_energy_error = -0.05908027036521579, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8838916734048622, log_density = 2.434696209104718, hamiltonian_energy = 1.4095365127086619, hamiltonian_energy_error = 0.2622969234456103, max_hamiltonian_energy_error = 0.2622969234456103, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 1.5929844670847046, hamiltonian_energy = -0.7670221275319545, hamiltonian_energy_error = -0.054423164050324435, max_hamiltonian_energy_error = -0.2862063076809467, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9952179129712364, log_density = 2.432500589229944, hamiltonian_energy = -0.1048222969915944, hamiltonian_energy_error = 0.030971160532972553, max_hamiltonian_energy_error = -0.2158199389846407, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9406581569548912, log_density = 4.825997116446242, hamiltonian_energy = -1.1449002113279008, hamiltonian_energy_error = -0.22108558825447688, max_hamiltonian_energy_error = -0.22108558825447688, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9669721218460595, log_density = 3.5768696565212634, hamiltonian_energy = -3.1040365760688946, hamiltonian_energy_error = 0.06065683615125872, max_hamiltonian_energy_error = 0.0918828639708833, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9321640666194955, log_density = 1.7381760170117708, hamiltonian_energy = -0.6816642771515793, hamiltonian_energy_error = 0.16815621131977454, max_hamiltonian_energy_error = 0.19072790648027416, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9266606387845362, log_density = 0.9844779742204253, hamiltonian_energy = 0.7161726584361696, hamiltonian_energy_error = 0.3746164061599797, max_hamiltonian_energy_error = -0.3949444740166612, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9376527698744145, log_density = 2.75214179619132, hamiltonian_energy = 0.6560267934809332, hamiltonian_energy_error = -0.13440677649614208, max_hamiltonian_energy_error = -0.619729454465707, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9386206979107814, log_density = 1.746007820401971, hamiltonian_energy = 1.7685444365156169, hamiltonian_energy_error = -0.12026822546810134, max_hamiltonian_energy_error = -0.46133835576081506, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8211917575072742, log_density = -0.6579867497033902, hamiltonian_energy = 2.6690662285711144, hamiltonian_energy_error = 0.2738837303570194, max_hamiltonian_energy_error = 0.45017726899851596, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 1.000298286905453, hamiltonian_energy = 1.8206153149785052, hamiltonian_energy_error = -0.058401457478717056, max_hamiltonian_energy_error = -0.25291618876386623, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9183567542709471, log_density = 3.036028946598993, hamiltonian_energy = 1.4009392851279472, hamiltonian_energy_error = -0.22849893672262045, max_hamiltonian_energy_error = -0.3513916365619023, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9923569201965525, log_density = 4.484934051662391, hamiltonian_energy = -0.543553267259659, hamiltonian_energy_error = -0.05196624223993673, max_hamiltonian_energy_error = -0.15190497990735796, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8415339550071285, log_density = 1.4175458385379294, hamiltonian_energy = 1.1165134229468818, hamiltonian_energy_error = 0.2205823691744313, max_hamiltonian_energy_error = 0.34603323418352927, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9855722719919481, log_density = 2.964100117907847, hamiltonian_energy = 0.10145501676307545, hamiltonian_energy_error = -0.15004798393320873, max_hamiltonian_energy_error = -0.3881683709831074, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9788638747831173, log_density = 3.3634669840941616, hamiltonian_energy = -1.8616957796690066, hamiltonian_energy_error = 0.017980451278495346, max_hamiltonian_energy_error = -0.0852551501183898, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9962083760992387, log_density = 3.5662575946192376, hamiltonian_energy = -2.5384986665489744, hamiltonian_energy_error = -0.038954578214576596, max_hamiltonian_energy_error = -0.14171196585432444, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9956189229141088, log_density = 4.600685804725352, hamiltonian_energy = -1.6430298204167175, hamiltonian_energy_error = -0.024067666234516727, max_hamiltonian_energy_error = -0.08708980550277645, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9983541841166688, log_density = 4.3684443286954995, hamiltonian_energy = -3.092846730254264, hamiltonian_energy_error = -0.0677171791402218, max_hamiltonian_energy_error = -0.08053715042109477, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9725650966999505, log_density = 3.8491582938225264, hamiltonian_energy = -2.0087926559785982, hamiltonian_energy_error = 0.02476239990984741, max_hamiltonian_energy_error = 0.07333259442145335, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9926239557435953, log_density = 5.222470091717218, hamiltonian_energy = -2.9034378557954996, hamiltonian_energy_error = -0.03989827111911559, max_hamiltonian_energy_error = -0.03989827111911559, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8642093969626318, log_density = 4.334547184289449, hamiltonian_energy = -2.4810628049999277, hamiltonian_energy_error = 0.07444835343047629, max_hamiltonian_energy_error = 0.22244773718250332, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9653085605441908, log_density = 3.063810764470208, hamiltonian_energy = -1.1464667461432103, hamiltonian_energy_error = 0.032539518700670955, max_hamiltonian_energy_error = 0.12869576270193162, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 5.187441456660899, hamiltonian_energy = -2.2268315281785127, hamiltonian_energy_error = -0.08311157862877527, max_hamiltonian_energy_error = -0.09299761776800386, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6359195454557387, log_density = 1.4502813999717326, hamiltonian_energy = 0.2525464920722027, hamiltonian_energy_error = 0.654892330117621, max_hamiltonian_energy_error = 0.7018098246375939, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8660777629590034, log_density = -0.2364683500242144, hamiltonian_energy = 4.373030633573304, hamiltonian_energy_error = 0.17718042015663915, max_hamiltonian_energy_error = -0.9450373976001787, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 1.0, log_density = 1.7668019679553844, hamiltonian_energy = 1.3548428847183072, hamiltonian_energy_error = -0.5478580619822957, max_hamiltonian_energy_error = -0.6371846124692759, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9752825011372566, log_density = 3.4774846880839654, hamiltonian_energy = -0.6383602811573779, hamiltonian_energy_error = 0.0658866558073199, max_hamiltonian_energy_error = -0.1885454595506677, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.996117992973008, log_density = 3.6433435037069923, hamiltonian_energy = -2.6019886195717348, hamiltonian_energy_error = 0.0027529996502240195, max_hamiltonian_energy_error = -0.25734905484884063, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9928660578542509, log_density = 4.114856966450031, hamiltonian_energy = -2.221206687539367, hamiltonian_energy_error = -0.27445176287917783, max_hamiltonian_energy_error = -0.30171773017873726, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9548668969683054, log_density = 4.318689979653641, hamiltonian_energy = -2.9412633744560024, hamiltonian_energy_error = 0.0820565181076387, max_hamiltonian_energy_error = 0.09312853290279577, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9962368712510984, log_density = 4.26273933721178, hamiltonian_energy = -2.929140952386766, hamiltonian_energy_error = -0.08488219978000089, max_hamiltonian_energy_error = -0.08488219978000089, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8841635683319723, log_density = 2.9602996176350587, hamiltonian_energy = -0.3008677750333679, hamiltonian_energy_error = 0.03300231792798103, max_hamiltonian_energy_error = 0.2729529550673131, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9949948068231534, log_density = 4.877424656573362, hamiltonian_energy = -1.0975179617640785, hamiltonian_energy_error = -0.0067840383562665085, max_hamiltonian_energy_error = -0.05975919179338818, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9808688630093165, log_density = 3.8070035629843293, hamiltonian_energy = -2.483030469861154, hamiltonian_energy_error = 0.03363195372299588, max_hamiltonian_energy_error = 0.06250141763058936, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9008339751182876, log_density = 2.595040871925683, hamiltonian_energy = -1.5420681418025544, hamiltonian_energy_error = 0.12281564633252251, max_hamiltonian_energy_error = 0.20588996066453635, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.999722177483775, log_density = 3.303891353538023, hamiltonian_energy = -1.4658711306961651, hamiltonian_energy_error = -0.10312527526114601, max_hamiltonian_energy_error = -0.2960687710651926, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 39, is_accept = true, acceptance_rate = 0.9626694284969204, log_density = 3.6274193707158204, hamiltonian_energy = 0.7993064979132605, hamiltonian_energy_error = 0.05668181932673466, max_hamiltonian_energy_error = -0.3386917319598588, tree_depth = 5, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9787376747679131, log_density = 3.537904747991794, hamiltonian_energy = -2.369147620011704, hamiltonian_energy_error = 0.029688999539199568, max_hamiltonian_energy_error = -0.1846226960835522, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.997583437995316, log_density = 3.3731097849953073, hamiltonian_energy = -2.7237793284027068, hamiltonian_energy_error = 0.002072115844372835, max_hamiltonian_energy_error = -0.17065401934954227, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7109161789115864, log_density = 2.437012417333083, hamiltonian_energy = 1.2788988726806028, hamiltonian_energy_error = 0.20139233496598186, max_hamiltonian_energy_error = 0.625323905700838, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 5.092980469996029, hamiltonian_energy = -2.25168476907212, hamiltonian_energy_error = -0.21146942851811001, max_hamiltonian_energy_error = -0.21146942851811001, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9530367915517485, log_density = 4.613719302903116, hamiltonian_energy = -3.3223039575818767, hamiltonian_energy_error = 0.024805945524644102, max_hamiltonian_energy_error = 0.09560161837833059, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8984665925605909, log_density = 3.0889594311938886, hamiltonian_energy = -0.8034702347370071, hamiltonian_energy_error = 0.1298706096009714, max_hamiltonian_energy_error = 0.24498225324092648, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9899722896044462, log_density = 1.7360173371992573, hamiltonian_energy = -0.780543682405582, hamiltonian_energy_error = 0.10697174529573905, max_hamiltonian_energy_error = -0.18164578474328508, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.882577014250239, log_density = -0.04157873852337701, hamiltonian_energy = 3.211985627177332, hamiltonian_energy_error = 0.25144452687685925, max_hamiltonian_energy_error = 0.26626030710983883, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9912318994153316, log_density = 4.377731674032683, hamiltonian_energy = 0.6669849728885104, hamiltonian_energy_error = -0.29866821131711796, max_hamiltonian_energy_error = -0.4004611949610821, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.997230754323717, log_density = 4.836162729870221, hamiltonian_energy = -3.852906843135825, hamiltonian_energy_error = -0.09967460263567451, max_hamiltonian_energy_error = -0.15388253109071792, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9846265652519441, log_density = 4.898764776679844, hamiltonian_energy = -4.124406802211688, hamiltonian_energy_error = 0.006439872015205239, max_hamiltonian_energy_error = -0.0700991062102938, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.972038522436564, log_density = 5.6946765111709094, hamiltonian_energy = -2.5876114132952734, hamiltonian_energy_error = -0.07647781707949264, max_hamiltonian_energy_error = -0.07647781707949264, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9888317864806812, log_density = 5.581260783904149, hamiltonian_energy = -5.524198884837334, hamiltonian_energy_error = 0.011536533556617101, max_hamiltonian_energy_error = 0.015096787754959706, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9827284744670932, log_density = 5.336915812937349, hamiltonian_energy = -5.070824557628985, hamiltonian_energy_error = 0.01959297983488284, max_hamiltonian_energy_error = 0.03753885564007842, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8141023968395025, log_density = 3.471600013502245, hamiltonian_energy = 0.3856903664674167, hamiltonian_energy_error = 0.03706711131183482, max_hamiltonian_energy_error = 0.479688071430469, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9588481687573924, log_density = 4.163761992512409, hamiltonian_energy = -2.5944385902734792, hamiltonian_energy_error = 0.009559577290357169, max_hamiltonian_energy_error = 0.0946188521589919, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8550030675264406, log_density = 0.6164224858633052, hamiltonian_energy = -0.08566040348304194, hamiltonian_energy_error = 0.1732253255353826, max_hamiltonian_energy_error = 0.22615030225139776, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9906650582833753, log_density = 3.17701163683913, hamiltonian_energy = 1.7706084598285532, hamiltonian_energy_error = -0.21660528752691288, max_hamiltonian_energy_error = -0.2793854495799719, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9993641819665111, log_density = 3.947726805241743, hamiltonian_energy = -2.209249860274059, hamiltonian_energy_error = -0.02319576894968378, max_hamiltonian_energy_error = -0.11810957932820054, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9620549312243072, log_density = 2.846839368216851, hamiltonian_energy = -2.030405422931486, hamiltonian_energy_error = 0.07731643551620193, max_hamiltonian_energy_error = 0.14209433558586326, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9933013113870529, log_density = 2.7384232451216413, hamiltonian_energy = -1.4002933990024409, hamiltonian_energy_error = -0.026408256417025378, max_hamiltonian_energy_error = -0.2394465850504739, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9646908080538846, log_density = 1.8736423855594762, hamiltonian_energy = 1.073752375207572, hamiltonian_energy_error = -0.062491125511416445, max_hamiltonian_energy_error = -0.33451794844451754, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9547666171670096, log_density = 1.0673522629779804, hamiltonian_energy = 2.3196886577171902, hamiltonian_energy_error = 0.0570097112480763, max_hamiltonian_energy_error = -0.25539509971472274, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.954594812116844, log_density = -1.9166506519129598, hamiltonian_energy = 3.9311643585688985, hamiltonian_energy_error = 0.2182715032463105, max_hamiltonian_energy_error = -0.3706516583276618, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 1.1499994335399855, hamiltonian_energy = 2.149045063253108, hamiltonian_energy_error = -0.6013902383331104, max_hamiltonian_energy_error = -0.6013902383331104, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9819003149613205, log_density = 3.6077142131375197, hamiltonian_energy = -0.19120191926327834, hamiltonian_energy_error = 0.037743902197390655, max_hamiltonian_energy_error = 0.08547801661439552, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9995982802564245, log_density = 4.427126349816497, hamiltonian_energy = -3.2918573191031903, hamiltonian_energy_error = 0.006044024527139591, max_hamiltonian_energy_error = -0.08442875054356547, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9027490464435944, log_density = 3.1605022294761262, hamiltonian_energy = -1.7732851968993255, hamiltonian_energy_error = 0.2265803951933918, max_hamiltonian_energy_error = 0.2523549024083871, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9895520930526609, log_density = 4.615534899433937, hamiltonian_energy = -1.8877254261011984, hamiltonian_energy_error = -0.32721097817430644, max_hamiltonian_energy_error = -0.42077745639172326, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.873425828730195, log_density = 4.738143165970208, hamiltonian_energy = -1.3381579781501243, hamiltonian_energy_error = -0.014311311383381486, max_hamiltonian_energy_error = 0.3095079422567011, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9447053929851222, log_density = 4.257959919921461, hamiltonian_energy = -3.1841433050235715, hamiltonian_energy_error = 0.0481253003350397, max_hamiltonian_energy_error = 0.11822011286978995, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9175719784069118, log_density = 3.223128086068547, hamiltonian_energy = -0.9146622446806729, hamiltonian_energy_error = 0.032227971665145905, max_hamiltonian_energy_error = 0.21545525533266163, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8689896524992538, log_density = 1.7869827964040104, hamiltonian_energy = 0.7999274947949062, hamiltonian_energy_error = 0.13774496454896124, max_hamiltonian_energy_error = 0.42130363872255794, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 2.396560780610649, hamiltonian_energy = 0.7008026651722012, hamiltonian_energy_error = -0.032852433600265574, max_hamiltonian_energy_error = -0.24584481166606542, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9978965112539271, log_density = 3.8283349882437285, hamiltonian_energy = -1.3826319205954545, hamiltonian_energy_error = -0.07078397702816486, max_hamiltonian_energy_error = -0.21312508212202474, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9605920710420174, log_density = 4.487121401148389, hamiltonian_energy = -2.3367765023900096, hamiltonian_energy_error = 0.030142512386305942, max_hamiltonian_energy_error = 0.06506596327564917, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9807951152670874, log_density = 3.291622890429938, hamiltonian_energy = -1.925606633850441, hamiltonian_energy_error = 0.010145507440178614, max_hamiltonian_energy_error = -0.07127961074055067, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9310883513864433, log_density = 4.327781994489477, hamiltonian_energy = -1.0849165498641637, hamiltonian_energy_error = -0.0012138318710674945, max_hamiltonian_energy_error = 0.2166307395363467, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9799483646332483, log_density = 4.406654903135763, hamiltonian_energy = -3.115246689633629, hamiltonian_energy_error = 0.04342390897034365, max_hamiltonian_energy_error = -0.08464113249536043, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8142332652424058, log_density = 1.533869494250263, hamiltonian_energy = 0.33975038168977467, hamiltonian_energy_error = 0.45080731757754333, max_hamiltonian_energy_error = 0.8152500231949062, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9894291373424675, log_density = 2.5671176097870774, hamiltonian_energy = -1.1601262250222888, hamiltonian_energy_error = -0.15550293251018354, max_hamiltonian_energy_error = -0.6287098459668097, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 1.8105871006792258, hamiltonian_energy = 1.9560487967375, hamiltonian_energy_error = -0.06071388430421276, max_hamiltonian_energy_error = -0.5317545467706424, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9742645127494647, log_density = 1.39601248240713, hamiltonian_energy = -0.16675780995863176, hamiltonian_energy_error = -0.004919895989142109, max_hamiltonian_energy_error = -0.5795087792406397, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9976495517907816, log_density = 3.6558006634168017, hamiltonian_energy = -0.24881402367633365, hamiltonian_energy_error = -0.4123243878744771, max_hamiltonian_energy_error = -0.4123243878744771, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7590499879237298, log_density = 2.6849878132637883, hamiltonian_energy = 1.8966899350791904, hamiltonian_energy_error = 0.17878435449028363, max_hamiltonian_energy_error = 0.47768354869970464, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9362924960343392, log_density = 3.43367224254731, hamiltonian_energy = -0.9343615680751771, hamiltonian_energy_error = -0.07826230685043178, max_hamiltonian_energy_error = -0.26692214920514523, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9151376630578474, log_density = 3.8876531217819625, hamiltonian_energy = 0.11145943752769139, hamiltonian_energy_error = -0.07777623600340267, max_hamiltonian_energy_error = 0.2359644043079968, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9998707304722778, log_density = 4.614008204362422, hamiltonian_energy = -3.1870447579023717, hamiltonian_energy_error = -0.03756854952309885, max_hamiltonian_energy_error = -0.10280186180159934, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9938931893980397, log_density = 4.82397132166406, hamiltonian_energy = -3.2634032919995777, hamiltonian_energy_error = 0.01288223848501957, max_hamiltonian_energy_error = -0.039977128218193325, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9608761885042296, log_density = 3.9686651023637562, hamiltonian_energy = -2.672159619343432, hamiltonian_energy_error = 0.029931569605619046, max_hamiltonian_energy_error = 0.0739632181469756, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9589303657608904, log_density = 4.6463714220184364, hamiltonian_energy = -2.0461461434143526, hamiltonian_energy_error = -0.05319259841860591, max_hamiltonian_energy_error = 0.11671074698783124, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9825690150386213, log_density = 4.302766408310097, hamiltonian_energy = -3.3544961344584294, hamiltonian_energy_error = 0.02367920001072754, max_hamiltonian_energy_error = 0.0371544065836753, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8167750108959944, log_density = 4.57111122639766, hamiltonian_energy = -1.9226715874368732, hamiltonian_energy_error = 0.1194008569807452, max_hamiltonian_energy_error = 0.40886955638037725, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9526657970580887, log_density = 4.502450490327391, hamiltonian_energy = -2.5966041948660825, hamiltonian_energy_error = 0.0046337235999720505, max_hamiltonian_energy_error = 0.1745351835289628, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9927197872833624, log_density = 3.802090384485261, hamiltonian_energy = -2.74481267588593, hamiltonian_energy_error = 0.01810372860624687, max_hamiltonian_energy_error = -0.15188452423824472, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9136902038014537, log_density = 4.515834608223539, hamiltonian_energy = -1.629068872536045, hamiltonian_energy_error = -0.0036724268836376694, max_hamiltonian_energy_error = 0.24181801662181135, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8365014662717627, log_density = 0.6588497494510062, hamiltonian_energy = 0.387129653055414, hamiltonian_energy_error = 0.30651336288045616, max_hamiltonian_energy_error = 0.3362886351805012, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9994880626487314, log_density = 2.3943502443673257, hamiltonian_energy = 0.08768468169089472, hamiltonian_energy_error = -0.11327042463067916, max_hamiltonian_energy_error = -0.27865889450057824, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9801968768818016, log_density = 4.382137993758157, hamiltonian_energy = -0.1490450721083052, hamiltonian_energy_error = -0.15346806893817044, max_hamiltonian_energy_error = -0.1609443079573194, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7852367321554603, log_density = 2.3454714539568133, hamiltonian_energy = 1.425388261544751, hamiltonian_energy_error = 0.3625443226335916, max_hamiltonian_energy_error = 0.42309020847355416, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 3.999469034290109, hamiltonian_energy = -0.07647982662727593, hamiltonian_energy_error = -0.10271189119944069, max_hamiltonian_energy_error = -0.4103634009445427, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9906068815977399, log_density = 1.1928648903199104, hamiltonian_energy = -0.13894068930169512, hamiltonian_energy_error = 0.024105881499193238, max_hamiltonian_energy_error = -0.13331755518999122, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.998450265055738, log_density = 3.3297092554015286, hamiltonian_energy = 0.4197480975046286, hamiltonian_energy_error = -0.28077741848428395, max_hamiltonian_energy_error = -0.28077741848428395, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.813724556179743, log_density = 2.4721560680430734, hamiltonian_energy = 1.5137326364850572, hamiltonian_energy_error = 0.2746531661375262, max_hamiltonian_energy_error = 0.4357080199024863, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8747677083729982, log_density = 3.29428404133845, hamiltonian_energy = 1.116330429093729, hamiltonian_energy_error = -0.1206181329238345, max_hamiltonian_energy_error = 0.4091936393081099, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9179451711069276, log_density = 4.154190468467981, hamiltonian_energy = -0.05354434636060912, hamiltonian_energy_error = -0.030040594259356013, max_hamiltonian_energy_error = 0.2180436337280297, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8111522978924032, log_density = 4.27195876891351, hamiltonian_energy = -1.321442334656194, hamiltonian_energy_error = -0.021912420619994766, max_hamiltonian_energy_error = 0.3833394113748527, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9501727431460346, log_density = 5.108123687410277, hamiltonian_energy = -3.0898338236267717, hamiltonian_energy_error = -0.06352634718672512, max_hamiltonian_energy_error = 0.13988221289040315, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8869810032548259, log_density = 3.931458233007028, hamiltonian_energy = -1.9676277450607667, hamiltonian_energy_error = 0.07430031180807628, max_hamiltonian_energy_error = 0.27920388624396053, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 9, is_accept = true, acceptance_rate = 0.8259480248967225, log_density = 3.8367144762623067, hamiltonian_energy = 0.12317664075010715, hamiltonian_energy_error = -0.23915347005175924, max_hamiltonian_energy_error = 0.47029989609577827, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9846550243805154, log_density = 4.443139564856711, hamiltonian_energy = -1.9333955975396462, hamiltonian_energy_error = 0.010576235300431946, max_hamiltonian_energy_error = 0.06151596239690482, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.999672032031387, log_density = 4.386457287422894, hamiltonian_energy = -3.6260917458779005, hamiltonian_energy_error = -0.010658144387273971, max_hamiltonian_energy_error = -0.054666619650236115, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9680837818122533, log_density = 4.498521053100616, hamiltonian_energy = -2.3827077828859524, hamiltonian_energy_error = -0.054698138025511156, max_hamiltonian_energy_error = 0.09144806192854515, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7616018077301402, log_density = 4.301070983342514, hamiltonian_energy = 1.348909487975579, hamiltonian_energy_error = 0.20516575434664652, max_hamiltonian_energy_error = 0.532203745939136, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9889974589862022, log_density = 3.4772809778001843, hamiltonian_energy = -2.713771587670906, hamiltonian_energy_error = -0.06920651233420383, max_hamiltonian_energy_error = -0.11979452726378126, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.4450442263997088, log_density = -0.4275897016706285, hamiltonian_energy = 4.706989390616857, hamiltonian_energy_error = 0.8248949254034921, max_hamiltonian_energy_error = 1.3649308967977962, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9846410134942905, log_density = 3.9870210008838143, hamiltonian_energy = 0.6252454245040191, hamiltonian_energy_error = -0.3716233698768623, max_hamiltonian_energy_error = -0.3716233698768623, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9179972886523617, log_density = 3.9450149555780776, hamiltonian_energy = -1.660785733534949, hamiltonian_energy_error = 0.07805947903159804, max_hamiltonian_energy_error = 0.16676040999528752, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8933121757234918, log_density = 4.6338596998461234, hamiltonian_energy = -1.9807055078389633, hamiltonian_energy_error = -0.09225542853967683, max_hamiltonian_energy_error = 0.30685961427836395, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9739631543687978, log_density = 3.644532891102724, hamiltonian_energy = -2.388977024857251, hamiltonian_energy_error = 0.06568360036399934, max_hamiltonian_energy_error = 0.08420912105054335, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9888271456375033, log_density = 5.347769048232388, hamiltonian_energy = -2.5239285963492204, hamiltonian_energy_error = -0.07524227219644963, max_hamiltonian_energy_error = -0.08991799060162631, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6834180174172247, log_density = 2.588079153436312, hamiltonian_energy = -1.888879538779365, hamiltonian_energy_error = 0.47090729334695713, max_hamiltonian_energy_error = 0.48787706664337205, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8921541945489359, log_density = -0.1716726501913861, hamiltonian_energy = 1.4390405892909828, hamiltonian_energy_error = 0.5365763186371371, max_hamiltonian_energy_error = 0.5365763186371371, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7866966937553103, log_density = -0.04181735931031838, hamiltonian_energy = 9.158010805263055, hamiltonian_energy_error = 0.28216735507635526, max_hamiltonian_energy_error = 1.010649532907573, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.920778741813088, log_density = 3.096549612121432, hamiltonian_energy = 3.3130803322370017, hamiltonian_energy_error = 0.02408001887569, max_hamiltonian_energy_error = 0.17533198817118834, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9796380313302647, log_density = 5.303164873435829, hamiltonian_energy = -0.8810165789586701, hamiltonian_energy_error = -0.24984821358778664, max_hamiltonian_energy_error = -0.25511100613434, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9162291885036884, log_density = 4.173118035951697, hamiltonian_energy = -3.6736651947955012, hamiltonian_energy_error = 0.18638836117745816, max_hamiltonian_energy_error = 0.18638836117745816, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9919824199694831, log_density = 4.606257608923457, hamiltonian_energy = -2.546605943831603, hamiltonian_energy_error = -0.12271224343875264, max_hamiltonian_energy_error = -0.23510136945112858, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8257976786475206, log_density = 1.5031273618977288, hamiltonian_energy = 1.7149874647988228, hamiltonian_energy_error = 0.05232186365243541, max_hamiltonian_energy_error = 0.4208835459490423, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.5400494366177708, log_density = -0.43578970150938545, hamiltonian_energy = 10.251144876765602, hamiltonian_energy_error = 0.21307973905275723, max_hamiltonian_energy_error = 1.6206586589307896, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 1, is_accept = true, acceptance_rate = 1.0, log_density = 0.7721150644182568, hamiltonian_energy = 0.4686088472462846, hamiltonian_energy_error = -0.2928043539544598, max_hamiltonian_energy_error = -0.2928043539544598, tree_depth = 1, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9188942535606942, log_density = -0.28969357481785174, hamiltonian_energy = 3.3467159723738846, hamiltonian_energy_error = 0.0948099524147632, max_hamiltonian_energy_error = 0.2458015102883584, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9598896632083846, log_density = -1.335239966483936, hamiltonian_energy = 3.3312173010271744, hamiltonian_energy_error = -0.14159781546245664, max_hamiltonian_energy_error = -0.14159781546245664, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9737177523370882, log_density = -1.5726177683068308, hamiltonian_energy = 3.4488723370678382, hamiltonian_energy_error = -0.0521781632542897, max_hamiltonian_energy_error = -0.0834446750097051, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8113636478495444, log_density = -1.4737564249368056, hamiltonian_energy = 5.780947925802826, hamiltonian_energy_error = 0.01976557516049038, max_hamiltonian_energy_error = 0.41118793074198834, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8920069994543248, log_density = -3.3455453377252056, hamiltonian_energy = 3.7912937327079517, hamiltonian_energy_error = 0.17552877911470288, max_hamiltonian_energy_error = 0.17792195214894768, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9735991624853079, log_density = 0.4644552982570218, hamiltonian_energy = 6.389232261866068, hamiltonian_energy_error = -0.17617137064909016, max_hamiltonian_energy_error = -0.7651320607022001, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9071496919247304, log_density = 0.5876407426342727, hamiltonian_energy = 0.954159186687852, hamiltonian_energy_error = 0.05260080434319625, max_hamiltonian_energy_error = 0.1696548324908902, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9877130591303704, log_density = 2.5438721429245383, hamiltonian_energy = 0.260471799790718, hamiltonian_energy_error = -0.08163894770560742, max_hamiltonian_energy_error = -0.09061613700257043, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8193653652420531, log_density = -1.5607278606294201, hamiltonian_energy = 4.39913563767097, hamiltonian_energy_error = 0.024658419854374003, max_hamiltonian_energy_error = 0.4410681935878742, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.26954791813033874, log_density = -3.528329380928172, hamiltonian_energy = 8.479290542517262, hamiltonian_energy_error = 1.447295339474695, max_hamiltonian_energy_error = 1.5135028026270296, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9764379780879053, log_density = -1.5678296986589224, hamiltonian_energy = 5.872702557276255, hamiltonian_energy_error = -0.08620735380903088, max_hamiltonian_energy_error = -0.5703111421915494, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.888454098084923, log_density = -2.3314325293615994, hamiltonian_energy = 5.504076782730579, hamiltonian_energy_error = -0.0588695931401535, max_hamiltonian_energy_error = 0.41481037590135994, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8942528809261938, log_density = 3.7227256443986008, hamiltonian_energy = 4.2082052420487255, hamiltonian_energy_error = -0.14446312128355387, max_hamiltonian_energy_error = 0.30754579444182717, tree_depth = 5, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 5.213885879628084, hamiltonian_energy = -3.108774458488272, hamiltonian_energy_error = -0.18150460345865982, max_hamiltonian_energy_error = -0.19020365301226505, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7316204692842082, log_density = 1.8733483997598963, hamiltonian_energy = 0.24526218289487067, hamiltonian_energy_error = 0.18084725650476896, max_hamiltonian_energy_error = 0.5495652663413604, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7933036879997485, log_density = 2.0416730732605473, hamiltonian_energy = 2.985945478874192, hamiltonian_energy_error = 0.27818065235516265, max_hamiltonian_energy_error = 0.5683601840384496, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9836917207168574, log_density = 2.477012469703781, hamiltonian_energy = 0.4947983747980862, hamiltonian_energy_error = -0.18793901480737718, max_hamiltonian_energy_error = -0.3484588803222408, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 1.6654075802413129, hamiltonian_energy = 1.3196818578945213, hamiltonian_energy_error = -0.12425771503238492, max_hamiltonian_energy_error = -0.1583025798082831, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9947042375080432, log_density = 4.3689606747370515, hamiltonian_energy = -0.7452453202713398, hamiltonian_energy_error = -0.047329291873649315, max_hamiltonian_energy_error = -0.1439309786244688, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9713573080447795, log_density = 4.1384272468975, hamiltonian_energy = -3.2694247819765057, hamiltonian_energy_error = 0.06145502608041031, max_hamiltonian_energy_error = 0.06145502608041031, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8146875525934872, log_density = 0.3934612216292166, hamiltonian_energy = 2.632989411159484, hamiltonian_energy_error = 0.2998857007135256, max_hamiltonian_energy_error = 0.7348312410369386, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9803061876798157, log_density = 1.691177807115018, hamiltonian_energy = 2.9549146068472494, hamiltonian_energy_error = -0.10606528054899833, max_hamiltonian_energy_error = -0.24929380742773155, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 1.7314768416459145, hamiltonian_energy = -0.3235495534467836, hamiltonian_energy_error = -0.10779752627767936, max_hamiltonian_energy_error = -0.27484516506666146, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.4453581534046566, log_density = 3.7109714499966966, hamiltonian_energy = 7.046923125761847, hamiltonian_energy_error = 0.9991854402870199, max_hamiltonian_energy_error = 1.481813296065571, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9896412772235013, log_density = 4.74189564512794, hamiltonian_energy = -1.1771408028661021, hamiltonian_energy_error = -0.08054643309192189, max_hamiltonian_energy_error = -0.16277271605700294, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9386887574092951, log_density = 3.9516002554377536, hamiltonian_energy = -3.6464731734965246, hamiltonian_energy_error = 0.08711547271216746, max_hamiltonian_energy_error = 0.1059217601550353, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 4.408190442457695, hamiltonian_energy = -3.8138800517410982, hamiltonian_energy_error = -0.02818406200650081, max_hamiltonian_energy_error = -0.1431731331222159, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9871725441239313, log_density = 3.963007756688647, hamiltonian_energy = -2.844039563124875, hamiltonian_energy_error = 0.010563168857240512, max_hamiltonian_energy_error = -0.08768320148624476, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9659613449889367, log_density = 2.7900274067431363, hamiltonian_energy = -0.3471401120252122, hamiltonian_energy_error = -0.10169001064482242, max_hamiltonian_energy_error = -0.12880428888051654, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.873390355716259, log_density = 1.849648558359151, hamiltonian_energy = -0.04800711762243459, hamiltonian_energy_error = 0.1847284687779842, max_hamiltonian_energy_error = 0.3288246146645575, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8475308171581244, log_density = 1.5175934280213017, hamiltonian_energy = 1.5125131257205897, hamiltonian_energy_error = 0.19287191908500034, max_hamiltonian_energy_error = 0.29024858946517673, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9987043579595851, log_density = 2.731992275039124, hamiltonian_energy = 1.2479095127110353, hamiltonian_energy_error = -0.509983181488538, max_hamiltonian_energy_error = -0.6290817924920944, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8608042642451409, log_density = 2.186993508640482, hamiltonian_energy = 1.9387841079496333, hamiltonian_energy_error = 0.07843745195372076, max_hamiltonian_energy_error = 0.34062715725356796, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9896124091894817, log_density = 4.920155530639439, hamiltonian_energy = 1.7377604221151781, hamiltonian_energy_error = -0.13699906835818876, max_hamiltonian_energy_error = -0.1692924235401616, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9576443902686573, log_density = 2.931842403939637, hamiltonian_energy = -0.8332885870244593, hamiltonian_energy_error = 0.04057644102782154, max_hamiltonian_energy_error = 0.16916278474652047, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.837048150170663, log_density = -1.8071862899775724, hamiltonian_energy = 3.9450258999843344, hamiltonian_energy_error = 0.15606157190430547, max_hamiltonian_energy_error = 0.5595610019053785, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9980627311754375, log_density = 0.035564324003104275, hamiltonian_energy = 3.6180954841531214, hamiltonian_energy_error = -0.6279933583164947, max_hamiltonian_energy_error = -0.711832184664491, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9630591254930606, log_density = -2.9586240830803643, hamiltonian_energy = 5.049852932736734, hamiltonian_energy_error = -0.013300490012661648, max_hamiltonian_energy_error = 0.12436380348848797, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.6778357986495056, log_density = 1.3334064839533326, hamiltonian_energy = 7.628544868494801, hamiltonian_energy_error = -0.0021454874479767128, max_hamiltonian_energy_error = 1.0364307359299572, tree_depth = 5, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9772139368941075, log_density = 4.403592907719162, hamiltonian_energy = 1.0958033312562296, hamiltonian_energy_error = -0.047331634295543434, max_hamiltonian_energy_error = -0.10013416568219125, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.95393170208407, log_density = 0.35516044617498466, hamiltonian_energy = 0.8150153142126189, hamiltonian_energy_error = 0.09812713856716959, max_hamiltonian_energy_error = -0.1325549198881042, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9102044648411333, log_density = 0.044251190022974285, hamiltonian_energy = 1.6040868970107895, hamiltonian_energy_error = 0.11296608526188989, max_hamiltonian_energy_error = 0.17741468370310143, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9808804419001306, log_density = 2.121649684288945, hamiltonian_energy = 1.5063047612620135, hamiltonian_energy_error = 0.08985450861197153, max_hamiltonian_energy_error = -0.3578362718317467, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 4.624538778813573, hamiltonian_energy = -1.0107377829444868, hamiltonian_energy_error = -0.1554743407001753, max_hamiltonian_energy_error = -0.4208747126768786, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9720132116316976, log_density = 4.639064972044444, hamiltonian_energy = -2.3609157509057948, hamiltonian_energy_error = -0.21689250223821332, max_hamiltonian_energy_error = -0.21689250223821332, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7789989132223234, log_density = 4.259937136630427, hamiltonian_energy = -2.0395723327506534, hamiltonian_energy_error = 0.2135701640650325, max_hamiltonian_energy_error = 0.4210418245292371, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9602262825142316, log_density = 3.09255298919787, hamiltonian_energy = -2.6010150701784545, hamiltonian_energy_error = 0.09210320464417876, max_hamiltonian_energy_error = -0.2141649150857612, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 5.2993712813641345, hamiltonian_energy = -2.3284442071185754, hamiltonian_energy_error = -0.2525706805470276, max_hamiltonian_energy_error = -0.2525706805470276, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9625991920322591, log_density = 4.660869405023282, hamiltonian_energy = -3.4703903100848663, hamiltonian_energy_error = 0.04436820642960715, max_hamiltonian_energy_error = 0.10747570904587533, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9928867346290604, log_density = 5.225231056623798, hamiltonian_energy = -3.9799731222185692, hamiltonian_energy_error = -0.08125580906629537, max_hamiltonian_energy_error = -0.09236655762972923, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8740587308056076, log_density = 4.936764242175343, hamiltonian_energy = -3.1622057619267956, hamiltonian_energy_error = 0.06656854180051042, max_hamiltonian_energy_error = 0.2465938840789983, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9335250707414294, log_density = 4.868036140379546, hamiltonian_energy = -2.5919421029334013, hamiltonian_energy_error = -0.004833315813244976, max_hamiltonian_energy_error = 0.15442505827913156, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9943546436295788, log_density = 4.530010581985404, hamiltonian_energy = -4.042422639630355, hamiltonian_energy_error = 0.011336244201389789, max_hamiltonian_energy_error = -0.05219920666736577, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.94721338393062, log_density = 4.273951846816839, hamiltonian_energy = -3.030472634298862, hamiltonian_energy_error = 0.08601037341572049, max_hamiltonian_energy_error = 0.12406330345064553, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9778416162872459, log_density = 5.357231666410618, hamiltonian_energy = -3.858992183267696, hamiltonian_energy_error = -0.15227276530675748, max_hamiltonian_energy_error = -0.15227276530675748, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9402224901926032, log_density = 3.168470111954905, hamiltonian_energy = -2.480231004151671, hamiltonian_energy_error = 0.07677059513408357, max_hamiltonian_energy_error = 0.11075796122367221, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9399941308471175, log_density = 4.098392148217769, hamiltonian_energy = -1.784726341093481, hamiltonian_energy_error = 0.02687532075881549, max_hamiltonian_energy_error = 0.13311784324194065, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.950473086025566, log_density = 4.6576500325230334, hamiltonian_energy = -2.7320918098005613, hamiltonian_energy_error = -0.08295552571889031, max_hamiltonian_energy_error = 0.1866938647263212, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.967031931387598, log_density = 3.813160598852014, hamiltonian_energy = -3.2178357695297213, hamiltonian_energy_error = 0.06783133715224521, max_hamiltonian_energy_error = 0.07464790547757483, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9722548532524317, log_density = 2.773360483348757, hamiltonian_energy = -1.2748888023163545, hamiltonian_energy_error = -0.02366090503480356, max_hamiltonian_energy_error = 0.07505154994216667, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9604812760235537, log_density = 2.820629767595925, hamiltonian_energy = -1.3310938926324898, hamiltonian_energy_error = -0.030012599774663418, max_hamiltonian_energy_error = 0.10749308243827338, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9534229587592461, log_density = 1.8611798796454995, hamiltonian_energy = -1.4850589761078985, hamiltonian_energy_error = 0.10042625545693906, max_hamiltonian_energy_error = 0.10844298216051551, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9495196337118907, log_density = 3.8750209473035646, hamiltonian_energy = -0.37338033918302527, hamiltonian_energy_error = -0.02857127467868814, max_hamiltonian_energy_error = 0.13942054459441855, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9527601287208354, log_density = 3.229833880222108, hamiltonian_energy = -3.0683657830394013, hamiltonian_energy_error = 0.0822928210067495, max_hamiltonian_energy_error = 0.0822928210067495, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9329822274347709, log_density = 1.3662984839747594, hamiltonian_energy = -0.04268367643098481, hamiltonian_energy_error = 0.1275164585705335, max_hamiltonian_energy_error = 0.19787278857008173, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.979055986973716, log_density = 2.5323805311118353, hamiltonian_energy = 1.378852690062173, hamiltonian_energy_error = -0.44394489356722655, max_hamiltonian_energy_error = -0.5928346395898747, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9690784368420826, log_density = 2.0921582563653853, hamiltonian_energy = 0.5138001233132998, hamiltonian_energy_error = -0.05076452933994968, max_hamiltonian_energy_error = -0.346028395142401, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9942035401481556, log_density = 1.808457612647179, hamiltonian_energy = -0.44517341007550537, hamiltonian_energy_error = -0.010454941403154505, max_hamiltonian_energy_error = -0.06807868591711186, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9656554480798626, log_density = 0.8292555022635089, hamiltonian_energy = -0.6894899478462287, hamiltonian_energy_error = 0.006258315562275629, max_hamiltonian_energy_error = 0.05729672513484052, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8848126593488416, log_density = 2.1858109849996783, hamiltonian_energy = 0.4067828719749276, hamiltonian_energy_error = 0.16958723235901396, max_hamiltonian_energy_error = 0.23915605110050847, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.985739044986413, log_density = 0.7129078158098494, hamiltonian_energy = 3.34405846764849, hamiltonian_energy_error = -0.08162901747106943, max_hamiltonian_energy_error = -0.317372051005262, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9555827335819934, log_density = 3.506544202427289, hamiltonian_energy = 1.430256844646018, hamiltonian_energy_error = 0.07945112649612218, max_hamiltonian_energy_error = 0.1338999157988603, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9923871991870193, log_density = 2.041133186447781, hamiltonian_energy = 0.4657808537532091, hamiltonian_energy_error = 0.0006405203008128524, max_hamiltonian_energy_error = -0.115429461936154, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9151015132522721, log_density = 3.3947001895649427, hamiltonian_energy = 2.015788059598857, hamiltonian_energy_error = -0.001766347415379066, max_hamiltonian_energy_error = 0.3923785754710485, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 2.4365546332366286, hamiltonian_energy = -1.1628420404227298, hamiltonian_energy_error = -0.033201801218562865, max_hamiltonian_energy_error = -0.1287559094399091, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8450950161762556, log_density = 3.722811637008089, hamiltonian_energy = 5.621685114991664, hamiltonian_energy_error = -0.2741596411947249, max_hamiltonian_energy_error = 0.4159963789227188, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8616862450718454, log_density = 3.321758670537143, hamiltonian_energy = 0.6681503935181929, hamiltonian_energy_error = 0.09265807026343964, max_hamiltonian_energy_error = 0.3132165617280518, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9837194111924428, log_density = 3.5870218137536103, hamiltonian_energy = -1.9405614195708603, hamiltonian_energy_error = -0.03527359029665322, max_hamiltonian_energy_error = -0.2027314843406649, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9629217501748492, log_density = 2.9835479489478427, hamiltonian_energy = -1.670309866594189, hamiltonian_energy_error = -0.028022402048516915, max_hamiltonian_energy_error = -0.20005369604128043, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 4.135826812753001, hamiltonian_energy = -2.519622635464763, hamiltonian_energy_error = -0.1660880684638113, max_hamiltonian_energy_error = -0.20701915843387786, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9813626542860617, log_density = 3.3719224735061637, hamiltonian_energy = -3.0071814579735325, hamiltonian_energy_error = 0.05460611880870836, max_hamiltonian_energy_error = 0.07112620889025534, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.916534713072047, log_density = 4.937998408999071, hamiltonian_energy = -1.0384216578200531, hamiltonian_energy_error = 0.01933523579190144, max_hamiltonian_energy_error = 0.2604179447544357, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8586070172337366, log_density = 3.8634004926174157, hamiltonian_energy = -3.0056858439011056, hamiltonian_energy_error = 0.23909316736375086, max_hamiltonian_energy_error = 0.3538485887316676, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6609493641513468, log_density = 4.683423944280477, hamiltonian_energy = 1.5848897236540704, hamiltonian_energy_error = 0.09813313586573358, max_hamiltonian_energy_error = 1.4004644012469782, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9951188712407858, log_density = 5.114404140891622, hamiltonian_energy = -1.0925512836119537, hamiltonian_energy_error = -0.1686447633233512, max_hamiltonian_energy_error = -0.1686447633233512, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9487594507496541, log_density = 5.466489928619897, hamiltonian_energy = -4.219263667008141, hamiltonian_energy_error = 0.006147610034574313, max_hamiltonian_energy_error = 0.11038929894316407, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9567530578565425, log_density = 4.8022841966297065, hamiltonian_energy = -4.361470069433701, hamiltonian_energy_error = 0.074347242698237, max_hamiltonian_energy_error = 0.07889035087177643, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9774232808114716, log_density = 3.580201375477884, hamiltonian_energy = -1.1271690035260162, hamiltonian_energy_error = 0.0014442245526722353, max_hamiltonian_energy_error = -0.07837102104082394, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9495378059961829, log_density = 5.214912304021354, hamiltonian_energy = -1.3070025751980983, hamiltonian_energy_error = -0.08838337638594451, max_hamiltonian_energy_error = 0.2449352961237733, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.951561935096306, log_density = 4.394442872004118, hamiltonian_energy = -3.852934838474571, hamiltonian_energy_error = 0.05559770039044487, max_hamiltonian_energy_error = 0.09610534798662496, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9938713428847195, log_density = 5.218556746872721, hamiltonian_energy = -3.856070199972903, hamiltonian_energy_error = -0.06772133386098611, max_hamiltonian_energy_error = -0.06772133386098611, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9994444453246454, log_density = 5.36676145658034, hamiltonian_energy = -4.863809373347851, hamiltonian_energy_error = -0.0013991716726948766, max_hamiltonian_energy_error = -0.006692168121732678, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8740241552542337, log_density = 4.12067706466569, hamiltonian_energy = -2.5671143590537184, hamiltonian_energy_error = 0.11671362541532293, max_hamiltonian_energy_error = 0.23416335817764278, tree_depth = 2, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9795264255617092, log_density = 3.9492950315083792, hamiltonian_energy = -1.9765090279300266, hamiltonian_energy_error = -0.03656714415802331, max_hamiltonian_energy_error = 0.08263621342574301, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8555530938735388, log_density = 3.0683262847033124, hamiltonian_energy = -1.561784738476796, hamiltonian_energy_error = 0.24175160762977432, max_hamiltonian_energy_error = 0.35127201811825004, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9933425382162828, log_density = 3.126270748560291, hamiltonian_energy = -1.8044674139563852, hamiltonian_energy_error = 0.02938909864935213, max_hamiltonian_energy_error = -0.2649459459975647, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9878592158298737, log_density = 3.9213121205510184, hamiltonian_energy = -0.9828738583742553, hamiltonian_energy_error = -0.10880457631233709, max_hamiltonian_energy_error = -0.21975764330537295, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9177631729298673, log_density = 2.493601831745739, hamiltonian_energy = -1.869145170323486, hamiltonian_energy_error = 0.24996194576563768, max_hamiltonian_energy_error = 0.24996194576563768, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.990182852701911, log_density = 1.8890966898162596, hamiltonian_energy = -1.2631638666401321, hamiltonian_energy_error = 0.07119532842268539, max_hamiltonian_energy_error = -0.3350552629677601, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8850280713376769, log_density = 4.212839568167489, hamiltonian_energy = 2.327287757543287, hamiltonian_energy_error = -0.37914868724953976, max_hamiltonian_energy_error = 0.43695958848038696, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 4.062145148680349, hamiltonian_energy = -3.476044929903029, hamiltonian_energy_error = -0.001542971590722253, max_hamiltonian_energy_error = -0.032827415536026194, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8909028605348662, log_density = 3.9056481140839647, hamiltonian_energy = -1.9209935824322482, hamiltonian_energy_error = 0.08923998448854786, max_hamiltonian_energy_error = 0.18879947486170656, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.801540365009032, log_density = 2.637759461085116, hamiltonian_energy = 0.6878401092136284, hamiltonian_energy_error = 0.16335578938572537, max_hamiltonian_energy_error = 0.5468167470165795, tree_depth = 4, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9330050088658896, log_density = 1.5952204512207935, hamiltonian_energy = 0.6546030757127812, hamiltonian_energy_error = -0.0023345894524271493, max_hamiltonian_energy_error = 0.1349776098377844, tree_depth = 3, numerical_error = false, step_size = 0.12591766719502182, nom_step_size = 0.12591766719502182, is_adapt = false)])","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Inspect posterior distribution over hyperparameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"hypers = map(unpack, samples);\nh_l1 = histogram(getindex.(hypers, :l1); label=\"l1\");\nh_l2 = histogram(getindex.(hypers, :l2); label=\"l2\");\nh_s1 = histogram(getindex.(hypers, :s1); label=\"s1\");\nh_s2 = histogram(getindex.(hypers, :s2); label=\"s2\");\nplot(h_l1, h_l2, h_s1, h_s2; layout=(2, 2))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As expected, the sampler converges to the posterior distribution quickly. One could combine this code with that from the previous sections to make predictions under the posterior over the hyperparameters.","category":"page"},{"location":"examples/getting_started/#Conclusion","page":"Getting Started","title":"Conclusion","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you now know how to fit GPs using Stheno.jl, and to investigate their posterior distributions. It's also straightforward to utilise Stheno.jl inside probabilistic programming frameworks like Soss.jl and Turing.jl (see examples folder).","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Stheno.jl","page":"Home","title":"Stheno.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Stheno.jl is a package for probabilistic programming with Gaussian processes.","category":"page"},{"location":"internals/#Interfaces","page":"Internals","title":"Interfaces","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The primary objects in Stheno are some special subtypes of AbstractGP. There are three primary concrete subtypes of AbstractGP:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP: an atomic Gaussian process given by wrapping an AbstractGP.\nCompositeGP: a Gaussian process composed of other WrappedGPs and CompositeGPs, whose properties are determined recursively from the GPs of which it is composed.\nGaussianProcessProbabilisticProgramme / GPPP: a Gaussian process comprising WrappedGPs and CompositeGPs. This is the primary piece of functionality that users should interact with.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This documentation provides the information necessary to understand the internals of Stheno, and to extend it with custom functionality.","category":"page"},{"location":"internals/#AbstractGP","page":"Internals","title":"AbstractGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP and CompositeGP implement the AbstractGPs.jl API. Please refer to the AbstractGPs.jl docs for more info on this.","category":"page"},{"location":"internals/#diag-methods","page":"Internals","title":"diag methods","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It is crucial for pseudo-point methods, and for the computation of marginal statistics at a reasonable scale, to be able to compute the diagonal of a given covariance matrix in linear time in the size of its inputs. This, in turn, necessitates that the diagonal of a given cross-covariance matrix can also be computed efficiently as the evaluation of covariance matrices often rely on the evaluation of cross-covariance matrices. As such, we have the following functions in addition to the AbstractGPs API implemented for WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Function Brief description\nvar(f, x) diag(cov(f, x))\nvar(f, x, x′) diag(cov(f, x, x′))\nvar(f, f′, x, x′) diag(cov(f, f′, x, x′))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The second and third rows of the table only make sense when length(x) == length(x′), of course.","category":"page"},{"location":"internals/#WrappedGP","page":"Internals","title":"WrappedGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"We can construct a WrappedGP in the following manner:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = wrap(GP(m, k), gpc)\n","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"where m is its MeanFunction, k its Kernel. gpc is a GPC object that handles some book-keeping, and is discussed in more depth below.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The AbstractGP interface is implemented for WrappedGPs in terms of the AbstractGP that they wrap. So if you want a particular behaviour, just make sure that the AbstractGP that you wrap has the functionality you want.","category":"page"},{"location":"internals/#Aside:-Example-Kernel-implementation","page":"Internals","title":"Aside: Example Kernel implementation","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It's straightforward to implement a new kernel yourself: simply following the instructions in KernelFunctions.jl and it'll work fine with GPs in Stheno.jl.","category":"page"},{"location":"internals/#GPC","page":"Internals","title":"GPC","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"This book-keeping object doesn't matter from a user's perspective but, unfortunately, we currently expose it to users. Fortunately, it's straightforward to work with. Say you wish to construct a collection of processes:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS WON'T WORK\nf = GP(mf, kf)\ng = GP(mg, kg)\nh = f + g\n# THIS WON'T WORK","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"You should write","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS GOOD. PLEASE DO THIS\ngpc = GPC()\nf = wrap(GP(mf, kf), gpc)\ng = wrap(GP(mg, kg), gpc)\nh = f + g\n# THIS IS GOOD. PLEASE DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The rule is simple: when constructing GPs that you plan to make interact later in your program, construct them using the same gpc object. For example, DON'T do the following:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS BAD. PLEASE DON'T DO THIS\nf = wrap(GP(mf, kf), GPC())\ng = wrap(GP(mg, kg), GPC())\nh = f + g\n# THIS IS BAD. PLEASE DON'T DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The mistake here is to construct a separate GPC object for each GP. Hopefully, the code errors, but might yield incorrect results.","category":"page"},{"location":"internals/#CompositeGP","page":"Internals","title":"CompositeGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"CompositeGPs are constructed as affine transformations of CompositeGPs and GPs. We describe the implemented transformations below.","category":"page"},{"location":"internals/#Addition","page":"Internals","title":"Addition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Given AbstractGPs f and g, we define","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f + g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"to be the CompositeGP sastisfying h(x) = f(x) + g(x) for all x.","category":"page"},{"location":"internals/#Multiplication","page":"Internals","title":"Multiplication","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Multiplication of AbstractGPs is undefined since the product of two Gaussian random variables is not itself Gaussian. However, we can scale an AbstractGP by either a constant or (deterministic) function.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = c * f\nh = sin * f","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"will both work, and produce the result that h(x) = c * f(x) or h(x) = sin(x) * f(x).","category":"page"},{"location":"internals/#Composition","page":"Internals","title":"Composition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f ∘ g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for some deterministic function g is the composition of f with g. i.e. h(x) = f(g(x)).","category":"page"},{"location":"internals/#cross","page":"Internals","title":"cross","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = cross([f, g])","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for WrappedGPs and CompositeGPs f and g. Think of cross as having stacked f and g together, so that you can work with their joint.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"For example, if you wanted to sample jointly from f and g at locations x_f and x_g, you could write something like","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"fg = cross([f, g])\nx_fg = BlockData([x_f, x_g])\nrand(fg(x_fg, 1e-6))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This particular function isn't part of the user-facing API because it isn't generally needed. It is, however, used extensively in the implementation of the GaussianProcessProbabilisticProgramme.","category":"page"},{"location":"internals/#GPPP","page":"Internals","title":"GPPP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The GaussianProcessProbabilisticProgramme is another AbstractGP which enables provides a thin layer of convenience functionality on top of WrappedGPs and CompositeGPs, and is the primary way in which it is intended that users will interact with this package.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP like this","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"is equivalent to manually constructing a GPPP using WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"gpc = GPC()\nf1 = wrap(GP(SEKernel()), gpc)\nf2 = wrap(GP(SEKernel()), gpc)\nf3 = f1 + f2\nf = Stheno.GPPP((f1=f1, f2=f2, f3=f3), gpc)","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"If you take a look at the gaussian_process_probabilistic_programming.jl source, you'll see that it's essentially just the above, and an implementation of the AbstractGPs API on top of a GPPP.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP is a single GP on an extended input domain: (Image: )","category":"page"}]
}
