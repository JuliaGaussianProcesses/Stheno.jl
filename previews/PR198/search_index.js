var documenterSearchIndex = {"docs":
[{"location":"api/#Public-API","page":"API","title":"Public API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = Stheno","category":"page"},{"location":"api/#GPPP","page":"API","title":"GPPP","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Core functionality for working with GPPPs.","category":"page"},{"location":"api/","page":"API","title":"API","text":"@gppp\nGPPPInput\nBlockData\nsplit","category":"page"},{"location":"api/#Stheno.@gppp","page":"API","title":"Stheno.@gppp","text":"@gppp(model_expression)\n\nConstruct a GaussianProcessProbabilisticProgramme (GPPP) from a code snippet.\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = GPPPInput(:f3, randn(5))\n\ny = rand(f(x, 0.1))\n\nlogpdf(f(x, 0.1), y) ≈ elbo(f(x, 0.1), y, f(x, 1e-9))\n\n# output\n\ntrue\n\n\n\n\n\n","category":"macro"},{"location":"api/#Stheno.GPPPInput","page":"API","title":"Stheno.GPPPInput","text":"GPPPInput(p, x::AbstractVector)\n\nAn collection of inputs for a GPPP. p indicates which process the vector x should be extracted from. The required type of p is determined by the type of the keys in the GPPP indexed.\n\njulia> x = [1.0, 1.5, 0.3];\n\njulia> v = GPPPInput(:a, x)\n3-element GPPPInput{Symbol, Float64, Vector{Float64}}:\n (:a, 1.0)\n (:a, 1.5)\n (:a, 0.3)\n\njulia> v isa AbstractVector{Tuple{Symbol, Float64}}\ntrue\n\njulia> v == map(x_ -> (:a, x_), x)\ntrue\n\n\n\n\n\n","category":"type"},{"location":"api/#Stheno.BlockData","page":"API","title":"Stheno.BlockData","text":"BlockData{T, TV<:AbstractVector{T}, TX<:AbstractVector{TV}} <: AbstractVector{T}\n\nA strictly ordered collection of AbstractVectors, representing a ragged array of data.\n\nVery useful when working with GPPPs. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\n# Specify a `BlockData` set that can be used to index into\n# the `f2` and `f3` processes in `f`.\nx = BlockData(\n    GPPPInput(:f2, randn(4)),\n    GPPPINput(:f3, randn(3)),\n)\n\n# Index into `f` at the input.\nf(x)\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.split","page":"API","title":"Base.split","text":"Base.split(x::BlockData, Y::AbstractVecOrMat)\n\nConvenience functionality to make working with the output of operations on GPPPs easier. Splits up the rows of Y according to the sizes of the data in x.\n\njulia> Y = vcat(randn(5, 3), randn(4, 3));\n\njulia> x = BlockData(randn(5), randn(4));\n\njulia> Y1, Y2 = split(x, Y);\n\njulia> Y1 == Y[1:5, :]\ntrue\n\njulia> Y2 == Y[6:end, :]\ntrue\n\nWorks with any BlockData, so blocks can e.g. be GPPPInputs. This is particularly helpful for working with the output from rand and marginals from a GPPP indexed at BlockData. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = BlockData(GPPPInput(:f2, randn(3)), GPPPInput(:f3, randn(4)))\ny = rand(f(x))\ny2, y3 = split(x, y)\n\nFunctionality also works with any AbstractVector.\n\n\n\n\n\n","category":"function"},{"location":"api/#Building-GPPPs","page":"API","title":"Building GPPPs","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"If in doubt about what any of these transformations can do, play around with them!","category":"page"},{"location":"api/","page":"API","title":"API","text":"+\n*\nstretch\nperiodic\nshift\nselect","category":"page"},{"location":"api/#Base.:+","page":"API","title":"Base.:+","text":"+(fa::AbstractGP, fb::AbstractGP)\n\nProduces an AbstractGP f satisfying f(x) = fa(x) + fb(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.:*","page":"API","title":"Base.:*","text":"*(f, g::AbstractGP)\n\nProduce an AbstractGP h satisfying to h(x) = f(x) * g(x), for some deterministic function f.\n\nIf f isa Real, then h(x) = f * g(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.stretch","page":"API","title":"Stheno.stretch","text":"stretch(f::AbstractGP, l::Union{AbstractVecOrMat{<:Real}, Real})\n\nThis is the primary mechanism by which to introduce length scales to your programme.\n\nIf l isa Real or l isa AbstractMatrix{<:Real}, stretch(f, l)(x) == f(l * x) for any input x. In the l isa Real case, this is equivalent to scaling the length scale by 1 / l.\n\nl isa AbstractVector{<:Real} is equivalent to stretch(f, Diagonal(l)).\n\nEquivalent to f ∘ Stretch(l).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.periodic","page":"API","title":"Stheno.periodic","text":"periodic(g::AbstractGP, f::Real)\n\nProduce an AbstractGP with period f.\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.shift","page":"API","title":"Stheno.shift","text":"shift(f::AbstractGP, a::Real)\nshift(f::AbstractGP, a::AbstractVector{<:Real})\n\nReturns the GP g given by g(x) = f(x - a)\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.select","page":"API","title":"Stheno.select","text":"select(f::AbstractGP, idx)\n\nSelect the dimensions of the input to f given by idx.\n\n\n\n\n\n","category":"function"},{"location":"input_types/#Input-Types","page":"Input Types","title":"Input Types","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Stheno enables the user to handle any type of input domain they wish and provides a common API that users must implement when considering a new way of representing input data to ensure that the package knows how to handle them appropriately.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"This interface has now been adopted throughout the JuliaGaussianProcesses ecosystem.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Discussed below is this interface's core assumptions, a detailed account of a couple of important concrete input types.","category":"page"},{"location":"input_types/#The-Central-Assumption","page":"Input Types","title":"The Central Assumption","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"The central assumption made in all user-facing and internal functions is this: when a collection of inputs are required, they subtype AbstractVector. For example, x isa AbstractVector when indexing into a GP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f(x, σ²)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"or computing the covariance matrix associated with a kernel:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"kernelmatrix(SqExponentialKernel(), x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When computing the cross-covariance matrix between two GPs","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"cov(f, g, x_f, x_g)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_f and x_g must be AbstractVectors. All other operations involving collections of inputs have the same restrictions. Always AbstractVectors.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"For example, this means that when handling multi-dimensional inputs stored in a Matrix they must be wrapped so that the package knows to treat them as a vector — more on this in below in D-dimensional Euclidean Spaces.","category":"page"},{"location":"input_types/#Dimensional-Euclidean-Space","page":"Input Types","title":"1-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When constructing a GP whose domain is the real-line, for example when using a GP to solve some kind of time-series problem, it is sufficient to work with Vector{<:Real}s of inputs. As such, the following is completely valid:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"using Stheno: GPC\nf = wrap(GP(SqExponentialKernel()), GPC())\nx = randn(10)\nf(x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"It is also possible to work with other AbstractArrays that represent a vector of 1-dimensional points, e.g.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = range(-5.0, 5.0; length=100)\nf(x)","category":"page"},{"location":"input_types/#D-Dimensional-Euclidean-Space","page":"Input Types","title":"D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Many applications of interest involve more than a single input-dimension, such as spatio-temporal modeling or Machine Learning tasks. For these cases, we provide ColVecs <: AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"X_data = randn(5, 100)\nX = ColVecs(X_data)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"tells Stheno that it should treat each column of X_data as a vector-valued input. Phrased differently, X is an AbstractVector{T} where T <: Vector{<:Real}, which stores its elements in memory as a dense matrix. This approach has the advantage of making it completely explicit how Stheno treats a matrix of data, and also simplifies quite a bit of the internal machinery, as all vectors of inputs can be assumed to be a subtype of AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If, on the other hand, each row of X_data corresponds to a vector-valued input, use RowVecs(X_data).","category":"page"},{"location":"input_types/#Structure-in-D-Dimensional-Euclidean-Space","page":"Input Types","title":"Structure in D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Consider a rectilinear grid of points in D-dimensional Euclidean space. Such grids of points can be represented in a more memory-efficient manner than can arbitrarily locate sets of points. Moreover, this structure can be exploited to accelerate inference for certain types of problems dramatically. Other such examples exist e.g., uniform grids in N-dimensions, and can be exploited to more efficiently represent input data and to accelerate inference.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Work to exploit these kinds of structures is on-going at the time of writing and will be documented before merging.","category":"page"},{"location":"input_types/#GPPPInput-and-BlockData","page":"Input Types","title":"GPPPInput and BlockData","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"A GPPPInput is a special kind of AbstractVector, specifically designed for GPPPs. Given a GPPP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"a GPPPInput like","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_ = randn(5)\nx = GPPPInput(:f3, x_)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"applied to f","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"fx = f(x, 0.1)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"constructs a FiniteGP comprising f3 at x_. GPPPInput(:f2, x_) and GPPPInput(:f1, x_) are the analogues for f1 and f2.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If you wish to refer to multiple processes in f at the same time, use a BlockData. For example","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = BlockData(GPPPInput(:f2, x_), GPPPInput(:f3, x_))","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"would pull out a 10-dimensional FiniteGP, the first 5 dimensions being f2 at x_, the last 5 dimensions being f3 at x_.","category":"page"},{"location":"kernel_design/#Kernel-Design","page":"Kernel Design","title":"Kernel Design","text":"","category":"section"},{"location":"kernel_design/","page":"Kernel Design","title":"Kernel Design","text":"Please refer to KernelFunctions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"EditURL = \"https://github.com/JuliaGaussianProcesses/Stheno.jl/blob/master/examples/getting_started/script.jl\"","category":"page"},{"location":"examples/getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Here we document how to do some basic stuff, including learning and inference in kernel parameters, with Stheno.jl. To do this, we that makes use of a variety of packages from the Julia ecosystem. In particular, we'll make use of","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl to perform Bayesian inference in our model parameters,\nOptim.jl for point-estimates of our model parameters,\nParameterHandling.jl to make it easy to work with our model's parameters, and to ensure that it plays nicely with Optim and AdvancedHMC,\nZygote.jl to compute gradients.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This guide assumes that you know roughly what's going on conceptually with GPs. If you're new to Gaussian processes, an excellent introduction can be found in either this video lecture or this one.","category":"page"},{"location":"examples/getting_started/#Exact-Inference-in-a-GP-in-2-Minutes","page":"Getting Started","title":"Exact Inference in a GP in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This is only a slightly more interesting version of the first example on the README. It's slightly more interesting in that we give the kernels some learnable parameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Import the packages we'll need for this bit of the demo.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AbstractGPs\nusing LinearAlgebra\nusing Stheno\nusing Plots","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Short length-scale and small variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l1 = 0.4\ns1 = 0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Long length-scale and larger variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l2 = 5.0\ns2 = 1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Specify a GaussianProcessProbabilisticProgramme object, which is itself a GP built from other GPs.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f = @gppp let\n    f1 = s1 * stretch(GP(Matern52Kernel()), 1 / l1)\n    f2 = s2 * stretch(GP(SEKernel()), 1 / l2)\n    f3 = f1 + f2\nend;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Generate a sample from f3, one of the processes in f, at some random input locations. Add some iid observation noise, with zero-mean and variance 0.05.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"const x = GPPPInput(:f3, collect(range(-5.0, 5.0; length=100)));\nσ²_n = 0.02;\nfx = f(x, σ²_n);\nconst y = rand(fx);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Compute the log marginal likelihood of this observation, just because we can.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"logpdf(fx, y)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"27.201437490457963","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"fx should be thought of as \"f at x\", and is just as a multivariate Normal distribution, with zero mean and covariance matrix","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"heatmap(cov(f, x) + σ²_n * I)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As such samples can be drawn from it, and the log probability any particular value under it can be computed, in the same way that you would an MvNormal from Distributions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can visualise x and y with Plots.jl","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"plt = plot();\nscatter!(plt, x.x, y; color=:red, label=\"\");\ndisplay(plt)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"It's straightforward to compute the posterior over f:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior = posterior(fx, y);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior is another GP, the posterior over f given noisy observations y at inputs x.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The plotting recipes from AbstractGPs.jl can be utilised to easily print whichever component of the GPPP is needed.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"x_plot = range(-7.0, 7.0; length=1000);\nxp = GPPPInput(:f3, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp);\n    ribbon_scale=3, label=\"\", color=:blue, fillalpha=0.2, linewidth=2,\n)\nplot!(\n    plt, x_plot, rand(f_posterior(xp, 1e-9), 10);\n    samples=10, markersize=1, alpha=0.3, label=\"\", color=:blue,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you've built a simple GP probabilistic programme, performed inference in it, and looked at the posterior. We've only looked at one component of it though – we could look at others. Consider f2:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"xp2 = GPPPInput(:f2, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp2);\n    ribbon_scale=3, label=\"\", color=:red, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior(xp2, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:red,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-NelderMead-in-2-Minutes","page":"Getting Started","title":"Fit a GP with NelderMead in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Stheno.jl is slightly unusual in that it declines to provide a fit or train function. Why is this? In short, because there's really no need – the ecosystem now contains everything that is needed to easily do this yourself. By declining to insist on an interface, Stheno.jl is able to interact with a wide array of tools, that you can use in whichever way you please.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Optim requires that you provide an objective function with a single Vector{<:Real} parameter for most of its optimisers. We'll use ParameterHandling.jl to build one of these in a way that doesn't involve manually writing code to convert between a structured, human-readable, representation of our parameters (in a NamedTuple) and a Vector{Float64}.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"First, we'll put the model from before into a function:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function build_model(θ::NamedTuple)\n    return @gppp let\n        f1 = θ.s1 * stretch(GP(SEKernel()), 1 / θ.l1)\n        f2 = θ.s2 * stretch(GP(SEKernel()), 1 / θ.l2)\n        f3 = f1 + f2\n    end\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"build_model (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've assumed that the parameters will be provided as a NamedTuple, so let's build one and check that the model can be constructed:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\n\nθ = (\n    # Short length-scale and small variance.\n    l1 = positive(0.4),\n    s1 = positive(0.2),\n\n    # Long length-scale and larger variance.\n    l2 = positive(5.0),\n    s2 = positive(1.0),\n\n    # Observation noise variance -- we'll be learning this as well.\n    s_noise = positive(0.1),\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(l1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-0.9162907691270586, Bijectors.Exp{0}(), 1.4901161193847656e-8), s1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.6094379869399091, Bijectors.Exp{0}(), 1.4901161193847656e-8), l2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(1.6094379094538682, Bijectors.Exp{0}(), 1.4901161193847656e-8), s2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.490116130486996e-8, Bijectors.Exp{0}(), 1.4901161193847656e-8), s_noise = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-2.3025852420056685, Bijectors.Exp{0}(), 1.4901161193847656e-8))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've used ParameterHandling.jls positive constraint to ensure that all of the parameters remain positive during optimisation. Note that there's no magic here, and Optim knows nothing about positive. Rather, ParameterHandling knows how to make sure that Optim will optimise the log of the parameters which we want to be positive.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can make this happen with the following:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\nusing ParameterHandling: value, flatten\n\nθ_flat_init, unflatten = flatten(θ);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Concrete types used for clarity only.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"unpack = value ∘ unflatten;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now easily define a function which accepts the flat form of the parameters, and return the negative log marginal likelihood (nlml) of the parameters θ:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function nlml(θ::NamedTuple)\n    f = build_model(θ)\n    return -logpdf(f(x, θ.s_noise + 1e-6), y)\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"nlml (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can use any gradient-free optimisation technique from Optim.jl to find the parameters whose negative log marginal likelihood is locally minimal:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Optim\nresults = Optim.optimize(\n    nlml ∘ unpack,\n    θ_flat_init + randn(length(θ_flat_init)),\n    NelderMead(),\n)\nθ_opt = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Note that we just added some noise to the initial values to make the optimisation more interesting.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now use this to construct the posterior GP and look at the posterior in comparison to the true posterior with the known hyperparameters","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_opt = build_model(θ_opt);\nf_posterior_opt = posterior(f_opt(x, θ_opt.s_noise), y);\nms_opt = marginals(f_posterior_opt(xp));\nplot!(\n    plt, x_plot, mean.(ms_opt);\n    ribbon=3std.(ms_opt), label=\"\", color=:green, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_opt(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:green,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Of course, the exact posterior has not been recovered because the exact hyperparameters cannot be expected to be recovered given a finite amount of data over a finite width window.","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-BFGS-in-2-minutes","page":"Getting Started","title":"Fit a GP with BFGS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The BFGS algorithm is generally the preferred choice when optimising the hyperparameters of fairly simple GPs. It requires access to the gradient of our nlml function, which can be straightforwardly obtained via reverse-mode algorithmic differentiation, which is provided by Zygote.jl:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Zygote: gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This will probably take a while to get going as Zygote needs to compile.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"results = Optim.optimize(\n    nlml ∘ unpack,\n    θ->gradient(nlml ∘ unpack, θ)[1],\n    θ_flat_init + 0.1 * randn(length(θ_flat_init)),\n    BFGS(),\n    Optim.Options(\n        show_trace=true,\n    );\n    inplace=false,\n)\nθ_bfgs = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Iter     Function value   Gradient norm \n     0     3.295747e+00     3.143708e+01\n * time: 0.029603004455566406\n     1    -1.605794e+01     2.055629e+01\n * time: 1.65146803855896\n     2    -1.892856e+01     1.965278e+01\n * time: 1.6676430702209473\n     3    -2.116535e+01     1.882424e+01\n * time: 1.678678035736084\n     4    -2.336828e+01     1.634155e+01\n * time: 1.7183868885040283\n     5    -2.524716e+01     1.364583e+01\n * time: 1.7312030792236328\n     6    -2.947500e+01     6.830471e+00\n * time: 1.742393970489502\n     7    -2.998946e+01     1.706022e+00\n * time: 1.753533124923706\n     8    -3.021057e+01     1.298732e+00\n * time: 1.7646520137786865\n     9    -3.023662e+01     1.936338e-01\n * time: 1.7755720615386963\n    10    -3.023740e+01     3.676366e-02\n * time: 1.787024974822998\n    11    -3.023746e+01     4.200463e-03\n * time: 1.7977619171142578\n    12    -3.023746e+01     1.180803e-03\n * time: 1.827613115310669\n    13    -3.023746e+01     5.759071e-05\n * time: 1.8403809070587158\n    14    -3.023746e+01     7.782178e-07\n * time: 1.8576600551605225\n    15    -3.023746e+01     1.240441e-09\n * time: 1.8775761127471924\n","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Once more visualising the results:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_bfgs = build_model(θ_bfgs);\nf_posterior_bfgs = posterior(f_bfgs(x, θ_bfgs.s_noise), y);\nms_bfgs = marginals(f_posterior_bfgs(xp));\nplot!(\n    plt, x_plot, mean.(ms_bfgs);\n    ribbon=3std.(ms_bfgs), label=\"\", color=:orange, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_bfgs(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:orange,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Notice that the two optimisers produce (almost) indistinguishable results.","category":"page"},{"location":"examples/getting_started/#Inference-with-NUTS-in-2-minutes","page":"Getting Started","title":"Inference with NUTS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl provides a state-of-the-art implementation of the No-U-Turns sampler, which we can use to perform approximate Bayesian inference in the hyperparameters of the GP. This is slightly longer than the previous examples, but it's all set up associated with AdvancedHMC, which is literally a copy-paste from that package's README:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AdvancedHMC, Zygote","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define the log marginal joint density function and its gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"ℓπ(θ_flat) = -nlml(unpack(θ_flat)) - 0.5 * sum(abs2, θ_flat)\nfunction ∂ℓπ∂θ(θ_flat)\n    lml, back = Zygote.pullback(ℓπ, θ_flat)\n    ∂θ_flat = first(back(1.0))\n    return lml, ∂θ_flat\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"∂ℓπ∂θ (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Sampling parameter settings","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"n_samples, n_adapts = 500, 20","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(500, 20)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perturb the initialisation a little bit.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"θ0_flat = θ_flat_init + 0.1 * randn(length(θ_flat_init))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"5-element Vector{Float64}:\n -0.8767022677112484\n -1.7626269410836042\n  1.5305503037964932\n -0.011660201474886386\n -2.298773836279351","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define metric space, Hamiltonian, sampling method and adaptor","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"metric = DiagEuclideanMetric(5)\nh = Hamiltonian(metric, ℓπ, ∂ℓπ∂θ)\nint = Leapfrog(find_good_eps(h, θ0_flat))\nprop = NUTS{MultinomialTS, GeneralisedNoUTurn}(int)\nadaptor = StanHMCAdaptor(n_adapts, Preconditioner(metric), NesterovDualAveraging(0.8, int.ϵ))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"StanHMCAdaptor(\n    pc=WelfordVar,\n    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.4),\n    init_buffer=75, term_buffer=50, window_size=25,\n    state=window(76, -30), window_splits()\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perform inference.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"samples, stats = sample(h, prop, θ0_flat, n_samples, adaptor, n_adapts; progress=true)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"([[-0.9189218709128281, -1.4572494597413563, 1.4878860087047814, 0.2687000978577557, -4.102356203619429], [-0.9189218709128281, -1.4572494597413563, 1.4878860087047814, 0.2687000978577557, -4.102356203619429], [-1.1752720426466192, -1.0968592442548393, 1.4887831845107689, -0.702529697360219, -4.00741325229041], [-1.3754225768256332, -1.8568830554317066, 1.296855581894269, 0.38499405563686034, -4.002413485536114], [-1.3990635475158741, -1.542614658715443, 1.7259085242387557, -0.0946221942661859, -3.9746545367898163], [-1.3649240990418028, -1.4954748020740507, 1.6265605613609426, 0.10076554404473517, -3.9045877950949297], [-0.8626055604545118, -1.3270719192067184, 1.766500182024131, 1.003309229355955, -3.92099048371021], [-0.6837174373897933, -1.302046147765367, 1.9728563212740868, 0.8401175709802617, -3.7806411721953577], [-1.3990979417137392, -1.8211236967295588, 2.141396314717033, -0.5081121168478056, -4.228894454443592], [-0.9038924201936569, -1.4250811764561342, 1.8966913020336302, 0.022096177840252806, -3.4959424706442754], [-0.48057099167320694, -1.2448337481936362, 1.8669813429373985, -0.14122622926481665, -3.6204150799609884], [-0.7140527111490359, -1.212387914172425, 1.8796740709320239, -0.23772435680837414, -3.4080564944302076], [-1.393841183961396, -1.590493828696051, 2.115414433250526, -0.25447587788863013, -4.427914459646724], [-1.393841183961396, -1.590493828696051, 2.115414433250526, -0.25447587788863013, -4.427914459646724], [-1.0941301907345113, -1.6484879703198116, 2.090691635282411, -0.6556690152467867, -3.978145258497733], [-1.3153603184909644, -1.547806244290316, 1.7118201494929968, -0.3474325533079278, -3.6419635708052525], [-1.362990182472531, -1.498272298075929, 2.2730507105883078, 0.13951274680380438, -4.135404189681979], [-1.22296347519642, -1.442518077620869, 1.954134105623273, 0.4604792285990373, -3.8290689315875066], [-1.381646630403365, -1.2377745608360877, 2.2357954790096044, -0.1863945398719804, -3.805434914728314], [-1.3635870011990856, -1.3660027816596414, 2.2559529428760072, -0.1473545270218525, -3.9322752623312027], [-1.3130778701527277, -1.853527419823031, 2.434006852671831, 0.10388026059910596, -4.298009794319675], [-1.2272656240515993, -1.7988270782884843, 2.478137352517669, 0.1550384945085852, -4.35527411167526], [-1.5492087857199461, -1.5106520633990117, 2.0683426664287228, 0.2558580803143655, -3.897418215645434], [-0.9833367343038288, -1.4959103330235333, 1.4877707539178564, 0.7117740205409224, -4.014993431546515], [-1.3907434528444373, -1.6712731885868726, 1.5977034387763347, 0.6379455473408566, -4.158198778805067], [-1.1318980949081308, -1.3499539599027146, 1.8630115136015015, -0.3046516677645235, -4.030318659099761], [-1.2539105216665896, -1.3629373225863426, 1.8700671970795002, 0.21294725392569808, -4.058469675184287], [-1.3408027637248734, -1.6041134162796034, 1.374066914643687, -0.24251403978290303, -4.0948613764749275], [-1.119237594584002, -1.5694665547303719, 1.8490470922419957, -0.013027651092917841, -3.8536021550662363], [-1.282025484925052, -1.4067637462939708, 1.2916836323584198, -0.004958110484874333, -4.3847039032262], [-1.1043991016189145, -1.5819312572109059, 1.1500561027272014, -0.00042628350193223835, -3.771390874717964], [-1.478630973123155, -1.7743200755979183, 1.8331929198793513, 0.0721753877710159, -3.98860310907494], [-1.363285560987935, -1.7002693470519583, 1.845042811211634, 0.06181305420643754, -3.9881224523155265], [-1.138391484017156, -1.4020813132733931, 1.5849535986523686, 0.2936565973560204, -4.055812213882295], [-1.266171579399091, -1.3651452433395825, 1.6190105521891967, 0.12061386360699251, -4.145668074664388], [-1.1967148020592975, -1.5016985419813091, 1.6056135593465328, 0.2043204701279354, -3.88600049030255], [-1.1471206715499533, -1.7201966029059632, 2.107532927267606, -0.058799581967696704, -4.271490219112749], [-1.3348564945512504, -1.491482868035593, 2.2062607352301917, 0.18403512081692336, -3.918636263823289], [-1.3160913679094342, -1.343863133865207, 1.9536623355516824, -0.4956870648822583, -4.173776590387351], [-1.2323654944798752, -1.5610809196784876, 1.9036490420103718, -0.6116092744500665, -4.05451649178223], [-1.1884240728627795, -1.4212239234278863, 2.2891834858435973, -0.4209537951226255, -4.112644423723717], [-1.4461263419180541, -1.597215789884243, 2.230261861322694, -0.6020973430863422, -3.820700863125539], [-1.1848583359803122, -1.6653530205104141, 2.103140498856204, -0.48422191284528404, -4.333642274898854], [-1.2452585405599583, -1.3599793546905217, 0.8964717571496577, 0.07559822257319665, -3.914194829679019], [-1.4208610474667882, -1.610452613930188, 2.1722965901503977, -0.3047233337088537, -4.09204548343739], [-1.1281049649985415, -1.6188870437632168, 2.338774854202075, -0.2263920077980242, -3.9380373822561117], [-1.2382858098114071, -1.559905714149581, 1.7512411394674605, 0.16333012083860848, -3.7172304555303044], [-1.0371904091398907, -1.3144680966961897, 1.5345904915616204, -0.14891958139183745, -4.155112541959435], [-1.3641256862312339, -1.5803330141873042, 1.7898526836387294, 0.006888053207696615, -4.019153971580727], [-1.302030403672057, -1.3207460313465436, 1.8769336542549608, -0.07108416021463282, -4.073210002084848], [-0.9921944083088688, -1.7008327376298316, 1.6342831380538565, -0.32742162667570507, -4.015158094477247], [-1.325416255569921, -1.436158198633494, 1.3473187139395169, -0.22632427302206592, -3.9653499355434323], [-0.9786707305233167, -1.3951289991281826, 1.3878830501006671, -0.49970385963402153, -4.113902163407598], [-1.263901607825369, -1.7332005949832765, 2.690618554770249, 0.2590265344062358, -4.1893563474726925], [-1.1024692914421301, -1.3846649798322863, 1.2867396545037424, 0.1838261238893643, -4.028826539590042], [-0.7750634601155102, -1.392333817433277, 2.3819231192682917, 0.06561756074918279, -3.6861513325062227], [-1.3792044962150571, -1.4335917787119652, 1.0247018977345117, 0.06412285440769093, -4.161959768646044], [-1.1209168257306594, -1.598045753818971, 0.604771800737167, 0.16430526201788412, -3.963317734169176], [-1.0194373290755712, -1.4320752749020413, 0.8887858434012786, 0.3304398326888551, -3.691095637649824], [-0.3967599295173413, -0.7867504136062288, 0.5619828371535948, -0.3402322568836618, -3.994017336006339], [-0.31134451662308915, -0.6116910435415835, 1.045683314916417, 0.030691357229765126, -3.6534121562132205], [-0.3382089225441782, -0.9014355963057108, 2.0415457207959657, -0.3046023142597812, -3.988346572113333], [-0.8615941343119524, -1.6435745620504725, 2.87551684019725, 0.42418294374753096, -3.8159707808703103], [-1.1961621989658155, -1.3965578846012225, 1.7853715974953506, 0.4530390321261355, -4.336177254477188], [-1.177781266918132, -1.7132598680407833, 1.4568287668962425, 0.40693704160349625, -3.771812105413422], [-1.294877406477881, -1.360319337894059, 2.452529444351371, 0.5217464992517633, -4.375367139479535], [-1.2539661833078872, -1.507949452872496, 2.18407575324665, 0.38587377713808013, -4.036457093880947], [-1.467652059174227, -1.5630550407185035, 2.2680401388586513, -0.17780893294913497, -3.9983775663119117], [-1.092514335809822, -0.9167778585991969, 1.032634575592895, 0.1679515159498024, -4.220996291822966], [-0.7466558152949518, -1.4089749396519524, 1.1975892724711883, 0.23770706988630444, -3.6127375996639466], [-0.6846352627524053, -1.2047638821229134, 1.3971188902177043, 0.09144596576228271, -3.7803686742264455], [-0.7106752403628953, -1.4205342721537801, 1.207523854238397, -0.016405959459358528, -3.818042301924941], [-0.481996204653485, -0.8259946969649299, 1.8617720932393311, 1.1606016379392188, -3.981429586600737], [-1.6382326717062388, -1.6749846999232907, 1.5589188612226357, -0.5087320756122513, -4.24928863869795], [-1.4859334603238528, -1.725781354785417, 1.5833306234354172, -0.5526620845198299, -4.247143963451054], [-1.2485686918281138, -1.5074526122642429, 2.2913603891573353, 0.6453575315373394, -3.9163663915019504], [-1.3276809350781067, -1.4611575941749326, 1.2631334806548409, -0.0034246835504348483, -4.199286562904054], [-1.3492187638274729, -1.7888173012375805, 2.094328882794801, 0.6543515794312975, -3.7728704534736397], [-1.2630971308310082, -1.5522871580658668, 2.1600296496603932, 0.01651688897641984, -4.424687994761884], [-1.2129141142331505, -1.5035776511505972, 2.301476450725954, 0.842879565489124, -3.8042416290125436], [-1.1815129027209625, -1.6458081297748544, 2.642480392089439, 0.5963890270215627, -4.001986561522033], [-1.337988565998135, -1.5335408769083703, 2.0837954650283037, -0.12841917991073012, -3.9222035245582085], [-1.1515929234363007, -1.461243786349098, 2.705949726181848, -0.3867770119878866, -4.160190225393867], [-1.0964674670744896, -1.4565517973472106, 2.672943428382488, -0.3442237404409843, -4.165328344908066], [-1.2469448431876033, -1.6872698983031456, 1.4545835989872515, 0.9046164285842538, -4.067509895985248], [-1.1421810858522952, -1.4361971074541908, 3.2790713886858205, -0.17547050437003808, -4.050489142539308], [-1.146743220184892, -1.1375143086723665, 3.406474386203206, 1.0720679453550073, -4.070891025262548], [-1.1122096869608384, -1.278847176806169, 0.5948188557919417, 0.10093445977590942, -4.037235701951524], [-1.386869483889068, -1.6871629803767934, 0.4467470697967365, 0.19705508494792282, -4.142790328550019], [-1.1758203826172875, -1.5331953423763247, 0.4493497549582929, 0.21329278106182054, -3.9122365839275375], [-1.2792827609873776, -1.6260572458762257, 1.6797760430045279, 0.24924348695295084, -4.332714802136002], [-1.4284373622031277, -1.671714766447628, 1.60533677169918, 0.23291011898522246, -3.8685693639436964], [-1.0548621214554146, -1.6764903012634078, 1.5544426000908473, 0.12512533024589034, -3.966952099686927], [-1.1396716887339142, -1.4339352526252513, 1.6413509330601226, 0.5362294279497989, -3.8915033287722727], [-1.5040062243345034, -1.5406112334171294, 1.5958736876298631, 0.30733451783576626, -4.07311122424472], [-1.1373272881800276, -1.4275888850566876, 2.213285020750351, 0.26504371546231786, -3.9676152533964952], [-1.431528237228074, -1.6742446500433124, 2.8632318441582236, 0.276505740298319, -4.143189730606979], [-1.2540196475316117, -1.6198594630139027, 2.7098708196729997, 0.6071637829277271, -4.02588555965365], [-1.234618555407483, -1.5930854301236386, 2.109018858870795, 0.16095307920743906, -4.271679447006865], [-1.5223640306670339, -1.6464893577647428, 1.6425679036315328, 0.3748019060822103, -3.985779194859596], [-1.3290376711902392, -1.866942467663798, 1.6377650153359211, 0.4979632398123136, -3.8242175490243477], [-1.383287335213791, -1.9215595141164148, 1.8551920484011912, -0.06638440088126052, -4.012431849930895], [-1.072937555581811, -1.3983010821090616, 1.7073524021154862, -0.0611021783565588, -4.091842220088912], [-1.340863516148514, -1.5929629774167535, 1.173291776529663, -0.336804246086957, -4.330901600395292], [-1.1695371463461293, -1.5079814142854915, 2.260791924264105, 1.01005645668213, -4.027987088113509], [-1.3212237614394096, -1.695893689814479, 1.7710418418053704, 0.44303826472404184, -3.939735988969713], [-1.0145435049615061, -1.1408696029743959, 2.0949315091750567, 0.04074808015776481, -4.25115616675266], [-1.3791157687976474, -1.6510757890766523, 1.3270997252472638, 0.3118533238693518, -4.014766025060752], [-0.9909335624251912, -1.3972199086390642, 1.1185043068809242, 0.18382312548326363, -4.232916671052387], [-1.0299890631512798, -1.2542971690675715, 0.6641197702794981, -0.2593896577874369, -3.8640943113776527], [-1.1412726080573226, -1.5184784355763294, 2.409882918723892, 0.23231242984326494, -3.771305110456342], [-1.2456280107499438, -1.636678053060157, 1.1869659156611019, 0.02204324504892157, -3.953458581972822], [-1.254216479811078, -1.560832966347476, 2.0340123553078757, 0.5134511907993324, -4.247169261196365], [-1.2979242245863372, -1.3458440251633936, 2.6173173386334727, 0.7579531015663747, -4.328319214753866], [-1.4026519525172205, -1.7368832011982063, 1.83440141891627, 0.037331362962620296, -4.09856956105424], [-1.3486328459125236, -1.8398213220255522, 1.8392081506937275, 0.010342582451069858, -4.21533485412681], [-1.177885747532275, -1.683525200189333, 1.6448529260926388, 0.5681386974650595, -3.8624635341060314], [-1.316634170688595, -1.6378761171281728, 1.8889121131323663, 0.6657146461499176, -4.106533917211604], [-1.2639272271751614, -1.4190391538842217, 1.6397363837469594, -0.02771379571007987, -4.184363916633897], [-1.3027327229666872, -1.5245746927107422, 1.6556213179088475, 0.31944088123895076, -4.1739565807625], [-0.6667269824904537, -1.26072251273333, 1.930738184473339, 0.2520532047307439, -3.9822942833199884], [-1.3857064474197973, -1.5774618591014042, 2.1071110724560254, 0.45201714380153574, -3.807759219704196], [-1.4004483596049166, -1.6143679771988086, 2.1137486445647378, 0.29108935827749466, -3.8694934760921145], [-1.2011695526572195, -1.4376444404933149, 1.185382808277641, 0.10675638078247, -4.1937889442135], [-1.339860833941262, -1.4027412628162121, 1.0809601724227602, -0.08438124402840341, -4.439288097479384], [-1.3221374158232917, -1.8115889320161833, 1.2767688020119587, -0.22240425634450597, -3.902485562948705], [-1.1656244292713978, -1.700295786963216, 1.4240474079147143, -0.06400993318605601, -4.216854406081123], [-1.4325499369298753, -1.5311553952443135, 2.05130541146367, 0.03817961086400581, -3.7821858554740753], [-1.3008996363299559, -1.8044464980204116, 1.865752420381274, 0.23747908804605167, -3.9094638135197832], [-1.1395287790443829, -1.5496275004371123, 1.58128017270069, -0.09296165514797997, -3.9544428501930677], [-1.4094219762379192, -1.5798983120000891, 1.1477256862679364, -0.22859088670046815, -4.282771102050654], [-1.2259387647418094, -1.511464891695282, 1.0410896517732233, -0.11161833450936504, -4.052313845028905], [-1.2680079588614004, -1.3402481752513509, 0.6954879296078321, 0.2767650948755762, -3.81182979878609], [-1.2334400322199641, -1.6713253598278697, 1.2770892528072173, -0.18496228835459733, -4.181399819396087], [-1.2340901720148647, -1.4338277101048056, 2.0466263517361014, 0.3053485464657017, -4.033700986542633], [-1.2759589609923405, -1.5232392820466576, 2.5843502316407134, 0.2981801119773604, -4.120604686122798], [-1.3483706819674657, -1.3634672204709388, 1.0364801037223363, -0.08936674461841607, -4.13392105960298], [-1.28567447676219, -1.591500257124457, 1.4578730426758117, 0.2403176508663337, -4.294414304971804], [-1.2230016091954528, -1.4591557851558683, 1.8366218287007248, 0.32585065364357124, -4.068938657455188], [-1.334087483068935, -1.6177510671207085, 1.5813512268165095, 0.18744968461805925, -4.164266296523352], [-1.3019374091025326, -1.61291260274455, 2.3386335972229957, 0.3272354831489054, -4.011992307612713], [-1.2082659403715927, -1.3947370133566486, 1.7420518095445834, 0.8044999126810621, -4.1146479422413735], [-1.445466880089093, -1.5725163430699276, 2.467217486466059, 0.8513522113758557, -3.972879420420788], [-1.124342960115144, -1.5945594573804953, 2.2652349028305667, 0.8129479408290962, -4.078224879063252], [-1.2745800078903042, -1.4501463974233666, 2.0746453902185493, 1.0288301192817557, -4.172681666863446], [-1.258296889968221, -1.5712477402949427, 2.215745325346145, 0.15009409464203902, -3.96346412173649], [-1.2586633853322253, -1.7862197728176588, 2.022303650316737, 0.3795735650994404, -4.1694037386222815], [-1.2177020374887726, -1.4980407379457985, 1.914863908615266, -0.2747864059025088, -4.3147105775715415], [-1.207510536745769, -1.5973011189340913, 1.4435987635799925, -0.045210666199439975, -3.915498445900206], [-1.1259979664116806, -1.1153557556602645, 1.5207144629012561, 0.7098356543302404, -4.017587339465121], [-1.491314442303437, -1.583670429692542, 1.3949508543032463, -0.42540658583093094, -3.8349784806927874], [-1.2039607612013663, -1.7323678791554442, 1.3511041132159092, 0.0698261324071098, -4.236399797019546], [-1.34127099913067, -1.6604738622638937, 1.5064296826534522, 0.25335096377419997, -4.427635229610645], [-1.3321691432935343, -1.5762529764587951, 1.171731929327569, 0.32579211569335126, -4.018821644107684], [-1.5106685732286287, -1.5888916125723356, 1.0976298820445274, 0.28682844558866727, -3.9926304108833466], [-1.2862358221163148, -1.314482517224348, 1.534235515870746, -0.39709470065231567, -4.087185235375986], [-1.310994112345319, -1.5187900136468806, 1.1593282607498687, 0.21882994404442863, -4.02741829829654], [-1.1070805371682488, -1.1265482782638987, 1.0255293604468159, 0.39947797266655394, -3.940582870843785], [-1.5699294930931251, -1.5283214831343126, 2.287696250036401, -0.39047545790126414, -4.067867780897279], [-0.5696288531682431, -1.0401780961266476, 1.8245426923574095, 1.040897532811372, -3.9232044353068654], [-1.108763202756088, -1.3504769883244887, 1.9378583034538932, 0.732331859475398, -4.106666166818193], [-1.2066628432451152, -1.5092673215055747, 1.7938686363782472, 0.26428435359782293, -4.136547535897781], [-1.2916104318456911, -1.5561629835145014, 1.6468575580429252, -0.007580248813354014, -3.8956874348684662], [-1.284621439588969, -1.3787171405361516, 1.3891968137647939, -0.29537567397119047, -3.951311965471378], [-0.775961566788864, -1.31212441295914, 1.3142780834524717, -0.19629874663656072, -3.9206183560566914], [-1.5244876568575023, -1.807247294588668, 2.5124462205371785, 0.5455044792014917, -4.262941475313037], [-1.2334114441326924, -1.2540960700613266, 2.6786731208110277, 0.03616698553171596, -4.404496674672809], [-1.2972532339662137, -1.6260970994168666, 1.8549870586667891, 0.260380118950435, -3.802814905049819], [-1.3160711654788106, -1.5021553311495621, 2.1683212246413084, 0.10283141279381158, -3.8819956491917575], [-1.3378959151211622, -1.4704509046875827, 1.9485922780190323, 0.2630881465646052, -4.195324185469346], [-0.9168573347994111, -1.5920817785602048, 1.5696543003090686, -0.3544134438544969, -3.704827190071162], [-0.9388050861211558, -1.8454127203770425, 1.6311908854345223, -0.10256445808307198, -3.66650939067114], [-0.9252416235429763, -1.6569814590903917, 1.8863193065530788, -0.21627541081142465, -3.7297617072739087], [-0.9860401599515143, -1.2996519150667947, 1.9704406026388022, -0.39441721688917136, -4.195068903428739], [-1.251194970105335, -1.1109024957889646, 2.0229683376440204, -0.2990765506940528, -3.8648382917433586], [-1.3847462047735073, -1.7093538094268432, 1.5489178199116338, 0.3671873267971289, -3.9162063911640193], [-1.2417428082947182, -1.5210777587439452, 1.650658889129455, 0.3131666613010981, -4.2548348347920815], [-1.2158110386465648, -1.5935225019806534, 1.8991075116464782, 0.04102204219183742, -3.9612741202068755], [-1.3347492648207435, -1.6423603217578533, 1.501824863831298, 0.1466370500532432, -4.044601978822946], [-1.1999790070680485, -1.3669503363519302, 1.9261915445216844, 0.3035137047119265, -4.172891263640254], [-1.020218331882615, -1.2623870879268813, 2.037858803284677, 0.4791730614584963, -4.225506587139469], [-1.2793351808139077, -1.260073563834514, 1.8771966518169305, 0.21238524749607413, -3.984214120808769], [-0.9773411639912029, -1.3219780245166712, 2.1403948416661662, 0.15126698072077643, -3.981343674517317], [-1.2184035923148884, -1.2425173123709472, 2.1718563674530107, 0.18542291851546286, -3.9306726517731345], [-0.9562093221963339, -1.4521241261653504, 2.3349089530365013, 0.16748966986108244, -4.013594244441265], [-1.6033688869590923, -1.5660784223464623, 2.9050962214196927, -0.14561251103207662, -4.139902323627016], [-1.1085522709845108, -1.599908960362662, 2.883809416898678, -0.07333363920317124, -4.114622085891645], [-1.4513834865598128, -1.7023894068662417, 2.6168245095240588, 0.1615975307079362, -3.7231929151202534], [-1.2881512071849601, -1.444619159301623, 2.4215674167680135, -0.13363897689679682, -4.0958274040775615], [-1.073801366993496, -1.4685059323707494, 2.351099383816904, -0.2715818064340047, -4.163627886308494], [-1.2914370530220363, -1.3131259046255215, 2.185299582819969, -0.2639614188242168, -4.047863997658056], [-1.3281248037740097, -1.3072618508467337, 2.2644474163385264, -0.24958669905436803, -4.033193328829638], [-1.1107371222425555, -1.3566388790430837, 2.261732818394632, -0.2109743458143512, -4.071371898654611], [-1.1236107378216158, -1.6299069974583988, 2.278685719268991, 0.11594545153541633, -3.924590278467975], [-1.3349127555035514, -1.5197848855029745, 1.6385497045997908, 0.38665019860863403, -4.305607912741749], [-1.4378289407024, -2.015741440448086, 1.381027975622876, 0.5936522047855247, -4.082087466730465], [-1.2420632769651274, -1.4647389713628027, 1.3075160504053964, 0.6203104716961908, -4.252678713699815], [-1.2626188179471978, -1.7222540977393002, 1.174656225463025, 0.5876664198888536, -4.353064049722805], [-1.2581898209461468, -1.4308018581847337, 1.2007098776853053, 0.009262741718865292, -3.8481929068896905], [-1.2678270828179468, -1.6009638073124737, 1.4181718068080789, 0.08241745636779188, -3.8267819334637707], [-1.5015316612825047, -1.728750049685752, 1.9651310599705571, 0.21355474422866852, -4.451512594525732], [-0.6701156899261655, -1.165054885416223, 0.9152528894933932, -0.13586201719660246, -3.863386243690299], [-0.6163806742575134, -1.240616142734758, 1.0802191571988395, 0.15377400020710622, -3.7941211977834066], [-1.031780140195706, -1.5291376173001847, 1.6310644288550213, 0.26569702858005595, -3.925226903783833], [-1.1816639880418756, -1.8517637718904327, 1.5112129765893616, 0.5138886697009617, -3.8587007275312564], [-1.3151661203628473, -1.486804846181168, 3.0912553432180245, 0.2263229331194638, -3.9479724488516386], [-1.2726428847838, -1.5448787283842036, 2.850449276797626, 1.2457765525694409, -4.109249493817652], [-1.4895319095984543, -1.9346057356031963, 2.739895800568418, 1.3489531481207517, -4.460144513481719], [-1.5441038976297048, -1.743676144070337, 2.7427238402995693, 1.3784959360411286, -4.617213691915047], [-1.697410376903595, -1.613840229915789, 3.0636528626119763, 1.3942908163874999, -3.8452551892390763], [-0.9604843642394343, -1.8745363656261478, 2.939384336160869, 1.5532957665363811, -3.9974210270804806], [-0.5515215265829178, -0.9064659278777816, 2.331164602336792, -0.36558625117440247, -3.939906544926635], [-0.5135696254274353, -0.9866827001090288, 2.053581431869234, -0.8234971574691051, -3.5450841153281383], [-0.4469692929290254, -0.8933360649600014, 1.8261271729583037, -0.26180398637360425, -3.8620497691069873], [-0.5022883980815671, -0.9021696924030073, 1.5208679469826683, -0.32421957396532036, -3.7759196491351603], [-0.3552264661325886, -0.6099688592333838, 1.1392010827288757, 0.095127378628008, -3.838795159326193], [-0.1940981154697457, -0.3337073317624811, 0.7921592552136975, -0.47337337002495844, -3.9408617141988374], [-0.22016134383214875, -0.3638469541096514, 0.5763027380392051, -0.09415249055566496, -3.7058598372174503], [-0.630031517865793, -0.6101966062284185, 0.30616983123341046, 0.5106178709790652, -3.9304476393118204], [-0.38630756358186624, -0.8052090540275182, 0.25369539127679086, 0.2842663865832513, -4.00737611350667], [-1.0178139473391132, -1.2132760667176605, 2.3361764035926944, -0.059706781551789906, -4.0282357081637565], [-1.5070367972491256, -1.8089739308160846, 1.7879892556224413, -0.01184916183080851, -4.1517538637283815], [-1.5463781195265658, -1.751856474556538, 1.825577191486874, 0.10637432342029252, -4.166556631700919], [-1.1689020535091836, -1.3194251641758112, 1.916479048996383, -0.15306798810844668, -3.993040952797963], [-1.2385689904203452, -1.2602094589444777, 1.725210131349444, -0.02713694338666134, -4.25083470350588], [-1.2583068111961395, -1.349758250877139, 1.7025349505255378, 0.011807459728547652, -4.235948232236508], [-1.38933293871446, -1.7562981405912517, 1.536252302393445, 0.6845798651574645, -4.142307447280896], [-1.2012535090800216, -1.3679869535902083, 1.400745649593392, -0.45725319956813637, -3.9886586983268004], [-1.0191478094208613, -1.1727729866226426, 1.302000711013186, 0.1448224252155565, -3.8835751465720847], [-1.1560243548918672, -1.2009521438273512, 1.2876291723756645, -0.04172405914160855, -3.9267725870919157], [-1.069632809134388, -1.4198845921711316, 1.622699652586676, 0.2088961341299742, -4.083488413540593], [-1.295734917950604, -1.5137081294170813, 1.7194406610278248, 0.1386488028267498, -4.071640628043581], [-1.0990630381550355, -1.4674064092789125, 2.1625364756461756, 0.41607953860113617, -4.107976882174117], [-1.3599267681497726, -1.6926997329604807, 2.333758134719593, 0.18882394186104465, -4.0661645847987495], [-0.9999395451630744, -1.2684666730753134, 2.2066447788688786, 0.43166574796622675, -4.022551822733936], [-1.492477265247657, -1.6859900706514943, 1.6463950930414308, -0.2448207637880316, -4.185097188714021], [-1.4784023402730715, -1.7923723682122636, 1.65315640035919, -0.14227279543579618, -4.23305911318021], [-0.45191619216205053, -1.1313517149046939, 1.278010499255838, 0.8668969726489995, -3.9370071708508076], [-1.100738824112097, -1.326204440566013, 1.244560587886752, 0.382951645003175, -3.7393011677558277], [-1.1879582984358061, -1.4222339741122108, 1.193911151518714, 0.2124460996345151, -4.224547023230944], [-1.2014563696064975, -1.6589238851591754, 2.327308490323393, 0.03317991289763657, -3.9708433956581755], [-1.0248611165654922, -1.3244686270653216, 1.7959827872853158, 0.22796766743848282, -4.10661872801066], [-1.3684709779060709, -1.5118104601383466, 1.134544089476912, -0.18881257945434685, -4.135071613539688], [-1.2327393881890838, -1.5793905262932042, 1.1835877715432799, -0.1479142848868374, -4.140807085706363], [-1.191408796750836, -1.5705381366389537, 1.2108120001713834, -0.22230214204028176, -4.099888492531506], [-1.12102624386065, -1.3363710673904259, 1.4960102296143551, -0.1165535335765773, -4.1605464897100255], [-1.1118670096560326, -1.4794120870897145, 1.8234539988674179, -0.036357178621153646, -3.6793904653941234], [-1.284847818228746, -1.486715860200458, 1.835576852147979, -0.15967524607791822, -4.013420338282482], [-1.1181659088554805, -1.4200144796861816, 1.8723211482315403, -0.30020555080329414, -3.9972090901426283], [-1.0816110419841203, -0.9404208426261337, 1.9763405525065605, 0.08902762279663329, -4.112321522254663], [-1.3509241575215325, -1.601366337962721, 1.8978157474122945, 0.5128907668648409, -3.833673871724267], [-1.4924637979123543, -1.954142709682277, 2.1845217558838583, 0.3349058682751814, -4.264507695021384], [-0.7829249652080178, -0.9422352448332303, 1.784062847420522, -0.30798600430359896, -3.84467052235652], [-0.8672768508677369, -1.4873673138096042, 1.9567439911741016, -0.1496970766160095, -3.781869450800612], [-1.0083163891616678, -1.7946443974658182, 2.573284038945528, -0.1758075842454435, -3.614154868416245], [-0.5103051558093413, -1.4285571102940815, 1.9940677717647273, -0.4261481055706939, -3.691568447602415], [-1.094695893758257, -1.241636834914914, 2.505080686449674, -0.47306385220335273, -3.9987739750884845], [-0.6556075163996455, -1.5676765039295217, 2.749988564331844, -0.3719520207824961, -3.9965365303541223], [-1.3231959759432723, -1.2446369172473977, 1.9908350974143434, 0.1158768692895388, -3.7698809985524497], [-0.8826402518450467, -1.7512073817301324, 1.7770778811037389, 0.48588291417072904, -3.9402255501698233], [-1.4767043739964447, -1.4217067478770329, 1.6373705546436141, 0.02868183522045084, -3.7415869543939535], [-1.225441285729497, -1.408220400203885, 1.5331542814434507, 0.07776180036916926, -3.652763610546911], [-1.546436900836101, -1.6402636020902464, 1.5671577419780738, -0.052551536355679565, -4.146312400314611], [-0.9998067643833367, -1.320307595096147, 2.072872319034999, 0.42938084109321123, -3.83531996376241], [-1.1832708087459054, -1.401891417724557, 2.0304798487077496, 0.3398163597105069, -3.821154654378501], [-1.5173373160660735, -1.7532471322732865, 1.833565954770958, 1.1985331036161295, -4.185860788385821], [-1.0865147538471727, -1.3764693897828484, 1.5125852925056875, 1.7372054722911223, -4.300583083152257], [-1.145587266542187, -1.3586685753841015, 2.582583863218126, 0.6433004463501131, -3.9319529316802178], [-1.1843917103317663, -1.5412277639578196, 1.2806884722455716, 0.19204389538141464, -3.9364192118786256], [-1.2521662873266763, -1.5096342987604119, 2.460775824480157, -0.046567336769272556, -4.007911678009756], [-1.2882221464914172, -1.467656169461249, 2.326980403099712, 0.8000441347167416, -4.394397231016659], [-1.3812736107258068, -1.5369308964710033, 2.794570701889415, 0.5291611393894129, -4.02697249313801], [-1.3716353856663912, -1.3819390520141879, 1.717705351857076, 1.3445376569184302, -4.026136259025601], [-1.2374035776633228, -1.468738204822667, 1.82520733609239, 1.3229637700678276, -4.078305463041676], [-1.2609774713383797, -1.4432171338780753, 1.853079776368872, 1.300475193387881, -3.7686803891960925], [-1.2008586699231005, -1.4332734915174143, 2.4077817531369154, 0.5496581321928472, -4.472032791277759], [-0.9880565179389457, -1.692826716128155, 1.8802899036000966, -0.20495967469118037, -3.733397264019191], [-1.1595744941352233, -1.2471593091728665, 1.9580070572969082, -0.08598148910416621, -4.2556884414029215], [-1.2082367214952656, -1.6723408851879824, 2.2113124297003046, -0.333998409300566, -3.7237433716158086], [-0.9890207620715432, -1.6302034345120415, 2.5068249957487065, -0.6784476015681297, -3.8747101072240593], [-1.1997692391332182, -1.2339885424798949, 1.187973697454134, 0.3499828511238472, -4.197555810905261], [-1.0380932779311027, -1.7531306540222886, 1.6432052113068745, 0.2831775986249855, -3.9705496774180693], [-1.3593731251050603, -1.36576747802251, 1.6665595667440887, -0.07147404009023275, -4.157987981508498], [-1.2656698189219149, -1.577382612410351, 1.7122967788993313, -0.01813639672790455, -4.340938289327566], [-1.0480971490995252, -1.0984263618037124, 1.972852064602322, -0.10610111735060428, -3.9003873627439494], [-0.7794715242325789, -1.4915517135922216, 2.0607064595806426, -0.04858088185399953, -4.050507387790039], [-1.1874225041352837, -1.5284704144448793, 1.9577007655914964, 0.18491712341203145, -4.265648005200578], [-1.4911743075520418, -1.6168385518669723, 1.941754254015564, 0.2136055786184741, -3.978343602106782], [-0.863939012007265, -1.0623741670328237, 1.811554102765699, 0.19393759672346478, -3.9296842197200936], [-1.0345359415737205, -1.524881086950056, 1.7678634856188373, -0.07829127633223865, -3.8704805258857853], [-1.0014413708015315, -1.5452487754828204, 1.7444230168856618, -0.06785221668542783, -3.7204081314911868], [-0.7941334446806779, -1.3898708639495811, 2.0457418797907883, -0.16124063258470783, -4.080116106786575], [-0.6626502818145984, -1.4690380784702513, 2.1520241315029525, -0.12462014720928577, -3.9451288721594624], [-0.8548329007468697, -1.2579281376088447, 1.9036893243700344, -0.10228249185780904, -3.875809810411465], [-0.6502867608296079, -1.291838032778457, 1.938907934971603, -0.3135631766773488, -3.95935216820078], [-0.8626206904200526, -1.6311813808100384, 1.5270562447503075, 0.1306891189301687, -3.6936460184019033], [-0.6969073819325685, -1.5634972506542024, 1.7998793863193228, 0.24639523716933998, -3.5892460180215373], [-0.6820454021603535, -1.2502584753500217, 1.7487516244194576, 0.3579839051711994, -3.7964013255869], [-0.5376947927158726, -1.1811456880966928, 2.158323685265756, 0.03682112458746667, -3.540340421541844], [-0.47293803777789006, -0.7743869405457794, 2.4262874159342496, -0.2546275122311824, -3.7859775367003703], [-0.6242783685395953, -1.0098304517224583, 2.3225617616587977, 0.5730996198209246, -3.8358850026380806], [-1.5103863522103362, -1.5959581898621953, 2.5386502830556115, 0.3735684719705103, -4.070754996802527], [-1.36861235572517, -1.7562606560670624, 2.6796967906163385, 0.5459549577363989, -4.033824544660773], [-1.0248283984415747, -1.181638084116716, 2.1547762583019527, -0.16697398425428833, -4.021813891918608], [-1.022328168255411, -1.2701083735266656, 1.7514639572998723, 0.4778647879063158, -4.221362355750641], [-1.2190531159075433, -1.6748475215873284, 1.9226931803000558, 0.11689593946417107, -4.003983431320333], [-1.0901028812742406, -1.432960047378731, 1.2212530285366738, 0.08291633957838143, -4.30510997111828], [-1.5039004875574864, -1.771770979171187, 1.360013186430085, 0.17647437950090009, -3.9363436368740228], [-1.6895645644520867, -1.663671626607461, 1.5121227947667295, -0.19448845681239202, -4.391398228981563], [-0.5222043551642923, -1.2038359143197632, 2.4706792007948444, 0.5019686185308322, -3.9435716697687364], [-1.4127765752445314, -1.5448694346739367, 2.7994639192361137, 0.28113793948012855, -3.8372931884274375], [-1.0318759046794868, -1.6964218494604957, 2.054575828298079, 1.295020310460886, -3.6449599093555882], [-1.2244328086565193, -1.1686589095790474, 2.506536928860776, 0.743378995684312, -4.283684863633793], [-1.182186756340189, -1.4007959148647227, 2.2906894499264983, 0.4395195018351217, -4.0437593499781155], [-1.2130913229433657, -1.6960547356189464, 3.0593047534186875, 0.05104451964188728, -4.063476144321137], [-1.2835832610979603, -1.561141495742846, 3.0416912282685566, 0.14299045225978446, -4.01109552570775], [-0.9854974440634463, -1.2495577069528567, 2.8496858791034745, 0.09660338987301577, -4.269806904096122], [-1.258834000099792, -1.599817444534792, 1.8205001569249961, 0.3490420845041791, -4.054219831144621], [-1.3559227376228566, -1.4335374383117092, 1.7835090986015136, 0.5093424125445651, -4.247497769319033], [-1.4037187906430058, -1.5499526738243816, 1.6682413146181843, 0.46678932400751855, -4.237726047132459], [-1.1206785210630466, -1.535631490107998, 1.3070868220483431, 0.9720772645178621, -4.0809472700835], [-1.1088320554737199, -1.2877161340509218, 1.5130341761679298, 0.5964736052031897, -3.937272433816133], [-1.458393446043309, -1.8983923929963036, 1.375166237236849, 0.2806280612819525, -4.063862003076235], [-1.1310881649675826, -1.3782435409738802, 1.489172842434736, 0.3180814588525037, -3.904667666525058], [-1.3548882831554667, -1.6183286766169347, 2.2239514127192836, 0.19675219479839123, -4.109775060466657], [-1.0760879542680355, -1.3767957267863522, 1.2941291769063097, 0.15383958203327192, -3.83752699995152], [-1.291862620783731, -1.4994865493361778, 0.580051083838406, -0.13765341627749342, -4.3786882456440575], [-1.2100334376279638, -1.33957946679224, 1.2871342519255133, 0.11880708978611802, -4.098355938869303], [-1.3342231028735472, -1.6940675662990237, 1.3885250486224903, -0.09366390419898549, -4.021416042988906], [-1.3786098806405604, -1.7884710570344207, 1.6076974582097427, -0.06506467451451502, -3.9664866003924777], [-1.3069506960718995, -1.394267425708027, 1.478519976180899, 0.18092329341171404, -4.301157022249344], [-1.0956870069131068, -1.5070019783762147, 1.6666836458302006, 0.04934335419637873, -4.21076585686062], [-1.4437182506964508, -1.659602164940612, 1.4605457441727958, 0.05729015748935257, -3.9422312833014237], [-0.9584033086739757, -1.017374601565791, 1.425939004416609, 0.43130627656219933, -4.196230917617975], [-1.199123677035077, -1.4472611827700097, 1.4152710337070467, 0.509118095621365, -4.21083538424273], [-1.2525845403293987, -1.3525079881968036, 2.2509162959604385, -0.31074329886677077, -4.258887916113685], [-0.855642645571733, -1.4318325412835717, 1.0644474603667826, 0.7287554376223782, -4.053512810470076], [-0.9224851906357978, -1.3912250880183707, 0.8866337242578298, -0.2387265782051738, -3.812197879170811], [-1.2662106395354185, -1.3200836227805783, 2.1274884496701514, 0.4722279738844215, -4.2482423629074395], [-0.9285575455507675, -1.3522138135612964, 1.789324169022386, 0.3128676796200209, -3.982623133328588], [-0.9832426171170275, -1.538054957040797, 1.2378271208286602, -0.09622097412317154, -3.7544942646292268], [-0.8809380372722742, -1.778737657830235, 1.4319848812297797, 0.11288723405055118, -3.9858405908066388], [-0.9628003049303594, -1.7248695590295997, 1.4866047345104993, 0.15155904785085178, -3.9944137851963277], [-1.3323379980239582, -1.3784943131185121, 1.4154516033151625, 0.837511041081339, -4.088957736421594], [-1.255305714221358, -1.9813405846492596, 1.0971090784156556, 0.627681320626126, -4.013162203942604], [-1.270917887623065, -1.7010670046065657, 1.5351456315835639, 0.11723295198855596, -3.8631844561360458], [-1.3389811705731876, -1.4078401611678815, 1.6996564639355312, -0.387929819291987, -3.9632773297766404], [-1.132091800345109, -1.6405798661496331, 1.3582864156745043, -0.030841836990926047, -4.102517381977003], [-1.2175240560577394, -1.4254847635422674, 2.0239636615767336, -0.014611018001609744, -4.278772412089567], [-1.482864864681275, -1.8332433656771219, 1.9291585754556198, 0.4638288005243933, -4.05296544556351], [-1.1057202193927806, -1.3579635704622335, 2.268772780290199, 0.7393847551538266, -4.301767201294], [-1.2129531806170906, -1.5998101444605342, 2.2170027815002604, 0.7012763454745199, -3.7338532893655327], [-1.0868784226198354, -1.7972116262577453, 2.281646442834215, 0.6351806824515407, -3.987384062731994], [-1.1964473612326498, -1.241127504575432, 2.154114397279532, 0.16452238951677367, -3.8041301021244265], [-1.4492388228219188, -1.3354794084349357, 1.481158122317435, -0.16638747087119174, -4.160275255832796], [-1.200232527739571, -1.9507073102184584, 1.2229947613767649, -0.2874570340318163, -4.031221260789642], [-1.2637596735693455, -1.382471137754792, 1.528672227079184, 0.2570718611720053, -3.841592580988902], [-1.2944983276127306, -1.330258876649109, 1.8480226437123741, 0.35288137386155394, -3.9818883651487265], [-1.0408065298695681, -1.5368642801341499, 1.9597728523120426, 0.3702476582703648, -4.0309766122757855], [-1.1278126678303715, -1.5908746864665806, 1.9838700286521356, 0.35764694928875257, -4.003936813867539], [-1.0178706565375164, -1.5484358944053982, 1.933573935065409, 0.2555226509944297, -4.015463391778074], [-1.1168027863968952, -1.354021788124901, 2.185146597938107, -0.21987842444456315, -4.0993949823966425], [-1.1698726278950693, -1.4011051174602729, 1.936626919356678, -0.3156407724328992, -4.362006900903665], [-0.8081955114659054, -1.033135077880952, 1.985227742836702, 0.4406919375928273, -3.6150003794571575], [-0.9773448917864387, -0.9817583727504879, 1.9501958104117156, 0.5100955896938021, -4.125762270682379], [-1.0124552318068247, -1.0527118915298233, 2.2948896522838758, 0.5530859749956197, -3.854985157049218], [-1.0209593424611882, -1.2644284261121546, 1.6622328877940058, 0.06666513540884023, -4.109575536307347], [-1.1324613907383907, -1.0930035144458072, 1.9150342001981413, -0.22955287698214477, -3.9056639909321658], [-1.1535488041454276, -1.0483593832043625, 1.6501235831894985, 0.36827173816781, -3.99305048800523], [-1.5385049547349867, -1.7305875159020072, 2.2052036220812923, 1.0962732264967738, -3.8456925052272735], [-1.2155933917104906, -1.373090033260474, 2.0129514318256296, 1.229816271117418, -3.824442719467469], [-1.4013259916016871, -1.5914960149416926, 2.338281815868481, 1.1220701656920258, -4.340160195394778], [-0.9236565763951168, -1.656168866950375, 2.465375095461701, 1.7473249754222404, -3.819023769170578], [-1.4131342838423353, -1.5383819654263011, 1.955268722368802, 0.27679168169670154, -3.7792638766152495], [-1.0269174482176198, -1.4536442975656345, 2.377815820302566, 0.33206051610157566, -4.165510252562773], [-1.476063715004078, -1.7193013417495413, 2.168103398999189, -0.06984029573046312, -4.04844322367422], [-1.130676502018677, -1.4240796600209147, 1.9919501228669736, -0.10651672634914773, -4.01211128983326], [-1.329504483293779, -1.3900591766683799, 1.4655009789122715, -0.011219440726775925, -4.283364284303632], [-1.237445156586851, -1.722491978222721, 1.1532384694858941, 0.11961441588060674, -3.7991306150060193], [-1.1751257432491926, -1.2715545845841447, 1.175999736137805, 0.029188069485076948, -4.1570776948328465], [-1.166206130427135, -1.4242105851091627, 2.0811002341491944, 0.08617048030082428, -4.107481862248826], [-1.086465586667682, -1.3307339336446278, 1.8805924222816441, 0.3877286924156517, -4.090534386093427], [-1.1910081465972346, -1.4505092453807966, 1.9463821297120905, 0.6763404129029897, -3.9660724244798558], [-1.207577055923304, -1.479635674619427, 2.1055295549840976, 0.23212631957953136, -4.232099106108916], [-1.3665639096581983, -1.5207067028348635, 2.1554629859805545, -0.16184809422084256, -3.9767946042622553], [-1.237294801389097, -1.6937242879076668, 2.0501371156208132, -0.15147628907035593, -4.117700443581965], [-1.3107623145483775, -1.3353426157708266, 2.4076531712821567, 0.5220904572398706, -4.09620970513309], [-1.3820508105605782, -1.6299017259041804, 1.3877247956392151, -0.24909110623641484, -4.121308288807979], [-1.2265367212664244, -1.3963130255783893, 1.5180711106884857, -0.27703208820682546, -3.9385794786767283], [-1.1121806681025836, -1.546434923599489, 2.1834608909002022, 0.6716896152654916, -3.866842845041929], [-1.2692688980661047, -1.658697500861728, 1.978393105087831, -0.4356158199873375, -4.270374706139544], [-0.9839920618771895, -1.4307553841234724, 2.259909665618061, 0.7511966861103477, -3.926502162886292], [-1.1764673840162587, -1.2422657456422062, 1.5414038034726734, 0.45439134672188286, -3.999384828437169], [-0.981249135060031, -1.1764790867673671, 1.772166614590951, 0.2661661365930899, -4.001592532613126], [-1.3041588573281686, -1.3837915907523504, 1.4754302962835157, 0.3801220258135791, -3.988015702793649], [-0.9660868851556188, -1.3934528837132676, 0.9632067492945366, -0.16393116752503056, -3.9948889738117086], [-1.208492864229875, -1.7925266059596914, 1.4877481468595588, 0.09465807739555991, -4.001228528612658], [-1.448282785185346, -1.5961567689105123, 1.8125366183495177, 0.06414131873732379, -4.0812639754903115], [-1.1525015854718905, -1.5035767771073585, 2.090042625574485, 0.23518306966792468, -4.208156793651818], [-1.2495426614240728, -1.5721985294675487, 1.8203148144811614, 0.5880933139342395, -3.727689618688324], [-0.5973519125580268, -1.6414966027367426, 1.5009687851156033, 0.1953309686411272, -3.591264386454713], [-1.4838951843165524, -1.238150882405197, 1.6863025083587209, 0.32604474032970265, -4.29582678774668], [-0.8667547177477796, -1.6079705179092671, 1.429054386973746, -0.41774698017350415, -3.6121074617816173], [-1.2884079994815099, -1.2690705607760966, 1.4193577671139823, 0.35412173434485206, -4.343136549992259], [-1.113291312188524, -1.5448542426564649, 1.323241053788972, 0.0962644215776199, -3.9928747582374005], [-1.4553609563079866, -1.6516941708746884, 1.3249337850694782, 0.3106685382353096, -4.2864651122714115], [-1.0453518734890395, -1.4386239732675703, 1.303681552955279, 0.14478651424380345, -3.8366471192930716], [-1.4498463289406698, -1.4876859700361922, 1.9030507378297192, 0.3254009820433019, -4.119894308640103], [-1.0805804712088232, -1.425715337500113, 1.8906504723668445, 0.5929076139005073, -4.280162545327691], [-1.3069683916756543, -1.4234638808312343, 1.7430233935625554, 0.8864086051107791, -4.132070547802102], [-0.9817080202315739, -1.4577301726824012, 2.2822772946832615, 0.7405030884586508, -3.7839504643514514], [-1.2353490791121557, -1.4744224695004389, 1.9102844590330996, 0.5983163188079161, -4.171275043587236], [-1.2390281161762273, -1.756630065261732, 1.478342089402162, 0.10487240492338984, -4.074623156957226], [-1.0291414420218035, -1.6313356169920652, 1.5064243120447962, 0.08441528005049953, -3.8343458653347438], [-1.0423102074556065, -1.6133171466192704, 1.6599368020197913, 0.3149351758268459, -3.703093695835338], [-1.384766622580125, -1.500402619477717, 1.986226616761484, 0.519151925247231, -4.152187840358246], [-0.9418625550958758, -1.5774696827312136, 1.8289036766773379, 0.7316916073926439, -4.1892320139499475], [-1.4198784593810088, -1.7463932612109274, 1.899222049222559, 0.0861300660890983, -4.041193250871758], [-1.1548384796776667, -1.1845568886910502, 1.2416267088222461, -0.3968057616692579, -4.040648689146242], [-1.1154940841108372, -1.3488795895087857, 1.1805646163671533, -0.3357601502380173, -4.182030913976752], [-1.298084695241937, -1.67952211831714, 1.4743689790042158, 0.4767279678398738, -4.052689288441042], [-1.2119866746399421, -1.313807545138698, 2.7294405928752927, -0.10005336848239887, -4.065807283161856], [-1.2703935260155268, -1.6377849470220462, 1.748941243145217, 0.6807669122211858, -4.3634401959912035], [-1.4366525456260437, -1.5765586232218338, 1.5952931977164073, 0.48275716681637926, -4.179684075704323], [-1.2289477860669908, -1.508169719176536, 1.5998448118350945, 0.1457414722407703, -4.405511433875343], [-0.7090974384059103, -1.3429696525916657, 2.2858212824445467, 0.19934377660101124, -3.836123911540798], [-1.324934811692702, -1.635715355152443, 1.8811195641305836, 0.23891894275381922, -3.9547661644644614], [-1.3082110975227035, -1.6862615123980977, 2.208634291920897, 0.0902212195287925, -3.9420604922328963], [-1.1223988052391412, -1.6753730741316566, 2.403510325346585, 0.19085662132200995, -3.961740094849127], [-1.2751752725716803, -1.6345006220556304, 2.154006809454375, 0.5782670411318291, -3.9777849979497892], [-1.3288145937110591, -1.1814396636191997, 1.4801276693111058, -0.7129766729248137, -3.967648441919813], [-1.26529113931238, -1.4051070573247864, 2.136295411993708, -0.5320762864949399, -4.128190033509011], [-1.1814947157847926, -1.584457190078244, 1.6705527912489577, 0.13323588748649567, -3.8696386583875704], [-1.3913570707048204, -1.371027084170672, 1.8176982072231893, 0.3261919226597646, -3.8595826073700072], [-1.156930617609451, -1.6976706730450082, 1.799542481277536, 0.11049877809095413, -4.082848910181564], [-1.4381282641713475, -1.4241276740571436, 2.1282025816927006, -0.34726893366959927, -4.268641836330419], [-1.150201275962311, -1.7249130508828274, 2.3840626095640367, 0.2241150301121138, -3.898908836755604], [-1.0572080450682666, -1.3321230983679069, 1.776914140132329, -0.12641379922946278, -4.202938611769213], [-1.3270459728488184, -1.2510878991132945, 1.7721050489730994, -0.49979286174591897, -4.096734326496107], [-1.5128158923552344, -1.7106221097136682, 1.574023254874798, -0.17728224864460443, -3.862282082384729], [-1.760217518741108, -2.0498416109451822, 1.4761222111823182, 0.06951435296068204, -3.6827732893552083], [-1.037056787274708, -0.8997376495482012, 1.8306495326826935, 0.1521134666015156, -4.328177322101154], [-1.2143722382824431, -1.6987845777675865, 0.785630714030259, -0.17683305827598522, -3.8542461934575805], [-1.3093361292653185, -1.2997413827443183, 0.7403134767703347, -0.018236396615140357, -3.9875402993935554], [-1.1566228603434972, -1.723080685721881, 1.1933411685485265, -0.26852958991901005, -3.7349801376449268], [-0.8851577981728211, -1.5141789910921535, 1.4184656872645216, 0.27902190240762015, -3.81893039442577], [-1.1200386947008663, -1.4047231900244013, 1.6263782120390515, 0.28189190075706316, -3.2435278269888794], [-0.9698541908932983, -1.2781030566204234, 1.6794067634264345, 0.3141228733357048, -3.2496506596584354], [-0.7680315727122573, -1.6286124890593912, 2.2044632576034457, 0.09421739813340042, -3.692641694241564], [-1.2334872350129364, -1.2207386318378257, 1.5158020954334763, -0.29890619195047463, -4.208856863866739], [-1.1084075169464442, -2.015209031562095, 1.7185306165264018, 0.15762293706960875, -3.879605379889134], [-1.27136463345649, -1.2303017621692676, 1.9344818294008006, -0.06334056639259539, -4.260224747629982], [-1.0947087257825836, -1.3142806010399872, 1.790870025808752, 0.20614820806370995, -4.272171915309254], [-1.2139240749184714, -1.2942095665352906, 2.2302775392999927, -0.007609763648841306, -4.144652946965571], [-1.2599750955527211, -1.6001304358534456, 1.6798761100247934, 0.18683129257671952, -4.197377652910934], [-1.1605690535075395, -1.6256103342759425, 2.022108873051729, -0.19155343488849602, -4.1406042611670415], [-1.3268150094727904, -1.5315903086023066, 1.9336455193495627, -0.09037829346235471, -4.1676110908670685], [-1.1887877748410274, -1.5244446117992527, 1.4729582542085673, 0.33192282790660366, -4.207615261251295], [-1.3291274259490733, -1.4968192647660143, 2.111880717057111, -0.07967027139361786, -4.063792012759493], [-1.2800522160973693, -1.5094530490559528, 1.9644076796945587, -0.37567980365054154, -4.340277723346396], [-1.485667975986658, -1.6935663859681789, 1.97536148058754, -0.42420846655453465, -4.252279173162476], [-1.5562455035947977, -1.516836361578975, 2.034599692748296, -0.2962414930280391, -4.255612769415398], [-0.7810925072856356, -1.205678139722521, 1.9874737056543765, -0.46755857694032404, -3.9953306373227075], [-1.3627763979719563, -1.4860001129753853, 1.5126594751374454, 0.25446632356315535, -3.897868583780445], [-1.4669626104758364, -1.9366561917905938, 1.5809572947708905, -0.19068923166070081, -4.2398036114139686], [-1.2313957666133062, -1.3799069257548755, 2.0761994524422187, 0.5485115461256391, -3.886336434618231], [-1.1886578065408495, -1.5084765202348165, 2.938634704673561, 0.48774717503914866, -4.29447967445221], [-1.1460815951083312, -1.5225518855666684, 1.7904640854583547, 0.24838890191444604, -4.0284702636939596], [-1.288940876195468, -1.3581634078683997, 1.7207348616679108, 0.2342737318833149, -4.253216107200279], [-1.231525299682903, -1.554902932568899, 1.7237398383645313, 0.6868101397747207, -4.1166105122122], [-1.3429220095131353, -1.5770350937371425, 1.6627192454844586, 0.5762889254656193, -4.260955852685403], [-1.058420714701005, -1.4702334765837988, 1.3483164144118827, 0.028744711008757473, -3.9483180596381637], [-1.2445382799647013, -1.3192484990797813, 2.0390637442028, 0.12475385397450489, -3.9489344235657016], [-1.2243370779739282, -1.6518920376050406, 2.1672484216157164, 0.35548198873777465, -4.005840150389716], [-1.2316958047389248, -1.449915943788075, 1.9841805904681407, -0.3463740606707848, -4.186789756776954], [-1.2950157701611227, -1.4030989507586482, 1.9432671557740482, -0.35941025714194036, -4.233428979518128], [-1.2704039343533764, -1.564143110901842, 2.1793842780458865, 0.1740859148069674, -3.9203084767736156], [-1.1439796638928765, -1.5303461698366871, 2.3481018059748244, 0.014664470913803216, -4.1978409581029155], [-1.119635071176228, -1.6190721392526743, 1.8512551759580773, 0.3423859906478767, -4.04638336990083], [-1.046653092549871, -1.4372974333177793, 2.435878854007721, 0.03355262304943484, -4.1897332182943385], [-1.0476873549384422, -1.4376564195115407, 2.4228943701070915, 0.023059361395840517, -4.144097909580453], [-1.2053865054786728, -1.5957432028664906, 1.9559019870761702, 0.13407665185266657, -4.283603929039783], [-1.198475026618943, -1.5876963842339864, 1.8535769815456422, -0.27925838971378764, -4.146186965099978], [-1.6429532368119781, -1.6733023244372405, 2.0318133801080385, -0.40052815794099683, -4.012661755292812], [-1.4485737722045202, -1.720835638515118, 1.9537905600899204, -0.4418953322161152, -4.126374805155302], [-1.0202302344180765, -1.3635580221918702, 1.8356843237844898, -0.002666191504553009, -3.9160748336399913], [-0.6732162421424709, -1.501043923457321, 1.867321726397395, -0.41692549102026416, -3.894396715210744], [-1.1295031722560138, -1.4324595585217403, 1.9283697831649877, -0.22980296210924414, -3.7255687408611498], [-1.1593278632218114, -1.6528887650469106, 2.003397235849522, -0.37961736404990415, -4.042979283340751], [-1.404971306505354, -1.5378138475259309, 1.9581037867722366, -0.5032505707957057, -4.0200211722642285], [-1.1721678052264926, -1.6544615030721885, 1.634462621150804, 0.029703852842322825, -4.129907812503543], [-1.1629636252165865, -1.671422084604995, 1.679345742900159, -0.04967073727939153, -3.943382725224791], [-1.4608432305035939, -1.687538815435943, 1.4036969346438066, 0.12206444808996379, -4.022966590429062], [-0.9668725315813234, -1.376388276593907, 0.976624715941565, -0.10462967615839215, -3.9790664030805396], [-1.191499807209022, -1.6183339405083297, 1.541743222051163, -0.09981845790660268, -3.8481788143861237], [-1.4854365060060515, -1.6084960904689851, 1.4602280553524467, -0.406215025065516, -4.196701798940793], [-1.0094152572931465, -1.2072179588195528, 1.3953110525458534, -0.07120673433090903, -4.20767462716932], [-1.5129733195890358, -1.8755056818295073, 2.1190086746523695, -0.6086446601354345, -4.071836411266041], [-1.4904113470602034, -1.7848020449275765, 2.0739215638555923, -0.4926413153070296, -4.135218642097433], [-1.3170147014706521, -1.5522818677968249, 2.1837431641056955, -0.4985894296119884, -4.013110971820359]], NamedTuple[(n_steps = 3, is_accept = true, acceptance_rate = 0.3333333333333333, log_density = 14.630569369256117, hamiltonian_energy = -5.677779464233081, hamiltonian_energy_error = -21.41237722091732, max_hamiltonian_energy_error = 2311.0094475063747, tree_depth = 1, numerical_error = true, step_size = 0.4, nom_step_size = 0.4, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = 14.630569369256117, hamiltonian_energy = -13.748665532796155, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 1446.964187846613, tree_depth = 0, numerical_error = true, step_size = 1.7122520847327034, nom_step_size = 1.7122520847327034, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.905507895082481, log_density = 11.611885611517447, hamiltonian_energy = -10.347831163214252, hamiltonian_energy_error = -0.3991859001392175, max_hamiltonian_energy_error = -1.2954817977460014, tree_depth = 3, numerical_error = false, step_size = 0.20204444038133998, nom_step_size = 0.20204444038133998, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9015768856070456, log_density = 14.986238534989724, hamiltonian_energy = -10.960362853666378, hamiltonian_energy_error = -0.5538888823868469, max_hamiltonian_energy_error = 1.1678395471773122, tree_depth = 3, numerical_error = false, step_size = 0.18125726049078505, nom_step_size = 0.18125726049078505, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.2578450549570275, log_density = 16.56295650368025, hamiltonian_energy = -11.18123832914541, hamiltonian_energy_error = -0.10402215526760195, max_hamiltonian_energy_error = 5.455635992492927, tree_depth = 3, numerical_error = false, step_size = 0.19377018104171945, nom_step_size = 0.19377018104171945, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9951718463375375, log_density = 16.359126012408453, hamiltonian_energy = -15.119542487244313, hamiltonian_energy_error = 0.00347047867541761, max_hamiltonian_energy_error = -0.016025742104378793, tree_depth = 4, numerical_error = false, step_size = 0.033736929170483945, nom_step_size = 0.033736929170483945, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9062629451773829, log_density = 12.992255639685869, hamiltonian_energy = -8.340497481776318, hamiltonian_energy_error = 0.050928201897033176, max_hamiltonian_energy_error = 0.19403386150616875, tree_depth = 4, numerical_error = false, step_size = 0.05391137593370158, nom_step_size = 0.05391137593370158, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 1.0, log_density = 13.217518649593796, hamiltonian_energy = -11.567463098873223, hamiltonian_energy_error = -0.024685421871495805, max_hamiltonian_energy_error = -0.08082777870415292, tree_depth = 4, numerical_error = false, step_size = 0.06987209215335173, nom_step_size = 0.06987209215335173, is_adapt = true), (n_steps = 23, is_accept = true, acceptance_rate = 0.9604040763482259, log_density = 13.453837784659003, hamiltonian_energy = -11.974397415096618, hamiltonian_energy_error = 0.03695852828984947, max_hamiltonian_energy_error = -0.20751309813221042, tree_depth = 4, numerical_error = false, step_size = 0.1259813570033112, nom_step_size = 0.1259813570033112, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.297943004999557, log_density = 13.039109352481464, hamiltonian_energy = -9.26618697504026, hamiltonian_energy_error = 1.008923453767128, max_hamiltonian_energy_error = 3.7514211902509675, tree_depth = 2, numerical_error = false, step_size = 0.2056037574769327, nom_step_size = 0.2056037574769327, is_adapt = true), (n_steps = 27, is_accept = true, acceptance_rate = 0.9974241158175091, log_density = 12.9058853495031, hamiltonian_energy = -10.57435926493796, hamiltonian_energy_error = -0.018037139745853636, max_hamiltonian_energy_error = -0.06049287565321393, tree_depth = 4, numerical_error = false, step_size = 0.04185401327330104, nom_step_size = 0.04185401327330104, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9058806536929129, log_density = 11.313240716736761, hamiltonian_energy = -10.081380104440173, hamiltonian_energy_error = 0.13039113253100965, max_hamiltonian_energy_error = 0.1682947600127278, tree_depth = 3, numerical_error = false, step_size = 0.07848928899558032, nom_step_size = 0.07848928899558032, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.957479812962742, log_density = 14.761611276531088, hamiltonian_energy = -9.48617412604979, hamiltonian_energy_error = -0.3577445509869541, max_hamiltonian_energy_error = -0.456462424462476, tree_depth = 3, numerical_error = false, step_size = 0.11085593737315357, nom_step_size = 0.11085593737315357, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.04137808451469961, log_density = 14.761611276531088, hamiltonian_energy = -10.86793826311799, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 11.687685635984426, tree_depth = 3, numerical_error = false, step_size = 0.18453210637381312, nom_step_size = 0.18453210637381312, is_adapt = true), (n_steps = 63, is_accept = true, acceptance_rate = 0.9944128049119235, log_density = 13.431552689661007, hamiltonian_energy = -9.742720349165777, hamiltonian_energy_error = 0.0043343871707133275, max_hamiltonian_energy_error = 0.011164153088245143, tree_depth = 5, numerical_error = false, step_size = 0.017624572187362395, nom_step_size = 0.017624572187362395, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9924821139144402, log_density = 13.724513661906304, hamiltonian_energy = -9.888572611031966, hamiltonian_energy_error = 0.01316424533014704, max_hamiltonian_energy_error = 0.02466127436884591, tree_depth = 4, numerical_error = false, step_size = 0.03331029235713592, nom_step_size = 0.03331029235713592, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9909161184202451, log_density = 16.61255398814803, hamiltonian_energy = -10.829123365333393, hamiltonian_energy_error = -0.14125811364464802, max_hamiltonian_energy_error = -0.14260744017987648, tree_depth = 4, numerical_error = false, step_size = 0.06225809047880021, nom_step_size = 0.06225809047880021, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9429219973361656, log_density = 15.88322934938729, hamiltonian_energy = -14.870532462691894, hamiltonian_energy_error = 0.06484737876751545, max_hamiltonian_energy_error = 0.16555446919078598, tree_depth = 4, numerical_error = false, step_size = 0.11502872768577865, nom_step_size = 0.11502872768577865, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.31962025026261875, log_density = 12.656499298790003, hamiltonian_energy = -10.965966524682678, hamiltonian_energy_error = 1.7182561079463667, max_hamiltonian_energy_error = 2.909482827405233, tree_depth = 3, numerical_error = false, step_size = 0.18233282700828515, nom_step_size = 0.18233282700828515, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9955497297443713, log_density = 15.154587807149024, hamiltonian_energy = -11.857325595810075, hamiltonian_energy_error = -0.0606621817700983, max_hamiltonian_energy_error = -0.12117085152804208, tree_depth = 3, numerical_error = false, step_size = 0.04410310818693594, nom_step_size = 0.04410310818693594, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9147595011091217, log_density = 13.255791022892772, hamiltonian_energy = -11.330037418399861, hamiltonian_energy_error = 0.0733840666389689, max_hamiltonian_energy_error = 0.20727708688540503, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9846133587792719, log_density = 12.693676130073454, hamiltonian_energy = -11.322600375513352, hamiltonian_energy_error = 0.09417872430950602, max_hamiltonian_energy_error = -0.22440650224128156, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 14.198862994700495, hamiltonian_energy = -11.560800214310522, hamiltonian_energy_error = -0.05509236538156159, max_hamiltonian_energy_error = -0.27842753615409777, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9935963970729349, log_density = 14.46714039551326, hamiltonian_energy = -12.389257090432237, hamiltonian_energy_error = -0.08415974841663676, max_hamiltonian_energy_error = -0.2576063778757618, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9940232932801492, log_density = 15.92470295040101, hamiltonian_energy = -13.170441605135075, hamiltonian_energy_error = -0.11249396933517097, max_hamiltonian_energy_error = -0.11880636976979275, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9958610780691013, log_density = 16.471762355711213, hamiltonian_energy = -14.936944570359584, hamiltonian_energy_error = -0.008469331700762694, max_hamiltonian_energy_error = -0.02407418853614196, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9079420167024194, log_density = 16.955216397219445, hamiltonian_energy = -14.134652033467932, hamiltonian_energy_error = 0.019827694632830628, max_hamiltonian_energy_error = 0.16322893691511986, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9995116997995107, log_density = 16.70659792138199, hamiltonian_energy = -16.203010676168013, hamiltonian_energy_error = -0.01976285124005628, max_hamiltonian_energy_error = -0.03631987584240193, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9598273113941315, log_density = 16.470895076611214, hamiltonian_energy = -14.86682851862721, hamiltonian_energy_error = 0.04538791386664265, max_hamiltonian_energy_error = 0.0757603732666805, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.977537569534466, log_density = 15.772435301487574, hamiltonian_energy = -14.01667324068012, hamiltonian_energy_error = 0.0007254093073818524, max_hamiltonian_energy_error = 0.09130925480792484, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7712259195538823, log_density = 15.163823873288678, hamiltonian_energy = -12.01496555883109, hamiltonian_energy_error = 0.21274675633429752, max_hamiltonian_energy_error = 0.46344836728663275, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 39, is_accept = true, acceptance_rate = 0.9745617912859666, log_density = 15.799533832793765, hamiltonian_energy = -13.196268485878363, hamiltonian_energy_error = 0.0026682371193107457, max_hamiltonian_energy_error = -0.16609882012617305, tree_depth = 5, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9897410029680861, log_density = 16.734876910075613, hamiltonian_energy = -14.843116903624956, hamiltonian_energy_error = -0.04254887477932279, max_hamiltonian_energy_error = -0.06541657578017279, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.955980392152521, log_density = 16.91801247925988, hamiltonian_energy = -15.019282884761838, hamiltonian_energy_error = -0.03318857244925688, max_hamiltonian_energy_error = 0.1176550774686298, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9880838966864388, log_density = 17.019670847011636, hamiltonian_energy = -15.947912321411742, hamiltonian_energy_error = 0.009062075095721767, max_hamiltonian_energy_error = 0.0237442886242043, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9282011361291843, log_density = 16.75916150387814, hamiltonian_energy = -15.408985820195953, hamiltonian_energy_error = 0.021738634313519967, max_hamiltonian_energy_error = 0.1296512607911282, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8907483717986818, log_density = 14.604377377376888, hamiltonian_energy = -13.788500128147161, hamiltonian_energy_error = 0.20780537073260952, max_hamiltonian_energy_error = 0.22698122344919547, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9691033386506462, log_density = 16.30161643792168, hamiltonian_energy = -12.970469439626193, hamiltonian_energy_error = -0.15510022889987596, max_hamiltonian_energy_error = -0.27409404098094114, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9930741191797523, log_density = 15.142149466577274, hamiltonian_energy = -14.132177135531602, hamiltonian_energy_error = 0.01109862585235355, max_hamiltonian_energy_error = -0.07213749872523856, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9939628075034284, log_density = 15.075294177772477, hamiltonian_energy = -13.56765058640109, hamiltonian_energy_error = -0.03428803373832778, max_hamiltonian_energy_error = -0.05352047015159833, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.932151108100461, log_density = 15.593894843510629, hamiltonian_energy = -12.128555677777902, hamiltonian_energy_error = -0.029822078197842217, max_hamiltonian_energy_error = 0.1367649193150271, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8902755866283928, log_density = 12.613016336087245, hamiltonian_energy = -11.701490455056458, hamiltonian_energy_error = 0.189985071594597, max_hamiltonian_energy_error = 0.22848712136554283, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9918205309762629, log_density = 13.584277328404465, hamiltonian_energy = -10.876683758384809, hamiltonian_energy_error = 0.03401190450423108, max_hamiltonian_energy_error = -0.09264013271742044, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 14.666121975879827, hamiltonian_energy = -10.126745981449718, hamiltonian_energy_error = -0.13534416801396532, max_hamiltonian_energy_error = -0.19659934402787904, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9833086096822565, log_density = 15.89036552714369, hamiltonian_energy = -11.17584977395251, hamiltonian_energy_error = -0.04197527723405514, max_hamiltonian_energy_error = 0.07262281424710793, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9643482546138179, log_density = 15.539648879882161, hamiltonian_energy = -13.179451372586673, hamiltonian_energy_error = 0.0015965638826465067, max_hamiltonian_energy_error = 0.07184774764779611, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9677229869806335, log_density = 15.552849914269133, hamiltonian_energy = -12.547958385069409, hamiltonian_energy_error = 0.04291645341793071, max_hamiltonian_energy_error = 0.09188370028994264, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9968480232198563, log_density = 15.936002864601253, hamiltonian_energy = -14.261405215897437, hamiltonian_energy_error = -0.021673995584084338, max_hamiltonian_energy_error = -0.14399455945514106, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9967003490955387, log_density = 17.067551191201808, hamiltonian_energy = -14.52795013913877, hamiltonian_energy_error = -0.04783043873199766, max_hamiltonian_energy_error = -0.07919232329742876, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9519755325007122, log_density = 16.4616621789187, hamiltonian_energy = -14.940102609571207, hamiltonian_energy_error = 0.07268537727032687, max_hamiltonian_energy_error = 0.10830186755923599, tree_depth = 2, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8894442599012365, log_density = 14.356172842317866, hamiltonian_energy = -13.37768381259595, hamiltonian_energy_error = 0.15757339111181246, max_hamiltonian_energy_error = 0.2121410122814691, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9959801546370138, log_density = 16.06877144785806, hamiltonian_energy = -13.813151525018341, hamiltonian_energy_error = -0.13651446914072096, max_hamiltonian_energy_error = -0.2368910970329665, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9180481107926184, log_density = 13.760969330132516, hamiltonian_energy = -11.323758546089604, hamiltonian_energy_error = 0.07973723531328503, max_hamiltonian_energy_error = 0.1939048501756595, tree_depth = 2, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 14.327141061522013, hamiltonian_energy = -10.503155588324791, hamiltonian_energy_error = -0.04444375338261253, max_hamiltonian_energy_error = -0.21253212596871052, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9699201201811427, log_density = 16.49524563284644, hamiltonian_energy = -9.754844487153015, hamiltonian_energy_error = -0.056792102660374155, max_hamiltonian_energy_error = -0.11126410476087045, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8924093789339931, log_density = 13.843114698137544, hamiltonian_energy = -12.341047306307704, hamiltonian_energy_error = 0.12747970984286994, max_hamiltonian_energy_error = 0.15634410383702857, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9724578166047936, log_density = 15.496237992931349, hamiltonian_energy = -11.046417498376083, hamiltonian_energy_error = -0.06348717416592642, max_hamiltonian_energy_error = -0.12856842763638276, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9087095011690988, log_density = 12.849569997689692, hamiltonian_energy = -11.52662667980275, hamiltonian_energy_error = 0.045473844499177574, max_hamiltonian_energy_error = 0.1661688562484258, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9926320142032883, log_density = 12.725633105718321, hamiltonian_energy = -10.599913180553619, hamiltonian_energy_error = 0.016547087422393858, max_hamiltonian_energy_error = -0.07985551141517888, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9846986588066529, log_density = 9.25335248274237, hamiltonian_energy = -7.06221474941465, hamiltonian_energy_error = -0.1362927807063885, max_hamiltonian_energy_error = -0.1511661367238757, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.938297471936462, log_density = 11.208602371576731, hamiltonian_energy = -8.219132244294972, hamiltonian_energy_error = -0.01232043561903673, max_hamiltonian_energy_error = 0.1812209239087288, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8140713112077061, log_density = 10.488254912320468, hamiltonian_energy = -6.930011396741955, hamiltonian_energy_error = 0.47375070394841323, max_hamiltonian_energy_error = 0.47375070394841323, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 1.0, log_density = 12.197519003255927, hamiltonian_energy = -7.925724007035813, hamiltonian_energy_error = -0.23939409435104864, max_hamiltonian_energy_error = -0.41351347662880755, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9562513268280994, log_density = 15.899301523763146, hamiltonian_energy = -10.238915840766005, hamiltonian_energy_error = -0.07367038357994815, max_hamiltonian_energy_error = -0.21444154885568523, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9870356739828475, log_density = 15.103046773810615, hamiltonian_energy = -14.292918363956622, hamiltonian_energy_error = 0.03039542623544733, max_hamiltonian_energy_error = -0.03954216528317467, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9994287029349017, log_density = 14.700857483251568, hamiltonian_energy = -13.17800064319185, hamiltonian_energy_error = -0.0025923719076814677, max_hamiltonian_energy_error = -0.06666895059986011, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9949281842271456, log_density = 16.868352280678764, hamiltonian_energy = -14.156629800103739, hamiltonian_energy_error = -0.06492747171869517, max_hamiltonian_energy_error = -0.06607640657506231, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8414063004994781, log_density = 15.392270739275961, hamiltonian_energy = -12.280488093911107, hamiltonian_energy_error = 0.08820003625267248, max_hamiltonian_energy_error = 0.29070315633471466, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9716320676660805, log_density = 12.863829940798393, hamiltonian_energy = -11.614205412383313, hamiltonian_energy_error = 0.06896473118083257, max_hamiltonian_energy_error = 0.15440571252599078, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8784034596772049, log_density = 13.24421629683838, hamiltonian_energy = -10.4309630566531, hamiltonian_energy_error = 0.12416924633813053, max_hamiltonian_energy_error = 0.25448917376441216, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9884100821172368, log_density = 14.298158702232302, hamiltonian_energy = -12.672685550734505, hamiltonian_energy_error = -0.04258908375464365, max_hamiltonian_energy_error = -0.24287657004977348, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9791163436263569, log_density = 14.13398925541915, hamiltonian_energy = -13.43451892843149, hamiltonian_energy_error = 0.004955023272565029, max_hamiltonian_energy_error = -0.16424727227127356, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9491871460437781, log_density = 10.343781890039486, hamiltonian_energy = -8.659969080279613, hamiltonian_energy_error = 0.06420970419153349, max_hamiltonian_energy_error = -0.14179495449111812, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9660683176359136, log_density = 12.739070034943095, hamiltonian_energy = -8.943023242481033, hamiltonian_energy_error = -0.0012070748338697257, max_hamiltonian_energy_error = 0.10346792640761215, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9856992824442402, log_density = 13.845634750215744, hamiltonian_energy = -11.229205923288866, hamiltonian_energy_error = -0.09845184975536192, max_hamiltonian_energy_error = -0.11325947675740622, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9991625926900015, log_density = 15.836116373540253, hamiltonian_energy = -12.99639479670062, hamiltonian_energy_error = -0.04567851079209895, max_hamiltonian_energy_error = -0.08588852724781582, tree_depth = 5, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9955599210401529, log_density = 16.720846777610884, hamiltonian_energy = -15.12488324758371, hamiltonian_energy_error = -0.01807631797203868, max_hamiltonian_energy_error = -0.04106297378162971, tree_depth = 5, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9629889746297332, log_density = 14.100400954741211, hamiltonian_energy = -13.392553265494184, hamiltonian_energy_error = 0.08027387112863771, max_hamiltonian_energy_error = 0.08027387112863771, tree_depth = 5, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9547678601224515, log_density = 15.247121853565352, hamiltonian_energy = -10.055502469761265, hamiltonian_energy_error = -0.05223637573814344, max_hamiltonian_energy_error = 0.15629255608354065, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7934259197220743, log_density = 14.656986813022652, hamiltonian_energy = -9.660067662354294, hamiltonian_energy_error = 0.10713521186599095, max_hamiltonian_energy_error = 0.3830641081804522, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9785596200553426, log_density = 15.000762204997084, hamiltonian_energy = -12.493221851822664, hamiltonian_energy_error = -0.0079087775352491, max_hamiltonian_energy_error = -0.08098080034193877, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9933049707895182, log_density = 16.445137075793298, hamiltonian_energy = -12.380723611049, hamiltonian_energy_error = -0.007392714955997803, max_hamiltonian_energy_error = -0.0400623687317907, tree_depth = 5, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9742616365113259, log_density = 13.881614568272049, hamiltonian_energy = -11.954901033121397, hamiltonian_energy_error = 0.0058810128718906896, max_hamiltonian_energy_error = 0.04660857355796111, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9847974577294502, log_density = 13.816096985758483, hamiltonian_energy = -13.30279794482389, hamiltonian_energy_error = 0.04761229374889808, max_hamiltonian_energy_error = 0.04761229374889808, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9999274084611801, log_density = 14.700909129800921, hamiltonian_energy = -11.51663191325169, hamiltonian_energy_error = -0.0599692589559524, max_hamiltonian_energy_error = -0.10235060722875033, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9448799168964878, log_density = 12.316780540386528, hamiltonian_energy = -10.173021925749268, hamiltonian_energy_error = 0.021494346897760863, max_hamiltonian_energy_error = 0.1429936128951219, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9617219522650203, log_density = 10.971408604188218, hamiltonian_energy = -7.632125489515311, hamiltonian_energy_error = 0.03650018719157622, max_hamiltonian_energy_error = 0.1029740359740483, tree_depth = 5, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9992255110686086, log_density = 13.275480270874334, hamiltonian_energy = -8.399503254718418, hamiltonian_energy_error = -0.01997390240094532, max_hamiltonian_energy_error = -0.0777243191703203, tree_depth = 5, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9676459778639237, log_density = 11.776773498136656, hamiltonian_energy = -10.25881034093173, hamiltonian_energy_error = 0.0250693229363943, max_hamiltonian_energy_error = 0.08600524665980203, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9936659201526177, log_density = 11.882980569958885, hamiltonian_energy = -10.279561253241406, hamiltonian_energy_error = 0.008003290365257598, max_hamiltonian_energy_error = -0.07047766453832338, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9921052686438793, log_density = 16.198779091444557, hamiltonian_energy = -10.174655313965845, hamiltonian_energy_error = 0.009440430965872437, max_hamiltonian_energy_error = -0.07495132753353673, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9940210246966116, log_density = 15.863295288286848, hamiltonian_energy = -15.159972952654952, hamiltonian_energy_error = 0.015051738698849348, max_hamiltonian_energy_error = -0.04186095787427391, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9765871528186271, log_density = 15.83804576912471, hamiltonian_energy = -14.389355988706743, hamiltonian_energy_error = 0.0411958767616305, max_hamiltonian_energy_error = -0.09656160065618735, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9722461499314341, log_density = 16.021695866707777, hamiltonian_energy = -11.266095760649932, hamiltonian_energy_error = -0.05383670909545479, max_hamiltonian_energy_error = 0.11991195517681952, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9329533552484667, log_density = 15.726977407221309, hamiltonian_energy = -13.561932984742874, hamiltonian_energy_error = 0.08720436780661522, max_hamiltonian_energy_error = 0.15052691656001294, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.994518264048107, log_density = 16.647639145419642, hamiltonian_energy = -14.892544689733393, hamiltonian_energy_error = -0.11869513207824411, max_hamiltonian_energy_error = -0.1402152206833236, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.979381882665053, log_density = 13.917823964381999, hamiltonian_energy = -13.302462206567611, hamiltonian_energy_error = 0.03229042494605494, max_hamiltonian_energy_error = 0.04863116832679104, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 15.100464704469477, hamiltonian_energy = -12.752138331552732, hamiltonian_energy_error = -0.03916240748802835, max_hamiltonian_energy_error = -0.04944752115258666, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7395954606691301, log_density = 16.421430666392258, hamiltonian_energy = -7.84712011508684, hamiltonian_energy_error = -0.0931178142423672, max_hamiltonian_energy_error = 0.5641757097852294, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9360570866250055, log_density = 15.483451472079215, hamiltonian_energy = -12.601364637289649, hamiltonian_energy_error = 0.08751899039222266, max_hamiltonian_energy_error = 0.11666405267552094, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9915993829335215, log_density = 14.46986481798519, hamiltonian_energy = -13.242961373642597, hamiltonian_energy_error = 0.0010268514209919033, max_hamiltonian_energy_error = -0.04812150824897188, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9372777101655672, log_density = 14.732760713859106, hamiltonian_energy = -9.69337294515871, hamiltonian_energy_error = 0.017159806887182327, max_hamiltonian_energy_error = 0.20611384309281533, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9476662324554296, log_density = 16.70363408284376, hamiltonian_energy = -12.543347962708975, hamiltonian_energy_error = -0.07402378160012724, max_hamiltonian_energy_error = -0.25530110695903296, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8977813278805037, log_density = 15.173452383158303, hamiltonian_energy = -11.270457048608112, hamiltonian_energy_error = -0.10702706618464397, max_hamiltonian_energy_error = 0.2551100763282452, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9924726853494038, log_density = 15.098095881346627, hamiltonian_energy = -13.366672229465895, hamiltonian_energy_error = 0.002256733268479749, max_hamiltonian_energy_error = 0.02436915176854093, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9358768239000165, log_density = 16.300727003241548, hamiltonian_energy = -10.764663870612498, hamiltonian_energy_error = 0.0021096381327190272, max_hamiltonian_energy_error = 0.13163311963801938, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9517870702604188, log_density = 14.772625463793496, hamiltonian_energy = -13.719397952289269, hamiltonian_energy_error = 0.08568190514010077, max_hamiltonian_energy_error = 0.12925001550866, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9949021003895046, log_density = 16.396482271664897, hamiltonian_energy = -12.95067398975815, hamiltonian_energy_error = -0.09460915771307654, max_hamiltonian_energy_error = -0.09460915771307654, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9290130687395324, log_density = 14.165722625886227, hamiltonian_energy = -13.562295639474874, hamiltonian_energy_error = 0.1913979342361749, max_hamiltonian_energy_error = 0.1913979342361749, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9749961795880583, log_density = 12.253896535369535, hamiltonian_energy = -9.47862878799974, hamiltonian_energy_error = -0.09278588529672582, max_hamiltonian_energy_error = -0.19580707256936236, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 39, is_accept = true, acceptance_rate = 0.9639660679903744, log_density = 15.322733352011287, hamiltonian_energy = -7.5521788580465605, hamiltonian_energy_error = -0.06968118277477409, max_hamiltonian_energy_error = -0.1773710888275417, tree_depth = 5, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 39, is_accept = true, acceptance_rate = 0.9932435006097966, log_density = 16.437911780941317, hamiltonian_energy = -13.436192649954252, hamiltonian_energy_error = -0.04532222766350458, max_hamiltonian_energy_error = -0.0690104849034423, tree_depth = 5, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9891728284688521, log_density = 16.345088618887115, hamiltonian_energy = -14.634032364856544, hamiltonian_energy_error = 0.007080206945644818, max_hamiltonian_energy_error = 0.030621365546091184, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9597080313498743, log_density = 14.133347710562788, hamiltonian_energy = -11.939351160236424, hamiltonian_energy_error = 0.04271301167785779, max_hamiltonian_energy_error = 0.08208486226289402, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9993603280681682, log_density = 16.564681576733665, hamiltonian_energy = -13.091411521110803, hamiltonian_energy_error = -0.036900859106893336, max_hamiltonian_energy_error = -0.036900859106893336, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8636620606770503, log_density = 15.368756147941024, hamiltonian_energy = -13.983160931429204, hamiltonian_energy_error = 0.08489424063831486, max_hamiltonian_energy_error = 0.20289721603191246, tree_depth = 2, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.874142342922932, log_density = 15.536532173517934, hamiltonian_energy = -10.449779613951122, hamiltonian_energy_error = -0.004630277085698964, max_hamiltonian_energy_error = 0.2845310330039599, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.895474732788786, log_density = 16.256830027047137, hamiltonian_energy = -12.114199812838686, hamiltonian_energy_error = -0.08270484982730153, max_hamiltonian_energy_error = 0.29794559586817293, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9836393733613779, log_density = 17.194353951798373, hamiltonian_energy = -15.372844884544248, hamiltonian_energy_error = -0.004985166961580134, max_hamiltonian_energy_error = 0.038902784987065786, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9761929935496165, log_density = 17.130369629246537, hamiltonian_energy = -16.15278457164476, hamiltonian_energy_error = -0.0023904351587127337, max_hamiltonian_energy_error = 0.04468167313365612, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9158115159457604, log_density = 14.015547855785426, hamiltonian_energy = -12.707718366883014, hamiltonian_energy_error = 0.10009481087180383, max_hamiltonian_energy_error = 0.17074511556989158, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9404183863567177, log_density = 15.168727827087675, hamiltonian_energy = -11.05837645445767, hamiltonian_energy_error = 0.006226904238880948, max_hamiltonian_energy_error = 0.1744339499085985, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9993348306818461, log_density = 15.78905895439384, hamiltonian_energy = -12.964360284123698, hamiltonian_energy_error = -0.02616045793817534, max_hamiltonian_energy_error = -0.09906950985516438, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9784500151574436, log_density = 16.612042624995578, hamiltonian_energy = -14.35932360043323, hamiltonian_energy_error = -0.11875756354782219, max_hamiltonian_energy_error = -0.11875756354782219, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.889410027800393, log_density = 14.423269133411427, hamiltonian_energy = -13.027083524795602, hamiltonian_energy_error = 0.10093332555222823, max_hamiltonian_energy_error = 0.2059668290386032, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.280987961879813, hamiltonian_energy = -13.238430963028556, hamiltonian_energy_error = -0.04278742345788267, max_hamiltonian_energy_error = -0.07255170912190678, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9451557245224607, log_density = 15.727923870359565, hamiltonian_energy = -13.365913752762298, hamiltonian_energy_error = 0.07618417098812458, max_hamiltonian_energy_error = 0.11088564793766587, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9845268372669154, log_density = 14.895167070333603, hamiltonian_energy = -12.747876623668148, hamiltonian_energy_error = 0.037179492152716875, max_hamiltonian_energy_error = -0.12302101427407308, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9919173560385832, log_density = 15.815776054413831, hamiltonian_energy = -13.618532660828032, hamiltonian_energy_error = -0.0887986802478018, max_hamiltonian_energy_error = -0.1983490709556417, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9261860521424989, log_density = 16.85680277697724, hamiltonian_energy = -12.967405818825178, hamiltonian_energy_error = -0.03380737240477494, max_hamiltonian_energy_error = 0.2648198668370938, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9941697151882204, log_density = 15.577473847573826, hamiltonian_energy = -15.310190402302096, hamiltonian_energy_error = 0.018069858177856446, max_hamiltonian_energy_error = -0.022433921668552514, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9880914429955203, log_density = 16.221240966156962, hamiltonian_energy = -14.463091017065294, hamiltonian_energy_error = -0.03630291437289124, max_hamiltonian_energy_error = -0.03630291437289124, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8973786024928757, log_density = 12.10763998680192, hamiltonian_energy = -10.594742330719964, hamiltonian_energy_error = 0.17591582517307103, max_hamiltonian_energy_error = 0.17591582517307103, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9978992761217712, log_density = 16.238635118910956, hamiltonian_energy = -11.494845400469963, hamiltonian_energy_error = -0.13633502886214188, max_hamiltonian_energy_error = -0.13633502886214188, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9969555323041791, log_density = 17.03261516326951, hamiltonian_energy = -15.246980506912625, hamiltonian_energy_error = -0.04454432608011416, max_hamiltonian_energy_error = -0.053592412054067395, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9931045975228054, log_density = 16.04786412586543, hamiltonian_energy = -15.487636254792054, hamiltonian_energy_error = -0.005093432161947575, max_hamiltonian_energy_error = 0.015405370701580878, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9090749293736803, log_density = 15.33425411807673, hamiltonian_energy = -13.31604886671245, hamiltonian_energy_error = 0.1167673881544431, max_hamiltonian_energy_error = 0.19795273574257344, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9856634322453414, log_density = 16.559681758492545, hamiltonian_energy = -13.529944858259126, hamiltonian_energy_error = -0.08742119990830766, max_hamiltonian_energy_error = -0.08742119990830766, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9754682313650734, log_density = 17.192967984014356, hamiltonian_energy = -15.436217317460287, hamiltonian_energy_error = -0.028970708906115306, max_hamiltonian_energy_error = 0.06379388801947528, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9966481755829281, log_density = 17.167548202235093, hamiltonian_energy = -16.756784553997093, hamiltonian_energy_error = 0.004151249257731138, max_hamiltonian_energy_error = 0.008808707508656255, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.938813169517987, log_density = 16.470422763269465, hamiltonian_energy = -13.858926308112602, hamiltonian_energy_error = 0.011460035794863543, max_hamiltonian_energy_error = 0.13068676290123982, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9763234508998576, log_density = 15.820186780076673, hamiltonian_energy = -14.698878945523203, hamiltonian_energy_error = -0.007218150304257875, max_hamiltonian_energy_error = 0.05969699718376198, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9247679603061556, log_density = 14.316667768066612, hamiltonian_energy = -12.965370513653085, hamiltonian_energy_error = 0.10176234634224635, max_hamiltonian_energy_error = 0.14471910596939352, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.149368411958468, hamiltonian_energy = -14.149553084798706, hamiltonian_energy_error = -0.024256376971072413, max_hamiltonian_energy_error = -0.09345579162542883, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.998165252703168, log_density = 15.143037967680785, hamiltonian_energy = -14.164817666994615, hamiltonian_energy_error = -0.07905063575145022, max_hamiltonian_energy_error = -0.08250275046052913, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9590918531301376, log_density = 16.82728564989174, hamiltonian_energy = -13.916597509502374, hamiltonian_energy_error = -0.004887797162904661, max_hamiltonian_energy_error = 0.09539728581672158, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9232146428916008, log_density = 15.475103019344147, hamiltonian_energy = -12.828587073401607, hamiltonian_energy_error = 0.11028931302890577, max_hamiltonian_energy_error = 0.15405030496282812, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9846138180481944, log_density = 16.099058909861842, hamiltonian_energy = -13.804949387145896, hamiltonian_energy_error = -0.07342110011654235, max_hamiltonian_energy_error = -0.08997170453173986, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9993089172467712, log_density = 16.79152538373794, hamiltonian_energy = -15.446756593183183, hamiltonian_energy_error = -0.03273091050189514, max_hamiltonian_energy_error = -0.061426842251314895, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9002790438267693, log_density = 14.266697279096345, hamiltonian_energy = -11.191900217618223, hamiltonian_energy_error = 0.08955838303293717, max_hamiltonian_energy_error = 0.1357953642705123, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8361385723380562, log_density = 13.65206256125618, hamiltonian_energy = -10.366076505357803, hamiltonian_energy_error = 0.16725857400006916, max_hamiltonian_energy_error = 0.3461302237189354, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9912923900879349, log_density = 15.654409471944788, hamiltonian_energy = -12.917625994798682, hamiltonian_energy_error = -0.08853909126402826, max_hamiltonian_energy_error = -0.18848706279386285, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9728424911718514, log_density = 15.219324397574834, hamiltonian_energy = -12.690588880807983, hamiltonian_energy_error = -0.05514123716762498, max_hamiltonian_energy_error = -0.10455795625932218, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9935448956981741, log_density = 16.134883014590486, hamiltonian_energy = -13.86926314987059, hamiltonian_energy_error = -0.06760044164061974, max_hamiltonian_energy_error = -0.08871871841066792, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8629698933397132, log_density = 14.500077023356017, hamiltonian_energy = -12.314333168319322, hamiltonian_energy_error = 0.14412754665927352, max_hamiltonian_energy_error = 0.20770909934476656, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9928272198982604, log_density = 15.510435982707047, hamiltonian_energy = -13.258248341709068, hamiltonian_energy_error = -0.08392113282930502, max_hamiltonian_energy_error = -0.17889193286293725, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 16.38899488155223, hamiltonian_energy = -14.551262304750185, hamiltonian_energy_error = -0.05645146683661295, max_hamiltonian_energy_error = -0.08869845218417183, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9211499986282509, log_density = 13.843442399017423, hamiltonian_energy = -12.276312535148744, hamiltonian_energy_error = 0.07018931194275524, max_hamiltonian_energy_error = 0.12948333119899047, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9259772525896286, log_density = 13.390691437176775, hamiltonian_energy = -11.286966052533977, hamiltonian_energy_error = 0.1340886717636014, max_hamiltonian_energy_error = 0.17409661640578733, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9987370299730203, log_density = 11.741875213227285, hamiltonian_energy = -10.328632499034393, hamiltonian_energy_error = -0.022566071647363017, max_hamiltonian_energy_error = -0.1845627159576413, tree_depth = 5, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9372660221701857, log_density = 15.749598076266354, hamiltonian_energy = -8.10835549689046, hamiltonian_energy_error = -0.18693345661345617, max_hamiltonian_energy_error = 0.20919868375901451, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9958146253422958, log_density = 17.23503343967665, hamiltonian_energy = -15.278487485821817, hamiltonian_energy_error = -0.027486205963329624, max_hamiltonian_energy_error = -0.030166452568249014, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9573551798006241, log_density = 16.814034506001526, hamiltonian_energy = -15.697114469586122, hamiltonian_energy_error = 0.034245325366510926, max_hamiltonian_energy_error = 0.055442165862686466, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8497527885523473, log_density = 15.760664566601925, hamiltonian_energy = -12.68903539854166, hamiltonian_energy_error = 0.03302435296996897, max_hamiltonian_energy_error = 0.32408233603077363, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9694429470408049, log_density = 14.149544435789371, hamiltonian_energy = -13.128205960406614, hamiltonian_energy_error = 0.02161110041969394, max_hamiltonian_energy_error = 0.06277158679136896, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9930060805223131, log_density = 13.162406091973143, hamiltonian_energy = -9.120711935855219, hamiltonian_energy_error = -0.019367752536913585, max_hamiltonian_energy_error = -0.07500637257802545, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.952692801794663, log_density = 13.534734264127746, hamiltonian_energy = -7.411019804928909, hamiltonian_energy_error = 0.015087112013519643, max_hamiltonian_energy_error = 0.1341802345801213, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9838016121098498, log_density = 16.01790885466793, hamiltonian_energy = -12.351342800732269, hamiltonian_energy_error = -0.011351785148310256, max_hamiltonian_energy_error = -0.07951383056711947, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9948163996004434, log_density = 16.301642144912243, hamiltonian_energy = -13.164489784011213, hamiltonian_energy_error = -0.008483050692973393, max_hamiltonian_energy_error = -0.07219799819143446, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9942808236819178, log_density = 16.90440435238194, hamiltonian_energy = -15.83450283259057, hamiltonian_energy_error = -0.04818772318287046, max_hamiltonian_energy_error = -0.06440503878903137, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7148738822366402, log_density = 13.935757383640649, hamiltonian_energy = -9.676846690074825, hamiltonian_energy_error = 0.2854711189690242, max_hamiltonian_energy_error = 0.5283507889678543, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9813424256767258, log_density = 13.15867391288641, hamiltonian_energy = -11.88299921112039, hamiltonian_energy_error = 0.03906265185250746, max_hamiltonian_energy_error = -0.16771774230415737, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9718861939118375, log_density = 14.440185091132875, hamiltonian_energy = -10.014713337034502, hamiltonian_energy_error = -0.03759510551773282, max_hamiltonian_energy_error = 0.0903604819865329, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.942292777033425, log_density = 14.368199638452985, hamiltonian_energy = -11.35501455782599, hamiltonian_energy_error = 0.029593251500131146, max_hamiltonian_energy_error = 0.19163481897522594, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9548670314744595, log_density = 13.21582464950057, hamiltonian_energy = -12.3258811045695, hamiltonian_energy_error = 0.12446697365806614, max_hamiltonian_energy_error = -0.14890312047656096, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 16.04620287161098, hamiltonian_energy = -12.57837582224478, hamiltonian_energy_error = -0.18182357090927503, max_hamiltonian_energy_error = -0.2511978828530008, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9996739646578726, log_density = 16.831041365168893, hamiltonian_energy = -15.830503721982618, hamiltonian_energy_error = -0.02929818802966011, max_hamiltonian_energy_error = -0.044282397578513155, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9997627757621615, log_density = 17.1012344972078, hamiltonian_energy = -16.618689866973867, hamiltonian_energy_error = -0.009821617019301954, max_hamiltonian_energy_error = -0.020383859025944417, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9831138354770306, log_density = 17.113086166853172, hamiltonian_energy = -15.829134470302048, hamiltonian_energy_error = -0.011261628910739674, max_hamiltonian_energy_error = 0.049442841636547996, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9967273729492117, log_density = 16.921801700967173, hamiltonian_energy = -16.555222214311186, hamiltonian_energy_error = 0.00018989013798176302, max_hamiltonian_energy_error = 0.011255353898086184, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8997032078612845, log_density = 14.974484270440986, hamiltonian_energy = -14.086213244187194, hamiltonian_energy_error = 0.12049154196977518, max_hamiltonian_energy_error = 0.21818161939602376, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9600518421280302, log_density = 15.840120029886176, hamiltonian_energy = -13.457335989200786, hamiltonian_energy_error = 0.0009222119286054209, max_hamiltonian_energy_error = 0.12851908681689928, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.99186182132035, log_density = 15.769189017262063, hamiltonian_energy = -14.38951824498805, hamiltonian_energy_error = -0.040232057166608826, max_hamiltonian_energy_error = -0.12749009569335357, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9681678981691305, log_density = 15.66648766692817, hamiltonian_energy = -14.682730883283877, hamiltonian_energy_error = 0.0009873916563005736, max_hamiltonian_energy_error = 0.07426551787970226, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9795839025810137, log_density = 15.15971861211969, hamiltonian_energy = -14.400769784290704, hamiltonian_energy_error = 0.03345036101206489, max_hamiltonian_energy_error = -0.0652701959424018, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9520525967237486, log_density = 11.307450571257935, hamiltonian_energy = -8.733264623271083, hamiltonian_energy_error = 0.06125861962884116, max_hamiltonian_energy_error = -0.11064056163008296, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.442735288503673, hamiltonian_energy = -9.598168782901956, hamiltonian_energy_error = -0.0686604743006729, max_hamiltonian_energy_error = -0.16843781136442715, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9471363153932427, log_density = 12.971213837552217, hamiltonian_energy = -10.083814758172405, hamiltonian_energy_error = 0.07634510047423682, max_hamiltonian_energy_error = 0.17711986121793188, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9933680725031766, log_density = 16.16619893252403, hamiltonian_energy = -11.264989290495683, hamiltonian_energy_error = -0.14276370173649156, max_hamiltonian_energy_error = -0.1738749709919425, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9654430015924634, log_density = 15.1047879479171, hamiltonian_energy = -14.794808430573982, hamiltonian_energy_error = 0.09619725771426246, max_hamiltonian_energy_error = 0.09619725771426246, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 15.703158509174358, hamiltonian_energy = -14.742987613303772, hamiltonian_energy_error = -0.027531934417721615, max_hamiltonian_energy_error = -0.11678731237167206, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9548913078239906, log_density = 15.167524703094598, hamiltonian_energy = -14.639085954601114, hamiltonian_energy_error = 0.04746311756693444, max_hamiltonian_energy_error = 0.09318134135181033, tree_depth = 2, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 16.13540295821866, hamiltonian_energy = -14.90976251246027, hamiltonian_energy_error = -0.11777240086757601, max_hamiltonian_energy_error = -0.11777240086757601, tree_depth = 2, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8895960798298356, log_density = 16.081105099193497, hamiltonian_energy = -13.45367464134253, hamiltonian_energy_error = 0.05471667127015678, max_hamiltonian_energy_error = 0.20281003723521174, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9636990403513318, log_density = 16.412355105153594, hamiltonian_energy = -14.370622923104069, hamiltonian_energy_error = -0.03000114842874879, max_hamiltonian_energy_error = 0.11817851827893477, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9104081177070723, log_density = 12.412426451054547, hamiltonian_energy = -10.735471437041639, hamiltonian_energy_error = 0.16053485579865345, max_hamiltonian_energy_error = 0.16053485579865345, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.570162451327075, hamiltonian_energy = -10.8186728273373, hamiltonian_energy_error = -0.14307142482167734, max_hamiltonian_energy_error = -0.14307142482167734, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9062677127646716, log_density = 13.462028122090006, hamiltonian_energy = -12.431120527802644, hamiltonian_energy_error = 0.16067738671688403, max_hamiltonian_energy_error = 0.16067738671688403, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9974908048277688, log_density = 15.73399355699522, hamiltonian_energy = -9.798102806045083, hamiltonian_energy_error = -0.09507561610347537, max_hamiltonian_energy_error = -0.16498822389271872, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9988108793312173, log_density = 16.27086614173006, hamiltonian_energy = -14.2646240563549, hamiltonian_energy_error = -0.03211029735750337, max_hamiltonian_energy_error = -0.07037818624112546, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.957595046968008, log_density = 13.929274790102543, hamiltonian_energy = -12.31366159375681, hamiltonian_energy_error = 0.08921843269977359, max_hamiltonian_energy_error = 0.08921843269977359, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9720745130212066, log_density = 12.928777169135406, hamiltonian_energy = -10.546021086475259, hamiltonian_energy_error = -0.021071024792201243, max_hamiltonian_energy_error = -0.12211417867799135, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.999178541594459, log_density = 13.653811998238627, hamiltonian_energy = -12.644819880755543, hamiltonian_energy_error = -0.010402118100959257, max_hamiltonian_energy_error = -0.010402118100959257, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9905000526405675, log_density = 16.13319193435693, hamiltonian_energy = -12.383722195483019, hamiltonian_energy_error = -0.019456547152012504, max_hamiltonian_energy_error = -0.1335827102635605, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9842710479707303, log_density = 14.394147245549007, hamiltonian_energy = -13.081726102652365, hamiltonian_energy_error = 0.03845411992330128, max_hamiltonian_energy_error = 0.03845411992330128, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9976508858187176, log_density = 13.60510518566447, hamiltonian_energy = -11.47324041998502, hamiltonian_energy_error = -0.040175611920057364, max_hamiltonian_energy_error = -0.09409259022988792, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9651453631611855, log_density = 13.511655762113733, hamiltonian_energy = -9.811935219495885, hamiltonian_energy_error = -0.07153300399747486, max_hamiltonian_energy_error = 0.11316775118012679, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7934836228515844, log_density = 6.8878569130726355, hamiltonian_energy = -4.011189465947165, hamiltonian_energy_error = 0.31192678176706323, max_hamiltonian_energy_error = 0.4636671192871251, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9869030146049119, log_density = 6.813457995559002, hamiltonian_energy = -2.0275464829064074, hamiltonian_energy_error = -0.1700178426570691, max_hamiltonian_energy_error = -0.2278848637653823, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9418395691856143, log_density = 7.5241776292489675, hamiltonian_energy = -0.7529195815096195, hamiltonian_energy_error = 0.01693763980559737, max_hamiltonian_energy_error = 0.13939103902359795, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9528036411523353, log_density = 7.774392199272926, hamiltonian_energy = -4.7987360960291685, hamiltonian_energy_error = 0.0795074503890234, max_hamiltonian_energy_error = 0.14526101588994944, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9963165330653032, log_density = 11.756173017227688, hamiltonian_energy = -4.061179113074117, hamiltonian_energy_error = -0.24624816112346704, max_hamiltonian_energy_error = -0.4147487053562626, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9532261769725291, log_density = 8.483482103415792, hamiltonian_energy = -7.219725203088695, hamiltonian_energy_error = 0.0878272842774539, max_hamiltonian_energy_error = 0.09885051670012679, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9479750460107758, log_density = 13.115281212214867, hamiltonian_energy = -6.103497896409811, hamiltonian_energy_error = -0.17197762169115283, max_hamiltonian_energy_error = -0.17197762169115283, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9419758672357514, log_density = 13.05656495450182, hamiltonian_energy = -11.58810222617288, hamiltonian_energy_error = 0.021630003666023967, max_hamiltonian_energy_error = 0.12817323526540392, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9950856708150209, log_density = 12.154660818662236, hamiltonian_energy = -11.013031216241563, hamiltonian_energy_error = 0.006094442617724738, max_hamiltonian_energy_error = 0.0165687378436985, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7779180211214788, log_density = 7.428427314632289, hamiltonian_energy = -6.284806724363002, hamiltonian_energy_error = 0.4430124335615089, max_hamiltonian_energy_error = 0.707120436975516, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 8.869584846037837, hamiltonian_energy = -6.854619259629421, hamiltonian_energy_error = -0.39095573987998566, max_hamiltonian_energy_error = -0.5299637123912637, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7183392759391973, log_density = 6.433955288909138, hamiltonian_energy = -3.9090134306902375, hamiltonian_energy_error = 0.4483736654771966, max_hamiltonian_energy_error = 0.5695447447804822, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7313712726092826, log_density = 7.86368912539421, hamiltonian_energy = -1.857385093959759, hamiltonian_energy_error = -1.1328485527215433, max_hamiltonian_energy_error = 1.6393106021197368, tree_depth = 2, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.835260042064828, log_density = 15.276731205157418, hamiltonian_energy = -4.866681424572013, hamiltonian_energy_error = 0.09976493097881622, max_hamiltonian_energy_error = 0.5634245427120987, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9967106920354609, log_density = 15.481735249315605, hamiltonian_energy = -14.215548975072446, hamiltonian_energy_error = 0.011287009538440529, max_hamiltonian_energy_error = -0.06745578642078875, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9962235161670339, log_density = 15.498081587307693, hamiltonian_energy = -13.8612309268146, hamiltonian_energy_error = -0.003152735986224897, max_hamiltonian_energy_error = -0.08348576492623927, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9917635809647306, log_density = 16.67165847218297, hamiltonian_energy = -13.864010244604792, hamiltonian_energy_error = -0.04541890071271659, max_hamiltonian_energy_error = -0.08980227195726975, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9648890800388723, log_density = 16.284411464337055, hamiltonian_energy = -15.004581860355271, hamiltonian_energy_error = 0.023468654874347905, max_hamiltonian_energy_error = 0.07527807787558771, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 16.820154060694698, hamiltonian_energy = -15.709735186253457, hamiltonian_energy_error = -0.029492807404619015, max_hamiltonian_energy_error = -0.05868598039324979, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9836047331233503, log_density = 15.32713973436739, hamiltonian_energy = -13.676431852730449, hamiltonian_energy_error = 0.010884714923770744, max_hamiltonian_energy_error = 0.043581300739573337, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.941632110991219, log_density = 15.352321347672941, hamiltonian_energy = -11.5123091584147, hamiltonian_energy_error = -0.040338947972637484, max_hamiltonian_energy_error = 0.1537197460762929, tree_depth = 5, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9358734147336715, log_density = 15.068007148947862, hamiltonian_energy = -11.966253917866348, hamiltonian_energy_error = 0.024012619673172253, max_hamiltonian_energy_error = 0.12133250076239754, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9740989675152666, log_density = 15.433187069675098, hamiltonian_energy = -11.549615490755581, hamiltonian_energy_error = -0.03824422722993148, max_hamiltonian_energy_error = -0.14692433261041415, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 16.621018782569234, hamiltonian_energy = -14.774681304849334, hamiltonian_energy_error = -0.02278565014156797, max_hamiltonian_energy_error = -0.08549132030565687, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 17.385280690233508, hamiltonian_energy = -16.461938584140288, hamiltonian_energy_error = -0.04769949601503143, max_hamiltonian_energy_error = -0.05504399217415923, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9755918456500663, log_density = 16.314256126468617, hamiltonian_energy = -15.944374464678498, hamiltonian_energy_error = 0.051702647732263074, max_hamiltonian_energy_error = 0.051702647732263074, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9729639799241303, log_density = 16.207726670772942, hamiltonian_energy = -15.188530103652305, hamiltonian_energy_error = -0.008394536750534698, max_hamiltonian_energy_error = 0.07351520349079266, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9532772305820195, log_density = 15.452246919231325, hamiltonian_energy = -13.949513846941237, hamiltonian_energy_error = 0.04602000053312949, max_hamiltonian_energy_error = 0.09889044203791464, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9984701837606842, log_density = 15.82732632692549, hamiltonian_energy = -14.611433264333787, hamiltonian_energy_error = -0.02639749092708321, max_hamiltonian_energy_error = -0.07173355901583811, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9944095368738307, log_density = 15.484625361281136, hamiltonian_energy = -14.958895900082737, hamiltonian_energy_error = 0.021668736248395604, max_hamiltonian_energy_error = -0.0482998312230869, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9201703481900324, log_density = 10.68609472512784, hamiltonian_energy = -10.033106332683742, hamiltonian_energy_error = 0.14389929921405198, max_hamiltonian_energy_error = 0.19104262873035438, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8882308029309061, log_density = 14.348023118224395, hamiltonian_energy = -8.919067117836216, hamiltonian_energy_error = 0.054547834578784204, max_hamiltonian_energy_error = 0.3568663263298504, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 16.345666280765975, hamiltonian_energy = -13.995777908518377, hamiltonian_energy_error = -0.07381601869644427, max_hamiltonian_energy_error = -0.07852512330514294, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.966793390743512, log_density = 16.218872810409465, hamiltonian_energy = -14.969078692976723, hamiltonian_energy_error = 0.03309936177086925, max_hamiltonian_energy_error = 0.0655261822734996, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.947766698094055, log_density = 16.15258120682951, hamiltonian_energy = -13.859803991878596, hamiltonian_energy_error = 0.038078729096277186, max_hamiltonian_energy_error = 0.1045436698813802, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9469808757972343, log_density = 16.11117511048547, hamiltonian_energy = -13.400013594337306, hamiltonian_energy_error = -0.040519709117692315, max_hamiltonian_energy_error = 0.1472374608046234, tree_depth = 5, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9132213391323164, log_density = 16.584214294166404, hamiltonian_energy = -14.56786849072984, hamiltonian_energy_error = -0.030780275412862323, max_hamiltonian_energy_error = 0.15546895864902766, tree_depth = 1, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9939289893095502, log_density = 16.39463067816363, hamiltonian_energy = -16.172578332043784, hamiltonian_energy_error = 0.011701559808706463, max_hamiltonian_energy_error = 0.017843662749609024, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9707270787996388, log_density = 16.627010677893296, hamiltonian_energy = -14.77383315986501, hamiltonian_energy_error = -0.0004754265416124781, max_hamiltonian_energy_error = 0.06656510068648913, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9708820789168139, log_density = 15.214911941264889, hamiltonian_energy = -14.13570720753556, hamiltonian_energy_error = 0.05903580489033011, max_hamiltonian_energy_error = 0.07615716145199158, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.985795960526332, log_density = 17.088177391616377, hamiltonian_energy = -14.492283929846348, hamiltonian_energy_error = -0.0753774284245683, max_hamiltonian_energy_error = -0.10222622403334292, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9142416920153605, log_density = 16.513527716132465, hamiltonian_energy = -12.824525808272522, hamiltonian_energy_error = -0.0011316426422887105, max_hamiltonian_energy_error = 0.12050892152633885, tree_depth = 2, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9434670427142893, log_density = 14.127597898680937, hamiltonian_energy = -12.845211720478073, hamiltonian_energy_error = 0.08966490794196424, max_hamiltonian_energy_error = 0.08966490794196424, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8966577073836702, log_density = 15.59515770653612, hamiltonian_energy = -8.68485535899017, hamiltonian_energy_error = 0.04319779858987971, max_hamiltonian_energy_error = 0.25757213633379017, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9417199330106094, log_density = 12.381374826577648, hamiltonian_energy = -10.441738055691513, hamiltonian_energy_error = 0.14838602874543483, max_hamiltonian_energy_error = 0.1843883668205457, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 12.552197170324112, hamiltonian_energy = -11.033601234399155, hamiltonian_energy_error = -0.053642707976724324, max_hamiltonian_energy_error = -0.21436355521714567, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9772259518455562, log_density = 14.950012860133953, hamiltonian_energy = -8.351096642778334, hamiltonian_energy_error = -0.061135300684513894, max_hamiltonian_energy_error = -0.439394178052142, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.962683894330987, log_density = 11.670936341573075, hamiltonian_energy = -10.029226254664321, hamiltonian_energy_error = 0.08964799600292572, max_hamiltonian_energy_error = 0.08964799600292572, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9909017810129076, log_density = 11.72556199762191, hamiltonian_energy = -4.472588587183405, hamiltonian_energy_error = 0.02933593680285096, max_hamiltonian_energy_error = -0.1588732722338051, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9936173735744543, log_density = 13.781011261226352, hamiltonian_energy = -8.904371111838817, hamiltonian_energy_error = -0.26205632279440216, max_hamiltonian_energy_error = -0.26205632279440216, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6035193768453636, log_density = 9.595229488754095, hamiltonian_energy = -6.811902497325933, hamiltonian_energy_error = 0.4541770404683083, max_hamiltonian_energy_error = 0.6394840937941426, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9986872071578266, log_density = 13.743303528088116, hamiltonian_energy = -9.26262215123998, hamiltonian_energy_error = -0.013886600529845694, max_hamiltonian_energy_error = -0.16575645368427772, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9841527908330193, log_density = 13.359374945507433, hamiltonian_energy = -11.4189257077491, hamiltonian_energy_error = -0.009394298661728584, max_hamiltonian_energy_error = -0.12061833166362135, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9659988981529295, log_density = 13.398820128236997, hamiltonian_energy = -10.978178249752862, hamiltonian_energy_error = 0.054748540793369216, max_hamiltonian_energy_error = -0.27296553384745437, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9983880520088919, log_density = 14.434006567037063, hamiltonian_energy = -11.687454110158416, hamiltonian_energy_error = -0.13774660605137257, max_hamiltonian_energy_error = -0.1729936872581206, tree_depth = 2, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9580969030053869, log_density = 15.777346911411522, hamiltonian_energy = -11.098708195211554, hamiltonian_energy_error = -0.09688709225429548, max_hamiltonian_energy_error = 0.20068923029717922, tree_depth = 2, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.992416669445701, log_density = 15.317505883565099, hamiltonian_energy = -14.061083958517843, hamiltonian_energy_error = -0.009429127838640028, max_hamiltonian_energy_error = -0.08927918894733011, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9687918206433981, log_density = 15.961645616461949, hamiltonian_energy = -11.845599936863179, hamiltonian_energy_error = -0.03338099223446633, max_hamiltonian_energy_error = 0.07876818337375902, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9745794895462865, log_density = 12.892602619995577, hamiltonian_energy = -11.168610056091115, hamiltonian_energy_error = 0.023811159325717313, max_hamiltonian_energy_error = 0.06389471041415895, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9336157722474062, log_density = 9.336042748236386, hamiltonian_energy = -6.939875193924883, hamiltonian_energy_error = 0.06513687454979156, max_hamiltonian_energy_error = 0.13232782290761236, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9990044218334211, log_density = 15.11017034315098, hamiltonian_energy = -6.344366862865694, hamiltonian_energy_error = -0.1206037883533142, max_hamiltonian_energy_error = -0.1206037883533142, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9876181699198701, log_density = 16.579899770186188, hamiltonian_energy = -13.63504024518386, hamiltonian_energy_error = -0.0073568086420685574, max_hamiltonian_energy_error = 0.04387684505793921, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9994692466725501, log_density = 16.243088239075412, hamiltonian_energy = -15.861038624916343, hamiltonian_energy_error = -0.003290530778365053, max_hamiltonian_energy_error = -0.014588075475609585, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9594977575255595, log_density = 14.429731427700165, hamiltonian_energy = -12.264163842053243, hamiltonian_energy_error = 0.06486990201011622, max_hamiltonian_energy_error = 0.07360032214834789, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9505263364042591, log_density = 14.633359479862854, hamiltonian_energy = -11.637746768799289, hamiltonian_energy_error = 0.015119594693420169, max_hamiltonian_energy_error = 0.13189506217615055, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.927637640990117, log_density = 12.481714944958128, hamiltonian_energy = -9.449614126017893, hamiltonian_energy_error = 0.09261343858846338, max_hamiltonian_energy_error = 0.15977288196494044, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 13.9492602223137, hamiltonian_energy = -12.421071086167867, hamiltonian_energy_error = -0.13589012463817163, max_hamiltonian_energy_error = -0.13589012463817163, tree_depth = 2, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9268256247802698, log_density = 12.367090310282798, hamiltonian_energy = -11.246167811610588, hamiltonian_energy_error = 0.10894592261061753, max_hamiltonian_energy_error = 0.12364770514529333, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9874157387065082, log_density = 13.673459274912048, hamiltonian_energy = -10.059202550793712, hamiltonian_energy_error = 0.011318063498995556, max_hamiltonian_energy_error = -0.11000957005508027, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9948254380582607, log_density = 14.585401067412867, hamiltonian_energy = -12.53613973076496, hamiltonian_energy_error = -0.0429712290103641, max_hamiltonian_energy_error = -0.21548234275196876, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9784064981057828, log_density = 16.179329297709465, hamiltonian_energy = -12.915095612319805, hamiltonian_energy_error = -0.05463542744762151, max_hamiltonian_energy_error = -0.05463542744762151, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9370925571671476, log_density = 14.400478445261204, hamiltonian_energy = -13.586237192278213, hamiltonian_energy_error = 0.08411050735766956, max_hamiltonian_energy_error = 0.09951240006159168, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9682295531797841, log_density = 10.978023664190667, hamiltonian_energy = -9.677651593925146, hamiltonian_energy_error = 0.0826142947000168, max_hamiltonian_energy_error = -0.11767147037384618, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9975119952753245, log_density = 15.43320967032141, hamiltonian_energy = -8.69120073098347, hamiltonian_energy_error = -0.13533804097814972, max_hamiltonian_energy_error = -0.13533804097814972, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.845048578846756, log_density = 15.002472869088486, hamiltonian_energy = -12.90168737780917, hamiltonian_energy_error = 0.1975564461758914, max_hamiltonian_energy_error = 0.27781714959329484, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9760594324733994, log_density = 16.375201401139975, hamiltonian_energy = -13.920780877735387, hamiltonian_energy_error = -0.11784761447445469, max_hamiltonian_energy_error = -0.21238919064194128, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9971761995175787, log_density = 16.37652594455333, hamiltonian_energy = -15.623792287485383, hamiltonian_energy_error = -0.044066934437848815, max_hamiltonian_energy_error = -0.0812245286083666, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9150602657403645, log_density = 14.942077883840339, hamiltonian_energy = -12.772051248941732, hamiltonian_energy_error = 0.042643434283855086, max_hamiltonian_energy_error = 0.16370023360102515, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8572595835490139, log_density = 13.72974513000403, hamiltonian_energy = -12.60669962254909, hamiltonian_energy_error = 0.16118773430377686, max_hamiltonian_energy_error = 0.2426182048542902, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9986611627996037, log_density = 16.573496755970314, hamiltonian_energy = -13.372236786427612, hamiltonian_energy_error = -0.20411732155456086, max_hamiltonian_energy_error = -0.22734934892802094, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8571070433536396, log_density = 15.853529509555301, hamiltonian_energy = -13.312454760930429, hamiltonian_energy_error = 0.14989106451887224, max_hamiltonian_energy_error = 0.2587757999762559, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9274814158658912, log_density = 14.18914116452198, hamiltonian_energy = -12.95829142114915, hamiltonian_energy_error = 0.10399171137560614, max_hamiltonian_energy_error = 0.11239004803623587, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 16.17005765818235, hamiltonian_energy = -13.80473039716635, hamiltonian_energy_error = -0.03923929447095098, max_hamiltonian_energy_error = -0.07207761082543662, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9705792286387284, log_density = 15.252848404225212, hamiltonian_energy = -13.798054200928918, hamiltonian_energy_error = 0.011127948071372629, max_hamiltonian_energy_error = -0.0989193676439637, tree_depth = 2, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9640618804920089, log_density = 13.632917490138915, hamiltonian_energy = -12.896264760046503, hamiltonian_energy_error = 0.0700805604205037, max_hamiltonian_energy_error = -0.15662176121730376, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9949291940512911, log_density = 13.570417312270937, hamiltonian_energy = -9.446074656949488, hamiltonian_energy_error = -0.24237581260154073, max_hamiltonian_energy_error = -0.5213923287958941, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.993801074996826, log_density = 14.913508031107279, hamiltonian_energy = -12.9304077320826, hamiltonian_energy_error = -0.024548771355201282, max_hamiltonian_energy_error = -0.19332733360367094, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9944868559139586, log_density = 13.63181628667162, hamiltonian_energy = -12.382614355194383, hamiltonian_energy_error = -0.022620839453319164, max_hamiltonian_energy_error = -0.059776882684428045, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9746586325045963, log_density = 14.269025827163576, hamiltonian_energy = -10.936747742403217, hamiltonian_energy_error = 0.022699923496727337, max_hamiltonian_energy_error = 0.05541529817494251, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9854788833009229, log_density = 13.32481933059459, hamiltonian_energy = -11.751690789221325, hamiltonian_energy_error = -0.01054676663840759, max_hamiltonian_energy_error = -0.20439106962488474, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9624313735740787, log_density = 14.374439197077573, hamiltonian_energy = -11.951036158961541, hamiltonian_energy_error = -0.050514698737258, max_hamiltonian_energy_error = -0.10420243220590919, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9542730244019596, log_density = 12.773888313893137, hamiltonian_energy = -11.403449480390805, hamiltonian_energy_error = 0.05823031783590693, max_hamiltonian_energy_error = -0.19574535240156976, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9633591285742085, log_density = 11.74708239611359, hamiltonian_energy = -9.389959301881639, hamiltonian_energy_error = -0.056389529434941466, max_hamiltonian_energy_error = -0.2958305637275078, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9769286725257961, log_density = 12.853987835111205, hamiltonian_energy = -10.057623645298742, hamiltonian_energy_error = 0.028182888810023954, max_hamiltonian_energy_error = 0.07337623978233232, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9925583061724575, log_density = 14.679223823050004, hamiltonian_energy = -10.85827649243842, hamiltonian_energy_error = -0.11217126755433249, max_hamiltonian_energy_error = -0.1436630747598695, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.994554234674936, log_density = 14.386335905664895, hamiltonian_energy = -12.796125742519088, hamiltonian_energy_error = -0.04907940945886757, max_hamiltonian_energy_error = -0.05859548225264177, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9816103490191477, log_density = 15.401230383273258, hamiltonian_energy = -11.697212510984572, hamiltonian_energy_error = 0.007342079853366101, max_hamiltonian_energy_error = 0.04548666286570047, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.971155182354787, log_density = 15.08129636130299, hamiltonian_energy = -12.500859155247714, hamiltonian_energy_error = 0.0028778965901530285, max_hamiltonian_energy_error = 0.13555845632042107, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9705243390738687, log_density = 16.847772750104273, hamiltonian_energy = -13.905527252847218, hamiltonian_energy_error = -0.04724286906928832, max_hamiltonian_energy_error = -0.11536202251506822, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9518708219101413, log_density = 15.238588731015106, hamiltonian_energy = -13.219255946482551, hamiltonian_energy_error = 0.08918941870579467, max_hamiltonian_energy_error = 0.1281930033276968, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9988179109823433, log_density = 15.321766735023472, hamiltonian_energy = -13.640921280679947, hamiltonian_energy_error = -0.04549909753964698, max_hamiltonian_energy_error = -0.139116543496705, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8918945447927703, log_density = 12.750719833657168, hamiltonian_energy = -10.261331680656344, hamiltonian_energy_error = 0.1432865828595773, max_hamiltonian_energy_error = 0.16149850537069455, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.999138689163794, log_density = 12.4573978197274, hamiltonian_energy = -10.589273829972182, hamiltonian_energy_error = -0.07301085547473996, max_hamiltonian_energy_error = -0.20435845225618365, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9295502651188182, log_density = 13.577579150984533, hamiltonian_energy = -10.342836700855159, hamiltonian_energy_error = 0.05728312644034261, max_hamiltonian_energy_error = 0.23157427681620213, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9767009120780629, log_density = 11.20025898966014, hamiltonian_energy = -9.055221709337676, hamiltonian_energy_error = 0.028412874357027107, max_hamiltonian_energy_error = -0.20486213889438964, tree_depth = 5, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9989195682763113, log_density = 13.76461403139893, hamiltonian_energy = -10.283071707663101, hamiltonian_energy_error = -0.06273021287756997, max_hamiltonian_energy_error = -0.11894296000013149, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9994909488269524, log_density = 16.51112910475476, hamiltonian_energy = -13.166867210144636, hamiltonian_energy_error = -0.08933566246492752, max_hamiltonian_energy_error = -0.08933566246492752, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9082036014080188, log_density = 12.922606069620226, hamiltonian_energy = -11.534232091067418, hamiltonian_energy_error = 0.10323265277113514, max_hamiltonian_energy_error = 0.15417925157112045, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9998939605429618, log_density = 14.011657714782874, hamiltonian_energy = -12.723229006822223, hamiltonian_energy_error = -0.07785481697775865, max_hamiltonian_energy_error = -0.07785481697775865, tree_depth = 2, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9112594639302156, log_density = 12.423226487274928, hamiltonian_energy = -11.109453957802081, hamiltonian_energy_error = 0.19494289032249057, max_hamiltonian_energy_error = 0.19494289032249057, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 17.088612539342414, hamiltonian_energy = -10.343590520465076, hamiltonian_energy_error = -0.22153867504809632, max_hamiltonian_energy_error = -0.22153867504809632, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9492571991000205, log_density = 16.117411466813977, hamiltonian_energy = -15.400196099121546, hamiltonian_energy_error = 0.036959924899058194, max_hamiltonian_energy_error = 0.10737539403178253, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.998744190112477, log_density = 16.27930082648722, hamiltonian_energy = -13.762967211973073, hamiltonian_energy_error = -0.02473867677375452, max_hamiltonian_energy_error = -0.044902870548568785, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9421435252731375, log_density = 13.834249727303204, hamiltonian_energy = -12.72926920341674, hamiltonian_energy_error = 0.057906392747499424, max_hamiltonian_energy_error = 0.09970039226742777, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9982847648817539, log_density = 15.43042194324438, hamiltonian_energy = -12.255151931161041, hamiltonian_energy_error = -0.0336568821056602, max_hamiltonian_energy_error = -0.05482821208790156, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9778409741478491, log_density = 14.83855020757505, hamiltonian_energy = -12.610811352436393, hamiltonian_energy_error = 0.00937689215106019, max_hamiltonian_energy_error = 0.06706623334541284, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.993896470357483, log_density = 16.30449606438268, hamiltonian_energy = -13.324902407139197, hamiltonian_energy_error = -0.040906362040631805, max_hamiltonian_energy_error = -0.060389997052780586, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9941984705780242, log_density = 16.733957546472503, hamiltonian_energy = -15.122434868673507, hamiltonian_energy_error = -0.029083241113555758, max_hamiltonian_energy_error = 0.030426435459023793, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9320844658159084, log_density = 15.754831404873414, hamiltonian_energy = -12.88922207514562, hamiltonian_energy_error = 0.05273717007349177, max_hamiltonian_energy_error = 0.12656511468864728, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9856664575154854, log_density = 12.24582163595541, hamiltonian_energy = -11.810848339676342, hamiltonian_energy_error = 0.043766161775620205, max_hamiltonian_energy_error = 0.043766161775620205, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9922073610980947, log_density = 16.688125356867985, hamiltonian_energy = -11.195836276308794, hamiltonian_energy_error = -0.06824881600950583, max_hamiltonian_energy_error = -0.06913756400671645, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9688432219506821, log_density = 16.76318741575647, hamiltonian_energy = -15.170492573636075, hamiltonian_energy_error = -0.0019331631687844464, max_hamiltonian_energy_error = 0.05194803852915264, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9868218129635857, log_density = 16.1713913866197, hamiltonian_energy = -15.597978833067067, hamiltonian_energy_error = 0.030184937030879766, max_hamiltonian_energy_error = 0.03176018244899126, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9813217940459308, log_density = 16.404121071763207, hamiltonian_energy = -14.561053477410734, hamiltonian_energy_error = 0.019614704373804415, max_hamiltonian_energy_error = 0.041998970506453404, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.930860900620934, log_density = 16.295854083734277, hamiltonian_energy = -14.80537577703244, hamiltonian_energy_error = 0.08242180784947273, max_hamiltonian_energy_error = 0.1438994094332493, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9854111995106953, log_density = 16.230688441297378, hamiltonian_energy = -14.718425200687534, hamiltonian_energy_error = -0.014940250146553424, max_hamiltonian_energy_error = -0.0968693556850706, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.941962908624939, log_density = 13.542035820244397, hamiltonian_energy = -11.502798021125367, hamiltonian_energy_error = -0.039657671916970116, max_hamiltonian_energy_error = 0.16682509041131688, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9865752213083911, log_density = 16.259441738933102, hamiltonian_energy = -12.110457525461847, hamiltonian_energy_error = -0.1453793159824901, max_hamiltonian_energy_error = -0.1453793159824901, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.995760623852107, log_density = 15.618452667719698, hamiltonian_energy = -14.64685644144609, hamiltonian_energy_error = 0.01396518843292327, max_hamiltonian_energy_error = -0.020135398722750608, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8533276747729732, log_density = 11.69783093633744, hamiltonian_energy = -9.46130092366128, hamiltonian_energy_error = 0.19931004533793306, max_hamiltonian_energy_error = 0.25526471247495586, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9976370964928267, log_density = 13.227307507916942, hamiltonian_energy = -7.248625487997262, hamiltonian_energy_error = -0.15730824545076505, max_hamiltonian_energy_error = -0.24773312032944617, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9932763648247338, log_density = 15.96905103182976, hamiltonian_energy = -10.869187610603745, hamiltonian_energy_error = -0.03433265789274742, max_hamiltonian_energy_error = -0.08220097716086983, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9131921938067454, log_density = 15.421455541782514, hamiltonian_energy = -12.796764669850504, hamiltonian_energy_error = 0.09747547996516204, max_hamiltonian_energy_error = 0.14972407800020981, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 14.827430678876809, hamiltonian_energy = -13.062092255907631, hamiltonian_energy_error = -0.02761053746031905, max_hamiltonian_energy_error = -0.14136875146846606, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9440184243860906, log_density = 13.287390883482482, hamiltonian_energy = -12.099107396916725, hamiltonian_energy_error = 0.11279327486426993, max_hamiltonian_energy_error = -0.2628799598708138, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 14.51606163103678, hamiltonian_energy = -12.643122538240016, hamiltonian_energy_error = -0.025650568845625443, max_hamiltonian_energy_error = -0.30477864725566306, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9917469939490839, log_density = 14.602947504079514, hamiltonian_energy = -12.286281965931975, hamiltonian_energy_error = -0.10765534241402541, max_hamiltonian_energy_error = -0.2280441036721772, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9464408546186641, log_density = 11.42950439770113, hamiltonian_energy = -10.248228155743645, hamiltonian_energy_error = 0.15416695143049353, max_hamiltonian_energy_error = 0.15416695143049353, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9927231001978092, log_density = 16.361563191553763, hamiltonian_energy = -9.332538776446253, hamiltonian_energy_error = -0.18603522283888374, max_hamiltonian_energy_error = -0.21318378801326254, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9357066895700478, log_density = 15.540984816341606, hamiltonian_energy = -12.997374836988506, hamiltonian_energy_error = 0.056317693107436284, max_hamiltonian_energy_error = 0.20460809647657818, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9889393372934343, log_density = 16.325408987413347, hamiltonian_energy = -13.43662418881713, hamiltonian_energy_error = -0.0265601948469385, max_hamiltonian_energy_error = -0.11468191752545209, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9201255993041645, log_density = 16.724275695193363, hamiltonian_energy = -12.789236750547275, hamiltonian_energy_error = -0.022056724156312768, max_hamiltonian_energy_error = 0.20177404135396948, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9729212359428475, log_density = 14.970561694982125, hamiltonian_energy = -13.415049278595808, hamiltonian_energy_error = 0.055110301202544676, max_hamiltonian_energy_error = 0.055110301202544676, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9747535566623796, log_density = 14.604514145942812, hamiltonian_energy = -11.564704912369216, hamiltonian_energy_error = -0.0077335119179124945, max_hamiltonian_energy_error = 0.08699665224133923, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9639331550153354, log_density = 14.524778898594118, hamiltonian_energy = -12.616791588107388, hamiltonian_energy_error = 0.01796161473879465, max_hamiltonian_energy_error = 0.09889074025190325, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9290011426451871, log_density = 13.9022739627028, hamiltonian_energy = -12.05162411524175, hamiltonian_energy_error = 0.05552402604003248, max_hamiltonian_energy_error = 0.15905990811581816, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9995383974838372, log_density = 14.928398845745896, hamiltonian_energy = -12.746612157662815, hamiltonian_energy_error = -0.028539649725948024, max_hamiltonian_energy_error = -0.17098971277214048, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9490698414180544, log_density = 14.775940316677772, hamiltonian_energy = -10.989952707067639, hamiltonian_energy_error = 0.03621309846866261, max_hamiltonian_energy_error = -0.27847741393726366, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.197579575174892, hamiltonian_energy = -12.750013829587616, hamiltonian_energy_error = -0.005466440114251014, max_hamiltonian_energy_error = -0.3001314953266139, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.796458966716186, hamiltonian_energy = -11.532486850087224, hamiltonian_energy_error = -0.08986859446520512, max_hamiltonian_energy_error = -0.17324004044982289, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9847142835803576, log_density = 16.09825866635192, hamiltonian_energy = -12.906262314238479, hamiltonian_energy_error = 0.004316097452303325, max_hamiltonian_energy_error = -0.13296005644144238, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 16.01487860254078, hamiltonian_energy = -15.660705018480627, hamiltonian_energy_error = -0.005422495095810831, max_hamiltonian_energy_error = -0.06746559163397592, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9963498611609247, log_density = 16.52762181560776, hamiltonian_energy = -15.363127855217376, hamiltonian_energy_error = -0.04287424080288105, max_hamiltonian_energy_error = -0.10145437956043324, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.968359962371084, log_density = 15.965702629607318, hamiltonian_energy = -14.104015221320388, hamiltonian_energy_error = 0.05930814916403726, max_hamiltonian_energy_error = 0.08012866006549046, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9861348285959113, log_density = 16.295902082012446, hamiltonian_energy = -13.896156813606392, hamiltonian_energy_error = -0.08101966117376946, max_hamiltonian_energy_error = -0.09180298969693901, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8924792619825231, log_density = 15.356173539677398, hamiltonian_energy = -13.321402044807936, hamiltonian_energy_error = 0.04615832818320342, max_hamiltonian_energy_error = 0.2245051486905112, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.925707130921807, log_density = 12.103554601958267, hamiltonian_energy = -9.319965370719451, hamiltonian_energy_error = 0.13438040888963698, max_hamiltonian_energy_error = 0.15875611455122396, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9827678070180823, log_density = 13.799626863042544, hamiltonian_energy = -9.539661346797681, hamiltonian_energy_error = -0.06607078639603792, max_hamiltonian_energy_error = -0.07027542692970457, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9969547517742502, log_density = 13.551823345226724, hamiltonian_energy = -11.762999496061841, hamiltonian_energy_error = 0.0033665052804305873, max_hamiltonian_energy_error = -0.09890457246164175, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9912831771552003, log_density = 16.088637259327818, hamiltonian_energy = -11.268794248774228, hamiltonian_energy_error = -0.027962278267363416, max_hamiltonian_energy_error = -0.120431232342046, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9678892416581323, log_density = 14.553278280418926, hamiltonian_energy = -13.47896964313227, hamiltonian_energy_error = 0.056389642463445355, max_hamiltonian_energy_error = 0.09363692628488351, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8753801505135701, log_density = 14.440869228162084, hamiltonian_energy = -8.48349784920532, hamiltonian_energy_error = 0.024792141475957763, max_hamiltonian_energy_error = 0.26843574817451454, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9993296302970828, log_density = 12.245251457464596, hamiltonian_energy = -11.10548654948396, hamiltonian_energy_error = 0.005684522961525218, max_hamiltonian_energy_error = -0.10599744461499405, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9659934289430083, log_density = 13.164084229351074, hamiltonian_energy = -9.442460636729145, hamiltonian_energy_error = -0.03553304790893819, max_hamiltonian_energy_error = 0.11706134231263832, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9934997516943053, log_density = 13.50346296963168, hamiltonian_energy = -11.279088805305445, hamiltonian_energy_error = -0.043772799921431016, max_hamiltonian_energy_error = -0.08122053812820162, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8948318315763308, log_density = 9.81862031162768, hamiltonian_energy = -8.664153687124452, hamiltonian_energy_error = 0.16087843157812287, max_hamiltonian_energy_error = 0.24234246733030496, tree_depth = 5, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9958653230836897, log_density = 15.001256798464118, hamiltonian_energy = -8.479649494566516, hamiltonian_energy_error = -0.010898005954608436, max_hamiltonian_energy_error = -0.14192508263791836, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9959812445870666, log_density = 15.077098045658744, hamiltonian_energy = -13.591075204518368, hamiltonian_energy_error = -0.0038833183507556157, max_hamiltonian_energy_error = -0.09590402727864067, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.967133401453592, log_density = 15.71822908300799, hamiltonian_energy = -12.348146283523514, hamiltonian_energy_error = -0.05577282229605096, max_hamiltonian_energy_error = -0.15132091662388092, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9884708905543664, log_density = 16.953691425169765, hamiltonian_energy = -14.638106937556946, hamiltonian_energy_error = -0.04253186548814547, max_hamiltonian_energy_error = -0.050136457827964165, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9754810184306035, log_density = 16.39218889165625, hamiltonian_energy = -15.156144078220542, hamiltonian_energy_error = 0.04796852315925726, max_hamiltonian_energy_error = 0.05009523466462973, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.982535197597576, log_density = 15.112669467362204, hamiltonian_energy = -14.456728691237863, hamiltonian_energy_error = 0.022156123289384766, max_hamiltonian_energy_error = -0.05265535504790719, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9966081996922727, log_density = 16.14823602828019, hamiltonian_energy = -14.180432082965098, hamiltonian_energy_error = -0.04326298855469091, max_hamiltonian_energy_error = -0.045006229811740184, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9976393581855341, log_density = 17.124945266402385, hamiltonian_energy = -15.813582454399413, hamiltonian_energy_error = -0.016128380432290257, max_hamiltonian_energy_error = -0.022600846954054177, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9196252985123106, log_density = 16.44421004329799, hamiltonian_energy = -12.848979679511485, hamiltonian_energy_error = 0.01893509171910779, max_hamiltonian_energy_error = 0.16975148645255267, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9942651044110276, log_density = 16.15378567452462, hamiltonian_energy = -13.839940013637904, hamiltonian_energy_error = -0.01064115505688612, max_hamiltonian_energy_error = 0.01599027177579515, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.955404855667649, log_density = 16.805849552626633, hamiltonian_energy = -14.50526735715166, hamiltonian_energy_error = -0.01190419663911868, max_hamiltonian_energy_error = 0.0863862360096288, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9786935006155363, log_density = 16.331923308568644, hamiltonian_energy = -15.906920988757394, hamiltonian_energy_error = 0.039590336075171706, max_hamiltonian_energy_error = 0.04843473236553031, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9980550871541739, log_density = 16.44133660694454, hamiltonian_energy = -15.693388328985217, hamiltonian_energy_error = -0.006783944981087586, max_hamiltonian_energy_error = -0.03105949105472483, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9837927307073161, log_density = 15.523346517472751, hamiltonian_energy = -13.858622816782088, hamiltonian_energy_error = 0.03786529726070498, max_hamiltonian_energy_error = 0.05499335047396414, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9841753755529241, log_density = 16.53391007625033, hamiltonian_energy = -14.808608893353068, hamiltonian_energy_error = -0.046752246815286114, max_hamiltonian_energy_error = -0.08163824286669907, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9483563095320025, log_density = 16.262705916801334, hamiltonian_energy = -13.947084283443253, hamiltonian_energy_error = 0.04301612833889834, max_hamiltonian_energy_error = 0.10741487505062786, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8950958007112133, log_density = 15.4456652384246, hamiltonian_energy = -13.002050410030012, hamiltonian_energy_error = 0.019685561553162145, max_hamiltonian_energy_error = 0.23780889306299002, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.997341424959556, log_density = 15.268159006621008, hamiltonian_energy = -14.267154854750565, hamiltonian_energy_error = 0.01943950705606312, max_hamiltonian_energy_error = -0.045041790625464984, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9999231501521362, log_density = 14.73483787331126, hamiltonian_energy = -14.040425746219379, hamiltonian_energy_error = 0.000554384395721641, max_hamiltonian_energy_error = -0.062445270695043575, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9993711857964055, log_density = 15.804067794522418, hamiltonian_energy = -12.743218763844576, hamiltonian_energy_error = -0.015499424943344664, max_hamiltonian_energy_error = -0.07491363753083924, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9871666080084097, log_density = 15.479061532510109, hamiltonian_energy = -13.123645447290095, hamiltonian_energy_error = 0.009798577153397048, max_hamiltonian_energy_error = -0.05699575498847054, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9352113131576584, log_density = 16.156935919216757, hamiltonian_energy = -13.240694249035235, hamiltonian_energy_error = 0.002222629246743324, max_hamiltonian_energy_error = 0.13425875977291568, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 47, is_accept = true, acceptance_rate = 0.9677722731236447, log_density = 14.364881049632894, hamiltonian_energy = -11.072378187135477, hamiltonian_energy_error = 0.02153373963661842, max_hamiltonian_energy_error = 0.13770133954431962, tree_depth = 5, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9937319254913803, log_density = 16.029979112681755, hamiltonian_energy = -11.84159137188002, hamiltonian_energy_error = -0.06516674232661579, max_hamiltonian_energy_error = -0.1458010339405682, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9982996546077672, log_density = 16.64407258507747, hamiltonian_energy = -15.207426540231744, hamiltonian_energy_error = -0.038363615505254245, max_hamiltonian_energy_error = -0.07450112904649231, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9989182975292626, log_density = 16.58422552656816, hamiltonian_energy = -15.955202167914184, hamiltonian_energy_error = 0.00010977696340042087, max_hamiltonian_energy_error = -0.05848882108122844, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9679613458699772, log_density = 14.878681255493486, hamiltonian_energy = -12.43675391461145, hamiltonian_energy_error = 0.04596897132652167, max_hamiltonian_energy_error = 0.08922526581289425, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8881738409631772, log_density = 11.829782383039502, hamiltonian_energy = -7.260168281748575, hamiltonian_energy_error = 0.05192860219091333, max_hamiltonian_energy_error = 0.3288441428931659, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9613384369929114, log_density = 12.714990310413889, hamiltonian_energy = -9.883290377704867, hamiltonian_energy_error = 0.10088440086806827, max_hamiltonian_energy_error = -0.2183249592673313, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 12.612767612144399, hamiltonian_energy = -11.072445595884851, hamiltonian_energy_error = -0.16082234902555115, max_hamiltonian_energy_error = -0.4954440179561477, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9804082533903267, log_density = 15.12253765537783, hamiltonian_energy = -10.871385421950656, hamiltonian_energy_error = -0.17170500116473342, max_hamiltonian_energy_error = -0.24748837582549932, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9822885321624207, log_density = 16.60105605693807, hamiltonian_energy = -14.21689799411925, hamiltonian_energy_error = -0.04157592737338334, max_hamiltonian_energy_error = 0.09233167476597615, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9697472346625009, log_density = 15.73394147379472, hamiltonian_energy = -14.810736767901748, hamiltonian_energy_error = 0.010440914229997489, max_hamiltonian_energy_error = 0.07218576612845062, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9921796531310572, log_density = 15.756589681310592, hamiltonian_energy = -14.849437970609316, hamiltonian_energy_error = 0.00936443180892077, max_hamiltonian_energy_error = -0.04107046089655775, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9822036301710706, log_density = 16.07781094836531, hamiltonian_energy = -14.485763115126018, hamiltonian_energy_error = 0.01856186708064378, max_hamiltonian_energy_error = -0.07859817529100965, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9896532889226665, log_density = 15.022762045678428, hamiltonian_energy = -14.092480581225752, hamiltonian_energy_error = 0.020660296265447187, max_hamiltonian_energy_error = -0.13084542953704492, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9982651360558037, log_density = 15.389178342376235, hamiltonian_energy = -13.202976370850552, hamiltonian_energy_error = -0.14428634794651707, max_hamiltonian_energy_error = -0.1474518866144514, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9709535545898311, log_density = 14.301479262272236, hamiltonian_energy = -12.646568787831285, hamiltonian_energy_error = 0.037917604746906974, max_hamiltonian_energy_error = 0.08237923304453254, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9957550390675395, log_density = 16.555909107973953, hamiltonian_energy = -13.147913526692172, hamiltonian_energy_error = -0.06188777098219589, max_hamiltonian_energy_error = -0.06188777098219589, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.906631647869144, log_density = 16.4329668667633, hamiltonian_energy = -14.359730109984934, hamiltonian_energy_error = 0.09534479964780651, max_hamiltonian_energy_error = 0.1784301555722667, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9545830912662997, log_density = 15.668816869377888, hamiltonian_energy = -13.64799746922381, hamiltonian_energy_error = 0.029869109679147243, max_hamiltonian_energy_error = 0.11963261954601023, tree_depth = 2, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9943295495956536, log_density = 14.929674487629464, hamiltonian_energy = -14.019347972454185, hamiltonian_energy_error = 0.010310331635970726, max_hamiltonian_energy_error = -0.11872819838871074, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9907679170454444, log_density = 16.30175800554981, hamiltonian_energy = -13.445361117051046, hamiltonian_energy_error = -0.06768137149752107, max_hamiltonian_energy_error = -0.10379219030019549, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8354129067265035, log_density = 12.731024638965351, hamiltonian_energy = -11.78362421005537, hamiltonian_energy_error = 0.2955492362929828, max_hamiltonian_energy_error = 0.31292105776672585, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9973196531207312, log_density = 16.349475003982715, hamiltonian_energy = -10.584005020878255, hamiltonian_energy_error = -0.293018386529436, max_hamiltonian_energy_error = -0.46697306177011555, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9727515858412924, log_density = 14.557024566959699, hamiltonian_energy = -12.858050854009193, hamiltonian_energy_error = 0.019796281169934815, max_hamiltonian_energy_error = 0.07166024055353937, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.35580616738149, hamiltonian_energy = -14.165097616928508, hamiltonian_energy_error = -0.022775279784408298, max_hamiltonian_energy_error = -0.0602209232703661, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 16.41416615969734, hamiltonian_energy = -14.271233439067164, hamiltonian_energy_error = -0.028515175112362456, max_hamiltonian_energy_error = -0.04698646344126267, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9500807063243469, log_density = 14.84782682578637, hamiltonian_energy = -12.985748316246891, hamiltonian_energy_error = 0.017515717744506887, max_hamiltonian_energy_error = 0.10421070687444711, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9246308434635568, log_density = 14.87696723489585, hamiltonian_energy = -11.547243835135717, hamiltonian_energy_error = 0.1066866834380562, max_hamiltonian_energy_error = 0.14922462292824967, tree_depth = 5, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9953161187577214, log_density = 16.150136414110502, hamiltonian_energy = -13.927561709183852, hamiltonian_energy_error = -0.0479088084200292, max_hamiltonian_energy_error = -0.09026069662669833, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9806993114999553, log_density = 15.768007248637044, hamiltonian_energy = -14.302561744317046, hamiltonian_energy_error = 0.04616730306062422, max_hamiltonian_energy_error = -0.056004654439032464, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9888825351100413, log_density = 14.280764145191366, hamiltonian_energy = -13.004872406151232, hamiltonian_energy_error = 0.004877498278261783, max_hamiltonian_energy_error = -0.05837400012672589, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9919316881576833, log_density = 16.82325423512774, hamiltonian_energy = -13.19882239101124, hamiltonian_energy_error = -0.11052875738751133, max_hamiltonian_energy_error = -0.11052875738751133, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9895796877045567, log_density = 16.37581888236712, hamiltonian_energy = -15.3574324242457, hamiltonian_energy_error = 0.005277021591817643, max_hamiltonian_energy_error = 0.03097674801188255, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.901617736906705, log_density = 15.556773507120944, hamiltonian_energy = -9.656322887585102, hamiltonian_energy_error = 0.05831512409749706, max_hamiltonian_energy_error = 0.22835666790918907, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.99206244284074, log_density = 16.186994639185635, hamiltonian_energy = -14.1668723575294, hamiltonian_energy_error = -0.05393175934897165, max_hamiltonian_energy_error = -0.07585486509096562, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8881695264263556, log_density = 10.622825817234123, hamiltonian_energy = -9.664478195663932, hamiltonian_energy_error = 0.2663298083158949, max_hamiltonian_energy_error = 0.2663298083158949, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9863600241797043, log_density = 15.24776238051783, hamiltonian_energy = -6.08681149971148, hamiltonian_energy_error = -0.36225728447017236, max_hamiltonian_energy_error = -0.36225728447017236, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9801378426567823, log_density = 16.694397315340836, hamiltonian_energy = -13.830738259447807, hamiltonian_energy_error = 0.009894457129121292, max_hamiltonian_energy_error = 0.051234275527450635, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9149328798815373, log_density = 14.82551554813042, hamiltonian_energy = -13.963415685634564, hamiltonian_energy_error = 0.16863123043024153, max_hamiltonian_energy_error = 0.19619466276304287, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9985943363054294, log_density = 16.38627637880405, hamiltonian_energy = -13.91624050524739, hamiltonian_energy_error = -0.1052878835614699, max_hamiltonian_energy_error = -0.126875379316699, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9906836588343187, log_density = 14.82326973664173, hamiltonian_energy = -13.976371693075144, hamiltonian_energy_error = 0.026365120195071867, max_hamiltonian_energy_error = -0.10341648343629295, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9904648914904176, log_density = 15.318547753651295, hamiltonian_energy = -12.878193725264786, hamiltonian_energy_error = -0.029247952748532313, max_hamiltonian_energy_error = -0.13817904362538158, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9890138493408976, log_density = 16.05387861886431, hamiltonian_energy = -14.015800219266687, hamiltonian_energy_error = -0.03749860751077705, max_hamiltonian_energy_error = -0.1092285391407497, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9702454884288854, log_density = 14.227503592115651, hamiltonian_energy = -13.35228773841273, hamiltonian_energy_error = 0.09458042196003902, max_hamiltonian_energy_error = -0.09643099672184263, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9965154441184921, log_density = 14.979012683046324, hamiltonian_energy = -10.947874005247463, hamiltonian_energy_error = -0.03941219539618501, max_hamiltonian_energy_error = -0.17685396044509183, tree_depth = 5, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9316849958472174, log_density = 9.279731976298695, hamiltonian_energy = -8.434696290485327, hamiltonian_energy_error = 0.1564622973840777, max_hamiltonian_energy_error = 0.2643609548784589, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.99557070483641, log_density = 12.993934556356994, hamiltonian_energy = -8.734230596125727, hamiltonian_energy_error = -0.2657894034395376, max_hamiltonian_energy_error = -0.2894972759206347, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9951751913773224, log_density = 13.415470524078689, hamiltonian_energy = -9.597648771330965, hamiltonian_energy_error = -0.07648293199525291, max_hamiltonian_energy_error = -0.14148713740883068, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9339660816022131, log_density = 13.34985579735552, hamiltonian_energy = -10.703568022554181, hamiltonian_energy_error = 0.049398873309856484, max_hamiltonian_energy_error = 0.12736956853122905, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9893245654697442, log_density = 14.22981171422888, hamiltonian_energy = -9.281286905000407, hamiltonian_energy_error = -0.04046214289500227, max_hamiltonian_energy_error = 0.17450996839564503, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.921273215887804, log_density = 14.819538847985173, hamiltonian_energy = -9.419062594140575, hamiltonian_energy_error = 0.04210800059641784, max_hamiltonian_energy_error = 0.17959696145205228, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7581417985787117, log_density = 8.417470585857814, hamiltonian_energy = -7.479292039424496, hamiltonian_energy_error = 0.3732181607553988, max_hamiltonian_energy_error = 0.459485004386206, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9996476079082953, log_density = 8.405974571163433, hamiltonian_energy = -4.75576934268722, hamiltonian_energy_error = 0.00529990107265732, max_hamiltonian_energy_error = -0.5907240183592091, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9974983769278852, log_density = 13.762735668037807, hamiltonian_energy = -5.223499044294213, hamiltonian_energy_error = -0.3396544043068541, max_hamiltonian_energy_error = -0.3396544043068541, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9903186335385498, log_density = 15.4751685406109, hamiltonian_energy = -12.51006563539723, hamiltonian_energy_error = -0.05833376797145995, max_hamiltonian_energy_error = -0.19793148187648058, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8544048989289208, log_density = 12.721708765422541, hamiltonian_energy = -11.763362119193749, hamiltonian_energy_error = 0.2518903266383692, max_hamiltonian_energy_error = 0.3889068905631028, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9843853270586926, log_density = 15.758099184233503, hamiltonian_energy = -11.413203217416577, hamiltonian_energy_error = -0.3759067052180338, max_hamiltonian_energy_error = -0.3759067052180338, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9983252201881387, log_density = 16.00866109468493, hamiltonian_energy = -14.82726038150702, hamiltonian_energy_error = -0.054557142883767895, max_hamiltonian_energy_error = -0.09520035261462567, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9989783644289116, log_density = 16.425572882171295, hamiltonian_energy = -13.724261457859768, hamiltonian_energy_error = -0.06340110580179292, max_hamiltonian_energy_error = -0.07193981757336765, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9985055505755523, log_density = 17.115625891746426, hamiltonian_energy = -14.75216508270331, hamiltonian_energy_error = -0.007139809307803446, max_hamiltonian_energy_error = -0.021583708213055885, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.916822357967612, log_density = 16.328156582241917, hamiltonian_energy = -13.355685403521791, hamiltonian_energy_error = 0.06382658249494533, max_hamiltonian_energy_error = 0.18023304397146767, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9226282302206349, log_density = 17.157754499372626, hamiltonian_energy = -12.94531519683709, hamiltonian_energy_error = -0.11461849637849753, max_hamiltonian_energy_error = 0.19283712934277908, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8267159682722193, log_density = 16.67646117260402, hamiltonian_energy = -12.369931728994398, hamiltonian_energy_error = -0.014274505999244624, max_hamiltonian_energy_error = 0.3438979710785066, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 16.938849208265495, hamiltonian_energy = -16.42474571197717, hamiltonian_energy_error = -0.017773521893001742, max_hamiltonian_energy_error = -0.03636800387432615, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9609907361867239, log_density = 15.651238617788676, hamiltonian_energy = -14.749559912309394, hamiltonian_energy_error = 0.01631771964169637, max_hamiltonian_energy_error = 0.07530270321909427, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.967328794407587, log_density = 14.749650566547153, hamiltonian_energy = -13.498522117554748, hamiltonian_energy_error = 0.03957414822255245, max_hamiltonian_energy_error = 0.05456194836138373, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9567807403133, log_density = 14.305451200250548, hamiltonian_energy = -13.100063633715346, hamiltonian_energy_error = 0.10308463110692578, max_hamiltonian_energy_error = 0.10308463110692578, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9810407019073054, log_density = 12.919371380026725, hamiltonian_energy = -10.28622484006056, hamiltonian_energy_error = 0.09353603664383847, max_hamiltonian_energy_error = -0.24040416000206477, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9927516479456009, log_density = 16.077929388539758, hamiltonian_energy = -11.236068987537692, hamiltonian_energy_error = -0.036645217862519175, max_hamiltonian_energy_error = -0.11078398323722816, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9817747535628044, log_density = 13.791741967494332, hamiltonian_energy = -12.121248152146592, hamiltonian_energy_error = 0.05307053302507292, max_hamiltonian_energy_error = 0.07603152485997633, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9932787214973156, log_density = 15.772867341529956, hamiltonian_energy = -10.507329913127807, hamiltonian_energy_error = -0.051119106810206816, max_hamiltonian_energy_error = -0.1270772105775464, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9922498712397696, log_density = 13.671374645000954, hamiltonian_energy = -12.703166364243327, hamiltonian_energy_error = 0.026948221387275595, max_hamiltonian_energy_error = -0.06069224727494138, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.994815928601863, log_density = 17.050999589783263, hamiltonian_energy = -12.386550786785111, hamiltonian_energy_error = -0.08245116639960415, max_hamiltonian_energy_error = -0.08491758237641456, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9913031301312948, log_density = 16.58305953579245, hamiltonian_energy = -16.37863992368195, hamiltonian_energy_error = 0.018335737158579946, max_hamiltonian_energy_error = 0.033546430853011344, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9980531278605546, log_density = 16.30753287743173, hamiltonian_energy = -15.157987148614836, hamiltonian_energy_error = -0.03126970449474342, max_hamiltonian_energy_error = -0.044791520994673206, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9340070512714238, log_density = 16.17536633487872, hamiltonian_energy = -14.931498493397449, hamiltonian_energy_error = 0.009011222908425154, max_hamiltonian_energy_error = 0.12483337291526553, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9439584615130848, log_density = 16.345227499459487, hamiltonian_energy = -12.957786154025303, hamiltonian_energy_error = 0.017615688321752643, max_hamiltonian_energy_error = 0.0978821580057474, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9813822026032724, log_density = 16.352008545483926, hamiltonian_energy = -11.744329286970952, hamiltonian_energy_error = 0.02755332059060933, max_hamiltonian_energy_error = 0.07223986026601992, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9919984436201458, log_density = 16.524300524297956, hamiltonian_energy = -15.322024560068238, hamiltonian_energy_error = -0.049520801339529186, max_hamiltonian_energy_error = -0.07265305880393846, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9977602363236568, log_density = 16.52331446717404, hamiltonian_energy = -15.594811484530739, hamiltonian_energy_error = -0.018091727723145823, max_hamiltonian_energy_error = -0.019855419012372977, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9762534682948031, log_density = 16.145722205809832, hamiltonian_energy = -15.932740874002567, hamiltonian_energy_error = 0.025594612353051716, max_hamiltonian_energy_error = 0.03249795928352839, tree_depth = 2, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9993960137141545, log_density = 16.69099290304773, hamiltonian_energy = -15.430754798236226, hamiltonian_energy_error = -0.01085695979202761, max_hamiltonian_energy_error = -0.02524790629595408, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9766054207475428, log_density = 16.012990868415702, hamiltonian_energy = -15.263413635266103, hamiltonian_energy_error = 0.053572264670721736, max_hamiltonian_energy_error = 0.06314492899923252, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9995796383095287, log_density = 16.404334717346877, hamiltonian_energy = -15.539610004318822, hamiltonian_energy_error = -0.005121939055321434, max_hamiltonian_energy_error = -0.0799324356054214, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9756123991607287, log_density = 15.06736349745496, hamiltonian_energy = -14.264286709800295, hamiltonian_energy_error = 0.04501331611972148, max_hamiltonian_energy_error = -0.11399948596232434, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 15.37221984067499, hamiltonian_energy = -14.92096221150341, hamiltonian_energy_error = -0.04021734464675397, max_hamiltonian_energy_error = -0.13222439588910717, tree_depth = 2, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9966002604946309, log_density = 16.3143869078045, hamiltonian_energy = -14.334187624700142, hamiltonian_energy_error = -0.008159779974267423, max_hamiltonian_energy_error = -0.11259208941157794, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9096470658771333, log_density = 16.63743959665821, hamiltonian_energy = -13.245072444717279, hamiltonian_energy_error = -0.048685246316418684, max_hamiltonian_energy_error = 0.20110685237967552, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8666768816424109, log_density = 13.246467894297815, hamiltonian_energy = -12.81848754841136, hamiltonian_energy_error = 0.22278170838979605, max_hamiltonian_energy_error = 0.23962366688289727, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.128423404202966, hamiltonian_energy = -12.825006295777426, hamiltonian_energy_error = -0.12489920959446366, max_hamiltonian_energy_error = -0.17744316101596525, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9997783766440443, log_density = 16.28034659471676, hamiltonian_energy = -14.50279283755356, hamiltonian_energy_error = -0.016383609530103982, max_hamiltonian_energy_error = -0.03352915791851174, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9303915267472697, log_density = 13.189248326489947, hamiltonian_energy = -11.836052868314123, hamiltonian_energy_error = 0.07632980363711717, max_hamiltonian_energy_error = 0.13663205104161946, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9942462476850233, log_density = 15.250575639751082, hamiltonian_energy = -12.14435712513919, hamiltonian_energy_error = -0.025066867794784287, max_hamiltonian_energy_error = -0.025066867794784287, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9602899811006688, log_density = 15.807092532897734, hamiltonian_energy = -12.801121173618434, hamiltonian_energy_error = -0.05256903239883748, max_hamiltonian_energy_error = -0.16367405019918202, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9951278007861906, log_density = 15.175578596085888, hamiltonian_energy = -14.151016148744825, hamiltonian_energy_error = 0.015468626223869464, max_hamiltonian_energy_error = -0.018780063678784487, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.996298842740876, log_density = 16.690068042119254, hamiltonian_energy = -14.01740824826636, hamiltonian_energy_error = -0.0026749812897488567, max_hamiltonian_energy_error = -0.07216798870848073, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9765411785753214, log_density = 16.58927300427261, hamiltonian_energy = -15.54033483647153, hamiltonian_energy_error = -0.023631049382318636, max_hamiltonian_energy_error = -0.10203744616036303, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 39, is_accept = true, acceptance_rate = 0.976403696180856, log_density = 16.307875145560963, hamiltonian_energy = -14.5440677214541, hamiltonian_energy_error = 0.016958540747070927, max_hamiltonian_energy_error = -0.07604930311867442, tree_depth = 5, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9871943817959471, log_density = 14.564117704640477, hamiltonian_energy = -13.90412011346793, hamiltonian_energy_error = 0.032876343992798596, max_hamiltonian_energy_error = -0.07041132512015125, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9987771590466044, log_density = 16.398939285329714, hamiltonian_energy = -13.338115899638337, hamiltonian_energy_error = -0.06096260342171789, max_hamiltonian_energy_error = -0.08934054210759435, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9509804283487652, log_density = 15.136836830304286, hamiltonian_energy = -12.907842850243583, hamiltonian_energy_error = 0.0012283851873267082, max_hamiltonian_energy_error = 0.1082311054375058, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9802943122063476, log_density = 15.16014978530434, hamiltonian_energy = -12.904929557042335, hamiltonian_energy_error = 0.01071913460964602, max_hamiltonian_energy_error = 0.07325823104580031, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7412581464291463, log_density = 12.014196475619453, hamiltonian_energy = -6.820294986833784, hamiltonian_energy_error = 0.199800793234858, max_hamiltonian_energy_error = 0.5533446897614498, tree_depth = 4, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.968369741152049, hamiltonian_energy = -11.82881392691244, hamiltonian_energy_error = -0.08547857845232265, max_hamiltonian_energy_error = -0.15525067315248897, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9949732871877731, log_density = 15.333086474608319, hamiltonian_energy = -12.666143109888942, hamiltonian_energy_error = -0.06445331203545202, max_hamiltonian_energy_error = -0.07959542348032933, tree_depth = 3, numerical_error = false, step_size = 0.07899733382046811, nom_step_size = 0.07899733382046811, is_adapt = false)])","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Inspect posterior distribution over hyperparameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"hypers = map(unpack, samples);\nh_l1 = histogram(getindex.(hypers, :l1); label=\"l1\");\nh_l2 = histogram(getindex.(hypers, :l2); label=\"l2\");\nh_s1 = histogram(getindex.(hypers, :s1); label=\"s1\");\nh_s2 = histogram(getindex.(hypers, :s2); label=\"s2\");\nplot(h_l1, h_l2, h_s1, h_s2; layout=(2, 2))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As expected, the sampler converges to the posterior distribution quickly. One could combine this code with that from the previous sections to make predictions under the posterior over the hyperparameters.","category":"page"},{"location":"examples/getting_started/#Conclusion","page":"Getting Started","title":"Conclusion","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you now know how to fit GPs using Stheno.jl, and to investigate their posterior distributions. It's also straightforward to utilise Stheno.jl inside probabilistic programming frameworks like Soss.jl and Turing.jl (see examples folder).","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Stheno.jl","page":"Home","title":"Stheno.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Stheno.jl is a package for probabilistic programming with Gaussian processes.","category":"page"},{"location":"internals/#Interfaces","page":"Internals","title":"Interfaces","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The primary objects in Stheno are some special subtypes of AbstractGP. There are three primary concrete subtypes of AbstractGP:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP: an atomic Gaussian process given by wrapping an AbstractGP.\nCompositeGP: a Gaussian process composed of other WrappedGPs and CompositeGPs, whose properties are determined recursively from the GPs of which it is composed.\nGaussianProcessProbabilisticProgramme / GPPP: a Gaussian process comprising WrappedGPs and CompositeGPs. This is the primary piece of functionality that users should interact with.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This documentation provides the information necessary to understand the internals of Stheno, and to extend it with custom functionality.","category":"page"},{"location":"internals/#AbstractGP","page":"Internals","title":"AbstractGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP and CompositeGP implement the AbstractGPs.jl API. Please refer to the AbstractGPs.jl docs for more info on this.","category":"page"},{"location":"internals/#diag-methods","page":"Internals","title":"diag methods","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It is crucial for pseudo-point methods, and for the computation of marginal statistics at a reasonable scale, to be able to compute the diagonal of a given covariance matrix in linear time in the size of its inputs. This, in turn, necessitates that the diagonal of a given cross-covariance matrix can also be computed efficiently as the evaluation of covariance matrices often rely on the evaluation of cross-covariance matrices. As such, we have the following functions in addition to the AbstractGPs API implemented for WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Function Brief description\nvar(f, x) diag(cov(f, x))\nvar(f, x, x′) diag(cov(f, x, x′))\nvar(f, f′, x, x′) diag(cov(f, f′, x, x′))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The second and third rows of the table only make sense when length(x) == length(x′), of course.","category":"page"},{"location":"internals/#WrappedGP","page":"Internals","title":"WrappedGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"We can construct a WrappedGP in the following manner:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = wrap(GP(m, k), gpc)\n","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"where m is its MeanFunction, k its Kernel. gpc is a GPC object that handles some book-keeping, and is discussed in more depth below.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The AbstractGP interface is implemented for WrappedGPs in terms of the AbstractGP that they wrap. So if you want a particular behaviour, just make sure that the AbstractGP that you wrap has the functionality you want.","category":"page"},{"location":"internals/#Aside:-Example-Kernel-implementation","page":"Internals","title":"Aside: Example Kernel implementation","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It's straightforward to implement a new kernel yourself: simply following the instructions in KernelFunctions.jl and it'll work fine with GPs in Stheno.jl.","category":"page"},{"location":"internals/#GPC","page":"Internals","title":"GPC","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"This book-keeping object doesn't matter from a user's perspective but, unfortunately, we currently expose it to users. Fortunately, it's straightforward to work with. Say you wish to construct a collection of processes:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS WON'T WORK\nf = GP(mf, kf)\ng = GP(mg, kg)\nh = f + g\n# THIS WON'T WORK","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"You should write","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS GOOD. PLEASE DO THIS\ngpc = GPC()\nf = wrap(GP(mf, kf), gpc)\ng = wrap(GP(mg, kg), gpc)\nh = f + g\n# THIS IS GOOD. PLEASE DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The rule is simple: when constructing GPs that you plan to make interact later in your program, construct them using the same gpc object. For example, DON'T do the following:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS BAD. PLEASE DON'T DO THIS\nf = wrap(GP(mf, kf), GPC())\ng = wrap(GP(mg, kg), GPC())\nh = f + g\n# THIS IS BAD. PLEASE DON'T DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The mistake here is to construct a separate GPC object for each GP. Hopefully, the code errors, but might yield incorrect results.","category":"page"},{"location":"internals/#CompositeGP","page":"Internals","title":"CompositeGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"CompositeGPs are constructed as affine transformations of CompositeGPs and GPs. We describe the implemented transformations below.","category":"page"},{"location":"internals/#Addition","page":"Internals","title":"Addition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Given AbstractGPs f and g, we define","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f + g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"to be the CompositeGP sastisfying h(x) = f(x) + g(x) for all x.","category":"page"},{"location":"internals/#Multiplication","page":"Internals","title":"Multiplication","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Multiplication of AbstractGPs is undefined since the product of two Gaussian random variables is not itself Gaussian. However, we can scale an AbstractGP by either a constant or (deterministic) function.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = c * f\nh = sin * f","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"will both work, and produce the result that h(x) = c * f(x) or h(x) = sin(x) * f(x).","category":"page"},{"location":"internals/#Composition","page":"Internals","title":"Composition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f ∘ g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for some deterministic function g is the composition of f with g. i.e. h(x) = f(g(x)).","category":"page"},{"location":"internals/#cross","page":"Internals","title":"cross","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = cross([f, g])","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for WrappedGPs and CompositeGPs f and g. Think of cross as having stacked f and g together, so that you can work with their joint.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"For example, if you wanted to sample jointly from f and g at locations x_f and x_g, you could write something like","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"fg = cross([f, g])\nx_fg = BlockData([x_f, x_g])\nrand(fg(x_fg, 1e-6))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This particular function isn't part of the user-facing API because it isn't generally needed. It is, however, used extensively in the implementation of the GaussianProcessProbabilisticProgramme.","category":"page"},{"location":"internals/#GPPP","page":"Internals","title":"GPPP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The GaussianProcessProbabilisticProgramme is another AbstractGP which enables provides a thin layer of convenience functionality on top of WrappedGPs and CompositeGPs, and is the primary way in which it is intended that users will interact with this package.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP like this","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"is equivalent to manually constructing a GPPP using WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"gpc = GPC()\nf1 = wrap(GP(SEKernel()), gpc)\nf2 = wrap(GP(SEKernel()), gpc)\nf3 = f1 + f2\nf = Stheno.GPPP((f1=f1, f2=f2, f3=f3), gpc)","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"If you take a look at the gaussian_process_probabilistic_programming.jl source, you'll see that it's essentially just the above, and an implementation of the AbstractGPs API on top of a GPPP.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP is a single GP on an extended input domain: (Image: )","category":"page"}]
}
