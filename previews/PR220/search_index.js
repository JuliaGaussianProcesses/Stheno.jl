var documenterSearchIndex = {"docs":
[{"location":"api/#Public-API","page":"API","title":"Public API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = Stheno","category":"page"},{"location":"api/#GPPP","page":"API","title":"GPPP","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Core functionality for working with GPPPs.","category":"page"},{"location":"api/","page":"API","title":"API","text":"@gppp\nGPPPInput\nBlockData\nsplit","category":"page"},{"location":"api/#Stheno.@gppp","page":"API","title":"Stheno.@gppp","text":"@gppp(model_expression)\n\nConstruct a GaussianProcessProbabilisticProgramme (GPPP) from a code snippet.\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx_local = randn(5)\n\nx = BlockData(GPPPInput(:f1, x_local), GPPPInput(:f2, x_local), GPPPInput(:f3, x_local))\n\ny = rand(f(x, 1e-12))\n\nf1, f2, f3 = split(x, y)\n\nisapprox(f1 + f2, f3; rtol=1e-4)\n\n# output\n\ntrue\n\n\n\n\n\n","category":"macro"},{"location":"api/#Stheno.GPPPInput","page":"API","title":"Stheno.GPPPInput","text":"GPPPInput(p, x::AbstractVector)\n\nAn collection of inputs for a GPPP. p indicates which process the vector x should be extracted from. The required type of p is determined by the type of the keys in the GPPP indexed.\n\njulia> x = [1.0, 1.5, 0.3];\n\njulia> v = GPPPInput(:a, x)\n3-element GPPPInput{Symbol, Float64, Vector{Float64}}:\n (:a, 1.0)\n (:a, 1.5)\n (:a, 0.3)\n\njulia> v isa AbstractVector{Tuple{Symbol, Float64}}\ntrue\n\njulia> v == map(x_ -> (:a, x_), x)\ntrue\n\n\n\n\n\n","category":"type"},{"location":"api/#Stheno.BlockData","page":"API","title":"Stheno.BlockData","text":"BlockData{T, TV<:AbstractVector{T}, TX<:AbstractVector{TV}} <: AbstractVector{T}\n\nA strictly ordered collection of AbstractVectors, representing a ragged array of data.\n\nVery useful when working with GPPPs. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\n# Specify a `BlockData` set that can be used to index into\n# the `f2` and `f3` processes in `f`.\nx = BlockData(\n    GPPPInput(:f2, randn(4)),\n    GPPPINput(:f3, randn(3)),\n)\n\n# Index into `f` at the input.\nf(x)\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.split","page":"API","title":"Base.split","text":"Base.split(x::BlockData, Y::AbstractVecOrMat)\n\nConvenience functionality to make working with the output of operations on GPPPs easier. Splits up the rows of Y according to the sizes of the data in x.\n\njulia> Y = vcat(randn(5, 3), randn(4, 3));\n\njulia> x = BlockData(randn(5), randn(4));\n\njulia> Y1, Y2 = split(x, Y);\n\njulia> Y1 == Y[1:5, :]\ntrue\n\njulia> Y2 == Y[6:end, :]\ntrue\n\nWorks with any BlockData, so blocks can e.g. be GPPPInputs. This is particularly helpful for working with the output from rand and marginals from a GPPP indexed at BlockData. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = BlockData(GPPPInput(:f2, randn(3)), GPPPInput(:f3, randn(4)))\ny = rand(f(x))\ny2, y3 = split(x, y)\n\nFunctionality also works with any AbstractVector.\n\n\n\n\n\n","category":"function"},{"location":"api/#Building-GPPPs","page":"API","title":"Building GPPPs","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"If in doubt about what any of these transformations can do, play around with them!","category":"page"},{"location":"api/","page":"API","title":"API","text":"+\n*\nstretch\nperiodic\nshift\nselect","category":"page"},{"location":"api/#Base.:+","page":"API","title":"Base.:+","text":"+(fa::AbstractGP, fb::AbstractGP)\n\nProduces an AbstractGP f satisfying f(x) = fa(x) + fb(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.:*","page":"API","title":"Base.:*","text":"*(f, g::AbstractGP)\n\nProduce an AbstractGP h satisfying to h(x) = f(x) * g(x), for some deterministic function f.\n\nIf f isa Real, then h(x) = f * g(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.stretch","page":"API","title":"Stheno.stretch","text":"stretch(f::AbstractGP, l::Union{AbstractVecOrMat{<:Real}, Real})\n\nThis is the primary mechanism by which to introduce length scales to your programme.\n\nIf l isa Real or l isa AbstractMatrix{<:Real}, stretch(f, l)(x) == f(l * x) for any input x. In the l isa Real case, this is equivalent to scaling the length scale by 1 / l.\n\nl isa AbstractVector{<:Real} is equivalent to stretch(f, Diagonal(l)).\n\nEquivalent to f ∘ Stretch(l).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.periodic","page":"API","title":"Stheno.periodic","text":"periodic(g::AbstractGP, f::Real)\n\nProduce an AbstractGP with period f.\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.shift","page":"API","title":"Stheno.shift","text":"shift(f::AbstractGP, a::Real)\nshift(f::AbstractGP, a::AbstractVector{<:Real})\n\nReturns the GP g given by g(x) = f(x - a)\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.select","page":"API","title":"Stheno.select","text":"select(f::AbstractGP, idx)\n\nSelect the dimensions of the input to f given by idx.\n\n\n\n\n\n","category":"function"},{"location":"input_types/#Input-Types","page":"Input Types","title":"Input Types","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Stheno enables the user to handle any type of input domain they wish and provides a common API that users must implement when considering a new way of representing input data to ensure that the package knows how to handle them appropriately.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"This interface has now been adopted throughout the JuliaGaussianProcesses ecosystem.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Discussed below is this interface's core assumptions, a detailed account of a couple of important concrete input types.","category":"page"},{"location":"input_types/#The-Central-Assumption","page":"Input Types","title":"The Central Assumption","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"The central assumption made in all user-facing and internal functions is this: when a collection of inputs are required, they subtype AbstractVector. For example, x isa AbstractVector when indexing into a GP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f(x, σ²)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"or computing the covariance matrix associated with a kernel:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"kernelmatrix(SqExponentialKernel(), x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When computing the cross-covariance matrix between two GPs","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"cov(f, g, x_f, x_g)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_f and x_g must be AbstractVectors. All other operations involving collections of inputs have the same restrictions. Always AbstractVectors.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"For example, this means that when handling multi-dimensional inputs stored in a Matrix they must be wrapped so that the package knows to treat them as a vector — more on this in below in D-dimensional Euclidean Spaces.","category":"page"},{"location":"input_types/#Dimensional-Euclidean-Space","page":"Input Types","title":"1-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When constructing a GP whose domain is the real-line, for example when using a GP to solve some kind of time-series problem, it is sufficient to work with Vector{<:Real}s of inputs. As such, the following is completely valid:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"using Stheno: GPC\nf = wrap(GP(SqExponentialKernel()), GPC())\nx = randn(10)\nf(x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"It is also possible to work with other AbstractArrays that represent a vector of 1-dimensional points, e.g.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = range(-5.0, 5.0; length=100)\nf(x)","category":"page"},{"location":"input_types/#D-Dimensional-Euclidean-Space","page":"Input Types","title":"D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Many applications of interest involve more than a single input-dimension, such as spatio-temporal modeling or Machine Learning tasks. For these cases, we provide ColVecs <: AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"X_data = randn(5, 100)\nX = ColVecs(X_data)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"tells Stheno that it should treat each column of X_data as a vector-valued input. Phrased differently, X is an AbstractVector{T} where T <: Vector{<:Real}, which stores its elements in memory as a dense matrix. This approach has the advantage of making it completely explicit how Stheno treats a matrix of data, and also simplifies quite a bit of the internal machinery, as all vectors of inputs can be assumed to be a subtype of AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If, on the other hand, each row of X_data corresponds to a vector-valued input, use RowVecs(X_data).","category":"page"},{"location":"input_types/#Structure-in-D-Dimensional-Euclidean-Space","page":"Input Types","title":"Structure in D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Consider a rectilinear grid of points in D-dimensional Euclidean space. Such grids of points can be represented in a more memory-efficient manner than can arbitrarily locate sets of points. Moreover, this structure can be exploited to accelerate inference for certain types of problems dramatically. Other such examples exist e.g., uniform grids in N-dimensions, and can be exploited to more efficiently represent input data and to accelerate inference.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Work to exploit these kinds of structures is on-going at the time of writing and will be documented before merging.","category":"page"},{"location":"input_types/#GPPPInput-and-BlockData","page":"Input Types","title":"GPPPInput and BlockData","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"A GPPPInput is a special kind of AbstractVector, specifically designed for GPPPs. Given a GPPP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"a GPPPInput like","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_ = randn(5)\nx = GPPPInput(:f3, x_)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"applied to f","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"fx = f(x, 0.1)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"constructs a FiniteGP comprising f3 at x_. GPPPInput(:f2, x_) and GPPPInput(:f1, x_) are the analogues for f1 and f2.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If you wish to refer to multiple processes in f at the same time, use a BlockData. For example","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = BlockData(GPPPInput(:f2, x_), GPPPInput(:f3, x_))","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"would pull out a 10-dimensional FiniteGP, the first 5 dimensions being f2 at x_, the last 5 dimensions being f3 at x_.","category":"page"},{"location":"kernel_design/#Kernel-Design","page":"Kernel Design","title":"Kernel Design","text":"","category":"section"},{"location":"kernel_design/","page":"Kernel Design","title":"Kernel Design","text":"Please refer to KernelFunctions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"EditURL = \"https://github.com/JuliaGaussianProcesses/Stheno.jl/blob/master/examples/getting_started/script.jl\"","category":"page"},{"location":"examples/getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Here we document how to do some basic stuff, including learning and inference in kernel parameters, with Stheno.jl. To do this, we that makes use of a variety of packages from the Julia ecosystem. In particular, we'll make use of","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl to perform Bayesian inference in our model parameters,\nOptim.jl for point-estimates of our model parameters,\nParameterHandling.jl to make it easy to work with our model's parameters, and to ensure that it plays nicely with Optim and AdvancedHMC,\nZygote.jl to compute gradients.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This guide assumes that you know roughly what's going on conceptually with GPs. If you're new to Gaussian processes, an excellent introduction can be found in either this video lecture or this one.","category":"page"},{"location":"examples/getting_started/#Exact-Inference-in-a-GP-in-2-Minutes","page":"Getting Started","title":"Exact Inference in a GP in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This is only a slightly more interesting version of the first example on the README. It's slightly more interesting in that we give the kernels some learnable parameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Import the packages we'll need for this bit of the demo.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AbstractGPs\nusing LinearAlgebra\nusing Stheno\nusing Plots","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Short length-scale and small variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l1 = 0.4\ns1 = 0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Long length-scale and larger variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l2 = 5.0\ns2 = 1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Specify a GaussianProcessProbabilisticProgramme object, which is itself a GP built from other GPs.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f = @gppp let\n    f1 = s1 * stretch(GP(Matern52Kernel()), 1 / l1)\n    f2 = s2 * stretch(GP(SEKernel()), 1 / l2)\n    f3 = f1 + f2\nend;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Generate a sample from f3, one of the processes in f, at some random input locations. Add some iid observation noise, with zero-mean and variance 0.02.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"const x = GPPPInput(:f3, collect(range(-5.0, 5.0; length=100)));\nσ²_n = 0.02;\nfx = f(x, σ²_n);\nconst y = rand(fx);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Compute the log marginal likelihood of this observation, just because we can.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"logpdf(fx, y)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"36.28719318440634","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"fx should be thought of as \"f at x\", and is just as a multivariate Normal distribution, with zero mean and covariance matrix","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"heatmap(cov(f, x) + σ²_n * I)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As such samples can be drawn from it, and the log probability any particular value under it can be computed, in the same way that you would an MvNormal from Distributions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can visualise x and y with Plots.jl","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"plt = plot();\nscatter!(plt, x.x, y; color=:red, label=\"\");\ndisplay(plt)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"It's straightforward to compute the posterior over f:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior = posterior(fx, y);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior is another GP, the posterior over f given noisy observations y at inputs x.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The plotting recipes from AbstractGPs.jl can be utilised to easily print whichever component of the GPPP is needed.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"x_plot = range(-7.0, 7.0; length=1000);\nxp = GPPPInput(:f3, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp);\n    ribbon_scale=3, label=\"\", color=:blue, fillalpha=0.2, linewidth=2,\n)\nplot!(\n    plt, x_plot, rand(f_posterior(xp, 1e-9), 10);\n    samples=10, markersize=1, alpha=0.3, label=\"\", color=:blue,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you've built a simple GP probabilistic programme, performed inference in it, and looked at the posterior. We've only looked at one component of it though – we could look at others. Consider f2:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"xp2 = GPPPInput(:f2, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp2);\n    ribbon_scale=3, label=\"\", color=:red, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior(xp2, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:red,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-NelderMead-in-2-Minutes","page":"Getting Started","title":"Fit a GP with NelderMead in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Stheno.jl is slightly unusual in that it declines to provide a fit or train function. Why is this? In short, because there's really no need – the ecosystem now contains everything that is needed to easily do this yourself. By declining to insist on an interface, Stheno.jl is able to interact with a wide array of tools, that you can use in whichever way you please.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Optim requires that you provide an objective function with a single Vector{<:Real} parameter for most of its optimisers. We'll use ParameterHandling.jl to build one of these in a way that doesn't involve manually writing code to convert between a structured, human-readable, representation of our parameters (in a NamedTuple) and a Vector{Float64}.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"First, we'll put the model from before into a function:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function build_model(θ::NamedTuple)\n    return @gppp let\n        f1 = θ.s1 * stretch(GP(SEKernel()), 1 / θ.l1)\n        f2 = θ.s2 * stretch(GP(SEKernel()), 1 / θ.l2)\n        f3 = f1 + f2\n    end\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"build_model (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've assumed that the parameters will be provided as a NamedTuple, so let's build one and check that the model can be constructed:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\n\nθ = (\n    # Short length-scale and small variance.\n    l1 = positive(0.4),\n    s1 = positive(0.2),\n\n    # Long length-scale and larger variance.\n    l2 = positive(5.0),\n    s2 = positive(1.0),\n\n    # Observation noise variance -- we'll be learning this as well.\n    s_noise = positive(0.1),\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(l1 = ParameterHandling.Positive{Float64, typeof(exp), Float64}(-0.9162907691270586, exp, 1.4901161193847656e-8), s1 = ParameterHandling.Positive{Float64, typeof(exp), Float64}(-1.6094379869399091, exp, 1.4901161193847656e-8), l2 = ParameterHandling.Positive{Float64, typeof(exp), Float64}(1.6094379094538682, exp, 1.4901161193847656e-8), s2 = ParameterHandling.Positive{Float64, typeof(exp), Float64}(-1.490116130486996e-8, exp, 1.4901161193847656e-8), s_noise = ParameterHandling.Positive{Float64, typeof(exp), Float64}(-2.3025852420056685, exp, 1.4901161193847656e-8))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've used ParameterHandling.jls positive constraint to ensure that all of the parameters remain positive during optimisation. Note that there's no magic here, and Optim knows nothing about positive. Rather, ParameterHandling knows how to make sure that Optim will optimise the log of the parameters which we want to be positive.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can make this happen with the following:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\nusing ParameterHandling: value, flatten\n\nθ_flat_init, unflatten = flatten(θ);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Concrete types used for clarity only.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"unpack = value ∘ unflatten;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now easily define a function which accepts the flat form of the parameters, and return the negative log marginal likelihood (nlml) of the parameters θ:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function nlml(θ::NamedTuple)\n    f = build_model(θ)\n    return -logpdf(f(x, θ.s_noise + 1e-6), y)\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"nlml (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can use any gradient-free optimisation technique from Optim.jl to find the parameters whose negative log marginal likelihood is locally minimal:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Optim\nresults = Optim.optimize(\n    nlml ∘ unpack,\n    θ_flat_init + randn(length(θ_flat_init)),\n    NelderMead(),\n)\nθ_opt = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Note that we just added some noise to the initial values to make the optimisation more interesting.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now use this to construct the posterior GP and look at the posterior in comparison to the true posterior with the known hyperparameters","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_opt = build_model(θ_opt);\nf_posterior_opt = posterior(f_opt(x, θ_opt.s_noise), y);\nms_opt = marginals(f_posterior_opt(xp));\nplot!(\n    plt, x_plot, mean.(ms_opt);\n    ribbon=3std.(ms_opt), label=\"\", color=:green, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_opt(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:green,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Of course, the exact posterior has not been recovered because the exact hyperparameters cannot be expected to be recovered given a finite amount of data over a finite width window.","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-BFGS-in-2-minutes","page":"Getting Started","title":"Fit a GP with BFGS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The BFGS algorithm is generally the preferred choice when optimising the hyperparameters of fairly simple GPs. It requires access to the gradient of our nlml function, which can be straightforwardly obtained via reverse-mode algorithmic differentiation, which is provided by Zygote.jl:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Zygote: gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This will probably take a while to get going as Zygote needs to compile.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"results = Optim.optimize(\n    nlml ∘ unpack,\n    θ->gradient(nlml ∘ unpack, θ)[1],\n    θ_flat_init + 0.1 * randn(length(θ_flat_init)),\n    BFGS(),\n    Optim.Options(\n        show_trace=true,\n    );\n    inplace=false,\n)\nθ_bfgs = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Iter     Function value   Gradient norm \n     0    -1.466918e+00     3.404880e+01\n * time: 0.026601076126098633\n     1    -1.603495e+01     2.915686e+01\n * time: 1.6742351055145264\n     2    -3.146398e+01     1.645059e+01\n * time: 1.6828711032867432\n     3    -3.268763e+01     1.575196e+01\n * time: 1.733680009841919\n     4    -3.765168e+01     1.142869e+01\n * time: 1.746441125869751\n     5    -3.872058e+01     5.506418e+00\n * time: 1.7563140392303467\n     6    -4.026737e+01     2.408007e+00\n * time: 1.7645180225372314\n     7    -4.052771e+01     5.156398e-01\n * time: 1.7728300094604492\n     8    -4.055736e+01     2.519781e-01\n * time: 1.780730962753296\n     9    -4.056028e+01     4.809369e-02\n * time: 1.7879550457000732\n    10    -4.056033e+01     5.433739e-03\n * time: 1.800421953201294\n    11    -4.056034e+01     1.156715e-03\n * time: 1.8084969520568848\n    12    -4.056034e+01     7.042745e-05\n * time: 1.8371140956878662\n    13    -4.056034e+01     8.229880e-07\n * time: 1.8456990718841553\n    14    -4.056034e+01     6.167121e-09\n * time: 1.854349136352539\n","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Once more visualising the results:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_bfgs = build_model(θ_bfgs);\nf_posterior_bfgs = posterior(f_bfgs(x, θ_bfgs.s_noise), y);\nms_bfgs = marginals(f_posterior_bfgs(xp));\nplot!(\n    plt, x_plot, mean.(ms_bfgs);\n    ribbon=3std.(ms_bfgs), label=\"\", color=:orange, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_bfgs(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:orange,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Notice that the two optimisers produce (almost) indistinguishable results.","category":"page"},{"location":"examples/getting_started/#Inference-with-NUTS-in-2-minutes","page":"Getting Started","title":"Inference with NUTS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl provides a state-of-the-art implementation of the No-U-Turns sampler, which we can use to perform approximate Bayesian inference in the hyperparameters of the GP. This is slightly longer than the previous examples, but it's all set up associated with AdvancedHMC, which is literally a copy-paste from that package's README:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AdvancedHMC, Zygote","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define the log marginal joint density function and its gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"ℓπ(θ_flat) = -nlml(unpack(θ_flat)) - 0.5 * sum(abs2, θ_flat)\nfunction ∂ℓπ∂θ(θ_flat)\n    lml, back = Zygote.pullback(ℓπ, θ_flat)\n    ∂θ_flat = first(back(1.0))\n    return lml, ∂θ_flat\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"∂ℓπ∂θ (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Sampling parameter settings","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"n_samples, n_adapts = 500, 20","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(500, 20)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perturb the initialisation a little bit.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"θ0_flat = θ_flat_init + 0.1 * randn(length(θ_flat_init))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"5-element Vector{Float64}:\n -0.8212838086191401\n -1.4576838748072356\n  1.5838725879499735\n  0.16888505879483026\n -2.1789600455667726","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define metric space, Hamiltonian, sampling method and adaptor","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"metric = DiagEuclideanMetric(5)\nh = Hamiltonian(metric, ℓπ, ∂ℓπ∂θ)\nint = Leapfrog(find_good_eps(h, θ0_flat))\nprop = NUTS{MultinomialTS, GeneralisedNoUTurn}(int)\nadaptor = StanHMCAdaptor(n_adapts, Preconditioner(metric), NesterovDualAveraging(0.8, int.ϵ))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"StanHMCAdaptor(\n    pc=WelfordVar,\n    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.8),\n    init_buffer=75, term_buffer=50, window_size=25,\n    state=window(76, -30), window_splits()\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perform inference.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"samples, stats = sample(h, prop, θ0_flat, n_samples, adaptor, n_adapts; progress=true)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"([[-0.8212838086191401, -1.4576838748072356, 1.5838725879499735, 0.16888505879483026, -2.1789600455667726], [-0.8212838086191401, -1.4576838748072356, 1.5838725879499735, 0.16888505879483026, -2.1789600455667726], [-0.4412612162312852, -2.401825253455775, 1.8161450292249068, -0.14919093524615296, -4.290917514198362], [-1.0260889477930317, -2.1704811292453674, 1.928829878403486, -0.07054934152201203, -3.835901583633523], [-1.068679511141102, -2.1810188846345264, 1.9449273276694692, -0.04319699468685226, -3.945944859246268], [-1.195577846677974, -1.6130732895923345, 1.1444866445675435, -0.7608191540921923, -4.238329408313791], [-1.1358751253801962, -2.2618746346458054, 2.052452436436769, -0.24264312554015985, -3.9315323991793223], [-1.0299386924711058, -1.4412578679511396, 1.2533179984403877, -0.6707657760930447, -4.159321574539943], [-0.7918150576307784, -1.4768413478180653, 1.4188622994246243, -0.9600774690018853, -4.0795125569965425], [-0.9602004125945014, -1.9383544582435623, 1.0603091357233532, -0.7334068641673701, -3.957608304962542], [-1.249556459721985, -1.6419270868409623, 0.8774067031421576, -0.5349462422315684, -4.0233195355783264], [-1.3973639077601658, -2.031955892597521, 2.1664621688242467, 0.05649904860317444, -4.416942127158999], [-1.506281484532476, -2.0722337823329005, 2.31778131776486, 0.07735112046321282, -4.036804268605119], [-1.0678974419645384, -1.8199670331622742, 2.599498957823701, 0.9658196093348614, -4.007518353906787], [-1.0344754806140586, -2.0590154885821157, 2.381181102738991, 0.7650389407427258, -4.188870006312056], [-0.9961356024691217, -1.847675722493119, 2.553750788299293, 0.4444009068689972, -4.071055031807197], [-0.9291553136311846, -1.984136659477483, 2.1730083727708567, 0.36781324318385195, -3.840510985686669], [-1.238460604770675, -1.9156032695685432, 1.2470906711785665, -0.67991365805082, -4.012128601310927], [-0.9576602920192057, -1.8590878826428279, 2.0127987181651914, -0.059870176784973805, -3.8030945544863783], [-1.1221584691282553, -1.8981368886574743, 1.371967100581247, 0.02159061230065118, -4.074509482656184], [-1.0165994771849904, -1.6889617226387594, 1.9723862378773886, -0.1938533669212959, -3.856565457553649], [-0.9652269328570283, -1.6833464104445928, 1.9275541892188583, -0.1400115562864578, -4.237780079049814], [-1.136265751659263, -2.2119871415454075, 1.3805934091880623, -0.4948810101990092, -3.919528099564855], [-1.0955183346006636, -2.3968661770415105, 1.5664094353118525, -0.31584505905618976, -3.9809851697269254], [-0.9290027955430809, -1.2559831404879693, 0.8232301892912913, -0.5379090125799341, -4.167232740998271], [-0.43617123098494465, -1.5705221787169097, 0.47522205183397553, -0.350256801842338, -3.867585561279657], [-0.9651685317818786, -1.4412872194206452, 1.2897203598385154, -0.1592755339179675, -4.273722771399368], [-1.3367154211097843, -2.2833658752469326, 2.28761668602543, -0.07975278221639484, -3.813824212794413], [-0.9908984336996349, -1.721090822276472, 2.0074101756593645, 0.9427002257723736, -3.7872481853769844], [-1.2982999638905381, -1.9230742828724408, 2.846588219088657, 0.07812649954649875, -4.15153757010658], [-1.1450862059033604, -1.7725607370281309, 2.306806720614944, 0.22019721929801267, -4.055884611097574], [-1.3103814999381393, -1.8390817403310529, 1.694798502410705, 0.22560214570385542, -4.221268608564029], [-0.7429564569833678, -1.602012346616714, 1.470403620627205, -0.5222803028120254, -3.9405446809393467], [-1.0584336062401694, -1.9591454574376048, 1.9088948072316096, -0.6414296460796938, -3.9720652696028966], [-1.3902986351535715, -2.1851026549352413, 1.73337119871805, -0.8984365951716541, -4.04393646737356], [-1.1821255706354954, -2.0448628605641894, 1.190122927487598, -0.6489493018929964, -4.002777183176636], [-0.8607897074252115, -1.7745066081028746, 1.359855861793106, -0.3238566867344126, -3.9193887196437425], [-1.3109143891268698, -1.857035102423555, 1.378306870010337, 0.020058614915880423, -4.051660811749131], [-0.8956446406191135, -1.9383531946112225, 1.3483695717067283, 0.225704876653547, -3.8857207172011674], [-1.3094485561292482, -1.9507447336457715, 1.876501371715237, -0.5377488872566105, -4.388187467983088], [-0.9331184169763674, -1.6040764040232618, 1.7352005747089607, -0.17446214551425382, -4.059032293109497], [-1.2136686674340342, -1.9022277312483955, 1.7407935351142887, -0.403928464523929, -4.145300217318338], [-1.1183129685497906, -1.9459794819215193, 1.81640366036551, 0.22376208990191734, -4.415328437577787], [-1.6680985328995293, -1.6192091531323205, 1.8427761327325518, 0.23972591655012465, -3.9148792683968936], [-0.9344424841338899, -2.1203738029372734, 1.6753724443484441, 0.3192011734698238, -3.9776694274758757], [-1.3164305723085208, -2.018729494291373, 1.5298446186364887, 0.5486267502492671, -3.9246435577740613], [-0.4788365163900466, -1.4345109616562914, 1.661092420174025, 0.25879468628825003, -3.8586436849463563], [-0.7037743506097767, -1.5740463559803857, 1.0530078136944574, -0.1745508800814678, -3.999449982181883], [-0.9336618397029858, -1.2569539840966772, 1.2463061297611104, -0.43831607399520367, -4.004870879751937], [-1.2987006406850876, -1.9160453761853875, 0.15354075484501517, -0.6127177552564426, -3.89443077762747], [-0.9863176113784886, -1.9315748114300184, 0.09374595153394705, -0.66466274510401, -3.8244624049703253], [-0.783016130499136, -1.065548854066651, 2.059044162248359, 0.01942876190396789, -4.156405262730257], [-1.0597287657051893, -1.2214654962374727, 2.0124202072363495, -0.15421546921837506, -3.935767404087179], [-1.226074980933685, -2.4674415966854, 1.7576766011590865, -0.19674966187283152, -3.8014827663627044], [-1.2212500777756299, -2.2905556285557034, 1.685122243570507, -0.12217016130782674, -3.9504208118989146], [-1.1893010521132934, -2.3002260972043898, 1.8370958361821956, 0.03905852062572601, -3.9117949186723884], [-1.38866691804969, -1.848615833855567, 2.0441672138502236, -0.5800643755734493, -4.169805182004038], [-1.0955968007629413, -1.7264137845337886, 2.161885682070558, -0.16517208622607238, -4.109530428576754], [-1.2806020901756192, -2.017984536439702, 1.607301379937448, -0.3099617873198896, -4.109848760198662], [-1.3349547268377608, -2.140183196563891, 1.808564191125641, -0.5696191379737272, -4.120943797995986], [-1.4435876846130673, -2.2617512311152645, 1.8704949806343776, -0.6797515930251258, -4.204856774233916], [-1.4707602626891843, -2.2444934978024134, 1.7153362661667484, -0.6972521815126886, -4.003895265620286], [-0.919024221439299, -1.7249193664243105, 1.5451319804130494, -0.8888275452531926, -4.084378196353401], [-1.238295342437791, -1.915459548945624, 1.6030512590869959, 0.37315862134160643, -4.2464082262695175], [-1.1203845050444894, -1.782356631107473, 2.027280792101011, 0.4874085017979708, -3.8202616988586517], [-1.2368582493852407, -1.9417324912491782, 2.8132217848521988, 0.7000585448470127, -4.393124711238663], [-1.3048499119334516, -1.976622278533909, 3.119007233984772, 0.6761170241933182, -4.463810507217723], [-1.4299781263216573, -1.903566657057595, 3.2479088568613714, 0.6938879443194916, -4.427376303302961], [-0.7591948171838864, -1.6009703230768262, 2.1231473938476593, 0.9318420300547139, -3.5347288653878186], [-1.0224610133883671, -1.2687691145926885, 1.5332525089894182, 0.6358576594180891, -4.316080636871551], [-1.2188342006757362, -2.1115999709637023, 1.5035200652774343, -1.190208514840016, -4.27322804401679], [-1.21013218001111, -1.8983624732765354, 1.3082752779955449, -0.8831554648226108, -4.3540514087442785], [-0.7398492344704717, -1.6100161122966752, 1.623034435927189, 0.19364751736162789, -3.62326969193707], [-0.6551838876382323, -1.4091441797329847, 1.7712562610344589, 0.08411827017069888, -3.44407893125089], [-1.4400914753844034, -1.8023777673310561, 2.3934009109303647, -0.07363163790873829, -3.701558388390909], [-0.9158386094532104, -1.8218053507405039, 1.1701036851903455, -0.6872220475619403, -4.226869797119062], [-1.0928556715269522, -1.7371079674389243, 1.9520663479286624, -0.8550004272293245, -3.7888070955721385], [-1.455487647171199, -1.8372326908540513, 1.023338162020784, -0.1900290972385654, -4.007249856332454], [-0.7325891053190864, -2.06124007329962, 1.772825208589063, -0.33651588105155084, -3.848083633591427], [-1.2889102199906985, -2.361489584764169, 1.8794190536879534, -0.6181850639520604, -3.922583609867714], [-0.662460934866166, -1.3535558691372582, 1.1824671150872574, 0.054365799875546114, -3.9401490715343788], [-0.7024037722510456, -1.707344992173189, 1.5655057908559362, -0.4645948731529316, -3.7914808375552975], [-1.356265637081552, -2.092748900090772, 1.509149750240907, -0.29989259955759584, -3.933395071060272], [-1.3762448846147526, -2.059640190069422, 2.212169355387803, 0.6413134553792736, -4.133327956641014], [-1.5302213792648656, -1.8578149757858091, 1.994999558853472, 0.4537880419813062, -3.8535811369932973], [-1.0797367218147915, -2.059511065054398, 2.342807882515881, 0.3331368016134748, -4.127351544421813], [-1.128240998359838, -1.8327635613212168, 1.6920271328650889, -0.5912536182690735, -4.012716904131705], [-1.3427755371392065, -1.8569180722644736, 1.8062245788444504, 0.09127312751475596, -4.165642754898429], [-1.05238009497306, -2.186359155606549, 2.0985675727374113, 0.34104167947680486, -3.938415342934397], [-1.1392657816468763, -1.716132332140243, 2.466023180435202, -0.03599231923554172, -4.047629678305616], [-1.3769841340958127, -2.2299736339769485, 1.4166171716273979, 0.05333618003025449, -4.115982436647569], [-0.5962994698340224, -1.203464917824449, 1.9941390793018874, -0.45065118356488987, -4.070781309606724], [-0.837017099186125, -1.2602374835767438, 1.9504496657638792, -0.48996984725623294, -4.206964308333287], [-0.6967885350914101, -1.2088677748388723, 2.0995411122902894, -0.6662978204845398, -4.097404474608535], [-0.9431043804449385, -1.484585298022316, 1.5961807200844689, -0.08188339143562348, -3.9151191306998867], [-0.8569222612453958, -1.386857247965363, 1.7994209562581736, -0.3805223725916818, -4.0764401090007665], [-0.9996996584099704, -1.258741238357145, 1.5015154769196615, -0.15006984017375088, -4.095386505862384], [-0.4479317760249033, -1.1689137434837342, 1.8235559143438538, -0.17640583232135862, -3.9292041019687276], [-0.6249847064072456, -1.8397885421479143, 1.6212061778164861, -0.2964202846221173, -3.8402624720785568], [-0.36874330856838955, -1.6532571703949066, 1.4636776693999105, -0.2532529159253864, -3.906239233647254], [-1.2338341918135773, -2.00094853560293, 2.0674321886170994, -0.5124956966973244, -4.009923532548669], [-0.4605536242815863, -1.6087908073337678, 2.028227649515085, 0.16873527255502288, -3.939144286592312], [-0.9705494148742793, -1.596282996818602, 1.6525907444999612, 0.49205648331761165, -3.631979638868789], [-0.9351301840675533, -1.7560221105016978, 1.7426519853312397, 0.2595066747625804, -3.7014462432784896], [-1.3360159798378215, -1.9642524083263027, 1.3604984432439151, -0.8256045252348665, -3.9722838285493554], [-1.0019695839406668, -1.6930864588214067, 1.3219373547724702, -0.33062861478796773, -3.9771851062607166], [-1.1967124887897003, -1.918464242474857, 1.5059653405187667, -0.6189006182701889, -4.01238313286473], [-0.7090470125176248, -1.687721316301054, 1.482235844329863, -0.35709159793910705, -4.190413312991378], [-1.1470653767611814, -1.604558137348664, 1.506373939076038, -0.37919446615841673, -3.8113515125397615], [-1.260624310923227, -1.8993063702105444, 0.6953822111965647, -0.7346953261890941, -4.186293016607372], [-0.9661848558891059, -1.7645660468174287, 2.5138790293924376, 0.13477150497403667, -4.110925416408709], [-1.311378784415242, -2.074659264957854, 1.7418550379195095, 0.17457417806966036, -3.89657780314848], [-1.0397233330906348, -1.606536554224278, 1.6531505581897616, -0.8496756422068699, -4.005926975213273], [-0.9236124205985933, -1.6122720234354564, 1.521934931055529, -0.7282149585245558, -4.161886482343424], [-1.3542619629254786, -2.205176470388528, 1.2817874044199868, 0.0465787873757203, -3.9978214683514426], [-1.1095731984713841, -2.003490773800893, 1.3513128069901281, 0.17166199087123526, -3.9827950971673265], [-0.8825970985200242, -1.587536675933297, 1.3637658608125016, -0.03039442111874041, -4.210197274553121], [-1.0535960652715797, -2.178643659726633, 1.2219121328867917, -0.839181669729821, -4.073971896448955], [-1.1918261882684065, -1.6245254508969083, 0.8660924853508548, -0.5251264188671037, -4.050207099597343], [-1.216391083344397, -1.873980407933069, 1.7403199685405932, -0.49794833785362114, -3.8525197597318397], [-0.7044111337677632, -2.0051591637391324, 1.9367265160933056, -0.47084626663492046, -3.778817691320375], [-1.2187780105558663, -1.6129455660516867, 2.131907687018998, -0.1442866502125782, -4.199886887861881], [-1.0918199910571111, -2.302209641752434, 1.7133364883038988, -0.18002305641921215, -3.9274725744574157], [-0.742649927914747, -1.6424408122187077, 1.3537374854866682, -0.43979727695090354, -4.032480908502582], [-1.2045817724397292, -1.898097888754796, 1.5889264124857394, 0.08988707029723063, -4.050649725241942], [-1.328720940180386, -1.9321557363258448, 1.2890305110722284, 0.11248296773157006, -4.384183656019366], [-0.34338366056298775, -1.5884688529023638, 1.810039493630614, -0.4932135859976915, -3.9227292526084154], [-1.0531155774848202, -1.7972414437143591, 2.075162386200113, -0.44027031142895884, -4.112549360445712], [-1.1929769417862988, -2.1188498575412567, 1.4725052155878373, -0.22640332126623988, -4.177173785227497], [-0.9588196829834661, -1.578147253549596, 1.7802084053428036, -0.7164462005184308, -3.848672331409996], [-1.1241715166155815, -1.561075793692215, 1.2978138682972116, -0.3917655392103563, -3.9366484446417407], [-1.0185935459841404, -2.060949044023478, 1.9945730008410179, -0.41293410220518445, -4.230789575029878], [-1.042991231137789, -1.377667793053863, 2.445431117458287, -0.35361772548963105, -3.9479341176448735], [-0.7217508610677131, -1.4953617139656408, 2.527570832007723, -0.4704843164146965, -4.069741868877202], [-0.6777199383026071, -1.584507374749553, 2.408816596191634, -0.4169943038171772, -3.9313241202427225], [-1.360161627699131, -1.851772488841249, 1.130435890255219, -0.1547553527478447, -4.3135058298448445], [-0.8201602104726202, -1.688467259288972, 1.6807996635955273, -0.5281368923853651, -3.915556392791618], [-1.4860073262809734, -2.1853010669425457, 1.6757281401688555, -0.2999116240787813, -4.130915397248946], [-1.5347160687695416, -2.081080100359839, 1.7864985037219459, 0.04997136742152575, -4.303823304881785], [-0.7514242398932649, -1.8509408043242492, 1.9577342395020076, -0.2542957186095447, -3.9880089904580847], [-1.042150322461972, -1.4435000961700617, 1.6654827799290581, -0.7186338840802846, -4.363939616392202], [-1.4053702783490787, -1.962034405016395, 2.049639638317409, 0.48408982207973206, -4.289679935780649], [-1.1916205513793385, -1.9805960197796357, 1.5242179609214797, 0.28238211665659974, -3.9040785732612435], [-0.8527613386038898, -1.1715931155483805, 1.5137949940946545, 0.33826734128572356, -3.945162016964716], [-0.9460222298810304, -1.6213009291896803, 1.7192315898213855, 0.3344136881565583, -4.170193792852869], [-1.192021362444604, -2.0678429120862067, 1.7435124749428694, -0.4551898749853124, -4.008565367960562], [-1.0331093273866299, -1.521702159508219, 1.5120516271158229, 0.08270700462553146, -3.9260199005517418], [-1.3571081574161168, -1.7034577996524742, 1.9952530887421636, -0.14201065144770042, -4.109172979847208], [-1.1154286058442924, -1.7763480974738264, 1.3950551469238726, -0.22313198476083582, -3.8545623595058185], [-1.0430778778253522, -1.5719001545046007, 1.8496209786644624, -0.2372784019486467, -3.959769674440167], [-1.3194829611109644, -2.088150445720534, 1.824068769153889, -0.4082459300606289, -4.198720479836007], [-0.9677253566443439, -1.7728668912134158, 1.411403409489898, -0.34686492224443943, -3.9821624664832034], [-0.9503580930750766, -1.970567452292659, 1.5548370397005635, -0.21321146217205997, -3.8809079262005746], [-1.1552593554383552, -1.8664667731596136, 1.8262173463898967, -0.16535310927565083, -4.223090074441252], [-1.1368281912779186, -1.7241121955808119, 1.968640334057016, -0.16952676388231747, -4.432075491830154], [-1.2066967464791907, -1.6844064150540865, 1.6805994978680663, -0.2328929242458859, -4.191755434140268], [-1.0371818811096258, -1.9528477873119447, 1.937342953950009, -0.5355738422090239, -3.9586441059535757], [-1.089305558922108, -1.8955505386842637, 1.8621274713628806, -0.5312465563109422, -4.21327205785602], [-1.3007225880743736, -2.1801076390909713, 1.674498021369424, -0.7962041918928389, -3.796602492949988], [-1.062206000593366, -1.728559739682275, 2.013403428265591, -0.16858366410417386, -4.306200660595123], [-1.0714820157511422, -1.8549498163200921, 1.1297309710029395, -0.3776691463750812, -4.462282982708935], [-1.016141907656613, -1.9306354454861863, 0.9102641332702783, -0.20288256571856958, -4.292431585944602], [-1.5606041786638938, -1.8952684079440334, 1.1638318252149575, -0.5626543619418618, -3.9190236319535217], [-1.4612710425764626, -1.727247215237113, 0.9846468426512895, -0.49665280520328575, -4.075569584154892], [-1.0566676618773563, -2.1447216125756228, 1.10597018608, -0.8578214070225807, -4.220819385340722], [-1.262180920847492, -1.9755627937814566, 1.0183598953481143, -1.0544797470869887, -4.245910651702638], [-1.1078666346493875, -1.5795681255417535, 1.8859755788622254, 0.32655181813538947, -4.015770008936826], [-1.151931357459605, -1.531093056407892, 1.9804380732714355, 0.3267266397204504, -4.236469170101803], [-1.1700452842343991, -2.1907605766201517, 0.6659026026917537, -0.6404462555645017, -3.8560580899424606], [-1.294109617351132, -1.2945457309618011, 2.5849053839511718, 0.21272997914582065, -4.261012335650635], [-1.0984412163810282, -2.189718958428254, 2.0594725665934708, -0.08638031053028941, -3.4754816195559886], [-0.9911135877170165, -1.9031840760615069, 1.873744015879041, 0.18735618291802525, -3.6815347797257947], [-0.9947195242222157, -1.9584915832783527, 1.9091064657326406, 0.3163108162077013, -3.9346161643726685], [-1.281896288223998, -1.8159812641521211, 1.709241220876293, 0.1995304009678373, -4.110629531034853], [-1.3439224027593621, -2.244619001077475, 2.0574249433690595, -0.17070890708074082, -3.961467586657763], [-0.9356885181316432, -1.6945197826845604, 1.99537213697894, -0.375847509002042, -4.224769088250072], [-1.1961846070401008, -1.9117457577680899, 2.074710768944957, -0.1693206206825472, -3.8520870458764023], [-0.6113202880687072, -2.140665182639684, 2.292997425981047, -0.3707778903526093, -3.8994890167543956], [-1.3961632682711318, -1.4215515243375365, 1.9122343742659933, -0.21438507612269325, -4.201616092942577], [-1.2168720045492656, -1.523050333828233, 1.9044606145086376, -0.21217831005723473, -4.076035202603623], [-0.9259544121215594, -2.0521700481524596, 1.3299386813551028, -0.8184320244976617, -3.988745841780417], [-0.9930799173885163, -2.2131625039602083, 1.3630851489454128, -0.738679008086911, -4.15141190420861], [-0.05646345142172354, -1.455282249006058, 1.4507168422754588, -0.3330402713332551, -3.430727128704469], [-1.672417040919472, -1.8407537619420524, 1.5093202798709746, -0.4582185057893433, -4.109827308385319], [-0.9819665156930417, -2.283342201058875, 2.0143772664972284, -0.583126356641022, -4.088389012714392], [-1.6255218443515909, -1.760011988253582, 2.27409034011439, -0.3558456145531096, -4.074720327378699], [-0.6932670582545906, -1.9650141342996763, 1.2570146841033123, 0.019263367613168714, -4.061636138872194], [-0.6932670582545906, -1.9650141342996763, 1.2570146841033123, 0.019263367613168714, -4.061636138872194], [-1.1363876492440774, -1.5615347937950137, 1.109619132544481, -0.528297154249751, -4.087557839420471], [-1.24063389928633, -1.6496313924054338, 2.4516308637782713, 0.08524265249353975, -4.121966388344677], [-1.090219817048619, -2.043751265091639, 1.8521688896606014, 0.6759767256899277, -4.142465619626908], [-1.3448530320737537, -2.3132149768835766, 2.2612307413552033, -0.2527700971049793, -3.7883541218517696], [-1.2943728603404157, -2.0338908356704413, 1.796323691298588, -0.5468835041306364, -3.8594472246243097], [-1.1085282950321858, -1.926500853232345, 1.883751388266193, -0.10769914833339471, -4.134504744155896], [-0.9159947565347996, -1.8678504605429045, 1.6762966490009121, -0.5982387931856504, -4.09230931155204], [-1.2475205561539124, -2.055693146526357, 1.8251254629274498, -0.2525711835971637, -4.251485564745699], [-1.3257672080012448, -1.857599387485219, 1.8684278275869979, -0.37158339625861314, -4.081693570715237], [-1.1599047527350228, -1.51921284148693, 1.5268120277986401, 0.025929087063725598, -3.895248274706291], [-1.1417915720660021, -2.142340440681222, 1.1654736393887193, -0.5062743942910931, -4.144749740147937], [-1.1641897692080792, -1.8535746836248932, 1.6391297236312081, 0.13731061964008062, -3.8930467592177496], [-1.2436849931982588, -1.890878170792699, 1.922889874996616, -0.5234653400346976, -3.9928845349535194], [-1.1245555230295197, -1.9391218941181534, 1.9005557538431774, -0.2219528454955843, -4.078969221162058], [-1.137939793729874, -1.9280060257693525, 2.3486994714446294, 0.5443225519568625, -4.067520772953855], [-1.4897367388670937, -1.946601660068731, 1.9581706247967086, -0.32252879306855065, -4.006130477428492], [-1.285637175341236, -2.1012085887232885, 1.7220864752177063, -0.38637829120180406, -4.275045577671027], [-0.954775819958142, -1.8473437188766517, 1.7435187628623254, -0.7179277642983276, -3.804596750377343], [-1.0607090613649288, -1.7715693003735573, 1.801146688645744, 0.2043587916366625, -3.8718458959426405], [-1.051973892704963, -1.8415884868740426, 1.9724480177199013, 0.10835314155859113, -3.8358377273899125], [-1.3872417598313083, -1.9843599782300614, 1.8948540821534634, 0.19405645267960248, -4.2003264636512405], [-1.005270843467726, -1.9415130833163028, 2.3452875931060078, 0.27558478254759694, -3.9477217771500075], [-1.2836768809444536, -2.0558457937399854, 2.465903936644681, 1.0171165082548161, -3.960602479820182], [-1.1324757857014047, -1.5868950913044269, 1.7606401011739792, 0.4311590168898792, -4.141678715932071], [-1.0911726440755003, -2.2412828289739144, 1.8307937431034267, -0.6467233396949044, -3.9795234581455334], [-0.9863459856375912, -1.559141360111905, 1.365739929933581, -0.19408764426920688, -4.366504886087329], [-0.9028185785372285, -2.12990075585177, 1.3347531551216716, -0.5247701547342913, -3.8374040422639077], [-0.8450984286652365, -2.145960968165275, 2.095568697885233, -0.01966229263185194, -3.8604317101408387], [-1.7527053845468465, -1.9182339477971053, 1.8322501552385104, -0.4178568319463387, -4.228028287149462], [-1.7340183361540367, -2.0138436462865172, 1.7266757687281444, -0.19440898554914082, -4.433650809170792], [-0.6742371823427621, -1.594535206065253, 1.847788818459161, -0.9172735921975298, -3.837815734353046], [-1.4109672849100419, -1.9758738205653639, 1.7347768555667824, -0.46223959267663917, -4.211081626493319], [-1.0086257311003402, -1.7030725839841057, 1.6850929535264645, -0.3048206642673298, -4.258750494756537], [-1.0254269257945636, -1.7316404281136568, 1.2619623222193654, -0.7177027889935891, -3.70188062623549], [-1.315026421102406, -1.99183751830194, 2.1333464823290624, -0.21600224631107717, -4.339832207087243], [-0.8744257722060577, -1.8958485229831195, 1.9556373434471181, 0.30571179565376927, -4.066121300584606], [-1.5979871970064727, -2.003581929741557, 1.8921994551662962, 0.15961473799355752, -4.064094741289278], [-0.926147417529092, -1.867108009925069, 1.7822752492728293, -0.1738949809140411, -3.9859385300583607], [-1.0221269985737924, -2.1628970436374635, 2.129876690236069, 0.042855107033018154, -3.7787046505970565], [-1.4472316771572138, -2.1954629907295513, 2.1815057726333644, -0.5916909786123652, -4.1582816080232075], [-0.9629026530396785, -1.3276673867369095, 0.664391185869107, -0.07701051870489711, -3.9920847511328357], [-0.5446215528735616, -1.2691731170778786, 0.29140546936793027, -0.33552528462633324, -3.9887060076453635], [-0.9243924287473116, -2.2960112406364184, 1.5733259975642109, -0.7525760441790861, -3.8651836373408845], [-0.6153266487617732, -1.3804955470267077, 1.3080626890527316, -0.4156804950512007, -4.021504473867731], [-1.6581502823697425, -2.0863113438704977, 2.0356783817070263, -0.35451354418874537, -4.243989948360782], [-1.1388888648501403, -2.2310690883725233, 1.7662580033979802, -0.17304786397571267, -3.807773012064683], [-0.9359086470718564, -1.9767485275351562, 2.07421267155806, 0.4316273781179599, -4.080282693306692], [-1.0154234919590146, -1.9737653758276583, 1.234347764244222, -0.273281970828047, -3.6731782082360196], [-1.083412003602347, -2.1402946728803873, 1.2246840129491494, -0.06873434095941158, -3.8314696360584435], [-0.5389780782462846, -1.1346772962869096, 1.8940791433198885, 0.2632620698101715, -3.613898093376708], [-0.9527308399819128, -1.4623750564519893, 2.0966719273826544, 0.20424252638895107, -4.32248665580224], [-0.8627246703238758, -1.408143746591467, 2.3065937320157377, 0.5901038834622391, -4.037392114444537], [-0.7351064180712951, -1.573715810590048, 2.3363612640888682, 0.6551186036609327, -3.792611904849729], [-1.026621496087982, -1.347440312263187, 1.058849583453701, -0.2916041686246301, -3.848940719332753], [-1.5484791435537897, -2.2135837289825324, 2.327693029028966, -0.22202027687231665, -4.1003633180855115], [-1.367060823860346, -2.0361678286751297, 1.9382866111936587, -0.4710920976678752, -4.193014925909683], [-1.0957805405591547, -2.1503391774403156, 1.5634353214370333, -0.13685893475546282, -4.15646579664208], [-0.6346053968444396, -1.8520475507743563, 1.522917324364714, -0.492683833816125, -3.860914521508842], [-1.6966337264327973, -1.913348727480808, 1.647933304734863, -0.2947820921824038, -4.320661665365204], [-1.7054397572198252, -1.8317020544014737, 1.6040374127895127, -0.32960108073814837, -4.32080461084785], [-1.086907861456179, -2.1357102484349304, 1.728600393260027, -0.3943544386272452, -4.227229770500762], [-1.3333806071572702, -1.9759757687504074, 1.8877497962628802, -0.4061416357162794, -4.191538734646587], [-1.2747024181359297, -2.1551851456609072, 1.79494076959061, -0.4448146976579857, -4.217864576857689], [-1.2407135375353897, -2.121758037224379, 2.029307362474401, -0.43329328752220114, -4.128754133504938], [-0.8965308783269557, -1.450494502385132, 1.4031183585882643, -0.24095389144442803, -4.33110509028185], [-1.095947739501593, -1.5424335598127876, 1.3184335798420905, -0.37745048179928, -4.300091471186205], [-0.9808937951945842, -1.9035106676157052, 0.5653709709794595, -0.21935371993755076, -4.014557447163532], [-0.9564378711484048, -1.8465376992837483, 1.7301609690543258, -0.6928839660127697, -4.2216312594148295], [-1.1235402473663885, -1.6198631080659345, 1.837613833981399, -0.8932256319611449, -3.9620715810782547], [-1.0145584622386639, -1.7883436067270462, 1.7530421296905037, -1.1982577349007428, -4.122259827114987], [-1.2879954403081681, -1.9436225974622499, 2.1600034436347078, 1.53489875616722, -4.062401468390048], [-1.0371560645793647, -1.983812895320162, 1.2162111803670657, -0.28206509358552617, -4.196496605614141], [-1.419543196695728, -2.131350013771905, 1.1915465282227784, -0.2642872309462245, -4.30511272030797], [-1.1402710314969875, -1.916046025775506, 1.054967821539263, -0.15208438257354925, -3.740758458142696], [-0.5978449674085101, -2.0399091334848185, 0.8644224466758111, -0.3581354685969372, -3.933249012379137], [-0.4863245224784385, -1.8824088473041287, 1.2032483770863327, -0.1450701382730995, -3.7186574307933835], [-0.6022547989497739, -1.2587693925555001, 0.7364695057548245, -0.24945105754629943, -3.8696101806411916], [-0.9194400934752935, -1.4616908170967784, 1.216939480231955, -1.1296669808562625, -4.0305722359396], [-1.1446079959829711, -1.259146559626847, 1.4707476858674924, -1.2898750470211007, -4.3420635283198665], [-0.8138510596403685, -1.4900543700027782, 1.3358000854481182, -1.1635549604049127, -4.428810112642325], [-0.542526469992984, -1.9155172165200347, 1.3834427870088908, 0.4833935216138596, -3.951972501385718], [-0.9618624520284392, -2.2654218755433684, 1.5174192527267494, -1.115579318746841, -3.9719971560867755], [-1.3847137223282606, -1.5567545392727864, 1.6978752260876988, 0.09945304242522779, -4.208781796397557], [-0.8544455171456757, -1.9072240562294092, 1.8552710085024182, -0.27017478501721837, -3.760678426990544], [-1.3392490885156934, -1.5727738356223215, 1.8970021626553184, 0.3157300676739899, -4.078379158983287], [-0.7244436008767297, -2.2331390782467238, 1.8299151705340804, -0.7166278701051212, -3.988752422736032], [-1.5713823209123894, -1.7555889098778443, 1.6201673129431102, -0.8202497586892743, -4.099730215236082], [-0.6745639636095838, -2.045661041075087, 1.2385062317549067, -0.22257072088566104, -3.7490773691505423], [-0.51472806327398, -2.0928430599946144, 1.4619124878471228, -0.13738987202936942, -3.6151020953158106], [-0.6398225612077115, -2.0353219711329524, 1.3808753674733216, -0.17963994827005697, -3.601911881547503], [-1.1564803439485494, -2.0033550056443516, 1.1126092080599344, -0.06815833185521751, -4.189434435986363], [-1.4203465396558412, -1.685185962611414, 2.2287040114206076, 0.920094583157598, -3.976517828518954], [-1.0594653547228534, -1.9333766098839753, 2.5792895112506553, 0.7971119073584103, -4.250674138180135], [-1.4188488644910686, -2.05256015056122, 1.786589413581593, -0.15236739061735843, -3.8981524872323607], [-1.0241401631386366, -1.6428108686659335, 2.193697524184777, -0.5353192833785904, -4.135692902328809], [-0.9196224869506501, -1.8914117242436008, 0.8495817852015435, -0.4759455103162878, -4.004345628441565], [-1.1676080620613742, -1.9376343218105756, 0.7622986418480941, -0.34591138298933577, -4.060891813330189], [-0.9183543087642045, -1.3343039623312947, 0.8958561726773524, -0.25983891948086263, -4.105065449163912], [-1.1096660785156098, -1.975629443079805, 1.0976349108196453, -0.6682049810704133, -3.9971926201522527], [-0.5356967050659839, -1.5075030135623637, 1.106768562158129, -0.2655349240940519, -3.9558839812716995], [-0.7985138789900806, -1.455745501538352, 0.5445454634092308, -0.8276536076805494, -4.0473420660289605], [-1.1621180146459236, -2.139464683268391, 2.198998789215621, -0.1192509340893082, -3.9163566052975356], [-1.0295854589157774, -1.9692424234107169, 1.9765826232866803, 0.009239195956008722, -3.991613284727627], [-1.0423681582406612, -1.7529948223236247, 1.859764895379628, -0.585806277426809, -3.954520809352905], [-0.9782281199135201, -1.510278487354436, 1.0217694046986545, 0.2728668650417235, -4.20774762580937], [-0.9869254007634786, -1.9747455751706156, 0.6207536125935501, 0.010717794388031499, -3.984170709408501], [-1.3053684874184186, -1.9691215253867724, 2.3629841200356663, -0.17482668008877267, -4.255832777187337], [-0.9543085623929741, -1.7779856002426497, 1.9273608135570917, -0.14684384192564998, -3.8798648103867777], [-0.9543085623929741, -1.7779856002426497, 1.9273608135570917, -0.14684384192564998, -3.8798648103867777], [-1.2916855041796809, -1.6868126972069715, 1.549025003261763, -0.1883544995814539, -4.1847437749955185], [-1.1481590156744426, -1.9079351960338344, 1.858423777071291, -0.31027924485733277, -4.010841150580338], [-1.186845113642391, -1.9633914203420961, 2.019589374234145, 0.12048484879859288, -3.9427322286750783], [-0.9001612096909284, -1.5608996202375407, 0.9719040420402763, -0.4223010598010251, -4.1461883152612655], [-0.8358797477364014, -1.4974170129242426, 0.7737638497228472, -0.5609350497587017, -3.8972677003100626], [-0.9358381834666121, -1.535026782966752, 1.105983878321148, -0.2719344713362982, -4.1537508018291875], [-1.1960202304400853, -2.0190986650244636, 1.903361663818535, -0.43519845324011286, -4.0337227607663735], [-1.5689983516569361, -2.0554014487035817, 1.9768092949904303, -0.25801191174536053, -4.17794514757631], [-1.4557863445249781, -1.9499037794516894, 2.1091598622674255, -0.6101350720917459, -4.26470376942524], [-0.9141763872540267, -1.8433280403976908, 1.2761076734913384, -0.11702199125386421, -3.7899818105246483], [-1.1909685541840684, -1.7638997590206889, 1.64183862312602, 0.14361800978828698, -4.290756282394671], [-0.9502604241762234, -2.2245786540881816, 1.882431117884153, 0.27806514936847515, -4.159685734519735], [-1.1242928150021743, -1.7624867150477441, 1.9182964837563998, 0.27855870606391464, -3.9622559322417166], [-1.0427261318835455, -1.9744811672242293, 1.3508591301003352, -0.15597131004726236, -4.084612770825471], [-0.806629926299556, -1.9045502196071502, 1.2299692732986525, -0.7983831487097272, -3.8416116144110433], [-1.2154113832655435, -1.8196557739190458, 1.7778405685142966, -0.3658210894859566, -4.029472336366778], [-1.0533781629376366, -1.7820387529382797, 1.3784584569126093, -0.3320146245866943, -4.059723749919733], [-1.0565766318963745, -1.804360547669476, 1.3133477308872954, -0.189907722614469, -4.134177048397089], [-0.931372056234244, -1.5565530232920206, 0.9786928789808063, -0.40264485990992716, -4.072313338191828], [-1.2332151337988388, -2.0913583058504908, 1.8128161123476434, 0.4310948376067118, -4.105940289125747], [-1.297316084980816, -2.174312700057693, 1.9974212285941313, 0.28476940787055305, -4.125122243555487], [-0.9772968516000805, -1.4585098940589647, 1.7988102219367066, -0.7900548759356548, -3.9730325248260994], [-1.1474040202783684, -2.1365857741700505, 0.9830028817901884, -1.1718080130313624, -4.1683094807640835], [-0.9077103659858209, -1.9145195312077175, 0.9220190523919244, -0.4822704708558091, -3.760366366881665], [-1.039399791757446, -2.118841781968313, 2.302812038076328, -0.2382696841696924, -3.766765033103892], [-0.8574200684778728, -1.8275434721575554, 1.070406851915371, -0.7111261170415977, -3.7154790288105772], [-0.7187997511881229, -1.677165925873005, 1.6071805447661578, -1.1484631294339391, -4.189025824023874], [-1.0627149334128452, -2.117164762394304, 1.2525618468459965, -0.5952090195803246, -3.683536025583267], [-0.992739482768755, -2.0711113198923714, 1.4196987977607185, -0.6198053416476215, -3.8505784634070395], [-1.0523916128383926, -1.63280582986665, 1.8538029780684375, -0.3426416392387066, -4.291307805853427], [-0.9288146136013344, -1.9283502013301659, 1.8162766746309913, -0.6264909505584072, -4.0764130038353255], [-1.1520906363160446, -1.5991377789893486, 1.1562753937451167, 0.27428187909475954, -4.057675161137989], [-0.9975056544946199, -1.8791342230081094, 0.7964432305498366, -1.0845189625536422, -3.9292008246888006], [-0.6970602179837361, -1.7667482106514574, 1.6380922178909234, -0.5257008020344283, -3.9199445192302353], [-0.7894918383932393, -1.7764081174009962, 1.7593169410599991, -0.5422014949380072, -3.9777353484781517], [-1.1431170700548743, -2.1193762118385786, 1.661461690281368, -0.02053742494450511, -4.28990747796647], [-0.7409044963681755, -1.88246709183548, 1.185344449162848, -0.7880147803341144, -3.653463077456462], [-1.1548919532865287, -1.850048707467298, 1.0704553537871577, -0.3294699890471195, -4.09688960947056], [-0.7831364837948412, -1.608176355119142, 0.4840754337536334, -0.6282822944459954, -3.90778788526888], [-1.1692274943665673, -2.0530567421569677, 1.7018784735090384, -0.3731953490284582, -4.070704764408882], [-1.0164829826374422, -1.4546006836318934, 2.068201713492998, 0.26275395118644085, -4.007044355554443], [-1.076874568604243, -1.955215523514442, 1.8805080792856355, 0.2495620305022779, -3.936655271348813], [-1.3493924950528484, -1.6091806310868073, 2.3816915407025663, 0.20239124593049468, -4.147608406295326], [-1.073866728526039, -1.6002238958287591, 2.5355180984286596, 0.07166861844984408, -3.9587792103155732], [-1.1056640696077882, -1.4698034010660297, 2.5809676414746567, 0.17723690709810086, -3.95684013044435], [-1.5355056833494543, -2.1915370882294094, 1.2342243213112862, -0.28012173847301086, -3.9862051633267472], [-1.0613291708866854, -2.036334348918508, 1.5458088680458066, -0.33748022598758104, -4.101310533616355], [-1.3114798214872858, -2.0327747891762384, 1.8562124312675048, -0.6674901333829109, -4.135298218983253], [-0.8714599001805232, -1.8800077003075293, 1.6214390793365965, 0.14549765944280146, -3.843067992301987], [-1.3256573415824906, -2.036458431760817, 1.6321087144507624, -0.2506958277230569, -4.119411073627077], [-0.8950340143161695, -1.8840583160271285, 1.318015250328731, 0.001327029064614349, -3.8830867686128254], [-1.4437265563998523, -1.9824383326529238, 1.2753968357461034, -0.7003126537552726, -4.2606723321770215], [-1.1546157330060935, -1.8904089099701331, 1.5193614421624007, -1.1705793480815632, -3.8252647668930093], [-0.9360806661172839, -1.6544375156502333, 1.886833057974887, -0.29238199703026746, -4.263978705121168], [-1.2569575794087018, -2.159551277289236, 1.531689255529162, -0.4027712240576208, -4.234808563862457], [-1.0818039830105803, -1.9138487794036871, 1.4295711293195816, -0.4914434769446602, -3.7208923091705612], [-1.0724290425426566, -1.6185505144667, 1.3978393790039, -0.12845070136066672, -4.308672397365445], [-1.2793862605988502, -2.0171106986185485, 2.0160014427554307, -0.38411056137029176, -4.274844553730201], [-0.8738908851441134, -1.6561197999994017, 0.768396110701554, -0.4854761600668331, -4.069887118657333], [-1.4922328585896647, -2.241901707837899, 2.289357418206201, -0.33703481364163507, -3.9716222449276057], [-0.7611523178809637, -1.6582356262952305, 1.5605954630547967, 0.06668146689550232, -3.8748384959923157], [-0.7219056317635357, -1.7436580865935811, 1.6126464974367445, 0.09660542337274293, -3.6329364732498473], [-0.5107663921303989, -1.4995184464036995, 1.7079486847489551, 0.27017641560420225, -4.12476068321929], [-1.559418810107363, -2.1897381310270734, 2.2276842329771065, -0.25198038261977196, -3.695386812404182], [-0.9012009902264245, -1.3921045997702493, 1.140444728604136, -0.3277549692255331, -3.653622812169551], [-0.7982186717842757, -1.6732696035221744, 1.095248281686015, -0.34519837021918826, -4.246345581905851], [-0.7041333892211076, -1.7264327861808761, 1.1389161980923088, -0.4390437891493028, -3.7005796767198653], [-0.8368787777394248, -1.8110461266436224, 0.8669378923592689, -0.9026867629027845, -4.034112928943538], [-1.3575176699706257, -2.1106792976401354, 2.4155465969527903, 0.13403627237308346, -4.0897166549388855], [-1.3323726531515594, -2.033121380945686, 2.3455955309387986, 0.3164768200811835, -4.046289390461718], [-1.277791880449543, -1.916297168816644, 2.41797874105835, 0.06260179259914245, -4.14606141579983], [-1.0381786235226522, -1.9918274521804076, 1.162846844480534, -0.7225980498015374, -3.6849239594665555], [-1.070150722847258, -1.2835124978198877, 1.5713314049457288, -0.48099595358311004, -4.226658701333505], [-0.8708586316753796, -1.2499476904911275, 1.5826447894202607, -0.4077966639956793, -4.358316624164538], [-1.084984191162777, -1.2414563034201354, 1.5151540471378255, -0.3714904520899903, -4.507749683100615], [-1.0225508664790763, -1.442369337493468, 1.8205587308401068, -0.4106151630158285, -4.4287780651705715], [-0.839423101364379, -1.7162563038288392, 1.7683956473820257, -0.1398740496035482, -3.7426022013545426], [-1.4025731444684488, -1.8997240983224968, 2.2882656096631546, -0.25286310522729205, -4.311611129137994], [-0.9694780531849723, -1.8177740516819347, 1.15050399030908, -0.49898477718176043, -4.037958818017965], [-1.1942438781849039, -1.9650067352717908, 1.3456320807998066, -0.5133389186515678, -4.155432546498171], [-1.2328034886646901, -1.9327075206040218, 1.6189210683518294, -0.3682328400565129, -4.051589608835416], [-1.364379454784011, -1.7521668871376335, 1.7167320447507897, -0.13320385635598753, -3.8870793328629065], [-1.4315955363910127, -1.918542233243198, 1.824323207272206, -0.38228984113562703, -4.165556084942872], [-0.5579242427094938, -1.4557424774849461, 1.798288700909315, -0.47183317049885, -3.7179378238520284], [-0.9774122832234267, -1.8847908760986816, 1.5745931905760049, -0.8589750812270344, -4.1364445413238204], [-0.9285006813029487, -2.0228693132634348, 2.1523690011625267, 0.29436732807780996, -3.98963618999577], [-1.2028954873017936, -1.925955073240577, 2.590794565364039, 0.953654880615398, -4.288513278977378], [-1.1035187748953845, -1.7196495078343321, 2.5122457617666534, 0.9765191083178728, -4.239247692180141], [-1.264443346229483, -2.07128637189106, 2.0053336197397633, -0.08280325678099515, -4.103444958186924], [-1.2459925038953148, -2.0967129309770676, 1.9977022952526875, -0.06403757112271474, -4.075631906644817], [-1.0119918967608101, -2.001304722072394, 2.2479902659760884, -0.05748716039492422, -3.8483993374144494], [-0.9550267612485834, -1.7060141445974568, 2.246574566864077, -0.14451021652872545, -3.8708812192680253], [-0.8119936503127383, -1.7965632801634999, 2.1394775731497626, 0.14452069238141743, -3.85527468959403], [-0.5244253116852206, -1.9636425365623462, 1.9885353250129165, -0.06256531841295333, -3.79048543553228], [-1.2343561736346584, -2.317170089954516, 2.9177763150846814, 1.6449663094223574, -4.205572214563987], [-1.2832735402116466, -2.4178415880704307, 2.786985893883853, 1.661902124377918, -4.283074945056361], [-1.249782372557051, -2.0664317178764917, 2.0209377877737755, 0.014554717343592344, -3.9483632260642088], [-1.1139195854623651, -2.0596691921657633, 2.040425594556203, 0.422167525148767, -4.014581016570998], [-1.6639515279544135, -2.007737999612067, 2.1325387840895975, 0.2851420867922985, -4.129592216146828], [-1.0137091936281442, -2.0570142435482137, 2.4314861403476487, -0.039644105727393714, -4.01916106212442], [-1.1313818721517233, -1.875966724882598, 2.466617076024799, 0.2055229754862792, -3.9686518206199963], [-1.5857568116933831, -2.1215539629530236, 2.2173157165464215, 0.06858267704013894, -4.220843440330303], [-1.4592775667791091, -1.811087206437563, 2.097884338165595, -0.10366860417219327, -3.9772168914385824], [-1.181511385729603, -1.6949074836085882, 1.8523819822216383, 0.09265809875327369, -3.8174319612486944], [-0.9782188924078109, -2.3017033024906013, 1.7874173810670309, 0.03630243092738912, -4.151923172849891], [-1.1300796851768284, -1.4085824803631586, 1.5186148712258112, 0.026130517409374422, -3.8956697863149516], [-1.095615786521838, -1.9239046413566665, 1.5200092757745822, -0.4234450331588623, -4.424602502432315], [-1.247874536946942, -1.949146130214387, 1.8191172269573022, -0.22854720059950143, -3.8276328534373514], [-1.0984467167908973, -1.7177003025361477, 1.7699604344682156, -0.2413290642932323, -4.021219327483771], [-1.309195631144912, -2.114939828155565, 1.9962323317366695, -0.014604517307987966, -4.055083573619762], [-1.0461581303260121, -1.6005712801670715, 1.6929484242924395, -0.16944459531204992, -4.1025934578476795], [-1.2892406252688564, -1.9796109390493555, 1.6971408228473324, -0.4589582121503013, -4.1419565827476355], [-1.2892406252688564, -1.9796109390493555, 1.6971408228473324, -0.4589582121503013, -4.1419565827476355], [-1.358714273235297, -2.0992090068068445, 1.0053567243743875, -0.4785096497109336, -3.983540701609962], [-0.9093759853813366, -1.7035731832596788, 1.5523951053053047, -0.6200250087740601, -3.9917095629494908], [-1.1605384411209934, -1.883749484513359, 1.6901092880253716, -0.3819405021002378, -4.032225706796034], [0.022076034016669896, -0.9389590834754167, 1.3472097124694704, -0.7369897251690891, -3.7910736593174055], [-1.153828400942921, -1.6878688586660193, 2.9720944550455535, 0.003491048191706092, -4.249474827772088], [-0.7583980001076915, -1.8594825528278847, 2.066053637363497, 0.1833400061357372, -3.9179577260406604], [-1.6341474552260566, -2.0355595306079346, 2.1985317389152588, 0.44911393800744126, -4.118285432898727], [-1.4008280963061468, -2.426583109166866, 1.1027623341381676, -0.8686848138421328, -4.079378651196965], [-0.8798508899822696, -1.2624226300242376, 1.671292527915385, -0.43355606707103445, -3.950171387573648], [-1.3796346899591243, -2.278989244955941, 1.880998909128707, -0.261174138553933, -3.7751781499063615], [-1.0291774427584424, -1.5313670567374655, 1.7002528139269617, -0.2155024252354556, -4.2815577279505295], [-1.4921695483118096, -2.1149816269663524, 2.128510911902249, 0.07005467380392821, -4.066011679851957], [-1.1313155164832762, -1.9302590802529125, 1.8023997846485997, 0.03826428985613331, -4.156139361339935], [-1.1745216317576548, -2.0470394091962207, 1.496531826727883, 0.058033851379584604, -4.280377467864086], [-1.1745216317576548, -2.0470394091962207, 1.496531826727883, 0.058033851379584604, -4.280377467864086], [-0.849886032568464, -1.3476518253683685, 1.6191210770744475, -0.535322224519412, -3.9586672566588867], [-1.058486563167348, -1.5525958418931998, 1.2607692235387788, -0.6010975740804765, -4.087208328334339], [-1.1058265805854723, -1.6008780681873016, 1.403260397118193, -0.42362015456714225, -4.178744116322647], [-0.8513619453770646, -1.5916655430225999, 1.650033048478313, -0.0004476203439504056, -4.011196972511462], [-1.2748093454894351, -2.0438498179878946, 1.2628834193155747, -0.4947651516548297, -4.055895226589579], [-1.145450398928008, -2.092039733697266, 2.5584446754543455, 0.5262189372786263, -4.117673281315174], [-0.7707926302759909, -1.714943065091508, 2.2591991120084955, 0.290135010623987, -3.8780269971473427], [-1.2490133803809746, -2.0501684325773053, 1.4958490633455643, -0.6992085962364973, -4.030605389322511], [-1.345917808044563, -1.8511507101406734, 1.9157951066393133, -0.6921575585426541, -4.18117987034062], [-0.8896693245588609, -1.8789862789124032, 1.8852091515273222, -0.3713984011070648, -3.9840683499634255], [-1.4960238929133782, -1.9611546765933519, 1.6609784444308768, -0.23712239807519375, -4.239179135849695], [-1.4356929550902582, -1.9204052673467984, 1.5692466897806747, -0.18886804018884587, -4.395245837584956], [-0.93290824160341, -2.0275273886819796, 1.8761292424890879, -0.6182812822960063, -3.731853604506542], [-1.279798454489766, -1.9824475243818709, 1.4943129035364917, -0.36043876236421246, -4.231549745733876], [-0.936963043551108, -1.770280186516385, 1.83221587283261, -0.4839624588341045, -4.0311934398063], [-1.3597043008667904, -2.231617332396006, 2.078403375036653, 0.14256202116845504, -4.002206978460698], [-0.815335148167755, -1.5400869672835864, 1.6754559073420359, -0.47823079098959587, -3.8913845002768594], [-1.5699263695427013, -2.1691134768186413, 1.6274527930586744, -0.6006177800233696, -4.1556220262403665], [-1.250575699409054, -2.2567583036001855, 2.182315451768479, 0.08379935918977113, -3.8557152864582243], [-1.3595818151112098, -1.909025657599381, 1.7414112485442577, -0.6246660757040787, -4.370162717182014], [-0.7477635129273645, -1.8006677274704224, 1.5180184999324677, -0.15085545853947774, -3.7763454190138055], [-1.095688309880155, -1.3703903728250926, 1.294372263417424, -0.2265370910537987, -4.217843716523783], [-0.6042075233853218, -1.7431122044502996, 1.0720947828860745, -0.10970577572965447, -3.73218698713385], [-1.0966202155972835, -1.5531623915165558, 1.2130629172828147, -1.016721624345562, -3.980627647487588], [-1.0486616722050235, -2.086066509087076, 0.748493752543827, -0.8578715025952435, -4.159643597785543], [-1.2650583286448098, -2.0427939481458663, 1.3650239739976564, -0.38044900445241286, -3.8576337585744858], [-1.2104817965964108, -2.1818502121886754, 1.4769567762474083, 0.09597281745479103, -4.191394438889554], [-1.0862065573835418, -2.323221914014177, 1.5772818770431338, -0.33107329092124627, -4.041468844795729], [-1.444131275208873, -1.9869595905240542, 1.5083655651936005, -0.6414066040034746, -3.6967581038828694], [-0.95639937083588, -1.9436920653090382, 1.4181769211104063, -0.7832465895432827, -4.335990811179255], [-1.4090100199991826, -1.7559248265219667, 1.398119174319492, -0.6995338654288503, -3.9988995266832927], [-0.9730045881763374, -1.4862901510650286, 1.46905717326417, -0.5663922658760876, -4.22671177741216], [-1.138428788834727, -1.8936522634884436, 0.8921359369300836, -0.7040980759192427, -3.863287345923546], [-0.9043696368723197, -2.237020181421112, 1.0321167653286085, -0.8976344170471746, -4.172104120712039], [-1.2831044916144978, -2.0499904865560334, 1.294866348661922, -0.7370314742371622, -3.888585547738994], [-1.1141059676970049, -1.746856422917124, 2.368384785417642, 0.7527360370409097, -4.042122658206165], [-1.3556361326129784, -1.8601598400971153, 2.1265275862403756, 0.9444897265308771, -3.972398127056092], [-1.1594096248836674, -1.679826996105709, 2.716773147663155, 1.0358351113566275, -3.9508775340237783], [-1.050614389563768, -1.8794687512619455, 2.7995593778191408, 0.9489567367488879, -3.710640770912975], [-1.343452657694219, -2.065090254451558, 2.583644200725674, 1.2123933661956998, -4.182239961736196], [-1.243678212644668, -2.0120141438758905, 2.3551555341138313, 1.2981695719433626, -4.04304708984468], [-0.9812345662017722, -1.7069784154710121, 1.915751930739109, 0.4530927000668457, -4.130302724902566], [-0.9576113985456954, -1.416311071757275, 2.02988378718746, 0.23927023707467238, -3.96757103359573], [-0.6452176424129398, -1.6879485042367828, 2.0775275929370083, -0.03885326382089069, -4.035155684650762], [-1.444784108285159, -1.8692521886097557, 1.1592052708490055, -0.2709970062849318, -4.007558188200324], [-1.013899226744661, -2.0147517306425105, 0.7814762678532337, -0.5323320702088982, -4.501412143449199], [-0.6974825523329624, -1.9236149691390958, 1.0776355750106419, -0.3945730835026661, -3.844145008756431], [-1.1386034934209537, -2.132247107452325, 1.043861818459524, -0.16632634544070515, -3.928885616996411], [-1.3178205032325938, -1.953216421457088, 1.3237324692183365, -0.533942339508672, -4.16760865795054], [-1.1169850757783066, -1.6653003773401795, 1.8941313318311153, -0.3342717106577028, -4.236742477329638], [-1.2491186203137432, -2.0732116575241517, 1.2559236567015692, -0.34481636135728533, -3.784580983786808], [-1.3520361276348474, -1.9088699252672678, 0.9432974195308444, -0.4909957197155841, -4.291410479113455], [-1.2405212238566214, -1.9097240647515228, 0.9075007768444205, -0.4947374705695236, -4.317399200830789], [-1.14661428956088, -1.697148469142928, 1.00773789230514, -0.612742699152019, -4.418497483586314], [-0.9142296881835525, -1.1569356785382012, 0.9061213397345059, -0.4344477610375698, -3.95182777388547], [-0.4456455596155964, -1.6665071355247671, 2.0205200289894907, -0.30360019509724306, -3.68465413547101], [-1.3717661007183044, -1.8001142658159117, 1.6021317461242481, -0.1606172733168944, -3.831350705426149], [-1.0441082818466993, -1.8170650877701542, 1.6877352684274278, -0.1697643334188774, -4.119484140193921], [-1.0292629086685592, -1.8295697685090437, 1.0898583067354568, -0.6879808475142827, -4.013559158623447], [-1.2697448396842328, -1.8993824590364001, 1.1389442614231897, -0.5418591575856471, -4.261978225906525], [-1.2057042988722915, -1.715521626983825, 0.9680140604832114, -0.5868277991796954, -4.016763478791975], [-0.8129749043951433, -1.8388593120353547, 0.9097517968787947, -0.5074080487153505, -4.040305641086355], [-1.0816979360465013, -1.712374233060914, 0.7597057327672906, -0.4450845443915957, -3.8578802159087076], [-0.6479024254804473, -1.5493712066922585, 0.9832943532943721, -0.2875910366316929, -4.226884824914559], [-1.2147380952045643, -2.1630841845294877, 1.8832094586537194, -0.670547009675052, -4.438882225388321], [-1.1345832059549716, -2.042191131139676, 1.6981984077724284, -0.5241530648968908, -4.1498189908089325], [-1.0258219947290572, -1.6235702662999925, 1.582043638719026, -0.4472572676066847, -3.9723218621676724], [-0.958534772629599, -1.648321181303586, 1.6128979713688316, -0.6758003433288023, -4.277745117031483], [-1.1101647807805128, -2.017967423713423, 0.8363434565197462, -0.32100269321102504, -4.2055717683610325], [-1.0220188814824493, -1.8966435745565595, 1.1405359266634185, -0.171688654916959, -4.058784177404099], [-1.1655363188078567, -1.949857399773045, 2.185274710023593, -0.7252403975414546, -4.021178770577369], [-1.1920404592982827, -2.2023298273069916, 1.2910381749091586, -0.14977198639928022, -4.050194474500927], [-1.2635428922325145, -1.7908392859447533, 2.1349164459302794, -0.35711949703902846, -4.1460619290986624], [-1.2211816286859043, -1.9581914096338695, 1.0549619568200757, -0.4735423906442355, -4.375581039590129], [-1.3613473270829075, -1.8014380734943807, 1.580929971981406, -0.0887553069682055, -4.267689355009475]], NamedTuple[(n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = -13.725989095532634, hamiltonian_energy = 14.354653899874746, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 4.403634007142349e9, tree_depth = 0, numerical_error = true, step_size = 0.8, nom_step_size = 0.8, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = -13.725989095532634, hamiltonian_energy = 20.43126627006906, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 4.5312405662836385e8, tree_depth = 0, numerical_error = true, step_size = 1.8680518327273068, nom_step_size = 1.8680518327273068, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 13.874511614756406, hamiltonian_energy = 4.51288530695596, hamiltonian_energy_error = -11.528555197704181, max_hamiltonian_energy_error = -11.528555197704181, tree_depth = 2, numerical_error = false, step_size = 0.18418867766839725, nom_step_size = 0.18418867766839725, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 25.705027151933752, hamiltonian_energy = -16.7359625448238, hamiltonian_energy_error = -4.11008965379674, max_hamiltonian_energy_error = -4.411844849772164, tree_depth = 2, numerical_error = false, step_size = 0.19183312443074416, nom_step_size = 0.19183312443074416, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 1.0, log_density = 26.1336043439439, hamiltonian_energy = -25.462511576354956, hamiltonian_energy_error = -0.08591709023055216, max_hamiltonian_energy_error = -0.08591709023055216, tree_depth = 1, numerical_error = false, step_size = 0.2594659271583637, nom_step_size = 0.2594659271583637, is_adapt = true), (n_steps = 5, is_accept = true, acceptance_rate = 0.12005323991433861, log_density = 24.949246809360524, hamiltonian_energy = -22.428148885083555, hamiltonian_energy_error = 0.6481659789213943, max_hamiltonian_energy_error = 1698.1162647734902, tree_depth = 2, numerical_error = true, step_size = 0.4057644629193173, nom_step_size = 0.4057644629193173, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9999257767185713, log_density = 25.6729640819216, hamiltonian_energy = -22.449738614277933, hamiltonian_energy_error = -0.008220354678357467, max_hamiltonian_energy_error = -0.030468725948665565, tree_depth = 4, numerical_error = false, step_size = 0.046685394964310685, nom_step_size = 0.046685394964310685, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9964715450292344, log_density = 25.430258784414363, hamiltonian_energy = -24.121352344188544, hamiltonian_energy_error = -0.01721903049013207, max_hamiltonian_energy_error = -0.06440776772423007, tree_depth = 4, numerical_error = false, step_size = 0.07987089966320769, nom_step_size = 0.07987089966320769, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9678062811899935, log_density = 24.375952367250676, hamiltonian_energy = -23.019466301550835, hamiltonian_energy_error = 0.03603849377606849, max_hamiltonian_energy_error = -0.13758025192721846, tree_depth = 3, numerical_error = false, step_size = 0.14165437352690619, nom_step_size = 0.14165437352690619, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.2638010172568263, log_density = 25.63672959503519, hamiltonian_energy = -21.45198266487521, hamiltonian_energy_error = 0.33982692666862135, max_hamiltonian_energy_error = 3.7167668122654334, tree_depth = 2, numerical_error = false, step_size = 0.23599187513458367, nom_step_size = 0.23599187513458367, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.987451330083351, log_density = 24.574794044281294, hamiltonian_energy = -23.666840812502695, hamiltonian_energy_error = 0.01855124181781065, max_hamiltonian_energy_error = 0.023618761420312495, tree_depth = 4, numerical_error = false, step_size = 0.04309026475292854, nom_step_size = 0.04309026475292854, is_adapt = true), (n_steps = 23, is_accept = true, acceptance_rate = 0.9814623686505586, log_density = 24.336585391199627, hamiltonian_energy = -22.00903838366346, hamiltonian_energy_error = -3.4059810463560325e-5, max_hamiltonian_energy_error = -0.14578856924834582, tree_depth = 4, numerical_error = false, step_size = 0.07836081076220969, nom_step_size = 0.07836081076220969, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.8221210084138763, log_density = 25.197198136246506, hamiltonian_energy = -21.413090979371784, hamiltonian_energy_error = -0.1206307143595744, max_hamiltonian_energy_error = 0.38278522298736917, tree_depth = 2, numerical_error = false, step_size = 0.14071057168899445, nom_step_size = 0.14071057168899445, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9231780323440172, log_density = 24.19121537220837, hamiltonian_energy = -21.591863722404774, hamiltonian_energy_error = -0.015358795671847503, max_hamiltonian_energy_error = 0.15950153277406187, tree_depth = 3, numerical_error = false, step_size = 0.1535339458478538, nom_step_size = 0.1535339458478538, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.19386528640281037, log_density = 24.105431682546307, hamiltonian_energy = -19.164488850541186, hamiltonian_energy_error = 1.3742885950855595, max_hamiltonian_energy_error = 2.313684708736588, tree_depth = 3, numerical_error = false, step_size = 0.2303735544883191, nom_step_size = 0.2303735544883191, is_adapt = true), (n_steps = 63, is_accept = true, acceptance_rate = 0.9981499833198515, log_density = 25.164374409919184, hamiltonian_energy = -20.045921422625018, hamiltonian_energy_error = -0.012686646169321136, max_hamiltonian_energy_error = -0.017952483003263353, tree_depth = 5, numerical_error = false, step_size = 0.036018456348022254, nom_step_size = 0.036018456348022254, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9802841655702179, log_density = 25.120695332315492, hamiltonian_energy = -23.59768572974991, hamiltonian_energy_error = 0.026018853441875933, max_hamiltonian_energy_error = 0.05116271922443971, tree_depth = 3, numerical_error = false, step_size = 0.0687965323415785, nom_step_size = 0.0687965323415785, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9700874770806694, log_density = 26.450586428408393, hamiltonian_energy = -23.175295658800085, hamiltonian_energy_error = -0.12968328263027118, max_hamiltonian_energy_error = 0.15718183707692646, tree_depth = 3, numerical_error = false, step_size = 0.12358951747944533, nom_step_size = 0.12358951747944533, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.8131524682696395, log_density = 25.941408962618603, hamiltonian_energy = -23.819970915263482, hamiltonian_energy_error = 0.27575463417023016, max_hamiltonian_energy_error = 0.3323408035117872, tree_depth = 3, numerical_error = false, step_size = 0.2137403697477932, nom_step_size = 0.2137403697477932, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9055709475656, log_density = 26.558570599595825, hamiltonian_energy = -25.03617690410264, hamiltonian_energy_error = -0.26765733144005566, max_hamiltonian_energy_error = 0.5912888937461673, tree_depth = 3, numerical_error = false, step_size = 0.22891973087653228, nom_step_size = 0.22891973087653228, is_adapt = true), (n_steps = 23, is_accept = true, acceptance_rate = 0.8173354560818005, log_density = 26.20865359583469, hamiltonian_energy = -24.171721709544617, hamiltonian_energy_error = 0.14706468740113365, max_hamiltonian_energy_error = 0.34644942446100657, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9921701175663119, log_density = 26.42914080733713, hamiltonian_energy = -25.686171837556902, hamiltonian_energy_error = -0.029837019622945604, max_hamiltonian_energy_error = -0.12301021383271404, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9718353139477127, log_density = 25.770299333943903, hamiltonian_energy = -23.351437628494956, hamiltonian_energy_error = 0.05423787117662826, max_hamiltonian_energy_error = -0.083847775027305, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8938397165734484, log_density = 24.46506366604743, hamiltonian_energy = -23.5216445612697, hamiltonian_energy_error = 0.17860007247318777, max_hamiltonian_energy_error = 0.17860007247318777, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9831911287309338, log_density = 23.816120288304347, hamiltonian_energy = -22.050873885128457, hamiltonian_energy_error = -0.2626699083634634, max_hamiltonian_energy_error = -0.38690450221910666, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9283117587747627, log_density = 21.574478945195764, hamiltonian_energy = -20.259238631580324, hamiltonian_energy_error = 0.07689021748517888, max_hamiltonian_energy_error = 0.10641946087107712, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7634244900472951, log_density = 25.13949443395735, hamiltonian_energy = -19.379180906792186, hamiltonian_energy_error = -0.26597551964347943, max_hamiltonian_energy_error = 0.6102253505633897, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9256703031246152, log_density = 24.28390615757167, hamiltonian_energy = -21.013946660967047, hamiltonian_energy_error = -0.01841204104832528, max_hamiltonian_energy_error = 0.21702705594728755, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9723987668631282, log_density = 23.06276146014059, hamiltonian_energy = -20.44090627827019, hamiltonian_energy_error = 0.004305426587041694, max_hamiltonian_energy_error = -0.25989260278442217, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 23.18049551511898, hamiltonian_energy = -21.36938903037386, hamiltonian_energy_error = -0.10045354493705005, max_hamiltonian_energy_error = -0.22757009024203256, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7508137108676315, log_density = 26.229494474399473, hamiltonian_energy = -20.853645341500822, hamiltonian_energy_error = -0.26082317957724754, max_hamiltonian_energy_error = 0.49126291707273495, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9363967488787529, log_density = 25.775749179703617, hamiltonian_energy = -24.542998573021475, hamiltonian_energy_error = 0.13265447397132135, max_hamiltonian_energy_error = 0.13265447397132135, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9960189226628002, log_density = 25.688615402220098, hamiltonian_energy = -23.45500370664342, hamiltonian_energy_error = -0.03125148178837733, max_hamiltonian_energy_error = -0.13272542423381495, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.987860743809055, log_density = 26.515578020350127, hamiltonian_energy = -24.25297959161483, hamiltonian_energy_error = -0.12334811785123634, max_hamiltonian_energy_error = -0.13541946129387128, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8849039935645892, log_density = 24.82527193219191, hamiltonian_energy = -22.58325040068273, hamiltonian_energy_error = 0.07006524556845051, max_hamiltonian_energy_error = 0.29838384075657487, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9842099176289528, log_density = 26.291891875544838, hamiltonian_energy = -23.19090554531669, hamiltonian_energy_error = -0.08322215213940609, max_hamiltonian_energy_error = -0.09259174585796615, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9626971330005075, log_density = 26.274131213675, hamiltonian_energy = -25.089262745471725, hamiltonian_energy_error = 0.03654490245288855, max_hamiltonian_energy_error = 0.0789319197865943, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8922339719942887, log_density = 25.91132598643732, hamiltonian_energy = -24.196920512923462, hamiltonian_energy_error = 0.051675399534836686, max_hamiltonian_energy_error = 0.25704804709231865, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9192087065718273, log_density = 24.734603100485927, hamiltonian_energy = -23.446790749627876, hamiltonian_energy_error = 0.03065935403465403, max_hamiltonian_energy_error = 0.24139527261665705, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9706957282776122, log_density = 25.307805367178894, hamiltonian_energy = -23.599677720312656, hamiltonian_energy_error = 0.0861319690094291, max_hamiltonian_energy_error = -0.08823845944775854, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9910848075402947, log_density = 26.82123736092235, hamiltonian_energy = -23.36039804429927, hamiltonian_energy_error = -0.208844853946065, max_hamiltonian_energy_error = -0.208844853946065, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9871172054426083, log_density = 27.42848919215521, hamiltonian_energy = -25.970564966065655, hamiltonian_energy_error = -0.036600886135627064, max_hamiltonian_energy_error = 0.051973352748191814, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6989824847802375, log_density = 24.50780048835263, hamiltonian_energy = -23.72647763053716, hamiltonian_energy_error = 0.5256626176216415, max_hamiltonian_energy_error = 0.5256626176216415, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.3688535317330894, log_density = 20.1372945692668, hamiltonian_energy = -18.6463791764103, hamiltonian_energy_error = 1.3875237325472263, max_hamiltonian_energy_error = 1.3875237325472263, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 24.792107997308808, hamiltonian_energy = -19.375582008989483, hamiltonian_energy_error = -0.7817067461099612, max_hamiltonian_energy_error = -0.7817067461099612, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9944838445463743, log_density = 24.12069050522553, hamiltonian_energy = -22.660759411775302, hamiltonian_energy_error = -0.06500091512896233, max_hamiltonian_energy_error = -0.3260586139592192, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.940546540402354, log_density = 23.209690731494284, hamiltonian_energy = -20.52292497423169, hamiltonian_energy_error = -0.028548721169386226, max_hamiltonian_energy_error = 0.19756108005426753, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9637548225415618, log_density = 24.5436086804705, hamiltonian_energy = -19.547746452949927, hamiltonian_energy_error = 0.07838901697826017, max_hamiltonian_energy_error = -0.3265032567959665, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9809781075506815, log_density = 24.553276050697846, hamiltonian_energy = -23.322790757706933, hamiltonian_energy_error = 0.044773988631714445, max_hamiltonian_energy_error = -0.19893947254329802, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9082509628618943, log_density = 20.842550863216793, hamiltonian_energy = -19.267031942910858, hamiltonian_energy_error = 0.1474224219311111, max_hamiltonian_energy_error = 0.22777633100036, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9537761875921957, log_density = 20.460473361148463, hamiltonian_energy = -18.20381692563463, hamiltonian_energy_error = -0.02653613073022143, max_hamiltonian_energy_error = 0.21401394630821358, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9596127018183075, log_density = 22.62698566146299, hamiltonian_energy = -16.48805353528855, hamiltonian_energy_error = -0.27627937576458805, max_hamiltonian_energy_error = -0.3330428447300342, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.4992678720304969, log_density = 22.531695675424302, hamiltonian_energy = -18.234684829181628, hamiltonian_energy_error = 0.955994018789017, max_hamiltonian_energy_error = 1.3746895223257205, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9632805351192569, log_density = 23.75731526837474, hamiltonian_energy = -19.173748161791792, hamiltonian_energy_error = -0.1401449107672441, max_hamiltonian_energy_error = -0.3398416476511805, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 25.58746654136059, hamiltonian_energy = -23.068394937428486, hamiltonian_energy_error = -0.11776676029769106, max_hamiltonian_energy_error = -0.38822238611379234, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.992752643798147, log_density = 25.306772625358963, hamiltonian_energy = -24.02019407375099, hamiltonian_energy_error = 0.0037613820866404524, max_hamiltonian_energy_error = -0.1861825162127353, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9947967629990596, log_density = 25.432004590185606, hamiltonian_energy = -23.36095299275727, hamiltonian_energy_error = -0.014574814767414068, max_hamiltonian_energy_error = -0.13600612595961437, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9802563413493127, log_density = 26.67861884203801, hamiltonian_energy = -23.80576158777556, hamiltonian_energy_error = -0.2595255671590522, max_hamiltonian_energy_error = -0.2595255671590522, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9350544318198372, log_density = 27.150756615531837, hamiltonian_energy = -25.820876890419328, hamiltonian_energy_error = 0.0067565694898164, max_hamiltonian_energy_error = 0.13334412956829667, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9326383473062811, log_density = 26.448964099557358, hamiltonian_energy = -23.97405689400445, hamiltonian_energy_error = -0.01732789523506284, max_hamiltonian_energy_error = 0.13205398691895098, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8921154418844237, log_density = 24.621664855282173, hamiltonian_energy = -24.254789079612113, hamiltonian_energy_error = 0.2054528156958355, max_hamiltonian_energy_error = 0.2054528156958355, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9768449715946314, log_density = 25.12753456172655, hamiltonian_energy = -23.554715108009837, hamiltonian_energy_error = -0.11980143526836073, max_hamiltonian_energy_error = -0.11980143526836073, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9903830646990964, log_density = 25.8317062468073, hamiltonian_energy = -23.519183770923025, hamiltonian_energy_error = -0.06402387815141708, max_hamiltonian_energy_error = -0.08950328649334338, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.936432962760744, log_density = 25.37421360178171, hamiltonian_energy = -23.614049846855014, hamiltonian_energy_error = 0.04510577865989518, max_hamiltonian_energy_error = 0.20172772687021734, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9449642680446111, log_density = 24.959870782569713, hamiltonian_energy = -23.72580579947267, hamiltonian_energy_error = 0.12529856264764305, max_hamiltonian_energy_error = 0.19747650597913946, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8571597263220908, log_density = 22.306921873714906, hamiltonian_energy = -20.119943947560984, hamiltonian_energy_error = -0.0007182027629681897, max_hamiltonian_energy_error = 0.4478043414890607, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9162006421734764, log_density = 19.547795229624953, hamiltonian_energy = -17.820852855224263, hamiltonian_energy_error = 0.2955252943447526, max_hamiltonian_energy_error = 0.2955252943447526, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 18.903383474112808, hamiltonian_energy = -17.901473004168373, hamiltonian_energy_error = -0.13126075943213777, max_hamiltonian_energy_error = -0.5072174243930476, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8533252856162884, log_density = 19.798090320143757, hamiltonian_energy = -15.110354152503088, hamiltonian_energy_error = 0.27198690974518236, max_hamiltonian_energy_error = 0.6130161986594338, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.980163352839725, log_density = 21.268041167604935, hamiltonian_energy = -15.982977406967208, hamiltonian_energy_error = -0.07949023755503504, max_hamiltonian_energy_error = -0.4438093982326414, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.2419987882485179, log_density = 22.36943404392694, hamiltonian_energy = -15.787444991949522, hamiltonian_energy_error = 1.0706819865827537, max_hamiltonian_energy_error = 2.118269750399925, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8506339928922063, log_density = 24.769117517078378, hamiltonian_energy = -19.917219053824706, hamiltonian_energy_error = -0.2302706069510343, max_hamiltonian_energy_error = 0.5943848233345221, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5934109473399914, log_density = 22.920160637870826, hamiltonian_energy = -18.756747736517426, hamiltonian_energy_error = 0.5710627370438814, max_hamiltonian_energy_error = 1.0994001549670074, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8640946712629746, log_density = 20.0956063461498, hamiltonian_energy = -18.329987341291172, hamiltonian_energy_error = 0.32452220703707013, max_hamiltonian_energy_error = -0.4276198851793005, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9358746816177012, log_density = 22.01235703807197, hamiltonian_energy = -17.021710672327362, hamiltonian_energy_error = -0.11186024331931321, max_hamiltonian_energy_error = -1.4092518154326328, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9785970924679138, log_density = 25.450804442895553, hamiltonian_energy = -20.220430156520585, hamiltonian_energy_error = -0.8463147584824995, max_hamiltonian_energy_error = -0.9165630886480969, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9795884982650883, log_density = 23.876866858338587, hamiltonian_energy = -22.206614485447577, hamiltonian_energy_error = 0.08372296084182196, max_hamiltonian_energy_error = -0.2428788088817555, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9873887231041787, log_density = 24.114696519210348, hamiltonian_energy = -22.54577348168301, hamiltonian_energy_error = -0.022322011039829448, max_hamiltonian_energy_error = -0.33863751038845535, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9634149013002159, log_density = 24.973178717625366, hamiltonian_energy = -21.27840909068593, hamiltonian_energy_error = -0.09870465536359418, max_hamiltonian_energy_error = 0.25861477145468115, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.978857321786708, log_density = 24.688101323124066, hamiltonian_energy = -22.2280131099972, hamiltonian_energy_error = -0.017380950537795314, max_hamiltonian_energy_error = -0.27830987244553995, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9727479770217158, log_density = 23.61061090773515, hamiltonian_energy = -23.055472792313388, hamiltonian_energy_error = 0.08191905605965744, max_hamiltonian_energy_error = -0.13742226924465228, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 25.143501716209272, hamiltonian_energy = -22.010937693046646, hamiltonian_energy_error = -0.024328702719696338, max_hamiltonian_energy_error = -0.40158718705224317, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.978598083060328, log_density = 26.227509808636942, hamiltonian_energy = -22.991928721664895, hamiltonian_energy_error = -0.04587954014683149, max_hamiltonian_energy_error = -0.21980552670057563, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9919843765489766, log_density = 25.042861086995444, hamiltonian_energy = -22.469444644752265, hamiltonian_energy_error = -0.02446698600467556, max_hamiltonian_energy_error = 0.06602008016373873, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6569193376070592, log_density = 23.211244090110036, hamiltonian_energy = -19.26139020945501, hamiltonian_energy_error = 0.49816003015699195, max_hamiltonian_energy_error = 0.7904016833124139, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9510659564552632, log_density = 25.615506212277943, hamiltonian_energy = -22.384918665703253, hamiltonian_energy_error = -0.4147957302437426, max_hamiltonian_energy_error = -0.4147957302437426, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8557713022174511, log_density = 27.239985133925884, hamiltonian_energy = -23.78832583315926, hamiltonian_energy_error = -0.14148571607754334, max_hamiltonian_energy_error = 0.36833070924606304, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9159762066741445, log_density = 26.31093814495475, hamiltonian_energy = -25.733894995194696, hamiltonian_energy_error = 0.10193218241162683, max_hamiltonian_energy_error = 0.20147689681937564, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9509348587661878, log_density = 25.27257974598149, hamiltonian_energy = -24.250440172923398, hamiltonian_energy_error = 0.07573523023646445, max_hamiltonian_energy_error = 0.19365462965210867, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9705561201015703, log_density = 25.41323627797598, hamiltonian_energy = -23.325861235938973, hamiltonian_energy_error = -0.17568241594121048, max_hamiltonian_energy_error = -0.17568241594121048, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8185727198741365, log_density = 24.810151231728742, hamiltonian_energy = -20.877989966956125, hamiltonian_energy_error = 0.09333819439416757, max_hamiltonian_energy_error = 0.38553379830711165, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8637674778036175, log_density = 22.5997599210309, hamiltonian_energy = -21.668907181036438, hamiltonian_energy_error = 0.26685408149180745, max_hamiltonian_energy_error = 0.29328044636257644, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9936581989807903, log_density = 24.027644072761685, hamiltonian_energy = -21.470334359423948, hamiltonian_energy_error = -0.486765234079094, max_hamiltonian_energy_error = -0.5598766485930504, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9236852552105377, log_density = 22.407408089149072, hamiltonian_energy = -20.98509502730442, hamiltonian_energy_error = 0.13376359355213907, max_hamiltonian_energy_error = 0.1988893702280201, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9315660663084405, log_density = 25.75310708379463, hamiltonian_energy = -20.911637488676032, hamiltonian_energy_error = -0.0657669516720425, max_hamiltonian_energy_error = 0.22871505704943118, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9895259632335168, log_density = 25.643525795831984, hamiltonian_energy = -24.39350977011342, hamiltonian_energy_error = -0.07466104921127581, max_hamiltonian_energy_error = -0.10718483380033916, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7909144246543096, log_density = 24.35005734695495, hamiltonian_energy = -20.900963601550398, hamiltonian_energy_error = 0.32395819600217735, max_hamiltonian_energy_error = 0.32395819600217735, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9780861703560175, log_density = 22.818054106830886, hamiltonian_energy = -20.845458860335885, hamiltonian_energy_error = -0.012869731892820369, max_hamiltonian_energy_error = -0.3916085730909806, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9454153928500258, log_density = 24.919373908564467, hamiltonian_energy = -21.91934488280896, hamiltonian_energy_error = -0.006800581781355675, max_hamiltonian_energy_error = 0.13659841859696442, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9896980723971609, log_density = 23.47774182081954, hamiltonian_energy = -21.031339311792888, hamiltonian_energy_error = -0.016020451265024604, max_hamiltonian_energy_error = -0.2231246482710958, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8618458877850603, log_density = 26.443228487852096, hamiltonian_energy = -19.880392126299917, hamiltonian_energy_error = -0.4553906676032362, max_hamiltonian_energy_error = 0.481039742331685, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.7589640437563222, log_density = 23.33665730962128, hamiltonian_energy = -21.46236764270734, hamiltonian_energy_error = 0.32246737070625286, max_hamiltonian_energy_error = 0.401839321495288, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7108678387507571, log_density = 22.15173935660643, hamiltonian_energy = -19.317099318454485, hamiltonian_energy_error = 0.38691590896781847, max_hamiltonian_energy_error = 0.6304206432398978, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9895190491105585, log_density = 24.34455586145473, hamiltonian_energy = -20.84534133960723, hamiltonian_energy_error = -0.21641027770079546, max_hamiltonian_energy_error = -0.5093624858745436, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9700122335987855, log_density = 25.643532268899747, hamiltonian_energy = -22.470094646466887, hamiltonian_energy_error = -0.20438878134958216, max_hamiltonian_energy_error = -0.3840954100455676, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9941215149281988, log_density = 26.786993007572747, hamiltonian_energy = -24.913750324391778, hamiltonian_energy_error = -0.09742536152490544, max_hamiltonian_energy_error = -0.14231799032892667, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9923778457660839, log_density = 27.095618056687055, hamiltonian_energy = -26.137331098840217, hamiltonian_energy_error = -0.022708738794943173, max_hamiltonian_energy_error = 0.03585921708633677, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7616992041935712, log_density = 24.487125693596532, hamiltonian_energy = -23.968566049069466, hamiltonian_energy_error = 0.5353072238295447, max_hamiltonian_energy_error = 0.5353072238295447, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9974893669324509, log_density = 25.158538565523948, hamiltonian_energy = -23.998764374509648, hamiltonian_energy_error = -0.023183912386834038, max_hamiltonian_energy_error = -0.5161354941886138, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9952324299618354, log_density = 24.41012573306986, hamiltonian_energy = -22.556877645131806, hamiltonian_energy_error = -0.2964014294638204, max_hamiltonian_energy_error = -0.3836575846311838, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9455050567761579, log_density = 25.266698886673204, hamiltonian_energy = -23.083107217749344, hamiltonian_energy_error = 0.0006261941242300395, max_hamiltonian_energy_error = -0.161725711930913, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8897196565568505, log_density = 25.753519325779507, hamiltonian_energy = -24.164916896561635, hamiltonian_energy_error = 0.11528275934981025, max_hamiltonian_energy_error = 0.25610249453299616, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9865758863489625, log_density = 25.75013796330574, hamiltonian_energy = -24.276518455933218, hamiltonian_energy_error = -0.09891304290674441, max_hamiltonian_energy_error = -0.15351364256184397, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9931207286542628, log_density = 26.22282606616212, hamiltonian_energy = -24.899905991406392, hamiltonian_energy_error = -0.058409284749078694, max_hamiltonian_energy_error = -0.058409284749078694, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9502232270190026, log_density = 24.661142229457074, hamiltonian_energy = -24.094210311261516, hamiltonian_energy_error = 0.11656179310868353, max_hamiltonian_energy_error = 0.11656179310868353, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9854460269182136, log_density = 25.678960408344288, hamiltonian_energy = -23.350869039223, hamiltonian_energy_error = -0.08987021749886281, max_hamiltonian_energy_error = -0.15695520770513127, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9686234756059171, log_density = 25.55757106859356, hamiltonian_energy = -24.28579384415624, hamiltonian_energy_error = 0.0802505763265664, max_hamiltonian_energy_error = -0.13762020697084054, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9319666062530126, log_density = 24.770706033552738, hamiltonian_energy = -23.433353272488816, hamiltonian_energy_error = 0.13749516806087314, max_hamiltonian_energy_error = 0.2041764191324411, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9961724665235328, log_density = 24.953630378079893, hamiltonian_energy = -23.69069808075067, hamiltonian_energy_error = -0.018583079350435128, max_hamiltonian_energy_error = -0.31315088063277585, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9985354742677707, log_density = 26.417476326726995, hamiltonian_energy = -24.28207302144625, hamiltonian_energy_error = -0.06449323057579193, max_hamiltonian_energy_error = -0.23138199553572747, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8878827118110098, log_density = 24.383237834869053, hamiltonian_energy = -23.247375021418737, hamiltonian_energy_error = 0.17248389338480052, max_hamiltonian_energy_error = 0.3320744678048335, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9559546324722449, log_density = 25.44997355639746, hamiltonian_energy = -23.128867565270713, hamiltonian_energy_error = -0.07638562711110097, max_hamiltonian_energy_error = -0.22419647700359135, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9933277308115606, log_density = 25.395148705581946, hamiltonian_energy = -24.486886496388465, hamiltonian_energy_error = -0.009738938413562437, max_hamiltonian_energy_error = -0.2871199059859286, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9991722667371067, log_density = 25.640214853423476, hamiltonian_energy = -24.50795511966768, hamiltonian_energy_error = -0.06758494049052288, max_hamiltonian_energy_error = -0.24852356000308617, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8793426938048166, log_density = 26.72021816377982, hamiltonian_energy = -23.10988943327794, hamiltonian_energy_error = -0.13228293498391608, max_hamiltonian_energy_error = 0.31920920909954376, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8340363422502279, log_density = 23.959533443319707, hamiltonian_energy = -23.661995211560267, hamiltonian_energy_error = 0.3132283513306895, max_hamiltonian_energy_error = 0.3132283513306895, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8900819051949131, log_density = 23.050420365290954, hamiltonian_energy = -21.53912873460122, hamiltonian_energy_error = 0.061983088736649705, max_hamiltonian_energy_error = 0.2623118267756901, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8911176504689556, log_density = 26.697402791117568, hamiltonian_energy = -19.47189993017027, hamiltonian_energy_error = -0.4699020379017931, max_hamiltonian_energy_error = 0.4888098282237152, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.4322944107700704, log_density = 26.344471625448044, hamiltonian_energy = -21.435359594155216, hamiltonian_energy_error = 0.5610425196683657, max_hamiltonian_energy_error = 1.357293259398812, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8591055717324796, log_density = 25.23017791805865, hamiltonian_energy = -24.20193010440852, hamiltonian_energy_error = 0.12628139574314545, max_hamiltonian_energy_error = 0.40155742628920166, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8274866856063094, log_density = 25.636916296562532, hamiltonian_energy = -22.014722043283424, hamiltonian_energy_error = 0.13143615704743183, max_hamiltonian_energy_error = 0.5802076774430169, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.966099577546447, log_density = 25.64822983592852, hamiltonian_energy = -24.659581248995757, hamiltonian_energy_error = 0.11053163938752775, max_hamiltonian_energy_error = -0.32978383816363177, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7984587150139149, log_density = 22.65354082105726, hamiltonian_energy = -20.14725545114586, hamiltonian_energy_error = 0.016476002348490226, max_hamiltonian_energy_error = 0.6650821804156735, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 22.032181052683185, hamiltonian_energy = -21.299810135317333, hamiltonian_energy_error = -0.08445111332486022, max_hamiltonian_energy_error = -0.30411902663473356, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9937751010315867, log_density = 22.8779731154444, hamiltonian_energy = -21.220259320210246, hamiltonian_energy_error = -0.13367711380014313, max_hamiltonian_energy_error = -0.38849821431530174, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.969929251982572, log_density = 24.612748173725286, hamiltonian_energy = -20.161686700929245, hamiltonian_energy_error = 0.0027505443351891756, max_hamiltonian_energy_error = -0.39827780406984914, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.982932780433883, log_density = 26.147282951354033, hamiltonian_energy = -23.293555793251404, hamiltonian_energy_error = -0.19136477311351285, max_hamiltonian_energy_error = -0.28358432121993005, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9884548816806297, log_density = 25.819094135657437, hamiltonian_energy = -24.671868804983504, hamiltonian_energy_error = 0.001349780781609411, max_hamiltonian_energy_error = 0.08280238324257994, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9207331447733297, log_density = 24.84005820278881, hamiltonian_energy = -23.40397362633935, hamiltonian_energy_error = 0.09493551142974965, max_hamiltonian_energy_error = 0.1924241166733438, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9969035647980596, log_density = 25.504910826456303, hamiltonian_energy = -24.66081751508642, hamiltonian_energy_error = -0.04715329887903508, max_hamiltonian_energy_error = -0.34173291449540244, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9432491666899991, log_density = 24.115542955409207, hamiltonian_energy = -20.258282773725437, hamiltonian_energy_error = -0.07900297190746741, max_hamiltonian_energy_error = 0.19249010206394246, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 24.800879304628488, hamiltonian_energy = -22.132877025865728, hamiltonian_energy_error = -0.2574138535288206, max_hamiltonian_energy_error = -0.3078778026308697, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9745831632072605, log_density = 25.4696161932425, hamiltonian_energy = -23.166650998973562, hamiltonian_energy_error = -0.056032413634106604, max_hamiltonian_energy_error = -0.3053607386809105, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7392419885400037, log_density = 22.801406796384835, hamiltonian_energy = -18.484596964559984, hamiltonian_energy_error = 0.13966482068306263, max_hamiltonian_energy_error = 0.5405533212771196, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 25.680792900485585, hamiltonian_energy = -22.34611369984047, hamiltonian_energy_error = -0.2124960451588862, max_hamiltonian_energy_error = -0.2124960451588862, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 27.15985268196401, hamiltonian_energy = -25.372955568509077, hamiltonian_energy_error = -0.08608439213114139, max_hamiltonian_energy_error = -0.09369958713438109, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5819601791315375, log_density = 25.377463609141845, hamiltonian_energy = -21.268182141717638, hamiltonian_energy_error = 0.1375916924672964, max_hamiltonian_energy_error = 1.045970702924933, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6829282275981016, log_density = 25.568609994963015, hamiltonian_energy = -20.954102424063688, hamiltonian_energy_error = 0.23324253819177443, max_hamiltonian_energy_error = 0.8591973012357457, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9945304770305209, log_density = 26.191834685153502, hamiltonian_energy = -24.856145930602256, hamiltonian_energy_error = -0.12911228726572688, max_hamiltonian_energy_error = -0.3540583675377711, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8968914566549938, log_density = 26.390878735368393, hamiltonian_energy = -23.332136696478557, hamiltonian_energy_error = 0.03161734836777086, max_hamiltonian_energy_error = 0.47223758055156395, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9764923463378511, log_density = 26.701588444837064, hamiltonian_energy = -25.257947686345602, hamiltonian_energy_error = -0.06275094633610934, max_hamiltonian_energy_error = -0.15872295572535222, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9993266401398885, log_density = 26.986173289605517, hamiltonian_energy = -26.338297549829985, hamiltonian_energy_error = -0.04697407251113361, max_hamiltonian_energy_error = -0.07919812107315494, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9338342281885087, log_density = 26.38911316549933, hamiltonian_energy = -24.579048899345846, hamiltonian_energy_error = 0.08951685551354771, max_hamiltonian_energy_error = 0.1730532174041386, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9454043247039424, log_density = 27.173941301194194, hamiltonian_energy = -24.445880376119142, hamiltonian_energy_error = -0.21320658260234993, max_hamiltonian_energy_error = -0.21479238615490814, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7843003515821422, log_density = 24.9529449255053, hamiltonian_energy = -24.071688385929217, hamiltonian_energy_error = 0.3791253335948994, max_hamiltonian_energy_error = 0.3791253335948994, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9233708401253858, log_density = 26.615446380402165, hamiltonian_energy = -23.50650351787623, hamiltonian_energy_error = -0.20665456597505738, max_hamiltonian_energy_error = 0.26121864445176257, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9765760455769301, log_density = 26.681101464159827, hamiltonian_energy = -24.59491116105207, hamiltonian_energy_error = -0.09048833155687319, max_hamiltonian_energy_error = -0.13537385582229433, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9027004018648288, log_density = 26.877749589009166, hamiltonian_energy = -25.309543764795595, hamiltonian_energy_error = -0.021560957899556144, max_hamiltonian_energy_error = 0.16537640085047656, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8894827140693365, log_density = 24.69542285312094, hamiltonian_energy = -24.216383688454346, hamiltonian_energy_error = 0.18810756235748372, max_hamiltonian_energy_error = 0.18810756235748372, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9777751582382938, log_density = 26.202342910756258, hamiltonian_energy = -23.114253800076764, hamiltonian_energy_error = -0.13351754717003317, max_hamiltonian_energy_error = -0.20158883549319384, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6492861482106583, log_density = 23.834841261290862, hamiltonian_energy = -22.00256216126433, hamiltonian_energy_error = 0.6564411326715955, max_hamiltonian_energy_error = 0.6834777251134412, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9813995105381499, log_density = 24.359236077552403, hamiltonian_energy = -21.202452406623635, hamiltonian_energy_error = -0.25992248400950757, max_hamiltonian_energy_error = -0.42297346836042493, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7470841654964315, log_density = 23.869638727568308, hamiltonian_energy = -21.543498560609887, hamiltonian_energy_error = 0.41880318212178125, max_hamiltonian_energy_error = 0.8362231833912546, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8675421453832813, log_density = 23.740578767082877, hamiltonian_energy = -21.120338294389057, hamiltonian_energy_error = 0.06854464025480667, max_hamiltonian_energy_error = 0.4021585908255929, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8581453277742309, log_density = 23.97316948016292, hamiltonian_energy = -20.5515958394316, hamiltonian_energy_error = -0.20343831618619035, max_hamiltonian_energy_error = 0.4282996817519198, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.86363187756656, log_density = 23.47380398422203, hamiltonian_energy = -20.925071867280515, hamiltonian_energy_error = -0.11872303718294219, max_hamiltonian_energy_error = 0.5261158715874537, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9882606620675214, log_density = 25.53839572722958, hamiltonian_energy = -21.83692555200495, hamiltonian_energy_error = -0.09620738309442345, max_hamiltonian_energy_error = -0.17181640460545466, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9116474129204126, log_density = 24.750147628280324, hamiltonian_energy = -23.70417351819656, hamiltonian_energy_error = 0.1363032097050656, max_hamiltonian_energy_error = 0.2540337875744747, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 23.262377495835878, hamiltonian_energy = -20.46472930685075, hamiltonian_energy_error = -0.11846398233985411, max_hamiltonian_energy_error = -0.2643124583983365, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7530957168251284, log_density = 18.769261260810058, hamiltonian_energy = -16.300452894858264, hamiltonian_energy_error = 0.6331075742234518, max_hamiltonian_energy_error = 0.653677369971259, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.698516595958208, log_density = 21.90814530318089, hamiltonian_energy = -15.107574116792172, hamiltonian_energy_error = 0.21035907355516414, max_hamiltonian_energy_error = 3.482862273829328, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9866948827208197, log_density = 24.60144245656999, hamiltonian_energy = -20.141131938657555, hamiltonian_energy_error = -0.24449632244555275, max_hamiltonian_energy_error = -0.9049632162838819, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9905066387198274, log_density = 26.04310535951395, hamiltonian_energy = -23.63455879144133, hamiltonian_energy_error = -0.24769210171948686, max_hamiltonian_energy_error = -0.24769210171948686, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9744623068528778, log_density = 26.186704528740087, hamiltonian_energy = -24.715311926506768, hamiltonian_energy_error = 0.028949254116966472, max_hamiltonian_energy_error = -0.12005791120429521, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9782934782975471, log_density = 25.82067512135513, hamiltonian_energy = -24.373315507362356, hamiltonian_energy_error = -0.013543073717549703, max_hamiltonian_energy_error = -0.17096150014387845, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9170274673956494, log_density = 26.107323704701223, hamiltonian_energy = -24.16813914075401, hamiltonian_energy_error = -0.01942890058059632, max_hamiltonian_energy_error = 0.2427350324868307, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9578925247549582, log_density = 26.27631125672019, hamiltonian_energy = -25.189529947237176, hamiltonian_energy_error = 0.016092768409084357, max_hamiltonian_energy_error = -0.11451074917730608, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6504024213268493, log_density = 22.028293782606333, hamiltonian_energy = -21.302817607217758, hamiltonian_energy_error = 0.4729385775112611, max_hamiltonian_energy_error = 0.49876462733655913, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9618606387160443, log_density = 21.60461567581368, hamiltonian_energy = -19.643428968636865, hamiltonian_energy_error = 0.0702856763740165, max_hamiltonian_energy_error = -1.1713740238242458, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 25.182281277123458, hamiltonian_energy = -21.91935866434201, hamiltonian_energy_error = -0.71321312951493, max_hamiltonian_energy_error = -0.71321312951493, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 25.29593704417235, hamiltonian_energy = -23.75613484562004, hamiltonian_energy_error = -0.22080861692767328, max_hamiltonian_energy_error = -0.4575933726391561, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7874663600232346, log_density = 24.408842027878478, hamiltonian_energy = -22.437310618322215, hamiltonian_energy_error = 0.22660846365488752, max_hamiltonian_energy_error = 0.5706354083787915, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.48573791733994665, log_density = 19.56202944266336, hamiltonian_energy = -14.758310186037832, hamiltonian_energy_error = 0.46087222797415706, max_hamiltonian_energy_error = 1.4951035948285458, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9856849581680714, log_density = 23.91428766119038, hamiltonian_energy = -17.27054553379319, hamiltonian_energy_error = -0.30539436539932296, max_hamiltonian_energy_error = -1.396469659621161, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9674205784194702, log_density = 24.01843382394624, hamiltonian_energy = -21.898020323555844, hamiltonian_energy_error = 0.10769292560678068, max_hamiltonian_energy_error = -0.2907026628314604, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9851720037624869, log_density = 22.485055727633174, hamiltonian_energy = -20.230254397734843, hamiltonian_energy_error = 0.10958718396287281, max_hamiltonian_energy_error = -0.4119158153056226, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9759312917424803, log_density = 23.426198768284245, hamiltonian_energy = -19.10729359910113, hamiltonian_energy_error = 0.1213562673040478, max_hamiltonian_energy_error = -0.8097114331321258, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.42648097548475555, log_density = 23.426198768284245, hamiltonian_energy = -16.85108415953228, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 1.2116418348455529, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9871234137345536, log_density = 25.655593597865124, hamiltonian_energy = -22.42632555173814, hamiltonian_energy_error = -0.5167572896671899, max_hamiltonian_energy_error = -0.5167572896671899, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9661465595431252, log_density = 24.712066830091793, hamiltonian_energy = -22.06177426459194, hamiltonian_energy_error = 0.03009784149123007, max_hamiltonian_energy_error = -0.2382002067029667, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9252267559264087, log_density = 24.793608809025645, hamiltonian_energy = -21.75567084193933, hamiltonian_energy_error = -0.1458040290903817, max_hamiltonian_energy_error = 0.2681617858289975, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8464705929778605, log_density = 23.800538736830003, hamiltonian_energy = -19.73257848578044, hamiltonian_energy_error = 0.17578834684542954, max_hamiltonian_energy_error = 0.3555238167854107, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 26.198853965355493, hamiltonian_energy = -23.696568037177457, hamiltonian_energy_error = -0.14834862220980582, max_hamiltonian_energy_error = -0.27778442018297156, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9569935822671928, log_density = 27.343187974878102, hamiltonian_energy = -25.20499508299297, hamiltonian_energy_error = -0.19723447502570934, max_hamiltonian_energy_error = 0.19879559768547495, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8410987798228963, log_density = 26.611649925541393, hamiltonian_energy = -25.527546086530545, hamiltonian_energy_error = 0.16612453271421757, max_hamiltonian_energy_error = 0.3259391290387157, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9798158084225516, log_density = 26.684147566512035, hamiltonian_energy = -25.764658915628964, hamiltonian_energy_error = -0.005713065139200779, max_hamiltonian_energy_error = -0.12031762047807959, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8554057218318161, log_density = 26.840118090345783, hamiltonian_energy = -25.18454538546159, hamiltonian_energy_error = 0.02539370519416906, max_hamiltonian_energy_error = 0.33133262205556235, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6611422333538596, log_density = 24.54666734280102, hamiltonian_energy = -21.38907122218834, hamiltonian_energy_error = 0.4238138639001541, max_hamiltonian_energy_error = 0.6589099147721882, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9609858108890436, log_density = 25.73496380199944, hamiltonian_energy = -22.751280601199717, hamiltonian_energy_error = -0.38456480443712593, max_hamiltonian_energy_error = -0.6428388143139898, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8901313013858889, log_density = 26.1502646504927, hamiltonian_energy = -23.1332826299611, hamiltonian_energy_error = -0.010053915103604538, max_hamiltonian_energy_error = 0.40692953874144777, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 26.781608956134075, hamiltonian_energy = -25.939582941922314, hamiltonian_energy_error = -0.0646398703529627, max_hamiltonian_energy_error = -0.12244425445443952, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9396260090087691, log_density = 27.46549012794535, hamiltonian_energy = -24.67265849887648, hamiltonian_energy_error = -0.08173807714138093, max_hamiltonian_energy_error = 0.12434465135438444, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8419511012056355, log_density = 25.82713344645057, hamiltonian_energy = -23.47818075947091, hamiltonian_energy_error = 0.005328452147153939, max_hamiltonian_energy_error = 0.24536290968338292, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8687020128236068, log_density = 25.886654937911334, hamiltonian_energy = -21.30019419172946, hamiltonian_energy_error = 0.14822188181360474, max_hamiltonian_energy_error = 0.2824368586367285, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8201923363789341, log_density = 26.284166000623976, hamiltonian_energy = -22.458110335114107, hamiltonian_energy_error = -0.15507403792679497, max_hamiltonian_energy_error = 0.5800843770246615, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9211416214024937, log_density = 25.61608859725935, hamiltonian_energy = -23.77278840628493, hamiltonian_energy_error = 0.08079027012475848, max_hamiltonian_energy_error = 0.203705600218278, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8961515466610914, log_density = 26.071627767175947, hamiltonian_energy = -23.539719217729818, hamiltonian_energy_error = 0.028006366441431396, max_hamiltonian_energy_error = 0.3156630995071268, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9884615630736772, log_density = 26.15897182793027, hamiltonian_energy = -24.955806115170518, hamiltonian_energy_error = -0.00036354199673027665, max_hamiltonian_energy_error = -0.10195665974230295, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9244501488467469, log_density = 26.04431294839094, hamiltonian_energy = -24.29771117101852, hamiltonian_energy_error = -0.10619667088385754, max_hamiltonian_energy_error = 0.18863085187410888, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 25.769346029948245, hamiltonian_energy = -25.312082240751263, hamiltonian_energy_error = -0.0166059433190604, max_hamiltonian_energy_error = -0.07100792730606997, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9371756467732412, log_density = 23.81905056885133, hamiltonian_energy = -22.381406042030726, hamiltonian_energy_error = -0.007758764911667271, max_hamiltonian_energy_error = 0.14246867747075243, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.971517771166561, log_density = 25.157044294097197, hamiltonian_energy = -22.325752799478767, hamiltonian_energy_error = 0.05909253818848015, max_hamiltonian_energy_error = -0.15349483804122244, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9516609162210453, log_density = 25.536303742103524, hamiltonian_energy = -23.963247299391657, hamiltonian_energy_error = 0.02085224453560741, max_hamiltonian_energy_error = 0.1440562079302694, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9972581046100462, log_density = 25.019304826895013, hamiltonian_energy = -24.58405252376583, hamiltonian_energy_error = 0.019379849763467405, max_hamiltonian_energy_error = -0.19159240129557986, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7557681475216117, log_density = 25.13079940327969, hamiltonian_energy = -23.395901979228316, hamiltonian_energy_error = 0.2704847425095025, max_hamiltonian_energy_error = 0.614845938000915, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9563488147286012, log_density = 24.826028066260214, hamiltonian_energy = -23.383352379100753, hamiltonian_energy_error = 0.07700231169812, max_hamiltonian_energy_error = -0.24815044829450983, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9827684027621307, log_density = 23.789379680912074, hamiltonian_energy = -22.82843970605275, hamiltonian_energy_error = 0.03809287525540128, max_hamiltonian_energy_error = -0.3361874099592619, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9175637070984489, log_density = 22.839824894509157, hamiltonian_energy = -21.37371839009903, hamiltonian_energy_error = 0.10895236590782886, max_hamiltonian_energy_error = 0.15558071602800538, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5432197679735182, log_density = 23.101543856073757, hamiltonian_energy = -15.555610223162237, hamiltonian_energy_error = -0.20199218314798806, max_hamiltonian_energy_error = 2.714896691845846, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 26.469294933045635, hamiltonian_energy = -22.078393829369247, hamiltonian_energy_error = -0.3748775967250815, max_hamiltonian_energy_error = -0.3748775967250815, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8680932224787963, log_density = 26.730793916076756, hamiltonian_energy = -24.823314844892224, hamiltonian_energy_error = -0.1440971740480954, max_hamiltonian_energy_error = 0.277426648791117, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5081827663085183, log_density = 24.423764063824514, hamiltonian_energy = -21.40460711197116, hamiltonian_energy_error = 0.6187172640198071, max_hamiltonian_energy_error = 1.103943062502676, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9766706780567382, log_density = 25.551370836964896, hamiltonian_energy = -22.63070140750812, hamiltonian_energy_error = -0.25592083953237577, max_hamiltonian_energy_error = -0.5278028860965485, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9942838611299537, log_density = 25.60003322802889, hamiltonian_energy = -23.625858187632552, hamiltonian_energy_error = 0.04083550720563878, max_hamiltonian_energy_error = -0.2415121962412563, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9843635928493525, log_density = 24.973373700556582, hamiltonian_energy = -24.272481695876067, hamiltonian_energy_error = 0.04665968061915393, max_hamiltonian_energy_error = -0.0937452898129898, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9514764007613847, log_density = 26.901059205593626, hamiltonian_energy = -23.568964877454274, hamiltonian_energy_error = -0.13680973253145368, max_hamiltonian_energy_error = 0.19569542346043178, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9062990229716161, log_density = 25.04177345183726, hamiltonian_energy = -23.829963728635395, hamiltonian_energy_error = 0.12471847407768166, max_hamiltonian_energy_error = 0.3074555203531517, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9620340073958745, log_density = 24.202769332231156, hamiltonian_energy = -21.359411603007246, hamiltonian_energy_error = -0.02175431456146626, max_hamiltonian_energy_error = 0.16981368338755232, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9133919462449265, log_density = 22.810391481909225, hamiltonian_energy = -21.79254561184065, hamiltonian_energy_error = 0.16007242927105025, max_hamiltonian_energy_error = 0.21610333911003465, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7668611872571756, log_density = 20.788120602063877, hamiltonian_energy = -17.827496791648766, hamiltonian_energy_error = 0.3105958778338227, max_hamiltonian_energy_error = 0.6727981099027183, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9136212369109813, log_density = 24.093526998748235, hamiltonian_energy = -17.180924016655858, hamiltonian_energy_error = 0.02142868533628217, max_hamiltonian_energy_error = -0.7608319125249103, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9215761915939561, log_density = 24.280565526530026, hamiltonian_energy = -20.33812624958045, hamiltonian_energy_error = 0.08131920891138833, max_hamiltonian_energy_error = -0.7089187886079458, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9953636396506459, log_density = 24.58614025851885, hamiltonian_energy = -23.54731867035465, hamiltonian_energy_error = -0.03461217744117917, max_hamiltonian_energy_error = -0.17074044222443518, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7226620535958846, log_density = 25.52086110742472, hamiltonian_energy = -20.647786253779948, hamiltonian_energy_error = -0.019597768647646063, max_hamiltonian_energy_error = 0.7684906510486478, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.910707297306368, log_density = 25.4333888036747, hamiltonian_energy = -21.38565029708512, hamiltonian_energy_error = -0.014761689388073762, max_hamiltonian_energy_error = -0.41685768938259216, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.7876428012988859, log_density = 24.383046045069136, hamiltonian_energy = -21.21289055370331, hamiltonian_energy_error = 0.25366794780754276, max_hamiltonian_energy_error = 0.5324573709349636, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 24.79018011197498, hamiltonian_energy = -22.297793441174772, hamiltonian_energy_error = -0.13753808015356128, max_hamiltonian_energy_error = -0.29833162540070646, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6418476281941242, log_density = 20.438310688050613, hamiltonian_energy = -16.425086445103283, hamiltonian_energy_error = 0.5334654767588205, max_hamiltonian_energy_error = 1.210646878046374, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 24.43223178201683, hamiltonian_energy = -19.958722963607066, hamiltonian_energy_error = -0.3226915978943943, max_hamiltonian_energy_error = -0.46226082281991765, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9859998931251098, log_density = 23.940299364908505, hamiltonian_energy = -21.963665788284807, hamiltonian_energy_error = -0.13598681366316256, max_hamiltonian_energy_error = -0.2567801093515598, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.814916236963489, log_density = 22.9312470282794, hamiltonian_energy = -20.92296099747111, hamiltonian_energy_error = 0.21835822853164544, max_hamiltonian_energy_error = 0.33025215678312136, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9832159283333988, log_density = 23.475208166740316, hamiltonian_energy = -21.480874338100836, hamiltonian_energy_error = 0.06522312150847753, max_hamiltonian_energy_error = -0.3616906298356213, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 24.236972885675446, hamiltonian_energy = -22.76732983774831, hamiltonian_energy_error = -0.1460142671223501, max_hamiltonian_energy_error = -0.40984806837419896, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.994052171650931, log_density = 26.45648302303419, hamiltonian_energy = -23.178073527834528, hamiltonian_energy_error = -0.1242227791394157, max_hamiltonian_energy_error = -0.20917569612818454, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8612851199849855, log_density = 25.995726822553387, hamiltonian_energy = -23.89398144843341, hamiltonian_energy_error = 0.013411594111573777, max_hamiltonian_energy_error = 0.2804149847861268, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9374961590928366, log_density = 24.925660013949006, hamiltonian_energy = -22.582881480731643, hamiltonian_energy_error = 0.09100239377875496, max_hamiltonian_energy_error = 0.20450150182679394, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.989167460940043, log_density = 23.774945480976815, hamiltonian_energy = -22.03486107063747, hamiltonian_energy_error = 0.07885683230643536, max_hamiltonian_energy_error = -0.4892442767643459, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9770940847231614, log_density = 23.1341915425546, hamiltonian_energy = -22.818161456892422, hamiltonian_energy_error = 0.13370367039338404, max_hamiltonian_energy_error = -0.41485996837227646, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.994158297452368, log_density = 26.00055930481363, hamiltonian_energy = -22.200239665830495, hamiltonian_energy_error = -0.28798336553786186, max_hamiltonian_energy_error = -0.28798336553786186, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9549618965189962, log_density = 26.830126376026705, hamiltonian_energy = -24.45765146944877, hamiltonian_energy_error = -0.22952670761106475, max_hamiltonian_energy_error = -0.29892568314570767, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9017813799252387, log_density = 26.316713364627127, hamiltonian_energy = -25.593358575354724, hamiltonian_energy_error = 0.11331779624526916, max_hamiltonian_energy_error = 0.15268696151446903, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9457507044602612, log_density = 26.448449016322733, hamiltonian_energy = -25.181519174599295, hamiltonian_energy_error = -0.06509192282122811, max_hamiltonian_energy_error = 0.17763004311777664, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9131069013388914, log_density = 24.818079626140136, hamiltonian_energy = -24.35856232957147, hamiltonian_energy_error = 0.21230029532969752, max_hamiltonian_energy_error = 0.21230029532969752, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9137432404656224, log_density = 25.48997718339819, hamiltonian_energy = -23.148131033958848, hamiltonian_energy_error = -0.07010500841215972, max_hamiltonian_energy_error = 0.29944468635050114, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9887522483771415, log_density = 23.808981509743475, hamiltonian_energy = -20.379313153646002, hamiltonian_energy_error = -0.05797729763169812, max_hamiltonian_energy_error = -0.17841119998217891, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8327449157549912, log_density = 26.04348552781493, hamiltonian_energy = -21.53126643127834, hamiltonian_energy_error = -0.10500730123424518, max_hamiltonian_energy_error = 0.4898534440066271, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9584034934262715, log_density = 24.632520424488746, hamiltonian_energy = -23.6494230534607, hamiltonian_energy_error = 0.06777463999463507, max_hamiltonian_energy_error = -0.09354310286402168, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9504537755685482, log_density = 23.05826709340634, hamiltonian_energy = -21.680518593817624, hamiltonian_energy_error = 0.03465736498477412, max_hamiltonian_energy_error = -0.20938206135815918, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9538620156735161, log_density = 21.76855763113604, hamiltonian_energy = -20.28358609192429, hamiltonian_energy_error = 0.04153239973998524, max_hamiltonian_energy_error = 0.12457455091754355, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.919052773339362, log_density = 26.040754260416712, hamiltonian_energy = -19.202477298965555, hamiltonian_energy_error = 0.0019318375391783604, max_hamiltonian_energy_error = 0.21155370285063313, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8614703705879408, log_density = 24.4497994393734, hamiltonian_energy = -22.93738390348848, hamiltonian_energy_error = 0.13224246918379734, max_hamiltonian_energy_error = 0.34491214540734205, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.924289103024622, log_density = 24.2698093075998, hamiltonian_energy = -22.2191092310093, hamiltonian_energy_error = 0.11626531107926397, max_hamiltonian_energy_error = 0.29112586842457944, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9388047417797196, log_density = 22.551637348516515, hamiltonian_energy = -20.987396364335364, hamiltonian_energy_error = 0.07675444713907709, max_hamiltonian_energy_error = 0.26603602336856724, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9708256706106425, log_density = 22.957988997888137, hamiltonian_energy = -17.06145848820965, hamiltonian_energy_error = -0.07168519680091379, max_hamiltonian_energy_error = -0.4698106821478554, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9598381353643791, log_density = 22.565172963652227, hamiltonian_energy = -18.814357418357034, hamiltonian_energy_error = 0.006386123226327811, max_hamiltonian_energy_error = 0.236826228757554, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8770828934074419, log_density = 23.392516174370407, hamiltonian_energy = -18.926375904349527, hamiltonian_energy_error = -0.014212600002153408, max_hamiltonian_energy_error = 0.33069437175977967, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.49533576518247063, log_density = 17.623570718911502, hamiltonian_energy = -14.489578427694525, hamiltonian_energy_error = 0.9979909489094432, max_hamiltonian_energy_error = 0.9979909489094432, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 20.052525484485507, hamiltonian_energy = -15.95468290135316, hamiltonian_energy_error = -0.6044724936735371, max_hamiltonian_energy_error = -1.1278482018367164, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 21.680180999241987, hamiltonian_energy = -17.774657071668894, hamiltonian_energy_error = -0.3192654500412466, max_hamiltonian_energy_error = -0.677220341451978, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9773724247538313, log_density = 22.22282362560599, hamiltonian_energy = -20.24072960554091, hamiltonian_energy_error = -0.1861373215980926, max_hamiltonian_energy_error = -0.7131810795013571, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9372638845479607, log_density = 23.317352444846048, hamiltonian_energy = -18.87009572534955, hamiltonian_energy_error = 0.23039528711834478, max_hamiltonian_energy_error = -0.5318186395471223, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 25.526566060749715, hamiltonian_energy = -21.165730085873008, hamiltonian_energy_error = -0.16376346514778461, max_hamiltonian_energy_error = -0.46462732547207963, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8780978462934589, log_density = 23.739157129758503, hamiltonian_energy = -22.326220049115534, hamiltonian_energy_error = 0.273330890839695, max_hamiltonian_energy_error = -0.6476428051744421, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9151279343331896, log_density = 22.932927877974564, hamiltonian_energy = -16.030170458674096, hamiltonian_energy_error = -0.09730478168801682, max_hamiltonian_energy_error = 0.3079133188948546, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9126652209562575, log_density = 23.347186007013455, hamiltonian_energy = -20.045841000950336, hamiltonian_energy_error = -0.04603802837069182, max_hamiltonian_energy_error = -0.6477634385944455, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9242557808518617, log_density = 23.66110885704673, hamiltonian_energy = -21.42999776741312, hamiltonian_energy_error = -0.11089094501666352, max_hamiltonian_energy_error = -0.6320414695444327, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.953867020944163, log_density = 22.254073317514376, hamiltonian_energy = -21.436001542816463, hamiltonian_energy_error = 0.06320671729609018, max_hamiltonian_energy_error = -0.08457396613509616, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9912007989968146, log_density = 22.77987342541794, hamiltonian_energy = -21.629043137876657, hamiltonian_energy_error = 0.03530510178676849, max_hamiltonian_energy_error = -0.6519935620957824, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9742284908547543, log_density = 25.54441418104834, hamiltonian_energy = -21.794728447383378, hamiltonian_energy_error = -0.5343937778387122, max_hamiltonian_energy_error = -0.5343937778387122, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7655150618714575, log_density = 22.05814520775772, hamiltonian_energy = -20.8314506225936, hamiltonian_energy_error = 0.5317836304000636, max_hamiltonian_energy_error = 0.5317836304000636, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9947128358071405, log_density = 23.943913579945477, hamiltonian_energy = -21.443422128772493, hamiltonian_energy_error = -0.5188584411708099, max_hamiltonian_energy_error = -0.5188584411708099, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9974471245623768, log_density = 26.015064933302437, hamiltonian_energy = -22.27346244508505, hamiltonian_energy_error = -0.03897238839854822, max_hamiltonian_energy_error = -0.17854234262701496, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9505579395471072, log_density = 25.441298763051087, hamiltonian_energy = -23.756291751529876, hamiltonian_energy_error = -0.18881828006029977, max_hamiltonian_energy_error = -0.20187600353681034, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9003331441762529, log_density = 25.332933787771815, hamiltonian_energy = -22.924380243836417, hamiltonian_energy_error = 0.09057571996767777, max_hamiltonian_energy_error = 0.22888816195857586, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9986557284744679, log_density = 25.279370234761227, hamiltonian_energy = -24.635285190765337, hamiltonian_energy_error = -0.06375932569926945, max_hamiltonian_energy_error = -0.094096366291744, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.861190535202768, log_density = 24.483527828703483, hamiltonian_energy = -21.390300617377164, hamiltonian_energy_error = 0.040521656654966876, max_hamiltonian_energy_error = 0.23938829620841773, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9929685134220465, log_density = 26.231404245721833, hamiltonian_energy = -23.99493022093466, hamiltonian_energy_error = -0.06448269994002942, max_hamiltonian_energy_error = -0.06448269994002942, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7836035923810482, log_density = 23.879409917616464, hamiltonian_energy = -22.538243423269027, hamiltonian_energy_error = 0.16126508109307025, max_hamiltonian_energy_error = 0.3562699161276548, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9796112930210966, log_density = 23.035150660202028, hamiltonian_energy = -21.24291730319238, hamiltonian_energy_error = -0.010487227746157401, max_hamiltonian_energy_error = -0.204256561734951, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9737432475345495, log_density = 25.993724526081714, hamiltonian_energy = -21.302642581019605, hamiltonian_energy_error = -0.0675059432973697, max_hamiltonian_energy_error = -0.249907998790043, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9418702747763721, log_density = 26.88897875437585, hamiltonian_energy = -23.81442199953356, hamiltonian_energy_error = -0.02936825112947261, max_hamiltonian_energy_error = 0.15953893892166704, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8948411095159104, log_density = 26.68830982698583, hamiltonian_energy = -24.66536366898556, hamiltonian_energy_error = -0.024360868545542758, max_hamiltonian_energy_error = 0.19082187967077857, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8360218087082784, log_density = 23.724886557271596, hamiltonian_energy = -22.48817729353575, hamiltonian_energy_error = 0.1341909551742475, max_hamiltonian_energy_error = 0.28076693682395515, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9234805724186491, log_density = 22.946729635781395, hamiltonian_energy = -20.137738470553618, hamiltonian_energy_error = 0.11531998350200112, max_hamiltonian_energy_error = 0.21134136464780084, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9986661213992936, log_density = 25.29924827625844, hamiltonian_energy = -20.35856027614072, hamiltonian_energy_error = -0.12752659189363413, max_hamiltonian_energy_error = -0.366488329089826, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9936813630147798, log_density = 26.54329847707661, hamiltonian_energy = -24.621665247826332, hamiltonian_energy_error = -0.04476638513375519, max_hamiltonian_energy_error = -0.13084919912705928, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7541968573843526, log_density = 26.54329847707661, hamiltonian_energy = -22.682887894378144, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 0.7195193315074491, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9114915290493465, log_density = 25.905471537978656, hamiltonian_energy = -24.21043108418734, hamiltonian_energy_error = 0.1253008798785693, max_hamiltonian_energy_error = 0.197871629683938, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 27.451654078152238, hamiltonian_energy = -25.682685644555434, hamiltonian_energy_error = -0.2728481248266803, max_hamiltonian_energy_error = -0.2728481248266803, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9333472587197943, log_density = 26.709137859634986, hamiltonian_energy = -25.878999983188876, hamiltonian_energy_error = 0.046929942653346046, max_hamiltonian_energy_error = 0.13179400569795163, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9213734592094064, log_density = 25.661433778646085, hamiltonian_energy = -21.54247588377847, hamiltonian_energy_error = 0.02396229599187194, max_hamiltonian_energy_error = 0.24622725563541792, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8587616583891564, log_density = 24.450325642863575, hamiltonian_energy = -22.24742827888996, hamiltonian_energy_error = 0.05551218548578163, max_hamiltonian_energy_error = 0.2172712901323628, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9972034870491733, log_density = 25.869864720992027, hamiltonian_energy = -23.568500300133373, hamiltonian_energy_error = -0.04996307104335074, max_hamiltonian_energy_error = -0.062060641404571015, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.7644748931453712, log_density = 27.185382217724282, hamiltonian_energy = -23.40497464903847, hamiltonian_energy_error = 0.034545902680175544, max_hamiltonian_energy_error = 0.47446033442006197, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8692035141674054, log_density = 25.61793971406842, hamiltonian_energy = -25.31709506340807, hamiltonian_energy_error = 0.15367618741548128, max_hamiltonian_energy_error = 0.15463501250959766, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7450696085370884, log_density = 24.56447367918054, hamiltonian_energy = -21.235868071498746, hamiltonian_energy_error = 0.1166253673739952, max_hamiltonian_energy_error = 0.49773493184807904, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 25.260051801166423, hamiltonian_energy = -23.86571225119203, hamiltonian_energy_error = -0.006881089925066419, max_hamiltonian_energy_error = -0.18842271617906547, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9924821707393541, log_density = 25.845443265690935, hamiltonian_energy = -24.335449291842306, hamiltonian_energy_error = -0.07506161572664283, max_hamiltonian_energy_error = -0.24379625142503514, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.713068958066864, log_density = 23.851058139120195, hamiltonian_energy = -21.41962813335385, hamiltonian_energy_error = 0.45194024359538076, max_hamiltonian_energy_error = 0.7352389396140566, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 26.32022581438332, hamiltonian_energy = -23.98890333218818, hamiltonian_energy_error = -0.5212351311065824, max_hamiltonian_energy_error = -0.5212351311065824, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.913594949204142, log_density = 26.596789832886145, hamiltonian_energy = -24.4535165174537, hamiltonian_energy_error = -0.016654199400697678, max_hamiltonian_energy_error = 0.26967826547245366, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9202785208560404, log_density = 24.760005473518916, hamiltonian_energy = -22.78740540773527, hamiltonian_energy_error = 0.06776154549605806, max_hamiltonian_energy_error = 0.19087201487057825, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.939079387549808, log_density = 27.244509502839527, hamiltonian_energy = -23.487125985258068, hamiltonian_energy_error = -0.14422618718733915, max_hamiltonian_energy_error = 0.22879977320969758, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9508436852520858, log_density = 27.208537332392776, hamiltonian_energy = -25.62700518538409, hamiltonian_energy_error = -0.08269702121236477, max_hamiltonian_energy_error = 0.12572503720291905, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9839503009975571, log_density = 26.86679819497015, hamiltonian_energy = -26.795768072460728, hamiltonian_energy_error = 0.02179818791894661, max_hamiltonian_energy_error = 0.02179818791894661, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6439466369604746, log_density = 25.85438604376614, hamiltonian_energy = -23.283228366011944, hamiltonian_energy_error = -0.07271458906480177, max_hamiltonian_energy_error = 0.6835726639300432, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9342144804603539, log_density = 25.66517706993948, hamiltonian_energy = -22.980031322312954, hamiltonian_energy_error = 0.06427125184565341, max_hamiltonian_energy_error = 0.1321289736096496, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9842639066859524, log_density = 25.78304065793244, hamiltonian_energy = -24.08039293072646, hamiltonian_energy_error = 0.012648716637464474, max_hamiltonian_energy_error = -0.053406111231637965, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9565358106274348, log_density = 24.88298366125187, hamiltonian_energy = -23.2836698113515, hamiltonian_energy_error = 0.09751117786223418, max_hamiltonian_energy_error = 0.1874127906675227, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9433065416095888, log_density = 21.734646388173207, hamiltonian_energy = -18.200673892963035, hamiltonian_energy_error = 0.12723861291708616, max_hamiltonian_energy_error = 0.19844813391937421, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8863016503300553, log_density = 24.419777893093883, hamiltonian_energy = -18.759492390776334, hamiltonian_energy_error = -0.04143917448347878, max_hamiltonian_energy_error = 0.4171759870669689, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9098474966544199, log_density = 24.415799335601633, hamiltonian_energy = -22.007818190309663, hamiltonian_energy_error = 0.14197140534453112, max_hamiltonian_energy_error = 0.41566161162028337, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7891046904290927, log_density = 24.162348305439142, hamiltonian_energy = -17.09676981316229, hamiltonian_energy_error = 0.10839978100979408, max_hamiltonian_energy_error = -0.5687025104736705, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8926310942224998, log_density = 21.55239138159796, hamiltonian_energy = -18.678362064373317, hamiltonian_energy_error = 0.375918867456452, max_hamiltonian_energy_error = -0.3846013655231246, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9449079538008524, log_density = 24.24494418278502, hamiltonian_energy = -18.17596935254717, hamiltonian_energy_error = -0.2691502613950689, max_hamiltonian_energy_error = -0.5227485120756725, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9869030197623131, log_density = 25.841918926516517, hamiltonian_energy = -23.598567560707913, hamiltonian_energy_error = -0.17795279163346223, max_hamiltonian_energy_error = -0.2905646236442614, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9945850224476233, log_density = 26.26360001731389, hamiltonian_energy = -25.19637329769286, hamiltonian_energy_error = -0.04853651756713262, max_hamiltonian_energy_error = -0.15830653696446362, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.6638081684074257, log_density = 26.312946259311037, hamiltonian_energy = -23.858216315662563, hamiltonian_energy_error = 0.17766326198750093, max_hamiltonian_energy_error = 0.7018767553840881, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.922990239439638, log_density = 24.162424648370422, hamiltonian_energy = -22.365116809594664, hamiltonian_energy_error = 0.19818249222501194, max_hamiltonian_energy_error = 0.25023590079442215, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8909365421809172, log_density = 22.74730552463171, hamiltonian_energy = -19.150390229728988, hamiltonian_energy_error = -0.08608725610867296, max_hamiltonian_energy_error = 0.39426852418909775, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9824773024764243, log_density = 25.426702624389325, hamiltonian_energy = -20.26453737856602, hamiltonian_energy_error = -0.016774373211060123, max_hamiltonian_energy_error = -0.1195769445051198, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9959717760569331, log_density = 25.952258643678164, hamiltonian_energy = -24.88464629320668, hamiltonian_energy_error = 0.028602754030824684, max_hamiltonian_energy_error = -0.2428169143755987, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7032149066262079, log_density = 25.42570783191678, hamiltonian_energy = -20.9265537983995, hamiltonian_energy_error = 0.037796732825224666, max_hamiltonian_energy_error = 0.6425652681202969, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8597897504078763, log_density = 23.22037142868855, hamiltonian_energy = -20.804581779256765, hamiltonian_energy_error = 0.26242169337621846, max_hamiltonian_energy_error = 0.2733636668008046, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9123386161864536, log_density = 26.46406419666725, hamiltonian_energy = -22.168163994101604, hamiltonian_energy_error = -0.4031543871800949, max_hamiltonian_energy_error = -0.4031543871800949, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8609248576994961, log_density = 23.185750042657233, hamiltonian_energy = -22.303170685892407, hamiltonian_energy_error = 0.19413163194673544, max_hamiltonian_energy_error = 0.2195999188521256, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.996739373137189, log_density = 27.295713944046298, hamiltonian_energy = -23.050488492984705, hamiltonian_energy_error = -0.18019675205720986, max_hamiltonian_energy_error = -0.23240346405527035, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.858527531215044, log_density = 25.086470715972528, hamiltonian_energy = -24.28402582145273, hamiltonian_energy_error = 0.1867563343639418, max_hamiltonian_energy_error = 0.2290940116761675, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9089466220151187, log_density = 26.42197009324353, hamiltonian_energy = -22.28565625263496, hamiltonian_energy_error = -0.12557245374208392, max_hamiltonian_energy_error = 0.13670083163450286, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8476569393706269, log_density = 23.635099281788513, hamiltonian_energy = -20.50789199763763, hamiltonian_energy_error = 0.33752415053752927, max_hamiltonian_energy_error = 0.33752415053752927, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.894199898154635, log_density = 24.5572901782435, hamiltonian_energy = -21.425387022774114, hamiltonian_energy_error = -0.47651544050723516, max_hamiltonian_energy_error = -0.5347682011522537, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9403628359451259, log_density = 23.28802550437674, hamiltonian_energy = -22.867065956137576, hamiltonian_energy_error = 0.21715821544815483, max_hamiltonian_energy_error = 0.21715821544815483, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 24.490855202319903, hamiltonian_energy = -22.928558896759377, hamiltonian_energy_error = -0.12254132562548037, max_hamiltonian_energy_error = -0.41458959130850914, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9880657408207095, log_density = 26.95159842063085, hamiltonian_energy = -23.84431308736827, hamiltonian_energy_error = -0.2020578562222184, max_hamiltonian_energy_error = -0.2020578562222184, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7675585075088892, log_density = 26.44459740745032, hamiltonian_energy = -24.543457442892844, hamiltonian_energy_error = 0.06429261633220662, max_hamiltonian_energy_error = 0.5485503164340528, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8141587744368041, log_density = 25.430910420194945, hamiltonian_energy = -23.544242716461746, hamiltonian_energy_error = 0.2110082183453308, max_hamiltonian_energy_error = 0.36584469241234885, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9969231684918773, log_density = 26.948696348682205, hamiltonian_energy = -24.78433174858571, hamiltonian_energy_error = -0.1371480142682131, max_hamiltonian_energy_error = -0.14042660720443223, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9290288628011601, log_density = 25.486230243435053, hamiltonian_energy = -23.928219015446988, hamiltonian_energy_error = 0.1233604199308651, max_hamiltonian_energy_error = 0.16036243407556938, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9970286576968255, log_density = 25.147856619707767, hamiltonian_energy = -24.12561304894608, hamiltonian_energy_error = 0.008472655333271462, max_hamiltonian_energy_error = -0.12472119040684149, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8698534778633705, log_density = 22.9665823715492, hamiltonian_energy = -20.848523942660798, hamiltonian_energy_error = 0.2328642732046191, max_hamiltonian_energy_error = 0.2674675717620367, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9870490535380831, log_density = 26.11412102314366, hamiltonian_energy = -21.338539679134445, hamiltonian_energy_error = -0.20663301325487637, max_hamiltonian_energy_error = -0.26604587798892254, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.997516436749315, log_density = 26.027565185952554, hamiltonian_energy = -24.863020582178667, hamiltonian_energy_error = 0.0020555623389419964, max_hamiltonian_energy_error = -0.17822125378140186, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9594461904279209, log_density = 25.413532926997924, hamiltonian_energy = -24.532946537601816, hamiltonian_energy_error = 0.10997361980385634, max_hamiltonian_energy_error = -0.1358496726702434, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9549487354313358, log_density = 25.72968348592754, hamiltonian_energy = -23.94162147531016, hamiltonian_energy_error = -0.1936091246493774, max_hamiltonian_energy_error = -0.29205742289154557, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9964686058471698, log_density = 26.25502037632204, hamiltonian_energy = -25.15671684896254, hamiltonian_energy_error = -0.049292638307768755, max_hamiltonian_energy_error = -0.15545830768047608, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9949738952478283, log_density = 25.15002708427049, hamiltonian_energy = -24.58717655923515, hamiltonian_energy_error = 0.009326415306155411, max_hamiltonian_energy_error = -0.0868812287514622, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6173340105692248, log_density = 24.1798753793824, hamiltonian_energy = -21.758530230387745, hamiltonian_energy_error = 0.42541557671220076, max_hamiltonian_energy_error = 0.8434247130820829, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9882426436378928, log_density = 25.202245686271347, hamiltonian_energy = -22.645161954044816, hamiltonian_energy_error = -0.03269367387840916, max_hamiltonian_energy_error = -0.14830559003017285, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8813854821797453, log_density = 23.43733582051904, hamiltonian_energy = -22.608566780192525, hamiltonian_energy_error = 0.1766207762491625, max_hamiltonian_energy_error = 0.2155984674633089, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9902711041292296, log_density = 22.28971111987627, hamiltonian_energy = -21.281519024869223, hamiltonian_energy_error = 0.07406149253895578, max_hamiltonian_energy_error = -0.5362475108554392, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8093858499782561, log_density = 22.717688170910172, hamiltonian_energy = -18.648298673052818, hamiltonian_energy_error = 0.17883382406150972, max_hamiltonian_energy_error = 0.6400156985007435, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9939608672006408, log_density = 22.65631683187793, hamiltonian_energy = -22.134365952806203, hamiltonian_energy_error = 0.0520282326346404, max_hamiltonian_energy_error = -0.5367842205591309, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 24.451306466350054, hamiltonian_energy = -22.292872188507644, hamiltonian_energy_error = -0.08507156854730624, max_hamiltonian_energy_error = -0.48418737416621127, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7342576902147261, log_density = 24.046768024908197, hamiltonian_energy = -18.09905117683625, hamiltonian_energy_error = -0.1622295947606176, max_hamiltonian_energy_error = 0.527165627813794, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9842318201680964, log_density = 24.049576927198373, hamiltonian_energy = -21.863189253593305, hamiltonian_energy_error = -0.0028172228721672354, max_hamiltonian_energy_error = -0.358521818246075, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8967697518037322, log_density = 25.44586023651614, hamiltonian_energy = -20.04749992978184, hamiltonian_energy_error = 0.007608875872310961, max_hamiltonian_energy_error = 0.22649389392373465, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 25.794114939532935, hamiltonian_energy = -25.114863250102996, hamiltonian_energy_error = -0.03369357159324693, max_hamiltonian_energy_error = -0.07577914522510554, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9892830637596494, log_density = 25.81548991357877, hamiltonian_energy = -25.044279826969408, hamiltonian_energy_error = 0.02531416957525323, max_hamiltonian_energy_error = 0.02531416957525323, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8057902194525414, log_density = 24.128168568324835, hamiltonian_energy = -21.565520668186153, hamiltonian_energy_error = 0.3213566561320391, max_hamiltonian_energy_error = 0.5261730421768931, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9588744006294369, log_density = 23.85311538329053, hamiltonian_energy = -22.114865465876708, hamiltonian_energy_error = 0.11178047749097786, max_hamiltonian_energy_error = -0.36844279919564826, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9966935236071675, log_density = 23.544467463144194, hamiltonian_energy = -22.583277613462155, hamiltonian_energy_error = -0.41257953027790606, max_hamiltonian_energy_error = -0.46577278475923833, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7271440880698727, log_density = 20.39513434036473, hamiltonian_energy = -19.645288618803008, hamiltonian_energy_error = 1.0711031322434295, max_hamiltonian_energy_error = 1.0711031322434295, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 23.831174951249036, hamiltonian_energy = -18.566773018374494, hamiltonian_energy_error = -0.8924505481219889, max_hamiltonian_energy_error = -1.1475283256117415, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9523040018713799, log_density = 25.259603861987138, hamiltonian_energy = -20.950569501627488, hamiltonian_energy_error = -0.23077520861487244, max_hamiltonian_energy_error = -0.37972930135206084, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9714285146629026, log_density = 24.6886629083689, hamiltonian_energy = -23.44840449105716, hamiltonian_energy_error = 0.01819262410874245, max_hamiltonian_energy_error = -0.16748663008288034, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8469862150365695, log_density = 26.60363332410995, hamiltonian_energy = -20.022354338834578, hamiltonian_energy_error = -0.07898164408480923, max_hamiltonian_energy_error = 0.47974795232004297, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.952776263051282, log_density = 26.954197044532407, hamiltonian_energy = -25.961640988706485, hamiltonian_energy_error = -0.005188921997294926, max_hamiltonian_energy_error = 0.1025387683368848, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7620135007692076, log_density = 27.381322704097816, hamiltonian_energy = -24.7460420735135, hamiltonian_energy_error = 0.030004053985173584, max_hamiltonian_energy_error = 0.6272722207414851, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6872384733585305, log_density = 25.200471589551434, hamiltonian_energy = -23.082476178142404, hamiltonian_energy_error = 0.4463048822137097, max_hamiltonian_energy_error = 0.5624220949899517, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9709024533240377, log_density = 26.40866448687961, hamiltonian_energy = -23.929324167920257, hamiltonian_energy_error = -0.31522621215617264, max_hamiltonian_energy_error = -0.4446732501585693, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.92916363010179, log_density = 23.506836459471195, hamiltonian_energy = -22.593697598264747, hamiltonian_energy_error = 0.06213372125618122, max_hamiltonian_energy_error = -0.45440685429485583, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9686450081520638, log_density = 26.00221723587778, hamiltonian_energy = -22.285784739460535, hamiltonian_energy_error = -0.29343529039863725, max_hamiltonian_energy_error = -0.29343529039863725, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.891889736415741, log_density = 25.56628447163625, hamiltonian_energy = -24.051735899911847, hamiltonian_energy_error = 0.07049347082157453, max_hamiltonian_energy_error = 0.2816310356299532, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9819029043765571, log_density = 23.597117928055958, hamiltonian_energy = -22.02024259035353, hamiltonian_energy_error = -0.11903518812492564, max_hamiltonian_energy_error = -0.11903518812492564, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9494098191992829, log_density = 23.80125884431375, hamiltonian_energy = -22.571389172498904, hamiltonian_energy_error = -0.041413686207594225, max_hamiltonian_energy_error = 0.15077481655732683, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8645977975479973, log_density = 26.940136023008648, hamiltonian_energy = -22.726652378784816, hamiltonian_energy_error = -0.036464414904159526, max_hamiltonian_energy_error = 0.32961347838423904, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9991415668788538, log_density = 26.887280401441885, hamiltonian_energy = -26.828628366472564, hamiltonian_energy_error = 0.006116767204773055, max_hamiltonian_energy_error = -0.02615114176161626, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8805239339182777, log_density = 25.675444451286715, hamiltonian_energy = -25.024927752045386, hamiltonian_energy_error = 0.13055701211694526, max_hamiltonian_energy_error = 0.16012565698092018, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9601546734962675, log_density = 25.568897237217378, hamiltonian_energy = -23.319389036418166, hamiltonian_energy_error = 0.02204011993691779, max_hamiltonian_energy_error = 0.15231365907712302, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9071188611393245, log_density = 25.23265568415678, hamiltonian_energy = -22.494027396198483, hamiltonian_energy_error = 0.059470750510957515, max_hamiltonian_energy_error = 0.19364375626479458, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9915702790128204, log_density = 23.626635434902298, hamiltonian_energy = -22.812863406033987, hamiltonian_energy_error = -0.006831770935253445, max_hamiltonian_energy_error = -0.46995485666170467, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8609729262926822, log_density = 18.96187985864806, hamiltonian_energy = -14.80672312583139, hamiltonian_energy_error = 0.1775062364088349, max_hamiltonian_energy_error = 0.425276211406139, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8916005827953071, log_density = 17.203582906828082, hamiltonian_energy = -16.49299413881055, hamiltonian_energy_error = 0.39333633734462126, max_hamiltonian_energy_error = 0.39333633734462126, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 26.64141139667118, hamiltonian_energy = -13.859160726516834, hamiltonian_energy_error = -0.699189281157178, max_hamiltonian_energy_error = -0.699189281157178, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9713525977451187, log_density = 26.006770813389082, hamiltonian_energy = -25.065814166211624, hamiltonian_energy_error = 0.006286728198226399, max_hamiltonian_energy_error = 0.07412901973828667, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.809196890711452, log_density = 24.274221650921312, hamiltonian_energy = -23.67325927658294, hamiltonian_energy_error = 0.24388471063173967, max_hamiltonian_energy_error = 0.2844473649292105, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8869763105861479, log_density = 25.18804704873961, hamiltonian_energy = -21.303323760225823, hamiltonian_energy_error = 0.04114174755771671, max_hamiltonian_energy_error = 0.3432656401629437, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 25.72140869778338, hamiltonian_energy = -24.62943724013688, hamiltonian_energy_error = -0.12946540774816384, max_hamiltonian_energy_error = -0.1873107341278626, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8378020864150925, log_density = 24.730626160208246, hamiltonian_energy = -23.409290755830366, hamiltonian_energy_error = 0.17980745057564107, max_hamiltonian_energy_error = 0.2388889767109248, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7125859822174884, log_density = 25.094447226676095, hamiltonian_energy = -20.324726076343293, hamiltonian_energy_error = 0.3568439530798919, max_hamiltonian_energy_error = 0.7074356482016455, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9471553778638874, log_density = 25.23785894874917, hamiltonian_energy = -22.962742877175668, hamiltonian_energy_error = -0.06200624321164483, max_hamiltonian_energy_error = -0.37957264161757465, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8645077516779124, log_density = 23.86750000562013, hamiltonian_energy = -23.043804997489445, hamiltonian_energy_error = 0.2812325581369173, max_hamiltonian_energy_error = 0.2812325581369173, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.986201424126286, log_density = 23.733062613205362, hamiltonian_energy = -22.047748881022372, hamiltonian_energy_error = -0.005037033065587337, max_hamiltonian_energy_error = -0.681255380536463, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9833397597200779, log_density = 25.026558101675604, hamiltonian_energy = -21.13244227599115, hamiltonian_energy_error = -0.3135155499612239, max_hamiltonian_energy_error = -0.5255644897292377, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9982679715554971, log_density = 26.31449518995223, hamiltonian_energy = -23.984901724613017, hamiltonian_energy_error = -0.22046654246146602, max_hamiltonian_energy_error = -0.5738105028055784, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9871328514658846, log_density = 27.233128464244178, hamiltonian_energy = -25.708346851413207, hamiltonian_energy_error = -0.21184105623340344, max_hamiltonian_energy_error = -0.21184105623340344, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9432115703451147, log_density = 26.666515238444532, hamiltonian_energy = -25.753287311656397, hamiltonian_energy_error = -0.029223869933879598, max_hamiltonian_energy_error = 0.11293816586342587, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.983067128839436, log_density = 26.880140909530112, hamiltonian_energy = -26.161397346474015, hamiltonian_energy_error = 0.02370986685962606, max_hamiltonian_energy_error = 0.03789573459239293, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9256761957098253, log_density = 27.185250754776302, hamiltonian_energy = -23.625053317934974, hamiltonian_energy_error = -0.042396604133454474, max_hamiltonian_energy_error = 0.17349946207512446, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.43921872227109576, log_density = 27.185250754776302, hamiltonian_energy = -18.82760217400436, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 1.03436563462472, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9191344338301423, log_density = 25.21593895032627, hamiltonian_energy = -24.203146892180094, hamiltonian_energy_error = 0.13271204192452046, max_hamiltonian_energy_error = 0.17169263121452616, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9220113954351753, log_density = 26.694158757659338, hamiltonian_energy = -23.63063484078446, hamiltonian_energy_error = -0.16111004587461153, max_hamiltonian_energy_error = 0.25460177367812165, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9930470182125477, log_density = 27.527016888974252, hamiltonian_energy = -26.170951771238457, hamiltonian_energy_error = -0.048600563040018585, max_hamiltonian_energy_error = -0.048600563040018585, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5882283295404648, log_density = 20.098445513124506, hamiltonian_energy = -19.13140148290889, hamiltonian_energy_error = 0.5515100714093393, max_hamiltonian_energy_error = 0.5952465730285148, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.911230098737248, log_density = 21.79898850210894, hamiltonian_energy = -14.612129852141253, hamiltonian_energy_error = -0.08040920547043306, max_hamiltonian_energy_error = 0.581736522165814, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.911924698372634, log_density = 25.074858902999516, hamiltonian_energy = -20.220329063231453, hamiltonian_energy_error = -0.03985881330470065, max_hamiltonian_energy_error = 0.24044863639113245, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9689258681499524, log_density = 24.130428464971047, hamiltonian_energy = -21.63706977796875, hamiltonian_energy_error = -0.1525717306273613, max_hamiltonian_energy_error = -0.1525717306273613, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8222920765568135, log_density = 22.101109319504843, hamiltonian_energy = -20.887092268237986, hamiltonian_energy_error = 0.37330920806435586, max_hamiltonian_energy_error = 0.4099958929396621, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 24.66210794493503, hamiltonian_energy = -20.849163092160182, hamiltonian_energy_error = -0.1028066520873665, max_hamiltonian_energy_error = -0.2981061418611475, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9024163925577214, log_density = 24.76112000140224, hamiltonian_energy = -22.40193751873894, hamiltonian_energy_error = 0.09248413102092456, max_hamiltonian_energy_error = 0.30527278136580804, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9956523745903841, log_density = 25.969201478131232, hamiltonian_energy = -23.669511287023198, hamiltonian_energy_error = -0.03285249013913827, max_hamiltonian_energy_error = -0.2695523087856557, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7705317029526515, log_density = 25.71398684981106, hamiltonian_energy = -23.856514273232442, hamiltonian_energy_error = 0.14394251499495425, max_hamiltonian_energy_error = 0.42870174264153604, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9977195225587902, log_density = 27.0946472855551, hamiltonian_energy = -25.409951567342972, hamiltonian_energy_error = -0.08032100225504735, max_hamiltonian_energy_error = -0.08032100225504735, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.822737550912158, log_density = 25.546872511677265, hamiltonian_energy = -23.29982892084837, hamiltonian_energy_error = 0.25735938521932766, max_hamiltonian_energy_error = 0.25735938521932766, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.4767310164671909, log_density = 25.546872511677265, hamiltonian_energy = -18.402175526895284, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 1.1935212020333452, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9545643833325964, log_density = 25.245368791043898, hamiltonian_energy = -22.97435992408554, hamiltonian_energy_error = -0.030180449682003285, max_hamiltonian_energy_error = 0.1064467935161062, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9689896899481294, log_density = 26.218613947485842, hamiltonian_energy = -23.448646447285448, hamiltonian_energy_error = -0.02741473346882728, max_hamiltonian_energy_error = -0.14006926091317595, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9795267872780611, log_density = 26.520904256668693, hamiltonian_energy = -24.748315907526816, hamiltonian_energy_error = 0.022825000453345012, max_hamiltonian_energy_error = 0.07049813862114007, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9728410856129968, log_density = 26.156664614606427, hamiltonian_energy = -23.082822733433126, hamiltonian_energy_error = -0.03154273575163913, max_hamiltonian_energy_error = -0.09205178975882689, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.962503037837944, log_density = 26.53435716650067, hamiltonian_energy = -22.27686394140316, hamiltonian_energy_error = -0.08279372473779745, max_hamiltonian_energy_error = 0.15615708819589358, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8077346524830359, log_density = 24.807268788423894, hamiltonian_energy = -21.152872152112526, hamiltonian_energy_error = -0.006925939441128293, max_hamiltonian_energy_error = 0.38753913712690746, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7125888851194241, log_density = 24.62305876624049, hamiltonian_energy = -20.448546562775338, hamiltonian_energy_error = 0.11828407909657912, max_hamiltonian_energy_error = 0.557894406190794, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9984258235099807, log_density = 26.64853918684559, hamiltonian_energy = -24.36709619489468, hamiltonian_energy_error = -0.15404613453854665, max_hamiltonian_energy_error = -0.21189170861615736, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8483080779922775, log_density = 25.718305848938, hamiltonian_energy = -23.938866983603862, hamiltonian_energy_error = 0.13892257215960413, max_hamiltonian_energy_error = 0.3404692891303469, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 26.569445832664307, hamiltonian_energy = -25.252296256066845, hamiltonian_energy_error = -0.06560352311499074, max_hamiltonian_energy_error = -0.1435091678977436, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8841998305582655, log_density = 25.79260548752029, hamiltonian_energy = -20.910752658193665, hamiltonian_energy_error = 0.0804544618539218, max_hamiltonian_energy_error = 0.3890900904994723, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9429668786802797, log_density = 24.736038207704024, hamiltonian_energy = -24.160818662068234, hamiltonian_energy_error = 0.1951386805004809, max_hamiltonian_energy_error = 0.1951386805004809, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9468135965332305, log_density = 24.842785537580244, hamiltonian_energy = -23.06049388625126, hamiltonian_energy_error = 0.06497700717819299, max_hamiltonian_energy_error = -0.30323407627074417, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9940421969336114, log_density = 26.724506316649958, hamiltonian_energy = -23.701723316369367, hamiltonian_energy_error = -0.26296636529412964, max_hamiltonian_energy_error = -0.26296636529412964, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9934508212566201, log_density = 26.908201359333127, hamiltonian_energy = -25.941380999782034, hamiltonian_energy_error = -0.030790974023982898, max_hamiltonian_energy_error = -0.045632647823119044, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9652957804814474, log_density = 25.64751652748702, hamiltonian_energy = -24.128334357112422, hamiltonian_energy_error = 0.05656557914873517, max_hamiltonian_energy_error = 0.09070122940276448, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9745780303706479, log_density = 25.784074427323652, hamiltonian_energy = -24.33988018186851, hamiltonian_energy_error = 0.05658942613620255, max_hamiltonian_energy_error = 0.08956185647211612, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9691926121745047, log_density = 25.166454494102076, hamiltonian_energy = -23.24193084970301, hamiltonian_energy_error = -0.12428457346068456, max_hamiltonian_energy_error = 0.20235337311077828, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8538739815173135, log_density = 25.123421585790055, hamiltonian_energy = -21.128848701165204, hamiltonian_energy_error = 0.11003865624053688, max_hamiltonian_energy_error = 0.31404027053364914, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9154184184234566, log_density = 25.27818058048898, hamiltonian_energy = -22.0913819433388, hamiltonian_energy_error = 0.01540378488591898, max_hamiltonian_energy_error = 0.335136259539361, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.938524075240925, log_density = 25.071443969115297, hamiltonian_energy = -23.5752432249434, hamiltonian_energy_error = -0.004932875495125444, max_hamiltonian_energy_error = 0.23923733496252098, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9870517483116681, log_density = 24.331990330582123, hamiltonian_energy = -23.492578175614444, hamiltonian_energy_error = 0.14302512604021445, max_hamiltonian_energy_error = -0.27921185750842525, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7384214090785939, log_density = 23.320744768819573, hamiltonian_energy = -20.905618643318444, hamiltonian_energy_error = 0.23614462808565406, max_hamiltonian_energy_error = 0.510661194924527, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9928640351371375, log_density = 24.056119473093002, hamiltonian_energy = -20.984622777898103, hamiltonian_energy_error = -0.3300778961917459, max_hamiltonian_energy_error = -0.3300778961917459, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.978828361067326, log_density = 23.529050182397356, hamiltonian_energy = -20.135432330664408, hamiltonian_energy_error = -0.05088469929804518, max_hamiltonian_energy_error = -0.19770709204514603, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9682883679179797, log_density = 26.01116226762445, hamiltonian_energy = -20.843846925421246, hamiltonian_energy_error = -0.10941159521317445, max_hamiltonian_energy_error = -0.2953641156661675, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9435925664504029, log_density = 25.137457945648514, hamiltonian_energy = -23.439627527255734, hamiltonian_energy_error = 0.09289671559786683, max_hamiltonian_energy_error = 0.2541665797064425, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9451124340118989, log_density = 25.098738239500214, hamiltonian_energy = -23.05785286431048, hamiltonian_energy_error = 0.16181538532382334, max_hamiltonian_energy_error = 0.28622557253713055, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8355589785782274, log_density = 23.690297256085827, hamiltonian_energy = -22.149509906289975, hamiltonian_energy_error = 0.2751719477884471, max_hamiltonian_energy_error = 0.5976770228353026, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.935215887103007, log_density = 24.332740862358623, hamiltonian_energy = -22.116669303585535, hamiltonian_energy_error = -0.328950357493202, max_hamiltonian_energy_error = -0.5155831883566577, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 24.922502324368374, hamiltonian_energy = -22.41172479878798, hamiltonian_energy_error = -0.26352069711236226, max_hamiltonian_energy_error = -0.3034802599650206, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8725391593899297, log_density = 25.977376666451498, hamiltonian_energy = -22.699535860856333, hamiltonian_energy_error = -0.7325233304916559, max_hamiltonian_energy_error = -0.7325233304916559, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9363863770681713, log_density = 24.99529612773177, hamiltonian_energy = -24.058202469873365, hamiltonian_energy_error = 0.11763169391297623, max_hamiltonian_energy_error = 0.13228431983970523, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7914448655187089, log_density = 21.87547744782288, hamiltonian_energy = -21.349972375029445, hamiltonian_energy_error = 0.5778851624440513, max_hamiltonian_energy_error = 0.5778851624440513, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 25.60246114105686, hamiltonian_energy = -21.939084456803528, hamiltonian_energy_error = -0.5362646459896112, max_hamiltonian_energy_error = -0.5362646459896112, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9113480831261538, log_density = 25.04721450644136, hamiltonian_energy = -22.180004530716968, hamiltonian_energy_error = -0.08497423223252198, max_hamiltonian_energy_error = -0.22966249865570632, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8455647320006426, log_density = 23.613158438405403, hamiltonian_energy = -22.688293394828474, hamiltonian_energy_error = 0.23858424187381289, max_hamiltonian_energy_error = 0.2732575923079352, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9437895659581201, log_density = 22.919732817054317, hamiltonian_energy = -20.156638135327114, hamiltonian_energy_error = -0.013476106556474576, max_hamiltonian_energy_error = 0.18842212170478234, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8120008445938491, log_density = 21.843198236591824, hamiltonian_energy = -19.646444745948116, hamiltonian_energy_error = 0.19899051860110362, max_hamiltonian_energy_error = 0.32063863890896016, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9136159341878605, log_density = 22.88516902238415, hamiltonian_energy = -20.086441684637315, hamiltonian_energy_error = -0.2924312636711299, max_hamiltonian_energy_error = -0.2924312636711299, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9628054165111289, log_density = 23.160654537005897, hamiltonian_energy = -20.957515547289066, hamiltonian_energy_error = -0.03501629625125702, max_hamiltonian_energy_error = -0.23248913630802193, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9112934838881833, log_density = 25.878398937837396, hamiltonian_energy = -19.281110390139006, hamiltonian_energy_error = -0.021477669171591884, max_hamiltonian_energy_error = 0.17042933545189953, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9365321747459914, log_density = 24.918661791259424, hamiltonian_energy = -24.240278994338656, hamiltonian_energy_error = 0.14154071308025706, max_hamiltonian_energy_error = 0.15303603660454002, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8488359246491598, log_density = 24.336038992714418, hamiltonian_energy = -23.094121634554256, hamiltonian_energy_error = 0.27907255019146504, max_hamiltonian_energy_error = 0.38677437783924873, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9819362787198881, log_density = 24.960968396034986, hamiltonian_energy = -22.81149809843804, hamiltonian_energy_error = 0.02087524396786833, max_hamiltonian_energy_error = -0.32352876335743375, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7952865120163484, log_density = 20.70944113175445, hamiltonian_energy = -19.396345392002303, hamiltonian_energy_error = 0.7536656997436744, max_hamiltonian_energy_error = 0.7536656997436744, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.22643727591028479, log_density = 24.354211397268642, hamiltonian_energy = -14.32504467710092, hamiltonian_energy_error = 0.275948195028473, max_hamiltonian_energy_error = 2.1574947727143687, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9483465152053859, log_density = 25.005702369175353, hamiltonian_energy = -21.32233432354847, hamiltonian_energy_error = -0.13976213348364297, max_hamiltonian_energy_error = -0.24595292416704595, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 26.529737629450366, hamiltonian_energy = -24.532233737226093, hamiltonian_energy_error = -0.105370065222818, max_hamiltonian_energy_error = -0.11046007513818168, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7880828821277684, log_density = 26.595979152456458, hamiltonian_energy = -23.415312734307886, hamiltonian_energy_error = -0.1390445523294801, max_hamiltonian_energy_error = 0.4558881150775953, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8233432102590987, log_density = 25.16291226307026, hamiltonian_energy = -24.521961111468144, hamiltonian_energy_error = 0.26220145215863155, max_hamiltonian_energy_error = 0.3394576401501048, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9763366453887512, log_density = 24.76779944814612, hamiltonian_energy = -23.045197847868273, hamiltonian_energy_error = -0.10496259572515143, max_hamiltonian_energy_error = -0.2188242229844768, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 24.921325423925865, hamiltonian_energy = -24.35054507280486, hamiltonian_energy_error = -0.009613615385298147, max_hamiltonian_energy_error = -0.14760937542711616, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8953902656378604, log_density = 24.13160373672922, hamiltonian_energy = -22.220910571465012, hamiltonian_energy_error = 0.239966429697148, max_hamiltonian_energy_error = 0.25459536339543476, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.4473449181922056, log_density = 23.00215002018484, hamiltonian_energy = -18.758701059012715, hamiltonian_energy_error = 0.029353290173222746, max_hamiltonian_energy_error = 1.1236165057391503, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9355651836163518, log_density = 23.063100119909905, hamiltonian_energy = -20.429423013484925, hamiltonian_energy_error = 0.035870592953887837, max_hamiltonian_energy_error = -0.21735679469663083, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9415467785205835, log_density = 24.954728813019457, hamiltonian_energy = -19.947844343761552, hamiltonian_energy_error = 0.05400388769333375, max_hamiltonian_energy_error = -0.2964427355380508, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8546017513677313, log_density = 27.383950147802803, hamiltonian_energy = -22.973053067522077, hamiltonian_energy_error = -0.8555115859539129, max_hamiltonian_energy_error = -0.8555115859539129, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9295122250499225, log_density = 26.34972340873326, hamiltonian_energy = -25.19917683540571, hamiltonian_energy_error = 0.023313839150578275, max_hamiltonian_energy_error = 0.1432872982171176, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9410781432522943, log_density = 25.907679284478007, hamiltonian_energy = -25.16232634939956, hamiltonian_energy_error = 0.0781173163549802, max_hamiltonian_energy_error = 0.138737941806518, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8562162517572328, log_density = 25.558813617988825, hamiltonian_energy = -22.99442649130068, hamiltonian_energy_error = 0.11626527035349099, max_hamiltonian_energy_error = 0.3145859697619926, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9331451328847495, log_density = 24.962751475227954, hamiltonian_energy = -24.187529217530102, hamiltonian_energy_error = 0.023175560070480827, max_hamiltonian_energy_error = 0.19559591076815863, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7929983056489391, log_density = 24.600985247000427, hamiltonian_energy = -22.247062016084914, hamiltonian_energy_error = 0.0005747870879488914, max_hamiltonian_energy_error = 0.5427989995855818, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.7812543215974148, log_density = 22.624103675202775, hamiltonian_energy = -20.266447343991782, hamiltonian_energy_error = 0.2152554901114705, max_hamiltonian_energy_error = 0.5601446360820503, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 23.19141508343557, hamiltonian_energy = -20.523429136255313, hamiltonian_energy_error = -0.07835185747631357, max_hamiltonian_energy_error = -0.7182681806389475, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6374837329159689, log_density = 27.041874330749682, hamiltonian_energy = -20.337002424425606, hamiltonian_energy_error = -0.46846090248776306, max_hamiltonian_energy_error = 1.390781790727523, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9794456198939484, log_density = 26.827409604977227, hamiltonian_energy = -26.416880339370454, hamiltonian_energy_error = 0.017131353022136864, max_hamiltonian_energy_error = 0.05255174307991339, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9531757149275888, log_density = 25.91745651763894, hamiltonian_energy = -25.361131092319066, hamiltonian_energy_error = 0.12146081021080946, max_hamiltonian_energy_error = 0.12146081021080946, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 24.944251513508085, hamiltonian_energy = -24.370938838372062, hamiltonian_energy_error = -0.00973718416560132, max_hamiltonian_energy_error = -0.1656098445958918, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9445550135664585, log_density = 26.27177004896464, hamiltonian_energy = -24.020740922987827, hamiltonian_energy_error = -0.10849727293718558, max_hamiltonian_energy_error = 0.14647033263780074, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9387983061131325, log_density = 24.820927546732555, hamiltonian_energy = -23.08754340378378, hamiltonian_energy_error = 0.06680936285033923, max_hamiltonian_energy_error = 0.13349386102373728, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8317785331435716, log_density = 25.521280885599854, hamiltonian_energy = -20.84707091757594, hamiltonian_energy_error = -0.0019666367914510374, max_hamiltonian_energy_error = 0.4552138832910586, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9882884359415115, log_density = 26.198635596518518, hamiltonian_energy = -23.809182887172884, hamiltonian_energy_error = -0.05717507925572107, max_hamiltonian_energy_error = -0.19510798519723238, tree_depth = 3, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.8140628003950362, log_density = 24.780847832801346, hamiltonian_energy = -22.9477029387255, hamiltonian_energy_error = 0.05136231451295359, max_hamiltonian_energy_error = 0.5296732353389366, tree_depth = 4, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9081399474608995, log_density = 25.659961979644926, hamiltonian_energy = -21.156787223827198, hamiltonian_energy_error = -0.025407468824411694, max_hamiltonian_energy_error = 0.29961280346320507, tree_depth = 2, numerical_error = false, step_size = 0.14121099287243416, nom_step_size = 0.14121099287243416, is_adapt = false)])","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Inspect posterior distribution over hyperparameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"hypers = map(unpack, samples);\nh_l1 = histogram(getindex.(hypers, :l1); label=\"l1\");\nh_l2 = histogram(getindex.(hypers, :l2); label=\"l2\");\nh_s1 = histogram(getindex.(hypers, :s1); label=\"s1\");\nh_s2 = histogram(getindex.(hypers, :s2); label=\"s2\");\nplot(h_l1, h_l2, h_s1, h_s2; layout=(2, 2))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As expected, the sampler converges to the posterior distribution quickly. One could combine this code with that from the previous sections to make predictions under the posterior over the hyperparameters.","category":"page"},{"location":"examples/getting_started/#Conclusion","page":"Getting Started","title":"Conclusion","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you now know how to fit GPs using Stheno.jl, and to investigate their posterior distributions. It's also straightforward to utilise Stheno.jl inside probabilistic programming frameworks like Soss.jl and Turing.jl (see examples folder).","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Stheno.jl","page":"Home","title":"Stheno.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Stheno.jl is a package for probabilistic programming with Gaussian processes.","category":"page"},{"location":"internals/#Interfaces","page":"Internals","title":"Interfaces","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The primary objects in Stheno are some special subtypes of AbstractGP. There are three primary concrete subtypes of AbstractGP:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP: an atomic Gaussian process given by wrapping an AbstractGP.\nCompositeGP: a Gaussian process composed of other WrappedGPs and CompositeGPs, whose properties are determined recursively from the GPs of which it is composed.\nGaussianProcessProbabilisticProgramme / GPPP: a Gaussian process comprising WrappedGPs and CompositeGPs. This is the primary piece of functionality that users should interact with.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This documentation provides the information necessary to understand the internals of Stheno, and to extend it with custom functionality.","category":"page"},{"location":"internals/#AbstractGP","page":"Internals","title":"AbstractGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP and CompositeGP implement the AbstractGPs.jl API. Please refer to the AbstractGPs.jl docs for more info on this.","category":"page"},{"location":"internals/#diag-methods","page":"Internals","title":"diag methods","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It is crucial for pseudo-point methods, and for the computation of marginal statistics at a reasonable scale, to be able to compute the diagonal of a given covariance matrix in linear time in the size of its inputs. This, in turn, necessitates that the diagonal of a given cross-covariance matrix can also be computed efficiently as the evaluation of covariance matrices often rely on the evaluation of cross-covariance matrices. As such, we have the following functions in addition to the AbstractGPs API implemented for WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Function Brief description\nvar(f, x) diag(cov(f, x))\nvar(f, x, x′) diag(cov(f, x, x′))\nvar(f, f′, x, x′) diag(cov(f, f′, x, x′))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The second and third rows of the table only make sense when length(x) == length(x′), of course.","category":"page"},{"location":"internals/#WrappedGP","page":"Internals","title":"WrappedGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"We can construct a WrappedGP in the following manner:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = wrap(GP(m, k), gpc)\n","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"where m is its MeanFunction, k its Kernel. gpc is a GPC object that handles some book-keeping, and is discussed in more depth below.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The AbstractGP interface is implemented for WrappedGPs in terms of the AbstractGP that they wrap. So if you want a particular behaviour, just make sure that the AbstractGP that you wrap has the functionality you want.","category":"page"},{"location":"internals/#Aside:-Example-Kernel-implementation","page":"Internals","title":"Aside: Example Kernel implementation","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It's straightforward to implement a new kernel yourself: simply following the instructions in KernelFunctions.jl and it'll work fine with GPs in Stheno.jl.","category":"page"},{"location":"internals/#GPC","page":"Internals","title":"GPC","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"This book-keeping object doesn't matter from a user's perspective but, unfortunately, we currently expose it to users. Fortunately, it's straightforward to work with. Say you wish to construct a collection of processes:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS WON'T WORK\nf = GP(mf, kf)\ng = GP(mg, kg)\nh = f + g\n# THIS WON'T WORK","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"You should write","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS GOOD. PLEASE DO THIS\ngpc = GPC()\nf = wrap(GP(mf, kf), gpc)\ng = wrap(GP(mg, kg), gpc)\nh = f + g\n# THIS IS GOOD. PLEASE DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The rule is simple: when constructing GPs that you plan to make interact later in your program, construct them using the same gpc object. For example, DON'T do the following:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS BAD. PLEASE DON'T DO THIS\nf = wrap(GP(mf, kf), GPC())\ng = wrap(GP(mg, kg), GPC())\nh = f + g\n# THIS IS BAD. PLEASE DON'T DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The mistake here is to construct a separate GPC object for each GP. Hopefully, the code errors, but might yield incorrect results.","category":"page"},{"location":"internals/#CompositeGP","page":"Internals","title":"CompositeGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"CompositeGPs are constructed as affine transformations of CompositeGPs and GPs. We describe the implemented transformations below.","category":"page"},{"location":"internals/#Addition","page":"Internals","title":"Addition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Given AbstractGPs f and g, we define","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f + g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"to be the CompositeGP sastisfying h(x) = f(x) + g(x) for all x.","category":"page"},{"location":"internals/#Multiplication","page":"Internals","title":"Multiplication","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Multiplication of AbstractGPs is undefined since the product of two Gaussian random variables is not itself Gaussian. However, we can scale an AbstractGP by either a constant or (deterministic) function.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = c * f\nh = sin * f","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"will both work, and produce the result that h(x) = c * f(x) or h(x) = sin(x) * f(x).","category":"page"},{"location":"internals/#Composition","page":"Internals","title":"Composition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f ∘ g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for some deterministic function g is the composition of f with g. i.e. h(x) = f(g(x)).","category":"page"},{"location":"internals/#cross","page":"Internals","title":"cross","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = cross([f, g])","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for WrappedGPs and CompositeGPs f and g. Think of cross as having stacked f and g together, so that you can work with their joint.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"For example, if you wanted to sample jointly from f and g at locations x_f and x_g, you could write something like","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"fg = cross([f, g])\nx_fg = BlockData([x_f, x_g])\nrand(fg(x_fg, 1e-6))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This particular function isn't part of the user-facing API because it isn't generally needed. It is, however, used extensively in the implementation of the GaussianProcessProbabilisticProgramme.","category":"page"},{"location":"internals/#GPPP","page":"Internals","title":"GPPP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The GaussianProcessProbabilisticProgramme is another AbstractGP which enables provides a thin layer of convenience functionality on top of WrappedGPs and CompositeGPs, and is the primary way in which it is intended that users will interact with this package.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP like this","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"is equivalent to manually constructing a GPPP using WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"gpc = GPC()\nf1 = wrap(GP(SEKernel()), gpc)\nf2 = wrap(GP(SEKernel()), gpc)\nf3 = f1 + f2\nf = Stheno.GPPP((f1=f1, f2=f2, f3=f3), gpc)","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"If you take a look at the gaussian_process_probabilistic_programming.jl source, you'll see that it's essentially just the above, and an implementation of the AbstractGPs API on top of a GPPP.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP is a single GP on an extended input domain: (Image: )","category":"page"}]
}
