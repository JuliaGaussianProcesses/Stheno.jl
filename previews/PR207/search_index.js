var documenterSearchIndex = {"docs":
[{"location":"api/#Public-API","page":"API","title":"Public API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = Stheno","category":"page"},{"location":"api/#GPPP","page":"API","title":"GPPP","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Core functionality for working with GPPPs.","category":"page"},{"location":"api/","page":"API","title":"API","text":"@gppp\nGPPPInput\nBlockData\nsplit","category":"page"},{"location":"api/#Stheno.@gppp","page":"API","title":"Stheno.@gppp","text":"@gppp(model_expression)\n\nConstruct a GaussianProcessProbabilisticProgramme (GPPP) from a code snippet.\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = GPPPInput(:f3, randn(5))\n\ny = rand(f(x, 0.1))\n\nlogpdf(f(x, 0.1), y) ≈ elbo(f(x, 0.1), y, f(x, 1e-9))\n\n# output\n\ntrue\n\n\n\n\n\n","category":"macro"},{"location":"api/#Stheno.GPPPInput","page":"API","title":"Stheno.GPPPInput","text":"GPPPInput(p, x::AbstractVector)\n\nAn collection of inputs for a GPPP. p indicates which process the vector x should be extracted from. The required type of p is determined by the type of the keys in the GPPP indexed.\n\njulia> x = [1.0, 1.5, 0.3];\n\njulia> v = GPPPInput(:a, x)\n3-element GPPPInput{Symbol, Float64, Vector{Float64}}:\n (:a, 1.0)\n (:a, 1.5)\n (:a, 0.3)\n\njulia> v isa AbstractVector{Tuple{Symbol, Float64}}\ntrue\n\njulia> v == map(x_ -> (:a, x_), x)\ntrue\n\n\n\n\n\n","category":"type"},{"location":"api/#Stheno.BlockData","page":"API","title":"Stheno.BlockData","text":"BlockData{T, TV<:AbstractVector{T}, TX<:AbstractVector{TV}} <: AbstractVector{T}\n\nA strictly ordered collection of AbstractVectors, representing a ragged array of data.\n\nVery useful when working with GPPPs. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\n# Specify a `BlockData` set that can be used to index into\n# the `f2` and `f3` processes in `f`.\nx = BlockData(\n    GPPPInput(:f2, randn(4)),\n    GPPPINput(:f3, randn(3)),\n)\n\n# Index into `f` at the input.\nf(x)\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.split","page":"API","title":"Base.split","text":"Base.split(x::BlockData, Y::AbstractVecOrMat)\n\nConvenience functionality to make working with the output of operations on GPPPs easier. Splits up the rows of Y according to the sizes of the data in x.\n\njulia> Y = vcat(randn(5, 3), randn(4, 3));\n\njulia> x = BlockData(randn(5), randn(4));\n\njulia> Y1, Y2 = split(x, Y);\n\njulia> Y1 == Y[1:5, :]\ntrue\n\njulia> Y2 == Y[6:end, :]\ntrue\n\nWorks with any BlockData, so blocks can e.g. be GPPPInputs. This is particularly helpful for working with the output from rand and marginals from a GPPP indexed at BlockData. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = BlockData(GPPPInput(:f2, randn(3)), GPPPInput(:f3, randn(4)))\ny = rand(f(x))\ny2, y3 = split(x, y)\n\nFunctionality also works with any AbstractVector.\n\n\n\n\n\n","category":"function"},{"location":"api/#Building-GPPPs","page":"API","title":"Building GPPPs","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"If in doubt about what any of these transformations can do, play around with them!","category":"page"},{"location":"api/","page":"API","title":"API","text":"+\n*\nstretch\nperiodic\nshift\nselect","category":"page"},{"location":"api/#Base.:+","page":"API","title":"Base.:+","text":"+(fa::AbstractGP, fb::AbstractGP)\n\nProduces an AbstractGP f satisfying f(x) = fa(x) + fb(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.:*","page":"API","title":"Base.:*","text":"*(f, g::AbstractGP)\n\nProduce an AbstractGP h satisfying to h(x) = f(x) * g(x), for some deterministic function f.\n\nIf f isa Real, then h(x) = f * g(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.stretch","page":"API","title":"Stheno.stretch","text":"stretch(f::AbstractGP, l::Union{AbstractVecOrMat{<:Real}, Real})\n\nThis is the primary mechanism by which to introduce length scales to your programme.\n\nIf l isa Real or l isa AbstractMatrix{<:Real}, stretch(f, l)(x) == f(l * x) for any input x. In the l isa Real case, this is equivalent to scaling the length scale by 1 / l.\n\nl isa AbstractVector{<:Real} is equivalent to stretch(f, Diagonal(l)).\n\nEquivalent to f ∘ Stretch(l).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.periodic","page":"API","title":"Stheno.periodic","text":"periodic(g::AbstractGP, f::Real)\n\nProduce an AbstractGP with period f.\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.shift","page":"API","title":"Stheno.shift","text":"shift(f::AbstractGP, a::Real)\nshift(f::AbstractGP, a::AbstractVector{<:Real})\n\nReturns the GP g given by g(x) = f(x - a)\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.select","page":"API","title":"Stheno.select","text":"select(f::AbstractGP, idx)\n\nSelect the dimensions of the input to f given by idx.\n\n\n\n\n\n","category":"function"},{"location":"input_types/#Input-Types","page":"Input Types","title":"Input Types","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Stheno enables the user to handle any type of input domain they wish and provides a common API that users must implement when considering a new way of representing input data to ensure that the package knows how to handle them appropriately.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"This interface has now been adopted throughout the JuliaGaussianProcesses ecosystem.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Discussed below is this interface's core assumptions, a detailed account of a couple of important concrete input types.","category":"page"},{"location":"input_types/#The-Central-Assumption","page":"Input Types","title":"The Central Assumption","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"The central assumption made in all user-facing and internal functions is this: when a collection of inputs are required, they subtype AbstractVector. For example, x isa AbstractVector when indexing into a GP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f(x, σ²)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"or computing the covariance matrix associated with a kernel:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"kernelmatrix(SqExponentialKernel(), x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When computing the cross-covariance matrix between two GPs","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"cov(f, g, x_f, x_g)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_f and x_g must be AbstractVectors. All other operations involving collections of inputs have the same restrictions. Always AbstractVectors.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"For example, this means that when handling multi-dimensional inputs stored in a Matrix they must be wrapped so that the package knows to treat them as a vector — more on this in below in D-dimensional Euclidean Spaces.","category":"page"},{"location":"input_types/#Dimensional-Euclidean-Space","page":"Input Types","title":"1-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When constructing a GP whose domain is the real-line, for example when using a GP to solve some kind of time-series problem, it is sufficient to work with Vector{<:Real}s of inputs. As such, the following is completely valid:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"using Stheno: GPC\nf = wrap(GP(SqExponentialKernel()), GPC())\nx = randn(10)\nf(x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"It is also possible to work with other AbstractArrays that represent a vector of 1-dimensional points, e.g.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = range(-5.0, 5.0; length=100)\nf(x)","category":"page"},{"location":"input_types/#D-Dimensional-Euclidean-Space","page":"Input Types","title":"D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Many applications of interest involve more than a single input-dimension, such as spatio-temporal modeling or Machine Learning tasks. For these cases, we provide ColVecs <: AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"X_data = randn(5, 100)\nX = ColVecs(X_data)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"tells Stheno that it should treat each column of X_data as a vector-valued input. Phrased differently, X is an AbstractVector{T} where T <: Vector{<:Real}, which stores its elements in memory as a dense matrix. This approach has the advantage of making it completely explicit how Stheno treats a matrix of data, and also simplifies quite a bit of the internal machinery, as all vectors of inputs can be assumed to be a subtype of AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If, on the other hand, each row of X_data corresponds to a vector-valued input, use RowVecs(X_data).","category":"page"},{"location":"input_types/#Structure-in-D-Dimensional-Euclidean-Space","page":"Input Types","title":"Structure in D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Consider a rectilinear grid of points in D-dimensional Euclidean space. Such grids of points can be represented in a more memory-efficient manner than can arbitrarily locate sets of points. Moreover, this structure can be exploited to accelerate inference for certain types of problems dramatically. Other such examples exist e.g., uniform grids in N-dimensions, and can be exploited to more efficiently represent input data and to accelerate inference.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Work to exploit these kinds of structures is on-going at the time of writing and will be documented before merging.","category":"page"},{"location":"input_types/#GPPPInput-and-BlockData","page":"Input Types","title":"GPPPInput and BlockData","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"A GPPPInput is a special kind of AbstractVector, specifically designed for GPPPs. Given a GPPP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"a GPPPInput like","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_ = randn(5)\nx = GPPPInput(:f3, x_)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"applied to f","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"fx = f(x, 0.1)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"constructs a FiniteGP comprising f3 at x_. GPPPInput(:f2, x_) and GPPPInput(:f1, x_) are the analogues for f1 and f2.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If you wish to refer to multiple processes in f at the same time, use a BlockData. For example","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = BlockData(GPPPInput(:f2, x_), GPPPInput(:f3, x_))","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"would pull out a 10-dimensional FiniteGP, the first 5 dimensions being f2 at x_, the last 5 dimensions being f3 at x_.","category":"page"},{"location":"kernel_design/#Kernel-Design","page":"Kernel Design","title":"Kernel Design","text":"","category":"section"},{"location":"kernel_design/","page":"Kernel Design","title":"Kernel Design","text":"Please refer to KernelFunctions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"EditURL = \"https://github.com/JuliaGaussianProcesses/Stheno.jl/blob/master/examples/getting_started/script.jl\"","category":"page"},{"location":"examples/getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Here we document how to do some basic stuff, including learning and inference in kernel parameters, with Stheno.jl. To do this, we that makes use of a variety of packages from the Julia ecosystem. In particular, we'll make use of","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl to perform Bayesian inference in our model parameters,\nOptim.jl for point-estimates of our model parameters,\nParameterHandling.jl to make it easy to work with our model's parameters, and to ensure that it plays nicely with Optim and AdvancedHMC,\nZygote.jl to compute gradients.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This guide assumes that you know roughly what's going on conceptually with GPs. If you're new to Gaussian processes, an excellent introduction can be found in either this video lecture or this one.","category":"page"},{"location":"examples/getting_started/#Exact-Inference-in-a-GP-in-2-Minutes","page":"Getting Started","title":"Exact Inference in a GP in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This is only a slightly more interesting version of the first example on the README. It's slightly more interesting in that we give the kernels some learnable parameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Import the packages we'll need for this bit of the demo.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AbstractGPs\nusing LinearAlgebra\nusing Stheno\nusing Plots","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Short length-scale and small variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l1 = 0.4\ns1 = 0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Long length-scale and larger variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l2 = 5.0\ns2 = 1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Specify a GaussianProcessProbabilisticProgramme object, which is itself a GP built from other GPs.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f = @gppp let\n    f1 = s1 * stretch(GP(Matern52Kernel()), 1 / l1)\n    f2 = s2 * stretch(GP(SEKernel()), 1 / l2)\n    f3 = f1 + f2\nend;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Generate a sample from f3, one of the processes in f, at some random input locations. Add some iid observation noise, with zero-mean and variance 0.05.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"const x = GPPPInput(:f3, collect(range(-5.0, 5.0; length=100)));\nσ²_n = 0.02;\nfx = f(x, σ²_n);\nconst y = rand(fx);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Compute the log marginal likelihood of this observation, just because we can.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"logpdf(fx, y)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"27.46546531228713","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"fx should be thought of as \"f at x\", and is just as a multivariate Normal distribution, with zero mean and covariance matrix","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"heatmap(cov(f, x) + σ²_n * I)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As such samples can be drawn from it, and the log probability any particular value under it can be computed, in the same way that you would an MvNormal from Distributions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can visualise x and y with Plots.jl","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"plt = plot();\nscatter!(plt, x.x, y; color=:red, label=\"\");\ndisplay(plt)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"It's straightforward to compute the posterior over f:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior = posterior(fx, y);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior is another GP, the posterior over f given noisy observations y at inputs x.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The plotting recipes from AbstractGPs.jl can be utilised to easily print whichever component of the GPPP is needed.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"x_plot = range(-7.0, 7.0; length=1000);\nxp = GPPPInput(:f3, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp);\n    ribbon_scale=3, label=\"\", color=:blue, fillalpha=0.2, linewidth=2,\n)\nplot!(\n    plt, x_plot, rand(f_posterior(xp, 1e-9), 10);\n    samples=10, markersize=1, alpha=0.3, label=\"\", color=:blue,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you've built a simple GP probabilistic programme, performed inference in it, and looked at the posterior. We've only looked at one component of it though – we could look at others. Consider f2:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"xp2 = GPPPInput(:f2, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp2);\n    ribbon_scale=3, label=\"\", color=:red, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior(xp2, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:red,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-NelderMead-in-2-Minutes","page":"Getting Started","title":"Fit a GP with NelderMead in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Stheno.jl is slightly unusual in that it declines to provide a fit or train function. Why is this? In short, because there's really no need – the ecosystem now contains everything that is needed to easily do this yourself. By declining to insist on an interface, Stheno.jl is able to interact with a wide array of tools, that you can use in whichever way you please.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Optim requires that you provide an objective function with a single Vector{<:Real} parameter for most of its optimisers. We'll use ParameterHandling.jl to build one of these in a way that doesn't involve manually writing code to convert between a structured, human-readable, representation of our parameters (in a NamedTuple) and a Vector{Float64}.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"First, we'll put the model from before into a function:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function build_model(θ::NamedTuple)\n    return @gppp let\n        f1 = θ.s1 * stretch(GP(SEKernel()), 1 / θ.l1)\n        f2 = θ.s2 * stretch(GP(SEKernel()), 1 / θ.l2)\n        f3 = f1 + f2\n    end\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"build_model (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've assumed that the parameters will be provided as a NamedTuple, so let's build one and check that the model can be constructed:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\n\nθ = (\n    # Short length-scale and small variance.\n    l1 = positive(0.4),\n    s1 = positive(0.2),\n\n    # Long length-scale and larger variance.\n    l2 = positive(5.0),\n    s2 = positive(1.0),\n\n    # Observation noise variance -- we'll be learning this as well.\n    s_noise = positive(0.1),\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(l1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-0.9162907691270586, Bijectors.Exp{0}(), 1.4901161193847656e-8), s1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.6094379869399091, Bijectors.Exp{0}(), 1.4901161193847656e-8), l2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(1.6094379094538682, Bijectors.Exp{0}(), 1.4901161193847656e-8), s2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.490116130486996e-8, Bijectors.Exp{0}(), 1.4901161193847656e-8), s_noise = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-2.3025852420056685, Bijectors.Exp{0}(), 1.4901161193847656e-8))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've used ParameterHandling.jls positive constraint to ensure that all of the parameters remain positive during optimisation. Note that there's no magic here, and Optim knows nothing about positive. Rather, ParameterHandling knows how to make sure that Optim will optimise the log of the parameters which we want to be positive.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can make this happen with the following:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\nusing ParameterHandling: value, flatten\n\nθ_flat_init, unflatten = flatten(θ);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Concrete types used for clarity only.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"unpack = value ∘ unflatten;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now easily define a function which accepts the flat form of the parameters, and return the negative log marginal likelihood (nlml) of the parameters θ:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function nlml(θ::NamedTuple)\n    f = build_model(θ)\n    return -logpdf(f(x, θ.s_noise + 1e-6), y)\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"nlml (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can use any gradient-free optimisation technique from Optim.jl to find the parameters whose negative log marginal likelihood is locally minimal:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Optim\nresults = Optim.optimize(\n    nlml ∘ unpack,\n    θ_flat_init + randn(length(θ_flat_init)),\n    NelderMead(),\n)\nθ_opt = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Note that we just added some noise to the initial values to make the optimisation more interesting.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now use this to construct the posterior GP and look at the posterior in comparison to the true posterior with the known hyperparameters","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_opt = build_model(θ_opt);\nf_posterior_opt = posterior(f_opt(x, θ_opt.s_noise), y);\nms_opt = marginals(f_posterior_opt(xp));\nplot!(\n    plt, x_plot, mean.(ms_opt);\n    ribbon=3std.(ms_opt), label=\"\", color=:green, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_opt(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:green,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Of course, the exact posterior has not been recovered because the exact hyperparameters cannot be expected to be recovered given a finite amount of data over a finite width window.","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-BFGS-in-2-minutes","page":"Getting Started","title":"Fit a GP with BFGS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The BFGS algorithm is generally the preferred choice when optimising the hyperparameters of fairly simple GPs. It requires access to the gradient of our nlml function, which can be straightforwardly obtained via reverse-mode algorithmic differentiation, which is provided by Zygote.jl:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Zygote: gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This will probably take a while to get going as Zygote needs to compile.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"results = Optim.optimize(\n    nlml ∘ unpack,\n    θ->gradient(nlml ∘ unpack, θ)[1],\n    θ_flat_init + 0.1 * randn(length(θ_flat_init)),\n    BFGS(),\n    Optim.Options(\n        show_trace=true,\n    );\n    inplace=false,\n)\nθ_bfgs = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Iter     Function value   Gradient norm \n     0     2.936393e+00     3.229947e+01\n * time: 0.03252005577087402\n     1    -1.539747e+01     2.245847e+01\n * time: 1.547982931137085\n     2    -2.039241e+01     1.818139e+01\n * time: 1.5642690658569336\n     3    -2.274730e+01     1.643682e+01\n * time: 1.574720859527588\n     4    -2.571700e+01     1.147530e+01\n * time: 1.5851290225982666\n     5    -2.786517e+01     3.506539e+00\n * time: 1.5979700088500977\n     6    -2.878008e+01     2.158215e+00\n * time: 1.6084530353546143\n     7    -2.908993e+01     1.085361e+00\n * time: 1.6187899112701416\n     8    -2.912260e+01     3.507582e-01\n * time: 1.6290700435638428\n     9    -2.912926e+01     3.818287e-02\n * time: 1.657984972000122\n    10    -2.912936e+01     5.885896e-03\n * time: 1.668522834777832\n    11    -2.912937e+01     4.219359e-04\n * time: 1.678865909576416\n    12    -2.912937e+01     2.999115e-05\n * time: 1.6892039775848389\n    13    -2.912937e+01     5.732806e-07\n * time: 1.7006380558013916\n    14    -2.912937e+01     1.379108e-10\n * time: 1.711421012878418\n","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Once more visualising the results:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_bfgs = build_model(θ_bfgs);\nf_posterior_bfgs = posterior(f_bfgs(x, θ_bfgs.s_noise), y);\nms_bfgs = marginals(f_posterior_bfgs(xp));\nplot!(\n    plt, x_plot, mean.(ms_bfgs);\n    ribbon=3std.(ms_bfgs), label=\"\", color=:orange, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_bfgs(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:orange,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Notice that the two optimisers produce (almost) indistinguishable results.","category":"page"},{"location":"examples/getting_started/#Inference-with-NUTS-in-2-minutes","page":"Getting Started","title":"Inference with NUTS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl provides a state-of-the-art implementation of the No-U-Turns sampler, which we can use to perform approximate Bayesian inference in the hyperparameters of the GP. This is slightly longer than the previous examples, but it's all set up associated with AdvancedHMC, which is literally a copy-paste from that package's README:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AdvancedHMC, Zygote","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define the log marginal joint density function and its gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"ℓπ(θ_flat) = -nlml(unpack(θ_flat)) - 0.5 * sum(abs2, θ_flat)\nfunction ∂ℓπ∂θ(θ_flat)\n    lml, back = Zygote.pullback(ℓπ, θ_flat)\n    ∂θ_flat = first(back(1.0))\n    return lml, ∂θ_flat\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"∂ℓπ∂θ (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Sampling parameter settings","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"n_samples, n_adapts = 500, 20","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(500, 20)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perturb the initialisation a little bit.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"θ0_flat = θ_flat_init + 0.1 * randn(length(θ_flat_init))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"5-element Vector{Float64}:\n -0.8897894808891385\n -1.684158815416697\n  1.5215364451727655\n  0.0418845436489462\n -2.32432002018815","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define metric space, Hamiltonian, sampling method and adaptor","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"metric = DiagEuclideanMetric(5)\nh = Hamiltonian(metric, ℓπ, ∂ℓπ∂θ)\nint = Leapfrog(find_good_eps(h, θ0_flat))\nprop = NUTS{MultinomialTS, GeneralisedNoUTurn}(int)\nadaptor = StanHMCAdaptor(n_adapts, Preconditioner(metric), NesterovDualAveraging(0.8, int.ϵ))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"StanHMCAdaptor(\n    pc=WelfordVar,\n    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.4),\n    init_buffer=75, term_buffer=50, window_size=25,\n    state=window(76, -30), window_splits()\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perform inference.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"samples, stats = sample(h, prop, θ0_flat, n_samples, adaptor, n_adapts; progress=true)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"([[-0.8897894808891385, -1.684158815416697, 1.5215364451727655, 0.0418845436489462, -2.32432002018815], [-0.8897894808891385, -1.684158815416697, 1.5215364451727655, 0.0418845436489462, -2.32432002018815], [-1.8993821470578087, -1.661600319291823, 1.2355097566501891, -0.2439014803343184, -4.604360233506865], [-1.9535675896097038, -1.9040080626414688, 1.3503241584723402, -0.48470452641494377, -4.074015222545424], [-1.4637062309444069, -1.967037451472975, 1.5086481785021422, -0.3166331507151524, -3.873522529972016], [-1.1629182473610866, -1.5308719685574892, 1.47987726296831, -0.414702992494532, -4.0017205219290535], [-1.3764023605785125, -1.6902798537929733, 1.6480341263456122, 0.3594657355541353, -3.926216940380478], [-0.773104008736816, -1.6376155790473523, 1.968897103760222, 0.3342452025104682, -3.6723886184202015], [-0.5773650663897667, -1.6493654169898997, 1.6621708921559242, 0.4993502798074837, -3.5173189715504547], [-1.1210101896189122, -1.3421843887876606, 1.3734142908506828, 0.12502198904631368, -4.048926997331125], [-1.1210101896189122, -1.3421843887876606, 1.3734142908506828, 0.12502198904631368, -4.048926997331125], [-1.1710684343875686, -2.1002372717434095, 1.1480028678448937, -0.3536721978779753, -3.7709415232741965], [-1.202436892191646, -1.5965913907908498, 1.243211965621106, -0.6420146244819338, -4.011248609296544], [-1.6615764159743769, -2.0215398779664837, 1.5286404879117759, 0.08652265531676376, -3.8558695294350094], [-1.271490133791866, -1.5183557987337983, 1.4214092773205447, -0.4522291487288647, -3.9536468246055403], [-1.3057067289229078, -1.6412852165026037, 1.9063580597158385, 0.12549153212481615, -4.11917608368642], [-1.0175971061617943, -1.7026184974919507, 1.4141081139750429, 0.7554696980584731, -3.8846819918476956], [-0.9216133649067293, -1.3137764151815303, 1.4518442237128395, 0.6583038642436297, -3.871648614421575], [-1.0580159175553447, -1.399741450456887, 1.6815123653610895, 0.8481459221321559, -3.6412683332848776], [-0.925331800507749, -2.0552991135115537, 1.7986036322169843, 0.34638230347626847, -3.958316556284175], [-0.891576646028103, -2.095577061075522, 1.8451973711381784, 0.2591175974398513, -3.9388503933625922], [-1.1230119815801793, -1.9587332235441328, 1.5716429590396688, 0.6339336503432891, -3.8263544084831524], [-0.36892178024768646, -0.826774401996257, 1.7282862623549524, -0.1762037741091371, -3.7120417434732498], [-1.972291812814467, -1.8205318267884016, 1.607486297566819, 0.21396629985302468, -3.7357116642571158], [-1.4199740476356986, -1.9064688107250922, 1.5300988770735873, -0.10357576941176146, -4.389669744593644], [-1.1434400755917, -1.8517760729660255, 1.3440791084871195, 0.07225187400370399, -3.658204140251542], [-1.2980957142480303, -2.1333549465108854, 1.8098941874420862, -0.11271036484262835, -3.5754424972153407], [-1.1193360677483977, -1.4832130016354832, 1.1217504863559533, -0.28320659401814363, -4.007525011996269], [-1.4658342388257442, -1.9727983010921764, 1.860820000929006, 0.7953566280374151, -3.930060155699958], [-1.2790950413984103, -1.6381786819526245, 1.7737497455887044, 0.42240204555944705, -4.031910877764139], [-1.5966457080342316, -1.9259476792826302, 1.4457605757298, -0.26087624685496735, -4.024320524213011], [-0.7510769058104743, -1.6530451855937158, 1.3051024064118588, -0.20345287008879975, -3.6157248163809315], [-0.9163049920528779, -1.6559025921079367, 1.456086713741953, -0.03240420717162559, -3.7830400229366647], [-0.8165960553396032, -1.4432682068525802, 1.3566389261495322, -0.11261738252825135, -3.7878397241640887], [-0.8710759889049962, -1.202648374844551, 1.996280144994146, -0.2437042981819143, -3.9641818578881955], [-0.951468630384188, -1.0064541425302473, 2.0699721881531614, -0.4218248148552911, -3.939664045655192], [-1.401271722967318, -2.2016293101355884, 0.3551233285785914, -0.052817483524917136, -3.6995704094389787], [-1.44953811468157, -1.815535510087644, 1.9944684459177808, -0.04119284687005573, -3.5823443120680687], [-1.4069298295159727, -2.136139893155912, 2.069159498183042, -0.165758640229622, -3.407647082485554], [-1.2116561802151065, -1.4927240245467022, 1.0975027615544877, -0.12136948004239703, -4.035561327527814], [-0.8740532382680753, -1.581151478549046, 0.9973522415766121, -0.42003452703622884, -3.7127602125729178], [-1.5222326919475702, -1.6276330514517912, 1.6739852157222312, -0.09336724040015237, -4.140079647779661], [-1.3847017940092397, -1.7329370829751125, 1.763145918073442, 0.027041882083243124, -4.241225783472325], [-1.3005873908443388, -1.7091220903419506, 1.7212993855379264, 1.042839946691447, -3.5242650282682444], [-0.6409824215272207, -1.9862964484023253, 1.836038300969627, 0.9159171982236509, -3.862165978961915], [-0.8122782069838972, -1.5680701406509436, 1.814958493452277, 1.0436738513866846, -3.2474851315746998], [-0.6168139223490557, -1.7914094100855373, 1.6122923363534287, 0.9597844007045805, -3.475206996866839], [-0.8146188306544258, -1.99126936582905, 0.6376324972172465, -0.5466064074012904, -3.9331953321742787], [-1.259127537042372, -1.5197340184212111, 1.788074347529148, -0.02755451227900757, -3.808820931925759], [-1.3480747700785307, -1.944076259393574, 0.9987354354991911, -0.40790123280234125, -3.65555457025654], [-1.655579817631544, -1.8479139538410057, 0.9326870426561662, -0.47796804778473095, -4.125088611969034], [-1.3566367653401823, -2.0126988232623284, 1.8723293302785209, 0.2561763621698051, -3.9972161487640965], [-2.2137761187110523, -1.7079526225895407, 1.244370914480766, 0.1486898879673571, -4.355629332279948], [-2.143672502566878, -1.9819572724717118, 1.3611391436533355, 0.09776402040578802, -4.487306340978371], [-1.91378753955295, -1.6991100600790716, 1.454474043016763, -0.1860946134208739, -3.9138653859806807], [-1.5143627834961362, -1.9820694646608674, 1.540477960466733, -0.3696981504984473, -3.6427141042744733], [-1.5369111337796542, -1.6227519167334257, 1.6548606543167752, 0.074025150308965, -4.3287096995919], [-1.6620058579366206, -1.6639197633948544, 1.390770057816383, 0.5339630289355083, -3.8643248926370077], [-1.6060567291414272, -1.6994734581957045, 1.2672011899309041, 0.6219112858953868, -3.8733327495472327], [-1.7952789837349923, -1.7470956897940833, 1.8174692908387966, -0.5100692021197333, -3.991581150204377], [-1.4673450928944414, -1.837261287311831, 1.6019114105121264, -0.42591724055031915, -4.028565981951699], [-1.188315866364572, -1.7238821972579412, 1.602403357177478, 0.33448216352826154, -3.977612856781325], [-1.2416780810325296, -1.9432743972652426, 1.5933061694066963, 0.4902507490372223, -4.130712800752358], [-1.4447268252197225, -1.9369306424518886, 1.624230876799784, 0.007866949990938787, -4.032877848823804], [-1.720396856802998, -1.971174518619165, 1.403662563320049, -0.5068366312157017, -4.106944349408877], [-1.632190518176299, -1.9007953932269477, 1.4519826468926047, -0.385389733390883, -4.076049995058878], [-1.0561866741582093, -1.6301642203420124, 1.3742339378050423, -0.11811613172090928, -3.771201684768548], [-1.7367731778882238, -1.8446058180936198, 1.473801539193286, 0.4675237762386543, -4.0379850964756345], [-0.8341806356017342, -1.7166539689548042, 1.533879992309622, 0.04109799726212143, -3.8192044350606738], [-1.6682678949378444, -1.925983655555628, 1.7969847043292004, 0.5456208766865985, -4.059900204852062], [-1.4727529613708727, -2.0219082362164347, 1.6015417323653354, -0.23810699303780236, -3.705075107359363], [-1.3503322398643522, -1.6764681411432427, 1.8336470499344335, 0.6628209644859158, -3.955942161614308], [-1.5207758461442034, -1.5913240832203919, 1.715871780147747, 0.6377965713559836, -3.825279560323059], [-1.1523925579306464, -2.3661390096117993, 1.6217247725686517, 0.5770155167374325, -3.822876741253097], [-1.001702476699199, -1.7304630894392152, 1.772385711188259, -0.2694828597334537, -3.5248222024781546], [-0.9421036198300334, -1.8149284267959056, 1.9087712568654311, -0.43282938702297147, -3.8934455076910504], [-1.844694066712148, -1.9777900306136842, 0.9900728269045895, 0.13753818689254835, -4.08853803272616], [-1.7739737325113558, -1.7016674574004909, 0.9633450264090778, 0.13593578413435942, -4.334903824352942], [-1.7250668511200569, -1.7531635308225504, 1.007933664348709, -0.016357039598840745, -4.30330872992326], [-0.9552205561103533, -1.8589408588633, 0.7097318931913574, -0.037574233069980326, -3.6038206998817244], [-0.7521790633758824, -1.94479843729181, 1.0355000731338513, -0.02491279684971541, -3.6612635847424624], [-1.9823423693848232, -1.836633577985987, 1.9176823191618926, -0.04231194904724372, -4.333802720624952], [-1.5525274690039026, -1.574597403934906, 1.7590519897921748, 0.42637038390270354, -4.1517192908111475], [-1.3421092144395856, -1.9229153597464261, 1.4152288464511023, -0.19597937729616663, -3.671472446883189], [-1.156777095505371, -1.498237198138624, 1.462652118241706, -0.20084726345572415, -3.856527232258181], [-1.3403146867571816, -1.5719642533187883, 1.3662652040509555, -0.2915266084307018, -3.9111964653893114], [-1.4851593724378565, -1.8755570725533643, 1.3902131650121219, 0.3528802327000569, -3.987701269914899], [-0.6282831366330204, -1.212360487798577, 1.8042598037237962, 0.3500398457875237, -3.4894100492765987], [-1.4257659781401046, -2.008634832262341, 1.3166379609357384, -0.41708416036855434, -4.088999697153095], [-1.7887729930234886, -1.8792142743420006, 1.426696842611076, -0.19771516681786377, -3.8120523076296795], [-1.0832077156236493, -1.682971678751467, 1.3251548485356508, -0.06130343015611698, -3.6878898237565485], [-1.6152201509397695, -1.7847670857521265, 1.4216481925384807, 0.1585397587164216, -3.6853683951641556], [-1.3925926974492926, -2.0571374815667305, 1.8745361533721325, 0.2008731261957695, -4.177656730490579], [-1.6990734611767884, -1.8276329992996128, 1.7026099374753179, 0.05628407701973451, -4.117905584539498], [-1.1661238482041496, -1.7790576392917066, 1.1439157870020074, 0.33734458759558106, -3.839225458344997], [-1.3603379581903083, -1.6202248995718056, 2.0620436930294224, -0.027292312966291893, -3.7514008705363784], [-1.1668015963881682, -1.620032511489323, 1.4802761671173204, 0.4234655721253253, -4.2057505398739155], [-1.118767595838917, -1.8994237349311003, 1.6953687872686916, -0.05515468818985317, -4.038405574472775], [-1.4768930123998056, -1.9688543113049255, 1.4076808326857702, -0.0666879867720562, -3.776942583192949], [-1.4395148461496916, -1.7939978009744009, 1.2672853502120116, -0.051832581415159076, -4.282612896196555], [-0.697697190462899, -1.4657886475726947, 1.714184784325943, -0.06639314669659117, -3.8811790825847026], [-1.4096475613690236, -1.9391893908114677, 1.306171849464351, 0.057966610419612805, -4.152166102039595], [-1.8009499452701385, -1.8396096216263866, 1.2353993840777018, -0.07254034436442242, -4.1953369142458685], [-0.7240610172518067, -1.4529369563814778, 1.398048218934444, -0.23994958301291808, -3.774077584218718], [-0.7361924938611207, -1.164491750959271, 0.8775093488686752, -0.5946440682279542, -3.856466417278854], [-1.293908879690147, -1.9213560672641086, 1.2395247375549203, 0.23513449219894167, -3.901428831677423], [-1.484689831542239, -1.7972533923856349, 1.2785991656305127, 0.11938365951055396, -3.851389423979694], [-1.411039398765088, -1.8081127272526958, 1.2563944716833775, -0.5644325091774749, -3.974005314304628], [-1.0911477735705215, -2.1246754632346754, 1.6362648267738336, -0.7087584623520481, -3.9639731114021624], [-1.2702908124876255, -1.796068282202066, 1.2662906164835113, -0.8476916012143518, -3.635821582279686], [-1.2237311022872261, -1.6821021824506044, 1.2641599417507445, -0.04398956914471264, -3.928860248856166], [-1.1775679996205184, -1.7667196028758645, 0.9673439050250683, -0.5370686189054149, -3.7782334342619723], [-0.8936879417089174, -1.6371470173838305, 1.2380028474269025, 0.04376942532983755, -3.8268555657902077], [-1.2862091416538517, -1.5103113287022571, 1.2571671816980283, 0.02745280558283801, -3.88765878421955], [-1.3510491567218723, -1.7292381715124712, 1.9524363260490487, 0.5134208127579104, -3.926877288083081], [-1.566631599385535, -1.89332155634365, 1.4144213705963913, 0.32593999220012637, -4.0432619755129995], [-1.234565057509531, -1.8316645098788034, 2.136626360887969, 0.7709107291761237, -3.93628814495263], [-1.3423244469871634, -1.818250483819133, 1.3418633572406855, 0.061778143892698034, -4.139888385650358], [-1.52979499331246, -1.5037494823567792, 1.2621520839503821, 0.18762176308347603, -4.133992942852999], [-0.5528172801394775, -1.535661204999555, 1.3816026553924985, 0.4223946416947152, -3.6259805562673164], [-1.4664266919515039, -2.044733370820327, 1.9111655023676197, 0.05225150528871127, -3.8108808720047302], [-1.4710032512158644, -1.8993480002605498, 1.7497915601130458, 0.009027211243269238, -3.9208236288479767], [-1.38345869323963, -1.7389314993487006, 1.4277807317702922, 0.12057385687956801, -3.949724081655442], [-1.6170617502971893, -2.266711172116942, 1.3571141084933125, -0.7731858389987056, -3.572015816593444], [-1.3103901645711975, -1.789712184939866, 1.3996664535104015, -0.6641062122944461, -4.084332715217192], [-1.3103901645711975, -1.789712184939866, 1.3996664535104015, -0.6641062122944461, -4.084332715217192], [-1.2453822965490755, -1.794356216996517, 1.4439989904528505, 0.09516623079981168, -3.6619479350456565], [-1.2263424869868105, -1.673699285946599, 2.2090809072425337, 0.037334455609871676, -3.7404805895319466], [-0.785582778482604, -1.7696837231063316, 1.252967997793061, 0.8269328083151692, -3.9362624085167766], [-0.9473316380708499, -1.6730377707397985, 0.9834523516832352, 0.7232016857389905, -3.764074733598989], [-0.9545160529682951, -1.585336190109893, 0.97190202056073, 0.870836150512601, -3.8442931942393423], [-1.5080416790201632, -2.2085999276678807, 1.7303738776894773, 0.8288135510601898, -3.5892107274151335], [-1.4943993946570882, -1.6858257351019583, 1.531506691587706, 0.7785810641661178, -3.9786157848158377], [-1.5622719326625323, -1.6410974848035542, 1.6201221621060862, 0.6403187924806368, -3.924921815564327], [-1.3570396255609585, -1.7262243550900185, 1.5196705638853145, -0.5999820963579934, -3.6613929425605685], [-1.0512178754773538, -1.29417410873695, 0.9039212585278471, 0.040899927413672876, -3.7605259569460916], [-0.6854392687560618, -1.8041931755194274, 1.1023203528015797, -0.17686019213780807, -3.9412442420753364], [-1.4372389598747368, -1.4847666619321054, 1.1198199569303915, -0.04656258629180932, -3.65931239666431], [-1.445833975403234, -1.4320668059742834, 1.670612376081219, 0.5072334657957274, -3.8755274441685055], [-1.6445050373798336, -1.8777976016334579, 1.8512726595259577, 0.4030764777987479, -3.7943006333556832], [-0.7681511151156659, -1.6027162302827682, 1.672513231836631, 0.5817612065238565, -3.816441204968866], [-1.0418199855639925, -1.842246923116339, 1.5524486667494342, 1.0427587164233227, -3.843247393353007], [-1.1984015590012207, -1.875167535479341, 1.5952104130979303, 0.5036286817955176, -3.7521261522481804], [-1.2709091283609173, -1.378754755344686, 1.804549798720076, -0.14837006960723056, -3.6993621453567362], [-1.3686950015413237, -2.1662340858907285, 1.0444510311738444, -0.237642953269702, -4.030900320728411], [-1.0620396473660831, -1.8114895624993599, 1.4274874457170084, 0.09038865983934924, -4.0764341670071875], [-1.9891893178400528, -2.052457971820171, 1.448329285183722, 0.4987553774066727, -4.198629487737638], [-1.0033374215419015, -1.3614441177057157, 0.9573460098409952, 0.009005744178654296, -3.5582363400122], [-1.554293739577608, -1.6494348597865385, 1.4814219992113162, 0.6683910055112383, -3.9519023285714425], [-1.4091686226644506, -1.772119615383762, 1.3770380253785557, 0.7367395682223368, -4.047455426671533], [-1.3859797402092908, -1.81584093982951, 1.9986246885171197, 0.20318820311266722, -3.856583405275112], [-1.5071457556390178, -1.7004134795921972, 2.1505750316933323, 0.14362313572869592, -4.228199704163448], [-1.002190362285922, -1.697029988913743, 0.15743420136855252, -0.327228447053002, -3.876838433082794], [-0.7619715733121266, -1.716388546501865, 0.26509014054374486, -0.4181031984472738, -3.551873235448363], [-1.8516630161219632, -1.7679530009730038, 2.071911309418677, 0.37605301504816346, -4.015781078679279], [-1.3647468598081436, -2.1863515614494986, 1.5820163318071703, 0.3730976490214703, -3.7299318389761704], [-1.2796554535328344, -1.5239185226938685, 1.381417572510145, -0.4058111325025045, -4.0094162484354126], [-0.9015162902760405, -1.8798907813943333, 0.5943049089470881, -0.08327034812251857, -3.998343448131978], [-1.0204127458166607, -1.7544935287834955, 0.46406204244989846, -0.02012665995315807, -4.205923549762539], [-1.630624399265873, -1.5142241462285038, 0.8213567771593249, -0.2654189847100174, -3.848589950074291], [-0.9993515923112589, -2.1992518823757807, 1.9220855297304, 0.09971376577861506, -3.9077490920292686], [-1.4147165258801924, -1.4430242047320383, 0.5253095422723608, -0.049540662396171914, -3.9994717621142835], [-0.9981427207483851, -1.641176085599209, 2.161956850442726, 0.3969789311745837, -3.63094314535075], [-1.2509652970938137, -1.777554313511828, 1.241792757774213, 0.32454904092023934, -3.8843291863917635], [-0.9016392945851711, -1.8205319495089856, 1.7607221321450193, -0.2371171210573634, -3.712039248495359], [-1.5629637910183236, -1.8547943294519724, 1.5676176428720006, 0.24967839358046462, -4.003818205243921], [-0.7484101017090594, -1.667230490613039, 1.4252054351919667, -0.20317632249231438, -3.5966395645039944], [-0.9150855536959709, -1.9595936158927718, 1.4239156678889897, -0.21957702282183442, -3.690102435078356], [-1.122568437058495, -1.393306303141804, 1.6092245144265929, -0.03764930483337263, -3.8177084437668105], [-1.804159856134674, -1.9949060060965595, 1.4215911342469936, -0.17536530967777872, -4.032352347891094], [-1.172639178780017, -1.8746612108660579, 0.9473661652512443, -0.46387999090546295, -3.7030989128007166], [-1.2010799103376806, -1.7647042185058754, 1.4442397546649066, -0.7348687270997801, -3.738536815308023], [-0.992043846949393, -1.7641179956287585, 1.4299794456352393, 0.5836586463837219, -4.169345589934262], [-1.1676934115308684, -1.5065921566708522, 1.610884457924186, 0.6446412023232576, -3.8798531783559973], [-0.9115997293512894, -2.0535643525492238, 2.0417890864180026, 0.48443954089189495, -3.7963101383497007], [-1.3297775707099007, -1.9866067614339413, 0.9264519845895723, -0.5664022953748291, -3.5514492264805866], [-1.3743232528792109, -2.0372444965274528, 1.0878877822474602, -0.4084159492366278, -3.7497114112876564], [-0.9009360189794355, -1.546345030429388, 1.3916063612345049, -0.46231419322538103, -3.719729567686899], [-1.0674013953145165, -1.4864195363833246, 1.3116933400618827, 0.1151166885854475, -3.7408121813063056], [-0.8479542046851963, -1.47890425295608, 1.2097801467135736, -0.1713320243941766, -4.001689157647593], [-0.7048320167693791, -1.585112025278802, 1.1156835247915768, -0.2911959245732727, -3.887877432489757], [-0.9943649525404975, -1.7146580349138352, 0.7814344534639172, -0.28218102725715705, -3.9498283397950376], [-0.907800241588875, -1.7439757630639183, 1.1497643656637766, -0.6082738746443956, -3.8358362581361725], [-1.2972273336582414, -2.1160852320685715, 1.190623356332941, -0.8369210049208261, -4.220512769672988], [-1.247146783339171, -1.7423474549560736, 1.2821123892507504, -0.7533831507398813, -4.086137379088237], [-1.4085835986299526, -1.7638297986497204, 1.1449375539144744, -0.38388891822314786, -3.9761474779237393], [-1.6333145876493318, -1.805963303403304, 1.6741179491243454, -0.22671099900833414, -3.924291187987447], [-1.0996482984317055, -1.6889270850019515, 1.9985064594391402, -0.1519158606703025, -3.7116901063427434], [-1.4566982542768314, -1.4757257291432817, 1.4079760982974783, 0.35858926822004733, -4.048664702978368], [-0.824337677795038, -2.2420211052376757, 1.0913731806226663, 0.1769681009754569, -3.669009012722312], [-0.7958742876594314, -1.996883869576411, 1.388944635152358, 0.19721922039961765, -3.7580854716251166], [-1.302688460231805, -2.0921791173374578, 1.4459516566783568, -0.5091663707024918, -4.104892936023815], [-1.3947258739496076, -1.8063286950589292, 1.532656613797758, -0.5097584320498241, -4.001178989341059], [-1.131059111601353, -1.7486185482789258, 1.4438373619947447, 0.21026316026216668, -3.896925554313658], [-1.4466415946703157, -1.9035826137825291, 1.7461012799935824, -0.10373412621842744, -3.9525824960320173], [-1.4155445443896122, -2.004229118357082, 1.4121246250831352, 0.11124916987273478, -3.8255611437197756], [-1.2634086905046307, -1.3156974198000233, 1.9544825897049853, 0.02030125298489769, -4.214099698038027], [-1.3570197692169015, -1.3028948206410946, 2.148378813798086, -0.12907511570431773, -4.082599436932161], [-1.3214956458587028, -1.602161492105471, 1.3567920597392116, 0.19230849505542083, -4.292715263871482], [-1.088329994990169, -1.429086910037442, 1.2751621392791548, 0.2000399084302302, -3.9917990781983432], [-1.4897034910849725, -2.0265743196209307, 1.1210918544733834, -0.20655741469231848, -3.9249647621488184], [-1.1936942965565607, -1.4123119328521327, 1.0692142174902994, -0.6071079038240232, -3.998715010354773], [-0.818491441302246, -1.4961235719559436, 1.280392326547753, -0.4324331976097438, -3.9726346288372993], [-1.2708682320699454, -1.5902691904994644, 1.4928712208013066, -0.0034532008103571876, -3.4853958680411563], [-1.4316915082429156, -1.3413215423970692, 1.4625035963254884, 0.10900901208377119, -3.57275580372079], [-1.1008939866185359, -1.778545383629312, 1.3244902706468502, 0.15420042646549015, -3.7016289668689093], [-0.8929967929903355, -1.7384057964465003, 1.5972993821156927, 0.06065803114117821, -3.844448844127507], [-1.3153397615979603, -1.773692325293607, 1.4706324975642326, 0.40017008142900845, -3.8673475325914652], [-1.4374769062084738, -2.05764586470942, 1.6498550682148219, -0.19147754442073905, -3.8656776397988497], [-1.7688446285960162, -2.376626703428924, 1.5803064166909655, -0.2867428064451813, -3.764904730448072], [-1.7090655521026168, -1.9968994533228908, 1.5469561614049794, -0.11329571232392163, -3.9334105155431547], [-0.7102588926971765, -1.2551137016626406, 1.0279819505764656, -0.08350791041586789, -3.869374686802274], [-1.3923937986193324, -2.003055226324054, 1.4637449441429502, -0.40108020928827604, -3.9280580358371755], [-1.5915492438585415, -1.7732866627756625, 1.2348176568250993, -0.2641944044175947, -4.066864365058506], [-1.5159381514978971, -1.8987930075002897, 1.5799045226317474, -0.28867639798020145, -3.902105361860753], [-1.1743233174158996, -1.773412458015973, 1.5455452840383523, 0.5185256333123953, -3.909551687556108], [-1.5587169374612597, -2.039077624990227, 1.606257368137696, -0.37275565511944725, -3.861623757888061], [-0.7878168453955099, -1.2491358165966027, 1.5744919343836163, 0.2528277497758944, -3.917469715982756], [-1.367629642518405, -2.0384978446943314, 1.657331835420357, 0.21185483441546024, -3.443409054382694], [-1.2902119073177043, -2.168518137531055, 1.5593546294622596, 0.24011200160288687, -3.8113257793175155], [-1.446549487316087, -1.7289696185866275, 1.3422362027123231, 0.33407022528258556, -3.7994246544981616], [-1.37953787416976, -1.7396754812374973, 1.189701309378064, -0.2960605471497535, -4.131015201645706], [-1.1309513974272547, -1.874722943423844, 1.7951979587477358, -0.24082492140109346, -3.8286123710567956], [-1.5562849304500126, -1.9274064174477672, 1.13263222158183, 0.013215563093801605, -3.8606600168519676], [-1.1652920253809593, -1.7538839677157156, 1.5208673435975866, -0.6946198598031234, -4.145366612573467], [-1.147595782550125, -1.7042702560867404, 1.4344334405277084, -0.8426208921107181, -4.1979894631767], [-1.583594573442902, -2.0156179865575528, 1.180619566559237, 0.40324745369819576, -3.970892319052591], [-0.5649969739843966, -1.2493262063474608, 1.1071794499192573, -0.4992788276261543, -3.615624216082836], [-0.7919622209969144, -1.2338764862655065, 0.8596248653401473, -0.44845282496026867, -4.030188356603068], [-1.6443930151987745, -2.0528538750691405, 0.7687967165317853, 0.27320721730834735, -3.997300926600471], [-1.616499587343861, -1.963802679076663, 0.9255909633633985, 0.3003595047166209, -4.37892643234496], [-1.2446065836139337, -1.6182955699101536, 1.1042843830251168, -0.03208206484142273, -3.856869481155754], [-1.3889322531861388, -1.6194673777956967, 1.2875963298971367, -0.02477501756623554, -3.994464790067461], [-1.7462957801935872, -1.7349900455859977, 1.4752381613914962, -0.02921435536422374, -4.30568896424962], [-1.38200376879323, -1.8933460200029846, 1.5489675818176, 0.3938875873225481, -3.9043610496739762], [-0.9994379322222271, -1.7162858134750163, 1.7985630928000937, 0.2243504399476026, -3.962955218051482], [-1.2781455374962682, -1.6907781297934192, 1.5707271588762137, 0.7473921243072055, -3.7759061835036025], [-1.6839134154181303, -1.5634878843751217, 1.8205620238419742, -0.1381292537336828, -4.063596465314632], [-1.8287086725680464, -1.7035917905293094, 1.725998981806798, -0.24840055124662835, -4.20039199015657], [-1.059340320410404, -1.8473204465520818, 1.4069165339489296, -0.005889524383980813, -3.8287106287401156], [-1.0628440677881332, -1.368647087600987, 1.1025149873862272, -0.27624907809490107, -3.7417029856482005], [-1.0820262645831786, -1.6533427479489666, 1.3587895753022614, -0.225826450406357, -3.640173293547442], [-1.073934623810729, -1.8333156681588092, 1.5913344328317502, -0.15013926855249188, -3.9906994060300356], [-1.2839476300536572, -1.9196163942804199, 1.2197981765292751, 0.14051946636934265, -3.9997789171647673], [-1.5836526707407572, -1.5369872065208336, 1.5667376960949724, 0.15174340063514885, -3.8247601600642813], [-1.5731102303433335, -1.8004701571965689, 1.5738780918778814, 0.07153468854264476, -3.936989929821749], [-1.5941507695618895, -1.8098696090166293, 1.51191539912079, -0.021639081689932428, -4.173617908092303], [-0.878633992351558, -1.7510266112829211, 1.6158036721210924, 0.06335657796931171, -3.710748656525249], [-1.3369830590347545, -1.722240136947223, 1.562121459129278, -0.3495386617783578, -3.930418681016797], [-0.6813675245109555, -1.436097094109528, 1.6077404668937731, 0.3527658493622138, -3.6581817724732817], [-1.345776605528596, -1.6558770189559477, 1.703252772738567, 0.23531525401526565, -4.049231987359102], [-1.3321002245822549, -1.920187930932655, 1.7361720630652588, 0.6366118222706818, -3.858583720165049], [-1.2292052568106022, -1.5053238359776724, 2.050575645168007, 0.5432296927226139, -4.271252873361624], [-1.0301332938384742, -1.4640561038525386, 1.9469087644735925, 0.5265002167259434, -4.069428425493069], [-1.0323464428546738, -1.7878034502855884, 1.3038711763746835, -0.13239083504654664, -3.602259401054605], [-1.4990021114683825, -1.7287832671614485, 1.7763059926942069, -0.032077408800903, -4.198482272731103], [-1.283446554754233, -2.0014434324233665, 1.321296240699937, 0.16919714503967473, -3.99902100800741], [-1.2018109843124822, -1.836510622684952, 1.114953747579236, -0.6475867974371883, -4.023911842589476], [-1.0810948225505648, -1.9032557102418775, 1.2725663029059053, -0.5677831066376725, -3.8282611851153185], [-1.471418278949118, -1.8208052054156572, 1.5472538512206446, 0.15414276573424546, -4.028854163068328], [-0.908616184988801, -1.6038556617703448, 1.8200114541941745, 0.24715429477400414, -3.740738098988104], [-1.2076443574816214, -1.5496419138655446, 1.7678173911117607, 0.7482061784026525, -3.720025208846748], [-1.218129532067315, -1.2975035552729308, 1.8178442830726156, 1.21945830155528, -3.9760148149543237], [-0.8053267642535287, -1.7024899770748374, 1.5574132323982457, 0.5452170182092978, -3.4623081952805403], [-1.1168549430448356, -2.142818757111673, 1.6641786473981426, 0.5277595624550743, -4.043622692559805], [-0.514119272107702, -1.1318657853022709, 1.5317892653664051, -0.1999807708655677, -3.73344899689384], [-1.474983892042951, -2.298894180533756, 1.5047437313375813, -0.15192695390489602, -3.6023636549899525], [-1.311610431079885, -2.2719787220114624, 1.5346838012511563, -0.5029864011467734, -3.358155413809241], [-1.3839678549554406, -1.5275884172538574, 1.4721646440406648, 0.16828076066015143, -4.133159752501811], [-1.4573431112991693, -1.633722864724114, 1.4713477067319751, 0.10879900353340816, -3.863986974794809], [-1.3420530280759653, -1.8858251975336169, 1.2726719002384792, 0.006747941804900848, -4.092997865208036], [-1.1967111416702239, -1.7040885085694104, 1.510909633141794, -0.5927554446003395, -3.7907864276766694], [-1.370191825717543, -1.7207697065778107, 1.2670735876038504, -0.4381918327774955, -3.851201042450545], [-1.0389036665673326, -2.116454223941525, 1.5532518663096957, -0.5806648110712536, -3.752442363356359], [-1.253203820517487, -1.5504588517242845, 1.5482344993080221, -0.27967641059037435, -4.1331591925078675], [-1.5848782643779815, -1.4782703578174188, 1.7200182003696136, -0.06674286805451099, -3.845575748283622], [-1.0139290168012096, -1.7891366030242402, 1.6679078118207589, -0.09855675504569542, -4.110460458496503], [-1.0694746092249074, -1.6856449767714325, 1.5594289286101728, 0.3881760968637502, -3.7624021787748365], [-1.8845890282039723, -2.2293072724302325, 1.7023454805095777, 0.012169487611835283, -4.043585860786086], [-1.1269223717604615, -1.3847845491015898, 1.7137125407906035, 0.6464428441496155, -4.029927863152539], [-1.3758536037513256, -1.8289619936296064, 2.1974825883623823, 1.3118731656347828, -3.900820061044189], [-1.0877396955525387, -1.8443356003586027, 1.075361349371104, -0.7427536352580788, -3.771887319831784], [-0.9967440587055005, -1.9805265764814426, 0.5109680266783634, -0.6029099530328591, -3.662608451313663], [-1.491563914007425, -1.74327751180187, 1.1509853015479665, -0.04001125423066579, -4.0954143093972695], [-1.250339341153015, -1.606875825923993, 1.3204241771662848, 0.2984671168499683, -3.945752709061325], [-1.5209803986688393, -1.8264084056641727, 1.9696230545321236, 0.04250456119525958, -3.9016994329577495], [-1.3946148676122185, -1.922705948050402, 1.53466569879602, 0.22937219690445734, -4.096511849311394], [-1.2433001091022695, -2.1633456700440563, 1.6503604463615964, 0.08807603879386616, -3.9408030320227367], [-1.2102552440197623, -1.6559144732028301, 1.9964703878733114, 0.17874606981163257, -3.64183144697488], [-1.1287188745060457, -2.111403633328092, 1.3895784977826424, 0.006739088840519991, -3.9933809828519635], [-1.2060390068009248, -1.8390693803695677, 1.6749908530107356, -0.4103161124788801, -4.003753686561169], [-1.361175220358576, -1.9675852060783618, 1.5911330421202166, -0.11521521780952154, -3.862039231928604], [-1.7351936816592792, -1.6973981239363447, 1.4550964253950076, -0.18634079514135024, -4.056543138230481], [-0.8268035479930462, -2.0180053557791693, 1.5391500028663982, 0.20913273827574624, -3.5766888259484757], [-0.933713457306464, -1.1312841370022573, 1.589993676160425, 0.11028914187419656, -3.89919685142444], [-0.7282348345388411, -1.9012220116507597, 2.138512562468029, 0.3195603825817688, -3.612125747140129], [-0.882959922734349, -1.7180818727789742, 2.133628246438718, 0.0036303710165310893, -3.6372162915811908], [-1.0580314070453687, -1.52166619905619, 0.38282210969130825, -0.2968645649268328, -3.8937897537347275], [-1.4074533391938886, -1.6095576626622023, 1.9916421553018602, 0.017230531346966366, -3.982426801276656], [-1.7486079468062166, -2.016552033332102, 1.2171607586640931, 0.1801057105342067, -4.1399173296027545], [-1.8890999600740077, -1.8644160464924637, 1.003630642609524, 0.2826601081100571, -4.417540612072829], [-1.8786763019295272, -1.8521968703002165, 1.4734684066003692, -0.23265177589377367, -3.889253212520499], [-0.7546195939513338, -1.7115877148468002, 1.679430181316496, 0.433227521598172, -3.8527305359632233], [-0.7843200850481635, -1.5857768841328508, 1.694394826284991, 0.6882042203761496, -3.5273433289122886], [-1.0881668692540618, -1.5015136970163154, 1.2326215267255602, -0.49259646083591935, -3.8986595916277365], [-1.4881937074341245, -2.0761939952837705, 1.91656162183274, 0.15677958563027047, -3.948438457979414], [-1.1034180831950053, -1.8476878330003585, 1.0288613538692901, -0.13805424405520714, -3.860364483876821], [-1.7413141493256048, -1.8722274335774332, 1.6744385632962135, 1.1379244671381088, -4.3030405279992365], [-1.4483749298217934, -2.0321345772233816, 1.9564266423706207, 0.4118927038584525, -3.8995372515066196], [-1.1567062390870688, -1.7167856504381536, 1.5782847314007493, 0.574441643187604, -3.8432900759948616], [-1.4207883591105563, -1.8333464116257798, 1.1410647943111838, -0.45139036269051946, -4.161918319010157], [-1.6326014419994548, -1.8732452579503807, 1.244575786267929, -0.4880228865869929, -4.053062866947883], [-1.53546124339623, -1.7853741824377878, 1.3200984220698189, 0.23005092383465386, -4.0598820115919585], [-1.8265928209042899, -1.9302363027662013, 1.83506466588827, 0.18144272774352171, -4.124655913207346], [-0.960690760219027, -1.8350856820149726, 1.6680418730914306, 0.18342088585868466, -3.6450436452799035], [-1.4854159682212822, -1.7621054160375111, 1.523027297043892, 0.05283063296558265, -4.313438177728387], [-1.4517805782363378, -1.74857367515249, 1.2252333684959626, -0.07684888094164131, -3.710502815884052], [-1.2807274790568275, -2.1298492778008207, 1.6801697998764595, 0.008275105214278218, -3.8355071297376493], [-1.2344662150502905, -1.7233090514896732, 1.6177085076604054, -0.0034671541748818088, -3.6472760999684093], [-0.9056978721879827, -1.7353925280903912, 1.3401842469282053, -0.041871260575756054, -4.128387498235644], [-1.0365676543770057, -1.5706559957264044, 1.4301077782196436, -0.07101451871196504, -3.9227474398518245], [-0.8502926933049356, -1.7223803587998463, 1.493165680879475, 0.0444518227253448, -3.899522915902196], [-1.3938406999369368, -1.9811132543771837, 1.4609620875771578, -0.13595195628489623, -3.986616703419541], [-1.428905522399728, -2.2025408684410883, 1.3571104962301308, -0.03753045031440276, -3.982829011571612], [-1.681817110112143, -1.8262275605156186, 1.307184400431318, -0.16453163988701924, -3.997810225020349], [-1.3816097653029809, -1.6120841875168446, 1.6211291299191568, -0.07996610502049897, -4.272165438582017], [-0.8816294809784111, -2.1473843500357237, 0.8933132635248108, -0.058275017191706635, -3.7447089939660265], [-1.138909576416034, -1.8724541145685998, 1.222305948724091, 0.1079417816346595, -3.794337379935557], [-1.0169871629266796, -1.811520620604442, 1.4406683601027583, -0.06291644926944034, -3.9745450227738757], [-1.583812211270541, -1.5500496361283183, 1.0884989673968624, 0.2467557901799304, -3.788084496495515], [-1.154233947058195, -1.557677630143102, 1.4140984345122347, -0.4399561150276916, -4.022532172411552], [-1.0825392098556834, -1.3344552121321887, 1.5664809500865733, -0.4056137999820773, -4.231329204778207], [-1.281184968102387, -2.192086652926232, 1.0787878056923386, 0.06847706169801077, -3.894982629195963], [-0.984313868960555, -1.6169386679075775, 1.3261513499520146, -0.11908347779638978, -3.627435977235309], [-1.7937670288366228, -1.8500542049257456, 1.4794669390331452, -0.3232984324004348, -3.9535500212150123], [-1.7198170558684192, -1.7794423369846701, 1.5306937528868558, -0.1552570954268548, -4.275866729273268], [-1.7235436856744264, -1.9245565911901037, 1.3747619630085461, -0.002134607491692475, -4.447136947773091], [-0.9893135537874784, -1.7347564469276817, 1.7302912221929594, 0.2436391700136308, -3.5589504087659267], [-1.1582437768804814, -1.903277753630943, 1.6069239860678002, 0.24150433381920372, -3.5038539960503385], [-1.7518052619142481, -1.4923315626521418, 1.4052394908900803, -0.3537210061639541, -4.197810812179685], [-1.5756011384752315, -2.243742955013017, 1.3933814866929393, -0.3570107835381845, -3.9177764051103523], [-1.163041465642103, -1.4645891355945964, 1.7589393615685132, 0.4169665216846997, -3.889195151057113], [-0.7622903134248973, -1.939795822199673, 1.7487386178403086, -0.22747237602328077, -3.6423874544636052], [-1.6965177170882342, -1.8474841337099033, 0.6318874711859411, -0.17374605863550152, -4.006161999339651], [-1.2933040535554763, -1.7317556666826797, 0.7035474075846051, 0.011651872417427961, -4.0135647201955456], [-1.2293908292089621, -1.8535413224598396, 1.664526767725824, -0.3184404640245139, -3.7755282130664236], [-0.9928566450731653, -1.7693047341970087, 1.622503594097118, -0.4618640356394461, -3.9369646522028408], [-0.7457248788488249, -1.3002437680435581, 1.072574721742798, 0.21419034445133364, -3.6750175509265643], [-1.8787135076954955, -1.95819811107379, 1.569833499602133, -0.7499091837943619, -4.005412380342979], [-1.615280985463971, -1.798915685436658, 1.4517630820012626, -0.7375986581342189, -4.2587346481123145], [-2.130603189539848, -1.95937534825558, 1.3459960739261851, -0.11358471895423145, -4.2838991876274815], [-0.5826175027281262, -1.6995107853905298, 1.2902719768375457, 0.16787081883603128, -3.5269064411982582], [-0.8172791243797397, -1.3552252124756161, 1.8951444775361679, -0.14747157701817828, -4.169330258323748], [-0.6448114492765435, -1.1809099398812686, 1.4185873787813168, -0.03679510829170716, -3.4275901854077557], [-1.2140738381752763, -1.7657637236325097, 0.8057231698713619, -0.44446844069393804, -3.819576128935171], [-1.3856804052396177, -1.5608343370503897, 1.9458393841819597, 0.16691158585168564, -3.4829540684211375], [-1.2121162510469663, -1.8048432714825797, 1.3365688746001245, 0.367105482814286, -3.5640649419387915], [-0.9641972476864694, -2.2676801091430505, 2.301813350147769, 0.4703815152492814, -3.7187920881483305], [-1.0734386633628838, -1.8809185925134753, 1.7459028657955855, 0.2615614891539031, -3.648547362003688], [-1.7465718477565098, -1.6051677613797477, 1.3309981289961956, -0.35206711620811826, -4.069383236885214], [-1.187614399568437, -2.1393946226421443, 1.6914263262696532, 0.0545881699025942, -3.890616549683283], [-1.0065495073848583, -1.8821186554445726, 1.6668613183114438, -0.20009701536713265, -3.6447408181753578], [-1.247714911969122, -1.709640758236436, 0.9699343966165227, -0.53331325120068, -4.07992738639308], [-1.267699304128073, -1.6423183512324522, 1.2526427397868116, -0.4481187883342608, -4.346215403360001], [-1.3551367602184283, -1.5845802157881688, 0.9366947574730591, -0.3815344810678138, -4.032186698779197], [-0.7792362308394702, -1.6071427518427928, 0.7762258409604486, -0.5760733862639918, -3.6936159326085134], [-1.6109968576914249, -1.8630343203665451, 2.0844344598441933, 0.4362231362639004, -4.071628756888805], [-1.133752682067388, -1.6598420680913435, 1.007058432233099, -0.1730804651463355, -3.705463528493377], [-1.602002086928729, -2.148809980528042, 1.74238174464865, 0.2633609700954138, -3.6728382780392064], [-1.4385818911032842, -1.755710033696335, 1.6582296363362645, 0.04923487697783163, -4.131155916006361], [-0.9240046032696712, -1.9080296624520938, 0.9953423581242449, -0.0900931997420699, -3.5357776903463836], [-1.6900173836812362, -1.8755257878050025, 0.948450970168726, -0.6218111545845323, -3.7299127829914775], [-1.1837746264029776, -1.5468811898130574, 1.940187877938672, 0.7752734393514775, -4.154321459938344], [-1.7500155221273042, -2.0274081430423485, 1.603515495568758, 0.11359290916773007, -3.778744702685513], [-1.1080484215625808, -1.6350169954523888, 1.8433101594223185, 0.6146740233244568, -4.020550973618091], [-0.638641969255032, -1.1184747179976398, 1.7865171971018803, 0.16104883907824583, -3.6606822979026585], [-0.945041668962392, -1.5001810126756299, 1.2330679700351845, 0.5198797018819684, -3.9006170963534577], [-1.2583160134024156, -1.6709908738546495, 1.2898468832761638, 0.1097952776408932, -3.780706176664435], [-1.372622733220267, -1.804742719437719, 1.5348625527599822, 0.20482394327422196, -3.9683978198946166], [-1.0488464583207402, -1.8981378683314165, 1.4467322067839536, 0.22410670242066935, -3.680966461604516], [-1.0463406998949853, -1.6860319251491052, 1.5291251883083836, 0.2143803325900176, -3.9608347055678452], [-0.761394766444741, -1.397495189473257, 1.3233053907328993, -0.1451448472923462, -3.8791066602988153], [-1.3716531537100285, -1.6133794272472513, 0.9468214119538942, 0.3418880694232561, -3.905124314600457], [-1.1779769139968457, -1.8672097238567886, 1.6648019817284812, -0.3509010915053973, -3.95191050220907], [-0.5300737102037445, -1.0820336053771151, 1.5378398705973706, 0.4390247404053254, -3.6747970770354983], [-0.7009110145496664, -1.1316436634841107, 1.5347464938747408, 0.1106493322064259, -3.7790261720286145], [-1.2316777540472739, -2.0603323422519164, 1.0460442920783208, -0.4788854542053498, -3.7319426545906267], [-1.2094643043604538, -2.0933211261277895, 1.478659456145181, -0.3635442090348041, -3.8534431751237626], [-1.1199589779094103, -1.936848692714041, 1.4209026448849396, 0.023983785796998554, -3.9056067079405143], [-0.7355557019777974, -1.1273854078066539, 1.488448369563371, -0.20932891373601814, -3.6677722807985496], [-1.9810983511742932, -2.1007151542201004, 1.3517033185567207, -0.18613228221058783, -3.9691694275779343], [-1.5816858809282883, -1.726139772281459, 1.8246704317051308, 0.1604420861414122, -4.043415406552101], [-1.591674104052466, -1.861231694810536, 1.3823505966853475, 0.5797527305999771, -4.213221319407576], [-0.6901883794511638, -1.7316671283005363, 1.814093977602008, -0.10867161382594101, -3.816310864051394], [-1.602237262873798, -1.7547638031518982, 1.308340073343218, 0.30822070208483476, -4.043367659777997], [-1.1826001243835296, -1.7122403082966924, 1.8685043320887134, 0.07052175532302854, -4.011546354107176], [-1.4445033153972289, -1.9254802296820026, 1.3284690055812036, 0.3075994181413021, -3.7994001604000767], [-1.2915691890679017, -1.8544994029213795, 1.5218881713406658, -0.16918810169621512, -3.764229138199633], [-0.8235638656398393, -1.554701733183695, 2.0045499562898543, 1.2904384920817902, -3.81668891345241], [-0.6509903868177146, -1.3502144399806038, 2.3842205837516115, 1.5654846533098463, -3.789174951191214], [-0.949957651022817, -1.737028975643278, 2.189053447443005, 1.119213034379878, -3.9023060394878892], [-1.6347830031252684, -2.0848257629669265, 0.9543248569377514, -0.4929313323532774, -4.092438316413241], [-1.4901059399784937, -2.1102123198862905, 1.913114497848944, 0.16441103642019111, -4.120373624895978], [-1.0289037413126816, -1.4861291701355042, 0.7919225916304086, -0.5842051755087126, -3.9126681256928997], [-0.6308947627965944, -1.5277481363371228, 1.2090985724011163, -0.009019496930989551, -3.659777979393286], [-1.1437944129544704, -1.4944241424184008, 2.139682393148936, -0.23496939422730986, -3.950782740712575], [-1.1236929437260523, -1.70534609233908, 1.1097034195904572, 0.586860132747951, -4.004714764204598], [-1.6396152593793598, -1.6141742155975733, 1.7955358279545672, -0.06880995686689748, -4.135450357381399], [-1.5218945609873096, -1.4126198204252645, 1.9084121725368905, 0.07540232960263571, -4.002983926054021], [-1.106195991377594, -1.9353770169604825, 1.664574735466434, 0.0010000717766914698, -3.936769783550946], [-0.91404285818629, -1.8471672736381277, 1.3894137842463161, 0.4929156447507423, -3.787225239377442], [-1.1543298147694283, -2.13543354074849, 1.7904276326497508, 0.2795569120225949, -3.703594553451979], [-0.7616885602383809, -1.3203980398442998, 1.545187347643304, -0.284630879499047, -3.733205661890724], [-0.7491429377786603, -1.553277399700167, 1.6277749545999025, -0.4018208869186345, -3.853024312565331], [-0.6736120967920471, -1.5685536267067608, 1.6065643014429178, -0.38444617196820363, -3.930601518449149], [-0.6826990455130816, -1.699866148888822, 1.3321295514474036, -0.2800472591156117, -4.121010773116033], [-0.8685955502732983, -1.5873093288800466, 1.2655083206819557, -0.21397761601282117, -3.935063420663438], [-0.7822250749692694, -1.6804922212384998, 1.4104468025331949, -0.6569496754975328, -3.460310182439977], [-0.7070815262195829, -1.7095922413311737, 1.415609378623159, -0.8171610831558334, -3.3912429963652015], [-0.6578830076476707, -1.4928259759551705, 1.040132857578963, -0.4421482083666125, -3.903047801788622], [-1.269460568752042, -1.9862501699707091, 1.5466598031466952, -0.05126121493210983, -4.076368026790761], [-1.3324890905784843, -1.3544708625936184, 1.615127302881047, -0.4657259326984971, -3.867340624978153], [-1.1338729780096954, -2.064812533956754, 0.6863305125597076, -0.716461447804893, -3.960293487866372], [-1.359082415245529, -2.209505094455573, 0.8130413339080963, -0.49069051956301196, -3.644708506921816], [-1.1955447804070618, -1.5831404199929788, 1.6521654000432529, 0.002344683157636763, -3.9717849377189807], [-1.2817166936698403, -2.1606300234610827, 1.9967090643912346, 1.0609351424347784, -3.6782169685178543], [-1.4842207614616822, -1.4104084005377335, 1.6009733787582752, 0.06303787168141589, -4.030306182559957], [-1.4846382056607306, -1.4206440813650707, 1.6147639580360702, -0.09771999010513002, -4.098413784894912], [-1.250285659824421, -1.9584601320492634, 1.1205342273270527, -0.5295846795518514, -3.84980874004337], [-1.1857386603771343, -2.029143925231082, 1.0453417491940498, -0.44400180672744965, -3.7897833803460146], [-1.4242351833810536, -1.606892925593756, 1.7390608470117235, -0.05741997939769418, -4.1786555174296085], [-1.413180265068358, -2.002476945561339, 1.5627441039013468, -0.036310272232899635, -3.747623522989311], [-1.3157568228475105, -2.0508330480712456, 1.6026964422188055, -0.14975670685196266, -3.859155296057415], [-1.3801486520818373, -1.5254570684106683, 1.4458062358700075, 0.022445475862502513, -3.8748733314518082], [-1.2499666971496641, -1.7344319070775251, 1.3164975723529821, 0.097846458356741, -4.4033201441029695], [-1.5691121383198317, -1.6484736610016149, 1.6682075819819269, -0.33408511778467886, -3.8292160592253524], [-1.7076682294695604, -1.8427759766675162, 1.4680771337631395, -0.4843675955534845, -3.9191535118255683], [-0.6544063442105412, -1.4387281701392773, 1.7726898241751619, 0.2164517695261948, -3.6747240024574532], [-1.1493333314850926, -1.6040882084435468, 1.2362357363828325, -0.40345459552330437, -3.906312793804052], [-1.3927349566734615, -2.057229468408889, 1.1348057023903728, -0.07220025449761261, -4.035288986710166], [-1.5009768792749891, -1.9524524367470233, 1.058239205368365, 0.035570553396272075, -3.877377606608023], [-1.5160216228578074, -1.8452858881670529, 1.2249247467735993, -0.0022933202741484623, -3.852983173125939], [-1.660180355174187, -1.7768350318065615, 1.4429166319870645, -0.213157422317263, -3.5322450083015347], [-1.5959658498474956, -1.8610701672793775, 0.9561657646452518, -0.493327627715897, -4.082452272892782], [-1.3904332860864475, -1.8141529835024597, 1.097826060380629, -0.4930979391809026, -3.8569852835597485], [-1.3042390947157618, -1.9673005503657246, 1.4538828825876917, -0.6817800986947465, -3.8202445113245598], [-0.9960975415118305, -1.9438650989679052, 1.2810228958790448, -0.4950593693405764, -3.8302612657270227], [-1.6732315048005608, -1.8815502820705408, 1.4524505321049697, 0.19881822521655498, -4.276124715439892], [-1.707628330796966, -1.653556140129164, 1.5502660426069679, 0.2366218585731463, -3.953675112145487], [-1.4208966791622695, -2.001529321315962, 1.2114467185921565, -0.679505522397017, -4.1247110758908825], [-0.9173828787953452, -1.5205316298486398, 1.4983651385066488, -0.2649792494624902, -3.8595832708293263], [-0.8667588922373614, -1.696504127946188, 1.5328124824714786, -0.21490713157840513, -3.652316740924359], [-1.33237349916757, -1.8247255570523262, 1.1114390480634124, -0.26245843545671305, -3.770808224920689], [-1.3994955814547971, -2.007759947336518, 1.4141453145454728, -0.4822605338404984, -3.9641475451883905], [-1.323761665144501, -1.9280318160378855, 1.7887241145858015, 0.04797216614123481, -3.7297185280884078], [-1.4914483989125906, -1.8331243401933672, 0.8759968606687629, 0.16820181236773127, -3.8364506214097465], [-1.071063282865587, -1.5370352337144546, 1.1278391071262333, -0.17242361461994976, -4.1441838495220935], [-1.7918207668607666, -2.2603406178228402, 1.7385750332036407, -0.2964070963555039, -3.730610126219742], [-1.6304595575499574, -2.0140286820000397, 1.5025746643309352, -0.22528188343996275, -3.7656004943821513], [-1.6345432229658126, -1.9763126666364608, 1.527061543263425, -0.4529647345704262, -3.7490053601928404], [-0.8833398284374488, -1.451778833269544, 1.4482300864828301, 0.2057322765981724, -3.8354397709541352], [-1.0888081683815343, -1.7669147474838796, 1.4329488558524162, 0.06312827635987128, -3.748548976569933], [-0.9327118783695237, -1.7108529799888657, 1.583437033211626, -0.07524353686000851, -3.772947380482818], [-1.0723384082520213, -1.614151617743743, 1.2138345344206551, -0.3986775759306391, -3.7966584065780618], [-0.7830465532677932, -1.6385804960011987, 1.454504273558511, -0.4961263011282325, -3.791187130217059], [-0.40807925105171855, -1.5627042583091035, 1.2315135198308602, -0.5765541455188592, -3.7367706361931874], [-1.948604509974579, -2.2280116548687454, 1.3582101756579892, -0.06814307484119705, -4.217010766929813], [-1.9519749349198072, -1.7620009650658448, 1.3899984990723822, 0.053524894667550664, -3.796883509479258], [-1.7903432158394164, -1.828188681694975, 1.5443064238485344, 0.3132226574866692, -4.02804641534037], [-1.1933424533393184, -1.858744903297863, 1.892916140051881, 0.12244371828018272, -3.9206135359480543], [-1.310060786601696, -1.638348330502523, 1.5690675264748246, 0.7703892301772097, -3.8865127228403726], [-0.661829397038493, -1.639630989770011, 1.8212537445629624, 0.3167266820807334, -3.912890134827768], [-0.7264965624399645, -1.4657600627686984, 1.5221624979630604, 0.5046706664353864, -4.007351522035268], [-0.900366061039398, -1.574915777144984, 1.3756225618344557, 0.32266969902098686, -3.8186988862915423], [-0.5647191249359184, -1.1600120602080333, 1.5397971886059945, 0.05600420639664069, -3.615624960427166], [-0.8026634926119421, -1.2453320917468358, 1.7616098445642503, 0.011766103605040011, -3.878401926329285], [-0.7826775690523914, -1.3988160064749626, 0.9661905549040803, -0.23497745157599711, -3.8344542952671623], [-1.2124052958141902, -1.7504872025612404, 2.08947310645348, 0.26247376070306294, -3.720638521550012], [-1.3719233515314955, -1.7798859661232636, 1.5252845355470912, 0.6119222098675812, -4.107111053288737], [-1.5668394172776103, -2.023715720712448, 2.022329662162031, 0.3726807752393061, -3.7702979345804164], [-1.6106778775497763, -1.7219030465035228, 1.2031071222631653, 0.8773206177603682, -4.18076358795127], [-1.3481526244620974, -1.8167602192098031, 1.1349059468332867, -0.5206288268029202, -3.7092566665209254], [-1.3181055806652562, -1.3031107370323296, 1.9341520277946582, 0.21134493116776326, -4.061237202105971], [-1.719107231700257, -2.313700140814531, 1.591731406769973, 0.6040284697198083, -3.4943502817964704], [-1.5517450087984157, -2.2044473993618987, 1.587462778628421, 0.2793988403522997, -3.7687841015729795], [-0.8268855138106678, -1.6285496822645682, 1.3810585987984196, 0.3995119387718246, -3.773458746955876], [-1.6463088316831742, -1.8071178924909879, 1.8478369336005076, 0.22296420941682785, -4.031018969644207], [-1.5757325978383432, -1.8539849261738752, 1.983273322092983, 0.17021514378925542, -4.006616642804916], [-1.7475121869904815, -2.0224737001442, 1.6772440020866815, 0.16784530253411947, -4.242081779727008], [-0.7987720291670262, -1.630196451173708, 1.5244340570189068, 0.2915863741168007, -3.6119010447198403], [-1.5569753217149958, -1.8649285140672336, 1.3688884221342945, -0.350918930036768, -4.070141726783813], [-1.3156147880383533, -1.6826052740917545, 1.3146911742119898, -0.46919766251362305, -3.7188312461261575], [-1.0684141548454549, -1.4562123160661171, 1.633061582696344, -0.4344755091660655, -4.170150942834623], [-1.0082085496990338, -1.5643479844585624, 1.8446455849093675, 0.20804002987374054, -3.5904976676328744], [-1.4799399171453744, -1.725752810703248, 1.5807884868669828, 0.8716756112522628, -3.8719188424935154], [-1.2968651576193668, -1.5335042541900354, 1.7486452429751569, 0.1050306561244655, -3.77964971467389], [-1.1369434976699115, -1.7828558159354642, 1.5580430473907316, -0.4596368403670995, -4.039404442546803], [-1.6970429513494953, -2.0667103071528428, 1.1439343590148774, -0.39588552134796295, -3.9118022388228675], [-1.597694444775549, -1.8915812995268324, 1.1877177743012584, -0.24440368219477854, -3.941754690085505], [-1.4317020432984016, -1.8047130440226076, 1.578312405937872, -0.31903981645370594, -3.972465848970615]], NamedTuple[(n_steps = 1, is_accept = true, acceptance_rate = 3.785794974801444e-251, log_density = -11.004371055559284, hamiltonian_energy = 14.743507459766349, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 576.6176024436973, tree_depth = 1, numerical_error = false, step_size = 0.4, nom_step_size = 0.4, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = -11.004371055559284, hamiltonian_energy = 11.769247449044698, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 2.04470343336941e10, tree_depth = 0, numerical_error = true, step_size = 0.9340259163636535, nom_step_size = 0.9340259163636535, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9456178537381497, log_density = 11.134480621875998, hamiltonian_energy = 13.347679274114174, hamiltonian_energy_error = -2.3616859815450173, max_hamiltonian_energy_error = -2.3616859815450173, tree_depth = 3, numerical_error = false, step_size = 0.09209433883419865, nom_step_size = 0.09209433883419865, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9644565166882593, log_density = 14.241654411974665, hamiltonian_energy = -8.83652657487561, hamiltonian_energy_error = -0.07751187021869299, max_hamiltonian_energy_error = 0.1162258168841177, tree_depth = 3, numerical_error = false, step_size = 0.08297728665346805, nom_step_size = 0.08297728665346805, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9970410828183509, log_density = 16.23351421665295, hamiltonian_energy = -13.539903619401382, hamiltonian_energy_error = -0.04186583927759813, max_hamiltonian_energy_error = -0.04186583927759813, tree_depth = 3, numerical_error = false, step_size = 0.10033833660378064, nom_step_size = 0.10033833660378064, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.8179889898815581, log_density = 15.489133527165006, hamiltonian_energy = -14.062133292755957, hamiltonian_energy_error = 0.11576502687664814, max_hamiltonian_energy_error = 0.3353362818604815, tree_depth = 3, numerical_error = false, step_size = 0.15380682870120188, nom_step_size = 0.15380682870120188, is_adapt = true), (n_steps = 11, is_accept = true, acceptance_rate = 0.8935157620164699, log_density = 15.94192820171186, hamiltonian_energy = -12.957445428514484, hamiltonian_energy_error = -0.0912326152204308, max_hamiltonian_energy_error = 0.2526980622194692, tree_depth = 3, numerical_error = false, step_size = 0.1488393577890815, nom_step_size = 0.1488393577890815, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.8216442026569083, log_density = 13.9578895179693, hamiltonian_energy = -13.097964166208985, hamiltonian_energy_error = 0.15604829386586516, max_hamiltonian_energy_error = 0.2964275878446614, tree_depth = 2, numerical_error = false, step_size = 0.18854924026531297, nom_step_size = 0.18854924026531297, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.6779754789944139, log_density = 12.296467624389582, hamiltonian_energy = -10.88779666722944, hamiltonian_energy_error = 0.40413694581581794, max_hamiltonian_energy_error = 0.5297918870107843, tree_depth = 2, numerical_error = false, step_size = 0.19595629713885546, nom_step_size = 0.19595629713885546, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 14.243112629461109, hamiltonian_energy = -11.224042895517659, hamiltonian_energy_error = -0.04057403586039321, max_hamiltonian_energy_error = -0.32772398631546906, tree_depth = 3, numerical_error = false, step_size = 0.13136307732523106, nom_step_size = 0.13136307732523106, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.0009155760898780301, log_density = 14.243112629461109, hamiltonian_energy = -8.273912385861106, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 37.39557227949821, tree_depth = 2, numerical_error = false, step_size = 0.24608557283168472, nom_step_size = 0.24608557283168472, is_adapt = true), (n_steps = 63, is_accept = true, acceptance_rate = 0.99987617671153, log_density = 14.615189372444984, hamiltonian_energy = -11.139408344522554, hamiltonian_energy_error = -0.0013645735966676398, max_hamiltonian_energy_error = -0.003952654204967487, tree_depth = 6, numerical_error = false, step_size = 0.01978219606114948, nom_step_size = 0.01978219606114948, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9985698267081725, log_density = 14.945296351240525, hamiltonian_energy = -13.060845504932734, hamiltonian_energy_error = -0.006463577384145935, max_hamiltonian_energy_error = -0.012067437473236353, tree_depth = 4, numerical_error = false, step_size = 0.037720693071088, nom_step_size = 0.037720693071088, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.995774002371152, log_density = 15.455428194351956, hamiltonian_energy = -13.825786898798693, hamiltonian_energy_error = 0.01006801253949341, max_hamiltonian_energy_error = -0.025412098394586025, tree_depth = 4, numerical_error = false, step_size = 0.07176481225480599, nom_step_size = 0.07176481225480599, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9954078119827591, log_density = 15.440977903226129, hamiltonian_energy = -14.808370406399389, hamiltonian_energy_error = 0.016987673046999774, max_hamiltonian_energy_error = -0.06329781962867287, tree_depth = 3, numerical_error = false, step_size = 0.1350847536860665, nom_step_size = 0.1350847536860665, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.8323690549384983, log_density = 14.84321735142409, hamiltonian_energy = -14.22043919894246, hamiltonian_energy_error = 0.20591468103649646, max_hamiltonian_energy_error = 0.3648591163206252, tree_depth = 3, numerical_error = false, step_size = 0.25282957132312983, nom_step_size = 0.25282957132312983, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.49971423283329486, log_density = 13.790663028222692, hamiltonian_energy = -10.823073709242749, hamiltonian_energy_error = -1.2313299549760472, max_hamiltonian_energy_error = 2.9905785573683312, tree_depth = 2, numerical_error = false, step_size = 0.2847015509508018, nom_step_size = 0.2847015509508018, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9867726611284316, log_density = 13.298232651988261, hamiltonian_energy = -11.931664330974705, hamiltonian_energy_error = 0.04038737607181986, max_hamiltonian_energy_error = -0.05525940200423918, tree_depth = 4, numerical_error = false, step_size = 0.11603357470749383, nom_step_size = 0.11603357470749383, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.744159911475623, log_density = 12.299103013986118, hamiltonian_energy = -10.69852486491823, hamiltonian_energy_error = 0.474837255579148, max_hamiltonian_energy_error = 0.8677977298834616, tree_depth = 2, numerical_error = false, step_size = 0.210051244136536, nom_step_size = 0.210051244136536, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9371596036126534, log_density = 13.227098198276558, hamiltonian_energy = -11.149922837920018, hamiltonian_energy_error = 0.16647682711262313, max_hamiltonian_energy_error = -0.6046131099783878, tree_depth = 3, numerical_error = false, step_size = 0.18184174691540006, nom_step_size = 0.18184174691540006, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.9643331288813618, log_density = 12.659596908282515, hamiltonian_energy = -12.00663217075456, hamiltonian_energy_error = 0.11316938495460249, max_hamiltonian_energy_error = -0.4141487722009245, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8639020315440934, log_density = 14.45238750318066, hamiltonian_energy = -7.953442566159414, hamiltonian_energy_error = -0.21305237785214803, max_hamiltonian_energy_error = 0.3961757778144035, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8313861549781232, log_density = 10.53583318080651, hamiltonian_energy = -8.747516450332794, hamiltonian_energy_error = 0.40461295187926893, max_hamiltonian_energy_error = 0.4091134323925427, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9956469321202344, log_density = 12.470422547011701, hamiltonian_energy = -9.193828701728572, hamiltonian_energy_error = -0.43457661844785456, max_hamiltonian_energy_error = -0.5837880580818116, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9772548412756797, log_density = 13.108200376539145, hamiltonian_energy = -11.787085704988268, hamiltonian_energy_error = 0.17342062119936763, max_hamiltonian_energy_error = -0.6252304770983752, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9985896526446065, log_density = 15.4428094483928, hamiltonian_energy = -11.04923790096799, hamiltonian_energy_error = -0.6424011298636767, max_hamiltonian_energy_error = -0.8492926102213438, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9026448109045396, log_density = 13.43843889616727, hamiltonian_energy = -12.209589532436993, hamiltonian_energy_error = 0.09595235259016377, max_hamiltonian_energy_error = 0.23132326757384192, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9580797704991328, log_density = 15.173423943962618, hamiltonian_energy = -11.86441855913129, hamiltonian_energy_error = -0.2656480671663033, max_hamiltonian_energy_error = 0.27079620634530066, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9034310784096613, log_density = 14.502752989757573, hamiltonian_energy = -12.108530296765684, hamiltonian_energy_error = -0.09682646719155841, max_hamiltonian_energy_error = 0.23240562954650024, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9983468563554343, log_density = 15.482249414703318, hamiltonian_energy = -14.132477986224627, hamiltonian_energy_error = -0.008607754960284097, max_hamiltonian_energy_error = -0.05048842940217746, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9459507400833246, log_density = 16.33646351117816, hamiltonian_energy = -14.184015373811402, hamiltonian_energy_error = -0.07126590492000773, max_hamiltonian_energy_error = 0.13967217798265708, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7640250006336059, log_density = 14.971218623215178, hamiltonian_energy = -13.132048528259626, hamiltonian_energy_error = 0.07492409511750076, max_hamiltonian_energy_error = 0.40599169218126185, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 16.10852973563445, hamiltonian_energy = -14.801735553897062, hamiltonian_energy_error = -0.11169574734528531, max_hamiltonian_energy_error = -0.11169574734528531, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9695396168191845, log_density = 15.620870704087015, hamiltonian_energy = -15.37251297286322, hamiltonian_energy_error = 0.011084076716105784, max_hamiltonian_energy_error = 0.045637913475847114, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7201430397308889, log_density = 11.82819452484637, hamiltonian_energy = -10.87190062198546, hamiltonian_energy_error = 0.33245103302317247, max_hamiltonian_energy_error = 0.44449644825129475, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8735607209478878, log_density = 8.942826071668913, hamiltonian_energy = -8.273771952438803, hamiltonian_energy_error = 0.21810068609318733, max_hamiltonian_energy_error = -0.2601947185400739, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.095051467363215, hamiltonian_energy = -7.8159687762873125, hamiltonian_energy_error = -0.19051412361369646, max_hamiltonian_energy_error = -0.6020349238287341, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9797238097006049, log_density = 12.4483775809746, hamiltonian_energy = -7.243538835084707, hamiltonian_energy_error = -0.38305635778896896, max_hamiltonian_energy_error = -0.38305635778896896, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8154638015641159, log_density = 8.287039774096478, hamiltonian_energy = -6.211146363644394, hamiltonian_energy_error = 0.8065591228218532, max_hamiltonian_energy_error = 0.8065591228218532, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9507471386104867, log_density = 14.987988274717251, hamiltonian_energy = -6.39740235270356, hamiltonian_energy_error = -1.1936621257099826, max_hamiltonian_energy_error = -1.1936621257099826, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9138201916839293, log_density = 14.937524131164837, hamiltonian_energy = -13.229376131194847, hamiltonian_energy_error = -0.09557665880407207, max_hamiltonian_energy_error = 0.15025006449470624, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8653651870445641, log_density = 15.61393429255675, hamiltonian_energy = -12.520982010181509, hamiltonian_energy_error = -0.06938293595742451, max_hamiltonian_energy_error = 0.30131948096102157, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9041542154643888, log_density = 14.918162123980398, hamiltonian_energy = -14.022123506608766, hamiltonian_energy_error = 0.16730213222244217, max_hamiltonian_energy_error = 0.21985750577955798, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6292131559960004, log_density = 11.269929127480498, hamiltonian_energy = -8.414817984013819, hamiltonian_energy_error = 0.5544188567100488, max_hamiltonian_energy_error = 0.8040924426687166, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9643242094760922, log_density = 9.851077859924471, hamiltonian_energy = -8.340747622194877, hamiltonian_energy_error = 0.28635333263206064, max_hamiltonian_energy_error = -0.5942659614049663, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9829385061469343, log_density = 8.387945208974823, hamiltonian_energy = -6.646127511836309, hamiltonian_energy_error = 0.0152429105097589, max_hamiltonian_energy_error = -0.44052809046891106, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9800444390955274, log_density = 10.2212068757545, hamiltonian_energy = -6.5864868227543365, hamiltonian_energy_error = -0.4016324618109559, max_hamiltonian_energy_error = -0.6444579674061748, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.7830590295984127, log_density = 10.511642673588833, hamiltonian_energy = -3.026951591423792, hamiltonian_energy_error = -0.6082391236015505, max_hamiltonian_energy_error = -1.4936899108526704, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 14.95012798395604, hamiltonian_energy = -10.080908764325715, hamiltonian_energy_error = -0.4611036044108019, max_hamiltonian_energy_error = -0.5836511407319467, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9640577439824601, log_density = 14.20601618216523, hamiltonian_energy = -13.309657552396121, hamiltonian_energy_error = 0.06506907368275527, max_hamiltonian_energy_error = -0.11502871636953493, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9844032980586462, log_density = 14.333723353158895, hamiltonian_energy = -12.23190451576411, hamiltonian_energy_error = -0.13255767901923754, max_hamiltonian_energy_error = -0.20167864857279305, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7954891641411839, log_density = 15.05458297668303, hamiltonian_energy = -10.9021876874286, hamiltonian_energy_error = 0.06954384938150682, max_hamiltonian_energy_error = 0.3925549280357181, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9012938737702533, log_density = 10.523653143193075, hamiltonian_energy = -9.624479248997085, hamiltonian_energy_error = 0.3144891402331318, max_hamiltonian_energy_error = 0.3144891402331318, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 10.98585754224931, hamiltonian_energy = -9.406699107139756, hamiltonian_energy_error = -0.01298395983425138, max_hamiltonian_energy_error = -0.4395049127486992, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9147908738863048, log_density = 13.711367445027896, hamiltonian_energy = -9.459477096559397, hamiltonian_energy_error = 0.06680864556514088, max_hamiltonian_energy_error = 0.4250099947938413, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9597370597304311, log_density = 14.727040079205342, hamiltonian_energy = -11.513160602892242, hamiltonian_energy_error = -0.19158116602382336, max_hamiltonian_energy_error = -0.5774770040317847, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7719365238215817, log_density = 14.440241343669719, hamiltonian_energy = -10.738427944561897, hamiltonian_energy_error = -0.29889079755706405, max_hamiltonian_energy_error = 0.7337683323585882, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.711833717929659, log_density = 13.316705853665091, hamiltonian_energy = -10.619485780072727, hamiltonian_energy_error = 0.2731448005876569, max_hamiltonian_energy_error = 0.5409750817992425, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 12.95771879785397, hamiltonian_energy = -12.26152462796729, hamiltonian_energy_error = -0.08068176874668787, max_hamiltonian_energy_error = -0.3919342537237842, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8753937438762456, log_density = 12.390040600279496, hamiltonian_energy = -9.019062508708856, hamiltonian_energy_error = 0.16840278349891769, max_hamiltonian_energy_error = -0.5053529788657158, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8990603614482887, log_density = 15.949484566679878, hamiltonian_energy = -11.16938001459173, hamiltonian_energy_error = -0.519382227716731, max_hamiltonian_energy_error = -0.519382227716731, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.907627652711785, hamiltonian_energy = -15.53017014965238, hamiltonian_energy_error = -0.013838108090663326, max_hamiltonian_energy_error = -0.07325825555543197, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8003191386493614, log_density = 14.084135098038224, hamiltonian_energy = -12.90487421215891, hamiltonian_energy_error = 0.3630640404754235, max_hamiltonian_energy_error = 0.3630640404754235, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7817242334357124, log_density = 16.32322465733924, hamiltonian_energy = -11.74614606395891, hamiltonian_energy_error = -0.3303948838057842, max_hamiltonian_energy_error = 0.6680204162922809, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9263607772662709, log_density = 15.185861000338644, hamiltonian_energy = -13.218846212891512, hamiltonian_energy_error = -0.005240732810500859, max_hamiltonian_energy_error = 0.26069969170617213, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 16.074698300481177, hamiltonian_energy = -14.987495289333086, hamiltonian_energy_error = -0.08536280176181066, max_hamiltonian_energy_error = -0.09488759748767173, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9737638452059995, log_density = 16.177822647466765, hamiltonian_energy = -15.595292803084167, hamiltonian_energy_error = 0.026023942256710342, max_hamiltonian_energy_error = 0.055780054055745154, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9623732057178636, log_density = 14.679573992350775, hamiltonian_energy = -14.032919231053171, hamiltonian_energy_error = 0.059707335907617676, max_hamiltonian_energy_error = 0.11346332239641654, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9891987702710366, log_density = 15.683817497334875, hamiltonian_energy = -13.48495593983337, hamiltonian_energy_error = -0.08063749112104723, max_hamiltonian_energy_error = -0.08063749112104723, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9967269003365598, log_density = 15.053736518301381, hamiltonian_energy = -14.19963499084644, hamiltonian_energy_error = -0.03156852012707567, max_hamiltonian_energy_error = -0.09731274368491682, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8439596336266313, log_density = 15.318844117727387, hamiltonian_energy = -11.953324819909781, hamiltonian_energy_error = 0.12885476700308907, max_hamiltonian_energy_error = 0.3248421826621257, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8796831584542517, log_density = 15.097886580471272, hamiltonian_energy = -12.529072691764469, hamiltonian_energy_error = -0.12335711451222764, max_hamiltonian_energy_error = 0.2977253094838801, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.808427733359705, log_density = 13.791913065762998, hamiltonian_energy = -13.032474484203872, hamiltonian_energy_error = 0.34896114041556636, max_hamiltonian_energy_error = 0.4051083854023574, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.640767651542118, log_density = 11.333966415046529, hamiltonian_energy = -8.05478637149755, hamiltonian_energy_error = 0.3400978718506913, max_hamiltonian_energy_error = 1.2284392478996091, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.991269845460189, log_density = 13.735597906576931, hamiltonian_energy = -9.102874568020043, hamiltonian_energy_error = -0.18173891057961988, max_hamiltonian_energy_error = -0.7199010213187034, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7194347423232669, log_density = 12.467349382198769, hamiltonian_energy = -9.836961288139664, hamiltonian_energy_error = 0.11490223532692667, max_hamiltonian_energy_error = 0.5635942926759672, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8188795614486127, log_density = 12.881891998093954, hamiltonian_energy = -8.798413237091244, hamiltonian_energy_error = 0.07864934875434137, max_hamiltonian_energy_error = 0.4355315002840854, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9851976545504652, log_density = 12.321570001333168, hamiltonian_energy = -11.323159925718592, hamiltonian_energy_error = 0.04542322683574618, max_hamiltonian_energy_error = -0.0662359296263677, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.507511985799908, hamiltonian_energy = -12.068174558440791, hamiltonian_energy_error = -0.08587358769396225, max_hamiltonian_energy_error = -0.35271890713994836, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9926835791537914, log_density = 12.62140676129873, hamiltonian_energy = -10.137724908317415, hamiltonian_energy_error = -0.01843604011636124, max_hamiltonian_energy_error = -0.22451389632089125, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.967025499869924, log_density = 13.051668516359777, hamiltonian_energy = -10.984630585210473, hamiltonian_energy_error = 0.09123642024178125, max_hamiltonian_energy_error = -0.2519287777590318, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9893302758485831, log_density = 12.521926669723396, hamiltonian_energy = -11.644568209974224, hamiltonian_energy_error = -0.06281282047818415, max_hamiltonian_energy_error = -0.29699924193126215, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6896173691631861, log_density = 14.56099331468296, hamiltonian_energy = -6.730661116866147, hamiltonian_energy_error = -0.09114261466220963, max_hamiltonian_energy_error = 0.7852611514565329, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.708559780026627, hamiltonian_energy = -14.245917338440941, hamiltonian_energy_error = -0.04193029460320297, max_hamiltonian_energy_error = -0.16939557632048086, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9594852360457445, log_density = 15.804782934402514, hamiltonian_energy = -14.294161750349522, hamiltonian_energy_error = -0.03080949871310601, max_hamiltonian_energy_error = 0.1981950402016146, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9390432008983175, log_density = 15.947004728631757, hamiltonian_energy = -14.798295382310375, hamiltonian_energy_error = -0.004736098595206073, max_hamiltonian_energy_error = 0.1755951044044508, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9366853205328248, log_density = 15.469319316467885, hamiltonian_energy = -12.914403744583609, hamiltonian_energy_error = -0.041103950490203545, max_hamiltonian_energy_error = 0.19204858923886015, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7817397188729284, log_density = 12.108346733856282, hamiltonian_energy = -9.61042243987141, hamiltonian_energy_error = 0.25732518093481715, max_hamiltonian_energy_error = 0.4253815623056614, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.317754805173674, hamiltonian_energy = -11.114966652081833, hamiltonian_energy_error = -0.2866863731952254, max_hamiltonian_energy_error = -0.29550528506350204, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9424095094035443, log_density = 14.968149374046334, hamiltonian_energy = -14.31653781242942, hamiltonian_energy_error = 0.11717497134542221, max_hamiltonian_energy_error = 0.20115773730445952, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9205909271673925, log_density = 15.790508670763941, hamiltonian_energy = -12.865888400543925, hamiltonian_energy_error = -0.1305878489455239, max_hamiltonian_energy_error = 0.3597227407112502, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8553849382611824, log_density = 14.332501379871935, hamiltonian_energy = -11.952237640788402, hamiltonian_energy_error = 0.23950051476758283, max_hamiltonian_energy_error = 0.35852012544442324, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9441875730639311, log_density = 13.540242725611067, hamiltonian_energy = -11.028686161871422, hamiltonian_energy_error = 0.0069072155166569615, max_hamiltonian_energy_error = 0.22361885659836211, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9971246111682281, log_density = 15.904289134730567, hamiltonian_energy = -12.814904644580384, hamiltonian_energy_error = -0.5045718793684575, max_hamiltonian_energy_error = -0.5045718793684575, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8256240619299638, log_density = 14.622058471466193, hamiltonian_energy = -13.33891026599903, hamiltonian_energy_error = 0.21065684339126456, max_hamiltonian_energy_error = 0.29880561042196874, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8711749484485923, log_density = 12.925685835956244, hamiltonian_energy = -12.249514440550401, hamiltonian_energy_error = 0.2899004002016987, max_hamiltonian_energy_error = 0.2899004002016987, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9904290626795703, log_density = 13.71149351501836, hamiltonian_energy = -11.327710028152564, hamiltonian_energy_error = -0.01494111083505345, max_hamiltonian_energy_error = -0.28518458004395875, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.275597697116504, hamiltonian_energy = -12.944972672969984, hamiltonian_energy_error = -0.15131811478204504, max_hamiltonian_energy_error = -0.3365767783801097, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9981680877107079, log_density = 15.891558393530623, hamiltonian_energy = -14.46340269620918, hamiltonian_energy_error = -0.1418763632460749, max_hamiltonian_energy_error = -0.2469001498918857, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8701961024919227, log_density = 14.65860830293774, hamiltonian_energy = -13.555025402254318, hamiltonian_energy_error = 0.1565089365893204, max_hamiltonian_energy_error = 0.29937957973924156, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9715594977534804, log_density = 14.483653142565545, hamiltonian_energy = -11.810409407311182, hamiltonian_energy_error = -0.18446362366083768, max_hamiltonian_energy_error = -0.27641505793120835, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9895485511445158, log_density = 15.075211143730037, hamiltonian_energy = -13.570334035770951, hamiltonian_energy_error = 0.05837977440745945, max_hamiltonian_energy_error = -0.17122418353713798, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9376415075060167, log_density = 14.919183227716932, hamiltonian_energy = -13.132086716551024, hamiltonian_energy_error = -0.20411592885535335, max_hamiltonian_energy_error = -0.21851569590275233, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7305242174307257, log_density = 15.332855046441296, hamiltonian_energy = -12.434748209532453, hamiltonian_energy_error = 0.047274875108833214, max_hamiltonian_energy_error = 0.5637227123446102, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9720260970637664, log_density = 13.150404808822138, hamiltonian_energy = -12.538640863084009, hamiltonian_energy_error = 0.04221599508381679, max_hamiltonian_energy_error = 0.07898288888183558, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9000066446290477, log_density = 15.190261816448961, hamiltonian_energy = -9.716050699458131, hamiltonian_energy_error = -0.04492633644542643, max_hamiltonian_energy_error = 0.26105332765203926, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9293230091602671, log_density = 15.63129811570644, hamiltonian_energy = -13.552344097774991, hamiltonian_energy_error = 0.023038754478827528, max_hamiltonian_energy_error = 0.2038991426708474, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9322451372821289, log_density = 15.834537173452064, hamiltonian_energy = -13.649152830506006, hamiltonian_energy_error = -0.10517730866411945, max_hamiltonian_energy_error = 0.16090538136112187, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.5518274634351614, log_density = 11.485907789087463, hamiltonian_energy = -10.230273553722883, hamiltonian_energy_error = 0.7597357087512098, max_hamiltonian_energy_error = 0.7597357087512098, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 12.782662955842861, hamiltonian_energy = -8.769093321028283, hamiltonian_energy_error = -0.23966842136417554, max_hamiltonian_energy_error = -0.23966842136417554, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8115009932783337, log_density = 16.203639883229837, hamiltonian_energy = -10.4779790214514, hamiltonian_energy_error = -0.44590375492286327, max_hamiltonian_energy_error = 0.5839219092869286, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.962400934471682, log_density = 14.864174949065255, hamiltonian_energy = -14.40043500750374, hamiltonian_energy_error = 0.06498296751514232, max_hamiltonian_energy_error = 0.06498296751514232, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9759111346472299, log_density = 15.59530248465623, hamiltonian_energy = -13.69741215316463, hamiltonian_energy_error = -0.029948082524944297, max_hamiltonian_energy_error = 0.059714569400577844, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7553865548681813, log_density = 15.27538261901233, hamiltonian_energy = -11.921362933056328, hamiltonian_energy_error = 0.18909920995714558, max_hamiltonian_energy_error = 0.7019803136477467, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9622890067424591, log_density = 15.237025616877473, hamiltonian_energy = -11.011057880643719, hamiltonian_energy_error = -0.20386290079433245, max_hamiltonian_energy_error = -0.20386290079433245, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9754483133378002, log_density = 15.447776877630755, hamiltonian_energy = -14.438393544533575, hamiltonian_energy_error = 0.04115848709611569, max_hamiltonian_energy_error = 0.051907893705767094, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9669758371181381, log_density = 13.918657027185994, hamiltonian_energy = -12.931568915847878, hamiltonian_energy_error = 0.02928166033649049, max_hamiltonian_energy_error = 0.08230878536192243, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9521700895918869, log_density = 15.578578644377298, hamiltonian_energy = -12.758088639009303, hamiltonian_energy_error = 0.09030921474089659, max_hamiltonian_energy_error = 0.19870310793596246, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9599956588537765, log_density = 13.961986536481017, hamiltonian_energy = -13.599920721795394, hamiltonian_energy_error = 0.11380633772192716, max_hamiltonian_energy_error = 0.11380633772192716, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9747716891131487, log_density = 12.589249228807473, hamiltonian_energy = -9.538524219881417, hamiltonian_energy_error = -0.20325165392266342, max_hamiltonian_energy_error = -0.4171700604226203, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9945865405616033, log_density = 14.51249702174361, hamiltonian_energy = -9.632859833603892, hamiltonian_energy_error = -0.08544091270539766, max_hamiltonian_energy_error = -0.4067829863541075, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 16.21079240490677, hamiltonian_energy = -14.231745347332934, hamiltonian_energy_error = -0.24751312090404198, max_hamiltonian_energy_error = -0.24751312090404198, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7397207383538733, log_density = 16.36033068405746, hamiltonian_energy = -13.410599271825532, hamiltonian_energy_error = 0.1798694128782241, max_hamiltonian_energy_error = 0.44348547466933574, tree_depth = 1, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6799108138630116, log_density = 10.522082630206414, hamiltonian_energy = -9.168477012722823, hamiltonian_energy_error = 0.5508286907168998, max_hamiltonian_energy_error = 0.5508286907168998, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 14.935836095240301, hamiltonian_energy = -9.619762998189866, hamiltonian_energy_error = -0.5224360682070994, max_hamiltonian_energy_error = -0.5224360682070994, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.5701430783667025, log_density = 14.935836095240301, hamiltonian_energy = -9.674080220025115, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 1.0145464395709318, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9775065732113364, log_density = 15.575930042178975, hamiltonian_energy = -13.869358774321078, hamiltonian_energy_error = 0.04798947192508862, max_hamiltonian_energy_error = 0.11720573780410426, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8348980145725547, log_density = 11.9172054602775, hamiltonian_energy = -10.270535075573958, hamiltonian_energy_error = 0.2991722892041828, max_hamiltonian_energy_error = 0.34294325762717826, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9735247448228421, log_density = 11.166534924904832, hamiltonian_energy = -9.427960277578457, hamiltonian_energy_error = 0.08728417148542711, max_hamiltonian_energy_error = -0.27940127999771214, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9514866246910029, log_density = 11.739343118523372, hamiltonian_energy = -9.218582295128174, hamiltonian_energy_error = -0.22634433042436264, max_hamiltonian_energy_error = -0.22634433042436264, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9977001094973478, log_density = 10.912405792968098, hamiltonian_energy = -10.38193135067018, hamiltonian_energy_error = 0.006825095164494144, max_hamiltonian_energy_error = -0.050221422530084325, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7529080087373243, log_density = 11.443185792837072, hamiltonian_energy = -3.7646114568522373, hamiltonian_energy_error = 0.01918908090955629, max_hamiltonian_energy_error = 0.6295139618435082, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9175844521567279, log_density = 14.037790715779469, hamiltonian_energy = -9.35407267459854, hamiltonian_energy_error = -0.33657922486438174, max_hamiltonian_energy_error = -0.33657922486438174, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9493104662633852, log_density = 14.249303777089409, hamiltonian_energy = -13.203886539264255, hamiltonian_energy_error = 0.10205628818885693, max_hamiltonian_energy_error = 0.17152588173358652, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9572576406267183, log_density = 14.151422272656976, hamiltonian_energy = -12.984915104236265, hamiltonian_energy_error = 0.08136146144026313, max_hamiltonian_energy_error = -0.22239575121051658, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9776598896376155, log_density = 13.008171603777605, hamiltonian_energy = -11.363728809868022, hamiltonian_energy_error = -0.08571025364824791, max_hamiltonian_energy_error = -0.525472927974242, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7914819287427249, log_density = 12.78197743234962, hamiltonian_energy = -10.916118873012906, hamiltonian_energy_error = 0.42766144447689136, max_hamiltonian_energy_error = 0.42766144447689136, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9145958377056241, log_density = 12.677928822183723, hamiltonian_energy = -11.035524407663592, hamiltonian_energy_error = 0.2326866591401604, max_hamiltonian_energy_error = -0.4934140157249054, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8997205397443873, log_density = 13.29867001826201, hamiltonian_energy = -8.945003751733688, hamiltonian_energy_error = -0.19006631528830376, max_hamiltonian_energy_error = -0.9034330322228232, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.918934047528025, log_density = 14.744752472612964, hamiltonian_energy = -11.205560628538297, hamiltonian_energy_error = -0.3781140517159951, max_hamiltonian_energy_error = 0.3992250696406714, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8833786860473661, log_density = 14.336081843580777, hamiltonian_energy = -12.286290137757437, hamiltonian_energy_error = -0.1233519616074279, max_hamiltonian_energy_error = 0.31133500429592154, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9508104701814001, log_density = 12.762091855562996, hamiltonian_energy = -11.066916982456751, hamiltonian_energy_error = 0.08451669605322643, max_hamiltonian_energy_error = -0.23319396370004952, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8295139981342045, log_density = 15.20801841283984, hamiltonian_energy = -10.461908830481327, hamiltonian_energy_error = -0.05262549530266192, max_hamiltonian_energy_error = 0.4865798802730108, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7528195553254972, log_density = 12.79472082126248, hamiltonian_energy = -10.221110649631601, hamiltonian_energy_error = 0.4863259299445737, max_hamiltonian_energy_error = 0.79957944433046, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.238518065940399, hamiltonian_energy = -12.131809875223315, hamiltonian_energy_error = -0.19751101179658903, max_hamiltonian_energy_error = -0.6755184615047582, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9972599743232219, log_density = 15.057487557399522, hamiltonian_energy = -12.266754019397709, hamiltonian_energy_error = -0.1976497848627723, max_hamiltonian_energy_error = -0.531359263884621, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8597214668909317, log_density = 11.967939494015292, hamiltonian_energy = -8.456435274704194, hamiltonian_energy_error = 0.29689606726610407, max_hamiltonian_energy_error = 0.3471422837576501, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9679472966092998, log_density = 12.559797089192806, hamiltonian_energy = -9.445975725031634, hamiltonian_energy_error = 0.01245306605220975, max_hamiltonian_energy_error = -0.47348160088384006, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9893347133116442, log_density = 13.917024638385561, hamiltonian_energy = -11.20632046648336, hamiltonian_energy_error = -0.24727348812738725, max_hamiltonian_energy_error = -0.5642141561739447, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 13.823014537036297, hamiltonian_energy = -13.08464269120707, hamiltonian_energy_error = -0.09685562175577545, max_hamiltonian_energy_error = -0.2205614005687, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9858845313516602, log_density = 14.92467619134534, hamiltonian_energy = -13.054377807569457, hamiltonian_energy_error = -0.08666471757493532, max_hamiltonian_energy_error = -0.23613985545161498, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7387403308148629, log_density = 12.43978583374004, hamiltonian_energy = -10.906081383014294, hamiltonian_energy_error = 0.2988012815626995, max_hamiltonian_energy_error = 0.5143193969347806, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8209656864960315, log_density = 10.935113343376468, hamiltonian_energy = -9.288370591856669, hamiltonian_energy_error = 0.27777412604717355, max_hamiltonian_energy_error = 0.42923374906866485, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8358004547360951, log_density = 9.99591155364362, hamiltonian_energy = -6.817151240718397, hamiltonian_energy_error = 0.1297608400265844, max_hamiltonian_energy_error = 0.346687754525159, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9606801961215756, log_density = 13.002947973215756, hamiltonian_energy = -8.666466188384824, hamiltonian_energy_error = -0.17751921772098989, max_hamiltonian_energy_error = -0.5923219692567212, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8215664604505823, log_density = 14.000110434559259, hamiltonian_energy = -10.00159694812707, hamiltonian_energy_error = 0.1792619801422326, max_hamiltonian_energy_error = 0.3504541423558294, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9733636291636302, log_density = 15.570852297526269, hamiltonian_energy = -12.644748292784822, hamiltonian_energy_error = -0.1988133731044357, max_hamiltonian_energy_error = -0.2303538893357029, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5496912333609623, log_density = 11.58595044498462, hamiltonian_energy = -7.870405008588494, hamiltonian_energy_error = 0.6827194568295001, max_hamiltonian_energy_error = 0.7898605105916507, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8835100340280663, log_density = 9.810089677593893, hamiltonian_energy = -8.122519281414146, hamiltonian_energy_error = 0.3424922586823733, max_hamiltonian_energy_error = -0.36223049534089036, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9297658475659626, log_density = 11.919171942034135, hamiltonian_energy = -7.340397567261666, hamiltonian_energy_error = -0.3453456927042433, max_hamiltonian_energy_error = -0.8357780419261278, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7765071198792948, log_density = 12.090418685742762, hamiltonian_energy = -7.322233463065352, hamiltonian_energy_error = -0.006806090644052354, max_hamiltonian_energy_error = 1.054977131508207, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7360560638740294, log_density = 11.381431821439575, hamiltonian_energy = -7.456428416885468, hamiltonian_energy_error = 0.07714511822145909, max_hamiltonian_energy_error = 0.7773117548138391, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9075700690451647, log_density = 12.983969748559197, hamiltonian_energy = -6.323326211444396, hamiltonian_energy_error = -0.2645497307157685, max_hamiltonian_energy_error = -0.2896090253969117, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.172931254320634, hamiltonian_energy = -12.503038561273492, hamiltonian_energy_error = -0.17457356547184055, max_hamiltonian_energy_error = -0.21930456882518357, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7857613053664456, log_density = 14.800434654108242, hamiltonian_energy = -12.08701184311504, hamiltonian_energy_error = 0.03601254181142366, max_hamiltonian_energy_error = 0.4531921613076122, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8605782468979511, log_density = 16.14145728456536, hamiltonian_energy = -12.287498718923283, hamiltonian_energy_error = -0.1735575393731743, max_hamiltonian_energy_error = 0.3784317123156349, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8882872780124396, log_density = 14.919575578055008, hamiltonian_energy = -14.127031243971892, hamiltonian_energy_error = 0.1472700031173666, max_hamiltonian_energy_error = 0.19331455172302547, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9718521725362456, log_density = 15.266647312862522, hamiltonian_energy = -12.545138817997639, hamiltonian_energy_error = -0.07154983144571148, max_hamiltonian_energy_error = -0.26806069338712035, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9286897370264047, log_density = 14.946712047184091, hamiltonian_energy = -13.360964938553707, hamiltonian_energy_error = 0.1012531868359936, max_hamiltonian_energy_error = 0.18311157421975288, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8780485977535901, log_density = 15.368106591315229, hamiltonian_energy = -12.003668124843198, hamiltonian_energy_error = -0.4777798251033669, max_hamiltonian_energy_error = -0.4777798251033669, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9173303179064155, log_density = 14.528202654776669, hamiltonian_energy = -11.940899694440171, hamiltonian_energy_error = 0.09079386407918832, max_hamiltonian_energy_error = 0.22806361236875183, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9718547233774588, log_density = 14.281894957891275, hamiltonian_energy = -12.402982787687186, hamiltonian_energy_error = -0.029228388740328626, max_hamiltonian_energy_error = -0.09375803093955426, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7466716435022753, log_density = 12.184351856003572, hamiltonian_energy = -9.529936920395642, hamiltonian_energy_error = 0.5040268404178221, max_hamiltonian_energy_error = 0.5390841024152984, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 14.396448231189208, hamiltonian_energy = -11.714066915951726, hamiltonian_energy_error = -0.5349345133600387, max_hamiltonian_energy_error = -0.5349345133600387, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9243491828600854, log_density = 12.744446146345634, hamiltonian_energy = -11.818972208872808, hamiltonian_energy_error = 0.2178610559005243, max_hamiltonian_energy_error = 0.2178610559005243, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9706321280847228, log_density = 12.537140135460405, hamiltonian_energy = -10.385563187207168, hamiltonian_energy_error = 0.032516433235716846, max_hamiltonian_energy_error = -0.34262584755141035, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.992834939185153, log_density = 14.705426203878519, hamiltonian_energy = -11.679456643912996, hamiltonian_energy_error = -0.20629492933506022, max_hamiltonian_energy_error = -0.24900773967804568, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9342222441979172, log_density = 15.392932699273087, hamiltonian_energy = -12.146827556998183, hamiltonian_energy_error = -0.0022884031180403497, max_hamiltonian_energy_error = 0.20734512392814253, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9520558060598342, log_density = 15.099602874017911, hamiltonian_energy = -13.879244874848984, hamiltonian_energy_error = 0.08967446500035336, max_hamiltonian_energy_error = 0.13391794787419542, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9845690618034468, log_density = 14.953574708223494, hamiltonian_energy = -13.969493298782156, hamiltonian_energy_error = -0.013095398650539991, max_hamiltonian_energy_error = -0.19055760303549008, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9258577661335511, log_density = 14.499054666523477, hamiltonian_energy = -13.258440246275873, hamiltonian_energy_error = 0.11235094868072615, max_hamiltonian_energy_error = 0.14641203256093682, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9955020544988987, log_density = 14.231171404336768, hamiltonian_energy = -12.515637284567898, hamiltonian_energy_error = -0.10621542990246091, max_hamiltonian_energy_error = -0.2216009821119993, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9215805568320611, log_density = 14.868700794394544, hamiltonian_energy = -12.595930136352159, hamiltonian_energy_error = -0.06557778544106796, max_hamiltonian_energy_error = 0.19589608066397446, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.379798315457468, log_density = 9.983713387954804, hamiltonian_energy = -5.04913701756187, hamiltonian_energy_error = 0.779653002042668, max_hamiltonian_energy_error = 1.8103511731978088, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 14.207334838092473, hamiltonian_energy = -9.143239880120776, hamiltonian_energy_error = -0.9016617806008949, max_hamiltonian_energy_error = -0.9016617806008949, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 16.01483919292786, hamiltonian_energy = -14.00462392527609, hamiltonian_energy_error = -0.200380081792213, max_hamiltonian_energy_error = -0.200380081792213, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8901900544190281, log_density = 15.82980290589918, hamiltonian_energy = -14.377948190511324, hamiltonian_energy_error = 0.09802733568630373, max_hamiltonian_energy_error = 0.17596733161717637, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7042348189051294, log_density = 13.493605695051487, hamiltonian_energy = -10.70732208439146, hamiltonian_energy_error = 0.3976440822011593, max_hamiltonian_energy_error = 0.5561600991812892, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9592038887232659, log_density = 14.04903380630508, hamiltonian_energy = -10.600587942301551, hamiltonian_energy_error = 0.06082724630518754, max_hamiltonian_energy_error = -0.23130539348108492, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8077148371444657, log_density = 10.892393603708847, hamiltonian_energy = -8.545424200901676, hamiltonian_energy_error = 0.320711005136161, max_hamiltonian_energy_error = 0.320711005136161, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9830225416879168, log_density = 13.738580750924992, hamiltonian_energy = -8.713758816260142, hamiltonian_energy_error = -0.2050511533753827, max_hamiltonian_energy_error = -0.6678081351795537, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 27, is_accept = true, acceptance_rate = 0.9420285676086082, log_density = 13.90802184081047, hamiltonian_energy = -12.212279503433038, hamiltonian_energy_error = 0.10591803007781131, max_hamiltonian_energy_error = -0.4377962522818013, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 15.886468717857984, hamiltonian_energy = -13.322789378087409, hamiltonian_energy_error = -0.476327528020029, max_hamiltonian_energy_error = -0.476327528020029, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 16.060044176102398, hamiltonian_energy = -15.695974062281332, hamiltonian_energy_error = -0.026226770950383838, max_hamiltonian_energy_error = -0.0680528335828523, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.947041149718216, log_density = 16.121815789980758, hamiltonian_energy = -14.677468269110099, hamiltonian_energy_error = -0.03210540317106236, max_hamiltonian_energy_error = 0.15178845450683376, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.7894395362571295, log_density = 15.720471577094555, hamiltonian_energy = -13.580878698940367, hamiltonian_energy_error = 0.15597014709646118, max_hamiltonian_energy_error = 0.4164519089209229, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8406623347802202, log_density = 11.733735610914128, hamiltonian_energy = -11.428474569719612, hamiltonian_energy_error = 0.40292696528965166, max_hamiltonian_energy_error = 0.40292696528965166, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.821355045184128, log_density = 9.999779858974708, hamiltonian_energy = -7.547686373716264, hamiltonian_energy_error = 0.16742439877027593, max_hamiltonian_energy_error = 0.4809034990322729, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9283616800677515, log_density = 13.768013727671992, hamiltonian_energy = -7.064964582784835, hamiltonian_energy_error = -0.23016280480133933, max_hamiltonian_energy_error = -0.2556189589456519, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8956238992178243, log_density = 14.652581514701666, hamiltonian_energy = -11.48855599640477, hamiltonian_energy_error = -0.24361244519292313, max_hamiltonian_energy_error = 0.5131688610264664, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9671488392457803, log_density = 15.176076173845491, hamiltonian_energy = -13.111887891292785, hamiltonian_energy_error = 0.0022316843264214015, max_hamiltonian_energy_error = 0.09416035983351101, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9024997801188996, log_density = 13.901854897691997, hamiltonian_energy = -12.623981904580667, hamiltonian_energy_error = 0.08328393001060519, max_hamiltonian_energy_error = 0.26546165043285086, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9763950398757283, log_density = 14.91129658771884, hamiltonian_energy = -12.769603807621984, hamiltonian_energy_error = -0.09079607530256695, max_hamiltonian_energy_error = -0.14652598628300773, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5689471945680935, log_density = 13.249661697397741, hamiltonian_energy = -11.098648901775567, hamiltonian_energy_error = 0.8799676443200255, max_hamiltonian_energy_error = 1.3741387472490576, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8093392506735694, log_density = 10.652657288030559, hamiltonian_energy = -8.091789290284286, hamiltonian_energy_error = 0.41494844035874934, max_hamiltonian_energy_error = 0.6105632617988652, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8016085629160375, log_density = 15.494334430232776, hamiltonian_energy = -7.649984891325726, hamiltonian_energy_error = -0.7374173562065067, max_hamiltonian_energy_error = -0.7374173562065067, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9995404123280943, log_density = 15.836827458066887, hamiltonian_energy = -14.977667525936363, hamiltonian_energy_error = -0.06027246827682475, max_hamiltonian_energy_error = -0.06027876192505843, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9596727904737798, log_density = 15.66350010376993, hamiltonian_energy = -14.516672691714675, hamiltonian_energy_error = 0.018173266483819006, max_hamiltonian_energy_error = 0.07632563628983391, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9638478706446836, log_density = 15.708638527217346, hamiltonian_energy = -13.465140283731035, hamiltonian_energy_error = -0.034167601149393434, max_hamiltonian_energy_error = 0.12017228304135763, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7098977693217025, log_density = 11.648255480986034, hamiltonian_energy = -10.912660285485618, hamiltonian_energy_error = 0.42164388152204957, max_hamiltonian_energy_error = 0.45959294173750465, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9922272794933121, log_density = 15.775490646333347, hamiltonian_energy = -11.661694476372826, hamiltonian_energy_error = -0.5387526468136024, max_hamiltonian_energy_error = -0.5387526468136024, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.874745567859996, log_density = 14.291445023343211, hamiltonian_energy = -13.531491496961126, hamiltonian_energy_error = 0.11751099522420816, max_hamiltonian_energy_error = 0.2239368296872577, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9654371218444224, log_density = 15.975378065150974, hamiltonian_energy = -12.942814308138086, hamiltonian_energy_error = -0.038399088100790735, max_hamiltonian_energy_error = 0.08993633477834706, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8904153042308735, log_density = 16.010848047866986, hamiltonian_energy = -12.997468852854588, hamiltonian_energy_error = -0.06226226425392589, max_hamiltonian_energy_error = 0.21858950818834622, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9254201640605247, log_density = 16.31599885798527, hamiltonian_energy = -14.623085454140442, hamiltonian_energy_error = -0.003489463206506116, max_hamiltonian_energy_error = 0.15958843181364557, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9467491514079626, log_density = 15.374922807744586, hamiltonian_energy = -14.192718734479634, hamiltonian_energy_error = 0.07416663047327177, max_hamiltonian_energy_error = 0.08850257934628303, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9177298018837753, log_density = 15.372078067086942, hamiltonian_energy = -12.83359744866317, hamiltonian_energy_error = -0.09481177566150656, max_hamiltonian_energy_error = 0.3065279607218958, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9585272642855194, log_density = 14.267888105778901, hamiltonian_energy = -13.586581076919622, hamiltonian_energy_error = 0.040441543508070055, max_hamiltonian_energy_error = 0.13520142250992784, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6803073392288846, log_density = 12.987130351162044, hamiltonian_energy = -10.562586972415062, hamiltonian_energy_error = 0.5012247572214683, max_hamiltonian_energy_error = 0.972261468391709, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8738643749911024, log_density = 14.609989479804788, hamiltonian_energy = -11.16580620315749, hamiltonian_energy_error = -0.36349277165640714, max_hamiltonian_energy_error = 0.48321071921922076, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9904133849025067, log_density = 14.926402785265932, hamiltonian_energy = -13.411287979666863, hamiltonian_energy_error = -0.060571971572537464, max_hamiltonian_energy_error = -0.08606688582088928, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9831809674634578, log_density = 15.742622012846372, hamiltonian_energy = -13.18107049300177, hamiltonian_energy_error = -0.17244399750701866, max_hamiltonian_energy_error = -0.17244399750701866, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9296165014060185, log_density = 15.167968973591304, hamiltonian_energy = -12.941182256624346, hamiltonian_energy_error = 0.008941669748180558, max_hamiltonian_energy_error = 0.17762923359902238, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9790439022774751, log_density = 15.056492240918228, hamiltonian_energy = -13.745940176974415, hamiltonian_energy_error = 0.02106471715634406, max_hamiltonian_energy_error = -0.13244881824140542, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8927135158306291, log_density = 13.335061198132502, hamiltonian_energy = -12.650198768702978, hamiltonian_energy_error = 0.3260561864069711, max_hamiltonian_energy_error = 0.3260561864069711, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.929369207246055, log_density = 11.72533863307983, hamiltonian_energy = -11.051167042381454, hamiltonian_energy_error = 0.23812062264003053, max_hamiltonian_energy_error = -0.3882474827514262, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9925133700309973, log_density = 13.603319910757945, hamiltonian_energy = -8.765446250092149, hamiltonian_energy_error = -0.08556001109467459, max_hamiltonian_energy_error = -0.23128464669915516, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9773828427566552, log_density = 13.200004420444852, hamiltonian_energy = -9.39655708630972, hamiltonian_energy_error = -0.07432092078419217, max_hamiltonian_energy_error = -0.24024189935948748, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8633864802205115, log_density = 13.002350515231091, hamiltonian_energy = -11.293669033533776, hamiltonian_energy_error = 0.14161248242541902, max_hamiltonian_energy_error = 0.2356967684436757, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8559209814587633, log_density = 11.590706034675858, hamiltonian_energy = -5.7528637719589995, hamiltonian_energy_error = 0.07039339037691583, max_hamiltonian_energy_error = 0.29725297961903685, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8221145410765696, log_density = 10.50000399310564, hamiltonian_energy = -7.3453670356181515, hamiltonian_energy_error = 0.3663816588244675, max_hamiltonian_energy_error = 0.4703881030758126, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.975116630131456, log_density = 15.449811885384788, hamiltonian_energy = -9.46484587608048, hamiltonian_energy_error = -0.5666995947666393, max_hamiltonian_energy_error = -0.5666995947666393, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9776468573803841, log_density = 15.929465599596963, hamiltonian_energy = -13.920586740392254, hamiltonian_energy_error = -0.015704925913611945, max_hamiltonian_energy_error = 0.08492218947811914, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9235272994531863, log_density = 15.003434645372732, hamiltonian_energy = -13.536787912692452, hamiltonian_energy_error = 0.027955795972669506, max_hamiltonian_energy_error = 0.1657110272726534, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9831246016848822, log_density = 15.796046893534509, hamiltonian_energy = -12.919264823224676, hamiltonian_energy_error = -0.06828522580227236, max_hamiltonian_energy_error = -0.06828522580227236, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.897560012340639, log_density = 15.32792545990349, hamiltonian_energy = -14.436490308049716, hamiltonian_energy_error = 0.05780093632573369, max_hamiltonian_energy_error = 0.26303436828010973, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9467260453369436, log_density = 14.208886696522082, hamiltonian_energy = -12.818594958727337, hamiltonian_energy_error = 0.07924325519193687, max_hamiltonian_energy_error = 0.12380144095319778, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8852042984184243, log_density = 13.748057206726838, hamiltonian_energy = -9.15829288614659, hamiltonian_energy_error = 0.13268800828828375, max_hamiltonian_energy_error = 0.4656387882836661, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9959839696942293, log_density = 14.268594032900811, hamiltonian_energy = -12.07648172702912, hamiltonian_energy_error = -0.24374155886344084, max_hamiltonian_energy_error = -0.39784412984576356, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9032608113248148, log_density = 16.174645993574334, hamiltonian_energy = -12.426998237790762, hamiltonian_energy_error = -0.016376294191069007, max_hamiltonian_energy_error = 0.3086635725928204, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8593768826522579, log_density = 14.393629378374323, hamiltonian_energy = -13.87348310614146, hamiltonian_energy_error = 0.21845109296952003, max_hamiltonian_energy_error = 0.22121903979870616, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9887587980811835, log_density = 15.55357013149791, hamiltonian_energy = -12.1113084352063, hamiltonian_energy_error = -0.15483198815196708, max_hamiltonian_energy_error = -0.18961417255837354, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9975341355928332, log_density = 15.845727674994787, hamiltonian_energy = -14.996225426984315, hamiltonian_energy_error = -0.012933958172185456, max_hamiltonian_energy_error = -0.1850022847376689, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.799165249593491, log_density = 15.201532463459888, hamiltonian_energy = -13.03577940867357, hamiltonian_energy_error = 0.08587241592815076, max_hamiltonian_energy_error = 0.49846482288018557, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8659042012404424, log_density = 14.04478996043552, hamiltonian_energy = -12.956978175456806, hamiltonian_energy_error = 0.3263742565112917, max_hamiltonian_energy_error = 0.41848909263287126, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9840005421917989, log_density = 16.34788147638567, hamiltonian_energy = -13.844148541372379, hamiltonian_energy_error = -0.5394684262741194, max_hamiltonian_energy_error = -0.5394684262741194, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9939108923631366, log_density = 16.127429114441654, hamiltonian_energy = -15.90524274148407, hamiltonian_energy_error = 0.007069815788376843, max_hamiltonian_energy_error = -0.03957135827546665, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9938260545149179, log_density = 15.67262648903132, hamiltonian_energy = -15.272342780709645, hamiltonian_energy_error = -0.012115740977835188, max_hamiltonian_energy_error = -0.03617931732565438, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9347413559192418, log_density = 16.327755701809508, hamiltonian_energy = -14.473484256934894, hamiltonian_energy_error = 0.004770029140152232, max_hamiltonian_energy_error = 0.1083934963583495, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9082179616906664, log_density = 14.232249984183275, hamiltonian_energy = -13.163161178059106, hamiltonian_energy_error = 0.09386366777320632, max_hamiltonian_energy_error = 0.1519170045794649, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8395894608703933, log_density = 15.951344101717932, hamiltonian_energy = -12.065146025769259, hamiltonian_energy_error = -0.08836486717945569, max_hamiltonian_energy_error = 0.44647438152703245, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9831401562459984, log_density = 15.152470574700594, hamiltonian_energy = -14.74724557476868, hamiltonian_energy_error = 0.007216504784379296, max_hamiltonian_energy_error = 0.04093863973285394, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7502575426836225, log_density = 12.007793889225558, hamiltonian_energy = -11.018609095815968, hamiltonian_energy_error = 0.43057499355101747, max_hamiltonian_energy_error = 0.43057499355101747, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9962731550754073, log_density = 13.536712402205785, hamiltonian_energy = -10.531239419239974, hamiltonian_energy_error = -0.28858671801904734, max_hamiltonian_energy_error = -0.4751026125645481, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.979645281728235, log_density = 15.343299817863063, hamiltonian_energy = -12.31802803886952, hamiltonian_energy_error = -0.1064655149749072, max_hamiltonian_energy_error = -0.34266426634336966, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9848032770937413, log_density = 15.394986869308763, hamiltonian_energy = -13.86816279364838, hamiltonian_energy_error = -0.04886162940738714, max_hamiltonian_energy_error = -0.17713323256280233, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7192512678725672, log_density = 15.037801643871983, hamiltonian_energy = -12.362242303183178, hamiltonian_energy_error = 0.18725236942810852, max_hamiltonian_energy_error = 0.585767842923822, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8819386748359458, log_density = 14.645041663329105, hamiltonian_energy = -10.941220652916371, hamiltonian_energy_error = 0.020695630085032946, max_hamiltonian_energy_error = 0.45309844465103666, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9986509131856718, log_density = 15.337348971199667, hamiltonian_energy = -13.185031789442206, hamiltonian_energy_error = -0.12810218455673095, max_hamiltonian_energy_error = -0.12810218455673095, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8449642550483073, log_density = 16.427615829430543, hamiltonian_energy = -13.19361860776053, hamiltonian_energy_error = -0.135658316747989, max_hamiltonian_energy_error = 0.36074641775567073, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7656560628784912, log_density = 15.213719275229563, hamiltonian_energy = -13.14103182048816, hamiltonian_energy_error = 0.07320446952422444, max_hamiltonian_energy_error = 0.42307944233598427, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8596832199528512, log_density = 13.753380751127189, hamiltonian_energy = -12.297184693268965, hamiltonian_energy_error = 0.2432150295468567, max_hamiltonian_energy_error = 0.2505350018419179, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8445184708289025, log_density = 10.6782584334551, hamiltonian_energy = -8.827442800192639, hamiltonian_energy_error = 0.08201101286320345, max_hamiltonian_energy_error = 0.36961246075725107, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9591412871840594, log_density = 12.820010485952874, hamiltonian_energy = -8.420070571591376, hamiltonian_energy_error = -0.08832235265583854, max_hamiltonian_energy_error = -0.528513023232783, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8943896539621429, log_density = 12.560239825811717, hamiltonian_energy = -9.671183304735948, hamiltonian_energy_error = 0.21304566339556885, max_hamiltonian_energy_error = 0.4792846849887944, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7752293297609976, log_density = 13.256361945509626, hamiltonian_energy = -8.82371710684539, hamiltonian_energy_error = -0.632173752254495, max_hamiltonian_energy_error = -0.9384886342901044, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9092804788142251, log_density = 13.11947761353481, hamiltonian_energy = -11.755889386678232, hamiltonian_energy_error = 0.1702945442748085, max_hamiltonian_energy_error = 0.30482408432707153, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6140896076056365, log_density = 10.68974096894293, hamiltonian_energy = -5.112199287836714, hamiltonian_energy_error = 0.22157232979429597, max_hamiltonian_energy_error = 0.8179575041035463, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9683173423838574, log_density = 15.086585946965904, hamiltonian_energy = -10.050722231676207, hamiltonian_energy_error = -0.7022994760444057, max_hamiltonian_energy_error = -0.7022994760444057, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8818708509409001, log_density = 15.709429858930015, hamiltonian_energy = -13.701623114856655, hamiltonian_energy_error = 0.04668416336141412, max_hamiltonian_energy_error = 0.30759716301019857, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9377038482155479, log_density = 15.568124934818623, hamiltonian_energy = -14.484106407095705, hamiltonian_energy_error = -0.03682665375579752, max_hamiltonian_energy_error = 0.21801264924938302, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.175743069880859, hamiltonian_energy = -14.766787608145085, hamiltonian_energy_error = -0.047313219771718096, max_hamiltonian_energy_error = -0.17999760629147943, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9322437940606011, log_density = 16.01734978430195, hamiltonian_energy = -13.3088863444237, hamiltonian_energy_error = -0.016199409345022175, max_hamiltonian_energy_error = 0.1678560039451149, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8245385123861024, log_density = 13.644587165147799, hamiltonian_energy = -12.459085660596255, hamiltonian_energy_error = 0.1909966383803745, max_hamiltonian_energy_error = 0.34946503741147517, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9397575808346575, log_density = 15.267639219344998, hamiltonian_energy = -11.393087077819946, hamiltonian_energy_error = -0.23816871545820106, max_hamiltonian_energy_error = -0.24922283374380072, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6804522611767325, log_density = 13.349884769165804, hamiltonian_energy = -11.379294048792682, hamiltonian_energy_error = 0.5551390017573343, max_hamiltonian_energy_error = 0.7292998155917019, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 14.472691330259291, hamiltonian_energy = -12.344724728789135, hamiltonian_energy_error = -0.18935623983561278, max_hamiltonian_energy_error = -0.6225966460040002, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7848477317306499, log_density = 15.535940743888064, hamiltonian_energy = -8.016881628297234, hamiltonian_energy_error = -0.1511196288947998, max_hamiltonian_energy_error = 0.5990514653989498, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8487508507923249, log_density = 12.581097740245651, hamiltonian_energy = -8.506384608092668, hamiltonian_energy_error = 0.46358569399431104, max_hamiltonian_energy_error = 0.5063597863608127, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8851651954082674, log_density = 13.543581695363727, hamiltonian_energy = -9.204884253000976, hamiltonian_energy_error = 0.04051385381294281, max_hamiltonian_energy_error = -0.3580174103792988, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9757287429511605, log_density = 12.617490846926758, hamiltonian_energy = -8.467343109196314, hamiltonian_energy_error = -0.10265957935066794, max_hamiltonian_energy_error = -0.10588731617356295, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9797136830295937, log_density = 14.04774755055665, hamiltonian_energy = -11.084221681350643, hamiltonian_energy_error = -0.1309217562907481, max_hamiltonian_energy_error = -0.15272083177216977, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8707373939736781, log_density = 11.023550357381149, hamiltonian_energy = -9.22935071000441, hamiltonian_energy_error = 0.2063103077810009, max_hamiltonian_energy_error = 0.29665884905848827, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9920256454596428, log_density = 15.573838592749247, hamiltonian_energy = -9.791142321016645, hamiltonian_energy_error = -0.2860168746538747, max_hamiltonian_energy_error = -0.2860168746538747, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9718031765583619, log_density = 15.320089251634094, hamiltonian_energy = -13.836757669643045, hamiltonian_energy_error = 0.026345559058515988, max_hamiltonian_energy_error = 0.10502220893955361, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9018761842511822, log_density = 14.756671901348284, hamiltonian_energy = -11.371403195692968, hamiltonian_energy_error = -0.003415030140363484, max_hamiltonian_energy_error = 0.2645241048365996, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9766497386602647, log_density = 15.672815359819475, hamiltonian_energy = -14.127959776415596, hamiltonian_energy_error = -0.019704655901509938, max_hamiltonian_energy_error = -0.19221937059313454, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.789136416250094, log_density = 14.586507254332634, hamiltonian_energy = -12.080545638186702, hamiltonian_energy_error = 0.20261293645420508, max_hamiltonian_energy_error = 0.5963562891509877, tree_depth = 1, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9100075042335257, log_density = 13.776390177678344, hamiltonian_energy = -12.127362354127218, hamiltonian_energy_error = 0.13375251951817724, max_hamiltonian_energy_error = 0.3318096227293523, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9486229848534118, log_density = 14.211932887365212, hamiltonian_energy = -11.292396442182373, hamiltonian_energy_error = 0.05191567048455603, max_hamiltonian_energy_error = -0.38518378660699604, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9753903119003315, log_density = 15.242155161879921, hamiltonian_energy = -12.333331704255755, hamiltonian_energy_error = -0.4111995555228454, max_hamiltonian_energy_error = -0.4111995555228454, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9999266448875355, log_density = 16.36128064525152, hamiltonian_energy = -14.671029929153455, hamiltonian_energy_error = -0.1789770048918733, max_hamiltonian_energy_error = -0.1789770048918733, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9254347716165626, log_density = 15.535372552210653, hamiltonian_energy = -14.361233695016132, hamiltonian_energy_error = 0.077747433346115, max_hamiltonian_energy_error = 0.15869953037537776, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.3952501162634261, log_density = 13.786086807221537, hamiltonian_energy = -7.023081416074875, hamiltonian_energy_error = 0.4052773602723363, max_hamiltonian_energy_error = 2.5930558632011094, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.936010070482833, log_density = 13.346784062829576, hamiltonian_energy = -11.092753979644122, hamiltonian_energy_error = 0.01599823223087249, max_hamiltonian_energy_error = -0.3519852942836561, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9654656646033813, log_density = 11.543501471091492, hamiltonian_energy = -9.953708922773504, hamiltonian_energy_error = 0.17026837884121981, max_hamiltonian_energy_error = 0.17026837884121981, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9427608042439607, log_density = 12.263928778481613, hamiltonian_energy = -8.892811996713704, hamiltonian_energy_error = -0.04243622061789232, max_hamiltonian_energy_error = 0.34711478545718144, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.378046649119176, hamiltonian_energy = -10.993626905360015, hamiltonian_energy_error = -0.16507666192943127, max_hamiltonian_energy_error = -0.3036223029009548, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9072172836384104, log_density = 14.298536275483997, hamiltonian_energy = -9.432302209490086, hamiltonian_energy_error = -0.3127648319212284, max_hamiltonian_energy_error = -0.3127648319212284, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9264539297321731, log_density = 13.86364329008023, hamiltonian_energy = -10.993143140548462, hamiltonian_energy_error = 0.1622267156217152, max_hamiltonian_energy_error = 0.37572521587395435, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6528260713226751, log_density = 11.08975621112587, hamiltonian_energy = -9.080268104493584, hamiltonian_energy_error = 0.02369121187223655, max_hamiltonian_energy_error = 0.8868548341639677, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9981515982007695, log_density = 14.748091525266078, hamiltonian_energy = -10.073916859415064, hamiltonian_energy_error = -0.23312624065996168, max_hamiltonian_energy_error = -0.24273925804874175, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9949766067964563, log_density = 14.327310449079391, hamiltonian_energy = -13.289837356761524, hamiltonian_energy_error = 0.014749794795692495, max_hamiltonian_energy_error = -0.18523143494810768, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9805609053025632, log_density = 13.021382111537921, hamiltonian_energy = -12.367491033439647, hamiltonian_energy_error = 0.0058519526206399775, max_hamiltonian_energy_error = 0.05390978894685183, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9904808251162653, log_density = 15.34740169427013, hamiltonian_energy = -10.905201510525671, hamiltonian_energy_error = -0.09736510357108585, max_hamiltonian_energy_error = -0.18462721872719712, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8195007494091653, log_density = 14.509168072902032, hamiltonian_energy = -12.928148786383703, hamiltonian_energy_error = 0.18092230348848126, max_hamiltonian_energy_error = 0.49091006881245747, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9597611941220487, log_density = 15.296951410072081, hamiltonian_energy = -13.3870814218077, hamiltonian_energy_error = -0.030649011298859108, max_hamiltonian_energy_error = -0.19229503996117003, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7754609128852162, log_density = 11.421123694857055, hamiltonian_energy = -6.38605132673015, hamiltonian_energy_error = -0.010884678777139278, max_hamiltonian_energy_error = 0.7384053240016364, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8830465736432268, log_density = 14.663076336457321, hamiltonian_energy = -10.10850680392176, hamiltonian_energy_error = -0.03367002066065439, max_hamiltonian_energy_error = 0.31303564664423256, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.211640089990013, hamiltonian_energy = -13.987801603732505, hamiltonian_energy_error = -0.06480702165273655, max_hamiltonian_energy_error = -0.08745230432898765, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6985857033637436, log_density = 15.176638220656782, hamiltonian_energy = -11.899151116963644, hamiltonian_energy_error = -0.025786789610394933, max_hamiltonian_energy_error = 0.97152504800939, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9908615309213064, log_density = 15.653279150523923, hamiltonian_energy = -14.636736410584362, hamiltonian_energy_error = -0.12124561613514118, max_hamiltonian_energy_error = -0.12124561613514118, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9067818334007925, log_density = 15.562169058303201, hamiltonian_energy = -11.626002911382383, hamiltonian_energy_error = 0.059271724500353784, max_hamiltonian_energy_error = 0.4308424663970527, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9297087377106928, log_density = 14.778984256205788, hamiltonian_energy = -13.722003251710184, hamiltonian_energy_error = -0.021258547944372097, max_hamiltonian_energy_error = 0.20630287336716258, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9498008620446458, log_density = 15.334641122433498, hamiltonian_energy = -12.345090506513746, hamiltonian_energy_error = 0.005172903304114129, max_hamiltonian_energy_error = 0.17067237550392633, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8206163837043733, log_density = 14.8826320192396, hamiltonian_energy = -12.546823377640834, hamiltonian_energy_error = 0.1768420684151426, max_hamiltonian_energy_error = 0.342003155145461, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8248491497061415, log_density = 15.08355355557351, hamiltonian_energy = -11.054888595549178, hamiltonian_energy_error = 0.1095167995765447, max_hamiltonian_energy_error = 0.5544234804940178, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.95507738672805, log_density = 15.189052011857829, hamiltonian_energy = -13.409263179833356, hamiltonian_energy_error = -0.14095169859202805, max_hamiltonian_energy_error = 0.1805810587095138, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9407950211961421, log_density = 15.515949315258656, hamiltonian_energy = -14.349364015332348, hamiltonian_energy_error = 0.051368072915954244, max_hamiltonian_energy_error = 0.24914872463237359, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8852979911155804, log_density = 13.804590399192785, hamiltonian_energy = -13.271394982419926, hamiltonian_energy_error = 0.338918608693513, max_hamiltonian_energy_error = 0.338918608693513, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 16.106588952656665, hamiltonian_energy = -13.763293113388936, hamiltonian_energy_error = -0.5652222390065784, max_hamiltonian_energy_error = -0.5652222390065784, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9245678333283991, log_density = 15.530200552038353, hamiltonian_energy = -14.374419129391331, hamiltonian_energy_error = 0.05815593157390886, max_hamiltonian_energy_error = 0.14885213038808942, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.926596966014082, log_density = 16.270656666602637, hamiltonian_energy = -13.239473178803616, hamiltonian_energy_error = -0.09484265126502933, max_hamiltonian_energy_error = 0.17463855476086287, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8185104053466348, log_density = 14.123328835716883, hamiltonian_energy = -13.545527560430473, hamiltonian_energy_error = 0.3748361078970124, max_hamiltonian_energy_error = 0.3748361078970124, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9597692955605172, log_density = 15.942179951897469, hamiltonian_energy = -11.443383495651062, hamiltonian_energy_error = -0.6735775496940732, max_hamiltonian_energy_error = -0.6735775496940732, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.767441384736261, log_density = 14.745891879611463, hamiltonian_energy = -12.75174900840113, hamiltonian_energy_error = 0.21094177016212612, max_hamiltonian_energy_error = 0.406857431033405, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8327471457235772, log_density = 11.861604888149046, hamiltonian_energy = -9.757356930395309, hamiltonian_energy_error = 0.28058104497784164, max_hamiltonian_energy_error = 0.3575636288884425, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.460384108831215, hamiltonian_energy = -11.514547766094086, hamiltonian_energy_error = -0.340937775902038, max_hamiltonian_energy_error = -0.4112678280426465, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9156465786234653, log_density = 15.829713898713205, hamiltonian_energy = -13.250612316597255, hamiltonian_energy_error = -0.003016218713701946, max_hamiltonian_energy_error = 0.19688492892193032, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.7550543133735789, log_density = 12.32689510843128, hamiltonian_energy = -10.900922194225773, hamiltonian_energy_error = 0.5478658499995817, max_hamiltonian_energy_error = 0.6435120715217444, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8595546294707538, log_density = 15.531882551743731, hamiltonian_energy = -5.496107601308907, hamiltonian_energy_error = -0.3081934782789073, max_hamiltonian_energy_error = 0.5524964673892363, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6314120385360185, log_density = 12.25116999485338, hamiltonian_energy = -10.722524776662189, hamiltonian_energy_error = 0.41272610952974453, max_hamiltonian_energy_error = 0.8776100177438995, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.019898230715452, hamiltonian_energy = -9.725119916006951, hamiltonian_energy_error = -0.0535431658794252, max_hamiltonian_energy_error = -0.26729450731140325, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7085612332448737, log_density = 15.42034377668239, hamiltonian_energy = -9.04132893758893, hamiltonian_energy_error = -0.16722397384870646, max_hamiltonian_energy_error = 2.1060363471352, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9989746917419887, log_density = 15.471126797412161, hamiltonian_energy = -14.8271648465194, hamiltonian_energy_error = -0.01818014685303382, max_hamiltonian_energy_error = -0.16546188701494557, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8276717323217482, log_density = 15.43536851362285, hamiltonian_energy = -13.004596574920193, hamiltonian_energy_error = -0.08706845894075954, max_hamiltonian_energy_error = 0.4723222395226454, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.72281224932267, log_density = 13.118545893431694, hamiltonian_energy = -12.21252315510235, hamiltonian_energy_error = 0.5076675735404432, max_hamiltonian_energy_error = 0.5076675735404432, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.928631605875063, log_density = 14.664712612145848, hamiltonian_energy = -11.417530878448186, hamiltonian_energy_error = -0.25747520781746047, max_hamiltonian_energy_error = -0.4334503776485583, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9701156617975479, log_density = 14.176789064401412, hamiltonian_energy = -12.615402369587864, hamiltonian_energy_error = 0.08433235205672673, max_hamiltonian_energy_error = -0.19254258961224657, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.972337162560322, log_density = 13.081535792329337, hamiltonian_energy = -11.97482407977131, hamiltonian_energy_error = 0.21522481502690383, max_hamiltonian_energy_error = -0.323010672196526, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.900935126212955, hamiltonian_energy = -12.390398254812924, hamiltonian_energy_error = -0.22263632742515505, max_hamiltonian_energy_error = -0.6894875695473299, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.809254461068651, log_density = 14.811742485561734, hamiltonian_energy = -10.742027895512589, hamiltonian_energy_error = -0.03633608096433072, max_hamiltonian_energy_error = 0.7723368231477501, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9346821122390174, log_density = 13.512436984273329, hamiltonian_energy = -11.82655873721797, hamiltonian_energy_error = 0.15920714616456877, max_hamiltonian_energy_error = 0.20011131671313542, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7413860303648845, log_density = 12.851425235996743, hamiltonian_energy = -8.955229986838718, hamiltonian_energy_error = -0.044552879209863505, max_hamiltonian_energy_error = 0.6765972471831088, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9999894583987192, log_density = 13.601663732236101, hamiltonian_energy = -11.815126429508062, hamiltonian_energy_error = -0.012358794341928103, max_hamiltonian_energy_error = -0.2563635293087021, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8970758071163021, log_density = 15.78533509849639, hamiltonian_energy = -12.040342014627385, hamiltonian_energy_error = -0.2987355882429501, max_hamiltonian_energy_error = 0.3012956482187228, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9068517941857598, log_density = 14.984233317366908, hamiltonian_energy = -14.040732771440032, hamiltonian_energy_error = 0.1060100169452749, max_hamiltonian_energy_error = 0.1816431236305025, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.951045902089515, log_density = 13.673138589996304, hamiltonian_energy = -11.86647773389837, hamiltonian_energy_error = -0.05262698945181654, max_hamiltonian_energy_error = -0.202670776887377, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.433112130005245, hamiltonian_energy = -10.486719549049889, hamiltonian_energy_error = -0.0629910458476477, max_hamiltonian_energy_error = -0.19169911743856716, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9829787609617188, log_density = 13.611386136119554, hamiltonian_energy = -9.937019293341416, hamiltonian_energy_error = -0.3314483897787497, max_hamiltonian_energy_error = -0.3314483897787497, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9252255676437845, log_density = 12.737374568651472, hamiltonian_energy = -10.148727305099126, hamiltonian_energy_error = 0.0596289076007821, max_hamiltonian_energy_error = 0.19237433328019904, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9827667424294955, log_density = 12.64929729559397, hamiltonian_energy = -11.210913024456392, hamiltonian_energy_error = 0.09085553373062893, max_hamiltonian_energy_error = -0.20720868053962604, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.6052664270034168, log_density = 11.331182549032626, hamiltonian_energy = -7.374882206681676, hamiltonian_energy_error = -0.07414918684933003, max_hamiltonian_energy_error = 1.5235923346982396, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.247792889846751, hamiltonian_energy = -10.413529557680857, hamiltonian_energy_error = -0.2515978899063107, max_hamiltonian_energy_error = -0.5507001716601874, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.989250100483156, log_density = 14.491220273096646, hamiltonian_energy = -9.522663738497274, hamiltonian_energy_error = -0.346068895425665, max_hamiltonian_energy_error = -0.346068895425665, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7059866561189581, log_density = 11.23802425533323, hamiltonian_energy = -9.19086799089608, hamiltonian_energy_error = 0.7208351666220043, max_hamiltonian_energy_error = 1.1138749954114644, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9380169618599811, log_density = 13.769324302765094, hamiltonian_energy = -9.627221095742934, hamiltonian_energy_error = -0.396689981347917, max_hamiltonian_energy_error = -0.8436359600684824, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.942363406544659, log_density = 8.563568629038798, hamiltonian_energy = -6.99651899121877, hamiltonian_energy_error = 0.3597443061471335, max_hamiltonian_energy_error = -0.4215890158624287, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 15.216281692782065, hamiltonian_energy = -8.660843231585286, hamiltonian_energy_error = -0.7416780022768528, max_hamiltonian_energy_error = -0.7416780022768528, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9682400817287203, log_density = 14.46200284070307, hamiltonian_energy = -13.990449400887416, hamiltonian_energy_error = 0.17411315590836196, max_hamiltonian_energy_error = 0.17411315590836196, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9905950978189056, log_density = 14.789934609152244, hamiltonian_energy = -13.668250487653857, hamiltonian_energy_error = -0.01654583082230232, max_hamiltonian_energy_error = -0.3432835385749087, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8651606500741532, log_density = 15.269281243419456, hamiltonian_energy = -10.665170528016827, hamiltonian_energy_error = -0.011870072580029145, max_hamiltonian_energy_error = 0.528397727768974, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9903482398063426, log_density = 14.637171514120066, hamiltonian_energy = -13.397725037080233, hamiltonian_energy_error = 0.024411795802906866, max_hamiltonian_energy_error = -0.06480476515002032, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7437378332773851, log_density = 12.955713765302841, hamiltonian_energy = -10.113794233109655, hamiltonian_energy_error = 0.5772770580553352, max_hamiltonian_energy_error = 0.5772770580553352, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8935211285553811, log_density = 14.783978518284039, hamiltonian_energy = -11.042751991400127, hamiltonian_energy_error = -0.4195444969229385, max_hamiltonian_energy_error = -0.4195444969229385, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7439462649944261, log_density = 13.37204206348145, hamiltonian_energy = -10.54494465219324, hamiltonian_energy_error = 0.07266676939558181, max_hamiltonian_energy_error = 0.6845990407412383, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9970209189349382, log_density = 14.18156649704013, hamiltonian_energy = -11.818856509342819, hamiltonian_energy_error = -0.017843235901967347, max_hamiltonian_energy_error = -0.11810013760528015, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9625104994934128, log_density = 14.980977280848073, hamiltonian_energy = -12.445790630015283, hamiltonian_energy_error = 0.05997491803984367, max_hamiltonian_energy_error = -0.13877312900470073, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8857824044056807, log_density = 13.773792966280162, hamiltonian_energy = -10.492468079034643, hamiltonian_energy_error = 0.21074152442472993, max_hamiltonian_energy_error = 0.31697195736965966, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9868425914155985, log_density = 16.160178765447792, hamiltonian_energy = -13.256532300266299, hamiltonian_energy_error = -0.2420313776145342, max_hamiltonian_energy_error = -0.2420313776145342, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8217213983970906, log_density = 13.391377659490233, hamiltonian_energy = -12.32062287820844, hamiltonian_energy_error = 0.28197838418032184, max_hamiltonian_energy_error = 0.36270308131000384, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6570853961218296, log_density = 12.671142062722854, hamiltonian_energy = -6.1827907721460855, hamiltonian_energy_error = 0.28296419494015357, max_hamiltonian_energy_error = 1.0722273555602033, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9033842595287586, log_density = 13.172661099845016, hamiltonian_energy = -9.33808421770711, hamiltonian_energy_error = -0.3165554525261669, max_hamiltonian_energy_error = 0.42224017942188397, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9944333657990619, log_density = 14.692675798554873, hamiltonian_energy = -12.115889609390837, hamiltonian_energy_error = -0.05054262025622691, max_hamiltonian_energy_error = -0.23314530633975572, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9761066919178131, log_density = 14.64496610395986, hamiltonian_energy = -13.067612184895342, hamiltonian_energy_error = -0.16024659640556216, max_hamiltonian_energy_error = 0.1974450168561983, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7956716210900625, log_density = 13.139654641075714, hamiltonian_energy = -10.242297487179497, hamiltonian_energy_error = 0.086553515421814, max_hamiltonian_energy_error = 0.46695095417358345, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9177319168753935, log_density = 13.880725923807617, hamiltonian_energy = -11.265003710871012, hamiltonian_energy_error = 0.10474945104344968, max_hamiltonian_energy_error = 0.1891799154946714, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9531215575490136, log_density = 15.626169971474738, hamiltonian_energy = -12.772631674798763, hamiltonian_energy_error = -9.453962306693597e-5, max_hamiltonian_energy_error = 0.2656434800912102, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9996247875895095, log_density = 16.396847195438284, hamiltonian_energy = -14.47923103722091, hamiltonian_energy_error = -0.14044321034289808, max_hamiltonian_energy_error = -0.14044321034289808, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9372723011088492, log_density = 15.296088289009697, hamiltonian_energy = -14.754212574067845, hamiltonian_energy_error = 0.09889320507242871, max_hamiltonian_energy_error = 0.12696820941076403, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9963331382328254, log_density = 15.831939310234752, hamiltonian_energy = -14.982526588079274, hamiltonian_energy_error = -0.048205347448897484, max_hamiltonian_energy_error = -0.061200532613934655, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9522347723440489, log_density = 15.281584267538534, hamiltonian_energy = -12.981547167107543, hamiltonian_energy_error = -0.04327822314698082, max_hamiltonian_energy_error = -0.1418147816465769, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6465614594771226, log_density = 13.324797000662656, hamiltonian_energy = -9.8019341695283, hamiltonian_energy_error = 0.3076821171990609, max_hamiltonian_energy_error = 0.7201873080084855, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9805777038617377, log_density = 15.591932977443918, hamiltonian_energy = -12.858557077198876, hamiltonian_energy_error = -0.33072452449197876, max_hamiltonian_energy_error = -0.33072452449197876, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9270071562954738, log_density = 12.494407530808223, hamiltonian_energy = -11.472982563428054, hamiltonian_energy_error = 0.14965143071187192, max_hamiltonian_energy_error = 0.14965143071187192, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9826928078745523, log_density = 14.069220911268788, hamiltonian_energy = -11.717437922462327, hamiltonian_energy_error = -0.10567410540446431, max_hamiltonian_energy_error = -0.10567410540446431, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9681093009802283, log_density = 14.265619379705644, hamiltonian_energy = -11.673757496108431, hamiltonian_energy_error = -0.023727235880471653, max_hamiltonian_energy_error = -0.2194633523327454, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9677797005177593, log_density = 15.311648881787079, hamiltonian_energy = -10.414599057275712, hamiltonian_energy_error = -0.20378381707371318, max_hamiltonian_energy_error = -0.20378381707371318, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9459243969285237, log_density = 15.89270209403205, hamiltonian_energy = -13.654739176453658, hamiltonian_energy_error = -0.0714826569270599, max_hamiltonian_energy_error = 0.2244472985028665, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9870863503928098, log_density = 13.774089713850234, hamiltonian_energy = -13.369921069133435, hamiltonian_energy_error = 0.07371975463651737, max_hamiltonian_energy_error = -0.07391838642233672, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8910416053473319, log_density = 13.392395434485852, hamiltonian_energy = -10.491587607363956, hamiltonian_energy_error = -0.29092704956446447, max_hamiltonian_energy_error = 0.36694689694139626, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9544670171179297, log_density = 15.675459766211233, hamiltonian_energy = -11.695626577231948, hamiltonian_energy_error = -0.11568316406666135, max_hamiltonian_energy_error = 0.21078301288839008, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7831305732961672, log_density = 13.70544435363459, hamiltonian_energy = -12.559430289655246, hamiltonian_energy_error = 0.22596747314075927, max_hamiltonian_energy_error = 0.3199624219449664, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9864373675964317, log_density = 13.573011053556897, hamiltonian_energy = -12.161971896321905, hamiltonian_energy_error = 0.08648443941834927, max_hamiltonian_energy_error = -0.24872820661372863, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9897923046191757, log_density = 15.065307659665349, hamiltonian_energy = -12.642754343973767, hamiltonian_energy_error = -0.17711072864583244, max_hamiltonian_energy_error = -0.31418859068379845, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9457922106942587, log_density = 15.337803200502465, hamiltonian_energy = -12.927524000503453, hamiltonian_energy_error = -0.03217314447390507, max_hamiltonian_energy_error = -0.13245347479724856, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9919033630876317, log_density = 15.013652848524043, hamiltonian_energy = -14.54648939017839, hamiltonian_energy_error = 0.02072453495257065, max_hamiltonian_energy_error = -0.13963049181307063, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9795836965517718, log_density = 16.387082322870178, hamiltonian_energy = -14.219151132935997, hamiltonian_energy_error = -0.12754270213620877, max_hamiltonian_energy_error = 0.15470178562955006, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8551158785229328, log_density = 12.100522924659142, hamiltonian_energy = -10.975698196802764, hamiltonian_energy_error = 0.10809346173675749, max_hamiltonian_energy_error = 0.2187506860096633, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.852934759796926, log_density = 9.434256388544505, hamiltonian_energy = -8.099346892764993, hamiltonian_energy_error = 0.005764853672088677, max_hamiltonian_energy_error = 0.37229298595721616, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8057469202382637, log_density = 12.482210124790344, hamiltonian_energy = -7.548059045456316, hamiltonian_energy_error = -0.052856284373095974, max_hamiltonian_energy_error = 0.3798087744872598, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9701070069256766, log_density = 13.226492556190616, hamiltonian_energy = -9.994389425323865, hamiltonian_energy_error = 0.0769529003938807, max_hamiltonian_energy_error = -0.2593177972734626, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9537857316571924, log_density = 13.486258030567939, hamiltonian_energy = -9.474603495278238, hamiltonian_energy_error = 0.008549131993810022, max_hamiltonian_energy_error = -0.40515320810152744, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 13.734788580691255, hamiltonian_energy = -11.866341501803307, hamiltonian_energy_error = -0.3060876463566018, max_hamiltonian_energy_error = -0.4411784279312254, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.957824699731927, log_density = 14.18950143532594, hamiltonian_energy = -11.613340971387444, hamiltonian_energy_error = 0.053042285809072, max_hamiltonian_energy_error = 0.1464682163397537, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9611941512333626, log_density = 11.464378782764907, hamiltonian_energy = -10.221282995120404, hamiltonian_energy_error = 0.20179495495676392, max_hamiltonian_energy_error = -0.4188774433427511, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7246933661621343, log_density = 13.05497590687695, hamiltonian_energy = -4.750736778213822, hamiltonian_energy_error = 0.15179727959588973, max_hamiltonian_energy_error = 0.6001429826106062, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9497361516783371, log_density = 14.715213954706801, hamiltonian_energy = -10.186231799983581, hamiltonian_energy_error = -0.3564918794180869, max_hamiltonian_energy_error = -0.3564918794180869, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8358544546244642, log_density = 12.843213707147534, hamiltonian_energy = -10.979922847037816, hamiltonian_energy_error = 0.39167406140465033, max_hamiltonian_energy_error = 0.7055768791767214, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 15.75710630955546, hamiltonian_energy = -12.465489723682706, hamiltonian_energy_error = -0.3362768776649432, max_hamiltonian_energy_error = -0.43122125963532554, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8619052794616702, log_density = 14.27510872284521, hamiltonian_energy = -12.403939783863674, hamiltonian_energy_error = 0.07416914346119441, max_hamiltonian_energy_error = 0.2575162462909635, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9890634343293657, log_density = 14.356505753196467, hamiltonian_energy = -12.267339577140186, hamiltonian_energy_error = -0.08377002515365284, max_hamiltonian_energy_error = -0.15617183110554222, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8606016900828037, log_density = 14.79654522217458, hamiltonian_energy = -9.88802998821662, hamiltonian_energy_error = -0.37150555937621377, max_hamiltonian_energy_error = 0.4037657748178951, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9506831508257836, log_density = 14.552963567530249, hamiltonian_energy = -13.739010679103066, hamiltonian_energy_error = 0.1190389023692866, max_hamiltonian_energy_error = 0.1190389023692866, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 1, is_accept = true, acceptance_rate = 0.707153191902223, log_density = 13.624163783399645, hamiltonian_energy = -13.402792366141444, hamiltonian_energy_error = 0.3465079577702852, max_hamiltonian_energy_error = 0.3465079577702852, tree_depth = 1, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5373571423629181, log_density = 11.584234203237202, hamiltonian_energy = -8.72626099439822, hamiltonian_energy_error = 1.0256640932807457, max_hamiltonian_energy_error = 1.0256640932807457, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 15.589122486404634, hamiltonian_energy = -12.646965779192822, hamiltonian_energy_error = -1.311335518479817, max_hamiltonian_energy_error = -1.311335518479817, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8087035766198601, log_density = 12.632887341764741, hamiltonian_energy = -12.017151148195667, hamiltonian_energy_error = 0.3028700666169808, max_hamiltonian_energy_error = 0.32998417069835284, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9310604108138661, log_density = 10.366892934312375, hamiltonian_energy = -10.193706060575565, hamiltonian_energy_error = 0.23170354317919717, max_hamiltonian_energy_error = -0.3473725250755457, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.973764722345629, log_density = 13.838124008282549, hamiltonian_energy = -8.878756619833311, hamiltonian_energy_error = -0.3220885410069574, max_hamiltonian_energy_error = -0.4310897458451901, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.984013050745171, log_density = 15.48137328921402, hamiltonian_energy = -12.716318139326773, hamiltonian_energy_error = -0.03604820210476589, max_hamiltonian_energy_error = -0.2578994033560633, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7613291429783811, log_density = 13.033192613066683, hamiltonian_energy = -11.319791084171332, hamiltonian_energy_error = 0.29208678791524, max_hamiltonian_energy_error = 0.6212290173972654, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.99421329803766, log_density = 10.936666447990111, hamiltonian_energy = -8.72671796629376, hamiltonian_energy_error = 0.04135016912196754, max_hamiltonian_energy_error = -0.3217346232976155, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.864279799429135, log_density = 11.658677694748208, hamiltonian_energy = -6.777167918018279, hamiltonian_energy_error = -0.01357408236104174, max_hamiltonian_energy_error = 0.6441799350862327, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9999532115871588, log_density = 16.018189699072124, hamiltonian_energy = -11.10207931318001, hamiltonian_energy_error = -0.4765474887910326, max_hamiltonian_energy_error = -0.4765474887910326, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7279801448909922, log_density = 11.901832838259953, hamiltonian_energy = -8.242197075341974, hamiltonian_energy_error = 0.26343220568958436, max_hamiltonian_energy_error = 0.6565060529761437, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9605545426663837, log_density = 14.03283672122149, hamiltonian_energy = -10.572156534520786, hamiltonian_energy_error = 0.12552238447639397, max_hamiltonian_energy_error = -0.27512984202940416, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 14.120937879874752, hamiltonian_energy = -13.001204027452413, hamiltonian_energy_error = -0.04727750114707696, max_hamiltonian_energy_error = -0.40364856021743734, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.88073535256006, log_density = 15.177906734784123, hamiltonian_energy = -11.135937697050991, hamiltonian_energy_error = -0.2645439481693508, max_hamiltonian_energy_error = 0.4234022612369195, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9791483543242582, log_density = 14.618494126966539, hamiltonian_energy = -14.085683623051828, hamiltonian_energy_error = 0.051068380481673614, max_hamiltonian_energy_error = -0.10494295886679517, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9996428484281878, log_density = 15.190487630818545, hamiltonian_energy = -14.309987008655849, hamiltonian_energy_error = -0.0021204942752017786, max_hamiltonian_energy_error = -0.15315485483903046, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.872838634744362, hamiltonian_energy = -14.840739913001208, hamiltonian_energy_error = -0.07174649763705965, max_hamiltonian_energy_error = -0.1455366237674074, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9892801140273603, log_density = 15.885525253765344, hamiltonian_energy = -15.344500402660866, hamiltonian_energy_error = 0.005537904616394584, max_hamiltonian_energy_error = -0.07097678408899633, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9571883191255867, log_density = 15.402392559377258, hamiltonian_energy = -15.112490383276459, hamiltonian_energy_error = 0.12235064490121061, max_hamiltonian_energy_error = 0.16114559776349324, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8213551048822932, log_density = 11.674875961295674, hamiltonian_energy = -11.158137846987572, hamiltonian_energy_error = 0.7677299723370776, max_hamiltonian_energy_error = 0.7677299723370776, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 14.679275138058966, hamiltonian_energy = -11.000511800734303, hamiltonian_energy_error = -0.7006822110040485, max_hamiltonian_energy_error = -1.0995212087281416, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9857235039865616, log_density = 15.383332003626666, hamiltonian_energy = -12.492361061396739, hamiltonian_energy_error = -0.3230900803204637, max_hamiltonian_energy_error = -0.3230900803204637, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.7980877630802934, log_density = 14.100206478770115, hamiltonian_energy = -12.546140723664609, hamiltonian_energy_error = -0.022845140718725787, max_hamiltonian_energy_error = 0.6396137274842744, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8750261970208072, log_density = 15.946858976572802, hamiltonian_energy = -11.712884338594183, hamiltonian_energy_error = -0.1099149657920897, max_hamiltonian_energy_error = 0.41181873763530774, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7072358145132089, log_density = 14.526662280686102, hamiltonian_energy = -12.9305809995461, hamiltonian_energy_error = 0.2696806076626448, max_hamiltonian_energy_error = 0.45838168812725577, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9811952222402184, log_density = 14.756351379701641, hamiltonian_energy = -13.518939975997775, hamiltonian_energy_error = -0.16187650539449372, max_hamiltonian_energy_error = -0.3548111826155047, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9944979446646789, log_density = 15.670947080476628, hamiltonian_energy = -14.316573736720269, hamiltonian_energy_error = -0.05038023540482861, max_hamiltonian_energy_error = -0.1481576088730332, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.5993499849635439, log_density = 12.884869481088995, hamiltonian_energy = -9.793393332488426, hamiltonian_energy_error = 0.5380404258775489, max_hamiltonian_energy_error = 0.588865450697174, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9762738328663153, log_density = 14.625808277068433, hamiltonian_energy = -10.638556170595711, hamiltonian_energy_error = -0.6265689400790695, max_hamiltonian_energy_error = -0.6265689400790695, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9895018924844082, log_density = 15.538191752556571, hamiltonian_energy = -13.865438097157703, hamiltonian_energy_error = -0.030688795320749307, max_hamiltonian_energy_error = -0.09068812235530821, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8550181893348759, log_density = 14.70531914395, hamiltonian_energy = -12.950308568541287, hamiltonian_energy_error = 0.08032737722176897, max_hamiltonian_energy_error = 0.22284921963936632, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9924537122706671, log_density = 15.170721392599678, hamiltonian_energy = -13.634100685513, hamiltonian_energy_error = -0.04060849593473925, max_hamiltonian_energy_error = -0.13330929376403944, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9843270686202973, log_density = 14.826621557122, hamiltonian_energy = -13.59504644039291, hamiltonian_energy_error = 0.07877402832701819, max_hamiltonian_energy_error = 0.07877402832701819, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9355303941311871, log_density = 14.74014621663975, hamiltonian_energy = -13.815775984339824, hamiltonian_energy_error = 0.16376456780155024, max_hamiltonian_energy_error = 0.21971472225922994, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 13.904501695329731, hamiltonian_energy = -12.279802763791515, hamiltonian_energy_error = -0.056217954204072385, max_hamiltonian_energy_error = -0.2943417667529289, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9227613093140725, log_density = 15.834367889131299, hamiltonian_energy = -10.52009811718607, hamiltonian_energy_error = -0.10298977353975403, max_hamiltonian_energy_error = 0.22013719540260546, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9211310173897719, log_density = 15.544439464044475, hamiltonian_energy = -14.538901265985317, hamiltonian_energy_error = 0.028329945442706617, max_hamiltonian_energy_error = 0.1197941793462789, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9673819415721417, log_density = 15.620282680096185, hamiltonian_energy = -13.790495358137449, hamiltonian_energy_error = 0.04150457852012934, max_hamiltonian_energy_error = 0.11503941730949307, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.973879169301857, log_density = 15.684073902944483, hamiltonian_energy = -14.450601331735564, hamiltonian_energy_error = -0.012732264418923833, max_hamiltonian_energy_error = 0.08425559502476077, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6784665995473432, log_density = 15.53646850709885, hamiltonian_energy = -8.004569346854353, hamiltonian_energy_error = 0.10447663958343334, max_hamiltonian_energy_error = 0.8364550041022296, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6420956458360983, log_density = 13.547951760155469, hamiltonian_energy = -10.356056536968511, hamiltonian_energy_error = 0.3523798748047948, max_hamiltonian_energy_error = 0.7732596182370539, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9308380629988046, log_density = 14.309080198544013, hamiltonian_energy = -11.409922181730547, hamiltonian_energy_error = 0.0910895721772107, max_hamiltonian_energy_error = 0.14779755369194447, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9001424203059706, log_density = 11.88334809301855, hamiltonian_energy = -10.858236857645874, hamiltonian_energy_error = 0.24061767936291467, max_hamiltonian_energy_error = 0.37420402520478824, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.372149912911262, hamiltonian_energy = -11.902478766428484, hamiltonian_energy_error = -0.3822359883208559, max_hamiltonian_energy_error = -0.5430566809627084, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9594349499748648, log_density = 14.83845680990324, hamiltonian_energy = -12.735474528537866, hamiltonian_energy_error = 0.03026819532694347, max_hamiltonian_energy_error = 0.18801963769800167, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9811343062652418, log_density = 15.359598336576482, hamiltonian_energy = -13.307458977203511, hamiltonian_energy_error = -0.1549176307990674, max_hamiltonian_energy_error = -0.21926429174792617, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9638304881286844, log_density = 16.1252219039655, hamiltonian_energy = -14.5526728556894, hamiltonian_energy_error = 0.030937813984129647, max_hamiltonian_energy_error = 0.08633052292566212, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8332547233920403, log_density = 16.082749227076974, hamiltonian_energy = -13.693825878830038, hamiltonian_energy_error = -0.12530683300210477, max_hamiltonian_energy_error = 0.4394530286046354, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9394614766950229, log_density = 15.837940095377938, hamiltonian_energy = -14.606806754238164, hamiltonian_energy_error = 0.0496295524175796, max_hamiltonian_energy_error = 0.10789222444102009, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9865105547615329, log_density = 15.008495990336574, hamiltonian_energy = -14.692999920023224, hamiltonian_energy_error = 0.05922336061293443, max_hamiltonian_energy_error = 0.05922336061293443, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.5425409200629243, log_density = 10.74954164927291, hamiltonian_energy = -8.076195911333093, hamiltonian_energy_error = 1.1163550671763378, max_hamiltonian_energy_error = 1.1163550671763378, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 11.128814133968072, hamiltonian_energy = -8.92102710699565, hamiltonian_energy_error = -0.6443269802842337, max_hamiltonian_energy_error = -1.5573331167099358, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 12.752217336748078, hamiltonian_energy = -10.132568245810921, hamiltonian_energy_error = -0.3335655268784574, max_hamiltonian_energy_error = -0.6662442050048565, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.952190823717333, log_density = 15.083354487144984, hamiltonian_energy = -11.38408113925962, hamiltonian_energy_error = -0.4989811234205739, max_hamiltonian_energy_error = -0.5244537400143798, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9945716425868358, log_density = 15.390243931748092, hamiltonian_energy = -14.26744307322846, hamiltonian_energy_error = 0.030376326253154673, max_hamiltonian_energy_error = -0.08667349969503846, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9882398636151536, log_density = 14.258228030835188, hamiltonian_energy = -13.531574714687064, hamiltonian_energy_error = 0.018641960763543963, max_hamiltonian_energy_error = 0.04775858904762309, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8720824472274992, log_density = 13.19793681177346, hamiltonian_energy = -11.512137589246276, hamiltonian_energy_error = 0.3911852215284295, max_hamiltonian_energy_error = 0.3911852215284295, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9794693911489214, log_density = 13.283813655917928, hamiltonian_energy = -10.126846939841581, hamiltonian_energy_error = -0.2870669013286413, max_hamiltonian_energy_error = -0.39135348098484535, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 15.201188407085604, hamiltonian_energy = -11.801247100011324, hamiltonian_energy_error = -0.2773112690061481, max_hamiltonian_energy_error = -0.2773112690061481, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9214438881426916, log_density = 13.368681307557488, hamiltonian_energy = -12.282542350187592, hamiltonian_energy_error = 0.09920052731344065, max_hamiltonian_energy_error = 0.1658097583339302, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8777984850043848, log_density = 14.16631116442766, hamiltonian_energy = -10.301507142120279, hamiltonian_energy_error = -0.009253312842531614, max_hamiltonian_energy_error = 0.28627645597995866, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9738144125900494, log_density = 14.778913229157759, hamiltonian_energy = -10.801816248089354, hamiltonian_energy_error = -0.05023051487220265, max_hamiltonian_energy_error = 0.08724194852444533, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9070447114809489, log_density = 13.871059858886724, hamiltonian_energy = -11.971358910852997, hamiltonian_energy_error = 0.17228369296597457, max_hamiltonian_energy_error = 0.17228369296597457, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9186459111631133, log_density = 14.679374693711472, hamiltonian_energy = -12.356601532347709, hamiltonian_energy_error = -0.14742729351888606, max_hamiltonian_energy_error = 0.2263749235966781, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8142025652872137, log_density = 13.723088748278212, hamiltonian_energy = -11.40672764970804, hamiltonian_energy_error = 0.18851582321144633, max_hamiltonian_energy_error = 0.40489834635969046, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8223563389285296, log_density = 11.430862316393192, hamiltonian_energy = -10.04677590089399, hamiltonian_energy_error = 0.21879074854210678, max_hamiltonian_energy_error = 0.4613566460387286, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9726712585400903, log_density = 14.971792026343294, hamiltonian_energy = -9.190197195435445, hamiltonian_energy_error = -0.26588675023396746, max_hamiltonian_energy_error = -0.2735477164831295, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8386996275083073, log_density = 12.56503941348491, hamiltonian_energy = -11.257406077517391, hamiltonian_energy_error = 0.3379290071352372, max_hamiltonian_energy_error = 0.3379290071352372, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.853061094575261, log_density = 9.630125628718528, hamiltonian_energy = -7.683208242360495, hamiltonian_energy_error = 0.24937027679586699, max_hamiltonian_energy_error = 0.48957786870418474, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.937702032234242, hamiltonian_energy = -9.311180840719189, hamiltonian_energy_error = -0.29402603556988005, max_hamiltonian_energy_error = -0.7100635044632249, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.976588830859459, log_density = 14.750755675921855, hamiltonian_energy = -11.40828255147511, hamiltonian_energy_error = -0.10269150795538096, max_hamiltonian_energy_error = -0.20352187467176108, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9289188867847332, log_density = 15.579836869365955, hamiltonian_energy = -13.299858434338395, hamiltonian_energy_error = -0.07729031767570227, max_hamiltonian_energy_error = 0.15582414196946281, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9483688256911247, log_density = 14.884263979770619, hamiltonian_energy = -14.569244875532412, hamiltonian_energy_error = 0.11765528097667399, max_hamiltonian_energy_error = 0.11765528097667399, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8585649813642532, log_density = 14.455842148849165, hamiltonian_energy = -12.66208714537057, hamiltonian_energy_error = 0.1112309748906064, max_hamiltonian_energy_error = 0.292212677124418, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8659523565527382, log_density = 14.703473408774332, hamiltonian_energy = -11.84468809877038, hamiltonian_energy_error = -0.0957144197408546, max_hamiltonian_energy_error = 0.30153328976067684, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8968508298307168, log_density = 16.289396304653742, hamiltonian_energy = -12.543748501245366, hamiltonian_energy_error = -0.06870603660150998, max_hamiltonian_energy_error = 0.20101853472383624, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8089436886125294, log_density = 15.34330684040272, hamiltonian_energy = -13.192407360684395, hamiltonian_energy_error = 0.201265914508312, max_hamiltonian_energy_error = 0.3358067445057351, tree_depth = 4, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8431172226406741, log_density = 13.18664389248758, hamiltonian_energy = -11.227055518967568, hamiltonian_energy_error = 0.1691810908408815, max_hamiltonian_energy_error = 0.5102573289164773, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9983022562637661, log_density = 14.218193216614784, hamiltonian_energy = -9.976861598286296, hamiltonian_energy_error = -0.12307246057953769, max_hamiltonian_energy_error = -0.32634081423347716, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9261172037206477, log_density = 13.720694709357385, hamiltonian_energy = -10.808746915843223, hamiltonian_energy_error = -0.11192304892091265, max_hamiltonian_energy_error = 0.26466256284004963, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9036898416407849, log_density = 15.009978097602096, hamiltonian_energy = -12.294275755046295, hamiltonian_energy_error = 0.09033779840102163, max_hamiltonian_energy_error = 0.269743757186383, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9410984795114584, log_density = 15.274895675410495, hamiltonian_energy = -12.7061699613567, hamiltonian_energy_error = -0.10341115535328349, max_hamiltonian_energy_error = -0.2366066297225764, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9737391350919468, log_density = 14.447142653619945, hamiltonian_energy = -12.207468212304562, hamiltonian_energy_error = -0.0215447113762135, max_hamiltonian_energy_error = -0.2377713077332455, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9869503351172545, log_density = 15.800049799150482, hamiltonian_energy = -13.829922487062607, hamiltonian_energy_error = -0.13455497887531642, max_hamiltonian_energy_error = -0.13455497887531642, tree_depth = 2, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9928322991568145, log_density = 16.452907818787345, hamiltonian_energy = -14.998175655098379, hamiltonian_energy_error = -0.06606277142997463, max_hamiltonian_energy_error = -0.06606277142997463, tree_depth = 3, numerical_error = false, step_size = 0.1474768724441395, nom_step_size = 0.1474768724441395, is_adapt = false)])","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Inspect posterior distribution over hyperparameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"hypers = map(unpack, samples);\nh_l1 = histogram(getindex.(hypers, :l1); label=\"l1\");\nh_l2 = histogram(getindex.(hypers, :l2); label=\"l2\");\nh_s1 = histogram(getindex.(hypers, :s1); label=\"s1\");\nh_s2 = histogram(getindex.(hypers, :s2); label=\"s2\");\nplot(h_l1, h_l2, h_s1, h_s2; layout=(2, 2))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As expected, the sampler converges to the posterior distribution quickly. One could combine this code with that from the previous sections to make predictions under the posterior over the hyperparameters.","category":"page"},{"location":"examples/getting_started/#Conclusion","page":"Getting Started","title":"Conclusion","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you now know how to fit GPs using Stheno.jl, and to investigate their posterior distributions. It's also straightforward to utilise Stheno.jl inside probabilistic programming frameworks like Soss.jl and Turing.jl (see examples folder).","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Stheno.jl","page":"Home","title":"Stheno.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Stheno.jl is a package for probabilistic programming with Gaussian processes.","category":"page"},{"location":"internals/#Interfaces","page":"Internals","title":"Interfaces","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The primary objects in Stheno are some special subtypes of AbstractGP. There are three primary concrete subtypes of AbstractGP:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP: an atomic Gaussian process given by wrapping an AbstractGP.\nCompositeGP: a Gaussian process composed of other WrappedGPs and CompositeGPs, whose properties are determined recursively from the GPs of which it is composed.\nGaussianProcessProbabilisticProgramme / GPPP: a Gaussian process comprising WrappedGPs and CompositeGPs. This is the primary piece of functionality that users should interact with.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This documentation provides the information necessary to understand the internals of Stheno, and to extend it with custom functionality.","category":"page"},{"location":"internals/#AbstractGP","page":"Internals","title":"AbstractGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP and CompositeGP implement the AbstractGPs.jl API. Please refer to the AbstractGPs.jl docs for more info on this.","category":"page"},{"location":"internals/#diag-methods","page":"Internals","title":"diag methods","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It is crucial for pseudo-point methods, and for the computation of marginal statistics at a reasonable scale, to be able to compute the diagonal of a given covariance matrix in linear time in the size of its inputs. This, in turn, necessitates that the diagonal of a given cross-covariance matrix can also be computed efficiently as the evaluation of covariance matrices often rely on the evaluation of cross-covariance matrices. As such, we have the following functions in addition to the AbstractGPs API implemented for WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Function Brief description\nvar(f, x) diag(cov(f, x))\nvar(f, x, x′) diag(cov(f, x, x′))\nvar(f, f′, x, x′) diag(cov(f, f′, x, x′))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The second and third rows of the table only make sense when length(x) == length(x′), of course.","category":"page"},{"location":"internals/#WrappedGP","page":"Internals","title":"WrappedGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"We can construct a WrappedGP in the following manner:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = wrap(GP(m, k), gpc)\n","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"where m is its MeanFunction, k its Kernel. gpc is a GPC object that handles some book-keeping, and is discussed in more depth below.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The AbstractGP interface is implemented for WrappedGPs in terms of the AbstractGP that they wrap. So if you want a particular behaviour, just make sure that the AbstractGP that you wrap has the functionality you want.","category":"page"},{"location":"internals/#Aside:-Example-Kernel-implementation","page":"Internals","title":"Aside: Example Kernel implementation","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It's straightforward to implement a new kernel yourself: simply following the instructions in KernelFunctions.jl and it'll work fine with GPs in Stheno.jl.","category":"page"},{"location":"internals/#GPC","page":"Internals","title":"GPC","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"This book-keeping object doesn't matter from a user's perspective but, unfortunately, we currently expose it to users. Fortunately, it's straightforward to work with. Say you wish to construct a collection of processes:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS WON'T WORK\nf = GP(mf, kf)\ng = GP(mg, kg)\nh = f + g\n# THIS WON'T WORK","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"You should write","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS GOOD. PLEASE DO THIS\ngpc = GPC()\nf = wrap(GP(mf, kf), gpc)\ng = wrap(GP(mg, kg), gpc)\nh = f + g\n# THIS IS GOOD. PLEASE DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The rule is simple: when constructing GPs that you plan to make interact later in your program, construct them using the same gpc object. For example, DON'T do the following:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS BAD. PLEASE DON'T DO THIS\nf = wrap(GP(mf, kf), GPC())\ng = wrap(GP(mg, kg), GPC())\nh = f + g\n# THIS IS BAD. PLEASE DON'T DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The mistake here is to construct a separate GPC object for each GP. Hopefully, the code errors, but might yield incorrect results.","category":"page"},{"location":"internals/#CompositeGP","page":"Internals","title":"CompositeGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"CompositeGPs are constructed as affine transformations of CompositeGPs and GPs. We describe the implemented transformations below.","category":"page"},{"location":"internals/#Addition","page":"Internals","title":"Addition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Given AbstractGPs f and g, we define","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f + g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"to be the CompositeGP sastisfying h(x) = f(x) + g(x) for all x.","category":"page"},{"location":"internals/#Multiplication","page":"Internals","title":"Multiplication","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Multiplication of AbstractGPs is undefined since the product of two Gaussian random variables is not itself Gaussian. However, we can scale an AbstractGP by either a constant or (deterministic) function.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = c * f\nh = sin * f","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"will both work, and produce the result that h(x) = c * f(x) or h(x) = sin(x) * f(x).","category":"page"},{"location":"internals/#Composition","page":"Internals","title":"Composition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f ∘ g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for some deterministic function g is the composition of f with g. i.e. h(x) = f(g(x)).","category":"page"},{"location":"internals/#cross","page":"Internals","title":"cross","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = cross([f, g])","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for WrappedGPs and CompositeGPs f and g. Think of cross as having stacked f and g together, so that you can work with their joint.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"For example, if you wanted to sample jointly from f and g at locations x_f and x_g, you could write something like","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"fg = cross([f, g])\nx_fg = BlockData([x_f, x_g])\nrand(fg(x_fg, 1e-6))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This particular function isn't part of the user-facing API because it isn't generally needed. It is, however, used extensively in the implementation of the GaussianProcessProbabilisticProgramme.","category":"page"},{"location":"internals/#GPPP","page":"Internals","title":"GPPP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The GaussianProcessProbabilisticProgramme is another AbstractGP which enables provides a thin layer of convenience functionality on top of WrappedGPs and CompositeGPs, and is the primary way in which it is intended that users will interact with this package.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP like this","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"is equivalent to manually constructing a GPPP using WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"gpc = GPC()\nf1 = wrap(GP(SEKernel()), gpc)\nf2 = wrap(GP(SEKernel()), gpc)\nf3 = f1 + f2\nf = Stheno.GPPP((f1=f1, f2=f2, f3=f3), gpc)","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"If you take a look at the gaussian_process_probabilistic_programming.jl source, you'll see that it's essentially just the above, and an implementation of the AbstractGPs API on top of a GPPP.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP is a single GP on an extended input domain: (Image: )","category":"page"}]
}
