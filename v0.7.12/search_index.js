var documenterSearchIndex = {"docs":
[{"location":"api/#Public-API","page":"API","title":"Public API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = Stheno","category":"page"},{"location":"api/#GPPP","page":"API","title":"GPPP","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Core functionality for working with GPPPs.","category":"page"},{"location":"api/","page":"API","title":"API","text":"@gppp\nGPPPInput\nBlockData\nsplit","category":"page"},{"location":"api/#Stheno.@gppp","page":"API","title":"Stheno.@gppp","text":"@gppp(model_expression)\n\nConstruct a GaussianProcessProbabilisticProgramme (GPPP) from a code snippet.\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = GPPPInput(:f3, randn(5))\n\ny = rand(f(x, 0.1))\n\nlogpdf(f(x, 0.1), y) ≈ elbo(f(x, 0.1), y, f(x, 1e-9))\n\n# output\n\ntrue\n\n\n\n\n\n","category":"macro"},{"location":"api/#Stheno.GPPPInput","page":"API","title":"Stheno.GPPPInput","text":"GPPPInput(p, x::AbstractVector)\n\nAn collection of inputs for a GPPP. p indicates which process the vector x should be extracted from. The required type of p is determined by the type of the keys in the GPPP indexed.\n\njulia> x = [1.0, 1.5, 0.3];\n\njulia> v = GPPPInput(:a, x)\n3-element GPPPInput{Symbol, Float64, Vector{Float64}}:\n (:a, 1.0)\n (:a, 1.5)\n (:a, 0.3)\n\njulia> v isa AbstractVector{Tuple{Symbol, Float64}}\ntrue\n\njulia> v == map(x_ -> (:a, x_), x)\ntrue\n\n\n\n\n\n","category":"type"},{"location":"api/#Stheno.BlockData","page":"API","title":"Stheno.BlockData","text":"BlockData{T, TV<:AbstractVector{T}, TX<:AbstractVector{TV}} <: AbstractVector{T}\n\nA strictly ordered collection of AbstractVectors, representing a ragged array of data.\n\nVery useful when working with GPPPs. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\n# Specify a `BlockData` set that can be used to index into\n# the `f2` and `f3` processes in `f`.\nx = BlockData(\n    GPPPInput(:f2, randn(4)),\n    GPPPINput(:f3, randn(3)),\n)\n\n# Index into `f` at the input.\nf(x)\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.split","page":"API","title":"Base.split","text":"Base.split(x::BlockData, Y::AbstractVecOrMat)\n\nConvenience functionality to make working with the output of operations on GPPPs easier. Splits up the rows of Y according to the sizes of the data in x.\n\njulia> Y = vcat(randn(5, 3), randn(4, 3));\n\njulia> x = BlockData(randn(5), randn(4));\n\njulia> Y1, Y2 = split(x, Y);\n\njulia> Y1 == Y[1:5, :]\ntrue\n\njulia> Y2 == Y[6:end, :]\ntrue\n\nWorks with any BlockData, so blocks can e.g. be GPPPInputs. This is particularly helpful for working with the output from rand and marginals from a GPPP indexed at BlockData. For example\n\nf = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend\n\nx = BlockData(GPPPInput(:f2, randn(3)), GPPPInput(:f3, randn(4)))\ny = rand(f(x))\ny2, y3 = split(x, y)\n\nFunctionality also works with any AbstractVector.\n\n\n\n\n\n","category":"function"},{"location":"api/#Building-GPPPs","page":"API","title":"Building GPPPs","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"If in doubt about what any of these transformations can do, play around with them!","category":"page"},{"location":"api/","page":"API","title":"API","text":"+\n*\nstretch\nperiodic\nshift\nselect","category":"page"},{"location":"api/#Base.:+","page":"API","title":"Base.:+","text":"+(fa::AbstractGP, fb::AbstractGP)\n\nProduces an AbstractGP f satisfying f(x) = fa(x) + fb(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Base.:*","page":"API","title":"Base.:*","text":"*(f, g::AbstractGP)\n\nProduce an AbstractGP h satisfying to h(x) = f(x) * g(x), for some deterministic function f.\n\nIf f isa Real, then h(x) = f * g(x).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.stretch","page":"API","title":"Stheno.stretch","text":"stretch(f::AbstractGP, l::Union{AbstractVecOrMat{<:Real}, Real})\n\nThis is the primary mechanism by which to introduce length scales to your programme.\n\nIf l isa Real or l isa AbstractMatrix{<:Real}, stretch(f, l)(x) == f(l * x) for any input x. In the l isa Real case, this is equivalent to scaling the length scale by 1 / l.\n\nl isa AbstractVector{<:Real} is equivalent to stretch(f, Diagonal(l)).\n\nEquivalent to f ∘ Stretch(l).\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.periodic","page":"API","title":"Stheno.periodic","text":"periodic(g::AbstractGP, f::Real)\n\nProduce an AbstractGP with period f.\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.shift","page":"API","title":"Stheno.shift","text":"shift(f::AbstractGP, a::Real)\nshift(f::AbstractGP, a::AbstractVector{<:Real})\n\nReturns the GP g given by g(x) = f(x - a)\n\n\n\n\n\n","category":"function"},{"location":"api/#Stheno.select","page":"API","title":"Stheno.select","text":"select(f::AbstractGP, idx)\n\nSelect the dimensions of the input to f given by idx.\n\n\n\n\n\n","category":"function"},{"location":"input_types/#Input-Types","page":"Input Types","title":"Input Types","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Stheno enables the user to handle any type of input domain they wish and provides a common API that users must implement when considering a new way of representing input data to ensure that the package knows how to handle them appropriately.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"This interface has now been adopted throughout the JuliaGaussianProcesses ecosystem.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Discussed below is this interface's core assumptions, a detailed account of a couple of important concrete input types.","category":"page"},{"location":"input_types/#The-Central-Assumption","page":"Input Types","title":"The Central Assumption","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"The central assumption made in all user-facing and internal functions is this: when a collection of inputs are required, they subtype AbstractVector. For example, x isa AbstractVector when indexing into a GP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f(x, σ²)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"or computing the covariance matrix associated with a kernel:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"kernelmatrix(SqExponentialKernel(), x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When computing the cross-covariance matrix between two GPs","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"cov(f, g, x_f, x_g)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_f and x_g must be AbstractVectors. All other operations involving collections of inputs have the same restrictions. Always AbstractVectors.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"For example, this means that when handling multi-dimensional inputs stored in a Matrix they must be wrapped so that the package knows to treat them as a vector — more on this in below in D-dimensional Euclidean Spaces.","category":"page"},{"location":"input_types/#Dimensional-Euclidean-Space","page":"Input Types","title":"1-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"When constructing a GP whose domain is the real-line, for example when using a GP to solve some kind of time-series problem, it is sufficient to work with Vector{<:Real}s of inputs. As such, the following is completely valid:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"using Stheno: GPC\nf = wrap(GP(SqExponentialKernel()), GPC())\nx = randn(10)\nf(x)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"It is also possible to work with other AbstractArrays that represent a vector of 1-dimensional points, e.g.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = range(-5.0, 5.0; length=100)\nf(x)","category":"page"},{"location":"input_types/#D-Dimensional-Euclidean-Space","page":"Input Types","title":"D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Many applications of interest involve more than a single input-dimension, such as spatio-temporal modeling or Machine Learning tasks. For these cases, we provide ColVecs <: AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"X_data = randn(5, 100)\nX = ColVecs(X_data)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"tells Stheno that it should treat each column of X_data as a vector-valued input. Phrased differently, X is an AbstractVector{T} where T <: Vector{<:Real}, which stores its elements in memory as a dense matrix. This approach has the advantage of making it completely explicit how Stheno treats a matrix of data, and also simplifies quite a bit of the internal machinery, as all vectors of inputs can be assumed to be a subtype of AbstractVector.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If, on the other hand, each row of X_data corresponds to a vector-valued input, use RowVecs(X_data).","category":"page"},{"location":"input_types/#Structure-in-D-Dimensional-Euclidean-Space","page":"Input Types","title":"Structure in D-Dimensional Euclidean Space","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Consider a rectilinear grid of points in D-dimensional Euclidean space. Such grids of points can be represented in a more memory-efficient manner than can arbitrarily locate sets of points. Moreover, this structure can be exploited to accelerate inference for certain types of problems dramatically. Other such examples exist e.g., uniform grids in N-dimensions, and can be exploited to more efficiently represent input data and to accelerate inference.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"Work to exploit these kinds of structures is on-going at the time of writing and will be documented before merging.","category":"page"},{"location":"input_types/#GPPPInput-and-BlockData","page":"Input Types","title":"GPPPInput and BlockData","text":"","category":"section"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"A GPPPInput is a special kind of AbstractVector, specifically designed for GPPPs. Given a GPPP:","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"a GPPPInput like","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x_ = randn(5)\nx = GPPPInput(:f3, x_)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"applied to f","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"fx = f(x, 0.1)","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"constructs a FiniteGP comprising f3 at x_. GPPPInput(:f2, x_) and GPPPInput(:f1, x_) are the analogues for f1 and f2.","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"If you wish to refer to multiple processes in f at the same time, use a BlockData. For example","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"x = BlockData(GPPPInput(:f2, x_), GPPPInput(:f3, x_))","category":"page"},{"location":"input_types/","page":"Input Types","title":"Input Types","text":"would pull out a 10-dimensional FiniteGP, the first 5 dimensions being f2 at x_, the last 5 dimensions being f3 at x_.","category":"page"},{"location":"kernel_design/#Kernel-Design","page":"Kernel Design","title":"Kernel Design","text":"","category":"section"},{"location":"kernel_design/","page":"Kernel Design","title":"Kernel Design","text":"Please refer to KernelFunctions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"EditURL = \"https://github.com/JuliaGaussianProcesses/Stheno.jl/blob/master/examples/getting_started/script.jl\"","category":"page"},{"location":"examples/getting_started/#Getting-Started","page":"Getting Started","title":"Getting Started","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Here we document how to do some basic stuff, including learning and inference in kernel parameters, with Stheno.jl. To do this, we that makes use of a variety of packages from the Julia ecosystem. In particular, we'll make use of","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl to perform Bayesian inference in our model parameters,\nOptim.jl for point-estimates of our model parameters,\nParameterHandling.jl to make it easy to work with our model's parameters, and to ensure that it plays nicely with Optim and AdvancedHMC,\nZygote.jl to compute gradients.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This guide assumes that you know roughly what's going on conceptually with GPs. If you're new to Gaussian processes, an excellent introduction can be found in either this video lecture or this one.","category":"page"},{"location":"examples/getting_started/#Exact-Inference-in-a-GP-in-2-Minutes","page":"Getting Started","title":"Exact Inference in a GP in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This is only a slightly more interesting version of the first example on the README. It's slightly more interesting in that we give the kernels some learnable parameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Import the packages we'll need for this bit of the demo.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AbstractGPs\nusing LinearAlgebra\nusing Stheno\nusing Plots","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Short length-scale and small variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l1 = 0.4\ns1 = 0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"0.2","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Long length-scale and larger variance.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"l2 = 5.0\ns2 = 1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"1.0","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Specify a GaussianProcessProbabilisticProgramme object, which is itself a GP built from other GPs.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f = @gppp let\n    f1 = s1 * stretch(GP(Matern52Kernel()), 1 / l1)\n    f2 = s2 * stretch(GP(SEKernel()), 1 / l2)\n    f3 = f1 + f2\nend;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Generate a sample from f3, one of the processes in f, at some random input locations. Add some iid observation noise, with zero-mean and variance 0.05.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"const x = GPPPInput(:f3, collect(range(-5.0, 5.0; length=100)));\nσ²_n = 0.02;\nfx = f(x, σ²_n);\nconst y = rand(fx);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Compute the log marginal likelihood of this observation, just because we can.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"logpdf(fx, y)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"23.21143968954297","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"fx should be thought of as \"f at x\", and is just as a multivariate Normal distribution, with zero mean and covariance matrix","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"heatmap(cov(f, x) + σ²_n * I)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As such samples can be drawn from it, and the log probability any particular value under it can be computed, in the same way that you would an MvNormal from Distributions.jl.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can visualise x and y with Plots.jl","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"plt = plot();\nscatter!(plt, x.x, y; color=:red, label=\"\");\ndisplay(plt)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"It's straightforward to compute the posterior over f:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior = posterior(fx, y);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_posterior is another GP, the posterior over f given noisy observations y at inputs x.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The plotting recipes from AbstractGPs.jl can be utilised to easily print whichever component of the GPPP is needed.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"x_plot = range(-7.0, 7.0; length=1000);\nxp = GPPPInput(:f3, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp);\n    ribbon_scale=3, label=\"\", color=:blue, fillalpha=0.2, linewidth=2,\n)\nplot!(\n    plt, x_plot, rand(f_posterior(xp, 1e-9), 10);\n    samples=10, markersize=1, alpha=0.3, label=\"\", color=:blue,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you've built a simple GP probabilistic programme, performed inference in it, and looked at the posterior. We've only looked at one component of it though – we could look at others. Consider f2:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"xp2 = GPPPInput(:f2, x_plot);\nplot!(\n    plt, x_plot, f_posterior(xp2);\n    ribbon_scale=3, label=\"\", color=:red, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior(xp2, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:red,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-NelderMead-in-2-Minutes","page":"Getting Started","title":"Fit a GP with NelderMead in 2 Minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Stheno.jl is slightly unusual in that it declines to provide a fit or train function. Why is this? In short, because there's really no need – the ecosystem now contains everything that is needed to easily do this yourself. By declining to insist on an interface, Stheno.jl is able to interact with a wide array of tools, that you can use in whichever way you please.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Optim requires that you provide an objective function with a single Vector{<:Real} parameter for most of its optimisers. We'll use ParameterHandling.jl to build one of these in a way that doesn't involve manually writing code to convert between a structured, human-readable, representation of our parameters (in a NamedTuple) and a Vector{Float64}.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"First, we'll put the model from before into a function:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function build_model(θ::NamedTuple)\n    return @gppp let\n        f1 = θ.s1 * stretch(GP(SEKernel()), 1 / θ.l1)\n        f2 = θ.s2 * stretch(GP(SEKernel()), 1 / θ.l2)\n        f3 = f1 + f2\n    end\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"build_model (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've assumed that the parameters will be provided as a NamedTuple, so let's build one and check that the model can be constructed:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\n\nθ = (\n    # Short length-scale and small variance.\n    l1 = positive(0.4),\n    s1 = positive(0.2),\n\n    # Long length-scale and larger variance.\n    l2 = positive(5.0),\n    s2 = positive(1.0),\n\n    # Observation noise variance -- we'll be learning this as well.\n    s_noise = positive(0.1),\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(l1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-0.9162907691270586, Bijectors.Exp{0}(), 1.4901161193847656e-8), s1 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.6094379869399091, Bijectors.Exp{0}(), 1.4901161193847656e-8), l2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(1.6094379094538682, Bijectors.Exp{0}(), 1.4901161193847656e-8), s2 = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-1.490116130486996e-8, Bijectors.Exp{0}(), 1.4901161193847656e-8), s_noise = ParameterHandling.Positive{Float64, Bijectors.Exp{0}, Float64}(-2.3025852420056685, Bijectors.Exp{0}(), 1.4901161193847656e-8))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We've used ParameterHandling.jls positive constraint to ensure that all of the parameters remain positive during optimisation. Note that there's no magic here, and Optim knows nothing about positive. Rather, ParameterHandling knows how to make sure that Optim will optimise the log of the parameters which we want to be positive.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can make this happen with the following:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using ParameterHandling\nusing ParameterHandling: value, flatten\n\nθ_flat_init, unflatten = flatten(θ);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Concrete types used for clarity only.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"unpack = value ∘ unflatten;","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now easily define a function which accepts the flat form of the parameters, and return the negative log marginal likelihood (nlml) of the parameters θ:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"function nlml(θ::NamedTuple)\n    f = build_model(θ)\n    return -logpdf(f(x, θ.s_noise + 1e-6), y)\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"nlml (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can use any gradient-free optimisation technique from Optim.jl to find the parameters whose negative log marginal likelihood is locally minimal:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Optim\nresults = Optim.optimize(\n    nlml ∘ unpack,\n    θ_flat_init + randn(length(θ_flat_init)),\n    NelderMead(),\n)\nθ_opt = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Note that we just added some noise to the initial values to make the optimisation more interesting.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"We can now use this to construct the posterior GP and look at the posterior in comparison to the true posterior with the known hyperparameters","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_opt = build_model(θ_opt);\nf_posterior_opt = posterior(f_opt(x, θ_opt.s_noise), y);\nms_opt = marginals(f_posterior_opt(xp));\nplot!(\n    plt, x_plot, mean.(ms_opt);\n    ribbon=3std.(ms_opt), label=\"\", color=:green, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_opt(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:green,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Of course, the exact posterior has not been recovered because the exact hyperparameters cannot be expected to be recovered given a finite amount of data over a finite width window.","category":"page"},{"location":"examples/getting_started/#Fit-a-GP-with-BFGS-in-2-minutes","page":"Getting Started","title":"Fit a GP with BFGS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"The BFGS algorithm is generally the preferred choice when optimising the hyperparameters of fairly simple GPs. It requires access to the gradient of our nlml function, which can be straightforwardly obtained via reverse-mode algorithmic differentiation, which is provided by Zygote.jl:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using Zygote: gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This will probably take a while to get going as Zygote needs to compile.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"results = Optim.optimize(\n    nlml ∘ unpack,\n    θ->gradient(nlml ∘ unpack, θ)[1],\n    θ_flat_init + 0.1 * randn(length(θ_flat_init)),\n    BFGS(),\n    Optim.Options(\n        show_trace=true,\n    );\n    inplace=false,\n)\nθ_bfgs = unpack(results.minimizer);","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Iter     Function value   Gradient norm \n     0     6.797779e+00     3.098402e+01\n * time: 0.024340152740478516\n     1    -1.188790e+01     1.982969e+01\n * time: 1.3360381126403809\n     2    -1.743998e+01     1.745379e+01\n * time: 1.3561620712280273\n     3    -2.004485e+01     1.536873e+01\n * time: 1.369084119796753\n     4    -2.265821e+01     1.270164e+01\n * time: 1.3821589946746826\n     5    -2.398424e+01     1.017045e+01\n * time: 1.4320440292358398\n     6    -2.581720e+01     5.378064e+00\n * time: 1.4455289840698242\n     7    -2.655948e+01     1.253150e+00\n * time: 1.4585411548614502\n     8    -2.661078e+01     1.935944e-01\n * time: 1.4716911315917969\n     9    -2.661300e+01     5.144078e-02\n * time: 1.4846880435943604\n    10    -2.661308e+01     9.680349e-03\n * time: 1.4974141120910645\n    11    -2.661308e+01     1.883367e-04\n * time: 1.5101850032806396\n    12    -2.661308e+01     7.552794e-06\n * time: 1.5228161811828613\n    13    -2.661308e+01     6.143938e-08\n * time: 1.5354180335998535\n    14    -2.661308e+01     4.437991e-10\n * time: 1.548180103302002\n","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Once more visualising the results:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"f_bfgs = build_model(θ_bfgs);\nf_posterior_bfgs = posterior(f_bfgs(x, θ_bfgs.s_noise), y);\nms_bfgs = marginals(f_posterior_bfgs(xp));\nplot!(\n    plt, x_plot, mean.(ms_bfgs);\n    ribbon=3std.(ms_bfgs), label=\"\", color=:orange, fillalpha=0.2, linewidth=2,\n);\nplot!(\n    plt, x_plot, rand(f_posterior_bfgs(xp, 1e-9), 10);\n    alpha=0.3, label=\"\", color=:orange,\n);\nplt","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Notice that the two optimisers produce (almost) indistinguishable results.","category":"page"},{"location":"examples/getting_started/#Inference-with-NUTS-in-2-minutes","page":"Getting Started","title":"Inference with NUTS in 2 minutes","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"AdvancedHMC.jl provides a state-of-the-art implementation of the No-U-Turns sampler, which we can use to perform approximate Bayesian inference in the hyperparameters of the GP. This is slightly longer than the previous examples, but it's all set up associated with AdvancedHMC, which is literally a copy-paste from that package's README:","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"using AdvancedHMC, Zygote","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define the log marginal joint density function and its gradient","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"ℓπ(θ_flat) = -nlml(unpack(θ_flat)) - 0.5 * sum(abs2, θ_flat)\nfunction ∂ℓπ∂θ(θ_flat)\n    lml, back = Zygote.pullback(ℓπ, θ_flat)\n    ∂θ_flat = first(back(1.0))\n    return lml, ∂θ_flat\nend","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"∂ℓπ∂θ (generic function with 1 method)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Sampling parameter settings","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"n_samples, n_adapts = 500, 20","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(500, 20)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perturb the initialisation a little bit.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"θ0_flat = θ_flat_init + 0.1 * randn(length(θ_flat_init))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"5-element Vector{Float64}:\n -1.061645750231075\n -1.910999739334575\n  1.546560417491202\n  0.15458255612205435\n -2.4045309738334355","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Define metric space, Hamiltonian, sampling method and adaptor","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"metric = DiagEuclideanMetric(5)\nh = Hamiltonian(metric, ℓπ, ∂ℓπ∂θ)\nint = Leapfrog(find_good_eps(h, θ0_flat))\nprop = NUTS{MultinomialTS, GeneralisedNoUTurn}(int)\nadaptor = StanHMCAdaptor(n_adapts, Preconditioner(metric), NesterovDualAveraging(0.8, int.ϵ))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"StanHMCAdaptor(\n    pc=WelfordVar,\n    ssa=NesterovDualAveraging(γ=0.05, t_0=10.0, κ=0.75, δ=0.8, state.ϵ=0.4),\n    init_buffer=75, term_buffer=50, window_size=25,\n    state=window(76, -30), window_splits()\n)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Perform inference.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"samples, stats = sample(h, prop, θ0_flat, n_samples, adaptor, n_adapts; progress=true)","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"([[-1.061645750231075, -1.910999739334575, 1.546560417491202, 0.15458255612205435, -2.4045309738334355], [-1.061645750231075, -1.910999739334575, 1.546560417491202, 0.15458255612205435, -2.4045309738334355], [-0.9460509499163294, -1.9099602361700456, 1.562016703328387, 0.052611508158787006, -2.7388025254164563], [-0.8184277305353869, -1.506574705205326, 2.1238183173738525, 0.29890736171405496, -3.858747375752599], [-1.9695801335865146, -1.8769323642111988, 1.6590413180454893, 0.13842526373553932, -4.098682695893325], [-1.0887625665862195, -1.200985134833507, 1.7906502045681887, -0.047062930077833555, -4.14069846884099], [-1.2770522235501451, -1.4852145684465121, 1.7670457871181873, 0.0045408882941551515, -3.565476988216968], [-1.3387546499537748, -1.6273449689617012, 1.4152673209472781, 0.008982404545960498, -4.245656684809715], [-1.177139910805779, -1.6262103899409333, 1.4789757904024035, -0.01979806998518087, -4.003106065921503], [-1.314917839805195, -1.4933140461523162, 2.0885099357475, 0.32674748803881853, -3.697780189905704], [-1.242642374135286, -1.464313234758202, 1.5065727357930803, 0.1787803146639627, -4.056384222006704], [-1.242642374135286, -1.464313234758202, 1.5065727357930803, 0.1787803146639627, -4.056384222006704], [-1.703125987197738, -1.6543905656532971, 1.2062721871565447, 0.0725673951158511, -4.082646997293633], [-1.4094880481868661, -1.6917455551563467, 1.6582644486849054, 0.14145929138737237, -4.268608870531325], [-1.4537231067679872, -1.4652810703620933, 1.5589367633557685, 0.284755062729492, -3.8120356850270425], [-1.4123367937430358, -1.8399625072505823, 0.817745258231102, -0.5834406870479343, -4.011638944146657], [-1.3387769300173442, -1.4293453708689416, 0.819813650423143, -0.38230764258658906, -3.8189832919368345], [-1.1893534621890884, -1.504005045570242, 0.9682464152680774, 0.08818905940644722, -4.102183927213497], [-1.546782498861523, -1.7819612135221785, 1.9684389948048213, 0.003451603683599542, -4.173599433204888], [-1.546782498861523, -1.7819612135221785, 1.9684389948048213, 0.003451603683599542, -4.173599433204888], [-1.5797207274947753, -1.6260086439335357, 1.7956068395033835, 0.177626305336197, -4.257564535557313], [-1.4015666410510055, -1.8024165928643248, 1.6269012894081305, 0.2012091332981373, -4.20489964933798], [-1.3911611993464341, -1.5254424862313165, 1.745745047278763, 0.30066525642676867, -3.9392524069431216], [-1.3131850722138156, -1.4333099815744406, 1.9471781379307331, 0.49344241541393263, -4.126847560162067], [-1.2720206568738108, -1.6202913666156105, 2.0095691365277117, 0.5806103256803147, -4.06479603566821], [-1.5515167513690316, -1.4430925123063507, 2.074057609865976, 0.3573444786006087, -4.117102665770759], [-1.3088240205731283, -1.425561698967075, 2.099106162265026, 0.48346425240571606, -4.151525234699331], [-1.4217073942083769, -1.3924215800057258, 1.9125051702407063, 1.165185377752634, -4.004225196038755], [-1.143067196474275, -1.4732983795940968, 2.3566339450934786, 0.958659619891565, -3.7997152013067637], [-1.7875224875578009, -1.690190545074811, 1.5832611863702768, -0.05251156943887636, -4.383245851234013], [-1.7513803483455677, -1.7627944915162368, 1.674909262958121, -0.08691677322879815, -4.359778323856186], [-0.870818117536247, -1.5469048462279715, 1.3009052477547736, 0.04890339258700434, -3.7768773377990974], [-1.0972600945035909, -1.4990895535793503, 1.5677575445628094, 0.20315357484625846, -3.341738190132174], [-1.6970580358967682, -1.661556930499809, 1.666261613335266, 0.27197210257758836, -4.639613314492726], [-1.253360799813775, -1.5319189073814572, 1.784190568461245, 0.5848328230011812, -3.773734644727837], [-1.1902419246033602, -1.312325578416068, 1.6582876129365196, 0.6288754544517532, -3.7214637262087495], [-0.8745115165139544, -1.3931828521103378, 1.4172837046040547, -0.08555333395185472, -3.8184177193539335], [-1.6040188009433223, -1.7678542940476385, 1.068970277561333, -0.08574907019559352, -3.8319278604791585], [-1.6902770493160706, -2.0559665607669717, 0.9776312176601353, -0.07939751030078235, -3.866405486222851], [-1.6334108153959848, -1.7347972852659705, 1.2206965113205988, 0.021994616586531276, -3.836671714430308], [-1.6105301826094955, -1.5818196747234128, 1.2474846434105133, -0.04493767480111726, -3.817709355525813], [-1.6571116408270772, -1.5494449359306772, 1.2226694212158566, -0.06138226360392629, -3.8978301873376364], [-1.3856226546123909, -1.3210149350618525, 2.248113799073257, 0.25726647487524434, -3.992736382491543], [-1.150948669408344, -1.6089373048980515, 1.3263386885170756, 0.11781293558009759, -3.9628882292129797], [-1.5512712894513996, -1.504428780696394, 1.2177298300812682, 0.33386750463085696, -3.7517386401407826], [-1.3403398000365214, -1.7200224773839075, 1.1484727434273785, 0.6174316174839041, -3.997462739046329], [-1.2642954524519001, -1.5905733406297045, 1.1492448518500091, 0.42839928330876914, -4.075139454316506], [-1.4086015728728283, -1.457162894417296, 1.876097431759573, 0.5648888102513991, -4.030215328797581], [-1.2233752630405317, -1.326781898300447, 1.9205679374079627, 0.143683536667768, -4.3069101384991715], [-1.2071733242821965, -1.4097274924378398, 2.1084259403409193, 0.24822864725317945, -4.275127878970938], [-1.1774929065783224, -1.5434563397261485, 1.1451055812910573, -0.30457878574512764, -4.05028849766005], [-1.260354257638018, -1.489730244409667, 1.661375024890207, -0.35399923600223315, -3.7765981780118043], [-1.3472176201548418, -1.501097917744317, 1.2328843820638342, -0.14644669968746798, -4.122848244554922], [-1.3867661210340614, -1.5611135564468512, 0.6640368984397961, -0.15920347544787944, -4.109563104040557], [-1.4145892605724835, -1.5941435841324285, 1.8812118924003374, 0.3058432507759018, -3.9796578224944827], [-1.2952109542694754, -1.7409533384678182, 1.853068478500915, -0.026027789768646142, -3.9954157776302193], [-1.4470089561957833, -1.8903655840109923, 2.1631758859659316, -0.20234080888647676, -3.990642905790856], [-1.7693470337090889, -1.540643974040212, 1.9330715023440275, 0.5269722403805299, -4.111561195738203], [-1.3005192744862422, -1.4105584096700579, 0.8585468645988972, 0.584221888842066, -3.97901288606979], [-1.417349942565241, -1.3241029683510828, 0.9983117543243107, 0.022525604170022973, -4.362838767526064], [-1.5680144568258727, -1.8584503098589609, 0.9882536679356144, 0.27577099272770933, -4.272187619756291], [-1.6069496376938726, -1.829311567192596, 0.9220766491245606, 0.25036640599111654, -4.103070471308574], [-1.8356744414339772, -1.3891238438813318, 1.0470981969690474, 0.1415264492367495, -4.373906129836531], [-1.3155989036892901, -1.6201572578254384, 1.624958823192824, 0.22031586462286784, -3.7445591976181274], [-1.1487077192187307, -1.8726591630069147, 1.8949874233918378, 0.03176090918223658, -3.7809532770425363], [-1.1780120143588708, -1.7932691551499516, 1.680609621830939, 0.07718737205882696, -3.8444343673774033], [-1.6227347538060395, -1.3278013106339452, 1.4437850621124317, 0.5632367000084019, -4.155736263482905], [-1.089736656594785, -1.635415216839248, 1.3636044777046088, 0.04847318241321347, -3.94738036790629], [-1.2998495627835496, -1.3423624283442985, 2.1388944671673245, -0.4329312884563452, -3.765396996062071], [-1.2462415644070663, -1.492121447017991, 2.006555107490877, -0.31860526490296537, -3.753334267054738], [-1.0624504128667767, -1.5097657238224125, 1.7654386290875075, 0.2584810464374414, -3.904150682009727], [-1.2200393056342205, -1.4770710410195182, 1.7699702987959585, 0.18322002710573054, -3.9137416601913473], [-1.5574492092617973, -1.733744473397454, 2.048401633277845, 0.33154552385401287, -3.904277605592894], [-1.255518061494953, -1.9783325211726688, 1.8788011139823693, -0.0658589876788809, -3.9076777383212224], [-1.3648715988908584, -1.189733006173431, 1.080253855506721, 0.1525973103938978, -4.285634561465377], [-1.1696132764191336, -1.423551662258084, 1.2296978113073243, 0.3649359675418886, -4.109474497388922], [-1.34542656928755, -1.2863302354900463, 2.074920097398581, 0.650957838454537, -3.967070175736727], [-0.8895388191331678, -1.1770581632489805, 1.7613740284256374, 0.09526755067634016, -4.002854123341664], [-1.1975330440463194, -1.434247611189922, 1.4695834190583186, -0.29564289446301506, -3.8487408195546164], [-1.0843536946019834, -1.3483298034597588, 1.518375156434466, -0.11827364197826916, -3.9547253425126008], [-1.1435282796393338, -1.410959887395444, 1.3028812065096735, -0.13044604785192332, -3.9511484682693006], [-1.621308569406, -1.6902584577765063, 1.4248582398515564, -0.24477942455855115, -3.8880123339313672], [-1.159000081073207, -1.3358859123316524, 0.618119777806611, -0.1280813782241336, -4.152251633931218], [-1.006754971342317, -1.2212602707018847, 0.591894583701786, -0.0024898468269321794, -3.6964383921608617], [-1.1343393932107309, -1.4985891874544903, 0.6674911470198931, -0.03770614145520027, -3.9406812490558085], [-1.6542820845047796, -1.6003483030685064, 1.3462488598506432, -0.013084408334958803, -4.174817693016081], [-1.3965491791690519, -1.601118126914897, 1.8487983297643849, -0.24917829402306288, -4.056023049923171], [-1.3449877667143393, -1.3740205998382322, 1.7273529776800451, -0.0459599123047407, -4.12138776441379], [-1.472764394947722, -1.6718839877044003, 1.6970050754096568, -0.07784309497079625, -4.160425833974409], [-1.5230085628422092, -1.5778785351735314, 1.6650664046942703, 0.5851791422481603, -4.135797034609329], [-1.3564659112496178, -1.5135361849394668, 1.414786720061428, -0.43455675425073553, -3.9789692019554037], [-1.2714268612719923, -1.5112735991955473, 1.121540849356768, -0.053068487802628184, -3.929206511678356], [-1.3079631057607044, -1.4853276108602746, 1.1381740561907754, 0.137512823323225, -3.5938560116375293], [-1.4333751375201305, -1.747688301538518, 2.5624610910562655, 1.0186237741422253, -3.9303618572224552], [-1.422412659979036, -1.5313825532335155, 2.1622005111057536, 0.9196360084918098, -4.2380161176288285], [-1.372215354232002, -1.718297579044858, 1.7393559819273605, 0.13317943924731937, -3.9273353728781744], [-1.5397727333697815, -1.45143421687829, 2.096985467192249, -0.02797745499092756, -4.224732709674239], [-1.465817805758372, -1.6353297909530624, 1.6899538086235306, 0.6546341191781238, -3.85991154098818], [-1.0836442208379973, -1.481540140803743, 2.0454369673108244, 0.31956757836411265, -4.193285451631138], [-1.5107408772449773, -1.564458325982347, 2.417281416250293, 0.5472562493792672, -3.943115881871034], [-1.2360756603621228, -1.6524976791813768, 2.316065150138281, 0.5517686662447259, -4.064400463465489], [-1.6362311128665463, -1.7176468423276376, 1.5720093558005208, 0.5212691145344759, -4.067128065410728], [-1.0794078505635232, -1.3365147276951044, 1.6869822768682161, -0.32203389256678794, -3.9483225699274214], [-1.3635647124548018, -1.538448603016911, 0.9504505275043795, 0.2152109278752752, -3.916193520737742], [-1.4884710631106797, -1.491055771459524, 1.0419521794803737, -0.3658565146153007, -4.258261997574345], [-1.5849660629791409, -1.7019567025179199, 0.7147678168922754, -0.3865391528492995, -3.949936798063926], [-1.6019620718937495, -1.8625565283254193, 0.9402558418914482, -0.05172790516576305, -4.013529658914628], [-1.4588424219840705, -1.256737439215178, 1.108753367284104, -0.23180547025231313, -3.9496167493089347], [-1.6555268591373897, -1.5721283536861879, 1.0867083429228892, 0.05541787605844587, -3.909391282022302], [-1.31894417099069, -1.850515704283029, 1.2415905876300204, -0.2596134116801351, -4.363596391442337], [-1.5041026462484501, -1.3721060299416368, 1.5993127098748647, -0.4052407456859225, -3.853702364305625], [-1.2929895903426616, -1.737756075606878, 2.1188402589446866, 1.1101188299583886, -4.078328707495799], [-1.9424416387394134, -2.016617371534935, 2.2136673420012793, 1.5224322040599114, -3.7612871379256716], [-1.3241007309821993, -1.3699797395969104, 1.840797543802149, 0.5517619287225581, -4.344623562283515], [-1.351158545672773, -1.6997090646180177, 1.7709085796860269, -0.06909104091447561, -3.7222037059182305], [-1.5734639176504943, -1.621866008033236, 1.8546682155820655, 0.7221701195176553, -4.269445306999143], [-1.5386109845582023, -1.5082197726088373, 1.8760008609842957, 0.3094886252397039, -3.876595513933811], [-1.4809274374731, -1.2720587045913734, 1.493676585155908, -0.2611588293603292, -3.7545145960363375], [-1.7015345220044436, -1.2958836192250796, 1.782508224074023, 0.9133027948068385, -4.05523544241761], [-1.1086399637764563, -2.0547233055751946, 2.0448307525449314, -0.2552800968235493, -3.7957799039103035], [-1.2013341078912658, -1.9121055098317512, 1.9492797837799216, -0.2484227648213164, -3.729845273601468], [-1.6612834562808847, -1.526236969510487, 1.5674035365889756, -0.4614284549112973, -4.234919116848097], [-1.3699684714723368, -1.7133804967041957, 1.278087698320147, -0.13317432965309267, -4.077649519847924], [-1.668429928797765, -1.4856890677310668, 1.3612124101690302, 0.040144054008468245, -4.208260166047776], [-1.3920248061415692, -1.6668200948007785, 0.43347033660552015, -0.21661529977865945, -4.288483757385963], [-1.4455139334398108, -1.7776707763126356, 0.547013553605328, -0.32018926215404736, -4.325106055976944], [-1.760306022173075, -1.6446613757272952, 0.895253991669985, -0.34311288661287426, -3.7778549078451893], [-1.8173161858253175, -1.569742622623535, 0.8473812688171635, -0.30110440150543955, -3.8484250297060156], [-1.3946090907461124, -1.2675214939802082, 0.9988640033121587, 0.031661998874812185, -3.8562899378816287], [-1.6803630143676558, -1.7137515308635756, 1.1250392902392161, -0.3425228374519402, -4.004502933242012], [-1.3271504126720448, -1.3535115298219125, 2.272954826965342, 0.44277223409276534, -4.232554454071576], [-1.3491028880191487, -1.3510633141595125, 2.2064345086197608, 1.3620817132134788, -4.057350730706998], [-1.3924789264731368, -1.724590960749757, 2.452042241974853, 1.487283477600805, -3.9305362701367996], [-1.555714111127698, -1.4688914985007662, 2.053677397429413, 1.2003968380497971, -4.277434521194438], [-1.3306934789711033, -1.6269775463024323, 2.338979796703901, 0.7075142138736297, -3.8828683630485816], [-1.1706091090587067, -1.3716996345157417, 0.7774388756547022, -0.2591657207924431, -3.935178301054183], [-1.2316181778679824, -1.845283149632791, 1.071812532929413, -0.2839950786234736, -3.865186468341689], [-1.283920073129849, -1.632294677203736, 0.7913856359793504, -0.3905396996494412, -4.1405878258852375], [-1.703899023729981, -1.7256887167696358, 0.8585997456571879, 0.2412288645294124, -4.385013879083406], [-1.5372864754195381, -1.3772911367764502, 1.2329503717427188, -0.14967482075264488, -3.9676135784925797], [-1.6957117013321337, -1.5401660625271931, 0.8053792300134499, -0.22026106737684306, -4.1434449125193105], [-1.4147710021342006, -1.9802590709442656, 1.0308958127202275, 0.29261602651654306, -3.588557594350491], [-1.2006255740423257, -1.6663785638510458, 1.0156368025319602, 0.0033659443326171934, -3.782566329902738], [-1.3895151382451347, -1.701118589773819, 1.0321152172551888, -0.14596119317127051, -4.055987262455495], [-1.3831592360136946, -1.8046963533797513, 1.0294537153040633, -0.02660975486250195, -3.8031415176914476], [-1.5600182633146031, -1.6502013063593768, 0.9338318853194604, 0.0018268798450988052, -4.085627681387404], [-1.1691044980112788, -1.5987309365532365, 0.8951098996585325, -0.37578477961538975, -3.890821900520136], [-1.4853124069027, -1.436266252454215, 1.5009279381400424, 0.2123450264869705, -4.046429850887377], [-1.350316010723798, -1.429234846645906, 1.388696881788929, 0.5368191389779577, -4.106647920342215], [-1.2286751869195887, -1.4175035527543014, 1.371086021153727, 0.49021692196172545, -3.993875278579077], [-1.4689617971461488, -1.6734488113299677, 1.0340959867244472, 1.101163889667476, -3.932244892669803], [-1.3462228968205183, -1.397593929209024, 1.3293627184453973, 0.8059125575886781, -3.8948438637612726], [-1.3529413735137483, -1.4794153289728584, 1.722126491318963, 0.6354587708724836, -3.9963686555413838], [-1.6340209862765636, -1.723788331599595, 1.963846555228267, 0.08198558257040782, -4.327377754877197], [-1.155638953753321, -1.631260354579675, 1.8551329318062557, 0.855633487928212, -3.7852103517869193], [-1.6703876662301484, -1.748477509466966, 1.6767653291608013, 0.613477318631379, -4.438364025445909], [-1.2071383060040555, -1.2233920723849954, 1.7846015952904348, -0.04399429755345299, -3.8564271512186696], [-1.8353178735805462, -1.5743896421034402, 1.1880560008371073, -0.16122529427315224, -3.7580509086973337], [-1.7833797383405472, -1.5018002158467398, 1.125565459758506, -0.01526371644865164, -3.93847409306483], [-1.1908368968841754, -1.6129220182364379, 1.7895102966031204, -0.09282827255060064, -4.211072243696998], [-1.2510591169200236, -1.7437341296297275, 1.830403725584646, 0.10502029616382666, -4.01518425631112], [-1.2699267087628214, -1.3430050638971818, 1.9571347048534968, 0.389663659557821, -3.971549117086725], [-1.7245481651681127, -1.790710057808611, 1.6521383838382144, 0.4398617626203461, -4.233692704581581], [-1.390256416600207, -1.5345876470283466, 2.0486482238006922, 0.33127840954906695, -3.8561071085061163], [-1.5238478479965434, -1.4475910286981355, 2.133714900129621, 0.3675240284165819, -3.817980360428964], [-1.6700912118041373, -1.7468962329691131, 1.9228943865480057, 0.3469784381674972, -3.9330866191532947], [-1.288839084842593, -1.453516438911363, 1.840795762169939, 0.4187417096516686, -4.108931827701112], [-1.445906233045435, -1.724217443570558, 1.8212562380603778, 0.5661446676237353, -4.130718940478361], [-1.378437589815725, -1.7439843446351182, 1.7626922242731187, 0.6234891850896901, -4.034916101898819], [-1.4692758172529412, -1.427704698385942, 2.286810703893265, 0.6235253843337667, -3.9884030349527806], [-1.2410205378331314, -1.4813725890219003, 2.2309737478576994, 0.6513165630565323, -3.9037946112579345], [-1.107108439147085, -1.2784974701782312, 2.0376637362414236, 0.9153386789926546, -4.029619522236388], [-1.419623711091486, -1.642712802029758, 2.229361503703761, 0.9310763993746579, -3.8911762354859185], [-1.4927785544769319, -1.4257456073613362, 1.7455759796872243, 0.6589791734154042, -4.262004675549323], [-1.528606613240366, -1.5593903149072994, 1.7342598309681747, 0.5942390811265311, -4.106033594921801], [-1.3855929912890708, -1.4466846143585173, 1.8693446969902259, 0.1391192803432511, -4.05310138795047], [-1.347104605359728, -1.5165251975132255, 2.0683638670401785, -0.040820691670469936, -4.198433221534952], [-1.626927527759269, -1.7910043886860387, 1.173058025601002, -0.08075093568158526, -4.076544340443137], [-1.6318099116214044, -1.7677732059906988, 1.1215944144964196, 0.0013634942660864513, -4.018589189699356], [-1.2673775297386811, -1.2490636047178958, 1.0751813341354959, 0.05863224202502244, -4.082957493784604], [-1.3034568457045501, -1.697657745932618, 0.7909455695954042, -0.01158953578214883, -4.165438774002166], [-1.449834087367544, -1.6014140731956052, 2.0185666461883387, -0.22857811936635775, -4.078955566286766], [-1.5192287453041768, -1.6399690268396094, 1.3537953510835077, 0.2142925399389023, -3.937916781267879], [-1.3740735690842785, -1.6562017282025896, 1.3502327012115545, 0.29022202489783994, -3.7594136550010253], [-1.1371305225496575, -1.0754111861661122, 1.4437769817334454, -0.3108679048325115, -3.9713458873615286], [-1.2751118891089877, -1.7752157396826445, 1.733787140759498, 0.44732331393356584, -3.861067341466695], [-1.4502673214026354, -1.3952490754433062, 1.767832101795911, -0.38980973993833895, -4.222560667089244], [-1.3045436710438634, -1.4485527378379073, 0.9828392098962482, 0.6499282424367496, -4.124848496762325], [-1.3963943831402683, -1.568962811278295, 1.1125252130711016, 0.7465570626616509, -4.280056827824304], [-1.2192031275895812, -1.3985805736699204, 1.6215763047474867, 0.5403261222502345, -3.6794086844197817], [-1.1813858509520732, -1.489507663288111, 1.6349012868584987, 0.6556885922133248, -3.679361190811572], [-1.5986174691952844, -1.7322890062287883, 1.345385146849706, 0.035407394615126486, -4.538460674565951], [-1.8973913157733957, -1.6537199978691004, 1.5923485454527413, 0.06133578336673863, -4.254910097716375], [-1.0791602438352017, -1.271823989895165, 2.219969719768121, 0.9522496745182828, -3.711021773725872], [-1.09072155276804, -1.162085168729377, 2.1340175310560507, 0.7815877282831248, -3.59483660277802], [-1.4025283934130928, -1.2117739660175075, 1.6709986960141756, 0.7113321939101003, -3.7279137690708817], [-0.7733503094141945, -1.36147684586196, 2.011526099027404, 0.520580501581331, -4.010516838324816], [-1.2058939650739002, -1.0282790991816424, 1.8234785198459766, 0.1612671638794083, -3.9530469448829626], [-1.4527779540331727, -1.654021402652072, 1.0218554695711697, 0.4027758876576952, -4.107992358779441], [-1.6161239148515565, -1.6706368470007276, 1.3165522493729527, 0.49358349331079154, -3.697050362575642], [-1.2360892953796911, -1.44673133777588, 1.325346693283984, -0.17960220251029044, -4.3451716624316905], [-1.4310972499154198, -1.4981911620686175, 1.1417493168296884, -0.17408349686283214, -3.638561739431873], [-1.0620677678435375, -1.6241943592313353, 0.7053655121880346, -0.48894274244922903, -3.9209659352026742], [-1.7530451906215465, -1.5623140361327454, 0.45946769267392024, -0.36312368286058416, -4.295427141991368], [-1.3066013329057031, -1.7820072385384378, 0.6639895904679862, -0.20538383265779223, -4.189143951994508], [-1.5225801197765723, -1.8590234025918646, 2.204420621971712, 0.6165684770331632, -4.143115269303471], [-1.6186607723502804, -1.9334444424795731, 2.4289874309632435, 0.5642571521890107, -4.20288806728008], [-1.5697711329116488, -1.9230248647445172, 2.3126117502526444, 0.6678351436919804, -4.117004285973655], [-1.6381679016300756, -1.8631726145971352, 2.3615372843579285, 0.577327156953246, -4.13113032881532], [-1.5137487293657952, -1.7064410864706288, 2.2614186035031967, 0.7528075083931154, -4.061740171639179], [-1.41558160484455, -1.412598984315649, 1.8565627197948442, -0.01504229597962825, -4.276931944181969], [-1.2077292277042817, -1.326844560135884, 2.1455370564176026, 0.224672493473764, -3.8798528397391854], [-1.6301424881996291, -1.8231731979254757, 1.8224844340540995, 0.19461496595173244, -4.238413500771394], [-1.3485893278389411, -1.3692042511077247, 1.5368815064576564, -0.41482887450836986, -3.9378232544587157], [-1.6009341808598558, -1.7115350015520001, 0.3883083385612637, -0.19224623006329614, -4.240784400997921], [-1.6703020792065248, -1.6236174228752303, 0.5532135858578142, -0.11323865975537731, -4.085621781436834], [-1.357848798207158, -1.77654099281474, 1.1238187442283916, -0.23190518053455128, -4.058063813255697], [-1.537181880606165, -1.4786900446301, 0.6620266505930206, -0.10565189326750801, -3.8281509539068126], [-1.4441218148954758, -1.3815190898380092, 0.9878227259950179, -0.26116086614841716, -4.432319723844978], [-1.3566840705487944, -1.5947445544361705, 0.7094889433596334, -0.017246894903368185, -3.9708610415434933], [-1.31637448171954, -1.4689339059096735, 1.901781224062522, -0.0026212718823469816, -4.186165399796887], [-1.370595759610949, -1.8704242111205587, 2.134485353771143, 0.9778330158022681, -4.045098867957873], [-1.4920926867574276, -1.6204309531212733, 1.4624049665084389, -0.019113333331768366, -3.8857711413949665], [-0.9923894133418587, -1.1392859740917132, 1.2591351599839204, -0.3325574250861757, -3.892629921363445], [-1.348747413421122, -1.1319840425667447, 1.1509238212882245, -0.295053273508225, -4.1516345467557185], [-0.8922557197597987, -1.3828985298535543, 0.9654163183451072, -0.09621763357206642, -3.733303504087264], [-1.567474354559888, -1.7348930094295467, 1.2062283789572097, -0.11735929711802578, -3.757505537403591], [-1.1484632768118477, -1.4037123067805626, 1.0417115053345267, 0.05455966637950165, -4.019885370708116], [-1.3394857459581537, -1.1535426392796566, 0.9959334213179131, -0.394265062248903, -3.979535536222416], [-1.287084415017843, -1.5609795338163492, 1.1369192582646293, -0.2989536015029962, -3.7688660205307385], [-1.7137562540573104, -1.7626985662575416, 1.0062761510626705, -0.13825523879620072, -4.3862368515193175], [-1.3699148564494856, -1.3710018542161821, 2.024248019042869, 0.8366676032199832, -3.978513683346908], [-1.1864981122685612, -1.4885034185215442, 1.1991884261702912, -0.1727632728863701, -3.831204718798093], [-1.070512660892752, -1.3628005603742441, 1.162535981105392, -0.15129997955542568, -3.8629147855312778], [-1.7055831741581085, -1.7421228890075375, 1.5281460321950446, 0.07524687554811377, -4.196760595601684], [-1.4521508946587753, -1.4156537864705725, 1.921595783067148, -0.10421921813849087, -4.357718184914894], [-1.5273642230816142, -1.7790527589881797, 1.6830016718958314, 0.04896055110906879, -3.770675054661723], [-0.906394399089311, -1.4158974034134801, 1.4022434337349585, -0.3562535972736555, -3.8485394094654604], [-1.232379533396778, -1.4607947530141168, 1.5496621904749057, 0.025334749363187414, -3.865808017501228], [-1.023901293275897, -1.3424746878464302, 1.6428856428432335, 0.1555984816679889, -3.85473795372794], [-1.6226000160431415, -1.8275107045218797, 2.0279115208834333, 0.8856165870573965, -4.116804592021006], [-1.1008030709194316, -1.6820206241469107, 2.8175031943717785, 1.280476759169558, -3.747414657948363], [-1.0338450596788604, -1.5050440466333856, 2.788735912440446, 1.094749044990749, -3.6864297810002618], [-1.2458474772360322, -1.4153714073465742, 2.8969759295888284, 1.055921204995897, -3.9458115757713923], [-1.4632561328799065, -1.4908041231243891, 2.8218478871766894, 1.3536556652135818, -4.179889304901086], [-1.105475221097798, -1.5180952314047127, 2.1201509968545817, 1.6823338201387819, -3.9526395590622845], [-1.1188977240491764, -1.4846514800798052, 2.2290387186166125, 1.5120790832992568, -3.9622966887778657], [-1.788073935933658, -1.5670749850203656, 2.775132046557014, 0.9200351208123592, -4.147897022247245], [-1.3038823021560917, -1.3267195433274581, 1.3774096976479953, 0.565578340155729, -4.019617608092466], [-1.162208298620483, -1.4232924915025005, 1.4462366421862083, 0.6393550392406097, -4.142634478394576], [-1.2506454074146094, -1.8560831351762161, 2.4566204311201396, 0.6969111177213616, -3.9978417733429295], [-1.3954951844331949, -1.490331336367221, 1.7207708012581904, 0.8006725861160706, -4.419410574005684], [-1.045378640749451, -1.7786451676012507, 2.2724766752020016, 0.4282372517738341, -3.772335506923216], [-1.5849613401581304, -1.3105364994119029, 1.92134468795664, 0.1084777347380238, -3.848918896736801], [-1.2733877236083186, -1.5344455535691088, 1.5755479366733898, 0.2610106383000883, -3.825379291541774], [-1.3375165602425962, -1.277477822823333, 1.3705119123366822, 0.010440391110158181, -3.9387038808725916], [-1.2951902081017634, -1.8053961511142118, 1.4066095996876333, 0.2989462687891497, -4.017285368478158], [-1.297553984526878, -1.2551263292358412, 1.5876800766220123, 0.4184179853040989, -3.892232781420468], [-1.7765678735403672, -1.671715636824626, 1.273611586113037, 0.007574356885495043, -3.8721114472196767], [-1.7448188490500824, -1.7856782550645693, 1.2648148196745772, 0.13111267500506307, -3.7956423653429288], [-1.3283906408078787, -1.592615349266968, 1.5314892155637172, -0.054093980868788645, -3.9617892518734403], [-1.291668323244057, -1.2458567051602722, 1.2135894267578462, 0.36394344635134035, -4.127752979591046], [-1.465467401505268, -1.7549525333793354, 1.96252278514288, 0.7495259877933996, -3.969532585610553], [-1.5403932508534472, -1.50966947561649, 1.915478778219793, 0.6347958166300967, -4.053906221056097], [-1.2441990222390324, -1.3366736299906168, 0.8480000123280025, -0.5820687844438287, -4.163021686076574], [-1.4806392603522935, -1.6720840077280064, 0.6603730587798206, 0.043578408568584914, -3.957931451581066], [-1.3692180880275249, -1.4201843560359237, 0.9685659874231719, -0.2834645042027142, -4.185449244798886], [-1.5127563177072731, -1.7093109983881885, 1.1584805734305001, 0.08996328794064128, -4.012374201988614], [-1.3786390125481975, -1.4988501009170523, 1.774225062065212, 0.17604008294479284, -3.9971478689624065], [-1.3965322557488344, -1.475244907578739, 1.755200459338028, 0.14585836867829116, -4.0930532941218765], [-1.491993384118941, -1.2855858071877884, 1.8839754543538947, 0.35524580427338537, -3.9209079696516604], [-1.2668855086572897, -1.4584209182141268, 1.9371217930782076, 0.41965942232571996, -4.03256134787973], [-1.5548693271530685, -1.815165610367236, 1.428618512474131, 0.2812748485265179, -4.199291252222593], [-1.6176162090162856, -1.4220530995690146, 1.3642865216785915, 0.04327702642406324, -4.332466389858289], [-1.2763125726288336, -1.5384380833531663, 1.1935277430113995, -0.10787047989319254, -4.23064186926886], [-1.7987504810862731, -1.692508234855922, 0.9454703061309805, 0.19231164509723297, -4.218185791040587], [-1.9108207874896463, -1.7732938620011067, 1.0775014698392336, 0.029900519275954635, -4.247362895065436], [-0.8813516883888303, -1.2490369505209364, 1.1390738154417972, -0.2378030313266493, -3.6220463658086963], [-1.7630158943530871, -1.5082121355887441, 1.2606020978176158, -0.21729533090361317, -4.35289884112764], [-1.4036498317268646, -1.6231667415279962, 1.8314248901596986, 0.1304842752137955, -3.9635854547334533], [-1.2410032751125868, -1.727191255579099, 1.8114728345780624, -0.024457444396468665, -3.9495780352703957], [-1.4596086922496427, -1.589303253434536, 2.1634099644914335, 0.3122142584680069, -4.100265251675389], [-1.3720713108520597, -1.5951182207520693, 1.0629846763092548, -0.18874880919349074, -4.078366550172044], [-1.410460567900618, -1.5635354837797852, 1.1802868276490848, 0.01876097329194064, -4.089128688240164], [-1.346726546246133, -1.6525458212899689, 0.8061580051281889, -0.39578155859298625, -4.176752603280299], [-1.478377206050943, -1.3561717432098013, 2.0665840716796167, 0.1917476812190047, -4.003087694751013], [-1.4508868147096459, -1.424861664519783, 2.198500455351293, 0.1576980447886133, -4.248386733797242], [-1.3513842485532197, -1.5126336446543345, 2.0465521069003643, 0.16420593074642506, -4.127824293912659], [-1.4797333515024562, -1.6747222926822365, 2.13029022830203, 0.5552395097563585, -3.940947716185529], [-1.2464331082495086, -1.3858840650154653, 1.7114517805800067, 0.1525380152002487, -4.035144880892681], [-1.2439080065698522, -1.5824369098083446, 1.6725212985071816, -0.07136612003765151, -3.7987880157646745], [-1.0224938827289165, -1.3405989410866817, 1.3534821609444707, -0.25141841330669695, -4.051765652907247], [-1.1426209354602872, -1.1110718526900298, 1.3916683571428456, -0.12865951112527407, -4.083469306621205], [-1.2401189559412056, -1.6761984574293143, 1.4026106671213487, -0.07692347650064504, -3.7602761881185747], [-1.4394113735680192, -1.392349203843849, 1.6130731974143662, 0.18684153537656964, -3.974877003518282], [-1.2305213823085612, -1.5962770392551722, 1.3229413487164077, -0.28204855161174497, -3.9767729587972167], [-1.2419700017716766, -1.0334465577450946, 1.573382540673222, -0.009469830786250286, -4.011061119660705], [-1.131175801650569, -1.7589108518661696, 1.8673857281844235, -0.15134876632930822, -3.8687663968139274], [-1.277968353530598, -1.1089501084030586, 1.4541983975659563, -0.10598176885829415, -3.9159159678668574], [-0.9867787984706493, -1.7058062874149515, 1.8965039239627202, 0.033882038158064606, -3.635746081340967], [-1.130622731381447, -1.8739547409833044, 1.7416512590621336, -0.12518188990566614, -3.6941131993721292], [-0.9355353330952544, -1.9997704409261507, 1.9784491047773507, -0.2514455912644272, -3.6100659827252164], [-1.2594475605047875, -1.8112308130289811, 1.726939108020151, -0.08923813354704462, -3.7465969552867677], [-1.6294583476385642, -1.528867238643943, 2.019879080449152, 0.12272238024025788, -3.965712384947502], [-1.3029085909346423, -1.5594180881689237, 1.7490942403719874, 0.48471309928728784, -4.061733270029242], [-0.9937700246060572, -1.60608015635757, 1.8749922275435418, 0.588014832484522, -3.819469769094657], [-1.410262113174, -1.3952825129521178, 1.737285734084404, 0.3079696865322005, -3.8663481091552145], [-1.0227269415694344, -1.3179634330490089, 2.361416166362215, 0.6853109075462125, -4.121612217167783], [-1.146973015792201, -1.0980129233970743, 2.247222360170224, 0.7180332234198579, -4.215936778792078], [-1.5646119873214908, -1.7162216106274435, 2.2094830045046976, 0.42151801609583694, -4.044920880227595], [-1.421632086490144, -1.5103808519972608, 1.1483506143393023, 0.4077667521862386, -3.847424159122641], [-1.2442963151945199, -1.4862284444627902, 1.3150028992750018, 0.1899578989288857, -3.9394341015177274], [-1.0761036490323626, -1.3975785687630717, 1.6364134307363083, 0.09915659103228251, -3.8289730027666016], [-1.2465745890385587, -1.521197773901519, 1.677009380462792, 0.4613470758042989, -3.87070188397761], [-1.5817198393548846, -1.5879521363992775, 1.6799114397054735, 0.5761791369566426, -3.7557910658197047], [-1.7482445559667539, -1.786078734540719, 1.909404913817905, 0.4767738765280885, -4.399986432865443], [-1.7182688448703478, -1.6629570631197836, 1.8199209544551986, 0.4430145826471824, -4.455419685984394], [-1.4097656359485355, -1.5548664819836289, 2.0027489793569013, 0.4721180050603505, -4.376777801171975], [-1.6578486623393653, -1.5714281396478047, 1.6959229184887292, 0.49449340188483304, -4.174815767393226], [-1.0956114723280916, -1.4650479781593229, 2.0625177741866234, 0.9603591309981252, -3.8897343076161963], [-1.1602790947646113, -1.4682976699543817, 1.8222836967805753, 0.11314118072750284, -3.978229827932603], [-1.5785900788585534, -1.6793943415309593, 1.278857467888823, -0.03710931577253091, -4.2442513856233255], [-1.1153094652761844, -1.6965625980247843, 0.7656551496676965, -0.08795298135485058, -4.039965186609335], [-1.2060449795729722, -1.5173718207226325, 0.8601672807799011, -0.25547679759478203, -3.999745611332751], [-1.3041836451380056, -1.8199525967999082, 0.5541781217554576, -0.3877052963504991, -3.6927858290245794], [-1.5491158973328083, -1.388902427787032, 1.3729283122380584, -0.13283534199187308, -4.208157515105066], [-1.683838585368819, -1.5122890675097496, 1.4532587137813069, 0.07023545110431151, -4.164651913602934], [-1.8362857226724483, -1.9273532971470433, 1.2397681156182339, -0.0030628649175324894, -4.112917924206721], [-1.3412010737393745, -1.2003648794502404, 0.7554725134200887, 0.3031008241272491, -4.516301601462579], [-1.3895771039887506, -1.9930812540328908, 0.6701609755294091, -0.6717550228780412, -3.5480123568783255], [-1.4089029700341316, -1.2482903298435597, 0.560980259237134, -0.08579198620620226, -4.323076700587998], [-1.4120382857558242, -1.3130159053584913, 0.46761202116862227, -0.010593365937045296, -4.471098801060281], [-1.4767861125296589, -1.8035597653687203, 0.6127174238365779, -0.5077752273876008, -3.691486246987418], [-1.4932767349637612, -1.6399331264598964, 0.6962558028094893, -0.3890546274472155, -3.9693597392283464], [-1.5435788165110702, -1.3428476688081592, 0.6413734093417043, 0.21628222440191353, -3.9633662482045002], [-1.2983351808181178, -1.7846341072618253, 1.7649635608076581, 0.21867809033593683, -4.074595001688402], [-0.9185411166914403, -1.4964894852428832, 2.0277171359209984, 0.5578569946299063, -3.971908634674546], [-1.1420876092062298, -1.3882518862616962, 1.9187930862729359, 0.5655456776318569, -4.0542306428189185], [-1.6041781921342966, -1.6664273454592764, 2.011068889546868, 0.8503642462214869, -3.7012283646977413], [-1.6406186319533944, -1.4187750142884479, 2.6233361598579883, 1.1838890386298015, -4.076341798795026], [-1.1236106312208531, -1.0604534903747034, 1.5837239272160644, 0.27791824907142215, -3.8792083965438593], [-0.9024562776468038, -1.409485207245345, 1.4366601589486159, 0.44445201116986116, -3.8553414289004975], [-1.229651701682376, -1.4083587007550824, 1.6310485023777639, 1.0131183347788961, -3.623239242283163], [-1.5392675612865188, -1.430064210018715, 2.896221701508578, 1.2709195980229762, -4.000230544318865], [-1.321201602887482, -1.6594537746718867, 2.8358971485743, 1.154388740803625, -4.007856836068194], [-1.252898701624119, -1.4582633545394617, 0.5444961676356227, -0.32436257127382506, -3.923268940779775], [-1.0722852480598208, -1.3098733465073569, 0.9873261815996699, 0.12215015357349869, -3.8899937746125075], [-1.5952175096691537, -1.722001771423694, 0.9844284917309332, -0.1657721967053849, -3.7117273546174143], [-1.371502203961051, -1.3661245916318563, 1.3870661506701927, 0.5922491425240352, -4.502119989824504], [-1.6227098476423214, -1.7174070552246123, 1.4857695891320277, 0.07692146818439785, -3.9306714202797277], [-1.3947890241574539, -1.3458023427984414, 1.9602205119673337, 0.34357747267361816, -4.102866467969363], [-1.4149981600387984, -1.653767095053061, 1.5575266168592083, 0.5152183779253958, -4.156906243722686], [-1.0906751107451302, -1.3726707812470702, 0.9005394476345919, 0.1739107859951408, -3.8584616342717966], [-1.7464663290134212, -1.569273192646092, 1.6427872527109113, 0.046823537834524975, -4.419346939644633], [-1.6233417976315407, -1.6545570299269299, 1.0772469565896503, -0.04771203391613907, -4.354812037622603], [-1.8690186444832402, -1.6855269505721435, 1.0731808261107523, 0.14623427303603306, -4.273925527990548], [-1.120968431877115, -1.508727527595515, 1.35546794456129, 0.7068352569273718, -3.9455660243167996], [-1.5699131882002215, -1.650612883528299, 0.863271223418124, -0.5820121351471154, -4.364182483239973], [-1.7086706988933593, -1.7047076137252304, 2.3622826247508275, 0.5377675015333021, -4.545060394231664], [-1.0256030135611574, -1.7570728845342787, 1.130307141530901, 0.24508529328920103, -3.719660616834097], [-1.4175468606129324, -1.386733149057606, 1.0630433707458469, 0.27152782191444613, -4.173068223532764], [-1.6458475302597628, -1.8638209990168717, 1.6509470447109291, -0.16626186017176653, -4.202139365269976], [-1.6339097508921367, -1.828782830854566, 0.8966612773252678, 0.030391928565222798, -4.26873562330633], [-1.053156286682701, -1.5907010375769475, 1.6270041878006951, -0.18692643042289883, -3.9623405592682737], [-1.254283232986778, -1.2909683763017916, 0.825677265888826, 0.23106099264926167, -3.775302021301714], [-1.4769456841418125, -1.6478839488274106, 1.2076065622108898, 0.7557222643046974, -4.357268101874516], [-1.4809809313823135, -1.558300522421282, 2.4110522408287784, 0.3375980057166096, -3.7974366934726027], [-1.2450934910186533, -1.436038410444401, 1.5280492639085987, 0.3339686897527853, -4.0553559902384], [-1.4578589349257713, -1.6163105092608678, 0.944353887414603, -0.3981102940239578, -4.096232013619319], [-1.347332854059126, -1.4135097668891512, 0.6885384762250772, -0.49339519595130843, -4.038102702322704], [-1.333780402152973, -1.4251827748951174, 1.063547258677595, 0.22505981975415482, -3.7572155761665984], [-1.3393725819232758, -1.5726288681496698, 1.132784622634903, -0.1526190963481836, -4.198452086456905], [-1.4689836424889229, -1.4898266763603505, 1.0145952890074985, -0.1295439412121856, -3.9929750614620274], [-1.4679950742607233, -1.4735588148649672, 1.308935090316801, -0.2835993454144061, -4.173796953702862], [-1.7302561962029201, -1.6949466839124803, 0.885046097471742, -0.11809454890170021, -4.138947624313979], [-1.340666572010154, -1.449472357504473, 0.9666671216083315, -0.21579905136072786, -4.0684056219649065], [-1.5330374721774065, -1.5560208420995654, 1.05214689934237, -0.19535396347393597, -4.078458419576845], [-1.7089145141199942, -1.6776403140783076, 1.006807980811774, -0.2525448512056587, -4.55156727838625], [-1.6997077265414007, -1.722708036105069, 1.0654011621237278, -0.19541568950658061, -4.28204122139931], [-1.5906491248174968, -1.6662320880444283, 0.8302602150973368, 0.07105168147482102, -4.375955915472318], [-1.0357720425456234, -1.2832793768872317, 1.3742493496372763, 0.17341768466530683, -3.7521443001155843], [-1.135045551235986, -1.4347008962176102, 0.8656272838499306, -0.24325533172172578, -3.969682237807409], [-1.3424147121850716, -1.6627851435874776, 1.5284137770170372, -0.4386828865767299, -3.804767438777413], [-1.441781682339354, -1.6568573194346607, 1.2233203763629605, 0.07732858461527022, -3.900074501276655], [-1.4808245946518706, -1.584528636236371, 2.2801464592622986, 0.4306991491097726, -4.198537850431021], [-1.5577600133475924, -1.496458648940686, 1.2451881514030059, -0.1403247304958961, -3.6167033930958317], [-1.5328203270761305, -1.7075388097023567, 1.480551488305278, -0.07377141151102068, -3.6676065766972616], [-1.101335171789302, -1.5484792999796488, 1.476624130239726, -0.16580590898806666, -4.012597100125188], [-1.6319501444561488, -1.6377733757620683, 0.6913985536855548, 0.15476400045022876, -4.178281797636349], [-1.6712473306905318, -1.6110796123310602, 0.7828755958821676, 0.0626101588769023, -4.299736774308342], [-1.003846716718201, -1.1763687088987398, 1.6378863213360793, -0.06775147205711976, -3.969045444947413], [-1.1203453869918372, -1.3443472881595955, 1.0871627163813624, 0.3950416891047029, -3.7461245849766516], [-1.1126835981408632, -1.4373799517267354, 1.4483707513380806, -0.27558011779636177, -3.8613326117057456], [-1.478950282634669, -1.606285294097518, 1.3359641510405242, -0.1763926998553412, -3.6236839345252347], [-1.4832238292818636, -1.6555968445293219, 1.301321988899858, -0.31578775335885856, -3.69744792041525], [-1.1431616669943014, -1.7515834233820085, 1.335259574510806, -0.3025137710936652, -3.953571147292048], [-1.2752767007483088, -1.584274549399846, 1.2953350256792788, -0.24156098915751842, -3.805802881762109], [-1.5545764559244466, -1.4809315243547987, 1.8746187281794198, 0.4661871962914456, -4.314823393082402], [-1.3081956552498368, -1.6828960408251945, 1.9265495801971222, 0.23560536267806892, -3.8599843113057672], [-1.115908329274219, -1.1390142340649683, 1.5390792916921736, 0.37021337521165637, -4.023550724055555], [-1.794480210355683, -1.9110977880380176, 1.990750476835623, 0.2983616821282471, -4.167036811201442], [-1.3307624776858964, -1.4377169201535027, 1.8021723691146148, -0.016370016337723434, -4.166400226307254], [-1.276027341761364, -1.7360110520093803, 2.2102622788771424, 0.7518621215580839, -3.7774699454419016], [-1.6868859628663149, -1.7290877337534631, 0.9804507772272095, -0.016174817765074588, -4.088231645524995], [-1.6384096497746727, -1.5717039455170425, 1.1395408221101366, 0.29107686199301025, -4.506086155730729], [-1.40049772393428, -1.5440028178296037, 1.475813082784329, 0.18668301103117946, -4.044804989477719], [-1.6500999841867492, -1.5381034170668673, 1.5761626640616202, -0.059238998227611445, -3.9204930891290073], [-1.1633201997867284, -1.6006635098944946, 1.4294045861703248, -0.17409769821759133, -4.109420498743689], [-1.79576020935939, -1.4930454034126122, 1.8397063183162206, 0.12385385692045865, -3.923898600628816], [-1.1536476519776278, -1.5316880946367661, 1.0363653004174, 0.07663254679242416, -3.5773700615242134], [-1.2735092608288017, -1.4918112468001372, 0.9424730178951694, 0.1573001316483616, -3.493064370094167], [-1.1918813736173752, -1.5550667216906715, 0.9921303821853092, -0.2915864801658163, -4.311457767535388], [-1.3918023610492136, -1.318949632525826, 1.4432637482901132, 0.14548402001519173, -3.6513611539555817], [-0.8696827460136348, -1.5300127015490166, 1.0173488431339794, 0.08227600723655804, -3.971658221271405], [-1.6111230921948012, -1.7045039040964975, 2.0911374451897, 0.32721112237596695, -4.4516445157684785], [-1.3326125148193446, -1.1415615108300114, 1.6736182418975867, -0.15576842203891034, -3.944420219146919], [-1.5672106978091582, -1.8494456828548906, 1.6993033200192165, 0.8693877219150097, -4.1030392373931655], [-1.4555355406162533, -1.3643190215615997, 1.7916661158702651, 0.734958868451337, -4.090452882139221], [-1.445618961566582, -1.6697302915050765, 1.6284263621925505, 0.5358850002548136, -4.405956979446652], [-1.9863872482511484, -1.5202349932537809, 1.4319902236087645, 0.3131448677352474, -4.255172138801487], [-1.4751096716212275, -1.755946427498954, 2.2860381045175298, 1.423658199672291, -4.372584634332659], [-1.2754374217300852, -1.6811979020129169, 2.3139631342027287, 0.42116484318227626, -3.8777952254508303], [-1.696193949655021, -1.6938124198084294, 2.0629694549320066, 0.013917196954812855, -4.026829457288484], [-1.1934401268343484, -1.568098124259126, 1.401695496826411, 0.3950646057179836, -4.074460816885058], [-1.4198933195430126, -1.498015069927107, 1.3519537117580405, 0.36688418613193474, -3.902606090933739], [-1.650475460351459, -1.7288720472970605, 1.340352307383253, 0.381889397049519, -4.00613588386938], [-1.2229653954067616, -1.379364446461488, 2.4900449076950637, 0.277856289836794, -4.0922967581563165], [-1.3474646915858657, -1.7947678102979954, 1.8920615458383592, 0.6033057534575176, -3.713794453160385], [-1.5555260711091026, -1.6819867520862, 1.7760462632859213, 0.798312257951735, -3.89502319583172], [-1.2528840017197924, -1.7078319209429957, 1.8130045084311683, 0.9569653807229365, -3.8760950470956437], [-1.1985316093216098, -1.2930897493111069, 1.6146946966743534, 0.05781170441444408, -3.919046091696649], [-1.4108648744338257, -1.9701761573732675, 1.2615058091183529, 0.28531680928576136, -3.6966839699415934], [-1.5131827659908135, -1.7008630405944412, 0.887952097971568, 0.35466048384994125, -4.063582059106502], [-1.4263023344494263, -1.6687816648314198, 1.3806763489785643, 0.6020451524624257, -4.0736697216297], [-1.1779437939959478, -1.441268985660695, 1.5998770530361497, 0.5965253255713899, -3.6008792497941546], [-1.6481855102884309, -1.5365863883610222, 1.7883941663811518, 0.13999872626747117, -4.277636455751945], [-1.3658261449474454, -1.5344586142044772, 1.7837341443182941, 0.3104364121681604, -4.27782838615638], [-1.6356157360901098, -1.7065888313319475, 1.8381428740301338, 0.29912656262007953, -4.185045803626977], [-1.2339216783944211, -1.3907323977833679, 1.8616750551273973, 0.6084523696409567, -4.184714581515702], [-1.3750584492210585, -1.5931581787393458, 1.9373934961128276, 0.47630326946189117, -3.9998224073648387], [-1.5084137628150012, -1.5523452998859804, 1.915464007830654, 0.5148320143931916, -4.1201117465771375], [-1.6093732578752913, -1.5170084915043007, 2.192258489164974, 0.44773922023625107, -4.084800348236675], [-1.7352899087352798, -1.567015739443349, 2.3118554550733785, 0.3978190342444018, -3.962130724034276], [-0.9997003063269955, -1.357196053934471, 1.6460667165105414, 0.20947806737595917, -4.037668003452716], [-1.1833816960664005, -1.2376008498381406, 1.490269499706444, 0.30949197565926717, -4.015793713040266], [-1.2890875415684238, -1.4076969182897514, 2.2795891073001173, 0.3560977406851483, -4.229648819206286], [-1.476680210202235, -1.458485558134783, 2.338405693263798, 0.3209551269227354, -4.165683448785875], [-1.413880095599095, -1.5563468549677568, 0.6943516516660011, 0.46805474142318115, -3.9787265498750277], [-1.1747413156697641, -1.3870664960479766, 0.8792046235482509, 0.294510774051971, -3.9728521619511765], [-1.8443641066631864, -1.7021454169972858, 1.1411668688532848, 0.20204075600139787, -4.1541888379437815], [-1.2398942978484544, -1.3000221566659447, 2.0626150110863644, 0.3007884097330168, -3.8859490633045115], [-1.080039992315349, -1.3286671676598778, 2.3159199707469353, 0.22634480418499295, -3.7396174849317707], [-1.4722799575361372, -1.5985434074126277, 2.0499085995212956, 0.6688200752629883, -4.03010789162399], [-1.2406226657364456, -1.8178070685876961, 2.003892876651001, 0.7233704821828331, -3.795976785832114], [-1.142802483807793, -1.5454775004884294, 1.864965295154675, 0.6638585128128494, -3.873892238825068], [-1.695226031711624, -1.5652657045399148, 2.141715659786857, 0.27276607532251823, -3.9369356447420447], [-1.3711237461014076, -1.3855270253230496, 1.7565769222690204, 0.6508313565616012, -3.8857938470132822], [-1.2459553083644404, -1.7779914517859963, 1.7891867585186545, -0.002824672849054549, -3.990383165481518], [-1.4643742509496633, -1.7480700650277925, 1.757503849227681, 0.39936050192450134, -4.346657890860388], [-1.4273856352517338, -1.6020001176803038, 1.5474764727069408, -0.24120506067773556, -3.952742592715182], [-1.4445000443712634, -1.437804500320933, 1.265861158673246, -0.19200337431698758, -4.124185075246947], [-1.3911448399226614, -1.6244596470979205, 1.2832225531447583, -0.12544549993901297, -4.267038193664443], [-1.1642409118610955, -1.7131483943206502, 1.7206194670071784, 0.14751307667690589, -3.917307270518046], [-1.4365256848551233, -1.5492341514240946, 1.3949721552179726, -0.008869063702575869, -3.7528153162590776], [-1.5297481795429908, -1.6128806773909223, 1.4711225579504672, 0.2010766531295871, -3.9253022715437282], [-1.2593755793129657, -1.5620790840389973, 1.4268168437750723, 0.0012308947209775378, -3.9130798903683193], [-1.1380933896849266, -1.1190268882528285, 1.6099943937652337, -0.46095315478950166, -3.9852723849697558], [-1.2371667510053599, -1.3385838528165286, 1.51284862741584, -0.22038932885858048, -4.248047431243513], [-1.7258354662636164, -1.8801552282926492, 2.121229368829112, 0.8058637189943705, -4.056855157040587], [-1.2079281300027933, -1.6838965466700644, 0.9356305962960029, -0.3391924013612822, -3.7981962087327648], [-1.3028276203625901, -1.637870339415664, 0.9593087954930837, -0.4698377068947749, -4.03604702238841], [-1.450887235127756, -1.4960585790336067, 1.8169287605559872, 0.4311578569970373, -4.097047524381725], [-1.4297808821764775, -1.6709206478476781, 2.0589959807893, 1.2906724821528672, -4.117220228975075], [-1.500469218036164, -1.5227437640436998, 1.9410962071548685, 1.4870811175680292, -4.0873072492139695], [-1.2950826233691997, -1.7127846179327981, 1.9761075446421972, 1.4415742154462214, -4.067279026004388], [-1.3938609259213406, -1.8550850431513382, 2.689363104547387, 0.9271204973794771, -3.8211217404014635], [-1.3781087865607284, -1.372259616899266, 1.4907012841616145, 0.15447538186064017, -4.369819021384385], [-1.386035813316503, -1.6102095220816293, 1.6716776786305414, 0.3694406935108329, -3.410655352189468], [-1.3219883991443897, -1.439574885748221, 1.499039795781999, -0.2419562746845472, -4.326087715913752], [-1.477470221692305, -1.8672874730208096, 1.3004110290972422, 0.46213753830390136, -3.535575928128186], [-0.9497679946429641, -1.338838904054523, 1.8199236235165386, 0.7095854369031821, -3.940515060911881], [-1.3205446660498394, -1.46485381484533, 2.4397555157583106, 0.20438461469599642, -3.9495233960756773], [-1.098709186411462, -1.2497388358023371, 2.0583410205534807, 0.5188292899420527, -4.040243286391587], [-1.0926235518793288, -1.5755782978528798, 2.0853967792280392, 0.43892072540825655, -3.9675980760493563], [-1.3830286682815816, -1.6948417517735843, 2.1039242488811847, 0.4755161884311711, -4.051034908586725], [-1.3292092294663196, -1.4921783858220274, 1.4827574739404623, 1.0014642185134413, -4.137241025557484], [-1.416824230373948, -1.7991966336606533, 2.3982088531156895, 0.4102898305737287, -3.9129659504058125], [-1.8115780152940122, -1.7556217231316278, 2.0791006907590455, 0.5151646881128442, -3.930620681394457], [-1.4759573517354336, -1.3396568749135338, 1.70331236309835, 0.03720717910129029, -4.247876114907723], [-1.759979446263452, -1.6068121020068047, 1.283025668709817, -0.25928657445388437, -3.811261128627415], [-1.2006850826754083, -1.5676697709151548, 1.3544381536868881, -0.16624458553536708, -4.1403213400743155], [-1.3055609081845236, -1.4189892690105055, 0.9463030546550554, 0.14552697701294282, -3.7897232422477387], [-1.306906964311652, -1.6342703262780067, 1.5517218169970224, 0.4095212916652639, -4.106484150076529], [-1.393946473946364, -1.7870238666664497, 2.029798043382763, 0.21077605620291268, -4.048470630348037], [-1.7007577140410506, -1.4539239819399041, 1.7052514607753189, 0.23466729700393318, -4.303841438645774], [-1.30113058673515, -1.6430603503001924, 1.2556409849483752, -0.3008321145292818, -3.5670318699645747], [-0.9076335950220549, -0.8943920774179459, 1.1860317743822455, -0.31258536221224276, -4.204681241542906], [-1.1614988096809815, -0.8641557872182423, 1.1724929237904456, 0.0979871152699226, -4.2303226587391185], [-1.2241981606307248, -1.4541532431597257, 1.7345369602880178, 0.41863879099849155, -3.9593541345736], [-1.4641645214636296, -1.5704759006330398, 2.054619726603501, 0.622219828139863, -4.001062035251599]], NamedTuple[(n_steps = 1, is_accept = true, acceptance_rate = 4.4220523147024284e-163, log_density = -12.366714054454809, hamiltonian_energy = 15.33225651044439, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 373.83476624511184, tree_depth = 1, numerical_error = false, step_size = 0.4, nom_step_size = 0.4, is_adapt = true), (n_steps = 1, is_accept = true, acceptance_rate = 0.0, log_density = -12.366714054454809, hamiltonian_energy = 14.443929434413679, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 2.574688443650368e10, tree_depth = 0, numerical_error = true, step_size = 0.9340259163636535, nom_step_size = 0.9340259163636535, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = -3.713947703827616, hamiltonian_energy = 12.57795721119137, hamiltonian_energy_error = -0.30661786103461, max_hamiltonian_energy_error = -0.7957285816306285, tree_depth = 2, numerical_error = false, step_size = 0.09209433883419865, nom_step_size = 0.09209433883419865, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9651166129870182, log_density = 8.656427739023933, hamiltonian_energy = 5.366367432417865, hamiltonian_energy_error = -0.5632983877394064, max_hamiltonian_energy_error = -1.3837456570624882, tree_depth = 3, numerical_error = false, step_size = 0.09591656221537206, nom_step_size = 0.09591656221537206, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.8034567615840468, log_density = 9.087695677646835, hamiltonian_energy = -4.062008328221674, hamiltonian_energy_error = 0.24088233820426286, max_hamiltonian_energy_error = 0.6682514943038016, tree_depth = 3, numerical_error = false, step_size = 0.1174263573915796, nom_step_size = 0.1174263573915796, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.711511084901035, hamiltonian_energy = -8.590965577459816, hamiltonian_energy_error = -0.0788046516343961, max_hamiltonian_energy_error = -0.2859712709316877, tree_depth = 3, numerical_error = false, step_size = 0.10176281697564447, nom_step_size = 0.10176281697564447, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.5452626563762706, log_density = 10.498729913719673, hamiltonian_energy = -8.395847857820396, hamiltonian_energy_error = 0.37780673344349225, max_hamiltonian_energy_error = 1.0516394911639093, tree_depth = 2, numerical_error = false, step_size = 0.1700280572067603, nom_step_size = 0.1700280572067603, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9972622222860341, log_density = 12.277225584177335, hamiltonian_energy = -9.966728418848742, hamiltonian_energy_error = -0.025855993802668564, max_hamiltonian_energy_error = -0.14443222438938186, tree_depth = 3, numerical_error = false, step_size = 0.07301560320543679, nom_step_size = 0.07301560320543679, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.7446315549757188, log_density = 12.362392987515447, hamiltonian_energy = -9.277161751493612, hamiltonian_energy_error = -0.043888567487602614, max_hamiltonian_energy_error = 0.8988526315716321, tree_depth = 2, numerical_error = false, step_size = 0.1305768052065511, nom_step_size = 0.1305768052065511, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9362179111945392, log_density = 11.337347715387724, hamiltonian_energy = -9.159222156861452, hamiltonian_energy_error = 0.03392105870632811, max_hamiltonian_energy_error = 0.26611884041654754, tree_depth = 3, numerical_error = false, step_size = 0.10783096088023843, nom_step_size = 0.10783096088023843, is_adapt = true), (n_steps = 11, is_accept = true, acceptance_rate = 0.9786114940786642, log_density = 12.976088720289356, hamiltonian_energy = -10.693054237493744, hamiltonian_energy_error = -0.2273984761403458, max_hamiltonian_energy_error = -0.35609617032366003, tree_depth = 3, numerical_error = false, step_size = 0.16505989910311028, nom_step_size = 0.16505989910311028, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.004816759046441444, log_density = 12.976088720289356, hamiltonian_energy = -12.16644383649124, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 156.0328910772413, tree_depth = 2, numerical_error = false, step_size = 0.29122701775537624, nom_step_size = 0.29122701775537624, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9989405982212488, log_density = 12.249977835629812, hamiltonian_energy = -11.35342777786212, hamiltonian_energy_error = 0.0017638590295874224, max_hamiltonian_energy_error = 0.002704264981190363, tree_depth = 5, numerical_error = false, step_size = 0.023994168123392893, nom_step_size = 0.023994168123392893, is_adapt = true), (n_steps = 31, is_accept = true, acceptance_rate = 0.9925299128063676, log_density = 12.371030148303237, hamiltonian_energy = -9.42723326884741, hamiltonian_energy_error = 0.009250211468948777, max_hamiltonian_energy_error = 0.02501895843200863, tree_depth = 4, numerical_error = false, step_size = 0.04579425244429494, nom_step_size = 0.04579425244429494, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.9970315369102092, log_density = 12.112760455775316, hamiltonian_energy = -11.65960610708386, hamiltonian_energy_error = -0.008808839642817645, max_hamiltonian_energy_error = -0.10500454830780726, tree_depth = 3, numerical_error = false, step_size = 0.08554289992189498, nom_step_size = 0.08554289992189498, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.8814570672021499, log_density = 10.071634619680204, hamiltonian_energy = -6.9334508303698845, hamiltonian_energy_error = 0.04384540520075042, max_hamiltonian_energy_error = 0.4246224100369398, tree_depth = 3, numerical_error = false, step_size = 0.16137697747509971, nom_step_size = 0.16137697747509971, is_adapt = true), (n_steps = 3, is_accept = true, acceptance_rate = 0.4259422038437382, log_density = 11.386382741220967, hamiltonian_energy = -7.703793457505602, hamiltonian_energy_error = -0.1083982619656112, max_hamiltonian_energy_error = 2.707695028207385, tree_depth = 2, numerical_error = false, step_size = 0.2120069676957122, nom_step_size = 0.2120069676957122, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 0.9992670885284825, log_density = 11.81521489832239, hamiltonian_energy = -10.729019495318305, hamiltonian_energy_error = 0.008848076498171764, max_hamiltonian_energy_error = -0.052496199891516326, tree_depth = 4, numerical_error = false, step_size = 0.06912580488079391, nom_step_size = 0.06912580488079391, is_adapt = true), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 12.022275573195639, hamiltonian_energy = -10.774863211833356, hamiltonian_energy_error = -0.05654388628339113, max_hamiltonian_energy_error = -0.19649101322097984, tree_depth = 3, numerical_error = false, step_size = 0.13048812607873406, nom_step_size = 0.13048812607873406, is_adapt = true), (n_steps = 11, is_accept = true, acceptance_rate = 0.01060841832810979, log_density = 12.022275573195639, hamiltonian_energy = -7.637755410266225, hamiltonian_energy_error = 0.0, max_hamiltonian_energy_error = 270.376945750073, tree_depth = 3, numerical_error = false, step_size = 0.24468667705352967, nom_step_size = 0.24468667705352967, is_adapt = true), (n_steps = 7, is_accept = true, acceptance_rate = 0.922962235350272, log_density = 13.130806410999952, hamiltonian_energy = -9.345072295595244, hamiltonian_energy_error = -0.10828454822572908, max_hamiltonian_energy_error = 0.183472336732299, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8453217182777616, log_density = 11.679693355160904, hamiltonian_energy = -10.848982827211632, hamiltonian_energy_error = 0.27463429710145704, max_hamiltonian_energy_error = 0.308896999987029, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9706079946986199, log_density = 13.310250780782386, hamiltonian_energy = -9.606536199088229, hamiltonian_energy_error = -0.22113861966855453, max_hamiltonian_energy_error = -0.22113861966855453, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9827075126923376, log_density = 12.770971428569226, hamiltonian_energy = -11.600430709971851, hamiltonian_energy_error = 0.015680643924792292, max_hamiltonian_energy_error = 0.04801890986075641, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8571308935100751, log_density = 12.432339824189246, hamiltonian_energy = -10.918314645671495, hamiltonian_energy_error = 0.06416720473851534, max_hamiltonian_energy_error = 0.24322375539614427, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9695234756980281, log_density = 12.457645921598438, hamiltonian_energy = -11.3410781703125, hamiltonian_energy_error = -0.016647666290365848, max_hamiltonian_energy_error = 0.11953567528262532, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9995811892725922, log_density = 12.381842848053928, hamiltonian_energy = -11.578668630214498, hamiltonian_energy_error = -0.04667458918771494, max_hamiltonian_energy_error = -0.09695418624011154, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8329330405397403, log_density = 10.648122339590643, hamiltonian_energy = -7.309126597045919, hamiltonian_energy_error = 0.1079765540954627, max_hamiltonian_energy_error = 0.3270234613167684, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9567597355529136, log_density = 10.58416027934071, hamiltonian_energy = -7.087464091088579, hamiltonian_energy_error = 0.003319789828394093, max_hamiltonian_energy_error = 0.09280569252483328, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9927092728071117, log_density = 11.315444663527032, hamiltonian_energy = -8.655830270697102, hamiltonian_energy_error = 0.019445664459629697, max_hamiltonian_energy_error = -0.07539141436647157, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9903044570065582, log_density = 11.180182314070148, hamiltonian_energy = -10.366301701541378, hamiltonian_energy_error = 0.04948059603458255, max_hamiltonian_energy_error = -0.08980003036489315, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.806850257388284, log_density = 10.1169495802536, hamiltonian_energy = -7.560535545936701, hamiltonian_energy_error = 0.16298029775233758, max_hamiltonian_energy_error = 0.42010587029909097, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9487158306679956, log_density = 8.029433259935264, hamiltonian_energy = -6.734215671781133, hamiltonian_energy_error = 0.13027164964704774, max_hamiltonian_energy_error = 0.13027164964704774, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9850521987078321, log_density = 9.337780776911021, hamiltonian_energy = -4.641082402776244, hamiltonian_energy_error = -0.041678022048038166, max_hamiltonian_energy_error = -0.28285923564731785, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.023268395356597, hamiltonian_energy = -8.361034676149302, hamiltonian_energy_error = -0.12908765173921743, max_hamiltonian_energy_error = -0.2004962866323492, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8964223281738132, log_density = 10.707012145096, hamiltonian_energy = -9.841675709655084, hamiltonian_energy_error = 0.08052682511915599, max_hamiltonian_energy_error = 0.14688809213350318, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9985964812369159, log_density = 10.747560407392488, hamiltonian_energy = -8.109713486229099, hamiltonian_energy_error = -0.015096142154439107, max_hamiltonian_energy_error = -0.13612804038687543, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9796132558658045, log_density = 11.575641487394314, hamiltonian_energy = -8.452700566192881, hamiltonian_energy_error = -0.03988782680362135, max_hamiltonian_energy_error = -0.25379762413566453, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.873826332508032, log_density = 8.756175861675008, hamiltonian_energy = -8.492276496677983, hamiltonian_energy_error = 0.1766542326983398, max_hamiltonian_energy_error = 0.1766542326983398, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 11.617230190444214, hamiltonian_energy = -7.823795273344305, hamiltonian_energy_error = -0.16440214443619983, max_hamiltonian_energy_error = -0.23213672426014753, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9618248059768809, log_density = 11.572444525821687, hamiltonian_energy = -10.721819049881116, hamiltonian_energy_error = 0.05697355521500924, max_hamiltonian_energy_error = -0.14951802233261624, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9915484607065382, log_density = 11.602304612996186, hamiltonian_energy = -10.932094111673589, hamiltonian_energy_error = 0.021535987305833615, max_hamiltonian_energy_error = -0.20252664702139, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.8871685444408591, log_density = 11.054028275115101, hamiltonian_energy = -6.592041952264108, hamiltonian_energy_error = 0.033154657180435976, max_hamiltonian_energy_error = 0.29597579186765355, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9829475056045865, log_density = 12.168614084116449, hamiltonian_energy = -8.682386507089431, hamiltonian_energy_error = 0.020214156230737856, max_hamiltonian_energy_error = 0.08160717518636851, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9332540450944501, log_density = 10.546137735162356, hamiltonian_energy = -10.091657407119948, hamiltonian_energy_error = 0.16206841888931578, max_hamiltonian_energy_error = 0.16206841888931578, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9728944370864677, log_density = 10.861743857720228, hamiltonian_energy = -8.420061763651175, hamiltonian_energy_error = -0.15953381562102287, max_hamiltonian_energy_error = -0.22877168097397416, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9884053539061156, log_density = 11.675214280923063, hamiltonian_energy = -10.105314004805255, hamiltonian_energy_error = -0.004595339911270813, max_hamiltonian_energy_error = -0.08390424815486242, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9920200809313986, log_density = 12.958283827906426, hamiltonian_energy = -9.932183603520103, hamiltonian_energy_error = -0.09755662788260366, max_hamiltonian_energy_error = -0.11605564054923967, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8588975479650806, log_density = 10.811288605232434, hamiltonian_energy = -9.356410649706346, hamiltonian_energy_error = 0.18264554951872114, max_hamiltonian_energy_error = 0.24424817777782692, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.939530039845652, log_density = 10.558839457331125, hamiltonian_energy = -8.367126471971357, hamiltonian_energy_error = 0.03483935460585563, max_hamiltonian_energy_error = 0.30668621818225894, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9985468501764587, log_density = 11.980805116530867, hamiltonian_energy = -8.589768588599146, hamiltonian_energy_error = -0.12162971759014596, max_hamiltonian_energy_error = -0.22865764630275542, tree_depth = 5, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.996237287008699, log_density = 11.325866715123158, hamiltonian_energy = -9.701165835285835, hamiltonian_energy_error = -0.01906818978016922, max_hamiltonian_energy_error = -0.13611233813157142, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.074401123850679, hamiltonian_energy = -10.893346355200428, hamiltonian_energy_error = -0.06603700307006477, max_hamiltonian_energy_error = -0.07255537189600325, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9351647476574189, log_density = 12.16615712375157, hamiltonian_energy = -9.720386194774981, hamiltonian_energy_error = -0.032206187693978094, max_hamiltonian_energy_error = 0.11966069480801877, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9533167503395854, log_density = 13.416151908049823, hamiltonian_energy = -10.043929307543939, hamiltonian_energy_error = -0.0548428624908901, max_hamiltonian_energy_error = 0.09207195371562271, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.933845969602324, log_density = 12.203475610262677, hamiltonian_energy = -11.03096310087035, hamiltonian_energy_error = 0.10954508291036724, max_hamiltonian_energy_error = 0.12996320852640686, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8500334510904718, log_density = 8.355945748958511, hamiltonian_energy = -7.45016688828634, hamiltonian_energy_error = 0.25856697702799547, max_hamiltonian_energy_error = 0.25856697702799547, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9210056670540544, log_density = 11.423527545033902, hamiltonian_energy = -3.8238311238342604, hamiltonian_energy_error = -0.15281289018453137, max_hamiltonian_energy_error = 0.32215875211406786, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9091081128357613, log_density = 10.19229534445372, hamiltonian_energy = -6.293484573292391, hamiltonian_energy_error = 0.07181495078620426, max_hamiltonian_energy_error = 0.1765371060632699, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9682116611448031, log_density = 11.332616130081664, hamiltonian_energy = -8.127551605882736, hamiltonian_energy_error = 0.014991536027988417, max_hamiltonian_energy_error = -0.15740910493185822, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5341180810558626, log_density = 10.372826846630305, hamiltonian_energy = -4.229705423546609, hamiltonian_energy_error = 0.2837413455150868, max_hamiltonian_energy_error = 1.1376721133665364, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9971167147623914, log_density = 11.162405145900909, hamiltonian_energy = -9.162446348524293, hamiltonian_energy_error = -0.12178180209513378, max_hamiltonian_energy_error = -0.16784746644107784, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8573275175675287, log_density = 8.709387178947336, hamiltonian_energy = -7.298845226647077, hamiltonian_energy_error = 0.2810599802455771, max_hamiltonian_energy_error = 0.2810599802455771, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.981049210947628, log_density = 12.341282761271096, hamiltonian_energy = -7.312350926088941, hamiltonian_energy_error = -0.30556337792327337, max_hamiltonian_energy_error = -0.38488918109103576, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9215875036434434, log_density = 10.288337389584266, hamiltonian_energy = -8.972054831808162, hamiltonian_energy_error = 0.10286978017504467, max_hamiltonian_energy_error = 0.1627721802259341, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9962170721394744, log_density = 11.543062466740817, hamiltonian_energy = -7.998741424406801, hamiltonian_energy_error = -0.01626256104717072, max_hamiltonian_energy_error = -0.17101485367849367, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.949849975642163, log_density = 10.241655718914789, hamiltonian_energy = -9.310047832461741, hamiltonian_energy_error = 0.1225687876371655, max_hamiltonian_energy_error = -0.18294100151189063, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9836315258576417, log_density = 11.683880294886423, hamiltonian_energy = -8.592063450010778, hamiltonian_energy_error = -0.14429014165393994, max_hamiltonian_energy_error = -0.38098432488066614, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9460109970697894, log_density = 5.728621240791217, hamiltonian_energy = -4.477932424104916, hamiltonian_energy_error = 0.19864913780393767, max_hamiltonian_energy_error = -0.25748396897511494, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 9.28167034205738, hamiltonian_energy = -4.889417279082913, hamiltonian_energy_error = -0.36451288784571645, max_hamiltonian_energy_error = -0.4908494165304633, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.152449276025163, hamiltonian_energy = -8.41187145906417, hamiltonian_energy_error = -0.13269636882436942, max_hamiltonian_energy_error = -0.20512136435692518, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.987493253402639, log_density = 12.980571387759678, hamiltonian_energy = -11.914884321178974, hamiltonian_energy_error = -0.0411021356923893, max_hamiltonian_energy_error = -0.0411021356923893, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9542403131939483, log_density = 12.424857220437616, hamiltonian_energy = -11.266623632363965, hamiltonian_energy_error = 0.03505796228462543, max_hamiltonian_energy_error = 0.0868484585096656, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8172419824808209, log_density = 9.421509806954743, hamiltonian_energy = -6.696903250112985, hamiltonian_energy_error = 0.3086069130376208, max_hamiltonian_energy_error = 0.3798258474440104, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9775109944857876, log_density = 10.747546321003828, hamiltonian_energy = -7.359480174044142, hamiltonian_energy_error = -0.41461143397170463, max_hamiltonian_energy_error = -0.41461143397170463, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.8576463441982916, log_density = 11.561976602881815, hamiltonian_energy = -8.504491075110872, hamiltonian_energy_error = 0.060056922863891415, max_hamiltonian_energy_error = 0.2848472561622337, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9900108694313784, log_density = 11.532926302256762, hamiltonian_energy = -8.38644598091772, hamiltonian_energy_error = -0.014556471173692742, max_hamiltonian_energy_error = -0.1279280775908056, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9754587631663304, log_density = 10.286477598550528, hamiltonian_energy = -8.004783309094709, hamiltonian_energy_error = 0.05264930785770261, max_hamiltonian_energy_error = -0.19671335058004047, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9895293294872258, log_density = 12.137874190705652, hamiltonian_energy = -8.54726841670502, hamiltonian_energy_error = -0.08785606992223016, max_hamiltonian_energy_error = -0.2209370905100254, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9975837037965106, log_density = 12.213117803291674, hamiltonian_energy = -11.443364511016277, hamiltonian_energy_error = -0.007139248784358898, max_hamiltonian_energy_error = -0.04562033573541413, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9858295756549661, log_density = 12.489136055415273, hamiltonian_energy = -9.667560869766696, hamiltonian_energy_error = 0.019634861489794986, max_hamiltonian_energy_error = -0.06166678214999166, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9499878791144941, log_density = 11.777308372522189, hamiltonian_energy = -10.508448067363558, hamiltonian_energy_error = 0.05159322728553306, max_hamiltonian_energy_error = 0.1011529349718181, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9310774016132116, log_density = 10.6603417572432, hamiltonian_energy = -8.30832050719775, hamiltonian_energy_error = 0.01505960504048609, max_hamiltonian_energy_error = 0.1958328619765659, tree_depth = 5, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9997263394652981, log_density = 9.44587429004346, hamiltonian_energy = -8.67297554391465, hamiltonian_energy_error = -0.019945513368359258, max_hamiltonian_energy_error = -0.14781244191950726, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9958644215026305, log_density = 11.215266823823177, hamiltonian_energy = -8.85684157270758, hamiltonian_energy_error = -0.042685947336980945, max_hamiltonian_energy_error = -0.05887357976708074, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9925629423618678, log_density = 12.735969051007334, hamiltonian_energy = -10.218439035237889, hamiltonian_energy_error = -0.023908917903039395, max_hamiltonian_energy_error = -0.049585895992889206, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.862419057753001, log_density = 12.204112609742475, hamiltonian_energy = -9.647808322462062, hamiltonian_energy_error = 0.01754047998600683, max_hamiltonian_energy_error = 0.2776208449473483, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9986816305613168, log_density = 12.885661050759865, hamiltonian_energy = -11.577143339536834, hamiltonian_energy_error = -0.0312633948782306, max_hamiltonian_energy_error = -0.0330324790635359, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9806644841875258, log_density = 13.093683182910208, hamiltonian_energy = -11.883402422129112, hamiltonian_energy_error = -0.025219658723823812, max_hamiltonian_energy_error = 0.03896062744222206, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9355102055138705, log_density = 12.7910233063642, hamiltonian_energy = -7.6645418077236025, hamiltonian_energy_error = 0.04929562431461054, max_hamiltonian_energy_error = 0.1737148471769263, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9990659934847684, log_density = 12.20372479494687, hamiltonian_energy = -11.806026445202123, hamiltonian_energy_error = 0.004214152264175652, max_hamiltonian_energy_error = -0.02191347914879671, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.997239568454902, log_density = 12.827655482250785, hamiltonian_energy = -11.508313414950802, hamiltonian_energy_error = -0.018607041293202897, max_hamiltonian_energy_error = -0.019782425366695833, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.847480780950292, log_density = 10.353708056029737, hamiltonian_energy = -10.00107515710294, hamiltonian_energy_error = 0.19220913809498974, max_hamiltonian_energy_error = 0.20096801275825982, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 10.650567905569, hamiltonian_energy = -7.530197998268018, hamiltonian_energy_error = -0.1290967550848512, max_hamiltonian_energy_error = -0.1718769979774608, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 11.832645820119861, hamiltonian_energy = -10.384797749820617, hamiltonian_energy_error = -0.013877934722005492, max_hamiltonian_energy_error = -0.04027916097172657, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9988583982657002, log_density = 12.982640295956037, hamiltonian_energy = -11.29514933474668, hamiltonian_energy_error = -0.01292235173537648, max_hamiltonian_energy_error = -0.03832565254772469, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.970143143081455, log_density = 11.366205164743644, hamiltonian_energy = -10.81688602309128, hamiltonian_energy_error = 0.06541034350087571, max_hamiltonian_energy_error = 0.06541034350087571, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.054239106316203, hamiltonian_energy = -10.964498447556776, hamiltonian_energy_error = -0.039293690301787976, max_hamiltonian_energy_error = -0.10409707025958781, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8701254078528704, log_density = 10.266120494246184, hamiltonian_energy = -9.110358138050621, hamiltonian_energy_error = 0.26218906842454714, max_hamiltonian_energy_error = 0.26218906842454714, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9878729695925476, log_density = 11.549590192468287, hamiltonian_energy = -7.3318115411667035, hamiltonian_energy_error = -0.2992128745472762, max_hamiltonian_energy_error = -0.2992128745472762, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7378913460262458, log_density = 11.268208108199731, hamiltonian_energy = -7.021557047007184, hamiltonian_energy_error = 0.09137262362814269, max_hamiltonian_energy_error = 0.48363189804611206, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9164391934910999, log_density = 12.116324796129227, hamiltonian_energy = -8.928383112114709, hamiltonian_energy_error = -0.060052973504017615, max_hamiltonian_energy_error = 0.25671734958440595, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9856719999041277, log_density = 11.174559020686237, hamiltonian_energy = -10.7421872472528, hamiltonian_energy_error = 0.029882249937639216, max_hamiltonian_energy_error = 0.049920477676444364, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9981979342633555, log_density = 12.152710698738405, hamiltonian_energy = -10.214591322880405, hamiltonian_energy_error = -0.025335610633897332, max_hamiltonian_energy_error = -0.06728562139976368, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9385357332186378, log_density = 12.331684108396383, hamiltonian_energy = -9.118439138682104, hamiltonian_energy_error = -0.02236256064256814, max_hamiltonian_energy_error = 0.1265876780807087, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9619966238919788, log_density = 11.424441401546257, hamiltonian_energy = -10.04705980910587, hamiltonian_energy_error = 0.02548293432442783, max_hamiltonian_energy_error = 0.07151009882929316, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9209177794651827, log_density = 11.52522357717678, hamiltonian_energy = -8.464636277102722, hamiltonian_energy_error = 0.023431739224953674, max_hamiltonian_energy_error = 0.17736980447834405, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.870096917188559, log_density = 10.976781544596772, hamiltonian_energy = -8.436154768394168, hamiltonian_energy_error = 0.19777568374922438, max_hamiltonian_energy_error = 0.40065787456181035, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9999316661545078, log_density = 11.607011223183939, hamiltonian_energy = -10.574881963388147, hamiltonian_energy_error = -0.08556181043036304, max_hamiltonian_energy_error = -0.2774524802448539, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.7771311243247605, log_density = 7.951381539735085, hamiltonian_energy = -6.715755127695865, hamiltonian_energy_error = 0.4959927050533013, max_hamiltonian_energy_error = 0.4959927050533013, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.296386919679808, hamiltonian_energy = -5.752730711389165, hamiltonian_energy_error = -0.4842339797935802, max_hamiltonian_energy_error = -0.6945488793056036, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 10.426383324210985, hamiltonian_energy = -9.34024612634462, hamiltonian_energy_error = -0.08278244813331526, max_hamiltonian_energy_error = -0.2785058496431443, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6972434235962505, log_density = 3.4153575691350895, hamiltonian_energy = 1.9291384607352775, hamiltonian_energy_error = 0.4862703022056465, max_hamiltonian_energy_error = 0.5201329525324065, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9884453865529994, log_density = 11.340845545512632, hamiltonian_energy = -0.9559719460173053, hamiltonian_energy_error = -0.30257413045243986, max_hamiltonian_energy_error = -0.43493751718978224, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.987641710510745, log_density = 11.78680478013346, hamiltonian_energy = -9.518848982954102, hamiltonian_energy_error = -0.06685082151794752, max_hamiltonian_energy_error = -0.12460694802126504, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9718378137782678, log_density = 12.250559002434436, hamiltonian_energy = -9.0739293558009, hamiltonian_energy_error = -0.08401889053950029, max_hamiltonian_energy_error = 0.10501625648979918, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8680955661369163, log_density = 12.414331792390556, hamiltonian_energy = -9.656849060455041, hamiltonian_energy_error = 0.13787927207285122, max_hamiltonian_energy_error = 0.2732060393851974, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8342382289585337, log_density = 9.493933777940569, hamiltonian_energy = -5.850026127327727, hamiltonian_energy_error = 0.2703957130045609, max_hamiltonian_energy_error = 0.5196275450749086, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9832089874327493, log_density = 8.01681990877578, hamiltonian_energy = -5.207256256811558, hamiltonian_energy_error = 0.12438684527526078, max_hamiltonian_energy_error = -0.5204385781829819, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9891273505023029, log_density = 5.3649834162072185, hamiltonian_energy = -2.397829990129998, hamiltonian_energy_error = 0.010083849479475937, max_hamiltonian_energy_error = -0.4352884255435434, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 8.48911418502857, hamiltonian_energy = -4.89585652182557, hamiltonian_energy_error = -0.2746172307678716, max_hamiltonian_energy_error = -0.4437472162443692, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9837136992761432, log_density = 10.926725574981203, hamiltonian_energy = -4.650078842943995, hamiltonian_energy_error = -0.26029657503653336, max_hamiltonian_energy_error = -0.26029657503653336, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9755663701290437, log_density = 12.609063110329155, hamiltonian_energy = -8.951276301675108, hamiltonian_energy_error = -0.02537193510326574, max_hamiltonian_energy_error = 0.1100531435051817, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9946280693745503, log_density = 12.193336343842878, hamiltonian_energy = -11.767364078347313, hamiltonian_energy_error = 0.024289873697467712, max_hamiltonian_energy_error = -0.09334083546871241, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9840485969877358, log_density = 9.881705909083234, hamiltonian_energy = -7.458753610828416, hamiltonian_energy_error = 0.0505300568302971, max_hamiltonian_energy_error = -0.15359775981422263, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.872930276048144, log_density = 9.636837410028905, hamiltonian_energy = -7.585083542700703, hamiltonian_energy_error = 0.07588975674561826, max_hamiltonian_energy_error = 0.3683536745787199, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9549849245311418, log_density = 9.448933814294927, hamiltonian_energy = -6.359407508831637, hamiltonian_energy_error = 0.10765914258657361, max_hamiltonian_energy_error = -0.21328151443627696, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9566753644766844, log_density = 9.011786601399171, hamiltonian_energy = -8.124496055048425, hamiltonian_energy_error = 0.0815901582070655, max_hamiltonian_energy_error = -0.34181116513428655, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9158132400415775, log_density = 10.880220174003659, hamiltonian_energy = -6.540298014119122, hamiltonian_energy_error = -0.18974023504584014, max_hamiltonian_energy_error = -0.37828110531861103, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9454446043261039, log_density = 11.688179981530254, hamiltonian_energy = -9.022174303431935, hamiltonian_energy_error = -0.06194207462831436, max_hamiltonian_energy_error = -0.19357639512033664, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9422412475114529, log_density = 11.223620775877212, hamiltonian_energy = -7.010328532112261, hamiltonian_energy_error = 0.06177638598901236, max_hamiltonian_energy_error = 0.15438704649772816, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9925338159596467, log_density = 10.030140282485526, hamiltonian_energy = -8.778183207245558, hamiltonian_energy_error = -0.01013985362901515, max_hamiltonian_energy_error = -0.07064092552395351, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9981498583086258, log_density = 9.616856501060855, hamiltonian_energy = -8.924594465933989, hamiltonian_energy_error = -0.01356972777294807, max_hamiltonian_energy_error = -0.033282960530684136, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.993076632806186, log_density = 10.566164871923718, hamiltonian_energy = -7.906317154007307, hamiltonian_energy_error = -0.0056657438063343335, max_hamiltonian_energy_error = -0.08786609171105386, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9942939393629845, log_density = 11.786085946701133, hamiltonian_energy = -9.92398652280772, hamiltonian_energy_error = -0.024265068602693063, max_hamiltonian_energy_error = -0.03306586892893293, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9814952817378726, log_density = 11.760680499956532, hamiltonian_energy = -10.437406772780793, hamiltonian_energy_error = 0.002194175822669564, max_hamiltonian_energy_error = 0.06110755054438144, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8938541382436449, log_density = 10.743210740370293, hamiltonian_energy = -7.662562325265651, hamiltonian_energy_error = 0.09033837522583532, max_hamiltonian_energy_error = 0.1629066075150183, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9570166769311594, log_density = 11.431378903483077, hamiltonian_energy = -8.051729993440539, hamiltonian_energy_error = -0.027560661899583394, max_hamiltonian_energy_error = -0.24347339956993075, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9609107278950315, log_density = 10.445951509350405, hamiltonian_energy = -7.445451822013265, hamiltonian_energy_error = -0.1325273859624705, max_hamiltonian_energy_error = -0.2881408049101468, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8751835598557826, log_density = 11.777896830731825, hamiltonian_energy = -8.197798320280341, hamiltonian_energy_error = 0.1740891259272619, max_hamiltonian_energy_error = 0.2687585965344379, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9795929458251693, log_density = 11.525622189956279, hamiltonian_energy = -9.708074132415252, hamiltonian_energy_error = -0.10114235983177267, max_hamiltonian_energy_error = -0.22271120194398897, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8791378511220563, log_density = 8.150858885600268, hamiltonian_energy = -5.156401020163637, hamiltonian_energy_error = 0.20167521440923153, max_hamiltonian_energy_error = 0.37623058003057075, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9928270552274817, log_density = 11.685364328012074, hamiltonian_energy = -6.622831656628607, hamiltonian_energy_error = -0.1614577429893096, max_hamiltonian_energy_error = -0.20353693020909702, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9841235798512796, log_density = 12.683118125053264, hamiltonian_energy = -10.492093207892852, hamiltonian_energy_error = -0.019560288120565872, max_hamiltonian_energy_error = -0.0984317706783262, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9445733390840189, log_density = 11.565396449710478, hamiltonian_energy = -10.908590128038998, hamiltonian_energy_error = 0.04356612880860311, max_hamiltonian_energy_error = 0.1366216490975507, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9961086791349365, log_density = 12.69371824446724, hamiltonian_energy = -10.505859025807158, hamiltonian_energy_error = -0.09405431535950548, max_hamiltonian_energy_error = -0.09405431535950548, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9388991262307593, log_density = 11.582499314091187, hamiltonian_energy = -10.380075745227277, hamiltonian_energy_error = 0.0691560955112216, max_hamiltonian_energy_error = 0.08217663904996186, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9273633446927388, log_density = 12.987418517691786, hamiltonian_energy = -7.899635920951151, hamiltonian_energy_error = 0.02116454148351732, max_hamiltonian_energy_error = 0.1625557346138029, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9862286043550252, log_density = 12.20775149843675, hamiltonian_energy = -10.901222395382874, hamiltonian_energy_error = -0.02910566411056159, max_hamiltonian_energy_error = -0.0849117586849868, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.982597502838998, log_density = 12.046296726743007, hamiltonian_energy = -10.642469805472905, hamiltonian_energy_error = 0.021615497130030192, max_hamiltonian_energy_error = 0.0478683005938656, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.956636221629732, log_density = 8.112753197080757, hamiltonian_energy = -7.370162274321351, hamiltonian_energy_error = 0.06292396480650897, max_hamiltonian_energy_error = 0.0765618466569693, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9712864888670867, log_density = 10.515627625007792, hamiltonian_energy = -5.946292407861931, hamiltonian_energy_error = 0.015745529879236386, max_hamiltonian_energy_error = -0.10146661773748278, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9960629644785736, log_density = 12.654638352354032, hamiltonian_energy = -9.485106733085413, hamiltonian_energy_error = -0.08745210626937094, max_hamiltonian_energy_error = -0.08745210626937094, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9822387241561934, log_density = 11.932405802195717, hamiltonian_energy = -11.251577706906893, hamiltonian_energy_error = 0.04694295320351216, max_hamiltonian_energy_error = 0.04694295320351216, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9485473029518577, log_density = 10.963472047099996, hamiltonian_energy = -9.966631847341974, hamiltonian_energy_error = 0.03494774772245712, max_hamiltonian_energy_error = 0.13035426599630995, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8857826689822101, log_density = 10.361634275651873, hamiltonian_energy = -6.6743854481832905, hamiltonian_energy_error = 0.060441477971677315, max_hamiltonian_energy_error = 0.23345564543420405, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9260500903076265, log_density = 11.325193004613325, hamiltonian_energy = -5.476395117228666, hamiltonian_energy_error = 0.07778234597577338, max_hamiltonian_energy_error = 0.14483193170545405, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8132463921010374, log_density = 8.596831637567108, hamiltonian_energy = -5.9850939811176325, hamiltonian_energy_error = 0.35956118751963384, max_hamiltonian_energy_error = 0.6003155885696847, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.929400371770927, log_density = 10.09163925986215, hamiltonian_energy = -6.879368756335008, hamiltonian_energy_error = -0.04485216584152418, max_hamiltonian_energy_error = -0.5433277459519346, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9995326583324821, log_density = 10.922838542361013, hamiltonian_energy = -9.151961111168, hamiltonian_energy_error = -0.04991449107249224, max_hamiltonian_energy_error = -0.3593888220869257, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9687863556878732, log_density = 12.154364886963076, hamiltonian_energy = -9.318875746648125, hamiltonian_energy_error = -0.17710223516429835, max_hamiltonian_energy_error = -0.3340097190641558, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9791570875508763, log_density = 12.445860589504177, hamiltonian_energy = -9.617372769086977, hamiltonian_energy_error = -0.07095579837066524, max_hamiltonian_energy_error = 0.09981061979699568, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8617006406718171, log_density = 11.464195944118472, hamiltonian_energy = -8.645006835440652, hamiltonian_energy_error = 0.03614096180310433, max_hamiltonian_energy_error = 0.3319798133450895, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9990635419978827, log_density = 12.592670332629051, hamiltonian_energy = -10.245500441486518, hamiltonian_energy_error = -0.06720661251927851, max_hamiltonian_energy_error = -0.06720661251927851, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9079610147895658, log_density = 11.154004714416072, hamiltonian_energy = -10.905274518371614, hamiltonian_energy_error = 0.16601957960770264, max_hamiltonian_energy_error = 0.16601957960770264, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9899233283789949, log_density = 12.151357348026384, hamiltonian_energy = -9.525632752784002, hamiltonian_energy_error = -0.17660967508314407, max_hamiltonian_energy_error = -0.17660967508314407, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9978192738133769, log_density = 12.926491770314556, hamiltonian_energy = -11.769392555616157, hamiltonian_energy_error = -0.038903011449058056, max_hamiltonian_energy_error = -0.05753541663117012, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9645910705841845, log_density = 12.569507652167694, hamiltonian_energy = -11.730599406959028, hamiltonian_energy_error = 0.04884089221064514, max_hamiltonian_energy_error = 0.05969128528337819, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.967905424519274, log_density = 12.171505884001881, hamiltonian_energy = -11.637881046275298, hamiltonian_energy_error = 0.018004951285645276, max_hamiltonian_energy_error = -0.09032820684224774, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9962557899045025, log_density = 11.81342760681841, hamiltonian_energy = -11.069746663318739, hamiltonian_energy_error = -0.0002128653290540683, max_hamiltonian_energy_error = -0.09051255869665553, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8953292866284295, log_density = 11.947242303639651, hamiltonian_energy = -8.90515857441084, hamiltonian_energy_error = 0.049048787656680304, max_hamiltonian_energy_error = 0.1764812191323486, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9589052171088717, log_density = 10.578185390757293, hamiltonian_energy = -9.068668441164842, hamiltonian_energy_error = 0.054959157366653244, max_hamiltonian_energy_error = 0.07283386089501676, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 11.766382433796615, hamiltonian_energy = -10.202495136165277, hamiltonian_energy_error = -0.061122257301398975, max_hamiltonian_energy_error = -0.061122257301398975, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9811003662737516, log_density = 12.124897755222472, hamiltonian_energy = -10.09049150036776, hamiltonian_energy_error = 0.022112154034871878, max_hamiltonian_energy_error = 0.059185537492327356, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9392619330880946, log_density = 12.86387735836035, hamiltonian_energy = -11.433006521351476, hamiltonian_energy_error = -0.023068882990012085, max_hamiltonian_energy_error = 0.11226902242984416, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9642613604494799, log_density = 13.237091922228444, hamiltonian_energy = -11.255816727344296, hamiltonian_energy_error = -0.020755743648676273, max_hamiltonian_energy_error = 0.0762976733139471, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9070305138985638, log_density = 11.566582380747075, hamiltonian_energy = -11.160109170912996, hamiltonian_energy_error = 0.1149404886961527, max_hamiltonian_energy_error = 0.1383582274277071, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9643691462984578, log_density = 12.246233825472322, hamiltonian_energy = -9.341528397029016, hamiltonian_energy_error = 0.0058950218032087776, max_hamiltonian_energy_error = 0.11906070529224344, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.998766402801735, log_density = 12.262186214295467, hamiltonian_energy = -11.590620851582521, hamiltonian_energy_error = -0.0104507716473492, max_hamiltonian_energy_error = -0.04933587989541266, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.996118028800636, log_density = 11.90685928717972, hamiltonian_energy = -11.356855377476826, hamiltonian_energy_error = 0.01694429039970302, max_hamiltonian_energy_error = -0.0407694688374729, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9137337503275269, log_density = 11.23217389913633, hamiltonian_energy = -9.313480696156764, hamiltonian_energy_error = 0.11655609949393586, max_hamiltonian_energy_error = 0.22933221514607283, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9960094944139565, log_density = 11.265666726274397, hamiltonian_energy = -8.620095155619092, hamiltonian_energy_error = -0.12319821520638108, max_hamiltonian_energy_error = -0.16903713263708653, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8995682102691299, log_density = 12.76421143511053, hamiltonian_energy = -9.07340310079233, hamiltonian_energy_error = 0.01549523719429402, max_hamiltonian_energy_error = 0.1915525177640216, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9833331400838954, log_density = 11.884582843850843, hamiltonian_energy = -11.443772602598859, hamiltonian_energy_error = 0.037632735500130465, max_hamiltonian_energy_error = 0.037632735500130465, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9782793876573737, log_density = 10.452715197140776, hamiltonian_energy = -9.632451152564212, hamiltonian_energy_error = 0.05758773407159268, max_hamiltonian_energy_error = 0.05758773407159268, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9799325254213208, log_density = 11.898592909238598, hamiltonian_energy = -8.770705973063857, hamiltonian_energy_error = -0.03880723129387853, max_hamiltonian_energy_error = -0.2159192976623423, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9863537182517231, log_density = 11.082800789595781, hamiltonian_energy = -9.462102745070831, hamiltonian_energy_error = -0.03238888361630288, max_hamiltonian_energy_error = -0.10026126570240379, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.9338621442876613, log_density = 10.441205516890397, hamiltonian_energy = -8.735814782990563, hamiltonian_energy_error = 0.0234799380325299, max_hamiltonian_energy_error = 0.17564187025593725, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9654155685909502, log_density = 10.080532295999756, hamiltonian_energy = -8.883131909008316, hamiltonian_energy_error = 0.05583306547723055, max_hamiltonian_energy_error = 0.13428836215562256, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9704031844411525, log_density = 10.946184178998603, hamiltonian_energy = -7.887872108437193, hamiltonian_energy_error = 0.03420427698452677, max_hamiltonian_energy_error = 0.11342026678841144, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9987136827567902, log_density = 10.873418813506566, hamiltonian_energy = -9.748442915588372, hamiltonian_energy_error = -0.030866067739365732, max_hamiltonian_energy_error = -0.1134317923914594, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9696298803321478, log_density = 9.909268377605661, hamiltonian_energy = -8.4323731519846, hamiltonian_energy_error = 0.1509309391519178, max_hamiltonian_energy_error = 0.1509309391519178, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9754072264097324, log_density = 10.891500600600445, hamiltonian_energy = -7.750838020579167, hamiltonian_energy_error = -0.1591041431763145, max_hamiltonian_energy_error = -0.22665566359210487, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 9.576795015321903, hamiltonian_energy = -8.815404200045597, hamiltonian_energy_error = -0.013571109018196026, max_hamiltonian_energy_error = -0.1594693549372579, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9369018621494559, log_density = 8.350370959693542, hamiltonian_energy = -5.812839823012117, hamiltonian_energy_error = 0.13712979694161742, max_hamiltonian_energy_error = 0.1918573010818152, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9137103523254387, log_density = 8.6759212023826, hamiltonian_energy = -3.6213641004148656, hamiltonian_energy_error = 0.09547623468295718, max_hamiltonian_energy_error = 0.3462553354710729, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9824117052647464, log_density = 7.651992121500255, hamiltonian_energy = -6.1542340218289535, hamiltonian_energy_error = 0.06920718958742444, max_hamiltonian_energy_error = -0.4733964968145097, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9426977025493591, log_density = 9.940295435505108, hamiltonian_energy = -4.825519827660457, hamiltonian_energy_error = -0.3075264637140922, max_hamiltonian_energy_error = -0.6204094576849091, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9908018960449091, log_density = 11.91785142473693, hamiltonian_energy = -7.420099592549435, hamiltonian_energy_error = -0.17437506338764752, max_hamiltonian_energy_error = -0.24429783899936908, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8654343733429207, log_density = 9.799572295109096, hamiltonian_energy = -7.48279265029161, hamiltonian_energy_error = 0.24074640843316608, max_hamiltonian_energy_error = 0.288369211109182, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9988165352390949, log_density = 10.748694662202103, hamiltonian_energy = -8.477469605146743, hamiltonian_energy_error = 0.01791142758409414, max_hamiltonian_energy_error = -0.24546094283920006, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9958970782450405, log_density = 10.540646866884629, hamiltonian_energy = -9.786300801301177, hamiltonian_energy_error = -0.04947039236427564, max_hamiltonian_energy_error = -0.36757749235711223, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.939499829324213, log_density = 9.914711430299372, hamiltonian_energy = -6.558974588474161, hamiltonian_energy_error = -0.08196351147317138, max_hamiltonian_energy_error = 0.21248478269911963, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9908475891536919, log_density = 9.575034779571771, hamiltonian_energy = -7.001014823812383, hamiltonian_energy_error = -0.07257770782308537, max_hamiltonian_energy_error = -0.14356392150339392, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8806229118322176, log_density = 10.124237380388458, hamiltonian_energy = -7.230597320504721, hamiltonian_energy_error = 0.14566563926290144, max_hamiltonian_energy_error = 0.2899615636848907, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9900486036154398, log_density = 11.21794695006174, hamiltonian_energy = -9.271254164460824, hamiltonian_energy_error = -0.11008716588565015, max_hamiltonian_energy_error = -0.31701350756507196, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8881009400820797, log_density = 9.151403764645805, hamiltonian_energy = -7.8539218166520985, hamiltonian_energy_error = 0.15460901658423332, max_hamiltonian_energy_error = 0.2954135595630003, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.19994409859019, hamiltonian_energy = -7.850525157348061, hamiltonian_energy_error = -0.0952812413709756, max_hamiltonian_energy_error = -0.25957891650440157, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 10.638821012116974, hamiltonian_energy = -9.406358264259811, hamiltonian_energy_error = -0.08796668331714308, max_hamiltonian_energy_error = -0.2006503094045211, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.228428955334566, hamiltonian_energy = -10.23738092206813, hamiltonian_energy_error = -0.13056586989337582, max_hamiltonian_energy_error = -0.13056586989337582, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9605550613975826, log_density = 12.3994735204898, hamiltonian_energy = -7.58419107857979, hamiltonian_energy_error = 0.028455031209970727, max_hamiltonian_energy_error = 0.08495652021670264, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8984951128582068, log_density = 11.299681206565946, hamiltonian_energy = -8.803374645135449, hamiltonian_energy_error = 0.07222842129042206, max_hamiltonian_energy_error = 0.1827685035046116, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9940158495424419, log_density = 11.932014596285532, hamiltonian_energy = -9.984580506732453, hamiltonian_energy_error = 0.011458373097060104, max_hamiltonian_energy_error = -0.09608433974289632, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9846312900404915, log_density = 11.631355349346824, hamiltonian_energy = -9.26991333368302, hamiltonian_energy_error = -0.005753347879357662, max_hamiltonian_energy_error = -0.09758410031171394, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.985156963114616, log_density = 10.102877939438892, hamiltonian_energy = -8.242373703370932, hamiltonian_energy_error = 0.02324447957315101, max_hamiltonian_energy_error = 0.06171917359649726, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9194214148278679, log_density = 10.88875568850077, hamiltonian_energy = -7.338636670702229, hamiltonian_energy_error = 0.01666143994983038, max_hamiltonian_energy_error = 0.1965835171765118, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9511413134139198, log_density = 11.958401766345979, hamiltonian_energy = -9.119622703531704, hamiltonian_energy_error = 0.020179608712481922, max_hamiltonian_energy_error = -0.1304029723162099, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8918019754597424, log_density = 10.498264391893954, hamiltonian_energy = -6.530809597317133, hamiltonian_energy_error = 0.10365393297267289, max_hamiltonian_energy_error = 0.17684734470062846, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9400352828399017, log_density = 11.040255599556136, hamiltonian_energy = -5.545242959963117, hamiltonian_energy_error = -0.20750716339407838, max_hamiltonian_energy_error = -0.20750716339407838, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9206242404732391, log_density = 12.025755676987353, hamiltonian_energy = -9.147883932191325, hamiltonian_energy_error = -0.03202586471002711, max_hamiltonian_energy_error = 0.15390736335813138, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9925328755324294, log_density = 12.460333329832018, hamiltonian_energy = -10.946231233446756, hamiltonian_energy_error = 0.03130845139460092, max_hamiltonian_energy_error = -0.03758287869945853, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9206039128651623, log_density = 10.210304739043487, hamiltonian_energy = -9.273911202603387, hamiltonian_energy_error = 0.17461975869712454, max_hamiltonian_energy_error = 0.1768396429590524, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9991375702332125, log_density = 12.864531415486145, hamiltonian_energy = -9.663782581734004, hamiltonian_energy_error = -0.14782092333115315, max_hamiltonian_energy_error = -0.23212285949500888, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9555997400595856, log_density = 10.840682375228296, hamiltonian_energy = -9.880248531482595, hamiltonian_energy_error = 0.001058720089796239, max_hamiltonian_energy_error = 0.09578394879912722, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9194647412705786, log_density = 10.71164789392075, hamiltonian_energy = -8.077911429697794, hamiltonian_energy_error = 0.11596809665431529, max_hamiltonian_energy_error = 0.21152241625350499, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8581913773137726, log_density = 10.432322903884236, hamiltonian_energy = -8.094704706042476, hamiltonian_energy_error = 0.04762851345712882, max_hamiltonian_energy_error = 0.22179563029934446, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8973841371033477, log_density = 11.362755364001544, hamiltonian_energy = -7.810390058203783, hamiltonian_energy_error = 0.05415074588443858, max_hamiltonian_energy_error = 0.16232702178798597, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9808421257718706, log_density = 12.106245204177721, hamiltonian_energy = -10.109119330688207, hamiltonian_energy_error = -0.10013142730078606, max_hamiltonian_energy_error = -0.10013142730078606, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9396050145104535, log_density = 10.394469092404716, hamiltonian_energy = -9.407331208067536, hamiltonian_energy_error = 0.13792887817230515, max_hamiltonian_energy_error = 0.13792887817230515, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9815429319300709, log_density = 11.897748057457205, hamiltonian_energy = -8.373057963894164, hamiltonian_energy_error = -0.13632257033514428, max_hamiltonian_energy_error = -0.2339215114329498, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9202777686342432, log_density = 11.112387158493567, hamiltonian_energy = -4.633074586731794, hamiltonian_energy_error = -0.02237058187902452, max_hamiltonian_energy_error = 0.15826741815796197, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9022317778509399, log_density = 11.792706221405396, hamiltonian_energy = -8.193294258086027, hamiltonian_energy_error = -0.01063966331263444, max_hamiltonian_energy_error = 0.24188352183692885, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.998096345806303, log_density = 12.342434233369728, hamiltonian_energy = -11.120748463776117, hamiltonian_energy_error = -0.024921198905282438, max_hamiltonian_energy_error = -0.08279688206394553, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9984909564393517, log_density = 11.978742466653982, hamiltonian_energy = -11.706283205573826, hamiltonian_energy_error = -0.001167174252321601, max_hamiltonian_energy_error = -0.025606959737366708, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9979147538099753, log_density = 12.261303101522056, hamiltonian_energy = -11.726993349887366, hamiltonian_energy_error = 0.018239587218683795, max_hamiltonian_energy_error = -0.0497880096693315, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9842580426637321, log_density = 11.382677777378198, hamiltonian_energy = -10.065384979511244, hamiltonian_energy_error = 0.020944374837272406, max_hamiltonian_energy_error = -0.060030934798897206, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.6759839027618628, log_density = 11.780596912152228, hamiltonian_energy = -7.701461602516151, hamiltonian_energy_error = 0.23993474518033864, max_hamiltonian_energy_error = 0.597784042270546, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9688921310444989, log_density = 10.395121332081915, hamiltonian_energy = -8.152283567905148, hamiltonian_energy_error = 0.06548528630251838, max_hamiltonian_energy_error = 0.16167495093052686, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.875843367829752, hamiltonian_energy = -9.772769967658116, hamiltonian_energy_error = -0.09214157817549307, max_hamiltonian_energy_error = -0.10137310195454852, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9878104680995846, log_density = 12.013679554739753, hamiltonian_energy = -11.366302433736733, hamiltonian_energy_error = 0.004008919719181492, max_hamiltonian_energy_error = -0.034423749770288836, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8923436316956715, log_density = 11.115871498429787, hamiltonian_energy = -8.279196385475078, hamiltonian_energy_error = 0.0486712346692002, max_hamiltonian_energy_error = 0.2121687012386957, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9301189737299359, log_density = 8.035154642685153, hamiltonian_energy = -5.815841560809017, hamiltonian_energy_error = 0.0898834610683803, max_hamiltonian_energy_error = 0.1547433341110942, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.97075710241694, log_density = 8.136776565445032, hamiltonian_energy = -4.464161760779637, hamiltonian_energy_error = 0.004293697992560297, max_hamiltonian_energy_error = -0.16517768411679512, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9975362234540436, log_density = 9.127432027627478, hamiltonian_energy = -7.106106994339689, hamiltonian_energy_error = -0.023201764817188497, max_hamiltonian_energy_error = -0.06624998264021276, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9967346436662022, log_density = 9.65573491032234, hamiltonian_energy = -8.140070025555163, hamiltonian_energy_error = -0.034390765994162464, max_hamiltonian_energy_error = -0.04488053306442907, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9096456681034457, log_density = 7.983882686068668, hamiltonian_energy = -4.971169940506705, hamiltonian_energy_error = 0.09958552418018662, max_hamiltonian_energy_error = 0.1758352262236036, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 8.971880680152498, hamiltonian_energy = -6.35138577278428, hamiltonian_energy_error = -0.02329269115865973, max_hamiltonian_energy_error = -0.08293984066841986, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9558915297280757, log_density = 8.760330371673952, hamiltonian_energy = -6.341355809062631, hamiltonian_energy_error = 0.05072407245179278, max_hamiltonian_energy_error = 0.19181301719753296, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9993447238106313, log_density = 11.646575301982725, hamiltonian_energy = -7.023459254313928, hamiltonian_energy_error = -0.08579244171675349, max_hamiltonian_energy_error = -0.15366518830679254, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8676581615992763, log_density = 10.874082639985865, hamiltonian_energy = -8.997982067472448, hamiltonian_energy_error = 0.09156480496377206, max_hamiltonian_energy_error = 0.327740624651943, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8553166966099963, log_density = 9.51283166044707, hamiltonian_energy = -6.863459816172577, hamiltonian_energy_error = 0.11073601790607235, max_hamiltonian_energy_error = 0.379968879828926, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9603242218015928, log_density = 10.35097696074671, hamiltonian_energy = -7.216809771433784, hamiltonian_energy_error = -0.1933943769628126, max_hamiltonian_energy_error = 0.2933087826740115, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.908258929271435, log_density = 9.530418178696104, hamiltonian_energy = -7.37187152211898, hamiltonian_energy_error = 0.1500520582246887, max_hamiltonian_energy_error = 0.2508427093229715, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9293354702714562, log_density = 9.770180742544483, hamiltonian_energy = -6.302108290806235, hamiltonian_energy_error = 0.16871794338087387, max_hamiltonian_energy_error = 0.3875194540795883, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9078804217222733, log_density = 12.724507787078531, hamiltonian_energy = -6.386488582684773, hamiltonian_energy_error = -0.4074534941162451, max_hamiltonian_energy_error = -0.5728860615070008, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9594873514280093, log_density = 12.156856929242869, hamiltonian_energy = -10.104374007993853, hamiltonian_energy_error = 0.0662502642652445, max_hamiltonian_energy_error = 0.0818893529039979, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9772632208311696, log_density = 11.452108374555317, hamiltonian_energy = -10.949241634463466, hamiltonian_energy_error = 0.06892321492869691, max_hamiltonian_energy_error = -0.18170871786792198, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9643022668328297, log_density = 11.596832091491631, hamiltonian_energy = -9.964070216372226, hamiltonian_energy_error = -0.05305614129568603, max_hamiltonian_energy_error = -0.21391264910397645, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8851245298409387, log_density = 10.758560691820973, hamiltonian_energy = -8.001324732496425, hamiltonian_energy_error = 0.08843643667745305, max_hamiltonian_energy_error = 0.29551455247089287, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9736181483410855, log_density = 10.33382367543324, hamiltonian_energy = -8.796966813264095, hamiltonian_energy_error = -0.006695749570532428, max_hamiltonian_energy_error = -0.22745199247210302, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.233779754140413, hamiltonian_energy = -9.809173453284583, hamiltonian_energy_error = -0.20701987978331537, max_hamiltonian_energy_error = -0.20701987978331537, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9074448036130841, log_density = 11.423643172942842, hamiltonian_energy = -10.409692567113447, hamiltonian_energy_error = 0.06343214179856638, max_hamiltonian_energy_error = 0.14430101692917674, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9977191204458556, log_density = 12.159506465950605, hamiltonian_energy = -8.830470121250329, hamiltonian_energy_error = -0.0522335732213115, max_hamiltonian_energy_error = -0.07102395158234387, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8883042918544876, log_density = 12.697764849770799, hamiltonian_energy = -10.349322093637877, hamiltonian_energy_error = -0.02661848752305751, max_hamiltonian_energy_error = 0.2552632308952969, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9124499069956941, log_density = 10.627019464785164, hamiltonian_energy = -7.294363043510829, hamiltonian_energy_error = 0.039724905132363375, max_hamiltonian_energy_error = 0.31472510188771086, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 11.526899558345477, hamiltonian_energy = -10.038307419958134, hamiltonian_energy_error = -0.03940358710670466, max_hamiltonian_energy_error = -0.06833966241318734, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9807582749440383, log_density = 12.491790688009237, hamiltonian_energy = -10.819171889486151, hamiltonian_energy_error = -0.04770960383133449, max_hamiltonian_energy_error = 0.06665919180313828, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9822588356744693, log_density = 12.787202033028896, hamiltonian_energy = -11.482706169308093, hamiltonian_energy_error = -0.004916699894202736, max_hamiltonian_energy_error = 0.041807721075466375, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9707098938650216, log_density = 13.467871541916667, hamiltonian_energy = -11.486911998098863, hamiltonian_energy_error = -0.04575482115778762, max_hamiltonian_energy_error = -0.075778271419356, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9969313328607791, log_density = 13.502185875530776, hamiltonian_energy = -13.246685649757499, hamiltonian_energy_error = -0.0011931638661160093, max_hamiltonian_energy_error = 0.011055800382592906, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8218296801901891, log_density = 11.097844037022632, hamiltonian_energy = -10.33100665238448, hamiltonian_energy_error = 0.3178161904450114, max_hamiltonian_energy_error = 0.3178161904450114, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8391156330751208, log_density = 12.89348224676541, hamiltonian_energy = -8.249875961122958, hamiltonian_energy_error = -0.22451065547761395, max_hamiltonian_energy_error = 0.42325423107283466, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.90777422048775, log_density = 11.756560079737508, hamiltonian_energy = -10.395749004785337, hamiltonian_energy_error = 0.09520182967180979, max_hamiltonian_energy_error = 0.20852689200979313, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9977197165265052, log_density = 11.870721763013524, hamiltonian_energy = -10.684140789838061, hamiltonian_energy_error = -0.017256232800420435, max_hamiltonian_energy_error = -0.12649334138858848, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9709789084244588, log_density = 12.07163562859088, hamiltonian_energy = -9.967287318555123, hamiltonian_energy_error = 0.062310073981036496, max_hamiltonian_energy_error = -0.13300238827210897, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.992030013558516, log_density = 10.968239103629651, hamiltonian_energy = -9.47002139700826, hamiltonian_energy_error = -0.03646363595652247, max_hamiltonian_energy_error = -0.13089304866206675, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9959174375606484, log_density = 10.371585836461163, hamiltonian_energy = -9.537545509214137, hamiltonian_energy_error = 0.02325745109355637, max_hamiltonian_energy_error = -0.10706578549217483, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9847268262683772, log_density = 9.904112663585606, hamiltonian_energy = -8.922318883461521, hamiltonian_energy_error = 0.029003198315818324, max_hamiltonian_energy_error = -0.09536085888447765, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9268625091832999, log_density = 10.972913335430832, hamiltonian_energy = -6.383820255513136, hamiltonian_energy_error = 0.017919026432206664, max_hamiltonian_energy_error = 0.22093081229610867, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9953379066314937, log_density = 13.36580675447785, hamiltonian_energy = -9.143683962680198, hamiltonian_energy_error = -0.14622827866941002, max_hamiltonian_energy_error = -0.16239760611697918, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9200730043714886, log_density = 12.146318213588632, hamiltonian_energy = -11.702907142424491, hamiltonian_energy_error = 0.11104818493677548, max_hamiltonian_energy_error = 0.15416350127874345, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.964950525636599, log_density = 12.796135332213575, hamiltonian_energy = -9.868427146607301, hamiltonian_energy_error = -0.1242286812462563, max_hamiltonian_energy_error = -0.1242286812462563, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9768890429253785, log_density = 12.990921784578735, hamiltonian_energy = -11.089422630221843, hamiltonian_energy_error = 0.01418353539963313, max_hamiltonian_energy_error = 0.0476560185045205, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9989026818486881, log_density = 13.243015244468552, hamiltonian_energy = -12.901682233269092, hamiltonian_energy_error = -0.016232722498427776, max_hamiltonian_energy_error = -0.016232722498427776, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9044063344120732, log_density = 11.599994556709547, hamiltonian_energy = -10.945538608247285, hamiltonian_energy_error = 0.13055586245601525, max_hamiltonian_energy_error = 0.1396417517481776, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9929523404859641, log_density = 11.74438779246585, hamiltonian_energy = -10.283837398617568, hamiltonian_energy_error = 0.026736665835995765, max_hamiltonian_energy_error = -0.12071651949205986, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9492335139706783, log_density = 11.499836924744255, hamiltonian_energy = -7.954764971856262, hamiltonian_energy_error = -0.12420753383282523, max_hamiltonian_energy_error = 0.21161471975930812, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9610598177643357, log_density = 12.710834267017407, hamiltonian_energy = -9.558693400740381, hamiltonian_energy_error = -0.02283147484685699, max_hamiltonian_energy_error = 0.11164592514762361, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.994683162754696, log_density = 12.656568856034923, hamiltonian_energy = -11.475911281001675, hamiltonian_energy_error = -0.019019868780997484, max_hamiltonian_energy_error = 0.031776940935671405, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9718035693515735, log_density = 12.977237393745602, hamiltonian_energy = -11.202470354127025, hamiltonian_energy_error = 0.00965937452456167, max_hamiltonian_energy_error = 0.06426490516284744, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9796359617486392, log_density = 12.505147541532759, hamiltonian_energy = -10.945231109074372, hamiltonian_energy_error = 0.006329849678035515, max_hamiltonian_energy_error = 0.04920091159026363, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.959917206846458, log_density = 11.295396616603508, hamiltonian_energy = -9.93543458962164, hamiltonian_energy_error = 0.05650301812195124, max_hamiltonian_energy_error = 0.11768017216679638, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9568643609001463, log_density = 11.053377673845654, hamiltonian_energy = -9.590052259271943, hamiltonian_energy_error = -0.012389780564273423, max_hamiltonian_energy_error = 0.1391933962475953, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.032403812218533, hamiltonian_energy = -10.723415363582973, hamiltonian_energy_error = -0.040257447164988136, max_hamiltonian_energy_error = -0.059024771074417615, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9795281970282205, log_density = 12.844676667399304, hamiltonian_energy = -10.883331216076543, hamiltonian_energy_error = 0.005941718261027518, max_hamiltonian_energy_error = -0.07910941152012363, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9412882057156822, log_density = 12.36911452747743, hamiltonian_energy = -10.597644688312428, hamiltonian_energy_error = -0.02313233084875499, max_hamiltonian_energy_error = 0.15103863625794212, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9326722488054442, log_density = 10.299596921782697, hamiltonian_energy = -9.140391618358846, hamiltonian_energy_error = 0.15661362011829816, max_hamiltonian_energy_error = 0.15661362011829816, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.935604507049181, log_density = 10.621078692682875, hamiltonian_energy = -7.660229819257324, hamiltonian_energy_error = 0.00333865675233902, max_hamiltonian_energy_error = 0.36933762849540397, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9629763417001793, log_density = 10.683658252812526, hamiltonian_energy = -8.658363111275008, hamiltonian_energy_error = 0.04380520108509067, max_hamiltonian_energy_error = -0.2598139911111339, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.926069344348169, log_density = 9.915704796762693, hamiltonian_energy = -7.246489626947778, hamiltonian_energy_error = 0.026809492327751983, max_hamiltonian_energy_error = 0.1875711183510944, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9969714849128358, log_density = 9.84974770655883, hamiltonian_energy = -8.104731962832998, hamiltonian_energy_error = 0.018444074939258925, max_hamiltonian_energy_error = -0.16771791044402384, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8419094258406582, log_density = 5.217680046048814, hamiltonian_energy = -4.911549903783169, hamiltonian_energy_error = 0.22439620901480062, max_hamiltonian_energy_error = 0.22439620901480062, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9846138516004482, log_density = 11.237237440370794, hamiltonian_energy = -4.615457515771688, hamiltonian_energy_error = -0.3060746156560352, max_hamiltonian_energy_error = -0.3060746156560352, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9347556891320947, log_density = 11.895199097298974, hamiltonian_energy = -8.642050660556318, hamiltonian_energy_error = 0.03226314635393024, max_hamiltonian_energy_error = 0.12877760100639257, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9953943814280176, log_density = 12.94096291920356, hamiltonian_energy = -9.975297607797216, hamiltonian_energy_error = -0.10517091225758612, max_hamiltonian_energy_error = -0.10517091225758612, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8462626708710298, log_density = 10.807888702083295, hamiltonian_energy = -9.027980284063922, hamiltonian_energy_error = 0.08682951012258577, max_hamiltonian_energy_error = 0.33444153186947645, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9986976245570212, log_density = 12.387078263054796, hamiltonian_energy = -10.455861373639816, hamiltonian_energy_error = -0.029300200921996478, max_hamiltonian_energy_error = -0.16507089886200177, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9658594067120928, log_density = 9.332216234269506, hamiltonian_energy = -7.906792343051436, hamiltonian_energy_error = 0.07871939577337628, max_hamiltonian_energy_error = 0.15255714906029372, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9376980282875701, log_density = 8.782010947690402, hamiltonian_energy = -4.987159279952099, hamiltonian_energy_error = 0.05743004655712092, max_hamiltonian_energy_error = 0.3322023250808943, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.398420630335822, hamiltonian_energy = -8.227614213180516, hamiltonian_energy_error = -0.2711048347402034, max_hamiltonian_energy_error = -0.2711048347402034, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9318293413318273, log_density = 11.606534175696678, hamiltonian_energy = -9.642243657660943, hamiltonian_energy_error = 0.09924272250278499, max_hamiltonian_energy_error = 0.15028554814087158, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9674640090559975, log_density = 12.765174199783372, hamiltonian_energy = -9.694307963823812, hamiltonian_energy_error = -0.04600775900123999, max_hamiltonian_energy_error = 0.07938112517119045, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9846294820114063, log_density = 12.277176904477399, hamiltonian_energy = -11.404489927629454, hamiltonian_energy_error = -0.00597284898420547, max_hamiltonian_energy_error = -0.04814254620883318, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.7916176231910883, log_density = 12.61321746038792, hamiltonian_energy = -8.676146338881875, hamiltonian_energy_error = 0.0711551921481064, max_hamiltonian_energy_error = 0.46157412191370817, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9075553917866356, log_density = 10.92728268383782, hamiltonian_energy = -9.970716936992105, hamiltonian_energy_error = 0.1635816139462598, max_hamiltonian_energy_error = 0.243600068280033, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9176842990440987, log_density = 10.81342551205923, hamiltonian_energy = -7.544691113124655, hamiltonian_energy_error = -0.07251821955308468, max_hamiltonian_energy_error = 0.1903662644251769, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 11.255197291666297, hamiltonian_energy = -9.706980479511913, hamiltonian_energy_error = -0.07459437662303792, max_hamiltonian_energy_error = -0.11355706790826225, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9684843019325656, log_density = 11.729360720749323, hamiltonian_energy = -9.427782078797668, hamiltonian_energy_error = 0.04540996051892776, max_hamiltonian_energy_error = -0.07437334991717215, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9981633624377647, log_density = 12.450786286988729, hamiltonian_energy = -10.47467643516988, hamiltonian_energy_error = -0.10221958635823292, max_hamiltonian_energy_error = -0.11279818041595036, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9837575832888447, log_density = 10.921244281750255, hamiltonian_energy = -9.480194250601581, hamiltonian_energy_error = 0.007141289702925491, max_hamiltonian_energy_error = 0.04868407644973871, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9807537168987219, log_density = 12.636544650194342, hamiltonian_energy = -9.206318224623889, hamiltonian_energy_error = -0.01732550574513958, max_hamiltonian_energy_error = -0.08050230603480024, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.998838566854252, log_density = 12.73175664282154, hamiltonian_energy = -11.993602644931162, hamiltonian_energy_error = -0.007996538262633024, max_hamiltonian_energy_error = -0.042558919794839056, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7896777348648423, log_density = 10.271423084112095, hamiltonian_energy = -8.620538041639945, hamiltonian_energy_error = 0.31732833518655745, max_hamiltonian_energy_error = 0.4582128474167799, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9713675978352377, log_density = 12.152146227173146, hamiltonian_energy = -7.758657104739661, hamiltonian_energy_error = -0.22398920669138978, max_hamiltonian_energy_error = -0.2259323861074014, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.846082959914341, log_density = 9.153980842736308, hamiltonian_energy = -7.1760419337076655, hamiltonian_energy_error = 0.14897518752380368, max_hamiltonian_energy_error = 0.2930908927530167, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9336666404100419, log_density = 12.341404286791507, hamiltonian_energy = -6.198689249213162, hamiltonian_energy_error = -0.09910171817001157, max_hamiltonian_energy_error = 0.3089447564885317, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9478914787645741, log_density = 12.293359384262025, hamiltonian_energy = -10.597404773878223, hamiltonian_energy_error = 0.022199478070819012, max_hamiltonian_energy_error = 0.15815978063835878, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9695666856409975, log_density = 9.789625345716413, hamiltonian_energy = -9.113079756044527, hamiltonian_energy_error = 0.09909441732650492, max_hamiltonian_energy_error = -0.1918318812765989, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9714501242516259, log_density = 7.305073489734914, hamiltonian_energy = -5.073779622998146, hamiltonian_energy_error = 0.09352881616308384, max_hamiltonian_energy_error = -0.20797677036762963, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8151547455669025, log_density = 5.51827063035655, hamiltonian_energy = -2.303202440396979, hamiltonian_energy_error = 0.27920021152245234, max_hamiltonian_energy_error = 0.6460175163867594, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9991456726923367, log_density = 9.923173561276855, hamiltonian_energy = -4.504445609875775, hamiltonian_energy_error = -0.2359193275315432, max_hamiltonian_energy_error = -0.3070717992088623, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.969507335381266, log_density = 8.4816040890868, hamiltonian_energy = -7.243907051718326, hamiltonian_energy_error = 0.07170319850645868, max_hamiltonian_energy_error = 0.13178121807863175, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.989084949085912, log_density = 8.961300680828078, hamiltonian_energy = -6.493556504160541, hamiltonian_energy_error = -0.014540227252322069, max_hamiltonian_energy_error = -0.15825522655937885, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.9984114847777601, log_density = 11.817963384272042, hamiltonian_energy = -8.829580004151634, hamiltonian_energy_error = -0.13809631490099328, max_hamiltonian_energy_error = -0.13809631490099328, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7361854455554062, log_density = 9.299769845320462, hamiltonian_energy = -5.643851765080019, hamiltonian_energy_error = 0.251124692651576, max_hamiltonian_energy_error = 0.6239132456889696, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.7928504738663865, log_density = 11.986885699207365, hamiltonian_energy = -4.716911798413534, hamiltonian_energy_error = -0.09148385928706126, max_hamiltonian_energy_error = 0.5283719498583839, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8893346751765198, log_density = 9.855651791289826, hamiltonian_energy = -4.858804001297093, hamiltonian_energy_error = 0.12941590815143833, max_hamiltonian_energy_error = 0.2857632439579749, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9981923050383857, log_density = 11.906871893578394, hamiltonian_energy = -9.27010310493166, hamiltonian_energy_error = -0.17364107979665633, max_hamiltonian_energy_error = -0.2831028714505237, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8648857248962393, log_density = 10.071909889073847, hamiltonian_energy = -8.39793102551453, hamiltonian_energy_error = 0.17143083207708898, max_hamiltonian_energy_error = 0.2681400498848614, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9955277375700345, log_density = 9.183633088002722, hamiltonian_energy = -7.924337801302648, hamiltonian_energy_error = 0.012165718217496568, max_hamiltonian_energy_error = -0.20556132508986735, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8752197105771657, log_density = 10.47454275784002, hamiltonian_energy = -4.36639534632679, hamiltonian_energy_error = 0.11799684086878504, max_hamiltonian_energy_error = 0.42962464245863874, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9972129588696316, log_density = 10.385980572167554, hamiltonian_energy = -9.414794925311718, hamiltonian_energy_error = 0.007024620795753833, max_hamiltonian_energy_error = -0.1478257922221342, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9799276636723903, log_density = 8.761373923254359, hamiltonian_energy = -6.753252856263212, hamiltonian_energy_error = 0.06373908868005973, max_hamiltonian_energy_error = -0.25760603720627273, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9727519983464525, log_density = 8.849936564549505, hamiltonian_energy = -4.39574916076678, hamiltonian_energy_error = -0.1554916496866685, max_hamiltonian_energy_error = -0.17024240721192285, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 9.653469163705934, hamiltonian_energy = -8.69055392315274, hamiltonian_energy_error = -0.06941850207964073, max_hamiltonian_energy_error = -0.14320758535982137, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9993449999794103, log_density = 11.224737558052283, hamiltonian_energy = -9.314446055155187, hamiltonian_energy_error = -0.062177475430537754, max_hamiltonian_energy_error = -0.0818901526508462, tree_depth = 5, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8801417052524118, log_density = 11.48925415157861, hamiltonian_energy = -7.670632298083522, hamiltonian_energy_error = -0.023184801518415732, max_hamiltonian_energy_error = 0.3077848754542609, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.688076851254603, log_density = 10.667597498373329, hamiltonian_energy = -5.9104656950255485, hamiltonian_energy_error = 0.18519182334854278, max_hamiltonian_energy_error = 0.595974927223069, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9416878021662868, log_density = 9.089127358594366, hamiltonian_energy = -5.98569236547641, hamiltonian_energy_error = 0.10181198545580994, max_hamiltonian_energy_error = 0.1751456670624627, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.397066682551333, hamiltonian_energy = -7.627813303413878, hamiltonian_energy_error = -0.19286154770373365, max_hamiltonian_energy_error = -0.2771689236621411, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9983999609480875, log_density = 12.606289470196732, hamiltonian_energy = -11.586000775183354, hamiltonian_energy_error = -0.022212976380908245, max_hamiltonian_energy_error = -0.07704499354402117, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9559710271617488, log_density = 12.475875303470563, hamiltonian_energy = -11.238981120997611, hamiltonian_energy_error = 0.02348707397914218, max_hamiltonian_energy_error = 0.11038792667799058, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9229707990315397, log_density = 11.267619617611455, hamiltonian_energy = -7.7870328896074685, hamiltonian_energy_error = 0.019004209421271234, max_hamiltonian_energy_error = 0.1789434884380805, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.965336062958014, log_density = 11.54303449713926, hamiltonian_energy = -9.24011121554982, hamiltonian_energy_error = 0.03207362860728935, max_hamiltonian_energy_error = 0.10016921032223003, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9820686430454153, log_density = 12.10189591262432, hamiltonian_energy = -8.993916463290219, hamiltonian_energy_error = -0.0559617022573633, max_hamiltonian_energy_error = -0.09941096071895572, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9630494794508685, log_density = 10.713392980742313, hamiltonian_energy = -9.887291342296695, hamiltonian_energy_error = 0.07249854329301897, max_hamiltonian_energy_error = 0.07582739199659372, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9944591444453914, log_density = 10.739142186476725, hamiltonian_energy = -8.41778381997543, hamiltonian_energy_error = -0.004263965425531424, max_hamiltonian_energy_error = -0.08285390119163516, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9980321395984546, log_density = 10.462159267688941, hamiltonian_energy = -7.073529109783318, hamiltonian_energy_error = -0.09721023407675933, max_hamiltonian_energy_error = -0.1236317178210431, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.7603253679356226, log_density = 9.094721423720415, hamiltonian_energy = -6.308715778742786, hamiltonian_energy_error = 0.2863251841752943, max_hamiltonian_energy_error = 0.598196646989976, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.893800714857719, log_density = 9.746766437842883, hamiltonian_energy = -5.621942476439036, hamiltonian_energy_error = 0.1078594797372805, max_hamiltonian_energy_error = 0.3797521180552721, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.837602921907667, log_density = 12.118639359225952, hamiltonian_energy = -6.427540867018088, hamiltonian_energy_error = -0.2919561247395741, max_hamiltonian_energy_error = 0.3661377077204273, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8880488387294145, log_density = 11.076824316917815, hamiltonian_energy = -9.311708342937713, hamiltonian_energy_error = 0.16774736663865752, max_hamiltonian_energy_error = 0.16998280398078336, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8352480625790886, log_density = 11.134297287714396, hamiltonian_energy = -6.6287130866600705, hamiltonian_energy_error = 0.07795646300819836, max_hamiltonian_energy_error = 0.38131456947078934, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9628831960511375, log_density = 11.329466788193873, hamiltonian_energy = -9.716147270828651, hamiltonian_energy_error = 0.05690233577784021, max_hamiltonian_energy_error = 0.13183775070985604, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9884150460979272, log_density = 10.15765807561432, hamiltonian_energy = -8.866638937123005, hamiltonian_energy_error = 0.027452819719341548, max_hamiltonian_energy_error = -0.1800582826289947, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9951955256926027, log_density = 9.839089095418835, hamiltonian_energy = -7.015282324261092, hamiltonian_energy_error = -0.024252532899225798, max_hamiltonian_energy_error = -0.14780991654644637, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8294465655140154, log_density = 10.318509660501658, hamiltonian_energy = -5.620175570183471, hamiltonian_energy_error = 0.054133689850233147, max_hamiltonian_energy_error = 0.49543909580553347, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9843775192858945, log_density = 12.759024343225914, hamiltonian_energy = -9.013651583663654, hamiltonian_energy_error = -0.12152679114500664, max_hamiltonian_energy_error = -0.15868525765889707, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9953622313331498, log_density = 12.527780903710733, hamiltonian_energy = -10.904877022324685, hamiltonian_energy_error = -0.05585721868442306, max_hamiltonian_energy_error = -0.06647969290131073, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9661862673644299, log_density = 11.450856796579338, hamiltonian_energy = -10.119270394156475, hamiltonian_energy_error = 0.019124695985079043, max_hamiltonian_energy_error = 0.07417112439017437, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9085046980373751, log_density = 11.25218640881199, hamiltonian_energy = -9.052476678157106, hamiltonian_energy_error = 0.13210311008847597, max_hamiltonian_energy_error = 0.16711002766351513, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9985887300546461, log_density = 12.584949437733897, hamiltonian_energy = -10.909518857370617, hamiltonian_energy_error = -0.05980621824257959, max_hamiltonian_energy_error = -0.1327599709431393, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9300340229323039, log_density = 12.805920534164466, hamiltonian_energy = -9.564941934338204, hamiltonian_energy_error = -0.04721987354952084, max_hamiltonian_energy_error = 0.11269884895502891, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9341816886934703, log_density = 12.818161548103571, hamiltonian_energy = -11.34534588778386, hamiltonian_energy_error = -0.02944538998846724, max_hamiltonian_energy_error = 0.1265417137287823, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.893308389899161, log_density = 11.82221021796479, hamiltonian_energy = -10.08200551430275, hamiltonian_energy_error = 0.06716097396986953, max_hamiltonian_energy_error = 0.14532232105556808, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9965152279123365, log_density = 12.795478154904943, hamiltonian_energy = -11.553205539348227, hamiltonian_energy_error = -0.050214085605269076, max_hamiltonian_energy_error = -0.050214085605269076, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9791705272827177, log_density = 12.954356393987652, hamiltonian_energy = -12.416085393302286, hamiltonian_energy_error = 0.007138656072866567, max_hamiltonian_energy_error = 0.04142015609113159, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8776618804391786, log_density = 9.999059532205095, hamiltonian_energy = -9.399398346069656, hamiltonian_energy_error = 0.17096976441444767, max_hamiltonian_energy_error = 0.20021687123846377, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 11.906446333310694, hamiltonian_energy = -9.72033288431561, hamiltonian_energy_error = -0.10926311665412136, max_hamiltonian_energy_error = -0.10926311665412136, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9665277097590325, log_density = 11.312065266730947, hamiltonian_energy = -9.677777840949267, hamiltonian_energy_error = 0.04249583979663285, max_hamiltonian_energy_error = 0.0590413023543217, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9933365621233797, log_density = 11.415499589309494, hamiltonian_energy = -9.408250264362433, hamiltonian_energy_error = 0.013576522770152977, max_hamiltonian_energy_error = -0.041493196196789484, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9967457187471436, log_density = 11.909198106887898, hamiltonian_energy = -8.83698994130759, hamiltonian_energy_error = -0.03180213965439549, max_hamiltonian_energy_error = -0.08885548337467242, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9405999154127473, log_density = 11.177864056887993, hamiltonian_energy = -8.779966935332263, hamiltonian_energy_error = 0.05945293423702758, max_hamiltonian_energy_error = 0.15180013441970175, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9941956821361777, log_density = 12.77452776107731, hamiltonian_energy = -10.023212102020691, hamiltonian_energy_error = -0.0371486863753141, max_hamiltonian_energy_error = -0.06964025724250256, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9724406165661745, log_density = 12.271237182291657, hamiltonian_energy = -10.62344855384192, hamiltonian_energy_error = -0.0403452128213484, max_hamiltonian_energy_error = 0.0784219231399419, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.5729882379157178, log_density = 9.529650244448097, hamiltonian_energy = -3.7184133928081913, hamiltonian_energy_error = 0.5639918925894563, max_hamiltonian_energy_error = 1.0481898103757512, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9796038644287721, log_density = 10.917615747934963, hamiltonian_energy = -8.182210440796228, hamiltonian_energy_error = -0.1627213554186877, max_hamiltonian_energy_error = -0.41810146753719124, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9968268129224435, log_density = 11.907486947170321, hamiltonian_energy = -10.059451493670927, hamiltonian_energy_error = -0.07954088531012715, max_hamiltonian_energy_error = -0.1355834559834559, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9668992477347842, log_density = 11.223972743111428, hamiltonian_energy = -9.2693565471036, hamiltonian_energy_error = -0.12186140271562351, max_hamiltonian_energy_error = 0.1439288218013317, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9897304879098942, log_density = 11.431848209992316, hamiltonian_energy = -9.707166470874764, hamiltonian_energy_error = -2.5366042148533552e-5, max_hamiltonian_energy_error = 0.021284139520675538, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9814145799401279, log_density = 11.256743476375807, hamiltonian_energy = -9.339773438436257, hamiltonian_energy_error = 0.03149188316391971, max_hamiltonian_energy_error = 0.06378837732237308, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9499191003795469, log_density = 10.624323725599409, hamiltonian_energy = -8.196940208971528, hamiltonian_energy_error = 0.043392783760561215, max_hamiltonian_energy_error = 0.07187788326962874, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9982735245411931, log_density = 12.031632495918657, hamiltonian_energy = -8.352425674924499, hamiltonian_energy_error = -0.06991168488596067, max_hamiltonian_energy_error = -0.06991168488596067, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8643381310835933, log_density = 10.521669470188186, hamiltonian_energy = -8.429909863822624, hamiltonian_energy_error = 0.20019285725047453, max_hamiltonian_energy_error = 0.335981193944475, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9963593604316715, log_density = 10.882589091604961, hamiltonian_energy = -9.674729301862387, hamiltonian_energy_error = -0.04700511870427526, max_hamiltonian_energy_error = -0.21639246050397176, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9428359773481559, log_density = 10.79267675606607, hamiltonian_energy = -9.034943264100226, hamiltonian_energy_error = 0.0048956387073779695, max_hamiltonian_energy_error = -0.18415391401352466, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 1.0, log_density = 12.255489356710797, hamiltonian_energy = -10.725343112014432, hamiltonian_energy_error = -0.1558466627185453, max_hamiltonian_energy_error = -0.1558466627185453, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9941312679556688, log_density = 12.528089868725456, hamiltonian_energy = -11.512233302390019, hamiltonian_energy_error = -0.024476620091379075, max_hamiltonian_energy_error = -0.06164032038463674, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9587256578828381, log_density = 12.678937688064504, hamiltonian_energy = -11.138324898266319, hamiltonian_energy_error = 0.01941688846893541, max_hamiltonian_energy_error = 0.08791556835282854, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9510464612849455, log_density = 11.081155930885703, hamiltonian_energy = -10.415673230604819, hamiltonian_energy_error = 0.07286224415964959, max_hamiltonian_energy_error = 0.09638202658570272, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9915803174424962, log_density = 10.312035314313185, hamiltonian_energy = -9.516973013784522, hamiltonian_energy_error = 0.04927208756509849, max_hamiltonian_energy_error = -0.14586888160543943, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 12.847310987232206, hamiltonian_energy = -8.941576213595187, hamiltonian_energy_error = -0.1286766636141916, max_hamiltonian_energy_error = -0.200349945664259, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8716303776876336, log_density = 11.19414295629242, hamiltonian_energy = -8.647495940547024, hamiltonian_energy_error = 0.07624191633769506, max_hamiltonian_energy_error = 0.3152013446647892, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9862654160113283, log_density = 12.103093106462431, hamiltonian_energy = -9.163730506856835, hamiltonian_energy_error = -0.009429602599496434, max_hamiltonian_energy_error = -0.06544183550999172, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9667004882286729, log_density = 10.474921081485395, hamiltonian_energy = -9.43853054199551, hamiltonian_energy_error = 0.074488009858106, max_hamiltonian_energy_error = 0.08262226414579743, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9668108547591315, log_density = 13.412249179256932, hamiltonian_energy = -9.487125777937752, hamiltonian_energy_error = -0.08141399139697647, max_hamiltonian_energy_error = 0.1009158139825388, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8836649885229185, log_density = 11.924262566046256, hamiltonian_energy = -11.378375813500279, hamiltonian_energy_error = 0.19693919429905193, max_hamiltonian_energy_error = 0.23833391512068225, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9981312138958552, log_density = 11.680057805748774, hamiltonian_energy = -11.420757479985099, hamiltonian_energy_error = 0.013167819178130813, max_hamiltonian_energy_error = -0.17853498198658535, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9235673712217699, log_density = 10.115128560975304, hamiltonian_energy = -7.983268151681097, hamiltonian_energy_error = 0.1855302321775003, max_hamiltonian_energy_error = -0.32012537175789646, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9819111908451309, log_density = 10.341660670011246, hamiltonian_energy = -5.965072084367893, hamiltonian_energy_error = -0.14579754294965408, max_hamiltonian_energy_error = -0.415701171258557, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.8327572970988971, log_density = 8.789243075555289, hamiltonian_energy = -7.030961998557363, hamiltonian_energy_error = 0.1365923070050723, max_hamiltonian_energy_error = 0.235195992711148, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.967375512846686, log_density = 9.879348464111356, hamiltonian_energy = -6.688130618580182, hamiltonian_energy_error = 0.0009192189996065636, max_hamiltonian_energy_error = -0.3473268726549996, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9033602600932628, log_density = 10.021745966868096, hamiltonian_energy = -5.789150087868273, hamiltonian_energy_error = 0.07607347535397935, max_hamiltonian_energy_error = -0.5015395064247938, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.977868943702326, log_density = 9.02095634306695, hamiltonian_energy = -7.4749355405794695, hamiltonian_energy_error = 0.02695969980197077, max_hamiltonian_energy_error = -0.3608762360364084, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9869913578163994, log_density = 11.012499401722497, hamiltonian_energy = -7.191542363701766, hamiltonian_energy_error = -0.3484271616572796, max_hamiltonian_energy_error = -0.3635835332010293, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9043780737155558, log_density = 10.54361086457892, hamiltonian_energy = -7.858444250207434, hamiltonian_energy_error = 0.13628529487051821, max_hamiltonian_energy_error = 0.2665829975214553, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9773182948699055, log_density = 10.414363421634754, hamiltonian_energy = -7.989748132329329, hamiltonian_energy_error = -0.1322555382105035, max_hamiltonian_energy_error = -0.24248248391886484, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9693100597596326, log_density = 11.917867562349713, hamiltonian_energy = -9.39900222785542, hamiltonian_energy_error = -0.04932946415961581, max_hamiltonian_energy_error = -0.13678272508339262, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7824833320953425, log_density = 10.792711778382547, hamiltonian_energy = -7.982356364245828, hamiltonian_energy_error = 0.2065150326525318, max_hamiltonian_energy_error = 0.4109269622645195, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8875097951375278, log_density = 8.709846336650418, hamiltonian_energy = -6.41129408908186, hamiltonian_energy_error = 0.1883348570907728, max_hamiltonian_energy_error = 0.34372535981426733, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 8.223669909199822, hamiltonian_energy = -0.8595427318812003, hamiltonian_energy_error = -0.09706796865185918, max_hamiltonian_energy_error = -0.2729435292235687, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9862105316599388, log_density = 11.43882728260403, hamiltonian_energy = -7.075758671517856, hamiltonian_energy_error = -0.13401841308746665, max_hamiltonian_energy_error = -0.27067814931031364, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.944598491120846, log_density = 11.494958600226148, hamiltonian_energy = -7.544073927276148, hamiltonian_energy_error = -0.005232053241793544, max_hamiltonian_energy_error = 0.1697563599834533, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9909213132268822, log_density = 11.872520916887797, hamiltonian_energy = -10.352409386037555, hamiltonian_energy_error = 0.02886542898189326, max_hamiltonian_energy_error = -0.07390221312708967, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8283593889162975, log_density = 12.41561095162045, hamiltonian_energy = -8.66732840748154, hamiltonian_energy_error = -0.03313658348572979, max_hamiltonian_energy_error = 0.4179520729742272, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9616658897685918, log_density = 11.856203734550325, hamiltonian_energy = -10.853556867938272, hamiltonian_energy_error = 0.012097606960576712, max_hamiltonian_energy_error = 0.08145044484878916, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9623646942618674, log_density = 9.480205570954745, hamiltonian_energy = -7.315265830848148, hamiltonian_energy_error = 0.014890341742638036, max_hamiltonian_energy_error = 0.14603199704089054, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9689399487421306, log_density = 11.143436593162757, hamiltonian_energy = -7.21520390642028, hamiltonian_energy_error = -0.02252894850344056, max_hamiltonian_energy_error = 0.06505923536264735, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8580398119431768, log_density = 11.581775865425893, hamiltonian_energy = -5.36401969211729, hamiltonian_energy_error = -0.011406735950878044, max_hamiltonian_energy_error = 0.3458944435216553, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8548270051370466, log_density = 10.821997176567558, hamiltonian_energy = -5.7279187361189665, hamiltonian_energy_error = 0.09496021861809467, max_hamiltonian_energy_error = 0.2939655299863162, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 1.0, log_density = 12.41327528787147, hamiltonian_energy = -9.225684942893164, hamiltonian_energy_error = -0.053359094669767515, max_hamiltonian_energy_error = -0.07493176266145873, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9070076687593308, log_density = 9.404080970998315, hamiltonian_energy = -8.463650527932348, hamiltonian_energy_error = 0.1609593401357401, max_hamiltonian_energy_error = 0.1685048530407922, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9918207771528672, log_density = 11.531807084946603, hamiltonian_energy = -7.742211119855272, hamiltonian_energy_error = -0.18219195111348618, max_hamiltonian_energy_error = -0.19262080590482, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9733593334644361, log_density = 11.9573981312868, hamiltonian_energy = -9.365162064762885, hamiltonian_energy_error = 0.019712925888777377, max_hamiltonian_energy_error = 0.09098798588225065, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.8625122415282573, log_density = 10.22385614720657, hamiltonian_energy = -7.429803727792731, hamiltonian_energy_error = 0.18653787554603518, max_hamiltonian_energy_error = 0.26939840993771647, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9963709742953447, log_density = 12.698684302279377, hamiltonian_energy = -9.885752613993176, hamiltonian_energy_error = -0.1724887034062874, max_hamiltonian_energy_error = -0.17694940466299514, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9438754551693125, log_density = 12.652158300508045, hamiltonian_energy = -8.618283092714298, hamiltonian_energy_error = 0.03223598137699035, max_hamiltonian_energy_error = 0.129027063988028, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9233932968286428, log_density = 12.897536963817231, hamiltonian_energy = -11.116006117964139, hamiltonian_energy_error = -0.038060969274406276, max_hamiltonian_energy_error = 0.1858365557872368, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.900664882947506, log_density = 11.821155289441418, hamiltonian_energy = -10.193619866359237, hamiltonian_energy_error = 0.11809077250945954, max_hamiltonian_energy_error = 0.1689166201493606, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 1.0, log_density = 13.21021889950736, hamiltonian_energy = -11.213496776101216, hamiltonian_energy_error = -0.1026688660503563, max_hamiltonian_energy_error = -0.1026688660503563, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9388807358616563, log_density = 13.226993823015153, hamiltonian_energy = -12.391948864686551, hamiltonian_energy_error = -0.016180301330017244, max_hamiltonian_energy_error = 0.11725635824521952, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9409279269748788, log_density = 12.180578140402382, hamiltonian_energy = -11.196642347589062, hamiltonian_energy_error = 0.0863695869282548, max_hamiltonian_energy_error = 0.10067943766158294, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8951038264262304, log_density = 10.423342756342915, hamiltonian_energy = -8.802650291726401, hamiltonian_energy_error = 0.14140619301282165, max_hamiltonian_energy_error = 0.19070623721622582, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9897874908990386, log_density = 11.456920931846723, hamiltonian_energy = -8.045906045127692, hamiltonian_energy_error = -0.12137881110591309, max_hamiltonian_energy_error = -0.23024463343685575, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9965711610687468, log_density = 11.903415962644258, hamiltonian_energy = -10.682383390054365, hamiltonian_energy_error = -0.07276349704752683, max_hamiltonian_energy_error = -0.17470752280476098, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9772390800089821, log_density = 11.035408808971688, hamiltonian_energy = -7.6202494250728465, hamiltonian_energy_error = 0.000905219603799523, max_hamiltonian_energy_error = 0.09395022516367124, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9787093118291607, log_density = 11.534278074242813, hamiltonian_energy = -9.324300390503286, hamiltonian_energy_error = -0.06330197485129574, max_hamiltonian_energy_error = 0.11126942031795117, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9312820734247095, log_density = 10.159562109203248, hamiltonian_energy = -7.985063393879374, hamiltonian_energy_error = 0.10353618673836174, max_hamiltonian_energy_error = 0.15582167052883555, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9978169707060905, log_density = 11.221503299338114, hamiltonian_energy = -8.79661475087513, hamiltonian_energy_error = -0.015976323976346407, max_hamiltonian_energy_error = -0.02238773489396806, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9172581606548524, log_density = 10.91913579400046, hamiltonian_energy = -8.48472929136799, hamiltonian_energy_error = 0.07087176017765451, max_hamiltonian_energy_error = 0.1923391283794782, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9952739414146904, log_density = 11.63739898109669, hamiltonian_energy = -9.244672686218625, hamiltonian_energy_error = -0.03648449433320344, max_hamiltonian_energy_error = -0.1542021308977084, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.979647050051862, log_density = 9.549847703522786, hamiltonian_energy = -8.833605587135409, hamiltonian_energy_error = 0.03742849235606727, max_hamiltonian_energy_error = -0.08198912462449215, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.993213406048343, log_density = 12.91091949028424, hamiltonian_energy = -8.24746611899889, hamiltonian_energy_error = -0.15789168394682918, max_hamiltonian_energy_error = -0.15789168394682918, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8890020906870778, log_density = 10.878896845710969, hamiltonian_energy = -10.630383512066132, hamiltonian_energy_error = 0.1498767724340624, max_hamiltonian_energy_error = 0.17275985481634137, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9934714680418989, log_density = 11.909193301194273, hamiltonian_energy = -10.000248774215049, hamiltonian_energy_error = -0.0742772280307129, max_hamiltonian_energy_error = -0.1329046740912201, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9538475853162346, log_density = 11.21573157162516, hamiltonian_energy = -9.827872604338198, hamiltonian_energy_error = 0.11905220598231558, max_hamiltonian_energy_error = 0.12614234954194714, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9995322740240825, log_density = 11.891687324463039, hamiltonian_energy = -10.67030950862021, hamiltonian_energy_error = -0.10571927126273017, max_hamiltonian_energy_error = -0.19758622533061576, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9615542964034466, log_density = 11.809093494578622, hamiltonian_energy = -10.093770512158034, hamiltonian_energy_error = 0.04040254331525972, max_hamiltonian_energy_error = 0.12454670244587263, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.988979740417736, log_density = 11.376266741818892, hamiltonian_energy = -10.117793239538438, hamiltonian_energy_error = 0.03131192220839374, max_hamiltonian_energy_error = -0.2038893016147476, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9583450491792114, log_density = 12.874831568827343, hamiltonian_energy = -9.656347529549006, hamiltonian_energy_error = -0.1874749778561391, max_hamiltonian_energy_error = -0.2331239919312882, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9837030589775909, log_density = 12.98807099993155, hamiltonian_energy = -11.326629152100764, hamiltonian_energy_error = 0.002820853655716604, max_hamiltonian_energy_error = 0.04011457392693174, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9026486518038122, log_density = 12.361710271135202, hamiltonian_energy = -10.90295203855425, hamiltonian_energy_error = 0.0876053143875275, max_hamiltonian_energy_error = 0.2201152828145112, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9374238777562085, log_density = 12.060650511721363, hamiltonian_energy = -11.026933827965102, hamiltonian_energy_error = 0.06333272786493183, max_hamiltonian_energy_error = 0.20210641303708599, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9931626195318607, log_density = 12.051412743509873, hamiltonian_energy = -10.796549537196771, hamiltonian_energy_error = -0.007800975670440025, max_hamiltonian_energy_error = -0.11267274453098963, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9947114015416434, log_density = 12.85184941065266, hamiltonian_energy = -11.0845560130872, hamiltonian_energy_error = -0.05852890130411659, max_hamiltonian_energy_error = -0.13534269293814916, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9956086621218169, log_density = 12.991332680281362, hamiltonian_energy = -11.609795873158893, hamiltonian_energy_error = -0.01831767184899924, max_hamiltonian_energy_error = -0.02623329730874424, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8643039700500726, log_density = 9.681431435507584, hamiltonian_energy = -8.67896186893477, hamiltonian_energy_error = 0.13179179473430835, max_hamiltonian_energy_error = 0.21352389177895326, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9940190810283597, log_density = 11.604645910280949, hamiltonian_energy = -8.16987381337802, hamiltonian_energy_error = -0.011956938788875604, max_hamiltonian_energy_error = -0.13744850863585967, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9983123335405086, log_density = 10.441444340661924, hamiltonian_energy = -8.072650707763046, hamiltonian_energy_error = 0.007380210834281087, max_hamiltonian_energy_error = -0.1003385906195291, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9952801221461608, log_density = 11.360281791342363, hamiltonian_energy = -8.894513966050694, hamiltonian_energy_error = -0.046465160397980654, max_hamiltonian_energy_error = -0.09226584190517784, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9719016145553806, log_density = 11.772556510492237, hamiltonian_energy = -10.180430205188928, hamiltonian_energy_error = 0.0024211939861054077, max_hamiltonian_energy_error = -0.12012755071695302, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9879284201764701, log_density = 13.331078315683431, hamiltonian_energy = -10.699634185721859, hamiltonian_energy_error = -0.07271094379263054, max_hamiltonian_energy_error = -0.07271094379263054, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9611461795669194, log_density = 10.65185588308098, hamiltonian_energy = -9.945032749544081, hamiltonian_energy_error = 0.06726310739142605, max_hamiltonian_energy_error = 0.06726310739142605, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9939552824578373, log_density = 9.688659669895474, hamiltonian_energy = -9.211882090022959, hamiltonian_energy_error = -0.010901064550150608, max_hamiltonian_energy_error = 0.02988772022688657, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 3, is_accept = true, acceptance_rate = 0.6829526469069203, log_density = 9.043194797517852, hamiltonian_energy = -5.902007206243049, hamiltonian_energy_error = 0.25192670139194817, max_hamiltonian_energy_error = 0.5378920714391908, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9913336474814253, log_density = 9.17297382549787, hamiltonian_energy = -6.524153929776338, hamiltonian_energy_error = -0.043383118802179155, max_hamiltonian_energy_error = -0.14869051014404633, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9944205653394628, log_density = 11.855364928312156, hamiltonian_energy = -7.635504501078742, hamiltonian_energy_error = -0.0016751236934355873, max_hamiltonian_energy_error = -0.10328565509359766, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.7686896978877038, log_density = 8.429222828846903, hamiltonian_energy = -5.469803102454605, hamiltonian_energy_error = 0.35219955945974935, max_hamiltonian_energy_error = 0.5388188946958294, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9927527644730534, log_density = 11.676039813600774, hamiltonian_energy = -7.349404880886128, hamiltonian_energy_error = -0.35512552691455035, max_hamiltonian_energy_error = -0.35512552691455035, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9008356587229491, log_density = 8.333253824488388, hamiltonian_energy = -6.368426667209, hamiltonian_energy_error = 0.17470837439041098, max_hamiltonian_energy_error = 0.22802741175551944, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9877611589336388, log_density = 10.507722812684229, hamiltonian_energy = -4.369238854017539, hamiltonian_energy_error = -0.19464643515206248, max_hamiltonian_energy_error = -0.3259942411284822, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9664153968866176, log_density = 10.1125516551899, hamiltonian_energy = -7.339098004825708, hamiltonian_energy_error = -0.003726651467053088, max_hamiltonian_energy_error = 0.08161999440877121, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 31, is_accept = true, acceptance_rate = 0.9804836502538327, log_density = 11.115463488400833, hamiltonian_energy = -7.808805798795805, hamiltonian_energy_error = -0.044743373569370526, max_hamiltonian_energy_error = -0.14530054647637236, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.8724485455618375, log_density = 11.517502000815117, hamiltonian_energy = -5.915820949328771, hamiltonian_energy_error = 0.033193702415543314, max_hamiltonian_energy_error = 0.2836139917254519, tree_depth = 2, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9931386421165698, log_density = 12.677999520020617, hamiltonian_energy = -10.532599335988312, hamiltonian_energy_error = -0.10072521579495941, max_hamiltonian_energy_error = -0.133703123878961, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9622158262674821, log_density = 10.48458568258916, hamiltonian_energy = -10.072615219834123, hamiltonian_energy_error = 0.0531632878795687, max_hamiltonian_energy_error = 0.0742292659706294, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9832701969241927, log_density = 10.80246468275546, hamiltonian_energy = -8.205147652927227, hamiltonian_energy_error = -0.0219493348397215, max_hamiltonian_energy_error = 0.0770227438844131, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9304803953785078, log_density = 10.731342211955797, hamiltonian_energy = -7.7084776589260375, hamiltonian_energy_error = 0.04779261442995342, max_hamiltonian_energy_error = 0.12352334449579683, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9672245930710512, log_density = 12.440517338494924, hamiltonian_energy = -7.140808751869904, hamiltonian_energy_error = -0.11120719606130702, max_hamiltonian_energy_error = 0.16702201254362947, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 19, is_accept = true, acceptance_rate = 0.8344031984583328, log_density = 9.91446248984774, hamiltonian_energy = -8.809167785480252, hamiltonian_energy_error = 0.2943765740572726, max_hamiltonian_energy_error = 0.3874944915642704, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9970286268403414, log_density = 11.967141109340224, hamiltonian_energy = -9.118996455975525, hamiltonian_energy_error = -0.12499225855575702, max_hamiltonian_energy_error = -0.2453411734569162, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9988951888863266, log_density = 11.427820444611164, hamiltonian_energy = -10.418321467226978, hamiltonian_energy_error = -0.05537558396189368, max_hamiltonian_energy_error = -0.18027221529937698, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9997490335041086, log_density = 12.482012029631226, hamiltonian_energy = -10.030366245462945, hamiltonian_energy_error = 0.0037716009919979143, max_hamiltonian_energy_error = -0.12523614506705982, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9856332797570727, log_density = 12.208185470249669, hamiltonian_energy = -11.445703838119957, hamiltonian_energy_error = 0.006839613916231002, max_hamiltonian_energy_error = -0.0861010216862752, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9945369496927489, log_density = 11.735923614695352, hamiltonian_energy = -11.012624218748446, hamiltonian_energy_error = 0.024478287886180894, max_hamiltonian_energy_error = -0.12054785170013993, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 23, is_accept = true, acceptance_rate = 0.9348906964212631, log_density = 10.116234390428485, hamiltonian_energy = -8.659433666366269, hamiltonian_energy_error = 0.08939640721170505, max_hamiltonian_energy_error = 0.22025662225832754, tree_depth = 4, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 7, is_accept = true, acceptance_rate = 0.9861712843525822, log_density = 7.746934960135153, hamiltonian_energy = -6.991859727132795, hamiltonian_energy_error = 0.03047063416131124, max_hamiltonian_energy_error = -0.10530090185388907, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.9581161430660529, log_density = 7.855923113196779, hamiltonian_energy = -4.168702428989177, hamiltonian_energy_error = 0.03332087013118912, max_hamiltonian_energy_error = -0.24285420827107096, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 11, is_accept = true, acceptance_rate = 0.9930546051172882, log_density = 12.809096748832365, hamiltonian_energy = -6.267122684541602, hamiltonian_energy_error = -0.23274542331555015, max_hamiltonian_energy_error = -0.23957971931740119, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false), (n_steps = 15, is_accept = true, acceptance_rate = 0.99261606261333, log_density = 12.9299425721388, hamiltonian_energy = -11.563678389882703, hamiltonian_energy_error = -0.026408765106596732, max_hamiltonian_energy_error = 0.03698314444283035, tree_depth = 3, numerical_error = false, step_size = 0.09968224535478436, nom_step_size = 0.09968224535478436, is_adapt = false)])","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"Inspect posterior distribution over hyperparameters.","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"hypers = map(unpack, samples);\nh_l1 = histogram(getindex.(hypers, :l1); label=\"l1\");\nh_l2 = histogram(getindex.(hypers, :l2); label=\"l2\");\nh_s1 = histogram(getindex.(hypers, :s1); label=\"s1\");\nh_s2 = histogram(getindex.(hypers, :s2); label=\"s2\");\nplot(h_l1, h_l2, h_s1, h_s2; layout=(2, 2))","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: )","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"As expected, the sampler converges to the posterior distribution quickly. One could combine this code with that from the previous sections to make predictions under the posterior over the hyperparameters.","category":"page"},{"location":"examples/getting_started/#Conclusion","page":"Getting Started","title":"Conclusion","text":"","category":"section"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"So you now know how to fit GPs using Stheno.jl, and to investigate their posterior distributions. It's also straightforward to utilise Stheno.jl inside probabilistic programming frameworks like Soss.jl and Turing.jl (see examples folder).","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"","category":"page"},{"location":"examples/getting_started/","page":"Getting Started","title":"Getting Started","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Stheno.jl","page":"Home","title":"Stheno.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Stheno.jl is a package for probabilistic programming with Gaussian processes.","category":"page"},{"location":"internals/#Interfaces","page":"Internals","title":"Interfaces","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The primary objects in Stheno are some special subtypes of AbstractGP. There are three primary concrete subtypes of AbstractGP:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP: an atomic Gaussian process given by wrapping an AbstractGP.\nCompositeGP: a Gaussian process composed of other WrappedGPs and CompositeGPs, whose properties are determined recursively from the GPs of which it is composed.\nGaussianProcessProbabilisticProgramme / GPPP: a Gaussian process comprising WrappedGPs and CompositeGPs. This is the primary piece of functionality that users should interact with.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This documentation provides the information necessary to understand the internals of Stheno, and to extend it with custom functionality.","category":"page"},{"location":"internals/#AbstractGP","page":"Internals","title":"AbstractGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"WrappedGP and CompositeGP implement the AbstractGPs.jl API. Please refer to the AbstractGPs.jl docs for more info on this.","category":"page"},{"location":"internals/#diag-methods","page":"Internals","title":"diag methods","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It is crucial for pseudo-point methods, and for the computation of marginal statistics at a reasonable scale, to be able to compute the diagonal of a given covariance matrix in linear time in the size of its inputs. This, in turn, necessitates that the diagonal of a given cross-covariance matrix can also be computed efficiently as the evaluation of covariance matrices often rely on the evaluation of cross-covariance matrices. As such, we have the following functions in addition to the AbstractGPs API implemented for WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Function Brief description\nvar(f, x) diag(cov(f, x))\nvar(f, x, x′) diag(cov(f, x, x′))\nvar(f, f′, x, x′) diag(cov(f, f′, x, x′))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The second and third rows of the table only make sense when length(x) == length(x′), of course.","category":"page"},{"location":"internals/#WrappedGP","page":"Internals","title":"WrappedGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"We can construct a WrappedGP in the following manner:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = wrap(GP(m, k), gpc)\n","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"where m is its MeanFunction, k its Kernel. gpc is a GPC object that handles some book-keeping, and is discussed in more depth below.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The AbstractGP interface is implemented for WrappedGPs in terms of the AbstractGP that they wrap. So if you want a particular behaviour, just make sure that the AbstractGP that you wrap has the functionality you want.","category":"page"},{"location":"internals/#Aside:-Example-Kernel-implementation","page":"Internals","title":"Aside: Example Kernel implementation","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"It's straightforward to implement a new kernel yourself: simply following the instructions in KernelFunctions.jl and it'll work fine with GPs in Stheno.jl.","category":"page"},{"location":"internals/#GPC","page":"Internals","title":"GPC","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"This book-keeping object doesn't matter from a user's perspective but, unfortunately, we currently expose it to users. Fortunately, it's straightforward to work with. Say you wish to construct a collection of processes:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS WON'T WORK\nf = GP(mf, kf)\ng = GP(mg, kg)\nh = f + g\n# THIS WON'T WORK","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"You should write","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS GOOD. PLEASE DO THIS\ngpc = GPC()\nf = wrap(GP(mf, kf), gpc)\ng = wrap(GP(mg, kg), gpc)\nh = f + g\n# THIS IS GOOD. PLEASE DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The rule is simple: when constructing GPs that you plan to make interact later in your program, construct them using the same gpc object. For example, DON'T do the following:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"# THIS IS BAD. PLEASE DON'T DO THIS\nf = wrap(GP(mf, kf), GPC())\ng = wrap(GP(mg, kg), GPC())\nh = f + g\n# THIS IS BAD. PLEASE DON'T DO THIS","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"The mistake here is to construct a separate GPC object for each GP. Hopefully, the code errors, but might yield incorrect results.","category":"page"},{"location":"internals/#CompositeGP","page":"Internals","title":"CompositeGP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"CompositeGPs are constructed as affine transformations of CompositeGPs and GPs. We describe the implemented transformations below.","category":"page"},{"location":"internals/#Addition","page":"Internals","title":"Addition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Given AbstractGPs f and g, we define","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f + g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"to be the CompositeGP sastisfying h(x) = f(x) + g(x) for all x.","category":"page"},{"location":"internals/#Multiplication","page":"Internals","title":"Multiplication","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Multiplication of AbstractGPs is undefined since the product of two Gaussian random variables is not itself Gaussian. However, we can scale an AbstractGP by either a constant or (deterministic) function.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = c * f\nh = sin * f","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"will both work, and produce the result that h(x) = c * f(x) or h(x) = sin(x) * f(x).","category":"page"},{"location":"internals/#Composition","page":"Internals","title":"Composition","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = f ∘ g","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for some deterministic function g is the composition of f with g. i.e. h(x) = f(g(x)).","category":"page"},{"location":"internals/#cross","page":"Internals","title":"cross","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"h = cross([f, g])","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"for WrappedGPs and CompositeGPs f and g. Think of cross as having stacked f and g together, so that you can work with their joint.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"For example, if you wanted to sample jointly from f and g at locations x_f and x_g, you could write something like","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"fg = cross([f, g])\nx_fg = BlockData([x_f, x_g])\nrand(fg(x_fg, 1e-6))","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This particular function isn't part of the user-facing API because it isn't generally needed. It is, however, used extensively in the implementation of the GaussianProcessProbabilisticProgramme.","category":"page"},{"location":"internals/#GPPP","page":"Internals","title":"GPPP","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"The GaussianProcessProbabilisticProgramme is another AbstractGP which enables provides a thin layer of convenience functionality on top of WrappedGPs and CompositeGPs, and is the primary way in which it is intended that users will interact with this package.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP like this","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"f = @gppp let\n    f1 = GP(SEKernel())\n    f2 = GP(Matern52Kernel())\n    f3 = f1 + f2\nend","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"is equivalent to manually constructing a GPPP using WrappedGPs and CompositeGPs:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"gpc = GPC()\nf1 = wrap(GP(SEKernel()), gpc)\nf2 = wrap(GP(SEKernel()), gpc)\nf3 = f1 + f2\nf = Stheno.GPPP((f1=f1, f2=f2, f3=f3), gpc)","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"If you take a look at the gaussian_process_probabilistic_programming.jl source, you'll see that it's essentially just the above, and an implementation of the AbstractGPs API on top of a GPPP.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A GPPP is a single GP on an extended input domain: (Image: )","category":"page"}]
}
